[{"type": "query", "name": "blocks($timestamp: Int!)", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "ebf99c18ddc95fae3390a656e31d0ac169a435e1", "file": "src/pages/about.js", "repo": "ninja-1337_Personal-Blog"}}, {"type": "query", "name": "blocks($timestamp: Int!)", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "ebf99c18ddc95fae3390a656e31d0ac169a435e1", "file": "src/components/ticker.js", "repo": "ninja-1337_Personal-Blog"}}, {"type": "query", "name": "blocks($timestamp: Int!)", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "ebf99c18ddc95fae3390a656e31d0ac169a435e1", "file": "src/components/protocolData.js", "repo": "ninja-1337_Personal-Blog"}}, {"type": "query", "name": "GetPost($id: ID!)", "content": "{\n    article(id: $id){\n        id,\n        title,\n        description,\n        author{\n          name\n        },\n        categories{\n          name\n        },\n        image{\n            url\n        },\n        created_at,\n        slug,\n        content\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/pages/PostDetail.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "query", "name": "GetPosts", "content": "{\n    categories{\n   name,\n   articles{\n       id,\n     title,\n     description,\n     slug,\n     created_at,\n     image{\n         url\n     }\n   }\n }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/CategoryPostList.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "query", "name": "GetPosts", "content": "{\n    articles{\n        id,\n        title,\n        description,\n        author{\n          name\n        },\n        categories{\n          name\n        },\n        image{\n            url\n        },\n        created_at,\n        slug\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/OldPostList.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "query", "name": "GetAds($location: String!)", "content": "{\n    ads(where:{\n      location: $location\n    }){\n          id,\n          url,\n          banner{\n            url\n          }\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/AdsSlider.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "query", "name": "GetPosts", "content": "{\n    articles{\n        id,\n        title,\n        description,\n        author{\n          name\n        },\n        categories{\n          name\n        },\n        image{\n            url\n        },\n        created_at,\n        slug\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/MiddlePostList.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "query", "name": "GetAds($location: String!)", "content": "{\n    ads(where:{\n      location: $location\n    }){\n          id,\n          url,\n          banner{\n              url\n          }\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/Ads.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "query", "name": "GetPosts", "content": "{\n    articles{\n        id,\n        title,\n        description,\n        author{\n          name\n        },\n        categories{\n          name\n        },\n        image{\n            url\n        },\n        created_at,\n        slug\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/PostList.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "mutation", "name": "AddEvent(\n        $description: String!\n        $name: String!\n        $startDate: DateTime!\n        $endDate: DateTime!\n        $isPrivate: Boolean!\n        $eventType: String!\n        $teamID: String!\n        $address: String!\n    )", "content": "{\n        addEvent(\n            description: $description\n            name: $name\n            startDate: $startDate\n            endDate: $endDate\n            isPrivate: $isPrivate\n            eventType: $eventType\n            teamID: $teamID\n            address: $address\n        )\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "EditEvent(\n        $description: String!\n        $name: String!\n        $startDate: DateTime!\n        $endDate: DateTime!\n        $isPrivate: Boolean!\n        $eventType: String!\n        $teamID: String!\n        $eventID: String!\n    )", "content": "{\n        editEvent(\n            description: $description\n            name: $name\n            startDate: $startDate\n            endDate: $endDate\n            isPrivate: false\n            eventType: $eventType\n            teamID: $teamID\n            eventID: $eventID\n        )\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "SetGoing($isGoing: Float!, $eventID: String!)", "content": "{\n        setGoing(isGoing: $isGoing, eventID: $eventID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "getAllTeamsAndEvents", "content": "{\n        getTeamsAsMemberOrCoach {\n            team {\n                name\n                _id\n                events {\n                    _id\n                    startDate\n                    endDate\n                    description\n                    name\n                    eventType\n                    address\n                    usersResponse {\n                        isGoing\n                        user {\n                            name\n                            avatarUrl\n                            _id\n                        }\n                    }\n                }\n            }\n            isCoach\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetEventsOfAllTeams($skip: Int!, $limit: Int!)", "content": "{\n        getEventsOfAllTeams(limit: $limit, skip: $skip) {\n            _id\n            name\n            startDate\n            address\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetEventsOfOneTeam($skip: Int!, $limit: Int!, $teamID: String!)", "content": "{\n        getEventsOfOneTeam(limit: $limit, skip: $skip, teamID: $teamID) {\n            _id\n            name\n            startDate\n            address\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "getTeamAndEvents($teamID: String!)", "content": "{\n        getTeam(teamID: $teamID) {\n            team {\n                name\n                _id\n                events {\n                    _id\n                    startDate\n                    endDate\n                    description\n                    name\n                    eventType\n                }\n            }\n            isCoach\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AddPost($imgUrls: [String!], $isPrivate: Boolean, $content: String!, $teamID: String!)", "content": "{\n        addPost(content: $content, imgUrls: $imgUrls, isPrivate: $isPrivate, teamID: $teamID) {\n            content\n            _id\n            isPined\n            imgUrls\n            numberOfLikes\n            lastModifyDate\n            user {\n                name\n                avatarUrl\n            }\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "addPostComment($teamID: String!, $content: String!, $postID: String!)", "content": "{\n        addPostComment(content: $content, teamID: $teamID, postID: $postID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "DeletePost($postID: String!, $teamID: String!)", "content": "{\n        deletePost(postID: $postID, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "EditPost($postID: String!, $content: String!, $teamID: String!)", "content": "{\n        editPost(content: $content, postID: $postID, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "LikePost($postID: String!)", "content": "{\n        likePost(postID: $postID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "PinPost($isPined: Boolean!, $postID: String!, $teamID: String!)", "content": "{\n        pinPost(isPined: $isPined, postID: $postID, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "SetPostPrivate($isPrivate: Boolean!, $postID: String!, $teamID: String!)", "content": "{\n        setPostPrivate(isPrivate: $isPrivate, postID: $postID, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetComments($teamID: String!, $postID: String!)", "content": "{\n        getComments(teamID: $teamID, postID: $postID) {\n            content\n            user {\n                name\n                avatarUrl\n            }\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetPosts($teamID: String!, $limit: Int!, $skip: Int!)", "content": "{\n        getPosts(teamID: $teamID, limit: $limit, skip: $skip) {\n            content\n            _id\n            isPined\n            imgUrls\n            numberOfLikes\n            lastModifyDate\n            user {\n                name\n                avatarUrl\n            }\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "userLikedPost($postID: String!)", "content": "{\n        userLikedPost(postID: $postID) {\n            isLiked\n            likedNum\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AddCoach($teamID: String!, $userID: String!)", "content": "{\n        addCoach(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AddCoaches($teamID: String!, $userIDs: [String!]!)", "content": "{\n        addCoaches(teamID: $teamID, userIDs: $userIDs)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AddMember($teamID: String!, $userID: String!)", "content": "{\n        addMember(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AddMembers($teamID: String!, $userIDs: [String!]!)", "content": "{\n        addMembers(teamID: $teamID, userIDs: $userIDs)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UploadAvatar($url: String!)", "content": "{\n        uploadAvatar(avatarUrl: $url)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "ApplyTeam($teamID: String!)", "content": "{\n        applyTeam(teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "NewTeam($sport: String!, $name: String!)", "content": "{\n        newTeam(sport: $sport, name: $name)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "QuitTeamAsCoach($teamID: String!)", "content": "{\n        quitTeamAsCoach(teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "QuitTeamAsMember($teamID: String!)", "content": "{\n        quitTeamAsMember(teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "RejectMembers($teamID: String!, $userIDs: [String!]!)", "content": "{\n        rejectMembers(teamID: $teamID, userIDs: $userIDs)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "RemoveCoach($teamID: String!, $userID: String!)", "content": "{\n        removeCoach(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "RemoveMember($teamID: String!, $userID: String!)", "content": "{\n        removeMember(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "RemoveMembers($teamID: String!, $userIDs: [String!]!)", "content": "{\n        removeMembers(teamID: $teamID, userIDs: $userIDs)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UpdateDescription($teamID: String!, $description: String!)", "content": "{\n        updateDescription(teamID: $teamID, description: $description)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UpdateTeam($sport: String!, $teamID: String!, $name: String!, $description: String!)", "content": "{\n        updateTeam(sport: $sport, teamID: $teamID, name: $name, description: $description)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetTeamListAsCoach", "content": "{\n        getTeamsAsCoach {\n            name\n            _id\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetTeamListAsMember", "content": "{\n        getTeamsAsMember {\n            name\n            _id\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetCoaches($teamID: String!)", "content": "{\n        getCoaches(teamID: $teamID) {\n            users {\n                name\n                _id\n                sport\n                phone\n                email\n                address\n                avatarUrl\n            }\n            isCoach\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetMembers($teamID: String!)", "content": "{\n        getMembers(teamID: $teamID) {\n            users {\n                name\n                _id\n                sport\n                phone\n                email\n                address\n                avatarUrl\n            }\n            isCoach\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetMyTeamIDs", "content": "{\n        getMyTeams {\n            _id\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetPendings($teamID: String!)", "content": "{\n        getPendings(teamID: $teamID) {\n            name\n            _id\n            sport\n            phone\n            email\n            address\n            avatarUrl\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetSearchTeams", "content": "{\n        getTeams {\n            team {\n                name\n                _id\n                sport\n                imgUrl\n                numberMembers\n                description\n            }\n            isMember\n            isCoach\n            isPending\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetTeamEditPage($teamID: String!)", "content": "{\n        getTeam(teamID: $teamID) {\n            team {\n                name\n                imgUrl\n                description\n                sport\n            }\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetTeamIDs", "content": "{\n        getTeams {\n            team {\n                _id\n            }\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetMyTeamList", "content": "{\n        getMyTeams {\n            name\n            _id\n            sport\n            imgUrl\n            numberMembers\n            description\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetTeamListAsMemberOrCoach", "content": "{\n        getTeamsAsMemberOrCoach {\n            team {\n                _id\n                name\n            }\n            isCoach\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetTeamPageFirstFetch($teamID: String!, $limit: Int!)", "content": "{\n        getTeam(teamID: $teamID) {\n            isCoach\n        }\n        getEventsOfOneTeam(limit: $limit, skip: 0, teamID: $teamID) {\n            _id\n            name\n            startDate\n            address\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetTeamPageStatic($teamID: String!)", "content": "{\n        getTeam(teamID: $teamID) {\n            team {\n                name\n                _id\n                imgUrl\n                description\n            }\n        }\n        getPosts(teamID: $teamID, limit: 10, skip: 0) {\n            content\n            _id\n            isPined\n            imgUrls\n            numberOfLikes\n            lastModifyDate\n            user {\n                name\n                avatarUrl\n            }\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetTeams", "content": "{\n        getTeams {\n            team {\n                name\n                _id\n                sport\n                imgUrl\n                numberMembers\n                description\n            }\n            isMember\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "EditProfile(\n        $firstName: String!\n        $lastName: String!\n        $email: String!\n        $address: String!\n        $phone: String!\n        $introduction: String!\n        $sport: String!\n    )", "content": "{\n        editProfile(\n            input: {\n                firstName: $firstName\n                lastName: $lastName\n                email: $email\n                address: $address\n                phone: $phone\n                introduction: $introduction\n                sport: $sport\n            }\n        )\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "Login($email: String!, $password: String!)", "content": "{\n        login(email: $email, password: $password) {\n            user {\n                _id\n                name\n                avatarUrl\n                bannerUrls\n                introduction\n            }\n            accessToken\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "Logout", "content": "{\n        logout\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "Register($email: String!, $password: String!, $firstName: String!, $lastName: String!)", "content": "{\n        register(input: { email: $email, password: $password, firstName: $firstName, lastName: $lastName })\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "uploadTeamImage($url: String!, $teamID: String!)", "content": "{\n        uploadTeamImage(imgUrl: $url, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UploadBanner($url: String!)", "content": "{\n        uploadBanner(bannerUrl: $url)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UploadIntro($intro: String!)", "content": "{\n        uploadIntro(intro: $intro)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "getProfileDetail", "content": "{\n        me {\n            _id\n            firstName\n            lastName\n            email\n            address\n            phone\n            introduction\n            sport\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "Me", "content": "{\n        me {\n            _id\n            name\n            avatarUrl\n            bannerUrls\n            introduction\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "CLIENT($clientId: ID!)", "content": "{\n    client(id: $clientId) {\n      id\n      name\n      email\n    }\n  }", "metadata": {"commit_hash": "182740b7e289d56a59af3397d0a28153e8f3f2ab", "file": "clientServerExampleWithGraphQL/packages/web/src/components/ClientEdit.js", "repo": "AlbertoVictorRebello_hiringCoders2022"}}, {"type": "mutation", "name": "UPDATE_CLIENT($id: ID!, $name: String!, $email: String!)", "content": "{\n    updateClient(input: { id: $id, name: $name, email: $email }) {\n      id\n      name\n      email\n    }\n  }", "metadata": {"commit_hash": "182740b7e289d56a59af3397d0a28153e8f3f2ab", "file": "clientServerExampleWithGraphQL/packages/web/src/components/ClientEdit.js", "repo": "AlbertoVictorRebello_hiringCoders2022"}}, {"type": "mutation", "name": "", "content": "{\n      appPurchaseOneTimeCreate(\n        name: \"test\"\n        price: { amount: 10, currencyCode: USD }\n        returnUrl: \"${url}\"\n        test: true\n      ) {\n        userErrors {\n          field\n          message\n        }\n        confirmationUrl\n        appPurchaseOneTime {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "e18e64238d26646acbd5f765ce05412299104947", "file": "server/handlers/mutations/get-one-time-url.js", "repo": "FunPinPin-support_app-template-node"}}, {"type": "mutation", "name": "", "content": "{\n      appSubscriptionCreate(\n          name: \"Super Duper Plan\"\n          returnUrl: \"${url}\"\n          test: true\n          lineItems: [\n          {\n            plan: {\n              appUsagePricingDetails: {\n                  cappedAmount: { amount: 10, currencyCode: USD }\n                  terms: \"$1 for 1000 emails\"\n              }\n            }\n          }\n          {\n            plan: {\n              appRecurringPricingDetails: {\n                  price: { amount: 10, currencyCode: USD }\n              }\n            }\n          }\n          ]\n        ) {\n            userErrors {\n              field\n              message\n            }\n            confirmationUrl\n            appSubscription {\n              id\n            }\n        }\n    }", "metadata": {"commit_hash": "e18e64238d26646acbd5f765ce05412299104947", "file": "server/handlers/mutations/get-subscription-url.js", "repo": "FunPinPin-support_app-template-node"}}, {"type": "mutation", "name": "changeName($newName: String!)", "content": "{\n  changeName(newName: $newName)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "changePassword($oldPassword: String!, $newPassword: String!)", "content": "{\n  changePassword(oldPassword: $oldPassword, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "clearProfilePicture", "content": "{\n  clearProfilePicture\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "linkTelegram($id: String!, $first_name: String, $last_name: String, $username: String, $photo_url: String, $auth_date: String!, $hash: String!)", "content": "{\n  linkTelegram(\n    id: $id\n    first_name: $first_name\n    last_name: $last_name\n    username: $username\n    photo_url: $photo_url\n    auth_date: $auth_date\n    hash: $hash\n  )\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n  login(username: $username, password: $password)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "logout", "content": "{\n  logout\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "query", "name": "me", "content": "{\n  me {\n    name\n    username\n    profilePicture\n    darkMode\n  }\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "query", "name": "Post($id: ID!)", "content": "{\n  node(id: $id) {\n    id\n    ... on Post {\n      title\n      language\n      createdAt\n      tags {\n        id\n        name\n      }\n      creator {\n        id\n        name\n        username\n        profilePicture\n      }\n      items {\n        edges {\n          node {\n            id\n            type\n            createdAt\n            creator {\n              id\n              name\n              username\n              profilePicture\n            }\n            description\n            caption\n            compressedPath\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "query", "name": "Posts", "content": "{\n  posts(first: 40) {\n    edges {\n      node {\n        id\n        title\n        creator {\n          profilePicture\n        }\n        items(first: 1) {\n          totalCount\n          edges {\n            node {\n              id\n              type\n              thumbnailPath\n              relativeHeight\n            }\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "revokeSession($id: ID!)", "content": "{\n  revokeSession(id: $id)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "setDarkMode($enabled: Boolean!)", "content": "{\n  setDarkMode(enabled: $enabled)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "query", "name": "tagSearch($input: String)", "content": "{\n  tags(byName: $input) {\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "unlinkTelegram", "content": "{\n  unlinkTelegram\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "($projectData: String!)", "content": "{\n    addNewProject(projectData: $projectData)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "app/src/gql/AddWebProjectMutation.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($projectData: String!, $secureKey: String!, $secureUser: String!)", "content": "{\n    saveProject(\n      projectData: $projectData\n      secureKey: $secureKey\n      secureUser: $secureUser\n    )\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "app/src/gql/SaveProject.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "query", "name": "($secureKey: String!, $secureUser: String!)", "content": "{\n    getAllProjects(secureKey: $secureKey, secureUser: $secureUser) {\n      id\n      name\n      project\n    }\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "app/src/gql/GetAllProjectsQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "query", "name": "($searchTerm: String!)", "content": "{\n    searchMaterials(searchTerm: $searchTerm) {\n      id\n      user {\n        userName\n        firstName\n        lastName\n        type\n        profilePicture {\n          width\n          height\n          preview\n          url\n        }\n      }\n      data {\n        image {\n          width\n          height\n          preview\n          url\n        }\n        description\n      }\n      tags\n      comments {\n        id\n      }\n      likes\n      liked\n    }\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/SearchQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "query", "name": "($searchTerm: String!)", "content": "{\n    searchUsers(searchTerm: $searchTerm) {\n      id\n      userName\n      firstName\n      lastName\n      isFollowing\n      type\n    }\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/SearchQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "query", "name": "($searchTerm: String!)", "content": "{\n    searchArtwork(searchTerm: $searchTerm) {\n      id\n      user {\n        userName\n        firstName\n        lastName\n        type\n        profilePicture {\n          width\n          height\n          preview\n          url\n        }\n      }\n      data {\n        image {\n          width\n          height\n          preview\n          url\n        }\n        description\n      }\n      tags\n      comments {\n        id\n        user {\n          userName\n          firstName\n          lastName\n          type\n          profilePicture {\n            width\n            height\n            preview\n            url\n          }\n        }\n        comment\n      }\n      likes\n      liked\n    }\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/SearchQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "query", "name": "($searchTerm: String!)", "content": "{\n    searchProjects(searchTerm: $searchTerm) {\n      id\n      user {\n        userName\n      }\n      projectName\n    }\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/SearchQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($key: String!)", "content": "{\n    removeSecureKey(key: $key)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/SecureKeysQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($key: String!)", "content": "{\n    removeApiKey(key: $key)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/SecureKeysQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "query", "name": "($userName: String!)", "content": "{\n    user(userName: $userName) {\n      firstName\n      lastName\n      userName\n      profilePicture {\n        width\n        height\n        preview\n        url\n      }\n      type\n      artworkPosts {\n        id\n        user {\n          userName\n          firstName\n          lastName\n          type\n          profilePicture {\n            width\n            height\n            preview\n            url\n          }\n        }\n        data {\n          image {\n            width\n            height\n            preview\n            url\n          }\n          description\n        }\n        tags\n        comments {\n          id\n          user {\n            userName\n            firstName\n            lastName\n            type\n            profilePicture {\n              width\n              height\n              preview\n              url\n            }\n          }\n          comment\n        }\n        likes\n        liked\n      }\n      materialPosts {\n        id\n        user {\n          userName\n          firstName\n          lastName\n          type\n          profilePicture {\n            width\n            height\n            preview\n            url\n          }\n        }\n        data {\n          image {\n            width\n            height\n            preview\n            url\n          }\n          description\n        }\n        tags\n        comments {\n          id\n        }\n        likes\n        liked\n      }\n      projects {\n        id\n        user {\n          userName\n        }\n        projectName\n      }\n      isFollowing\n      followers {\n        id\n        firstName\n        lastName\n        userName\n        profilePicture {\n          width\n          height\n          preview\n          url\n        }\n        type\n      }\n      following {\n        id\n        firstName\n        lastName\n        userName\n        profilePicture {\n          width\n          height\n          preview\n          url\n        }\n        type\n      }\n    }\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/UserQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($postId: String!)", "content": "{\n    addLike(postId: $postId)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/AddLikeMutation.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($postId: String!, $comment: String!)", "content": "{\n    addComment(postId: $postId, comment: $comment) {\n      id\n      user {\n        id\n        userName\n        lastName\n        firstName\n        type\n        profilePicture {\n          width\n          height\n          preview\n          url\n        }\n      }\n      comment\n    }\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/AddLikeMutation.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($userId: String!)", "content": "{\n    followMutation(userId: $userId)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/FollowMutation.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($key: String!)", "content": "{\n    addSecureKey(key: $key)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/AddNewSecureKey.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($key: String!)", "content": "{\n    addApiKey(key: $key)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/AddNewSecureKey.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "query", "name": "project($id: ID!)", "content": "{\n    project(id: $id) {\n      id\n      name\n      description\n      createdAt\n      website\n      twitter\n      github\n      image\n      avatar\n      totalVotes\n      isRepresentative\n      delegates {\n        id\n      }\n      currentChallenge {\n        id\n        endTime\n        owner {\n          id\n          name\n        }\n        description\n        resolved\n        keepVotes\n        removeVotes\n        votes {\n          id\n        }\n      }\n      owner {\n        id\n      }\n      categories {\n        id\n        name\n        imageUrl\n        parentCategory {\n          id\n          name\n        }\n        subcategories {\n          id\n          name\n          imageUrl\n          parentCategory {\n            id\n            name\n          }\n          subcategories {\n            id\n            name\n            imageUrl\n            parentCategory {\n              id\n              name\n              parentCategory {\n                id\n                name\n              }\n            }\n            subcategories {\n              id\n              name\n              imageUrl\n              parentCategory {\n                id\n                name\n                parentCategory {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "everestUserProjects($id: ID!)", "content": "{\n    user(id: $id) {\n      id\n      projects {\n        id\n        name\n        avatar\n      }\n      delegatorProjects {\n        id\n        name\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "categories(\n    $parentCategory: String\n    $orderBy: Category_orderBy\n    $orderDirection: OrderDirection\n  )", "content": "{\n    categories(\n      orderBy: $orderBy\n      orderDirection: $orderDirection\n      where: { parentCategory: $parentCategory }\n    ) {\n      id\n      name\n      description\n      imageUrl\n      projectCount\n      subcategories {\n        id\n        projects {\n          id\n        }\n      }\n      parentCategory {\n        id\n        name\n      }\n      projects {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "categories(\n    $orderBy: Category_orderBy\n    $orderDirection: OrderDirection\n  )", "content": "{\n    categories(\n      orderBy: $orderBy\n      orderDirection: $orderDirection\n      where: { parentCategory: null }\n    ) {\n      id\n      name\n      description\n      imageUrl\n      projectCount\n      parentCategory {\n        id\n        name\n      }\n      subcategories {\n        id\n        name\n        imageUrl\n        parentCategory {\n          id\n          name\n        }\n        subcategories {\n          id\n          name\n          imageUrl\n          parentCategory {\n            id\n            name\n            parentCategory {\n              id\n              name\n            }\n          }\n          subcategories {\n            id\n            name\n            imageUrl\n            parentCategory {\n              id\n              name\n              parentCategory {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "category(\n    $id: ID!\n    $orderBy: Category_orderBy\n    $orderDirection: OrderDirection\n  )", "content": "{\n    category(id: $id) {\n      id\n      name\n      description\n      imageUrl\n      projectCount\n      subcategories(orderBy: $orderBy, orderDirection: $orderDirection) {\n        id\n        name\n        description\n        imageUrl\n        projectCount\n        projects {\n          id\n          name\n          description\n          avatar\n          createdAt\n          currentChallenge {\n            id\n          }\n          categories {\n            id\n            name\n          }\n        }\n      }\n      parentCategory {\n        id\n        name\n        parentCategory {\n          id\n          name\n        }\n      }\n      projects {\n        id\n        name\n        image\n        description\n        avatar\n        createdAt\n        isRepresentative\n        currentChallenge {\n          id\n        }\n        categories {\n          id\n          name\n          description\n          parentCategory {\n            id\n            name\n          }\n          subcategories {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "projects(\n    $orderBy: Project_orderBy\n    $orderDirection: OrderDirection\n    $where: Project_filter\n    $first: Int\n    $skip: Int\n  )", "content": "{\n    projects(\n      orderBy: $orderBy\n      orderDirection: $orderDirection\n      where: $where\n      first: $first\n      skip: $skip\n    ) {\n      id\n      name\n      image\n      description\n      avatar\n      createdAt\n      isRepresentative\n      currentChallenge {\n        id\n      }\n      categories {\n        id\n        name\n        description\n        parentCategory {\n          id\n          name\n        }\n        subcategories {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "projectSearch($text: String)", "content": "{\n    projectSearch(text: $text) {\n      id\n      ipfsHash\n      name\n      avatar\n      description\n      categories {\n        id\n        name\n        parentCategory {\n          id\n          name\n        }\n        subcategories {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "profile(\n    $id: ID!\n    $orderBy: Project_orderBy\n    $orderDirection: OrderDirection\n    $where: Project_filter\n  )", "content": "{\n    user(id: $id) {\n      id\n      projects(\n        orderBy: $orderBy\n        orderDirection: $orderDirection\n        where: $where\n      ) {\n        id\n        name\n        description\n        avatar\n        image\n        website\n        github\n        twitter\n        isRepresentative\n        createdAt\n        delegates {\n          id\n        }\n        currentChallenge {\n          id\n        }\n        categories {\n          id\n          name\n          imageUrl\n          parentCategory {\n            id\n            name\n          }\n          subcategories {\n            id\n            name\n            imageUrl\n            parentCategory {\n              id\n              name\n            }\n            subcategories {\n              id\n              name\n              imageUrl\n              parentCategory {\n                id\n                name\n                parentCategory {\n                  id\n                  name\n                }\n              }\n              subcategories {\n                id\n                name\n                imageUrl\n                parentCategory {\n                  id\n                  name\n                  parentCategory {\n                    id\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      delegatorProjects {\n        id\n        name\n        description\n        createdAt\n        avatar\n        currentChallenge {\n          id\n        }\n        categories {\n          id\n          name\n          parentCategory {\n            id\n            name\n          }\n          subcategories {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "challenge($id: ID!)", "content": "{\n    id\n    description\n    votes {\n      id\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "challenges($projects: [ID!], $endTime: Int)", "content": "{\n    challenges(where: { owner_in: $projects, endTime_lt: $endTime }) {\n      id\n      project {\n        id\n        name\n        description\n        avatar\n        image\n        website\n        github\n        twitter\n        isRepresentative\n        createdAt\n        currentChallenge {\n          id\n        }\n        categories {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "everests", "content": "{\n    everests {\n      id\n      projectCount\n      categoriesCount\n      reserveBankBalance\n      claimedProjects\n      challengedProjects\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "removeProject($projectId: ID!)", "content": "{\n    removeProject(projectId: $projectId) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "addProject(\n    $name: String!\n    $description: String!\n    $avatar: String\n    $image: String\n    $website: String\n    $github: String\n    $twitter: String\n    $isRepresentative: Boolean\n    $categories: any\n  )", "content": "{\n    addProject(\n      name: $name\n      description: $description\n      avatar: $avatar\n      image: $image\n      website: $website\n      github: $github\n      twitter: $twitter\n      isRepresentative: $isRepresentative\n      categories: $categories\n    ) @client {\n      id\n      name\n      description\n      avatar\n      image\n      website\n      github\n      twitter\n      isRepresentative\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "editProject(\n    $projectId: String!\n    $name: String!\n    $description: String!\n    $avatar: String\n    $image: String\n    $website: String\n    $github: String\n    $twitter: String\n    $isRepresentative: Boolean\n    $categories: any\n  )", "content": "{\n    editProject(\n      projectId: $projectId\n      name: $name\n      description: $description\n      avatar: $avatar\n      image: $image\n      website: $website\n      github: $github\n      twitter: $twitter\n      isRepresentative: $isRepresentative\n      categories: $categories\n    ) @client {\n      id\n      name\n      description\n      avatar\n      image\n      categories\n      currentChallenge {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "transferOwnership($projectId: String!, $newOwnerAddress: String!)", "content": "{\n    transferOwnership(projectId: $projectId, newOwnerAddress: $newOwnerAddress)\n      @client {\n      id\n      name\n      description\n      avatar\n      image\n      website\n      github\n      twitter\n      isRepresentative\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "delegateOwnership($projectId: String!, $delegateAddress: String!)", "content": "{\n    delegateOwnership(projectId: $projectId, delegateAddress: $delegateAddress)\n      @client {\n      id\n      name\n      description\n      avatar\n      image\n      website\n      github\n      twitter\n      isRepresentative\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "challengeProject(\n    $challengingProjectAddress: String!\n    $challengedProjectAddress: String!\n    $description: String!\n  )", "content": "{\n    challengeProject(\n      challengingProjectAddress: $challengingProjectAddress\n      challengedProjectAddress: $challengedProjectAddress\n      details: { description: $description }\n    ) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "resolveChallenge($challengeId: ID!)", "content": "{\n    resolveChallenge(challengeId: $challengeId) @client {\n      id\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "daiBalance($account: ID!)", "content": "{\n    daiBalance(account: $account) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "voteChallenge(\n    $challengeId: ID!\n    $voteChoice: [String]\n    $voters: [String]\n  )", "content": "{\n    voteChallenge(\n      challengeId: $challengeId\n      voteChoice: $voteChoice\n      voters: $voters\n    ) @client {\n      id\n      description\n      votes {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "uploadImage($image: File!)", "content": "{\n    uploadImage(image: $image) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/components/UploadImage/index.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "everestProject", "content": "{\n      project(id: \"${projectId}\", block: { hash: \"${hash}\" }) {\n        id\n        name\n        description\n        createdAt\n        website\n        twitter\n        github\n        image\n        avatar\n        isRepresentative\n        totalVotes\n        owner {\n          id\n        }\n        delegates {\n          id\n        }\n        currentChallenge {\n          id\n        }\n        categories {\n          id\n          description\n        }\n      }\n    }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/utils.ts", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "everestChallenge", "content": "{\n      challenge(id: \"${challengeId}\", block: { hash: \"${hash}\" }) {\n        id\n        description\n        votes {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/utils.ts", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "uploadImage($image: File!)", "content": "{\n            uploadImage(image: $image) @client\n          }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/__tests__/index.test.ts", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "uploadImage($image: File!)", "content": "{\n            uploadImage(image: $image) @client\n          }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/__tests__/index.test.ts", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "addProject(\n            $name: String\n            $description: String\n            $avatar: String\n            $image: String\n            $website: String\n            $github: String\n            $twitter: String\n            $isRepresentative: Boolean\n            $categories: [Category]\n          )", "content": "{\n            addProject(\n              name: $name\n              description: $description\n              avatar: $avatar\n              image: $image\n              website: $website\n              github: $github\n              twitter: $twitter\n              isRepresentative: $isRepresentative\n              categories: $categories\n            ) @client\n          }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/__tests__/index.test.ts", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "addTask($name: String!)", "content": "{\n    addTask(name: $name) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}}, {"type": "query", "name": "", "content": "{\n    getAllTasks{\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}}, {"type": "query", "name": "", "content": "{\n    messages {\n    edges {\n      id\n      text\n      createdAt\n      user {\n        email\n        username\n        role\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}}, {"type": "mutation", "name": "removeTask($id: String!)", "content": "{\n    removeTask(id: $id) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}}, {"type": "mutation", "name": "updateTask($id: String!, $name: String!)", "content": "{\n    updateTask(id: $id, name: $name) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}}, {"type": "query", "name": "allPosts($first: Int!, $skip: Int!)", "content": "{\n  allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n    id\n    title\n    votes\n    url\n    createdAt\n  },\n  _allPostsMeta {\n    count\n  }\n}", "metadata": {"commit_hash": "2cb6104a6382ad53e1ae5e927e022810346bd737", "file": "modules/app/actions.js", "repo": "zachariahtimothy_with-cerebral-and-apollo-auth"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n  updatePost(id: $id, votes: $votes) {\n    id\n    __typename\n    votes\n  }\n}", "metadata": {"commit_hash": "2cb6104a6382ad53e1ae5e927e022810346bd737", "file": "modules/app/actions.js", "repo": "zachariahtimothy_with-cerebral-and-apollo-auth"}}, {"type": "query", "name": "GetHomeStats", "content": "{\n    stats {\n      lastUpdated\n      runs\n      games\n      version\n    }\n    seed\n  }", "metadata": {"commit_hash": "69c789098b97c62f32df2f41440eb553dd01b9b8", "file": "src/pages/index.tsx", "repo": "jeremyBanks_speedruns"}}, {"type": "query", "name": "GetGameIndex", "content": "{\n    games {\n      id\n      slug\n      name\n    }\n  }", "metadata": {"commit_hash": "69c789098b97c62f32df2f41440eb553dd01b9b8", "file": "src/pages/index.tsx", "repo": "jeremyBanks_speedruns"}}, {"type": "query", "name": "GetNodePage($id: ID!)", "content": "{\n    node: node(id: $id) {\n      __typename\n      id\n      ... on Game {\n        srcId\n        slug\n        name\n        slug\n      }\n      ... on User {\n        srcId\n        slug\n        slug\n      }\n      ... on Level {\n        srcId\n        slug\n        name\n        slug\n      }\n      ... on Category {\n        srcId\n        slug\n        name\n        slug\n      }\n      ... on Run {\n        srcId\n        date\n        category {\n          id\n          srcId\n        }\n        level {\n          id\n          srcId\n        }\n        timeMs\n      }\n    }\n  }", "metadata": {"commit_hash": "69c789098b97c62f32df2f41440eb553dd01b9b8", "file": "src/pages/node/[node].tsx", "repo": "jeremyBanks_speedruns"}}, {"type": "query", "name": "GetGamePagePreview($slug: String!)", "content": "{\n    game(slug: $slug) {\n      id\n      slug\n      name\n    }\n  }", "metadata": {"commit_hash": "69c789098b97c62f32df2f41440eb553dd01b9b8", "file": "src/pages/[game]/index.tsx", "repo": "jeremyBanks_speedruns"}}, {"type": "query", "name": "GetRunPage($gameSrcSlug: String!, $runSrcId: ID!)", "content": "{\n    game(slug: $gameSrcSlug) {\n      id\n      srcId\n      slug\n      slug\n      name\n    }\n\n    run(srcId: $runSrcId) {\n      id\n      srcId\n      timeMs\n      videos\n      category {\n        id\n        srcId\n        name\n      }\n      level {\n        id\n        srcId\n        slug\n        name\n      }\n      date\n      players {\n        name\n        isGuest\n        user {\n          id\n          srcId\n          slug\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "69c789098b97c62f32df2f41440eb553dd01b9b8", "file": "src/pages/[game]/run/[runSrcId].tsx", "repo": "jeremyBanks_speedruns"}}, {"type": "query", "name": "getBikeList($page: Int, $bike_id: String, $vehicle_type: String)", "content": "{\n    bikeList(page: $page, bike_id: $bike_id, vehicle_type: $vehicle_type) {\n      last_updated\n      ttl\n      data {\n        bikes {\n          bike_id\n          lat\n          lon\n          is_reserved\n          is_disabled\n          vehicle_type\n        }\n        bike {\n          bike_id\n          lat\n          lon\n          is_reserved\n          is_disabled\n          vehicle_type\n        }\n      }\n      total_count\n      total_booked\n      nextPage\n    }\n  }", "metadata": {"commit_hash": "d15ccdc10e75dbf6861449824dd78bb83d31e4ef", "file": "client/src/pages/BikeListPage/BikeListPage.query.ts", "repo": "metin1_bikersCamp"}}, {"type": "query", "name": "currentUser", "content": "{\n    currentUser {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "d15ccdc10e75dbf6861449824dd78bb83d31e4ef", "file": "client/src/hooks/useCurrentUserQuery.tsx", "repo": "metin1_bikersCamp"}}, {"type": "mutation", "name": "login($userName: String!, $password: String!)", "content": "{\n    login(userName: $userName, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "d15ccdc10e75dbf6861449824dd78bb83d31e4ef", "file": "client/src/apollo/mutations/login.tsx", "repo": "metin1_bikersCamp"}}, {"type": "query", "name": "GetRepo($orgName: String!, $repoName: String!)", "content": "{\n\t\trepository(owner: $orgName, name: $repoName) {\n\t\t\tid\n\t\t\tname\n\t\t\tdescription\n\t\t\tviewerHasStarred\n\t\t\tstargazers {\n\t\t\t\ttotalCount\n\t\t\t}\n\t\t\tissues(last: 5) {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\turl\n\t\t\t\t\t\tpublishedAt\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "c48d3ae3258de432ad57c54808b16737c5523f1c", "file": "src/components/RepoSearch.tsx", "repo": "hesbon-osoro_repository-search"}}, {"type": "mutation", "name": "($repoId: ID!)", "content": "{\n\t\taddStar(input: { starrableId: $repoId }) {\n\t\t\tstarrable {\n\t\t\t\tstargazers {\n\t\t\t\t\ttotalCount\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "c48d3ae3258de432ad57c54808b16737c5523f1c", "file": "src/components/RepoSearch.tsx", "repo": "hesbon-osoro_repository-search"}}, {"type": "query", "name": "fetch_todos", "content": "{\n    todo {\n      id\n      task\n      completed\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_todo ($objects: [todo_insert_input!]!)", "content": "{\n    insert_todo(objects: $objects) {\n      affected_rows\n      returning {\n        id\n        task\n        completed\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "update_todo ($todoId: Int, $set: todo_set_input!)", "content": "{\n    update_todo(where: {id: {_eq: $todoId}} _set: $set) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "delete_todo ($todoId: Int)", "content": "{\n    delete_todo(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($name:String)", "content": "{\n              insert_user (\n                objects: {\n                  name: $name\n                }\n              ) {\n                returning {\n                  id\n                }\n              }\n            }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/utils.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($name:String, $id: Int!)", "content": "{\n              insert_user (\n                objects: {\n                  name: $name\n                  id: $id\n                }\n              ) {\n                returning {\n                  id\n                }\n              }\n            }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/utils.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($user_id: Int, $board_id: uuid!)", "content": "{\n      update_board (\n        _set: {\n          user_2_id: $user_id\n        },\n        where: {\n          _and: {\n            id: {\n              _eq: $board_id\n            },\n            user_2_id: {\n              _is_null: true\n            },\n            user_1_id: {\n              _neq: $user_id\n            }\n          }\n        }\n      ) {\n        affected_rows\n        returning {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/utils.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "subscription", "name": "", "content": "{\n    board (\n      where: {\n        _and: {\n          winner: {\n            _is_null: true\n          },\n          user_2_id: {\n            _is_null: true\n          }\n        }\n      }\n      order_by: {\n        created_at: asc\n      }\n    ) {\n      id\n      user1 {\n        id\n        name\n      }\n      user_2_id\n      created_at\n      winner\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/components/Boards/BoardsWrapper.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($user_id: Int)", "content": "{\n    insert_board (\n      objects: [{\n        user_1_id: $user_id,\n        turn: \"x\",\n      }]\n    ) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/components/Boards/BoardsList.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "(\n    $board_id: String!,\n    $position: Int!,\n    $user_id: Int!\n  )", "content": "{\n    make_move (\n      board_id: $board_id,\n      position: $position,\n      user_id: $user_id\n    ) {\n      success\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/components/Game/TicTacToe.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "subscription", "name": "($board_id: uuid!)", "content": "{\n    board: board_by_pk (id: $board_id) {\n      id\n      moves (order_by: { id: desc}) {\n        id\n        position\n        user {\n          id\n          name\n        }\n        user_id\n      }\n      user1 {\n        id\n        name\n      }\n      user2 {\n        id\n        name\n      }\n      turn\n      winner\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/components/Game/Play.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "", "content": "{\n    author {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/gatsby-postgres-graphql/src/components/AuthorList.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_author($name: String!)", "content": "{\n    insert_author(objects: { name: $name }) {\n      returning {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/gatsby-postgres-graphql/src/components/AddAuthor.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "", "content": "{\n    author {\n    \tid\n    \tname\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-static-graphql/src/graphql/queries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "($author: Int!)", "content": "{\n    article(where: {author_id: {_eq: $author}}) {\n    \tid\n    \ttitle\n    \tcontent\n    \tcreated_at\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-static-graphql/src/graphql/queries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($username: String!)", "content": "{\n    insert_user (\n      objects: [{\n        username: $username\n      }]\n    ) {\n      returning {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/LandingPage.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "($last_received_id: Int, $last_received_ts: timestamptz)", "content": "{\n    message (\n      order_by: {timestamp:asc}\n      where: {\n        _and: {\n          id: {\n            _neq: $last_received_id\n          },\n          timestamp: {\n            _gte: $last_received_ts\n          }\n        }\n\n      }\n    ) {\n      id\n      text\n      username\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/RenderMessages.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "subscription", "name": "($selfId: Int )", "content": "{\n    user_typing (\n      where: {\n        id: {\n          _neq: $selfId\n        }\n      },\n      limit: 1\n      order_by: {last_typed:desc}\n    ){\n      last_typed\n      username\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/TypingIndicator.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_message ($message: message_insert_input! )", "content": "{\n    insert_message (\n      objects: [$message]\n    ) {\n      returning {\n        id\n        timestamp\n        text\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Textbox.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($userId: Int)", "content": "{\n    update_user (\n      _set: {\n        last_typed: \"now()\"\n      }\n      where: {\n        id: {\n          _eq: $userId\n        }\n      }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Textbox.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "subscription", "name": "", "content": "{\n    message ( order_by: {id:desc} limit: 1) {\n      id\n      username\n      text\n      timestamp\n    } }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Chat.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($userId:Int!)", "content": "{\n    update_user (\n      _set: {\n        last_seen: \"now()\"\n      }\n      where: {\n        id: {\n          _eq: $userId\n        }\n      }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Chat.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "subscription", "name": "", "content": "{\n    user_online (\n      order_by: {username:asc}\n    ) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/OnlineUsers.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "", "content": "{\n    article {\n      id\n      title\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/nextjs-8-serverless/with-apollo-jwt/app/components/ArticleList.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "author($skip: Int!)", "content": "{\n    author(offset: $skip, limit: 5) {\n      id\n      name\n    }\n    author_aggregate {\n      aggregate {\n        count\n      }\n    }  \n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/nextjs-8-serverless/with-apollo/components/AuthorList.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "PlaylistQuery", "content": "{\n\t  playlist {\n\t    name\n\t    tracks {\n\t      track_details {\n\t        name\n\t      }\n\t      track {\n\t        items {\n\t          track {\n\t            url\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/gatsby-contentful-auth0/app/src/components/Playlist.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_playlist($name: String!)", "content": "{\n\t  insert_playlist(objects: [{\n\t    name: $name\n\t  }]) {\n\t    affected_rows\n\t  }\n\t}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/gatsby-contentful-auth0/app/src/components/Playlist.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_todos($text: String!)", "content": "{\n    insert_todos(objects: [{text: $text}]) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n      }\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "update_todos($todoId: Int!, $done: Boolean)", "content": "{\n    update_todos(_set: {is_completed: $done}, where: {id: {_eq: $todoId}}) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n      }\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "update_todos($done: Boolean)", "content": "{\n    update_todos(_set: {is_completed: $done}, where: {id: {_gt: 0}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "delete_todos($todoId: Int!)", "content": "{\n    delete_todos(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "delete_todos", "content": "{\n    delete_todos(where: {is_completed: {_eq: true}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "subscription", "name": "", "content": "{\n    online_users(order_by: { name: asc }) {\n      name\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/OnlineUsers/OnlineUsers.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($userId: String!, $timestamp: timestamptz!)", "content": "{\n              update_users(\n                where: { auth0_id: { _eq: $userId } }\n                _set: { auth0_id: $userId, last_seen: $timestamp }\n              ) {\n                affected_rows\n              }\n            }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Home/Home.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "fetch_todos($userId: String!)", "content": "{\n    todos(\n      where: { is_public: { _eq: false }, user_id: { _eq: $userId } }\n      order_by: { created_at: desc }\n    ) {\n      ...TodoFragment\n    }\n  }\n  ${TODO_FRAGMENT}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "fetch_todos($todoLimit: Int, $todoId: Int)", "content": "{\n    todos(\n      where: { is_public: { _eq: true }, id: { _gt: $todoId } }\n      order_by: { created_at: desc }\n      limit: $todoLimit\n    ) {\n      ...TodoFragment\n      user {\n        ...UserFragment\n      }\n    }\n  }\n  ${TODO_FRAGMENT}\n  ${USER_FRAGMENT}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "fetch_todos($todoId: Int)", "content": "{\n    todos(\n      where: { is_public: { _eq: true }, id: { _gt: $todoId } }\n      order_by: { created_at: desc }\n    ) {\n      ...TodoFragment\n      user {\n        ...UserFragment\n      }\n    }\n  }\n  ${TODO_FRAGMENT}\n  ${USER_FRAGMENT}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "fetch_todos($todoId: Int)", "content": "{\n    todos(\n      where: { is_public: { _eq: true }, id: { _lt: $todoId } }\n      limit: 5\n      order_by: { created_at: desc }\n    ) {\n      ...TodoFragment\n      user {\n        ...UserFragment\n      }\n    }\n  }\n  ${TODO_FRAGMENT}\n  ${USER_FRAGMENT}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_todos($objects: [todos_insert_input!]!)", "content": "{\n    insert_todos(objects: $objects) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n        created_at\n        is_public\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "update_todos($todoId: Int, $set: todos_set_input!)", "content": "{\n    update_todos(where: { id: { _eq: $todoId } }, _set: $set) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "delete_todos($todoId: Int)", "content": "{\n    delete_todos(where: { id: { _eq: $todoId } }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "subscription", "name": "($todoId: Int)", "content": "{\n    todos(\n      where: { is_public: { _eq: true }, id: { _gt: $todoId } }\n      order_by: { created_at: desc }\n      limit: 1\n    ) {\n      id\n      text\n      is_completed\n      created_at\n      is_public\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "", "content": "{\n\t  author {\n\t    id\n\t    name\n\t  }\n\t}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/nextjs-postgres-graphql/pages/index.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "subscription", "name": "getLocation($vehicleId: String!)", "content": "{\n            vehicle(where: {id: {_eq: $vehicleId}}) {\n                locations(order_by: {timestamp:desc}, limit: 1) {\n                    location\n                    timestamp\n                }\n            }\n        }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-location-tracking/src/App/App.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_vehicle_location ($objects: [vehicle_location_insert_input!]! )", "content": "{\n        insert_vehicle_location (objects: $objects){\n          returning {\n            id\n          }\n        }\n      }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_vehicle ($objects: [vehicle_insert_input!]! )", "content": "{\n        insert_vehicle (objects: $objects){\n          returning {\n            id\n          }\n        }\n      }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "subscription", "name": "getVehicle($vehicleId: String!)", "content": "{\n          vehicle (where: { id: { _eq: $vehicleId }}) {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "ChatsListQueryCache($userId: Int!)", "content": "{\n    chat(order_by:[{messages_aggregate:{max:{created_at:desc}}}]) {\n      ...chat\n      users(where:{user_id:{_neq:$userId}}) {\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/services/cache.service.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "ExistingChatUsers($userId: Int)", "content": "{\n    chat(where:{users:{user_id:{_eq:$userId}}, owner_id:{_is_null:true}}){\n      id\n      name\n      owner_id\n      users(order_by:[{user_id:desc}],where:{user_id:{_neq:$userId}}) {\n        user_id\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/UsersList.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "RemainingUsers($existingUsersId: [Int!])", "content": "{\n    users(order_by:[{id:desc}],where:{id:{_nin:$existingUsersId}}){\n      ...user\n    }\n  }\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/UsersList.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "subscription", "name": "RemainingUsersSub($existingUsersId: [Int!])", "content": "{\n    users(order_by:[{id:desc}],where:{id:{_nin:$existingUsersId}}){\n      ...user\n    }\n  }\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/UsersList.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "ChatsListQuery($userId: Int!)", "content": "{\n    chat(order_by:[{messages_aggregate:{max:{created_at:desc}}}]) {\n      ...chat\n      users(where:{user_id:{_neq:$userId}}) {\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatsListScreen/ChatsList.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "SettingsFormMutation($name: String, $picture: String, $userId: Int)", "content": "{\n    update_users(_set: {name: $name, picture: $picture}, where: {id: {_eq: $userId}}) {\n      affected_rows\n      returning {\n        id\n        name\n        picture\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/SettingsScreen/SettingsForm.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "CompleteGroupButtonMutation(\n    $userIds: [chat_users_insert_input!]!\n    $groupName: String!\n    $groupPicture: String\n    $ownerId: Int\n  )", "content": "{\n    insert_chat(objects: [{name: $groupName, picture: $groupPicture, owner_id: $ownerId, users:{data: $userIds}}]) {\n      returning {\n        ...chat\n      }\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/GroupDetailsScreen/CompleteGroupButton.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "GroupDetailsScreenQuery($chatId: Int!)", "content": "{\n    chat(where:{id: {_eq: $chatId}}) {\n        ...chat\n      users {\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/GroupDetailsScreen/index.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "GroupDetailsScreenUpdateMutation($name: String, $picture: String, $chatId: Int!)", "content": "{\n    update_chat(_set: {name: $name, picture: $picture}, where: {id: {_eq: $chatId}}) {\n      affected_rows\n      returning {\n        ...chat\n      }\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/GroupDetailsScreen/index.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "MessagesListQuery($chatId: Int!)", "content": "{\n    chat(where:{id: {_eq: $chatId}}) {\n      ...chat\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/MessagesList.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "MessageBoxMutation($chatId: Int!, $content: String!, $sender_id: Int!)", "content": "{\n    insert_message(objects: [{chat_id: $chatId, content: $content, sender_id: $sender_id}]) {\n      affected_rows\n      returning {\n        id\n        content\n        created_at\n        sender_id\n        chat_id\n        chat {\n          id\n        }\n        sender {\n          id\n          name\n        }\n        recipients {\n          user {\n            id\n          }\n          message {\n            id\n            chat {\n              id\n            }\n          }\n          received_at\n          read_at\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/MessageBox.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "MessagesListQueryLocal($chatId: Int!)", "content": "{\n            chat(where:{id: {_eq: $chatId}}) {\n              ...chat\n            }\n          }\n          ${fragments.chat}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/MessageBox.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "ChatList($chatId: Int!, $userId: Int!)", "content": "{\n    chat_users(where:{chat_id: {_eq: $chatId}, user_id: {_neq: $userId}}) {\n      chat {\n        ...chat\n      }\n      user {\n        ...user\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/ChatNavbar.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "ChatsListCacheQuery($userId: Int!)", "content": "{\n    chat(order_by:[{messages_aggregate:{max:{created_at:desc}}}]) {\n      ...chat\n      users(where:{user_id:{_neq:$userId}}) {\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/ChatNavbar.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "deleteChat($chatId: Int!)", "content": "{\n    delete_chat_users(where:{chat_id:{_eq: $chatId}}) {\n      affected_rows\n    }\n    delete_message(where:{chat_id:{_eq: $chatId}}) {\n      affected_rows\n    }\n    delete_chat(where:{id: {_eq: $chatId}}) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/ChatNavbar.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "NewChatScreenMutation($userId: Int!,$currentUserId: Int!)", "content": "{\n    insert_chat(objects: [{\n      owner_id: null,\n      users: {\n        data: [\n          {user_id: $userId},\n          {user_id: $currentUserId}\n        ]\n      }\n    \n    }]) {\n      affected_rows\n      returning {\n        ...chat\n      }\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/NewChatScreen/index.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "review($imdbID: String)", "content": "{\n    review(imdbID: $imdbID) {\n      username\n      reviewBody\n      imdbID\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/queries.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "addUser($username: String!, $password: String!, $email: String!)", "content": "{\n    addUser(username: $username, password: $password, email: $email) {\n      token\n      user {\n        username\n        _id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "saveMedia($input: SavedMediaInput)", "content": "{\n    saveMedia(input: $input) {\n      username\n      _id\n      mediaCount\n      savedMedias {\n        title\n        plot\n        imdbID\n        poster\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "removeMedia($imdbID: String!)", "content": "{\n    removeMedia(imdbID: $imdbID) {\n      _id\n      username\n      mediaCount\n      savedMedias {\n        title\n        plot\n        imdbID\n        poster\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "addReview($reviewBody: String!, $imdbID: String!)", "content": "{\n    addReview(reviewBody: $reviewBody, imdbID: $imdbID) {\n      imdbID\n      reviewBody\n      createdAt\n      username\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "Login($username: String!, $password: String!)", "content": "{\n    login(username: $username, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/pages/login.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "mutation", "name": "Mutation($name: String!, $username: String!, $password: String!)", "content": "{\n    signup(name: $name, username: $username, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/pages/register.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "query", "name": "Query", "content": "{\n    me {\n      _id\n      name\n      username\n      img\n      myExpenses {\n        _id\n        amount\n        tags {\n          _id\n          name\n          color\n        }\n        geo {\n          lat\n          lon\n        }\n        date\n        address {\n          MunicipalityZone\n          Neighbourhood\n          FormattedAddress\n          Place\n        }\n      }\n      myTags {\n        _id\n        name\n        color\n      }\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/components/SetDataToRedex.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "mutation", "name": "Create_expense($data: ExpenseInfo!)", "content": "{\n    create_expense(data: $data) {\n      status\n      msg\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/components/Transactions/AddTransactionModal.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "mutation", "name": "Create_expense($data: tagInfo!)", "content": "{\n    create_tag(data: $data) {\n      status\n      msg\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/components/Transactions/AddNewTag.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "mutation", "name": "EditMe($name: String!, $img: Upload)", "content": "{\n    editMe(name: $name, img: $img) {\n      status\n      msg\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/components/account/account-profile-details.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "query", "name": "($id: ID!)", "content": "{\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "9f5f6e539a140789d847e670a059e1acf28dbe9e", "file": "pages/restaurants.js", "repo": "Shin-sibainu_nextjs-food-delivery-frontend"}}, {"type": "mutation", "name": "AddOrRemoveFromLocalBag($productID: ID!, $variantID: ID!)", "content": "{\n    addOrRemoveFromLocalBag(productID: $productID, variantID: $variantID) @client {\n      productID\n      variantID\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/queries/clientQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetLocalBag", "content": "{\n    localBagItems @client {\n      productID\n      variantID\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/queries/clientQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetBrowseCategoriesAndBrands", "content": "{\n    categories(where: { visible: true }, orderBy: position_ASC) {\n      id\n      slug\n      name\n      children {\n        id\n        slug\n      }\n      position\n    }\n    brands(orderBy: name_ASC, where: { products_some: { id_not: null }, name_not: null, published: true }) {\n      id\n      slug\n      name\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Browse/queries/browseQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetBrowseProducts(\n    $categoryName: String!\n    $brandNames: [String]\n    $colors: [String]\n    $first: Int!\n    $skip: Int!\n    $orderBy: ProductOrderByInput!\n    $tops: [String]\n    $bottoms: [String]\n    $available: Boolean\n    $forSaleOnly: Boolean\n  )", "content": "{\n    productsConnection(\n      category: $categoryName\n      tops: $tops\n      colors: $colors\n      bottoms: $bottoms\n      availableOnly: $available\n      forSaleOnly: $forSaleOnly\n      brands: $brandNames\n      orderBy: $orderBy\n      first: $first\n      skip: $skip\n      where: { status: Available }\n    ) {\n      aggregate {\n        count\n      }\n      edges {\n        node {\n          id\n          slug\n          name\n          description\n          images(size: Thumb) {\n            id\n            url\n          }\n          modelSize {\n            id\n            display\n          }\n          modelHeight\n          externalURL\n          retailPrice\n          rentalPrice\n          status\n          type\n          createdAt\n          updatedAt\n          brand {\n            id\n            name\n          }\n          variants {\n            id\n            total\n            reservable\n            nonReservable\n            reserved\n            isSaved\n            displayLong\n            displayShort\n          }\n          ...ProductPriceText_Product\n        }\n      }\n    }\n  }\n  ${ProductPriceText_Product}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Browse/queries/browseQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetBrandAndProducts($brandID: ID!, $first: Int!, $skip: Int!, $orderBy: ProductOrderByInput!)", "content": "{\n    brand(where: { id: $brandID }) {\n      id\n      name\n      since\n      description\n      websiteUrl\n      basedIn\n      images {\n        id\n        url\n      }\n      products: productsConnection(first: $first, skip: $skip, orderBy: $orderBy, where: { status: Available }) {\n        aggregate {\n          count\n        }\n        edges {\n          node {\n            id\n            slug\n            name\n            description\n            images(size: Thumb) {\n              id\n              url\n            }\n            modelHeight\n            externalURL\n            retailPrice\n            status\n            createdAt\n            updatedAt\n            variants {\n              id\n              displayShort\n              displayLong\n              total\n              reservable\n              nonReservable\n              reserved\n              isSaved\n            }\n            ...ProductPriceText_Product\n          }\n        }\n      }\n    }\n  }\n  ${ProductPriceText_Product}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Brand/queries/brandQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "CheckItemsAvailability($items: [ID!]!)", "content": "{\n    checkItemsAvailability(items: $items)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "SubmitOrder($input: SubmitOrderInput!)", "content": "{\n    submitOrder(input: $input) {\n      id\n      ...OrderFragment_Order\n    }\n  }\n  ${OrderFragment_Order}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ProductVariantCreateDraftOrder($input: CreateDraftedOrderInput!)", "content": "{\n    createDraftedOrder(input: $input) {\n      id\n      ...OrderFragment_Order\n    }\n  }\n  ${OrderFragment_Order}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetLocalBagItems($ids: [ID!])", "content": "{\n    productVariants(where: { id_in: $ids }) {\n      id\n      displayShort\n      product {\n        id\n        slug\n        name\n        rentalPrice\n        retailPrice\n        brand {\n          id\n          name\n        }\n        images {\n          id\n          url\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetBag_NoCache_Query", "content": "{\n    me {\n      bagSections {\n        ...BagSectionFragment_BagSection\n      }\n      ...BagFragment_Me\n      ...BuyTabFragment_Me\n      ...BagTabPrimaryCTAFragment_Me\n    }\n  }\n  ${BagSectionFragment_BagSection}\n  ${BuyTabFragment_Me}\n  ${BagFragment_Me}\n  ${BagTabPrimaryCTAFragment_Me}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "AddToBag($id: ID!)", "content": "{\n    addToBag(item: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "deleteBagItem($itemID: ID!)", "content": "{\n    deleteBagItem(itemID: $itemID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "Product_NoCache_Query", "content": "{\n    me {\n      id\n      customer {\n        id\n        status\n        user {\n          id\n        }\n      }\n      bag {\n        id\n      }\n      savedItems {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Queries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetProduct($where: ProductWhereInput!)", "content": "{\n    products(first: 1, where: $where) {\n      id\n      slug\n      name\n      productFit\n      isRentable\n      discountedPrice\n      modelHeight\n      relatedProducts(take: 10) {\n        id\n        type\n        images(size: Thumb) {\n          id\n          url\n        }\n        brand {\n          id\n          name\n        }\n        color {\n          id\n        }\n        retailPrice\n        rentalPrice\n        variants {\n          ...CommonProductVariant\n          isInCart\n        }\n      }\n      category {\n        id\n        name\n        productType\n      }\n      description\n      retailPrice\n      rentalPrice\n      modelSize {\n        id\n        display\n        type\n      }\n      color {\n        id\n        name\n      }\n      secondaryColor {\n        id\n        name\n      }\n      brand {\n        id\n        slug\n        name\n        logo\n        since\n        websiteUrl\n        products(first: 5, orderBy: createdAt_DESC, where: { AND: [{ NOT: [$where] }, { status: Available }] }) {\n          id\n          type\n          images(size: Thumb) {\n            id\n            url\n          }\n          brand {\n            id\n            name\n          }\n          rentalPrice\n          retailPrice\n          variants {\n            ...CommonProductVariant\n          }\n        }\n      }\n      outerMaterials\n      innerMaterials\n      largeImages: images(size: Large) {\n        imageId: id\n        url\n      }\n      type\n      variants {\n        id\n        ...ProductMeasurementsFragment_ProductVariant\n        ...CommonProductVariant\n      }\n      ...ProductBuyCTAFragment_Product\n    }\n  }\n  ${ProductMeasurementsFragment_ProductVariant}\n  ${ProductBuyCTAFragment_Product}\n  ${commonProductVariantFragment}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Queries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetUserPaymentData", "content": "{\n    me {\n      id\n      customer {\n        id\n        paymentPlan {\n          id\n          planID\n          price\n          name\n        }\n        detail {\n          id\n          phoneNumber\n          shippingAddress {\n            id\n            name\n            company\n            address1\n            address2\n            city\n            state\n            zipCode\n          }\n        }\n        invoices {\n          id\n          status\n          closingDate\n          dueDate\n          price\n          lineItems {\n            id\n            dateFrom\n            isTaxed\n            taxAmount\n            taxRate\n            discountAmount\n            description\n            price\n          }\n          billingAddress {\n            firstName\n            lastName\n            line1\n            line2\n            line3\n            city\n            state\n            zip\n          }\n          creditNotes {\n            id\n            reasonCode\n            date\n            total\n            status\n          }\n          discounts {\n            amount\n            description\n          }\n        }\n        billingInfo {\n          id\n          brand\n          city\n          expiration_month\n          expiration_year\n          last_digits\n          name\n          postal_code\n          state\n          street1\n          street2\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/PaymentAndShipping/queries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "SavedTab_Query", "content": "{\n    me {\n      id\n      ...SavedItemsTabFragment_Me\n    }\n  }\n  ${SavedItemsTabFragment_Me}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/SavedAndHistory/queries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "ReservationHistoryTab_Query", "content": "{\n    me {\n      id\n      customer {\n        ...ReservationHistoryTabFragment_Customer\n      }\n    }\n  }\n  ${ReservationHistoryTabFragment_Customer}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/SavedAndHistory/queries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "HomepageNoCache_Query", "content": "{\n    reservationFeedback {\n      id\n      feedbacks {\n        id\n        isCompleted\n        questions {\n          id\n          options\n          question\n          responses\n          type\n        }\n        variant {\n          id\n          product {\n            id\n            name\n            retailPrice\n            images(size: Thumb) {\n              id\n              url\n            }\n          }\n        }\n      }\n    }\n    me {\n      id\n      customer {\n        id\n        status\n        shouldRequestFeedback\n        ...CustomerTraitsFragment_Customer\n      }\n      recentlyViewedProducts {\n        id\n        slug\n        images(size: Thumb) {\n          id\n          url\n        }\n        brand {\n          id\n          name\n        }\n        variants {\n          id\n          reservable\n          displayShort\n        }\n      }\n      savedItems {\n        id\n        productVariant {\n          id\n          product {\n            id\n            name\n            modelSize {\n              id\n              display\n            }\n            brand {\n              id\n              name\n            }\n            images(size: Medium) {\n              id\n              url\n            }\n            variants {\n              id\n              reservable\n              displayShort\n            }\n          }\n        }\n      }\n    }\n  }\n  ${CustomerTraitsFragment_Customer}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Home/queries/homeQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "Homepage_Query($firstFitPics: Int!, $skipFitPics: Int)", "content": "{\n    banner: view(viewID: \"Banner\") {\n      id\n      title\n      caption\n      type\n      properties\n    }\n    featuredCollections: collections(\n      orderBy: updatedAt_DESC\n      where: { AND: [{ published: true }, { featured: true }] }\n      first: 5\n    ) {\n      id\n      slug\n      title\n      subTitle\n      displayTextOverlay\n      textOverlayColor\n      images {\n        id\n        url\n      }\n    }\n    collections(orderBy: updatedAt_DESC, placements: [Homepage], where: { published: true }) {\n      id\n      slug\n      title\n      products(first: 10, orderBy: updatedAt_DESC) {\n        id\n        name\n        brand {\n          id\n          name\n        }\n        images(size: Thumb) {\n          id\n          url\n        }\n      }\n    }\n    blogPosts(count: 5) {\n      id\n      url\n      name\n      category\n      image {\n        id\n        url\n      }\n    }\n    upcomingProducts: products(first: 10, orderBy: publishedAt_DESC, where: { status: Upcoming }) {\n      id\n      slug\n      name\n      brand {\n        id\n        name\n      }\n      images(size: Medium) {\n        id\n        url\n      }\n    }\n    justAddedOuterwear: products(\n      first: 8\n      category: \"outerwear\"\n      orderBy: publishedAt_DESC\n      where: { AND: [{ variants_some: { id_not: null } }, { status: Available }, { tags_none: { name: \"Vintage\" } }] }\n    ) {\n      id\n      ...HomePageProductFragment_Product\n    }\n\n    justAddedAccessories: products(\n      first: 16\n      category: \"accessories\"\n      orderBy: publishedAt_DESC\n      where: { AND: [{ variants_some: { id_not: null } }, { status: Available }, { tags_none: { name: \"Vintage\" } }] }\n    ) {\n      id\n      ...HomePageProductFragment_Product\n    }\n    justAddedTops: products(\n      first: 8\n      category: \"tops\"\n      orderBy: publishedAt_DESC\n      where: { AND: [{ variants_some: { id_not: null } }, { status: Available }, { tags_none: { name: \"Vintage\" } }] }\n    ) {\n      id\n      ...HomePageProductFragment_Product\n    }\n    justAddedBottoms: products(\n      first: 8\n      category: \"bottoms\"\n      orderBy: publishedAt_DESC\n      where: { AND: [{ variants_some: { id_not: null } }, { status: Available }, { tags_none: { name: \"Vintage\" } }] }\n    ) {\n      id\n      ...HomePageProductFragment_Product\n    }\n    fitPicsConnection(first: $firstFitPics, skip: $skipFitPics, orderBy: createdAt_DESC, where: { status: Published }) {\n      aggregate {\n        count\n      }\n      edges {\n        node {\n          id\n          author\n          location {\n            id\n            city\n            state\n          }\n          image(size: Medium) {\n            id\n            url\n          }\n          includeInstagramHandle\n          user {\n            id\n            customer {\n              detail {\n                instagramHandle\n              }\n            }\n          }\n          products {\n            id\n            slug\n            name\n            isSaved\n            brand {\n              id\n              name\n            }\n            images {\n              id\n              url\n            }\n            variants(first: 1) {\n              id\n            }\n          }\n          createdAt\n        }\n      }\n    }\n    ...HomeBottomSheetFragment_Query\n  }\n  ${HomePageProductFragment_Product}\n  ${HomeBottomSheetFragment_Query}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Home/queries/homeQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "UpdateProductReservationFeedback(\n    $reservationFeedbackID: ID!\n    $productReservationID: ID!\n    $input: ProductVariantFeedbackUpdateInput!\n    $responses: JSON\n  )", "content": "{\n    updateProductReservationFeedback(\n      reservationFeedbackID: $reservationFeedbackID\n      productReservationID: $productReservationID\n      input: $input\n      responses: $responses\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ReservationFeedback/mutations.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetReferralView", "content": "{\n    view(viewID: \"Referral\") {\n      id\n      title\n      caption\n      type\n      properties\n    }\n    me {\n      id\n      customer {\n        id\n        referralLink\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ReferralView/ReferralView.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetCustomerFitPicItems($fitPicID: ID!)", "content": "{\n    fitPic(where: { id: $fitPicID }) {\n      id\n      image {\n        id\n        url\n      }\n      products {\n        id\n        name\n        brand {\n          id\n          name\n        }\n        images(size: Large) {\n          id\n          url\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/FitPic/ShareFitPicToIG.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "SubmitFitPic($image: Upload!, $options: FitPicSubmissionOptionsInput)", "content": "{\n    submitFitPic(image: $image, options: $options)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/FitPic/FitPicConfirmation.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetInstagramHandle", "content": "{\n    me {\n      id\n      customer {\n        id\n        detail {\n          instagramHandle\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/FitPic/FitPicConfirmation.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "CreateAccount_NoCache_Query", "content": "{\n    me {\n      id\n      customer {\n        id\n        status\n        detail {\n          id\n          shippingAddress {\n            id\n            city\n            state\n            zipCode\n          }\n        }\n        user {\n          id\n          firstName\n          lastName\n        }\n        membership {\n          id\n          plan {\n            id\n            description\n            planID\n            features {\n              included\n              excluded\n            }\n            tier\n          }\n        }\n        admissions {\n          id\n          admissable\n          authorizationsCount\n        }\n        coupon {\n          id\n          type\n          amount\n          percentage\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/CreateAccount.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "CreateAccount_Cached_Query($where: PaymentPlanWhereInput)", "content": "{\n    paymentPlans(where: $where) {\n      id\n      name\n      features {\n        included\n        excluded\n      }\n      caption\n      price\n      planID\n      tier\n    }\n    howDidYouFindOutAboutUs: view(viewID: \"HowDidYouFindOutAboutUs\") {\n      id\n      title\n      caption\n      type\n      properties\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/CreateAccount.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "addMeasurements(\n    $shoeSize: Int\n    $pantLength: Int\n    $topSizes: CustomerDetailCreatetopSizesInput\n    $waistSizes: CustomerDetailCreatewaistSizesInput\n  )", "content": "{\n    addCustomerDetails(\n      details: { pantLength: $pantLength, shoeSize: $shoeSize, topSizes: $topSizes, waistSizes: $waistSizes }\n      event: CompletedWaitlistForm\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/GetMeasurementsPane/GetMeasurementsPane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "startSMSVerification($phoneNumber: String!)", "content": "{\n    startSMSVerification(phoneNumber: $phoneNumber)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/SendCodePane/SendCodePane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "SignUp(\n    $email: String!\n    $password: String!\n    $firstName: String!\n    $lastName: String!\n    $zipCode: String!\n    $discoveryReference: String\n  )", "content": "{\n    signup(\n      email: $email\n      password: $password\n      firstName: $firstName\n      lastName: $lastName\n      details: { shippingAddress: { create: { zipCode: $zipCode } }, discoveryReference: $discoveryReference }\n    ) {\n      user {\n        id\n        email\n        firstName\n        lastName\n        beamsToken\n        roles\n        createdAt\n      }\n      customer {\n        id\n        status\n        detail {\n          id\n          shippingAddress {\n            id\n            state\n          }\n        }\n        bagItems {\n          id\n        }\n      }\n      token\n      refreshToken\n      expiresIn\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/CreateAccountPane/CreateAccountPane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "checkSMSVerification($code: String!)", "content": "{\n    checkSMSVerification(code: $code)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/VerifyCodePane/VerifyCodePane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "triage", "content": "{\n    triageCustomer\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/TriagePane/TriagePane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "CheckCoupon($couponID: String!)", "content": "{\n    checkCoupon(couponID: $couponID) {\n      id\n      amount\n      percentage\n      type\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ApplyPromoCode/ApplyPromoCodePane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ApplePayCheckout(\n    $planID: String!\n    $token: StripeToken!\n    $tokenType: String\n    $couponID: String\n    $shipping: JSON\n  )", "content": "{\n    applePayCheckout(planID: $planID, token: $token, tokenType: $tokenType, couponID: $couponID, shipping: $shipping)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ChoosePlanPane/ChoosePlanPane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ChangeCustomerPlan($planID: String!)", "content": "{\n    changeCustomerPlan(planID: $planID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ChoosePlanPane/ChoosePlanPane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "AddProductRequest($reason: String!, $url: String!)", "content": "{\n    addProductRequest(reason: $reason, url: $url) {\n      id\n      sku\n      brand\n      description\n      images\n      name\n      price\n      priceCurrency\n      productID\n      url\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ProductRequest/ProductRequest.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ReserveItems($options: ReserveItemsOptions, $shippingCode: ShippingCode)", "content": "{\n    reserveItems(options: $options, shippingCode: $shippingCode) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Reservation/Reservation.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetCustomer($shippingCode: String)", "content": "{\n    shippingMethods {\n      id\n      displayText\n      code\n      position\n      timeWindows {\n        id\n        startTime\n        endTime\n        display\n      }\n    }\n    me {\n      id\n      user {\n        id\n        firstName\n        lastName\n        email\n      }\n      bagSections {\n        id\n        status\n        bagItems {\n          id\n          ...BagItemFragment_BagItem\n        }\n      }\n      reservationLineItems(filterBy: NewItems, shippingCode: $shippingCode) {\n        id\n        name\n        price\n        recordType\n      }\n      customer {\n        id\n        admissions {\n          id\n          allAccessEnabled\n        }\n        detail {\n          id\n          phoneNumber\n          shippingAddress {\n            id\n            address1\n            address2\n            city\n            state\n            zipCode\n            shippingOptions {\n              id\n              externalCost\n              averageDuration\n              shippingMethod {\n                id\n                code\n                displayText\n              }\n            }\n          }\n        }\n        billingInfo {\n          id\n          brand\n          last_digits\n        }\n      }\n    }\n  }\n  ${BagItemFragment_BagItem}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Reservation/Reservation.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetCustomerReservationConfirmation($reservationID: ID!)", "content": "{\n    me {\n      id\n      user {\n        id\n        firstName\n        lastName\n        email\n      }\n      customer {\n        id\n        detail {\n          id\n          phoneNumber\n          shippingAddress {\n            id\n            slug\n            name\n            address1\n            address2\n            city\n            state\n            zipCode\n          }\n        }\n        reservations(where: { id: $reservationID }) {\n          id\n          reservationNumber\n          shippingMethod {\n            id\n            displayText\n            code\n          }\n          pickupDate\n          pickupWindow {\n            display\n          }\n          lineItems(filterBy: NewItems) {\n            id\n            name\n            price\n            recordType\n          }\n          reservationPhysicalProducts {\n            id\n            bagItem {\n              ...BagItemFragment_BagItem\n            }\n          }\n        }\n      }\n    }\n  }\n  ${BagItemFragment_BagItem}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Reservation/ReservationConfirmation.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ReturnItems($items: [ID!]!, $returnReasons: [ReturnReasonInput!])", "content": "{\n    returnItems(items: $items, returnReasons: $returnReasons) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/ReturnYourBag.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "getAtHomeBagSection", "content": "{\n    returnReasons {\n      value\n      display\n    }\n    me {\n      id\n      atHomeSection: bagSection(status: AtHome) {\n        id\n        status\n        bagItems {\n          id\n          reservationPhysicalProduct {\n            id\n            physicalProduct {\n              id\n              productVariant {\n                id\n                displayLong\n                product {\n                  id\n                  slug\n                  name\n                  brand {\n                    id\n                    name\n                  }\n                  images {\n                    id\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/ReturnYourBag.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "getAtHomeBagSection", "content": "{\n    me {\n      id\n      returnPendingSection: bagSection(status: ReturnPending) {\n        id\n        status\n        bagItems {\n          id\n          reservationPhysicalProduct {\n            id\n            physicalProduct {\n              id\n              productVariant {\n                id\n                displayLong\n                product {\n                  id\n                  slug\n                  name\n                  brand {\n                    id\n                    name\n                  }\n                  images {\n                    id\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/ReturnYourBagConfirmation.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "SurpriseProductVariants", "content": "{\n    surpriseProductVariants {\n      id\n      isSaved\n      product {\n        id\n        slug\n        name\n        brand {\n          id\n          slug\n          name\n        }\n        images(size: Small) {\n          id\n          url\n        }\n      }\n    }\n    me {\n      id\n      bag {\n        id\n        productVariant {\n          id\n          product {\n            id\n          }\n        }\n        position\n        saved\n        status\n      }\n      customer {\n        id\n        membership {\n          id\n          plan {\n            id\n            itemCount\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/SurpriseMe.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "CancelReturn", "content": "{\n    cancelReturn {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/Components/BagReturnFlowSubtitle.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "CancelReturn($bagItemId: ID!)", "content": "{\n    cancelReturn(bagItemId: $bagItemId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/Components/BagItem/BagItemCTAs.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "AddViewedProduct($item: ID!)", "content": "{\n    addViewedProduct(item: $item) {\n      id\n      viewCount\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Product.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "upsertCartItem($productVariantId: ID!, $addToCart: Boolean!)", "content": "{\n    upsertCartItem(productVariantId: $productVariantId, addToCart: $addToCart) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Product.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "UpsertRestockNotification($variantID: ID!, $shouldNotify: Boolean!)", "content": "{\n    upsertRestockNotification(variantID: $variantID, shouldNotify: $shouldNotify) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Product.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetUser", "content": "{\n    me {\n      id\n      customer {\n        id\n        status\n        referralLink\n        onboardingSteps\n        user {\n          id\n          firstName\n          lastName\n          email\n          roles\n          pushNotification {\n            id\n            status\n          }\n        }\n        detail {\n          id\n          height\n          weight\n          topSizes\n          waistSizes\n          shippingAddress {\n            id\n            name\n            address1\n            address2\n            zipCode\n            city\n            state\n          }\n          stylePreferences {\n            id\n            styles\n            patterns\n            colors\n            brands\n          }\n        }\n        authorizedAt\n        admissions {\n          id\n          authorizationWindowClosesAt\n          authorizationsCount\n        }\n        ...CreditBalanceFragment_Customer\n      }\n    }\n  }\n  ${CreditBalanceFragment_Customer}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/Account.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "setStylePreferences($styles: [String!], $patterns: [String!], $colors: [String!], $brands: [String!])", "content": "{\n    addCustomerDetails(\n      details: {\n        stylePreferences: {\n          create: {\n            styles: { set: $styles }\n            patterns: { set: $patterns }\n            colors: { set: $colors }\n            brands: { set: $brands }\n          }\n        }\n      }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/EditStylePreferences/EditStylePreferences.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "applePayUpdatePaymentMethod($planID: String!, $token: StripeToken!, $tokenType: String)", "content": "{\n    applePayUpdatePaymentMethod(planID: $planID, token: $token, tokenType: $tokenType)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/PaymentAndShipping/PaymentAndShipping.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "updatePaymentAndShipping($shippingAddress: AddressInput!, $phoneNumber: String!)", "content": "{\n    updatePaymentAndShipping(shippingAddress: $shippingAddress, phoneNumber: $phoneNumber)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/PaymentAndShipping/EditPaymentAndShipping.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetMembershipInfo", "content": "{\n    me {\n      id\n      customer {\n        id\n        status\n        invoices {\n          id\n          dueDate\n        }\n        membership {\n          id\n          subscriptionId\n          pauseRequests(orderBy: createdAt_DESC) {\n            id\n            resumeDate\n            pauseDate\n            pausePending\n          }\n          subscription {\n            id\n            nextBillingAt\n          }\n          plan {\n            id\n            planID\n            price\n            description\n            features {\n              included\n            }\n            itemCount\n            pauseWithItemsPrice\n          }\n        }\n      }\n      user {\n        id\n        firstName\n        lastName\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/MembershipInfo/MembershipInfo.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "updateShippingAddress(\n    $name: String!\n    $city: String!\n    $zipCode: String!\n    $state: String!\n    $address1: String!\n    $address2: String\n  )", "content": "{\n    addCustomerDetails(\n      details: {\n        shippingAddress: {\n          create: {\n            name: $name\n            city: $city\n            zipCode: $zipCode\n            state: $state\n            address1: $address1\n            address2: $address2\n          }\n        }\n      }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/EditShippingAddress/EditShippingAddress.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "updateUserPushNotificationStatus($newStatus: Boolean!)", "content": "{\n    updateUserPushNotificationStatus(newStatus: $newStatus) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/Components/NotificationToggle.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetUserPreferences", "content": "{\n    me {\n      id\n      customer {\n        id\n        user {\n          id\n          createdAt\n          firstName\n          lastName\n          email\n        }\n        detail {\n          id\n          shoeSize\n          pantLength\n          topSizes\n          waistSizes\n          phoneNumber\n          shippingAddress {\n            id\n            name\n            address1\n            address2\n            zipCode\n            city\n            state\n          }\n          stylePreferences {\n            id\n            styles\n            patterns\n            colors\n            brands\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/PersonalPreferences/PersonalPreferences.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "Faq", "content": "{\n    faq {\n      sections {\n        title\n        subsections {\n          title\n          text\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Faq/Faq.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetBrands($orderBy: BrandOrderByInput!)", "content": "{\n    brands(orderBy: $orderBy, where: { products_some: { id_not: null }, published: true }) {\n      id\n      slug\n      name\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Brands/Brands.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetProductsByTag($tag: String!, $first: Int!, $skip: Int!, $orderBy: ProductOrderByInput!)", "content": "{\n    products(\n      where: { AND: [{ tags_some: { name: $tag } }, { status: Available }] }\n      first: $first\n      skip: $skip\n      orderBy: $orderBy\n    ) {\n      id\n      slug\n      name\n      images {\n        id\n        url\n      }\n      variants {\n        id\n        total\n        reservable\n        nonReservable\n        reserved\n        isSaved\n        displayShort\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Tag/Tag.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ResetPassword($email: String!)", "content": "{\n    resetPassword(email: $email) {\n      message\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/SignIn/ResetPassword.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "LogIn($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      customer {\n        id\n        status\n        admissions {\n          id\n          admissable\n        }\n        bagItems {\n          id\n        }\n        detail {\n          id\n          shippingAddress {\n            id\n            state\n          }\n        }\n      }\n      user {\n        id\n        createdAt\n        email\n        firstName\n        lastName\n        beamsToken\n        roles\n      }\n      token\n      refreshToken\n      expiresIn\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/SignIn/LogIn.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "ReservationFeedback_Query", "content": "{\n    reservationFeedback {\n      id\n      feedbacks {\n        id\n        isCompleted\n        review\n        rating\n        questions {\n          id\n          options\n          question\n          responses\n          type\n        }\n        variant {\n          id\n          product {\n            id\n            name\n            retailPrice\n            brand {\n              id\n              name\n            }\n            images(size: Thumb) {\n              id\n              url\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ReservationFeedback/ReservationFeedbackModal.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "BeamsData", "content": "{\n    me {\n      id\n      user {\n        email\n        beamsToken\n        roles\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Notifications/NotificationsProvider.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "PauseSubscription($subscriptionID: String!, $pauseType: PauseType, $reasonID: ID)", "content": "{\n    pauseSubscription(subscriptionID: $subscriptionID, pauseType: $pauseType, reasonID: $reasonID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Components/Pause/PauseModal.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "PauseModal_Query", "content": "{\n    ...PauseReasonPupUpFragment_Query\n  }\n  ${PauseReasonPupUpFragment_Query}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Components/Pause/PauseModal.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ResumeSubscription($subscriptionID: String!)", "content": "{\n    resumeSubscription(subscriptionID: $subscriptionID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Components/Pause/PauseButtons.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "RemoveScheduledPause($subscriptionID: String!)", "content": "{\n    removeScheduledPause(subscriptionID: $subscriptionID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Components/Pause/PauseButtons.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetPairsDataWithVolume($orderBy: String, $orderDir: String, $pairId: String)", "content": "{\n    pairDayDatas(\n      first: $time\n      orderBy: $orderBy\n      orderDirection: $orderDir\n      where: { pairAddress: $pairId }\n    ) {\n      reserveUSD\n      dailyVolumeUSD\n      date\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/queries/farms/index.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "GetPairsInfoByData($time: Int, $orderBy: String, $orderDir: String, $pairId: String)", "content": "{\n    pairHourDatas(\n      first: $time\n      orderBy: $orderBy\n      orderDirection: $orderDir\n      where: { pair: $pairId }\n    ) {\n      id\n      timestamp: hourStartUnix\n      reserve0\n      reserve1\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/queries/pairs/index.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "GetPairsInfoByDay($time: Int, $orderBy: String, $orderDir: String, $pairId: String)", "content": "{\n    pairDayDatas(\n      first: $time\n      orderBy: $orderBy\n      orderDirection: $orderDir\n      where: { pairAddress: $pairId }\n    ) {\n      id\n      timestamp: date\n      reserve0\n      reserve1\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/queries/pairs/index.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "GetPairs($pairId: String)", "content": "{\n    pairs(where: { id: $pairId }) {\n      id\n      name\n      token0 {\n        id\n        name\n        symbol\n        derivedUSD\n      }\n      token1 {\n        id\n        name\n        symbol\n        derivedUSD\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/queries/pairs/index.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "GetAllPairs", "content": "{\n    pairs {\n      id\n      name\n      token0 {\n        id\n        name\n        symbol\n      }\n      token1 {\n        id\n        name\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/queries/pairs/index.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "GetTokenPairs($tokenAddress: String)", "content": "{\n    pairs(where: { token0: $tokenAddress }) {\n      id\n      name\n      token0 {\n        id\n        name\n        symbol\n      }\n      token1 {\n        id\n        name\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/queries/pairs/index.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "GetProposal($id: String)", "content": "{\n    proposal(id: $id) {\n      id\n      ipfs\n      title\n      body\n      choices\n      start\n      end\n      snapshot\n      state\n      author\n      type\n      space {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/services/api/snapshot.org/useGetProposal.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "GetVotes($proposalId: String!)", "content": "{\n    votes(where: { proposal: $proposalId }) {\n      id\n      voter\n      created\n      choice\n      space {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/services/api/snapshot.org/useGetProposalVotes.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "GetProposalsPreview($first: Int!, $skip: Int!, $space: String!)", "content": "{\n    proposals(\n      first: $first\n      skip: $skip\n      orderBy: \"end\"\n      orderDirection: desc\n      where: {\n        space_in: [$space]\n        # state: \"closed\"\n      }\n    ) {\n      id\n      title\n      # body\n      # choices\n      # start\n      # end\n      # snapshot\n      state\n      # author\n      # space {\n      #   id\n      #   name\n      # }\n      created\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/services/api/snapshot.org/useGetProposalsPreview.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "GetBalanceOnBlock($user_address: String!, $block_number: BigInt!)", "content": "{\n    balanceHistories(\n      first: 1\n      orderBy: BlockNumber\n      orderDirection: desc\n      where: { BlockNumber_lte: $block_number, User: $user_address }\n    ) {\n      TotalBalance\n      BlockNumber\n      User {\n        id\n        TotalBalance\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/services/api/refinery-finance-pairs/useGetBalanceByBlock.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "GetCurrentBalance($user_address: String!)", "content": "{\n    user(id: $user_address) {\n      TotalBalance\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/services/api/refinery-finance-pairs/useGetCurrentBalance.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "User($address: String!)", "content": "{\n    user(id: $address) {\n      liquidityPositions {\n        pair {\n          id\n          reserve0\n          reserve1\n          totalSupply\n          token0Price\n          token1Price\n          token0 {\n            symbol\n            decimals\n            id\n          }\n          token1 {\n            symbol\n            decimals\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/components/sections/Trade/YourLiquidity/index.tsx", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "Swap($address: String!)", "content": "{\n    swaps(where: { from: $address }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/components/sections/Trade/Swap/index.tsx", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "User($address: String!)", "content": "{\n    liquidityPositionSnapshots(\n      where: { user: $address, mintOrBurn: true }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n        reserve0\n        reserve1\n      }\n      transaction {\n        mints {\n          amount0\n          amount1\n          transaction {\n            id\n          }\n        }\n        burns {\n          amount0\n          amount1\n          transaction {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/components/sections/Trade/Liquidity/index.tsx", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "getAppointmentQuery(\n    $date: String\n    $startTime: String\n    $morningOrEvening: String\n    $endTime: String\n    $duration: Int\n    $price: Int\n    $firstName: String\n    $lastName: String\n    $email: String\n    $phoneNumber: String\n    $bookedWithCardSquareID: String\n  )", "content": "{\n    appointment(\n      date: $date\n      startTime: $startTime\n      morningOrEvening: $morningOrEvening\n      endTime: $endTime\n      duration: $duration\n      price: $price\n      bookedWithCardSquareID: $bookedWithCardSquareID\n      client: {\n        firstName: $firstName\n        lastName: $lastName\n        email: $email\n        phoneNumber: $phoneNumber\n      }\n    ) {\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      treatments {\n        name\n        duration\n        price\n      }\n      addOns {\n        name\n        duration\n        price\n      }\n      client {\n        firstName\n        lastName\n        email\n        phoneNumber\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/queries/getAppointmentQuery.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "query", "name": "(\n    $_id: ID\n    $firstName: String\n    $lastName: String\n    $email: String\n    $phoneNumber: String\n  )", "content": "{\n    employee(\n      _id: $_id\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n    ) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      employeeRole\n      permanentPasswordSet\n      password\n      tokenCount\n      createdAt\n      profilePicture\n      notifications {\n        _id\n        new\n        type\n        date\n        time\n        allDay\n        associatedClientFirstName\n        associatedClientLastName\n        originalAssociatedStaffFirstName\n        originalAssociatedStaffLastName\n        newAssociatedStaffFirstName\n        newAssociatedStaffLastName\n        createdByFirstName\n        createdByLastName\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/queries/getEmployeeQuery.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "query", "name": "($_id: ID, $email: String)", "content": "{\n    own_past_appointments(_id: $_id, email: $email) {\n      id\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      treatments {\n        name\n        duration\n        price\n      }\n      addOns {\n        name\n        duration\n        price\n      }\n      client {\n        _id\n        squareCustomerId\n        unsavedSquareCardIDs\n        firstName\n        lastName\n        email\n        phoneNumber\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/queries/getOwnPastAppointmentsQuery.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "query", "name": "(\n    $_id: ID\n    $squareCustomerId: String\n    $firstName: String\n    $lastName: String\n    $email: String\n    $phoneNumber: String\n    $createdAt: String\n  )", "content": "{\n    client(\n      _id: $_id\n      squareCustomerId: $squareCustomerId\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      createdAt: $createdAt\n    ) {\n      _id\n      squareCustomerId\n      unsavedSquareCardIDs\n      firstName\n      lastName\n      email\n      phoneNumber\n      createdAt\n      profilePicture\n      password\n      consentForm {\n        date\n        surgeryLast3Months\n        surgeryLast3MonthsNotes\n        anyHealthProblems\n        anyHealthProblemsNotes\n        listAnyMedications\n        chemPeelsLastMonth\n        waxingOnFaceLast5Days\n        accutaneOrPrescription\n        accutaneOrPrescriptionNotes\n        anyProductsContainingSalicyclicAcid\n        anyProductsContainingGlycolicAcid\n        anyProductsContainingLacticAcid\n        anyProductsContainingExfoliatingScrubs\n        anyProductsContainingVitaminA\n        fillersOrBotox\n        fillersOrBotoxNotes\n        listKnownAllergies\n        skinFlakyOrItch\n        everDiagnosedWithRosacea\n        pregnantOrNursing\n        ultimateSkinCareGoals\n        anythingElseWeShouldKnow\n        consentFormSignature\n        createdAt\n      }\n      myRoutine {\n        morningCleanser {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        morningToner {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        morningSerum {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        morningMoisturizer {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        morningSPF {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        morningRX {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        morningEyeCream {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningOilCleanser {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningCleanser {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningExfoliator {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningTreatmentMask {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningToner {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningSerum {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningMoisturizer {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningNightMask {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningOil {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningSpotTreatment {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningRX {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n        eveningEyeCream {\n          _id\n          name\n          frequency\n          useNotes\n          link\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/queries/getClientQuery.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "query", "name": "($_id: ID, $email: String)", "content": "{\n    own_appointments(_id: $_id, email: $email) {\n      id\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      esthetician\n      treatments {\n        name\n        duration\n        price\n      }\n      addOns {\n        name\n        duration\n        price\n      }\n      client {\n        _id\n        squareCustomerId\n        unsavedSquareCardIDs\n        firstName\n        lastName\n        email\n        phoneNumber\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/queries/getOwnAppointmentsQuery.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "query", "name": "($email: String, $password: String)", "content": "{\n    login(email: $email, password: $password) {\n      _id\n      accessToken\n      refreshToken\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/queries/loginQuery.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "query", "name": "($email: String, $password: String)", "content": "{\n    adminLogin(email: $email, password: $password) {\n      _id\n      accessToken\n      refreshToken\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/queries/adminLoginQuery.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $unsavedSquareCardID: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    updateUnsavedSquareCardIDs(\n      unsavedSquareCardID: $unsavedSquareCardID\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      unsavedSquareCardIDs\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateUnsavedSquareCardIDsMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "", "content": "{\n    updateClientInvalidateTokens {\n      _id\n      squareCustomerId\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n      createdAt\n      tokenCount\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateClientInvalidateTokensMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $password: String!\n    $confirmPassword: String!\n  )", "content": "{\n    registerClient(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/registerClientMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    confirmAppointment(_id: $_id) {\n      createdAt\n      esthetician\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      treatments {\n        name\n        price\n        duration\n      }\n      addOns {\n        name\n        price\n        duration\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/confirmAppointmentMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $morningCleanser: [MyRoutineFieldsInputType]\n    $morningToner: [MyRoutineFieldsInputType]\n    $morningSerum: [MyRoutineFieldsInputType]\n    $morningMoisturizer: [MyRoutineFieldsInputType]\n    $morningSPF: [MyRoutineFieldsInputType]\n    $morningRX: [MyRoutineFieldsInputType]\n    $morningEyeCream: [MyRoutineFieldsInputType]\n    $eveningOilCleanser: [MyRoutineFieldsInputType]\n    $eveningCleanser: [MyRoutineFieldsInputType]\n    $eveningExfoliator: [MyRoutineFieldsInputType]\n    $eveningTreatmentMask: [MyRoutineFieldsInputType]\n    $eveningToner: [MyRoutineFieldsInputType]\n    $eveningSerum: [MyRoutineFieldsInputType]\n    $eveningMoisturizer: [MyRoutineFieldsInputType]\n    $eveningNightMask: [MyRoutineFieldsInputType]\n    $eveningOil: [MyRoutineFieldsInputType]\n    $eveningSpotTreatment: [MyRoutineFieldsInputType]\n    $eveningRX: [MyRoutineFieldsInputType]\n    $eveningEyeCream: [MyRoutineFieldsInputType]\n  )", "content": "{\n    updateMyRoutine(\n      morningCleanser: $morningCleanser\n      morningToner: $morningToner\n      morningSerum: $morningSerum\n      morningMoisturizer: $morningMoisturizer\n      morningSPF: $morningSPF\n      morningRX: $morningRX\n      morningEyeCream: $morningEyeCream\n      eveningOilCleanser: $eveningOilCleanser\n      eveningCleanser: $eveningCleanser\n      eveningExfoliator: $eveningExfoliator\n      eveningTreatmentMask: $eveningTreatmentMask\n      eveningToner: $eveningToner\n      eveningSerum: $eveningSerum\n      eveningMoisturizer: $eveningMoisturizer\n      eveningNightMask: $eveningNightMask\n      eveningOil: $eveningOil\n      eveningSpotTreatment: $eveningSpotTreatment\n      eveningRX: $eveningRX\n      eveningEyeCream: $eveningEyeCream\n    ) {\n      morningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSPF {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOilCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningExfoliator {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningTreatmentMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningNightMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOil {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSpotTreatment {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateMyRoutineMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deletePersonalEvent(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/deletePersonalEventMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $firstName: String\n    $lastName: String\n    $email: String\n    $phoneNumber: String\n    $password: String\n  )", "content": "{\n    updateClientInformation(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      password: $password\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateClientInformationMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $title: String!\n    $notes: String\n    $staff: String!\n    $date: String!\n    $startTime: String!\n    $endTime: String!\n    $duration: Int!\n    $allDay: Boolean\n    $blockTime: Boolean\n  )", "content": "{\n    addPersonalEvent(\n      title: $title\n      notes: $notes\n      staff: $staff\n      date: $date\n      startTime: $startTime\n      endTime: $endTime\n      duration: $duration\n      allDay: $allDay\n      blockTime: $blockTime\n    ) {\n      title\n      notes\n      staff\n      date\n      startTime\n      endTime\n      duration\n      allDay\n      blockTime\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addPersonalEventMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($id: ID, $profilePicture: String)", "content": "{\n    updateClientProfilePicture(id: $id, profilePicture: $profilePicture) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      profilePicture\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateClientProfilePictureMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $unsavedSquareCardID: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    removeOneUnsavedSquareCardIDs(\n      unsavedSquareCardID: $unsavedSquareCardID\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      unsavedSquareCardIDs\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/removeOneUnsavedSquareCardIDsMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deleteClient(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/deleteClientMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deleteAppointment(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/deleteAppointmentMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $_id: ID\n    $title: String\n    $notes: String\n    $date: String\n    $staff: String\n    $startTime: String\n    $endTime: String\n    $duration: Int\n    $allDay: Boolean\n    $blockTime: Boolean\n  )", "content": "{\n    updatePersonalEvent(\n      _id: $_id\n      title: $title\n      notes: $notes\n      date: $date\n      staff: $staff\n      startTime: $startTime\n      endTime: $endTime\n      duration: $duration\n      allDay: $allDay\n      blockTime: $blockTime\n    ) {\n      _id\n      title\n      notes\n      date\n      staff\n      startTime\n      endTime\n      duration\n      allDay\n      blockTime\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updatePersonalEventMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($id: ID, $profilePicture: String)", "content": "{\n    updateAdminProfilePicture(id: $id, profilePicture: $profilePicture) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      profilePicture\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateAdminProfilePictureMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "", "content": "{\n    updateEmployeeInvalidateTokens {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n      createdAt\n      tokenCount\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateEmployeeInvalidateTokensMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $squareCustomerId: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    updateClientSquareID(\n      squareCustomerId: $squareCustomerId\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateClientSquareIDMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $date: String!\n    $surgeryLast3Months: Boolean!\n    $surgeryLast3MonthsNotes: String\n    $anyHealthProblems: Boolean!\n    $anyHealthProblemsNotes: String\n    $listAnyMedications: String\n    $chemPeelsLastMonth: Boolean!\n    $waxingOnFaceLast5Days: Boolean!\n    $accutaneOrPrescription: Boolean!\n    $accutaneOrPrescriptionNotes: String\n    $anyProductsContainingSalicyclicAcid: Boolean\n    $anyProductsContainingGlycolicAcid: Boolean\n    $anyProductsContainingLacticAcid: Boolean\n    $anyProductsContainingExfoliatingScrubs: Boolean\n    $anyProductsContainingVitaminA: Boolean\n    $fillersOrBotox: Boolean!\n    $fillersOrBotoxNotes: String\n    $listKnownAllergies: String\n    $skinFlakyOrItch: Boolean\n    $everDiagnosedWithRosacea: Boolean\n    $pregnantOrNursing: Boolean\n    $ultimateSkinCareGoals: String\n    $anythingElseWeShouldKnow: String\n    $consentFormSignature: String!\n  )", "content": "{\n    updateConsentForm(\n      date: $date\n      surgeryLast3Months: $surgeryLast3Months\n      surgeryLast3MonthsNotes: $surgeryLast3MonthsNotes\n      anyHealthProblems: $anyHealthProblems\n      anyHealthProblemsNotes: $anyHealthProblemsNotes\n      listAnyMedications: $listAnyMedications\n      chemPeelsLastMonth: $chemPeelsLastMonth\n      waxingOnFaceLast5Days: $waxingOnFaceLast5Days\n      accutaneOrPrescription: $accutaneOrPrescription\n      accutaneOrPrescriptionNotes: $accutaneOrPrescriptionNotes\n      anyProductsContainingSalicyclicAcid: $anyProductsContainingSalicyclicAcid\n      anyProductsContainingGlycolicAcid: $anyProductsContainingGlycolicAcid\n      anyProductsContainingLacticAcid: $anyProductsContainingLacticAcid\n      anyProductsContainingExfoliatingScrubs: $anyProductsContainingExfoliatingScrubs\n      anyProductsContainingVitaminA: $anyProductsContainingVitaminA\n      fillersOrBotox: $fillersOrBotox\n      fillersOrBotoxNotes: $fillersOrBotoxNotes\n      listKnownAllergies: $listKnownAllergies\n      skinFlakyOrItch: $skinFlakyOrItch\n      everDiagnosedWithRosacea: $everDiagnosedWithRosacea\n      pregnantOrNursing: $pregnantOrNursing\n      ultimateSkinCareGoals: $ultimateSkinCareGoals\n      anythingElseWeShouldKnow: $anythingElseWeShouldKnow\n      consentFormSignature: $consentFormSignature\n    ) {\n      date\n      surgeryLast3Months\n      surgeryLast3MonthsNotes\n      anyHealthProblems\n      anyHealthProblemsNotes\n      listAnyMedications\n      chemPeelsLastMonth\n      waxingOnFaceLast5Days\n      accutaneOrPrescription\n      accutaneOrPrescriptionNotes\n      anyProductsContainingSalicyclicAcid\n      anyProductsContainingGlycolicAcid\n      anyProductsContainingLacticAcid\n      anyProductsContainingExfoliatingScrubs\n      anyProductsContainingVitaminA\n      fillersOrBotox\n      fillersOrBotoxNotes\n      listKnownAllergies\n      skinFlakyOrItch\n      everDiagnosedWithRosacea\n      pregnantOrNursing\n      ultimateSkinCareGoals\n      anythingElseWeShouldKnow\n      consentFormSignature\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateConsentFormMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($password: String)", "content": "{\n    updateAdminPassword(password: $password) {\n      _id\n      permanentPasswordSet\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateAdminPasswordMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String\n  )", "content": "{\n    addClient(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addClientMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deleteEmployee(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/deleteEmployeeMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "", "content": "{\n    resetNotifications {\n      firstName\n      lastName\n      email\n      phoneNumber\n      employeeRole\n      notifications {\n        new\n        type\n        date\n        time\n        allDay\n        associatedClientFirstName\n        associatedClientLastName\n        newAssociatedStaffFirstName\n        newAssociatedStaffLastName\n        originalAssociatedStaffFirstName\n        originalAssociatedStaffLastName\n        createdByFirstName\n        createdByLastName\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/resetNotificationsMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $employeeRole: [String]\n  )", "content": "{\n    addEmployee(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      employeeRole: $employeeRole\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n      employeeRole\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addEmployeeMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $morningCleanserID: ID\n    $morningTonerID: ID\n    $morningSerumID: ID\n    $morningMoisturizerID: ID\n    $morningSPFID: ID\n    $morningRXID: ID\n    $morningEyeCreamID: ID\n    $eveningOilCleanserID: ID\n    $eveningCleanserID: ID\n    $eveningExfoliatorID: ID\n    $eveningTreatmentMaskID: ID\n    $eveningTonerID: ID\n    $eveningSerumID: ID\n    $eveningMoisturizerID: ID\n    $eveningNightMaskID: ID\n    $eveningOilID: ID\n    $eveningSpotTreatmentID: ID\n    $eveningRXID: ID\n    $eveningEyeCreamID: ID\n  )", "content": "{\n    deleteMyRoutineItem(\n      morningCleanserID: $morningCleanserID\n      morningTonerID: $morningTonerID\n      morningSerumID: $morningSerumID\n      morningMoisturizerID: $morningMoisturizerID\n      morningSPFID: $morningSPFID\n      morningRXID: $morningRXID\n      morningEyeCreamID: $morningEyeCreamID\n      eveningOilCleanserID: $eveningOilCleanserID\n      eveningCleanserID: $eveningCleanserID\n      eveningExfoliatorID: $eveningExfoliatorID\n      eveningTreatmentMaskID: $eveningTreatmentMaskID\n      eveningTonerID: $eveningTonerID\n      eveningSerumID: $eveningSerumID\n      eveningMoisturizerID: $eveningMoisturizerID\n      eveningNightMaskID: $eveningNightMaskID\n      eveningOilID: $eveningOilID\n      eveningSpotTreatmentID: $eveningSpotTreatmentID\n      eveningRXID: $eveningRXID\n      eveningEyeCreamID: $eveningEyeCreamID\n    ) {\n      morningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSPF {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOilCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningExfoliator {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningTreatmentMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningNightMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOil {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSpotTreatment {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/deleteMyRoutineItemMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "addAppointmentMutation(\n    $date: String!\n    $startTime: String!\n    $morningOrEvening: String!\n    $endTime: String!\n    $duration: Int!\n    $price: Int!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $esthetician: String!\n    $squareCustomerId: String\n    $unsavedSquareCardIDs: String\n    $bookedWithCardSquareID: String\n    $treatments: [TreatmentInput]\n    $addOns: [AddOnInput]\n    $notes: String\n  )", "content": "{\n    addAppointment(\n      date: $date\n      startTime: $startTime\n      morningOrEvening: $morningOrEvening\n      endTime: $endTime\n      duration: $duration\n      price: $price\n      esthetician: $esthetician\n      client: {\n        firstName: $firstName\n        lastName: $lastName\n        email: $email\n        phoneNumber: $phoneNumber\n        squareCustomerId: $squareCustomerId\n        unsavedSquareCardIDs: $unsavedSquareCardIDs\n      }\n      treatments: $treatments\n      addOns: $addOns\n      bookedWithCardSquareID: $bookedWithCardSquareID\n      notes: $notes\n    ) {\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      createdAt\n      esthetician\n      client {\n        firstName\n        lastName\n        email\n        phoneNumber\n        squareCustomerId\n        unsavedSquareCardIDs\n      }\n      treatments {\n        name\n        price\n        duration\n      }\n      addOns {\n        name\n        price\n        duration\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addAppointmentMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "subscription", "name": "getUpdatedEmployee($_id: ID)", "content": "{\n    getUpdatedEmployee(_id: $_id) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      employeeRole\n      permanentPasswordSet\n      password\n      tokenCount\n      createdAt\n      profilePicture\n      notifications {\n        _id\n        new\n        type\n        date\n        time\n        allDay\n        associatedClientFirstName\n        associatedClientLastName\n        originalAssociatedStaffFirstName\n        originalAssociatedStaffLastName\n        newAssociatedStaffFirstName\n        newAssociatedStaffLastName\n        createdByFirstName\n        createdByLastName\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/subscriptions/getUpdatedEmployeeSubscription.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "query", "name": "getStations", "content": "{\n    stations \n      @rest(\n          type: \"Station\" \n          path: \"/stations\" \n          method: \"GET\"\n      ) {\n      stationId\n      stationName\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/station/ApolloStation.js", "repo": "ymkmoon_toyseven-react"}}, {"type": "mutation", "name": "getQuestions", "content": "{\n    questions \n      @rest(\n          type: \"Question\" \n          path: \"/voc\" \n          method: \"GET\"\n      ) {\n      id\n      title\n      createdAt\n      username\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/voc/ApolloVoc.js", "repo": "ymkmoon_toyseven-react"}}, {"type": "query", "name": "getVoc($vocId: Int!)", "content": "{\n    voc(vocId: $vocId)\n      @rest(\n          type: \"Voc\" \n          path: \"/voc/search/{args.vocId}\" \n          method: \"GET\"\n      ) {\n          question {\n            id\n            title\n            createdAt\n            content\n          }\n          answer {\n            id\n            adminName\n            createdAt\n            content\n          }\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/voc/ApolloVocView.js", "repo": "ymkmoon_toyseven-react"}}, {"type": "query", "name": "getCategories", "content": "{\n    categories \n      @rest(\n          type: \"Category\" \n          path: \"/voc/categories\" \n          method: \"GET\"\n      ) {\n      id\n      name\n      displayName\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/voc/ApolloVocQuestion.js", "repo": "ymkmoon_toyseven-react"}}, {"type": "mutation", "name": "submitQuestion($body: PublishablePostInput!)", "content": "{\n    question(body: $body) \n      @rest(\n          type: \"Question\" \n          path: \"/voc/question\" \n          method: \"POST\"\n          bodyKey: \"body\"\n      ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/voc/ApolloVocQuestion.js", "repo": "ymkmoon_toyseven-react"}}, {"type": "mutation", "name": "AddGenre($genreInput: GenreInput)", "content": "{\n    addGenre(genreInput: $genreInput) {\n      action\n      animation\n      comedy\n      crime\n      documentation\n      drama\n      european\n      family\n      fantasy\n      history\n      horror\n      music\n      romance\n      scifi\n      thriller\n      war\n      western\n    }\n  }", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "mutation", "name": "RegisterUser($registerInput: RegisterInput)", "content": "{\n    registerUser(registerInput: $registerInput) {\n      id\n      name\n      username\n      email\n      password\n    }\n  }", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "mutation", "name": "LoginUser($loginInput: LoginInput)", "content": "{\n    loginUser(LoginInput: $loginInput) {\n      name\n      username\n      email\n      hulu\n      netflix\n      prime\n      disney\n      hbo\n      watched\n    }\n  }", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "mutation", "name": "UpdateUser($updateUserInput: UpdateUserInput)", "content": "{\n    updateUser(updateUserInput: $updateUserInput) {\n      id\n      name\n      username\n      password\n      email\n      hulu\n      netflix\n      prime\n      disney\n      hbo\n    }\n  }", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "mutation", "name": "AddWatched($addWatched: AddWatched)", "content": "{\n  addWatched(addWatched: $addWatched) {\n    id,\n    username,\n    watched\n  }\n}", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "query", "name": "getMovie($id: ID)", "content": "{\n  getMovie (id: $id){\n    id\n    title\n    description\n    imdb_id\n  }\n}", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Query.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "query", "name": "getVoters($limit: Int = 15, $offset: Int = 0)", "content": "{\n    pagination: proxy_votes_aggregate(distinct_on: voter) {\n      aggregate {\n        count\n      }\n    }\n    voters: proxy_votes(distinct_on: voter, limit: $limit, offset: $offset) {\n      voter\n      balance\n    }\n  }", "metadata": {"commit_hash": "704b2998e1b2fbb8ffc6c509c84d75aeaf37eafe", "file": "webapp/src/gql/myvoteeos.js", "repo": "eoscostarica_MyvoteEOS-proxy"}}, {"type": "query", "name": "", "content": "{\n    exchange {\n      name\n      t_username\n      total_mention\n      url\n      image_url\n    }\n  }", "metadata": {"commit_hash": "704b2998e1b2fbb8ffc6c509c84d75aeaf37eafe", "file": "webapp/src/gql/myvoteeos.js", "repo": "eoscostarica_MyvoteEOS-proxy"}}, {"type": "query", "name": "($account: String!)", "content": "{\n    bp(where: { account: { _eq: $account } }) {\n      account\n      image_url\n      website\n    }\n  }", "metadata": {"commit_hash": "704b2998e1b2fbb8ffc6c509c84d75aeaf37eafe", "file": "webapp/src/gql/myvoteeos.js", "repo": "eoscostarica_MyvoteEOS-proxy"}}, {"type": "mutation", "name": "insertEmail($object: user_email_insert_input!)", "content": "{\n    insert_user_email_one(object: $object) {\n      id\n    }\n  }", "metadata": {"commit_hash": "704b2998e1b2fbb8ffc6c509c84d75aeaf37eafe", "file": "webapp/src/gql/myvoteeos.js", "repo": "eoscostarica_MyvoteEOS-proxy"}}, {"type": "mutation", "name": "GoogleMutation($googleToken: String!)", "content": "{\n          google(token: $googleToken) {\n            _id\n            firstName\n            lastName\n            image\n            email\n            wishListIds\n            wishLists {\n              _id\n              link\n              description\n              categoryIds\n              categories {\n                name\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "mutation", "name": "saveList(\n          $link: String!\n          $categories: [String!]!\n          $userId: String!\n          $description: String!\n        )", "content": "{\n          wishListCreateOne(\n            link: $link\n            categoryIds: $categories\n            userId: $userId\n            description: $description\n          ) {\n            isPublished\n            message\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "query", "name": "getUser($id: MongoID!)", "content": "{\n            userByIdLean(_id: $id) {\n              _id\n              firstName\n              lastName\n              image\n              email\n              wishListIds\n              wishLists {\n                _id\n                link\n                description\n                categoryIds\n                categories {\n                  name\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "mutation", "name": "deleteList($wishListId: String!, $userId: String!)", "content": "{\n          deleteListFromUser(wishListId: $wishListId, userId: $userId) {\n            success\n            message\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "query", "name": "allCategories", "content": "{\n            categoryManyLean {\n              _id\n              name\n            }\n          }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/search.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "query", "name": "wishListManyLean(\n          $limit: Int\n          $skip: Int\n          $wishListManyLeanFilter: FilterFindManyWishListInput\n        )", "content": "{\n          wishListManyLean(\n            limit: $limit\n            skip: $skip\n            filter: $wishListManyLeanFilter\n          ) {\n            link\n            description\n            _id\n            categoryIds\n            categories {\n              _id\n              name\n            }\n            userByWishListId {\n              _id\n              firstName\n              lastName\n              image\n            }\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/search.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "query", "name": "wishListsByCategoryIds(\n          $wishListsByCategoryIdsCategoryIds: [String]\n        )", "content": "{\n          wishListsByCategoryIds(\n            categoryIds: $wishListsByCategoryIdsCategoryIds\n          ) {\n            link\n            description\n            _id\n            categoryIds\n            categories {\n              _id\n              name\n            }\n            userByWishListId {\n              _id\n              firstName\n              lastName\n              image\n            }\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/search.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "query", "name": "($address: String!)", "content": "{\n    ethereum {\n      address(address: { is: $address }) {\n        balances {\n          currency {\n            symbol\n            tokenType\n            name\n          }\n          value\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "06d004aa8ed524a990a587065b50ad7ff107c602", "file": "src/background/index.js", "repo": "withtally_chrome-extension"}}, {"type": "query", "name": "Feed($type: FeedType!)", "content": "{\n            currentUser {\n              login\n            }\n            feed(type: $type) {\n              createdAt\n              score\n              commentCount\n              id\n              postedBy {\n                login\n                html_url\n              }\n              vote {\n                vote_value\n              }\n              repository {\n                name\n                full_name\n                description\n                html_url\n                stargazers_count\n                open_issues_count\n                created_at\n                owner {\n                  avatar_url\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "7329a93316e283725f01eb3a8905af1f84aae288", "file": "client/Feed.ts", "repo": "it-efrem_Apollo-Angular"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n            vote(repoFullName: $repoFullName, type: $type) {\n              score\n              id\n              vote {\n                vote_value\n              }\n            }\n          }", "metadata": {"commit_hash": "7329a93316e283725f01eb3a8905af1f84aae288", "file": "client/Feed.ts", "repo": "it-efrem_Apollo-Angular"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n            submitRepository(repoFullName: $repoFullName) {\n              createdAt\n            }\n          }", "metadata": {"commit_hash": "7329a93316e283725f01eb3a8905af1f84aae288", "file": "client/NewEntry.ts", "repo": "it-efrem_Apollo-Angular"}}, {"type": "mutation", "name": "($signature: String, $password: String)", "content": "{\n    validateFormCredentials(signature: $signature, password: $password)\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "pages/login.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "($signature: String, $password: String)", "content": "{\n    login(signature: $signature, password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "pages/login.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "(\n    $email: String\n    $fullName: String\n    $username: String\n    $dateOfBirth: DateTime\n    $gender: String\n    $password: String\n    $musicInterests: [Int]\n    $gamesInterests: [Int]\n  )", "content": "{\n    createUserAccount(\n      email: $email\n      gender: $gender\n      musicInterests: $musicInterests\n      gamesInterests: $gamesInterests\n      fullName: $fullName\n      username: $username\n      dateOfBirth: $dateOfBirth\n      password: $password\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "pages/register.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "(\n    $fullName: String\n    $username: String\n    $password: String\n    $email: String\n    $gender: String\n  )", "content": "{\n    validateFormCredentials(\n      fullName: $fullName\n      username: $username\n      password: $password\n      email: $email\n      gender: $gender\n    )\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "pages/register.js", "repo": "Nemanja02_Lobbia"}}, {"type": "query", "name": "ProfileData($id: ID)", "content": "{\n    getProfileData(id: $id) {\n      profilePicture\n      username\n      isOnline\n      connections {\n        pending {\n          id\n          username\n          isOnline\n          profilePicture\n          fullName\n        }\n        accepted {\n          id\n          username\n          isOnline\n          profilePicture\n          fullName\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "actions/userActions.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    logout(id: $id) {\n      success\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "actions/userActions.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "($id: ID, $connectionId: ID)", "content": "{\n    success\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "actions/userActions.js", "repo": "Nemanja02_Lobbia"}}, {"type": "query", "name": "ProfileData($id: ID)", "content": "{\n    getProfileData(id: $id) {\n      profilePicture\n      username\n      fullName\n      dateOfBirth\n      createdAt\n      isOnline\n      accountDescription\n      connections {\n        accepted {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "components/ProfileShowcase/ProfileShowcase.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "($query: String)", "content": "{\n    textSearch(query: $query, length: 5) {\n      fullName\n      username\n      profilePicture\n      id\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "components/Navigation/TopBar.js", "repo": "Nemanja02_Lobbia"}}, {"type": "query", "name": "allUsers", "content": "{\n        users {\n            _id\n            username\n            bugs {\n                _id\n                bugName\n            }\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/queries.js", "repo": "ggeils_Pest-Control"}}, {"type": "query", "name": "singleUser($username: String!)", "content": "{\n        user(username: $username) {\n            _id\n            username\n            bugs {\n                _id\n                bugName\n                description\n            }\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/queries.js", "repo": "ggeils_Pest-Control"}}, {"type": "query", "name": "AllBugs", "content": "{\n        bugs {\n            _id\n            bugName\n            productName\n            date\n            severity\n            description\n            reproduction\n            status\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/queries.js", "repo": "ggeils_Pest-Control"}}, {"type": "query", "name": "singleBug($bugId: ID!)", "content": "{\n        bug(bugId: $bugId) {\n            _id\n            bugName\n            productName\n            date\n            severity\n            description\n            reproduction\n            status\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/queries.js", "repo": "ggeils_Pest-Control"}}, {"type": "query", "name": "userLogged", "content": "{\n        userLoged {\n            _id\n            username\n            name\n            jobTitle\n            company\n            currentProject\n            bugsFixed\n            bugs {\n                _id\n                bugName\n                productName\n                date\n                severity\n                description\n                reproduction\n                status\n            }\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/queries.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n    token\n    user {\n        _id\n        username\n    }\n    }\n}", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "addUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n    token\n    user {\n        _id\n        username\n        email\n        password\n    }\n    }\n}", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "updateprofile($name: String, $jobTitle: String, $company: String, $currentProject: String)", "content": "{\n        updateprofile(name: $name, jobTitle: $jobTitle, company: $company, currentProject: $currentProject) {\n            _id\n            username\n            name\n            jobTitle\n            company\n            currentProject\n            bugsFixed\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "addBug($bugName: String, $productName: String, $severity: String, $description: String, $reproduction: String)", "content": "{\n        addBug(bugName: $bugName, productName: $productName, severity: $severity, description: $description, reproduction: $reproduction) {\n            _id\n            bugName\n            productName\n            date\n            severity\n            description\n            reproduction\n            status\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "updateBug($bugId: ID!, $description: String!, $reproduction: String!)", "content": "{\n        updateBug(BugId: $bugId, description: $description, reproduction: $reproduction) {\n            _id\n            bugName\n            productName\n            date\n            severity\n            description\n            reproduction\n            status\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "BugFixed($bugId: ID!)", "content": "{\n        BugFixed(BugId: $bugId) {\n            _id\n            bugName\n            productName\n            date\n            severity\n            description\n            reproduction\n            status\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "deleteBUG($bugId: ID!)", "content": "{\n    deleteBug(BugId: $bugId) {\n      _id\n      username\n      bugs {\n        _id\n        bugName\n      }\n    }\n  }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "query", "name": "CPU", "content": "{\n    cpu {\n      percentage\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/CpuUsage.js", "repo": "mtvu_nb-resource1"}}, {"type": "subscription", "name": "CPU", "content": "{\n    cpu {\n      percentage\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/CpuUsage.js", "repo": "mtvu_nb-resource1"}}, {"type": "query", "name": "Traffic", "content": "{\n    messages {\n      title\n      description\n      color\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Messages.js", "repo": "mtvu_nb-resource1"}}, {"type": "subscription", "name": "Traffic", "content": "{\n    messages {\n      title\n      description\n      color\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Messages.js", "repo": "mtvu_nb-resource1"}}, {"type": "query", "name": "Distribution", "content": "{\n    distribution {\n      region\n      percentage\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Distribution.js", "repo": "mtvu_nb-resource1"}}, {"type": "subscription", "name": "Distribution", "content": "{\n    distribution {\n      region\n      percentage\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Distribution.js", "repo": "mtvu_nb-resource1"}}, {"type": "query", "name": "Traffic", "content": "{\n    traffic {\n      dps {\n        timestamp\n        value\n      }\n      total\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Traffic.js", "repo": "mtvu_nb-resource1"}}, {"type": "subscription", "name": "Traffic", "content": "{\n    traffic {\n      dps {\n        timestamp\n        value\n      }\n      total\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Traffic.js", "repo": "mtvu_nb-resource1"}}, {"type": "mutation", "name": "", "content": "{\n            deleteListing(id: \"2a376028-384e-4440-b941-a5c1baf4be0c\")\n          }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/web/src/modules/listing/delete/DemoDelete.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "SendForgotPasswordEmailMutation($email: String!)", "content": "{\n    sendForgotPasswordEmail(email: $email)\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/ForgotPasswordController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "RegisterMutation($email: String!, $password: String!)", "content": "{\n    register(email: $email, password: $password) {\n      path\n      message\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/RegisterController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "UpdateListingMutation(\n    $listingId: String!\n    $input: UpdateListingInput!\n  )", "content": "{\n    updateListing(listingId: $listingId, input: $input)\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/UpdateListing/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "CreateMessageMutation($message: MessageInput!)", "content": "{\n    createMessage(message: $message)\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/CreateMessage/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "query", "name": "ViewListingQuery($id: String!)", "content": "{\n    viewListing(id: $id) {\n      id\n      name\n      category\n      description\n      price\n      beds\n      guests\n      longitude\n      latitude\n      amenities\n      pictureUrl\n      owner {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/ViewListing/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "CreateListingMutation(\n    $picture: Upload,\n    $name: String!\n    $category: String!\n    $description: String!\n    $price: Int!\n    $beds: Int!\n    $guests: Int!\n    $latitude: Float!\n    $longitude: Float!\n    $amenities: [String!]!\n  )", "content": "{\n    createListing(\n      input: {\n        picture: $picture\n        name: $name\n        category: $category\n        description: $description\n        price: $price\n        beds: $beds\n        guests: $guests\n        latitude: $latitude\n        longitude: $longitude\n        amenities: $amenities\n      }\n    )\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/CreateListing/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "LoginMutation($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      errors {\n        path\n        message\n      }\n      sessionId\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/LoginController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "LogoutMutation", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/LogoutController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "query", "name": "MeQuery", "content": "{\n    me {\n      email\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/auth/AuthRoute.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "query", "name": "FindListingsQuery", "content": "{\n    findListings {\n      id\n      name\n      pictureUrl\n      owner {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/FindListings/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "query", "name": "ViewMessagesQuery($listingId: String!)", "content": "{\n    messages(listingId: $listingId) {\n      text\n      user {\n        id\n        email\n      }\n      listingId\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/ViewMessages/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "subscription", "name": "NewMessageSubscription($listingId: String!)", "content": "{\n    newMessage(listingId: $listingId) {\n      text\n      user {\n        id\n        email\n      }\n      listingId\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/ViewMessages/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "ForgotPasswordChangeMutation($newPassword: String!, $key: String!)", "content": "{\n    forgotPasswordChange(newPassword: $newPassword, key: $key) {\n      path\n      message\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/ChangePasswordController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "query", "name": "SearchListingsQuery(\n    $input: SearchListingsInput\n    $offset: Int!\n    $limit: Int!\n  )", "content": "{\n    searchListings(input: $input, offset: $offset, limit: $limit) {\n      id\n      name\n      category\n      description\n      price\n      beds\n      guests\n      longitude\n      latitude\n      amenities\n      pictureUrl\n      owner {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/SearchListings/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "query", "name": "HAVE_USER_ADDRESS($platformId: String!)", "content": "{\n    haveUserAddress(platformId: $platformId) {\n      haveUserAddress\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "bot/src/graphql-operations/queries.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "USER($platformId: String!, $platform: String!, $guildId: String)", "content": "{\n    userByPlatformId(\n      platformId: $platformId\n      platform: $platform\n      guildId: $guildId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "bot/src/graphql-operations/queries.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "ROLES_BY_USER_AND_GUILD($guildId: String!, $platformId: String!)", "content": "{\n    rolesByUserAndGuild(input: { guildId: $guildId, platformId: $platformId }) {\n      id\n      name\n      description\n      purchaseUrl\n      balance\n      token {\n        chainId\n        contractAddress\n        type\n        website\n        iconUrl\n      }\n      isWorthy\n      platformId\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "bot/src/graphql-operations/queries.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "UPDATE_ROLE_BY_BOT(\n    $platform: String!\n    $guildPlatformId: String!\n    $guildName: String!\n    $guildDescription: String\n    $guildIconUrl: String!\n    $roleName: String!\n    $rolePlatformId: String!\n    $roleDescription: String\n    $balance: String!\n    $chainId: String!\n    $contractAddress: String!\n    $purchaseUrl: String!\n  )", "content": "{\n    updateRoleByBot(\n      platform: $platform\n      guildPlatformId: $guildPlatformId\n      guildName: $guildName\n      guildDescription: $guildDescription\n      guildIconUrl: $guildIconUrl\n      roleName: $roleName\n      rolePlatformId: $rolePlatformId\n      roleDescription: $roleDescription\n      balance: $balance\n      chainId: $chainId\n      contractAddress: $contractAddress\n      purchaseUrl: $purchaseUrl\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "bot/src/graphql-operations/mutations.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "mergeWithUser($id: String!)", "content": "{\n    mergeWithUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/pages/LoginPage/LoginPage.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "FIND_GAME_BY_ID($id: String!)", "content": "{\n    game: game(id: $id) {\n      id\n      createdAt\n      updatedAt\n      playedAt\n      mintedAt\n      minterAddress\n      ownerAddress\n      tokenId\n      externalUrl\n      location\n      event\n      moves\n      black\n      white\n      winner\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/GameCell/GameCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "FIND_GAME_BY_ID($id: String!)", "content": "{\n    game: game(id: $id) {\n      id\n      createdAt\n      updatedAt\n      playedAt\n      mintedAt\n      moves\n      movesHash\n      black\n      white\n      userAddress\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/EditGameCell/EditGameCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "UpdateGameMutation($id: String!, $input: UpdateGameInput!)", "content": "{\n    updateGame(id: $id, input: $input) {\n      id\n      createdAt\n      updatedAt\n      playedAt\n      mintedAt\n      moves\n      movesHash\n      black\n      white\n      userAddress\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/EditGameCell/EditGameCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "CreateUserMutation($input: CreateUserInput!)", "content": "{\n    createUser(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/NewUser/NewUser.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "USERS", "content": "{\n    users {\n      address\n      authDetailId\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/UsersCell/UsersCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "FIND_USER_BY_ID($id: String!)", "content": "{\n    user: user(id: $id) {\n      address\n      authDetailId\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/EditUserCell/EditUserCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "UpdateUserMutation($id: String!, $input: UpdateUserInput!)", "content": "{\n    updateUser(id: $id, input: $input) {\n      address\n      authDetailId\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/EditUserCell/EditUserCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "CreateGameMutation($input: CreateGameInput!)", "content": "{\n    createGame(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/NewGame/NewGame.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "DeleteUserMutation($id: String!)", "content": "{\n    deleteUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/Users/Users.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "MintGameMutation($id: String!)", "content": "{\n    mintGame(id: $id) {\n      transactionHash\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/Game/Game.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "FIND_USER_BY_ID($address: String!)", "content": "{\n    user: user(address: $address) {\n      address\n      authDetailId\n      gamesOwned {\n        id\n        createdAt\n        updatedAt\n        playedAt\n        mintedAt\n        moves\n        black\n        white\n        externalUrl\n      }\n      gamesMinted {\n        id\n        createdAt\n        updatedAt\n        playedAt\n        mintedAt\n        moves\n        black\n        white\n        externalUrl\n      }\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/UserCell/UserCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "GAME_PAGE($page: Int)", "content": "{\n    gamePage(page: $page) {\n      games {\n        id\n        createdAt\n        updatedAt\n        playedAt\n        mintedAt\n        moves\n        black\n        white\n        externalUrl\n      }\n      count\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/GamesCell/GamesCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "", "content": "{\n      findAdopterById(_id: \"${this.t_ID}\"){\n        name,\n        email,\n        pic,\n        location{\n          lat,\n          lng,\n        },\n        documents{\n          type,\n          path\n        }\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/userinfo/feature/src/lib/userinfo.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n      findDogById(_id: \"${this.dogID}\"){\n        name\n        dob\n        breed\n        gender\n        breed\n        about\n        weight\n        height\n        temperament\n        furLength\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/updateorremovedog/feature/src/lib/updateorremovedog.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n      updateDog(\n        dogId: \"${this.dogID}\",\n        breed: \"${this.inputBreed}\",\n        gender: \"${this.inputGender}\",\n        dob: \"${this.inputDob}\",\n        about: \"${this.inputAbout}\",\n        height: ${this.inputHeight},\n        weight: ${this.inputWeight},\n        furlength: \"${this.inputFurlength}\",\n        temperament: [${temperamentString1}])\n      {\n        _id\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/updateorremovedog/feature/src/lib/updateorremovedog.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n      deleteDog(dogId: \"${this.dogID}\"){\n        name\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/updateorremovedog/feature/src/lib/updateorremovedog.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n          findOrgMemberById(_id: \"${user?.uid}\") {\n            _id\n            organisation\n          }\n        }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/adoptionprocess/feature/src/lib/adoptionprocess.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{ findOrgById(_id: \"${this.orgId}\") {\n              potentialAdopters{\n                dogId\n                adopter {\n                  _id\n                  name\n                  pic\n                }\n              }\n            }\n            }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/adoptionprocess/feature/src/lib/adoptionprocess.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{ findDogById(_id: \"${adopter.dogId}\") {\n                  _id\n                  name\n                  pics\n                }\n                }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/adoptionprocess/feature/src/lib/adoptionprocess.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n          findAdopterById(_id: \"${this.t_id}\"){ \n            name,\n            email,\n            pic\n          }\n        }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/userprofile/feature/src/lib/userprofile.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n                uploadDoc(\n                  adopterId: \"${this.userID}\",\n                  type: \"POR\",\n                  path: \"${this.imagePORString}\"\n                )\n      \n              }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/uploaddoc/feature/src/lib/uploaddoc.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n            uploadDoc(\n              adopterId: \"${this.userID}\",\n              type: \"BSS\",\n              path: \"${this.imageBSString}\"\n            )\n      \n          }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/uploaddoc/feature/src/lib/uploaddoc.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n            uploadDoc(\n              adopterId: \"${this.userID}\",\n              type: \"ML\",\n              path: \"${this.imageMLString}\"\n            )\n      \n          }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/uploaddoc/feature/src/lib/uploaddoc.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n      uploadDoc(\n        adopterId: \"${this.userID}\",\n        type: \"ID\",\n        path: \"${this.imageIDString}\"\n      )\n\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/uploaddoc/feature/src/lib/uploaddoc.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n      getUserType(id: \"${id}\")\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/login/feature/src/lib/login.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${user.user?.uid}\")\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/login/feature/src/lib/login.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n              createAdopter(adopter: {\n                _id: \"${user.user?.uid}\",\n                name: \"${user.user?.displayName}\",\n                email: \"${user.user?.email}\",\n                pic: \"\",\n                uploadedDocs: false,\n              })\n              {\n                name\n              }\n            }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/login/feature/src/lib/login.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n      findDogById(_id: \"${this.dogID}\") {\n        name\n        pics\n        organisation {\n          name\n        }\n        usersLiked{\n          _id\n          name\n          pic\n        }\n        about\n        height\n        weight\n        breed\n        temperament\n        furLength\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/dashboard/feature/src/lib/dashboard.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n              clickedHeartIcon(userId: \"${id}\", dogId: \"${this.dogID}\") {\n                _id\n              }\n            }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/dashboard/feature/src/lib/dashboard.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n              clickedTrashIcon(userId: \"${id}\", dogId: \"${this.dogID}\") {\n                name\n              }\n            }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/dashboard/feature/src/lib/dashboard.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{ \n        sendMessage(orgId: \"${this.orgID}\", adopterId: \"${this.userID}\", senderId: \"${this.userID}\", message: \"${messageToSend}\", dogId: \"${this.dogId}\"){\n        adopterId\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/appointmentpage/feature/src/lib/appointmentpage.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n          getUserType(id: \"${this.currentUserId}\")\n        }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n              findChatsByAdopterId(adopterId: \"${this.currentUserId}\"){\n                adopterId\n                orgId\n                dogId\n                messages{\n                  userId\n                  message\n                }\n                lastMessageAdopter\n              }\n            }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n                  findOrgById(_id: \"${chat.orgId}\"){\n                    name\n                    logo\n                  }\n                }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n                    findDogById(_id: \"${chat.dogId}\"){\n                      name\n                      pics\n                    }\n                  }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n              findChatsByOrgmemberId(orgmemberId: \"${this.currentUserId}\"){\n                adopterId\n                orgId\n                dogId\n                messages{\n                  userId\n                  message\n                }\n                lastMessageOrg\n              }\n            }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n                  findAdopterById(_id: \"${chat.adopterId}\"){\n                    name\n                    pic\n                  }\n                }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n                    findDogById(_id: \"${chat.dogId}\"){\n                      name\n                      pics\n                    }\n                  }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${this.currentUserId}\")\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${this.currentUserId}\")\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n      getUserType(id: \"${this.currentUserId}\")\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${this.currentUserId}\")\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n          getUserType(id: \"${this.currentUserId}\")\n        }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n                findChatByOrgIdAndAdopterId(orgId: \"${this.orgID}\", adopterId: \"${this.userID}\", dogId: \"${this.dogId}\"){\n                  messages{\n                    userId\n                    message\n                  },\n                  disabled\n                  dogId\n                }\n              }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n                  findOrgById(_id: \"${this.orgID}\"){\n                    name\n                  }\n                }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n                    updateLastMessageAdopter(orgId: \"${this.orgID}\", adopterId: \"${this.userID}\", dogId: \"${this.dogId}\")\n                  }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n                findOrgMemberById(_id: \"${this.currentUserId}\"){\n                  organisation\n                }\n              }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n                  findChatByOrgIdAndAdopterId(orgId: \"${this.orgID}\", adopterId: \"${this.userID}\", dogId: \"${this.dogId}\"){\n                    messages{\n                      userId\n                      message\n                    }\n                    dogId\n                  }\n                }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n                    findAdopterById(_id: \"${this.userID}\"){\n                      name\n                    }\n                  }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n                    updateLastMessageOrg(orgId: \"${this.orgID}\", adopterId: \"${this.userID}\", dogId: \"${this.dogId}\")\n                  }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n        sendMessage(orgId: \"${this.orgID}\", adopterId: \"${this.userID}\", senderId: \"${this.currentUserId}\", message: \"${this.newMsg}\", dogId: \"${this.dogId}\"){\n          orgId\n        }\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n        sendMessage(orgId: \"${this.orgID}\", adopterId: \"${this.userID}\", senderId: \"${this.orgID}\", message: \"${this.newMsg}\", dogId: \"${this.dogId}\"){\n          orgId\n        }\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n      getUserType(id: \"${this.currentUserId}\")\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${this.currentUserId}\")\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${this.currentUserId}\")\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${this.currentUserId}\")\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chat/feature/src/lib/chat.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${user?.uid}\") {\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgprofile/feature/src/lib/orgprofile.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n      findOrgById(_id: \"${this.orgId}\") {\n        name\n        dateFounded\n        location {\n          lat\n          lng\n        }\n        totalDogs\n        totalAdoptions\n        logo\n        contactInfo {\n          website\n          twitter\n          facebook\n          instagram\n        }\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgprofile/feature/src/lib/orgprofile.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n      getStatistic(orgId: \"${this.orgId}\") {\n        createdTimeStamps\n        createdDogs {\n          _id\n          dob\n          breed\n          gender\n        }\n        inProcessTimeStamps\n        inProcessDogs {\n          _id\n          dob\n          breed\n          gender\n        }\n        adoptedTimeStamps\n        adoptedDogs {\n          _id\n          dob\n          breed\n          gender\n        }\n        rejectedTimeStamps\n        rejectedDogs {\n          _id\n          dob\n          breed\n          gender\n        }\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgprofile/feature/src/lib/orgprofile.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${user?.uid}\") {\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgprofile/feature/src/lib/orgprofile.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${user?.uid}\") {\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgprofile/feature/src/lib/orgprofile.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${user?.uid}\") {\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgprofile/feature/src/lib/orgprofile.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        getUserType(id: \"${user?.uid}\") {\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgprofile/feature/src/lib/orgprofile.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n          findOrgMemberById(_id: \"${this.t_ID}\"){\n            organisation\n            role\n          }\n        }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgsettings/feature/src/lib/orgsettings.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n            findOrgById(_id: \"${this.t_OrgID}\"){\n              name\n              about\n              dateFounded\n              location{\n                lat\n                lng\n              }\n              rulesReq\n              contactInfo{\n                _id\n                email\n                phone\n                website\n                facebook\n                instagram\n                twitter\n              }\n              logo\n              members{\n                _id\n                name\n                email\n                role\n              }\n              totalAdoptions\n              totalDogs\n            }\n          }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgsettings/feature/src/lib/orgsettings.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n      updateOrg(_id: \"${this.t_OrgID}\",\n        org: {\n          _id: \"${this.t_OrgID}\",\n          name: \"${this.oName}\"\n          about: \"${this.about}\"\n          dateFounded: \"${date.getFullYear()}-${date.getMonth()}-${date.getDate()}\"\n          location: {\n            lat: ${this.lat}\n            lng: ${this.lng}\n          }\n          contactInfo: {\n            _id: \"${this.conInfoId}\"\n          }\n          members: [${orgMembersString}]\n          totalAdoptions: ${this.totalAdoptions}\n          totalDogs: ${this.totalDogs}\n        }\n      ){\n        _id\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgsettings/feature/src/lib/orgsettings.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n      createOrg(org:{\n        _id: \"\",\n        name: \"${this.oName}\",\n        about: \"${this.about}\",\n        dateFounded: \"${this.date}\",\n        totalAdoptions: 0,\n        totalDogs: 0,\n        location:{\n          lat: ${Number(this.latitude)},\n          lng: ${Number(this.longitude)},\n        },\n        rulesReq: \"${this.rulesReq}\",\n        contactInfo:{\n          _id: \"\",\n          email: \"${this.email}\",\n          phone: \"${this.phone}\",\n          website: \"${this.website}\",\n          facebook: \"${this.facebook}\",\n          instagram: \"${this.instagram}\",\n          twitter: \"${this.twitter}\"\n        },\n        logo: \"${this.imageString}\"\n      })\n      {\n        _id\n        name\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/addorg/feature/src/lib/addorg.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n            createOrgMember(member:{\n              _id: \"${id}\",\n              name: \"${o.name}\",\n              email: \"${o.email}\",\n              role: \"${o.role}\",\n              organisation: \"${this.oId}\",\n              verification: \"${o.verification}\"\n            }){\n              _id\n            }\n          }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/addorg/feature/src/lib/addorg.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n      createAdopter(adopter: {\n        _id: \"${uid}\",\n        name: \"${this.uName}\",\n        email: \"${this.email}\",\n        pic: \"${this.imageString}\",\n        uploadedDocs: false,\n      })\n      {\n        name\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/signup/feature/src/lib/signup.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n          findOrgMemberById(_id: \"${this.uid}\") {\n            organisation\n          } \n        }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/owneddogs/feature/src/lib/owneddogs.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n            findOrgById(_id: \"${this.orgId}\") {\n              name\n            }\n          }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/owneddogs/feature/src/lib/owneddogs.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n            findDogsByOrgId(_id: \"${this.orgId}\") {\n              _id\n              name\n              dob\n              pics\n              breed\n              usersLiked{\n                name\n              }\n              organisation{\n                name\n              }\n            }\n          }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/owneddogs/feature/src/lib/owneddogs.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n          findOrgMemberById(_id: \"${this.uid}\") {\n            organisation \n          }\n        }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/adddog/feature/src/lib/adddog.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n            createDog(dog: {\n              _id: \"new_id\",\n              name: \"${this.inputName}\",\n              dob: \"${this.inputDOB}\",\n              gender: \"${this.inputGender}\",\n              pics : [\"${this.imageString}\"],\n              breed: \"${this.inputBreed}\",\n              about: \"${this.inputAbout}\",\n              weight: ${this.inputWeight},\n              height: ${this.inputHeight},\n              furLength: \"${this.inputFurlength}\",\n              temperament: ${temp}}, orgId:\"${this.orgId}\") {\n                name\n              }\n            }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/adddog/feature/src/lib/adddog.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n      findDogsLikedByUser(userId: \"${this.userId}\") {\n        name\n        dob\n        height \n        weight\n        breed\n        furLength\n        temperament\n        pics\n        about\n        organisation{\n          _id\n          name\n        }\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/userlikes/feature/src/lib/userlikes.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n      findDogs(na : true){\n        _id\n        name\n        dob\n        gender\n        pics\n        breed\n        organisation{\n          name\n          location{\n            lat\n            lng\n          }\n        }\n        height\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "apps/pawdopt/src/app/home/home.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "", "content": "{\n        findAdopterById(_id: \"${this.t_ID}\"){\n          dogsLiked{\n            _id\n          }\n          dogsDisliked{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "apps/pawdopt/src/app/home/home.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n        removeDogFromAdopterDogsLikedOrDisliked(\n          userId: \"${this.t_ID}\",\n          dogId: \"${this.avatars[this.currentIndex]._id}\"\n        ){  \n          _id\n        }\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "apps/pawdopt/src/app/home/home.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n        userSwipesRight(userId: \"${this.t_ID}\", dogId: \"${this.avatars[index]._id}\") {\n          name\n        }\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "apps/pawdopt/src/app/home/home.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "", "content": "{\n        userSwipesLeft(userId: \"${this.t_ID}\", dogId: \"${this.avatars[index]._id}\") {\n          name\n        }\n      }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "apps/pawdopt/src/app/home/home.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "lists($url: String!)", "content": "{\n    lists(url: $url) {\n      id_wishlist\n      name\n      listUrl\n      shareUrl\n      nbProducts\n      default\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/queries/getlists.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "query", "name": "getProducts($listId: Int!, $url: String!)", "content": "{\n    products(listId: $listId, url: $url) {\n      datas\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/queries/getproducts.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "renameList($name: String!, $url: String!, $listId: Int!)", "content": "{\n    renameList(name: $name, url: $url, listId: $listId) {\n      message\n      success\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/renamelist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "addToList($listId: Int!, $productId: Int!, $quantity: Int!, $productAttributeId: Int!, $url: String!)", "content": "{\n    addToList(\n      listId: $listId\n      productId: $productId\n      quantity: $quantity\n      productAttributeId: $productAttributeId\n      url: $url\n    ) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/addtolist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "shareList($listId: Int!, $userId: Int!)", "content": "{\n    shareList(listId: $listId, userId: $userId) {\n      url\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/sharelist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "removeFromList($listId: Int!, $productId: Int!, $productAttributeId: Int!, $url: String!)", "content": "{\n    removeFromList(listId: $listId, productId: $productId, productAttributeId: $productAttributeId, url: $url) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/removeFromList.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "createList($name: String!, $url: String!)", "content": "{\n    createList(name: $name, url: $url) {\n      message\n      datas {\n        name\n        id_wishlist\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/createlist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "deleteList($listId: Int!, $url: String!)", "content": "{\n    deleteList(listId: $listId, url: $url) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/deletelist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "query", "name": "profiles", "content": "{\n  profiles {\n    _id\n    username\n    email\n    password\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "query", "name": "profile($profileId: ID!)", "content": "{\n  profile(profileId: $profileId) {\n    _id\n    username\n    email\n    password\n    kitchen {\n      _id\n      name\n      quantity\n      uom\n      refrigerated\n      expires\n      purchaseDate\n    }\n    friends {\n      _id\n      username\n    }\n    recipes {\n      _id\n      name\n      instructions\n      minutes\n      ingredients {\n        _id\n        name\n        quantity\n        uom\n        refrigerated\n        expires\n        purchaseDate\n      }\n      reactions {\n        _id\n        reactionBody\n        username\n        createdAt\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "query", "name": "Products", "content": "{\n  products {\n    _id\n    name\n    quantity\n    uom\n    refrigerated\n    expires\n    purchaseDate\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "query", "name": "Products($productId: ID!)", "content": "{\n  product(productId: $productId) {\n    _id\n    name\n    quantity\n    uom\n    refrigerated\n    expires\n    purchaseDate\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "query", "name": "recipe", "content": "{\n    _id\n    name\n    instructions\n    minutes\n    ingredients\n    reactions\n  }", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "query", "name": "recipes", "content": "{\n    recipe {\n      _id\n      name\n      instructions\n      minutes\n      ingredients\n      reactions\n    }\n  }", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "addProfile($username: String!, $email: String!, $password: String!)", "content": "{\n  addProfile(username: $username, email: $email, password: $password) {\n    token\n    profile {\n      _id\n      username\n      kitchen {\n        _id\n        name\n        quantity\n        uom\n        refrigerated\n        expires\n        purchaseDate\n      }\n      friends {\n        friends {\n          _id\n          username\n        }\n        recipes {\n          _id\n          name\n          instructions\n          minutes\n          ingredients {\n            _id\n            name\n            quantity\n            uom\n            refrigerated\n            expires\n            purchaseDate\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n  login(email: $email, password: $password) {\n    token\n    profile {\n      _id\n      username\n      email\n      kitchen {\n        _id\n        name\n        quantity\n        uom\n        refrigerated\n        expires\n        purchaseDate\n      }\n      friends {\n        _id\n        username\n      }\n      recipes {\n        _id\n        name\n        instructions\n        minutes\n        ingredients {\n          _id\n          name\n          quantity\n          uom\n          refrigerated\n          expires\n          purchaseDate\n        }\n        reactions {\n          _id\n          reactionBody\n          username\n          createdAt\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "Mutation($profileId: ID!, $friend: String!)", "content": "{\n  addFriend(profileId: $profileId, friend: $friend) {\n    _id\n    username\n    email\n    password\n    kitchen {\n      _id\n      name\n      quantity\n      uom\n      refrigerated\n      expires\n      purchaseDate\n    }\n    friends {\n      _id\n      username\n      email\n    }\n    recipes {\n      _id\n      name\n      instructions\n      minutes\n      ingredients {\n        _id\n        name\n        quantity\n        uom\n        refrigerated\n        expires\n        purchaseDate\n      }\n      reactions {\n        _id\n        reactionBody\n        username\n        createdAt\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "addProduct($profileId: String!, $productId: ID!)", "content": "{\n    addProduct(profileId: $profileId, product: $product) {\n      profile {\n        _id\n        username\n        kitchen\n        friends\n        recipes\n      }\n    }\n  }", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "removeProduct($profileId: String!, $productId: ID!)", "content": "{\n    removeProduct(profileId: $profileId, product: $product) {\n      profile {\n        _id\n        username\n        kitchen\n        friends\n        recipes\n      }\n    }\n  }", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "Mutation($product: ProductInput)", "content": "{\n  addProduct(product: $product) {\n    _id\n    name\n    quantity\n    uom\n    refrigerated\n    expires\n    purchaseDate\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "Mutation($recipe: RecipeInput)", "content": "{\n  addRecipe(recipe: $recipe) {\n    _id\n    name\n    instructions\n    minutes\n    reactions {\n      _id\n      reactionBody\n      username\n      createdAt\n    }\n    ingredients {\n      _id\n \n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "addFavRecipe($profileId: String!, $recipeId: ID!)", "content": "{\n    profile {\n      _id\n      username\n      kitchen\n      friends\n      recipes\n    }\n  }", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "query", "name": "product($id:Int)", "content": "{\n        product(id:$id){\n            name,\n            locality,\n            aggregate_rating,\n        }\n    }", "metadata": {"commit_hash": "7be103722feda1e98931c7fc66ed44555445fb87", "file": "graphqlapp/src/Home.js", "repo": "Aakashdeveloper_edu_feb_React_22"}}, {"type": "query", "name": "getAccountRegistrations($owner: String)", "content": "{\n    account(id: $owner) {\n      registrations(orderBy: expiryDate) {\n        expiryDate\n        domain {\n          labelName\n          labelhash\n          name\n          isMigrated\n          parent {\n            name\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n  }", "metadata": {"commit_hash": "d7b9e0f01a162bbbf76d1b610315b400ded036ad", "file": "src/services/ApiService/Ens/queries.ts", "repo": "ubiq_pyrus"}}, {"type": "mutation", "name": "UpdateProfile($profile: ProfileInput)", "content": "{\n    updateProfile(profile: $profile)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/updateProfile.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "CreateProfile($username: String)", "content": "{\n    createProfile(username: $username) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/createProfileMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "SendMessage ($author: ID, $recipient: ID, $message: String)", "content": "{\n    sendMessage (author: $author, recipient: $recipient, message: $message)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/sendMessage.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "BlockContact($username: String, $timestamp: Float)", "content": "{\n    blockContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/blockContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "RemoveContact($username: String, $timestamp: Float)", "content": "{\n    removeContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/removeContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "UnblockContact($username: String, $timestamp: Float)", "content": "{\n    unblockContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/unblockContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "AddContact($username: String, $timestamp: Float)", "content": "{\n    addContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/addContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "DeleteProfile($username: String)", "content": "{\n    createPublicProfile(username: $username)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/deleteProfileMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "InitializeP2PDNA($requirements: Requirements)", "content": "{\n    initializeP2PDNA(requirements: $requirements) {\n      Boolean\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/initializeP2PDNA.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "FetchRequestAndJoinP2PComm", "content": "{\n    fetchRequestAndJoinP2PComm {\n        id\n        members {\n          me {\n            id\n            username\n          }\n          conversant {\n            id\n            username\n          }\n        }\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/requests/mutations/fetchRequestAndJoinP2PCommMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "RequestToChat($sender: ID, $recipient: ID)", "content": "{\n    requestToChat(sender: $sender, recipient: $recipient)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/requests/mutations/requestToChatMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "AcceptRequest($sender: ID)", "content": "{\n    acceptRequest(sender: $sender)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/requests/mutations/acceptRequestMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "InitializeP2PDNA($properties: Properties)", "content": "{\n    initializeP2PDNA(properties: $properties) {\n      id\n      creator\n      conversant\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/p2pcomm/mutations/initializeP2PDNAMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "GetP2PCommInstances", "content": "{\n    getP2PCommInstances {\n      id\n      members {\n        me {\n          id\n          username\n        }\n        conversant {\n          id\n          username\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/p2pcomm/query/getP2PCommInstancesQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "PrintProperties", "content": "{\n    printProperties \n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/printProperties.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "UserAddress ($username: String)", "content": "{\n    userAddress(username: $username) {\n        username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/userAddressQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "GetMessageDNAs", "content": "{\n    getMessageDNAs {\n      id\n      hash\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/getMessageDNAs.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "AllAgents", "content": "{\n    allAgents {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/allAgentsQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "ListBlocked", "content": "{\n    listBlocked {\n        agent_id\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/listBlockedQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "Username($address: String)", "content": "{\n    username(address: $address)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/usernameQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "Me", "content": "{\n    me {\n        id\n        username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/meQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "ListContacts", "content": "{\n    contacts {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/listContactsQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "SendMessage(\n    $author: ID\n    $recipient: ID\n    $message: String\n    $properties: Properties\n  )", "content": "{\n    sendMessage(\n      author: $author\n      recipient: $recipient\n      message: $message\n      properties: $properties\n    ) {\n      author\n      recipient\n      timestamp\n      payload\n      address\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/messages/mutations/sendMessageMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "DeleteMessages($instanceId: ID, $addresses: [ID])", "content": "{\n    deleteMessages(instanceId: $instanceId, addresses: $addresses)\n    Boolean\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/messages/mutations/deleteMessages.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "UpdateMessage($instanceId: ID, $id: ID, $message: String)", "content": "{\n    updateMessage(instanceId: $instanceId, id: $id, message: $message)\n    Boolean\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/messages/mutations/updateMessage.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "GetConversationFromIds(\n    $members: Requirements\n    $properties: Properties\n  )", "content": "{\n    getConversationFromIds(members: $members, properties: $properties) {\n      name\n      address\n      instanceId\n      messages {\n        author\n        authorUsername\n        recipient\n        timestamp\n        payload\n        address\n      }\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/messages/query/getConversationFromIdsQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "GetConversationFromId($author: ID, $properties: Properties)", "content": "{\n    getConversationFromId(author: $author, properties: $properties) {\n      name\n      address\n      instanceId\n      messages {\n        author\n        authorUsername\n        recipient\n        timestamp\n        payload\n      }\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/messages/query/getConversationFromIdQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "addUser($firstName: String!, $email: String!, $password: String!)", "content": "{\n    addUser(firstName: $firstName, email: $email, password: $password) {\n      token\n      user {\n          _id\n          firstName\n          email\n          \n      }\n    }\n  }", "metadata": {"commit_hash": "f843b88d9cd8c38fc94a84297a63e19a2c383a57", "file": "client/src/utils/mutations.js", "repo": "ottercreektourism_kernel"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n      login(email: $email, password: $password) {\n          token\n          user {\n              _id\n          }\n      }\n  }", "metadata": {"commit_hash": "f843b88d9cd8c38fc94a84297a63e19a2c383a57", "file": "client/src/utils/mutations.js", "repo": "ottercreektourism_kernel"}}, {"type": "mutation", "name": "addKernel($input: kernelInput!)", "content": "{\n      addKernel(input: $input) {\n        \n              _id\n          \n      }\n  }", "metadata": {"commit_hash": "f843b88d9cd8c38fc94a84297a63e19a2c383a57", "file": "client/src/utils/mutations.js", "repo": "ottercreektourism_kernel"}}, {"type": "query", "name": "Articles", "content": "{\n    articles {\n      data {\n        attributes {\n          slug\n          title\n          content\n          description\n          publishedAt\n          category {\n            data {\n              attributes {\n                slug\n                name\n              }\n            }\n          }\n          image {\n            data {\n              attributes {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8b41f7b35965d1c41490c9c85c5f0f4f81134eca", "file": "queries/articles/articles.ts", "repo": "rwietter_rwietter.xyz"}}, {"type": "query", "name": "Articles", "content": "{\n    articles(pagination: { limit: 3 }, sort: \"updatedAt:desc\") {\n      data {\n        attributes {\n          slug\n          title\n          description\n          updatedAt\n          category {\n            data {\n              attributes {\n                slug\n                name\n              }\n            }\n          }\n          image {\n            data {\n              attributes {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8b41f7b35965d1c41490c9c85c5f0f4f81134eca", "file": "queries/articles/articles.ts", "repo": "rwietter_rwietter.xyz"}}, {"type": "query", "name": "Categories", "content": "{\n    categories {\n      data {\n        attributes {\n          slug\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8b41f7b35965d1c41490c9c85c5f0f4f81134eca", "file": "queries/category/categories.ts", "repo": "rwietter_rwietter.xyz"}}, {"type": "query", "name": "Category($slug: String!)", "content": "{\n    categories(filters: { slug: { eq: $slug } }) {\n      data {\n        attributes {\n          slug\n          name\n          articles {\n            data {\n              attributes {\n                slug\n                title\n                content\n                description\n                category {\n                  data {\n                    attributes {\n                      name\n                    }\n                  }\n                }\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8b41f7b35965d1c41490c9c85c5f0f4f81134eca", "file": "queries/category/articles.ts", "repo": "rwietter_rwietter.xyz"}}, {"type": "query", "name": "Article($slug: String!)", "content": "{\n    articles(filters: { slug: { eq: $slug } }) {\n      data {\n        attributes {\n          slug\n          title\n          content\n          description\n          author {\n            data {\n              attributes {\n                name\n              }\n            }\n          }\n          publishedAt\n          category {\n            data {\n              attributes {\n                slug\n                name\n              }\n            }\n          }\n          image {\n            data {\n              attributes {\n                url\n                name\n                caption\n                alternativeText\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8b41f7b35965d1c41490c9c85c5f0f4f81134eca", "file": "queries/article/article.tsx", "repo": "rwietter_rwietter.xyz"}}, {"type": "mutation", "name": "(\n    $name: String!\n    $duration: Int!\n    $portions: Int!\n    $img: String!\n    $description: String!\n    $ingredients: JSON!\n    $steps: JSON!\n    $category: ID!\n    $author: ID!\n  )", "content": "{\n    createRecipe(\n      data: {\n        name: $name\n        duration: $duration\n        portions: $portions\n        img: $img\n        description: $description\n        ingredients: $ingredients\n        steps: $steps\n        category: $category\n        author: $author\n      }\n    ) {\n      data {\n        id\n        attributes {\n          name\n          category {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "mutation", "name": "(\n    $id: ID!\n    $name: String!\n    $duration: Int!\n    $portions: Int!\n    $img: String!\n    $description: String!\n    $ingredients: JSON!\n    $steps: JSON!\n    $category: ID!\n    $author: ID!\n  )", "content": "{\n    updateRecipe(\n      id: $id\n      data: {\n        name: $name\n        duration: $duration\n        portions: $portions\n        img: $img\n        description: $description\n        ingredients: $ingredients\n        steps: $steps\n        category: $category\n        author: $author\n      }\n    ) {\n      data {\n        id\n        attributes {\n          name\n          category {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteRecipe(id: $id) {\n      data {\n        id\n        attributes {\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "mutation", "name": "($id: ID!, $likes: Long!, $idUser: ID!, $favorites: [ID!])", "content": "{\n    updateRecipe(id: $id, data: { likes: $likes }) {\n      data {\n        id\n        attributes {\n          likes\n        }\n      }\n    }\n    updateUsersPermissionsUser(id: $idUser, data: { favorites: $favorites }) {\n      data {\n        id\n        attributes {\n          favorites {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "mutation", "name": "", "content": "{\n    register(\n      input: {\n        username:\"${username}\",\n        email:\"${email}\",\n        password:\"${password}\",\n      }\n    ) {\n      jwt\n       user {\n        id\n        username\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/register.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "query", "name": "rolesConnection", "content": "{\n    rolesConnection {\n      aggregate {\n       count\n     }\n   }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+dashboard/count-roles/count-roles.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "filesConnection", "content": "{\n    filesConnection {\n      aggregate {\n       count\n     }\n   }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+dashboard/count-files/count-files.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "usersConnection", "content": "{\n    usersConnection {\n      aggregate {\n       count\n     }\n   }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+dashboard/count-users/count-users.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "subscription", "name": "userSubscription", "content": "{\n    userSubscription {\n      node {\n        user{\n          firstname\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+home/home/home.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "users", "content": "{\n    users {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+home/home/home.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "profile($data: UserProfileInput!)", "content": "{\n    profile(data: $data) {\n      user {\n        firstname\n        lastname\n        email\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/profile/profile.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "me", "content": "{\n    me {\n      firstname\n      lastname\n      email\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/profile/profile.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      user {\n        firstname\n        email\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/login/login.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "changePassword($data: UserChangePasswordInput!)", "content": "{\n    changePassword(data: $data) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/change-password/change-password.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "signup($data: UserSignupInput!)", "content": "{\n    signup(data: $data) {\n      user {\n        firstname\n        lastname\n        email\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/signup/signup.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "updateRole($data: RoleUpdateInput!, $where: RoleWhereUniqueInput!)", "content": "{\n    updateRole(data: $data, where: $where) {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/update/role-update.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "role($id: String!)", "content": "{\n    role(id: $id) {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/update/role-update.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "createRole($data: RoleCreateInput!)", "content": "{\n    createRole(data: $data) {\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/create/role-create.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "roles", "content": "{\n    roles {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteRole($where: RoleWhereUniqueInput!)", "content": "{\n    deleteRole(where: $where) {\n      name\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteManyRoles($where: RoleWhereInput!)", "content": "{\n    deleteManyRoles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "role($id: String!)", "content": "{\n    role(id: $id) {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/details/role-details.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "changeFile($file: Upload!, $where: FileWhereUniqueInput!)", "content": "{\n  changeFile(file: $file, where: $where) {\n    filename\n  }\n}", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/change/file-change.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n  uploadFiles(files: $files) {\n    filename\n  }\n}", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/upload/file-upload.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "files", "content": "{\n    files {\n      id\n      filename\n      mimetype\n      path\n      size\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteFile($where: FileWhereUniqueInput!)", "content": "{\n    deleteFile(where: $where) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteManyFiles($where: FileWhereInput!)", "content": "{\n    deleteManyFiles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "file($id: String!)", "content": "{\n    file(id: $id) {\n      id\n      filename\n      path\n      encoding\n      mimetype\n      size\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/details/file-details.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "updateUser($data: UserUpdateInput!, $where: UserWhereUniqueInput!)", "content": "{\n    updateUser(data: $data, where: $where) {\n      id\n      firstname\n      email\n      lastname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "user($id: String!)", "content": "{\n    user(id: $id) {\n      id\n      firstname\n      email\n      lastname\n      roles {\n        id\n        name\n        description\n      }\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "roles", "content": "{\n    roles {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "createUser($data: UserCreateInput!)", "content": "{\n    createUser(data: $data) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/create/user-create.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "roles", "content": "{\n    roles {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/create/user-create.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "users", "content": "{\n    users {\n      id\n      firstname\n      lastname\n      email\n      roles {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteUser($where: UserWhereUniqueInput!)", "content": "{\n    deleteUser(where: $where) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteManyUsers($where: UserWhereInput!)", "content": "{\n    deleteManyUsers(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "user($id: String!)", "content": "{\n    user(id: $id) {\n      id\n      firstname\n      email\n      lastname\n      roles {\n        name\n        description\n      }\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/details/user-details.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "Query", "content": "{\n      getAuthors {\n        _id\n        name\n        books {\n          _id\n          title\n          authorId\n          author {\n            _id\n            name\n            createdAt\n          }\n          createdAt\n        }\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/Authors.js", "repo": "FrontPhoenix_graphql-sample"}}, {"type": "mutation", "name": "CreateBook($title: String!, $authorId: ID!)", "content": "{\n      createBook(title: $title, authorId: $authorId) {\n        msg\n        status\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/CreateBooks.js", "repo": "FrontPhoenix_graphql-sample"}}, {"type": "query", "name": "Query", "content": "{\n      getAuthors {\n        _id\n        name\n        books {\n          _id\n          title\n          authorId\n          author {\n            _id\n            name\n            createdAt\n          }\n          createdAt\n        }\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/CreateBooks.js", "repo": "FrontPhoenix_graphql-sample"}}, {"type": "query", "name": "Query", "content": "{\n      getAuthors {\n        _id\n        name\n        books {\n          _id\n          title\n          authorId\n          author {\n            _id\n            name\n            createdAt\n          }\n          createdAt\n        }\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/CreateAuthor.js", "repo": "FrontPhoenix_graphql-sample"}}, {"type": "mutation", "name": "CreateAuthor($name: String!)", "content": "{\n      createAuthor(name: $name) {\n        msg\n        status\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/CreateAuthor.js", "repo": "FrontPhoenix_graphql-sample"}}, {"type": "query", "name": "GetBooks", "content": "{\n      getBooks {\n        _id\n        title\n        authorId\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/Books.js", "repo": "FrontPhoenix_graphql-sample"}}]