[{"type": "mutation", "name": "DeployProxyFactoryContract($from: String!)", "content": "{\n    deployProxyFactory(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ItemImportClient(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    itemImportClient(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_import_client.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "UpdateTerm($nodeUri: String!, $input: UpdateTermInput)", "content": "{\n      updateTerm(nodeUri: $nodeUri, input: $input) {\n        nodeUri\n        label\n        path\n        readme\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/updateTerm.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "($postID: ID!, $userID: ID!)", "content": "{\n    updatePostLike(postId: $postID, userId: $userID) {\n      post {\n        id\n        title\n        likes {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "mutation", "name": "Refetch", "content": "{\n    refetch\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ItemImportServer(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    itemImportServer(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "AcceptOrder($_id:String!, $time:String)", "content": "{\n    acceptOrder(_id:$_id, time:$time){\n        _id\n      orderStatus\n      preparationTime\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useAcceptOrder.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "($id: String, $email: String!, $password: String, $roleId: Int!)", "content": "{\n        createAdminUser (id: $id, email: $email, password: $password, roleId: $roleId) {\n        status\n        errorMessage\n        }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/AdminUser/manageAdminUser.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "repoFileUploadCommit($id: ID!)", "content": "{\n    repoFileUploadCommit(id: $id) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/Upload.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "($projectData: String!, $secureKey: String!, $secureUser: String!)", "content": "{\n    saveProject(\n      projectData: $projectData\n      secureKey: $secureKey\n      secureUser: $secureUser\n    )\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "app/src/gql/SaveProject.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "upvotePost($postId: Int!)", "content": "{\n          topPost @client @export(as: \"postId\")\n          upvotePost(postId: $postId) {\n            title\n            votes\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "($input:InputEnrollUserToWorkspaceSave!)", "content": "{\n          enrollUserToWorkspace(input:$input){\n            ID\n            InvitedDate\n            userSK {\n              ID\n              UserName\n            }\n            profile {\n              ID\n              Profile\n            }\n            workspace {\n              ID\n              WorkspaceName\n            }\n          }\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateAddress($addressInput:AddressInput!)", "content": "{\n  createAddress(addressInput:$addressInput){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/NewAddress/NewAddress.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "createOptionPoll($postId: Int!, $question: String!, $options: String! $endAt: Int!)", "content": "{\n        __typename\n        insert_option_poll(objects: {post_id: $postId, question: $question, options: $options, end_at: $endAt}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/OptionPoll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "SubmitBamboraPayment(\n    $paymentId: ID!\n    $transition: String!\n    $input: BamboraPaymentInput!\n  )", "content": "{\n    payment: submitBamboraPayment(\n      paymentId: $paymentId\n      transition: $transition\n      paymentInput: $input\n    ) {\n      ...Payment\n    }\n  }\n  ${PaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/checkout/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "Mutation($product: ProductInput)", "content": "{\n  addProduct(product: $product) {\n    _id\n    name\n    quantity\n    uom\n    refrigerated\n    expires\n    purchaseDate\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "moveThread($threadId: ID!, $channelId: ID!)", "content": "{\n    moveThread(threadId: $threadId, channelId: $channelId) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/moveThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "deleteWorkspaceMember($id: uuid!)", "content": "{\n  deleteWorkspaceMember(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/SidePane/Menu/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "AddOrUpdate", "content": "{\n        addOrUpdate(id: $id, title: $title) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo/components/Submit.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Int!)", "content": "{\n            mut(inline: 5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "repoArchive($repoId: ID!)", "content": "{\n    archive(repoIds: [$repoId]) {\n      nodes {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Repo/Archive.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "SIGNUP($email: String, $password: String!, $username: String!)", "content": "{\n        signup(email: $email, password: $password, username:$username){\n            token\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Signup/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "authenticatedUser($email: String!, $password: String!)", "content": "{\n      login(email: $email, password: $password) {\n        token\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/sign-in/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "productJoinSellingPlanGroups(\n        $id: ID!\n        $sellingPlanGroupIds: [ID!]!\n    )", "content": "{\n        productVariantJoinSellingPlanGroups(\n            id: $id\n            sellingPlanGroupIds: $sellingPlanGroupIds\n        ) {\n            productVariant {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "lib/sellingPlanGraphQL.ts", "repo": "mr-perseus_permaculture"}}, {"type": "mutation", "name": "($resetPasswordEmailInput: ResetInput!)", "content": "{\n    resetPassword(emailInput: $resetPasswordEmailInput) {\n      error {\n        message\n        name\n      }\n      user {\n        email\n        createdAt\n        username\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/resetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "EditGroup($groupId: String!, $data: GroupInput!)", "content": "{\n    editGroup(groupId: $groupId, data: $data) {\n      ...Group\n    }\n  }\n  ${Group}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/group/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/fragments.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteFood(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n      uploadFiles(files: $files) {\n        filename\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createServiceBindingUsage(\n    $createServiceBindingUsageInput: CreateServiceBindingUsageInput\n    $namespace: String!\n  )", "content": "{\n    createServiceBindingUsage(\n      createServiceBindingUsageInput: $createServiceBindingUsageInput\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createBranch($createRefInput: CreateRefInput!)", "content": "{\n    createRef(input: $createRefInput) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n  }\n  ${fragments.branch}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "($id: ID!, $input: GroupUpdateInput!)", "content": "{\n            updateGroup(id: $id, input: $input) {\n              id\n              name\n              object\n              created_at\n              updated_at\n              users {\n                id\n              }\n              users_count\n              servers {\n                id\n              }\n              servers_count\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "putAccountSubscriptionGroups(\n\t\t$id: Long!\n\t\t$accountSubscriptionGroup: InputC_AccountSubscriptionGroup!\n\t)", "content": "{\n\t\tc {\n\t\t\tupdateAccountSubscriptionGroup(\n\t\t\t\taccountSubscriptionGroupId: $id\n\t\t\t\tAccountSubscriptionGroup: $accountSubscriptionGroup\n\t\t\t) {\n\t\t\t\taccountSubscriptionGroupId\n\t\t\t\taccountKey\n\t\t\t\tactivationStatus\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/account-subscription-groups/queries/putAccountSubscriptionGroups.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "deletePost($id: ID)", "content": "{\n        deleteComments(where: { post: { id: $id } }) {\n            nodesDeleted\n        }\n        deletePosts(where: { id: $id }) {\n            nodesDeleted\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "UpdateTopic($topicUri: String, $input: OrganizationTopicInput)", "content": "{\n      updateTopic(organizationUri: $organizationUri, input: $input) {\n        topicUri\n        label\n        description\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/updateTopic.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteThread($threadId: ID!)", "content": "{\n    deleteThread(threadId: $threadId)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/thread/deleteThread.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "updateRole($name: String!)", "content": "{\n    updateRole(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/users.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "UpdateUser(\n        $input: UpdateUserInput!\n        $condition: ModelUserConditionInput\n    )", "content": "{\n        updateUser(input: $input, condition: $condition) {\n            id\n            cognitoId\n            tenantId\n            _version\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/updateUser.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "Refetch", "content": "{\n    refetch\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddRoute($color: String, $name: String, $stops: [RouteStopInput])", "content": "{\n    RouteMutation {\n      addRoute(route: { color: $color, name: $name, stops: $stops }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "deleteAccountUserRoles(\n\t\t$accountRoleId: Long!\n\t\t$emailAddress: String!\n\t\t$accountKey: String!\n\t)", "content": "{\n\t\tdeleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress(\n\t\t\taccountRoleId: $accountRoleId\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $accountKey\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "updateClusterAddonsConfiguration(\n    $name: String!\n    $urls: [String!]!\n    $labels: Labels\n  )", "content": "{\n    updateClusterAddonsConfiguration(\n      name: $name\n      urls: $urls\n      labels: $labels\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteLesson($input: LessonId)", "content": "{\n    deleteLesson(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "CreateAddons($addonInput:[AddonInput])", "content": "{\n  createAddons(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "mut($in: Array!)", "content": "{\n            mut(inline: [1, 2], variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "editProject($projectId: ID!, $input: EditProjectInput!)", "content": "{\n        editProject(projectId: $projectId, input: $input) {\n            _id\n            name\n            description\n            image\n            color\n            privacy\n            status\n            created_at\n            updated_at\n            owner {\n                _id\n                name\n                last_name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditProject.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "CreateMirrorTypedData(\n    $profileId: ProfileId!\n    $publicationId: InternalPublicationId!\n  )", "content": "{\n    createMirrorTypedData(\n      request: {\n        profileId: $profileId\n        publicationId: $publicationId\n        referenceModule: { followerOnlyReferenceModule: false }\n      }\n    ) {\n      id\n      expiresAt\n      typedData {\n        types {\n          MirrorWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          profileIdPointed\n          pubIdPointed\n          referenceModule\n          referenceModuleData\n          referenceModuleInitData\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/mirror.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}}, {"type": "mutation", "name": "removePhoneNumberFromOrganization($organizationId: ID!, $id: ID!)", "content": "{\n  phoneNumberRemoveFromOrganizationById(organizationId: $organizationId, id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "CreateReview($input: CreateReviewInput!)", "content": "{\n    createReview(input: $input)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/createReview.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "deletePago($where: PagoWhereUniqueInput!)", "content": "{\n    deletePago(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "DeployIdentityProxy($from: String!)", "content": "{\n    deployIdentityProxy(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "setTagOn(\n    $tagName: String!\n    $on: String!\n    $targetType: String!\n    $targetId: ID!\n  )", "content": "{\n    setTagOn(\n      tagName: $tagName\n      on: $on\n      targetType: $targetType\n      targetId: $targetId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteFood(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "resetChannelJoinToken($input: ResetChannelJoinTokenInput!)", "content": "{\n    resetChannelJoinToken(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/resetChannelJoinToken.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_RESOURCES/awesome-git-user/full-stack-apollo-graphql-tutorial-quakehunter/client/src/pages/login.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteEje($where: EjeWhereUniqueInput!)", "content": "{\n    deleteEje(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "verifyCredential($id: ID!)", "content": "{\n    verifyCredential(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Dialog/Credentials.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "toggleTaskLabel($taskID: UUID!, $projectLabelID: UUID!)", "content": "{\n  toggleTaskLabel(input: {taskID: $taskID, projectLabelID: $projectLabelID}) {\n    active\n    task {\n      id\n      labels {\n        id\n        assignedDate\n        projectLabel {\n          id\n          createdDate\n          labelColor {\n            id\n            colorHex\n            name\n            position\n          }\n          name\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "SetQuestionState($catgId: Int!, $quesId: Int!, $state: StateEnum!)", "content": "{\n    setQuestionState(catgId: $catgId, quesId: $quesId, state: $state) {\n      answer\n      catgId\n      points\n      quesId\n      categoryName\n      question\n      state\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/mutations.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "name($data: ImageCreateInput!)", "content": "{\n\t\tcreateImage(data: $data) {\n\t\t\tid\n\t\t\timage {\n\t\t\t\tid\n\t\t\t\tfilename\n\t\t\t\tpublicUrl\n\t\t\t\tencoding\n\t\t\t\tpath\n\t\t\t}\n\t\t\tcaption\n\t\t}\n\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/dynamic-blocks/do-and-avoid.js", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "toggleCommunityRedirect($communityId: ID!)", "content": "{\n    toggleCommunityRedirect(communityId: $communityId) {\n      id\n      slug\n      redirect\n    }\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/community/toggleCommunityRedirect.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "deletePost($postId: ID!)", "content": "{\n    deletePost(postId: $postId)\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/components/DeleteButton.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}}, {"type": "mutation", "name": "deleteResources($ids: [String]!)", "content": "{\n    deleteResources(ids: $ids) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/resources.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "DeleteCoupon($id:String!)", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "($input: ServerCreateInput!)", "content": "{\n            createServer(input: $input) {\n              id\n              hostname\n              ipv4\n              ipv6\n              created_at\n              updated_at\n              groups {\n                id\n                name\n              }\n              users {\n                id\n                name\n              }\n              users_count\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "EditZone($zone:ZoneInput!)", "content": "{\n  editZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "sendMessage($message: MessageInput!)", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/message/sendMessage.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\n  updateRiderLocation(latitude:$latitude,longitude:$longitude){\n    _id\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/utilities/location.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "editComment($commentId: ID!, $content: String!, $tags: [String!])", "content": "{\n    editComment(id: $commentId, content: $content, tags: $tags) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "resetUser ($data: ResetUserInput!)", "content": "{\n        result: resetUser(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_RESOURCES/awesome-git-user/full-stack-apollo-graphql-tutorial-quakehunter/client/src/pages/login.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "editUserPrivate($username: String!, $firstName: String!, $lastName: String!, $email: String!, $genre: String!, $role: String!, $profilePicture: String, $userToken: String!)", "content": "{\n            editUserPrivate(username: $username, firstName: $firstName, lastName: $lastName, email: $email , genre: $genre, role: $role, profilePicture: $profilePicture, userToken: $userToken){\n                user{\n                    firstName\n                    lastName\n                    profilePicture\n                    email\n                    roles{\n                        role\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "updateAddonsConfiguration(\n    $name: String!\n    $namespace: String!\n    $urls: [String!]!\n    $labels: Labels\n  )", "content": "{\n    updateAddonsConfiguration(\n      name: $name\n      namespace: $namespace\n      urls: $urls\n      labels: $labels\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateEnrollment(\n    $fromDate: DateTime!\n    $newFromDate: DateTime\n    $newToDate: DateTime\n    $group: String!\n    $toDate: DateTime!\n    $uuid: String!\n    $parentOrg: String\n  )", "content": "{\n    updateEnrollment(\n      fromDate: $fromDate\n      newFromDate: $newFromDate\n      newToDate: $newToDate\n      group: $group\n      toDate: $toDate\n      uuid: $uuid\n      parentOrg: $parentOrg\n    ) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "updateMeeting($meetingId: ID!, $meetingInput: MeetingUpdateInput!)", "content": "{\n  meeting_Update(meetingId: $meetingId, meeting: $meetingInput) {\n    ...MeetingTimelineEventFragment\n  }\n}\n    ${MeetingTimelineEventFragmentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "runtimeFriendSendMessage($did: String!, $message: PerspectiveInput!)", "content": "{\n                runtimeFriendSendMessage(did: $did, message: $message)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "UpdateUserAddress($input: UpdateAddressInput!)", "content": "{\n    updateUserAddress(input: $input) {\n      country\n      city\n      address\n      index\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "deleteTaskGroupTasks($taskGroupID: UUID!)", "content": "{\n  deleteTaskGroupTasks(input: {taskGroupID: $taskGroupID}) {\n    tasks\n    taskGroupID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "StartWorksheetQuery(\n      $worksheetUri: String!\n      $input: WorksheetQueryInput!\n    )", "content": "{\n      startWorksheetQuery(worksheetUri: $worksheetUri, input: $input) {\n        AthenaQueryId\n        Error\n        Status\n        DataScannedInBytes\n        ElapsedTimeInMs\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/startWorksheetQuery.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateOrganizationPhoneNumber($organizationId: ID!, $input: PhoneNumberUpdateInput!)", "content": "{\n  phoneNumberUpdateInOrganization(organizationId: $organizationId, input: $input) {\n    ...PhoneNumber\n    label\n    primary\n  }\n}\n    ${PhoneNumberFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateCategoryImage($id: Int, \n             $fileName: String\n             )", "content": "{\n            updateCategoryImage(\n              id: $id\n              fileName: $fileName\n            ){\n              status\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateCategoryImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "AddTaskOwners(\n    $taskID: ID!\n    $userOwners: [String!]\n    $userReviewers: [String!]\n    $teamOwners: [ID!]\n    $teamReviewers: [ID!]\n  )", "content": "{\n    addTaskOwners(\n      taskID: $taskID\n      userOwners: $userOwners\n      userReviewers: $userReviewers\n      teamOwners: $teamOwners\n      teamReviewers: $teamReviewers\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n      task {\n        id\n        name\n        priority\n        status\n        dueDate\n        updatedAt\n        userOwners {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamOwners {\n          id\n          name\n        }\n        userReviewers {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamReviewers {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddTaskOwners.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "DELETE_TREE($id: ID!)", "content": "{\n        deleteTree(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "updateTaskDescription($taskID: UUID!, $description: String!)", "content": "{\n  updateTaskDescription(input: {taskID: $taskID, description: $description}) {\n    id\n    description\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Login/useLogin.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "cartCreate($input: CartInput)", "content": "{\n    cartCreate(input: $input) {\n      cart {\n        id\n        checkoutUrl\n      }\n      userErrors {\n        code\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "70998b427ad850d5beb881dce7d48219ca142e0d", "file": "helpers/cartHelpers.js", "repo": "Shopify_shopify-marketplaces-buyer-app"}}, {"type": "mutation", "name": "($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "CreateAddons($addonInput:[AddonInput])", "content": "{\n  createAddons(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "AddRoute($color: String, $name: String, $stops: [RouteStopInput])", "content": "{\n    RouteMutation {\n      addRoute(route: { color: $color, name: $name, stops: $stops }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "deleteLesson($input: LessonId)", "content": "{\n    deleteLesson(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "deletePago($where: PagoWhereUniqueInput!)", "content": "{\n    deletePago(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n        login(username: $username, password: $password) {\n            id\n            email\n            username\n            createdAt\n            token\n        }\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/pages/Login.js", "repo": "rimijoker_Social-Media-App"}}, {"type": "mutation", "name": "deleteCategory($id: Int)", "content": "{\n                deleteCategory(id: $id) {\n                  status\n                  errorMessage\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/deleteCategory.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "deleteUser($userId: ID!)", "content": "{\n    deleteUser(userId: $userId) {\n      success\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/AlertDialog.jsx", "repo": "Dr169_Air-condition"}}, {"type": "mutation", "name": "Register($input: UserInput!)", "content": "{\n    register(input: $input) {\n      error {\n        message\n        field\n      }\n      user {\n        username\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/register.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "sendB2CAppPushMessage ($data: SendB2CAppPushMessageInput!)", "content": "{\n        result: sendB2CAppPushMessage(data: $data) { id status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/miniapp/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "createTaskGroup($projectID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskGroup(\n    input: {projectID: $projectID, name: $name, position: $position}\n  ) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "AddTaskOwners(\n    $taskID: ID!\n    $userOwners: [String!]\n    $userReviewers: [String!]\n    $teamOwners: [ID!]\n    $teamReviewers: [ID!]\n  )", "content": "{\n    addTaskOwners(\n      taskID: $taskID\n      userOwners: $userOwners\n      userReviewers: $userReviewers\n      teamOwners: $teamOwners\n      teamReviewers: $teamReviewers\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n      task {\n        id\n        name\n        priority\n        status\n        dueDate\n        updatedAt\n        userOwners {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamOwners {\n          id\n          name\n        }\n        userReviewers {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamReviewers {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddTaskOwners.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "DeleteComment ($id: uuid!)", "content": "{\n        delete_comments(where: {id: {_eq: $id}}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Comment/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "MarkOrderDelivered($orderId: String!)", "content": "{\n    markDelivered(orderId: $orderId) {\n      id\n      delivery\n      delivered\n      items {\n        id\n        name\n        price\n      }\n    }\n  }", "metadata": {"commit_hash": "b6d96035d668b9480ff20fb4a7df628fa97a9250", "file": "3_examples/react/src/apollo/mutations.js", "repo": "systek_graphql-workshop"}}, {"type": "mutation", "name": "login($identifier: String!, $password: String!)", "content": "{\n        login(input: {identifier: $identifier, password: $password}){\n            jwt\n        }\n    }", "metadata": {"commit_hash": "33a1987b2320151ee0f3c5dce241aa9dca9f2404", "file": "src/app/core/graphql/mutations/login.ts", "repo": "binary-coffee-dev_dcs-admin-frontend"}}, {"type": "mutation", "name": "( $UserId: String! , $FileCategory: String!)", "content": "{\n            delete( userId: $UserId , fileCategory:$FileCategory )\n          }", "metadata": {"commit_hash": "3ab3a6926645806009516173b8745d3f0b7fb185", "file": "libs/client/storage/feature/src/lib/delete-all/delete-all.component.ts", "repo": "COS-301_graduates"}}, {"type": "mutation", "name": "CreateTerm($parentUri: String!, $input: CreateTermInput)", "content": "{\n      createTerm(parentUri: $parentUri, input: $input) {\n        nodeUri\n        label\n        path\n        readme\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/addTerm.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateTaskGroup($input: UpdateTaskGroupInput!)", "content": "{\n      updateTaskGroup(input: $input) {\n        id\n        title\n        description\n        priority\n        severity\n        groups\n        singleGroup\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "($category: InputCategory!)", "content": "{\n  createCategory(category: $category) {\n    id,\n    name\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content/hooks/category.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "Refresh($token: String!)", "content": "{\n  refresh(token: $token) {\n    access_token\n    expires_in\n    refresh_token\n    user_id\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "start", "content": "{\n          start @client\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "name($data: ImageCreateInput!)", "content": "{\n\t\tcreateImage(data: $data) {\n\t\t\tid\n\t\t\timage {\n\t\t\t\tid\n\t\t\t\tfilename\n\t\t\t\tpublicUrl\n\t\t\t\tencoding\n\t\t\t\tpath\n\t\t\t}\n\t\t\tcaption\n\t\t}\n\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/dynamic-blocks/image.js", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "shareTicket($data: ShareTicketInput!)", "content": "{\n        obj: shareTicket(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "deleteTerm($nodeUri: String!)", "content": "{\n      deleteTerm(nodeUri: $nodeUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/deleteTerm.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n  updatePost(id: $id, votes: $votes) {\n    id\n    __typename\n    votes\n  }\n}", "metadata": {"commit_hash": "2cb6104a6382ad53e1ae5e927e022810346bd737", "file": "modules/app/actions.js", "repo": "zachariahtimothy_with-cerebral-and-apollo-auth"}}, {"type": "mutation", "name": "unmerge($uuids: [String!])", "content": "{\n    unmergeIdentities(uuids: $uuids) {\n      uuids\n      individuals {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.customSuffix.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "deleteAirflowCluster($clusterUri: String!)", "content": "{\n      deleteAirflowCluster(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/deleteCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "removeCommunityModerator($input: RemoveCommunityModeratorInput!)", "content": "{\n    removeCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/removeCommunityModerator.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "($username: String!)", "content": "{\n    insert_user_one(\n      object: { username: $username }\n      on_conflict: { constraint: user_username_key, update_columns: [] }\n    ) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "streaming-subscriptions-chat/src/components/Main.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "UpdateStatus($id:String!,$orderStatus:String!)", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dispatch.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n      createPost(input: $input) {\n        id\n        title\n        postOwner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "($id: Int!, $admin: InputAdmin!)", "content": "{\n  editAdmin(id:$id, admin: $admin) {\n    id,\n    username,\n    first_name,\n    last_name,\n    username,\n    payload,\n    permissions,\n    chatbotIds,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/admins/hooks/admins.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "AddData($offerID: String!, $from: String, $data: String)", "content": "{\n    addData(offerID: $offerID, from: $from, data: $data) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "updateTipo(\n      $data: TipoUpdateInput!\n      $where: TipoWhereUniqueInput!\n    )", "content": "{\n      updateTipo(data: $data, where: $where) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "($signature: String, $password: String)", "content": "{\n    login(signature: $signature, password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "pages/login.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "CreateTenant($input: CreateTenantInput!)", "content": "{\n        createTenant(input: $input) {\n            referenceIdentifier\n            id\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/createTenant.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "UpdateTeam($id: ID, $input: TeamInput!)", "content": "{\n    updateTeam(id: $id, input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/updateTeam.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "signinAsUser ($data: SigninAsUserInput!)", "content": "{\n            result: signinAsUser(data: $data) { user { id } token }\n        }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/admin-ui/index.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "Foo", "content": "{\n          foo {\n            bar\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "(\n    $morningCleanser: [MyRoutineFieldsInputType]\n    $morningToner: [MyRoutineFieldsInputType]\n    $morningSerum: [MyRoutineFieldsInputType]\n    $morningMoisturizer: [MyRoutineFieldsInputType]\n    $morningSPF: [MyRoutineFieldsInputType]\n    $morningRX: [MyRoutineFieldsInputType]\n    $morningEyeCream: [MyRoutineFieldsInputType]\n    $eveningOilCleanser: [MyRoutineFieldsInputType]\n    $eveningCleanser: [MyRoutineFieldsInputType]\n    $eveningExfoliator: [MyRoutineFieldsInputType]\n    $eveningTreatmentMask: [MyRoutineFieldsInputType]\n    $eveningToner: [MyRoutineFieldsInputType]\n    $eveningSerum: [MyRoutineFieldsInputType]\n    $eveningMoisturizer: [MyRoutineFieldsInputType]\n    $eveningNightMask: [MyRoutineFieldsInputType]\n    $eveningOil: [MyRoutineFieldsInputType]\n    $eveningSpotTreatment: [MyRoutineFieldsInputType]\n    $eveningRX: [MyRoutineFieldsInputType]\n    $eveningEyeCream: [MyRoutineFieldsInputType]\n  )", "content": "{\n    updateMyRoutine(\n      morningCleanser: $morningCleanser\n      morningToner: $morningToner\n      morningSerum: $morningSerum\n      morningMoisturizer: $morningMoisturizer\n      morningSPF: $morningSPF\n      morningRX: $morningRX\n      morningEyeCream: $morningEyeCream\n      eveningOilCleanser: $eveningOilCleanser\n      eveningCleanser: $eveningCleanser\n      eveningExfoliator: $eveningExfoliator\n      eveningTreatmentMask: $eveningTreatmentMask\n      eveningToner: $eveningToner\n      eveningSerum: $eveningSerum\n      eveningMoisturizer: $eveningMoisturizer\n      eveningNightMask: $eveningNightMask\n      eveningOil: $eveningOil\n      eveningSpotTreatment: $eveningSpotTreatment\n      eveningRX: $eveningRX\n      eveningEyeCream: $eveningEyeCream\n    ) {\n      morningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSPF {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOilCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningExfoliator {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningTreatmentMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningNightMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOil {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSpotTreatment {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateMyRoutineMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "($a: Int = 1, $b: String = \"cheese\", $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "DestroyInvite($inviteId: String!)", "content": "{\n    destroyInvite(inviteId: $inviteId)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "unfollowCommunity($url: String)", "content": "{\n    unfollowCommunity(url: $url) {\n      id\n      members {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Community.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "createPullRequest($createPullRequestInput: CreatePullRequestInput!)", "content": "{\n    ${createPullRequestMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "changeEmail($email: String!, $password: String!)", "content": "{\n\t\tchangeEmail(email: $email, password: $password) {\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "enableChannelTokenJoin($input: EnableChannelTokenJoinInput!)", "content": "{\n    enableChannelTokenJoin(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/enableChannelTokenJoin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SaveStripeConfiguration($configurationInput:StripeConfigurationInput!)", "content": "{\n  saveStripeConfiguration(configurationInput:$configurationInput){\n    _id\n    publishableKey\n    secretKey\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Configuration/Stripe/Stripe.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "Logout($wallet: String!)", "content": "{\n    logout(wallet: $wallet) {\n      success\n      reason\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/Logout.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "upvotePost($postId: Int!)", "content": "{\n          topPost @client @export(as: \"postId\")\n          upvotePost(postId: $postId) {\n            title\n            votes\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "deleteChapter($id: ID!)", "content": "{\n    deleteChapter(id: $id) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "UploadToken($id:String!,$pushToken:String!)", "content": "{\n  uploadToken(id:$id,pushToken:$pushToken){\n    _id\n    pushToken\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/app.js", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "insertFeedbackOne($feedback: feedback_insert_input!)", "content": "{\n  insertFeedbackOne(object: $feedback) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "CreateListing(\n    $from: String!\n    $deposit: String\n    $depositManager: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )", "content": "{\n    createListing(\n      from: $from\n      deposit: $deposit\n      depositManager: $depositManager\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateRestaurant($restaurant:RestaurantInput!,$owner:ID!)", "content": "{\n  createRestaurant(restaurant:$restaurant,owner:$owner){\n    _id\n    orderId\n    orderPrefix\n    name\n    slug\n    image\n    address\n    username\n    password\n    minimumOrder\n    tax\n    location{coordinates}\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Restaurant/CreateRestaurant.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "($postId: Int!, $userId: String!)", "content": "{\n    delete_Like(\n      where: { user_id: { _eq: $userId }, post_id: { _eq: $postId } }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "7907866ee41941a96b937dd6e34724a112ce5298", "file": "src/components/Like.js", "repo": "abhi40308_instagram-clone"}}, {"type": "mutation", "name": "pauseRedshiftCluster($clusterUri: String!)", "content": "{\n      pauseRedshiftCluster(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/pauseCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "(\n    $id: ID!\n    $name: String!\n    $duration: Int!\n    $portions: Int!\n    $img: String!\n    $description: String!\n    $ingredients: JSON!\n    $steps: JSON!\n    $category: ID!\n    $author: ID!\n  )", "content": "{\n    updateRecipe(\n      id: $id\n      data: {\n        name: $name\n        duration: $duration\n        portions: $portions\n        img: $img\n        description: $description\n        ingredients: $ingredients\n        steps: $steps\n        category: $category\n        author: $author\n      }\n    ) {\n      data {\n        id\n        attributes {\n          name\n          category {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "mutation", "name": "addUserRole($role: String!)", "content": "{\n    addUserRole (role: $role) \n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "updateTeamMemberRole($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateTeamMemberRole(input: { teamID: $teamID, userID: $userID, roleCode: $roleCode }) {\n      member {\n        id\n        role {\n          code\n          name\n        }\n      }\n      teamID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/updateTeamMemberRole.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "UpdateMatch($input: UpdateMatchInput!)", "content": "{\n      updateMatch(input: $input) {\n        id\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-match.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "movePledge($pledgeId: ID!, $userId: ID!)", "content": "{\n    movePledge(pledgeId: $pledgeId, userId: $userId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Pledges/MovePledge.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "resendEmailConfirmation($email: String!)", "content": "{\n            resendEmailConfirmation(email: $email) {\n              _\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "createTaskChecklist($taskID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskChecklist(input: {taskID: $taskID, name: $name, position: $position}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "CreateTipping($tippingInput:TippingInput!)", "content": "{\n        createTipping(tippingInput:$tippingInput){\n          _id\n          tipVariations\n          enabled\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Tipping/Tipping.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "editSection($section:SectionInput!)", "content": "{\n  editSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Section/Section.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "(\n        $beneficiaryID: String!\n        $sequenceID: String!\n        $conducted: String\n        $tags: [String]\n      )", "content": "{\n        startSequence: StartSequence(\n          beneficiaryID: $beneficiaryID\n          sequenceID: $sequenceID\n          conducted: $conducted\n          tags: $tags\n        ) {\n          meetings {\n            id\n          }\n          destination\n        }\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/sequence/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "notificationToggleRead($notifiedID: UUID!)", "content": "{\n    notificationToggleRead(input: { notifiedID: $notifiedID }) {\n      id\n      read\n      readAt\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/notificationToggleRead.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "addProject(\n            $name: String\n            $description: String\n            $avatar: String\n            $image: String\n            $website: String\n            $github: String\n            $twitter: String\n            $isRepresentative: Boolean\n            $categories: [Category]\n          )", "content": "{\n            addProject(\n              name: $name\n              description: $description\n              avatar: $avatar\n              image: $image\n              website: $website\n              github: $github\n              twitter: $twitter\n              isRepresentative: $isRepresentative\n              categories: $categories\n            ) @client\n          }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/__tests__/index.test.ts", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Main/Main.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "AddOrUpdate", "content": "{\n          addOrUpdate(id: $id, title: $title) @client\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addDocumentToCollection($documentId: ID!, $collectionName: String!)", "content": "{\n    addDocumentToCollection(\n      documentId: $documentId\n      collectionName: $collectionName\n    ) {\n      id\n      document {\n        id\n        ...BookmarkOnDocument\n      }\n    }\n  }\n\n  ${onDocumentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/ActionBar/BookmarkButton.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "disableChannelTokenJoin($input: DisableChannelTokenJoinInput!)", "content": "{\n    disableChannelTokenJoin(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/disableChannelTokenJoin.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "Answer($answers: [AnswerInput]!)", "content": "{\n  answer(answers: $answers) {\n    allowed\n  }\n}", "metadata": {"commit_hash": "bb65ac9bd047c336c18bcb23bdb496aebd5ecc98", "file": "src/graphql/answer.js", "repo": "qiujun8023_gallery-client"}}, {"type": "mutation", "name": "deleteProduct($productId: ID!)", "content": "{\n    deleteProduct(productId: $productId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "UpdateNotificationStatus($offerNotification:Boolean!,$orderNotification:Boolean!)", "content": "{\n      updateNotificationStatus(offerNotification:$offerNotification,orderNotification:$orderNotification){\n        _id\n        notificationToken\n        is_order_notification\n        is_offer_notification\n      }\n    }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "setRuntimeLabel($id: ID!, $scenarios: Any!)", "content": "{\n    setRuntimeLabel(runtimeID: $id, key: \"scenarios\", value: $scenarios) {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Runtimes/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    emailName\n    password\n    enableEmail\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "($username: String!, $email: String!, $password: String!, $gender: String, $look: String)", "content": "{\n    userCreate(newUser: {email: $email, username: $username, password: $password, gender: $gender, look: $look}) {\n      id\n      username\n      email\n      rankID\n      credits\n      vipPoints\n      activityPoints\n      look\n      gender\n      motto\n      accountCreatedAt\n      onlineStatus\n      ipRegisteredWith\n      homeRoomID\n    }\n  }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/user-create.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "(\n    $title: String!\n    $notes: String\n    $staff: String!\n    $date: String!\n    $startTime: String!\n    $endTime: String!\n    $duration: Int!\n    $allDay: Boolean\n    $blockTime: Boolean\n  )", "content": "{\n    addPersonalEvent(\n      title: $title\n      notes: $notes\n      staff: $staff\n      date: $date\n      startTime: $startTime\n      endTime: $endTime\n      duration: $duration\n      allDay: $allDay\n      blockTime: $blockTime\n    ) {\n      title\n      notes\n      staff\n      date\n      startTime\n      endTime\n      duration\n      allDay\n      blockTime\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/addPersonalEventMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "createChannel($input: CreateChannelInput!)", "content": "{\n    createChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/createChannel.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setDarkMode($enabled: Boolean!)", "content": "{\n  setDarkMode(enabled: $enabled)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "reportUser($input: ReportUserInput!)", "content": "{\n    reportUser(input: $input)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/user/reportUser.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CreatePost(\n    $content: String\n    $topic: String\n    $parent: String\n  )", "content": "{\n    createPost(input: {\n      content: $content\n      topic: $topic\n      parent: $parent\n    }) {\n      ${postResponse}\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Answer($answers: [AnswerInput]!)", "content": "{\n  answer(answers: $answers) {\n    allowed\n  }\n}", "metadata": {"commit_hash": "bb65ac9bd047c336c18bcb23bdb496aebd5ecc98", "file": "src/graphql/answer.js", "repo": "qiujun8023_gallery-client"}}, {"type": "mutation", "name": "addPost($post: PostInput!)", "content": "{\n          addPost(post: $post) {\n            code\n            message\n          }\n        }", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/client-batching-query/__tests__/index.integration.spec.ts", "repo": "mrdulin_apollo-graphql-tutorial"}}, {"type": "mutation", "name": "insert_message ($message: message_insert_input! )", "content": "{\n    insert_message (\n      objects: [$message]\n    ) {\n      returning {\n        id\n        timestamp\n        text\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Textbox.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "(\n        $workSpaceName: String,\n        $workspaceURL: String,\n        $email: String!,\n        $userName: String!,\n        $password: String,\n        $profileCode: ID!,\n        $workSpaceStatusCode: ID!,\n        $clientTypeCode: ID!,\n        $clientSizeCode: ID!,\n        $businessAreaCode: ID!,\n        $invitesEmails: [String!]\n      )", "content": "{\n        createAccount(input: {\n          Workspace: {\n            WorkspaceName: $workSpaceName,\n            WorkspaceURL: $workspaceURL,\n            InvitedDate: \"${new Date().toDateString()}\"\n            DateAcceptedInvite: \"${new Date().toDateString()}\",\n          },\n          UserSK: {\n            Email: $email,\n            UserName: $userName,\n            IsActive: true,\n            ShowGetStarted: false\n          },\n          UserWorkSpace: {\n            InvitedDate:  \"${new Date().toDateString()}\",\n            DateAcceptedInvite:  \"${new Date().toDateString()}\",\n          },\n          Authenticate: {\n            AuthenticationType: PASSWORD,\n            Password: $password,\n          },\n          InvitesEmail: $invitesEmails,\n          ProfileCode: $profileCode,\n          workspacestatuscode:  $workSpaceStatusCode,\n          clienttypecode: $clientTypeCode,\n          clientsizecode: $clientSizeCode,\n          businessareacode: $businessAreaCode,\n        }) {\n          ID\n        }\n      }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "leaveCommunity($input: String!)", "content": "{\n    leaveCommunity(input: $input)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "MUTATION_SIGNIN_EMAIL($email: String!, $password: String!)", "content": "{\n    signinEmail(email: $email, password: $password) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/user/mutations/MUTATION_SIGNIN_EMAIL.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "daiBalance($account: ID!)", "content": "{\n    daiBalance(account: $account) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "updateBook($id: ID!, $name: String, $genre: String, $authorId: ID)", "content": "{\n        updateBook(id: $id, name: $name, genre: $genre, authorId: $authorId) {\n            name\n            id\n        }\n    }", "metadata": {"commit_hash": "821bcde594f373c2d28fe847fe7d940be8ad22bb", "file": "graphql-crud/client/src/app/queries.ts", "repo": "thisdot_blog-demos"}}, {"type": "mutation", "name": "getSubdomains($name: String)", "content": "{\n    getSubdomains(name: $name) {\n      name\n      owner\n      resolver\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "updateEmail($id: ID!, $email: String!)", "content": "{\n    updateEmail(userId: $id, email: $email) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Email/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateServiceBindingUsage(\n    $namespace: String!\n    $createServiceBindingUsageInput: CreateServiceBindingUsageInput\n  )", "content": "{\n    createServiceBindingUsage(\n      namespace: $namespace\n      createServiceBindingUsageInput: $createServiceBindingUsageInput\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceInstanceDetails/ServiceInstanceBindings/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "DeleteAddon($id:String!,$restaurant:String!)", "content": "{\n        deleteAddon(id:$id,restaurant:$restaurant){\n          _id\n          addons{\n            _id\n            options\n            title\n            description\n            quantityMinimum\n            quantityMaximum\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Addons.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "deleteFlagRule($id: ID!, $flagId: ID!)", "content": "{\n        deleteFlagRule(id: $id, flagId: $flagId)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "DeleteProfile($username: String)", "content": "{\n    createPublicProfile(username: $username)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/deleteProfileMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "CreateTestExchange", "content": "{\n  createTestExchange {\n    id\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    updateFood(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "UpdateUserAddress($input: UpdateAddressInput!)", "content": "{\n    updateUserAddress(input: $input) {\n      country\n      city\n      address\n      index\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "UploadIntro($intro: String!)", "content": "{\n        uploadIntro(intro: $intro)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n            signIn(email: $email, password: $password, generateRefreshToken: true) {\n              token\n              refreshToken\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "addComment($id: ID!, $text: String!)", "content": "{\n    addComment(id: $id, text: $text) {\n      id\n      text\n      isCommentMine\n      user {\n        id\n        handle\n        avatar\n        fullname\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/comment/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "assignUserToCampaign($organizationUuid: String!, $campaignId: String!)", "content": "{\n        assignUserToCampaign(organizationUuid: $organizationUuid, campaignId: $campaignId) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/JoinTeam.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "createEvent($event: EventInput)", "content": "{\n        createEvent(eventInput: $event) {\n            _id\n            price\n            title\n        }\n    }", "metadata": {"commit_hash": "111a5a0fa557f4231951199e1a6f89c76f1c2c5a", "file": "src/gql/createEvent.js", "repo": "stack-guru_fullstack-graphql"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.hooks.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "resendVerifyEmailToken", "content": "{\n  resendVerifyEmailToken {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "mut($in: String!)", "content": "{\n            mut(inline: \"abc\", variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "VerifyUserEmail($token: String!)", "content": "{\n    verifyUserEmail(input: { token: $token }) {\n      userEmail {\n        nodeId\n        isVerified\n      }\n    }\n  }", "metadata": {"commit_hash": "70840c85c462b6676380dfe94892e2b78e7499f4", "file": "client/src/components/VerifyUserEmailPage.js", "repo": "graphile_bootstrap-react-apollo"}}, {"type": "mutation", "name": "resetChannelJoinToken($input: ResetChannelJoinTokenInput!)", "content": "{\n    resetChannelJoinToken(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/resetChannelJoinToken.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "deleteTopic($ids: [String]!)", "content": "{\n    deleteTopic(ids: $ids) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/topics.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "deleteTeam($teamID: UUID!)", "content": "{\n    deleteTeam(input: { teamID: $teamID }) {\n      ok\n      team {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/deleteTeam.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "addCollaborator($taskId: ID!, $userId: ID!)", "content": "{\n        addCollaborator(taskId: $taskId, userId: $userId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlAddCollaborator.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\nupdateRiderLocation(latitude:$latitude,longitude:$longitude){\n  _id\n}\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "(\n    $title: String!\n    $notes: String\n    $staff: String!\n    $date: String!\n    $startTime: String!\n    $endTime: String!\n    $duration: Int!\n    $allDay: Boolean\n    $blockTime: Boolean\n  )", "content": "{\n    addPersonalEvent(\n      title: $title\n      notes: $notes\n      staff: $staff\n      date: $date\n      startTime: $startTime\n      endTime: $endTime\n      duration: $duration\n      allDay: $allDay\n      blockTime: $blockTime\n    ) {\n      title\n      notes\n      staff\n      date\n      startTime\n      endTime\n      duration\n      allDay\n      blockTime\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/addPersonalEventMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "follow($userId: ID!)", "content": "{\n      follow(userId: $userId)\n    }", "metadata": {"commit_hash": "cdc3e383299f4b6e33541d9a79562fcfa59301a7", "file": "aws/Burning-Monk/Testing-Serverless-Apps/ch01-04-e2e-troubleshoot/__tests__/steps/when.js", "repo": "muratkeremozcan_books"}}, {"type": "mutation", "name": "(\n        $questionnaireID: ID!\n        $questionID: ID!\n        $question: String\n        $description: String\n        $labels: [LabelInput]\n        $short: String\n        $leftValue: Int\n        $rightValue: Int\n        $noteRequired: Boolean\n        $notePrompt: String\n        $noteDeactivated: Boolean\n      )", "content": "{\n        editLikertQuestion: EditLikertQuestion(\n          outcomeSetID: $questionnaireID\n          questionID: $questionID\n          question: $question\n          description: $description\n          labels: $labels\n          short: $short\n          minValue: $leftValue\n          maxValue: $rightValue\n          noteRequired: $noteRequired\n          notePrompt: $notePrompt\n          noteDeactivated: $noteDeactivated\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/questions/editLikertQuestion.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "HideEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\thideEventDefinitions(eventDefinitionIds: $eventDefinitionIds) {\n\t\t\tdescription\n\t\t\tdisplayName\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "upsertMediaProgress($mediaId: ID!, $secs: Float!)", "content": "{\n    upsertMediaProgress(mediaId: $mediaId, secs: $secs) {\n      id\n      mediaId\n      secs\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Audio/hooks/useUpsertMediaProgress.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "createProjectLabel($projectID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  createProjectLabel(\n    input: {projectID: $projectID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "enableCommunityTokenJoin($input: EnableCommunityTokenJoinInput!)", "content": "{\n    enableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/enableCommunityTokenJoin.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!, $body: String!)", "content": "{\n    createComment(thread: $thread, id: $id, body: $body) {\n      id\n      body\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Comments/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "createBranchAndPullRequest(\n    $createRefInput: CreateRefInput!\n    $createPullRequestInput: CreatePullRequestInput!\n  )", "content": "{\n    createRef(input: $createRefInput) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n    ${createPullRequestMutationPart}\n  }\n  ${fragments.branch}\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "addCategory(\n          $categoryName: String,\n          $capacity: Int,\n          $isActive: Boolean,\n          $categoryImage: String,\n          $categoryMarkerImage: String\n        )", "content": "{\n        addCategory(\n          categoryName: $categoryName,\n          capacity: $capacity,\n          isActive: $isActive,\n          categoryImage: $categoryImage,\n          categoryMarkerImage: $categoryMarkerImage\n        ){\n          status\n          errorMessage\n        }\n      }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/addCategory.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "CREATE_GRAPH(\n    $name: String!\n    $traceFilters: [TraceFilter]\n    $to: DateTime\n    $from: DateTime\n  )", "content": "{\n    graphCreate(name: $name) {\n      id\n      name\n      stats(to: $to, from: $from, traceFilters: $traceFilters) {\n        errorCount\n        errorPercent\n        count\n        duration\n      }\n    }\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/graph/index.js", "repo": "craigmulligan_clementine"}}, {"type": "mutation", "name": "resumeRedshiftCluster($clusterUri: String!)", "content": "{\n      resumeRedshiftCluster(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/resumeCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteApplicationLabel($id: ID!)", "content": "{\n    deleteApplicationLabel(applicationID: $id, key: \"scenarios\") {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "SubmitMarriageCertificateOrder(\n    $contactName: String!\n    $contactEmail: String!\n    $confirmContactEmail: String!\n    $contactPhone: String!\n    $shippingName: String!\n    $shippingCompanyName: String!\n    $shippingAddress1: String!\n    $shippingAddress2: String!\n    $shippingCity: String!\n    $shippingState: String!\n    $shippingZip: String!\n    $cardToken: String!\n    $cardLast4: String!\n    $cardholderName: String!\n    $billingAddress1: String!\n    $billingAddress2: String!\n    $billingCity: String!\n    $billingState: String!\n    $billingZip: String!\n    $item: MarriageCertificateOrderItemInput!\n    $idempotencyKey: String!\n  )", "content": "{\n    submitMarriageCertificateOrder(\n      contactName: $contactName\n      contactEmail: $contactEmail\n      confirmContactEmail: $confirmContactEmail\n      contactPhone: $contactPhone\n      shippingName: $shippingName\n      shippingCompanyName: $shippingCompanyName\n      shippingAddress1: $shippingAddress1\n      shippingAddress2: $shippingAddress2\n      shippingCity: $shippingCity\n      shippingState: $shippingState\n      shippingZip: $shippingZip\n      cardToken: $cardToken\n      cardLast4: $cardLast4\n      cardholderName: $cardholderName\n      billingAddress1: $billingAddress1\n      billingAddress2: $billingAddress2\n      billingCity: $billingCity\n      billingState: $billingState\n      billingZip: $billingZip\n      item: $item\n      idempotencyKey: $idempotencyKey\n    ) {\n      order {\n        id\n      }\n      error {\n        message\n        cause\n      }\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/submit-marriage-certificate-order.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "verifyEmail($token: String!)", "content": "{\n  verifyEmail(token: $token) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "PostUnsubscribe ($postId: Int!)", "content": "{\n        postUnsubscribe(post_id: $postId) {\n            message\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/SubscriptionButton/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "CreateTenant($input: CreateTenantInput!)", "content": "{\n        createTenant(input: $input) {\n            referenceIdentifier\n            id\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/createTenant.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "createCoupon($coupon: AddCouponInput!)", "content": "{\n    createCoupon(coupon: $coupon) {\n      id\n      title\n      code\n      number_of_used_coupon\n      number_of_coupon\n      expiration_date\n      creation_date\n      status\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CampaingForm/CampaingForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "mut($in: Float!)", "content": "{\n            mut(inline: 5.5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "DeployIdentityEventsContract($from: String!)", "content": "{\n    deployIdentityEvents(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "deleteLesson($input: LessonId)", "content": "{\n    deleteLesson(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "addBookingToBill($bill: BillId!, $booking: BookingCreateInput!)", "content": "{\n        addBookingToBill(bill: $bill, booking: $booking) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/bill.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "ClientPortalNotificationsMarkAsRead($ids: [String])", "content": "{\n    clientPortalNotificationsMarkAsRead(_ids: $ids)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/main/containers/notifications/List.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "addUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n    token\n    user {\n        _id\n        username\n        email\n        password\n    }\n    }\n}", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "editProject($projectId: ID!, $input: EditProjectInput!)", "content": "{\n        editProject(projectId: $projectId, input: $input) {\n            _id\n            name\n            description\n            image\n            color\n            privacy\n            status\n            created_at\n            updated_at\n            owner {\n                _id\n                name\n                last_name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditProject.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "updateChannelSlackBotLinks($input: UpdateChannelSlackBotLinksInput)", "content": "{\n    updateChannelSlackBotLinks(input: $input) {\n      ...channelInfo\n      slackSettings {\n        botLinks {\n          threadCreated\n        }\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/updateChannelSlackBotLinks.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "usersChangePassword(\n          $currentPassword: String!\n          $newPassword: String!\n        )", "content": "{\n          usersChangePassword(\n            currentPassword: $currentPassword\n            newPassword: $newPassword\n          ) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/core-ui/src/modules/settings/profile/containers/ChangePassword.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "($signature: String, $password: String)", "content": "{\n    login(signature: $signature, password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "pages/login.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "($topic: String!, $description: String!, $level: EnumReportLevel, $targetURL: String!)", "content": "{\n        createReport(record: {\n            topic: $topic,\n            description: $description,\n            level: $level,\n            targetURL: $targetURL\n        }) {\n            recordId\n        }\n    }", "metadata": {"commit_hash": "69435c083093dc503080b01e26d8c039549d3d77", "file": "legacy/containers/ReportPage.js", "repo": "zapkub_cu-vivid-museum-wiki"}}, {"type": "mutation", "name": "DeleteRider($id:String!)", "content": "{\n        deleteRider(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Riders.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateTask($input: CreateTaskInput!)", "content": "{\n      createTask(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "logUser($username: String!, $password: String!)", "content": "{\n                    tokenAuth(username: $username, password: $password){\n                        token\n                        user{\n                          username\n                          roles{\n                            role\n                          }\n                          userpreferences{\n                            inappropiateLanguage\n                          }\n                        }\n                      }\n                }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/Sidebar/useSidebar.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "setThreadLock($threadId: ID!, $value: Boolean!)", "content": "{\n    setThreadLock(threadId: $threadId, value: $value) {\n      id\n      isLocked\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/lockThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateBooking($input: CreateBookingInput!)", "content": "{\n    createBooking(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/mutations/CreateBooking/index.ts", "repo": "AllTwinkleStars_recat"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          name\n          # missing field: description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "associateUserAccountWithAccountAndAccountRole(\n\t\t$emailAddress: String!\n\t\t$accountKey: String!\n\t\t$accountRoleId: Long!\n\t)", "content": "{\n\t\tcreateAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress(\n\t\t\taccountRoleId: $accountRoleId\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $accountKey\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "DeleteMatch($input: DeleteMatchInput!)", "content": "{\n      deleteMatch(input: $input) {\n        id\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/delete-match.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "runtimeAddKnownLinkLanguageTemplates($addresses: [String!]!)", "content": "{\n                runtimeAddKnownLinkLanguageTemplates(addresses: $addresses)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "updateUser(\n    $id: ID!\n    $birthday: Date\n    $firstName: String!\n    $lastName: String!\n    $phoneNumber: String\n    $address: AddressInput!\n  )", "content": "{\n    updateUser(\n      userId: $id\n      birthday: $birthday\n      firstName: $firstName\n      lastName: $lastName\n      phoneNumber: $phoneNumber\n      address: $address\n    ) {\n      id\n      name\n      firstName\n      lastName\n      phoneNumber\n      address {\n        id\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Particulars/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $password: String!\n    $confirmPassword: String!\n  )", "content": "{\n    registerClient(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/registerClientMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($data: ImageCreateInput!)", "content": "{\n\t\t\tcreateImage(data: $data) {\n\t\t\t\tid\n\t\t\t\timage {\n\t\t\t\t\tpublicUrl\n\t\t\t\t}\n\t\t\t}\n\t\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website-backend/admin/component-blocks/image-field.tsx", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "registerTestdomain($label: String)", "content": "{\n    registerTestdomain(label: $label)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "agentDeleteEntanglementProofs($proofs: [EntanglementProofInput!]!)", "content": "{\n                agentDeleteEntanglementProofs(proofs: $proofs) {\n                    ${ENTANGLEMENT_PROOF_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "signup(\n    $firstname: String!\n    $lastname: String!\n    $handle: String!\n    $email: String!\n    $password: String!\n  )", "content": "{\n    signup(\n      firstname: $firstname\n      lastname: $lastname\n      handle: $handle\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        id\n        handle\n        avatar\n        fullname\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/auth/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!, $communityId: ID!)", "content": "{\n    unsetCommunity(thread: $thread, id: $id, communityId: $communityId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "createPropertyRequest($message: String!, $requesterUsername: String!, $propertyId: Int!, $userToken: String!)", "content": "{\n            createPetition(message: $message, requesterUsername: $requesterUsername, propertyId: $propertyId, userToken: $userToken) {\n                petition {\n                    status\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "sendEmail($input:EmailInput!)", "content": "{\n\t\tsendEmail(input:$input) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "UpdatePassword($oldPassword: String!, $newPassword: String!)", "content": "{\n  updatePassword(oldPassword: $oldPassword, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "($chainId:String!,$decimals:String!,$tokenName:String!,$tokenSymbol:String!, $tokenaddress:String!,$totalSupply:String!,$userwallet:String!  )", "content": "{\n  insert_tokens(objects: {chainId: $chainId, decimal: $decimals,  tokenName: $tokenName, tokenSymbol: $tokenSymbol,tokenaddress:$tokenaddress,  totalSupply: $totalSupply, userwallet: $userwallet}){\n    returning {\n      id\n    \n    }\n  }\n}", "metadata": {"commit_hash": "ee32f3050e6809407130a613ee5622793dd94f76", "file": "src/pages/createToken.tsx", "repo": "Contrax-co_contrax-web"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "CreateAddons($addonInput:AddonInput)", "content": "{\n  createAddons(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "loginVendor($input: LoginInput!)", "content": "{\n        loginVendor(input: $input){\n            vendor{\n                id\n                name\n                email\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "UpdateDeathwish($input: UpdateDeathwishInput!)", "content": "{\n  updateDeathwish(input: $input) {\n    deathwish {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "updateTaskDueDate($taskID: UUID!, $dueDate: Time, $hasTime: Boolean!, $createNotifications: [CreateTaskDueDateNotification!]!, $updateNotifications: [UpdateTaskDueDateNotification!]!, $deleteNotifications: [DeleteTaskDueDateNotification!]!)", "content": "{\n  updateTaskDueDate(\n    input: {taskID: $taskID, dueDate: $dueDate, hasTime: $hasTime}\n  ) {\n    id\n    dueDate {\n      at\n    }\n    hasTime\n  }\n  createTaskDueDateNotifications(input: $createNotifications) {\n    notifications {\n      id\n      period\n      duration\n    }\n  }\n  updateTaskDueDateNotifications(input: $updateNotifications) {\n    notifications {\n      id\n      period\n      duration\n    }\n  }\n  deleteTaskDueDateNotifications(input: $deleteNotifications) {\n    notifications\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "HideEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\thideEventDefinitions(eventDefinitionIds: $eventDefinitionIds) {\n\t\t\tdescription\n\t\t\tdisplayName\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteCommunity(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "authenticateUserWithPhoneAndPassword ($phone: String!, $password: String!)", "content": "{\n        obj: authenticateUserWithPhoneAndPassword(data: { phone: $phone, password: $password }) {\n            item {\n                id\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/apollo-server-client/lib/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "updateAnno($data: AnnoUpdateInput!, $where: AnnoWhereUniqueInput!)", "content": "{\n    updateAnno(data: $data, where: $where) {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/update/anno-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "CreatePrivateTaskMessage($taskId: ID!, $message: String!)", "content": "{\n    createTaskMessages(taskId: $taskId, message: $message, isPublic: false) {\n      success\n      message {\n        id\n        message\n        createdAt\n        user {\n          fullName\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/CreatePrivateTaskMessage.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "DeleteCoupon($id:String!)", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Coupons.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "repoFileUploadCommit($id: ID!)", "content": "{\n    repoFileUploadCommit(id: $id) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/Upload.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "SaveOrderConfiguration($configurationInput:OrderConfigurationInput!)", "content": "{\n  saveOrderConfiguration(configurationInput:$configurationInput){\n    _id\n    order_id_prefix\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Configuration/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "createGroupalGroup($username: String!, $groupName: String!, $users: [String!]!, $userToken: String!)", "content": "{\n            createGroupalGroup(username: $username, groupName: $groupName, users: $users, userToken: $userToken) {\n                group{\n                    id\n                    name\n                    individual\n                    users {\n                        username\n                        profilePicture\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "($id: ID!, $startTime: String, $endTime: String)", "content": "{\n    updateThoughtOptions(id: $id, startTime: $startTime, endTime: $endTime) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "create$", "content": "{modelName}($input: Create${modelName}Input!) {\n                    create${modelName}(input: $input) {\n                        ${graphQLFields}\n                    }\n                }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "packages/datastore/src/replication/mutations/buildGraphQLCRUDMutations.ts", "repo": "aerogear_offix"}}, {"type": "mutation", "name": "SendChatMessage($orderId: ID!, $messageInput: ChatMessageInput!)", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/ChatWithCustomer/useChatScreen.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateCategory($category:CategoryInput)", "content": "{\n  createCategory(category:$category){\n    _id\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n        image\n        isActive\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "($user_id: Int)", "content": "{\n    insert_board (\n      objects: [{\n        user_1_id: $user_id,\n        turn: \"x\",\n      }]\n    ) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "tic-tac-toe-react/client/src/components/Boards/BoardsList.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "deleteEje($where: EjeWhereUniqueInput!)", "content": "{\n    deleteEje(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "importAirflowCluster(\n      $environmentUri: String!\n      $clusterInput: ImportClusterInput!\n    )", "content": "{\n      importAirflowCluster(\n        environmentUri: $environmentUri\n        clusterInput: $clusterInput\n      ) {\n        clusterUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/importCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "($key: String!)", "content": "{\n    removeApiKey(key: $key)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/SecureKeysQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "UpdateTopic($topicUri: String, $input: OrganizationTopicInput)", "content": "{\n      updateTopic(organizationUri: $organizationUri, input: $input) {\n        topicUri\n        label\n        description\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/updateTopic.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "enableCommunityTokenJoin($input: EnableCommunityTokenJoinInput!)", "content": "{\n    enableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/enableCommunityTokenJoin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "resetMembership($membershipId: ID!)", "content": "{\n    resetMembership(id: $membershipId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/ResetMembership.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "BlockCustomEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\tblockCustomEventDefinitions(eventDefinitionIds: $eventDefinitionIds)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/CustomEventDefinitions.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "UpdateMessage($instanceId: ID, $id: ID, $message: String)", "content": "{\n    updateMessage(instanceId: $instanceId, id: $id, message: $message)\n    Boolean\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/messages/mutations/updateMessage.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "ideaIssueDelete($id: ID!)", "content": "{\n      ideaIssueDelete(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "signUp($name: String!, $email: String!, $password: String!)", "content": "{\n            signUp(name: $name, email: $email, password: $password) {\n              _\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "AddOrUpdateCartShpment($command: InputAddOrUpdateCartShipmentType!)", "content": "{\n    addOrUpdateCartShipment(command: $command) {\n      name\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/addOrUpdateCartShipment/addOrUpdateCartShipmentMutation.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "mutation", "name": "CreateUserMutation(\n    $email: String!\n    $password: String!\n    $name: String!\n  )", "content": "{\n    signup(email: $email, password: $password, name: $name) {\n      token\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "868e58e4a19847fd9104e13922229edb96e4dda7", "file": "packages/components/signup-form/signup-form.js", "repo": "dferber90_lovely-webapp"}}, {"type": "mutation", "name": "customerUpdate($input: CustomerInput!)", "content": "{\n      customerUpdate(input: $input) {\n        customer {\n          id\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }", "metadata": {"commit_hash": "5dcbe39560ea84d54883c7e27657773311319d25", "file": "server/handlers/mutations/add-customer-metafield.js", "repo": "CharmingDev777_shopipoints.com-custom-app-main"}}, {"type": "mutation", "name": "($refreshToken: String!, $accessToken: String!)", "content": "{\n          destroyToken(refreshToken: $refreshToken, accessToken: $accessToken )\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/auth.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($name: String!)", "content": "{\n    createTeam(name: $name) {\n      ok\n      team {\n        id\n      }\n      errors {\n        path\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/routes/CreateTeam.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteDevice(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/devices/pages/devices.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "agentGenerateJwt($requestId: String!, $rand: String!)", "content": "{\n            agentGenerateJwt(requestId: $requestId, rand: $rand)\n          }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Otp/Phone/usePhoneOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AuthenticateUserMutation ($email: String!, $password: String!)", "content": "{ \n    authenticateUser(email: $email, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-email-and-apollo/src/components/LoginUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteUser($ids: [String]!)", "content": "{\n    deleteUser(ids: $ids) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/users.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "($postID: ID!, $userID: ID!)", "content": "{\n    updatePostLike(postId: $postID, userId: $userID) {\n      post {\n        id\n        title\n        likes {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "mutation", "name": "CreatePayment($serviceNameSlug: String!, $nameSlug: String!)", "content": "{\n    payment: createProductPayment(\n      serviceNameSlug: $serviceNameSlug\n      nameSlug: $nameSlug\n    ) {\n      ...ProductPayment\n    }\n  }\n  ${ProductPaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/products/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "Submit($id: ID!)", "content": "{\n        submit(id: $id) {\n            id\n            status\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "toggleTaskWatch($taskID: UUID!)", "content": "{\n  toggleTaskWatch(input: {taskID: $taskID}) {\n    id\n    watched\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "AuthenticateUserMutation ($email: String!, $password: String!)", "content": "{ \n    authenticateUser(email: $email, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/auth/Login.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "unblockUser($input: UnblockUserInput!)", "content": "{\n    unblockUser(input: $input) {\n      ...channelInfo\n      pendingUsers {\n        ...userInfo\n      }\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${channelInfoFragment}\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/unblockChannelBlockedUser.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "updatePrecautionNotificationImage(\n        $id:Int!,\n        $imageName:String)", "content": "{\n            updatePrecautionNotificationImage(\n                id:$id,\n                imageName:$imageName) {\n                    status\n                    errorMessage\n            }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/PrecautionNotification/updatePrecautionNotificationImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "UniswapAddLiquidity(\n    $from: String!\n    $exchange: String!\n    $value: String!\n    $tokens: String!\n    $liquidity: String!\n  )", "content": "{\n    uniswapAddLiquidity(\n      from: $from\n      exchange: $exchange\n      value: $value\n      tokens: $tokens\n      liquidity: $liquidity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "RegisterOrganization($input: RegisterOrganization!)", "content": "{\n    registerOrganization(input: $input){\n      organization {\n        name\n        address\n        role\n      }\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/server-settings.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "moveThread($threadId: ID!, $channelId: ID!)", "content": "{\n    moveThread(threadId: $threadId, channelId: $channelId) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/moveThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "addProject(\n            $name: String\n            $description: String\n            $avatar: String\n            $image: String\n            $website: String\n            $github: String\n            $twitter: String\n            $isRepresentative: Boolean\n            $categories: [Category]\n          )", "content": "{\n            addProject(\n              name: $name\n              description: $description\n              avatar: $avatar\n              image: $image\n              website: $website\n              github: $github\n              twitter: $twitter\n              isRepresentative: $isRepresentative\n              categories: $categories\n            ) @client\n          }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/__tests__/index.test.ts", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "featureCommentMutation(\n    $commentId: ID!\n    $content: String\n    $targets: [CommentFeaturedTarget!]\n  )", "content": "{\n    featureComment(id: $commentId, content: $content, targets: $targets) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/mutations/FeatureCommentMutation.graphql.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "createGroupalGroup($username: String!, $groupName: String!, $users: [String!]!, $userToken: String!)", "content": "{\n            createGroupalGroup(username: $username, groupName: $groupName, users: $users, userToken: $userToken) {\n                group{\n                    id\n                    name\n                    individual\n                    users {\n                        username\n                        profilePicture\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "mergeOrganizations($primaryOrganizationId: ID!, $mergedOrganizationIds: [ID!]!)", "content": "{\n  organization_Merge(\n    primaryOrganizationId: $primaryOrganizationId\n    mergedOrganizationIds: $mergedOrganizationIds\n  ) {\n    id\n    ...OrganizationDetails\n  }\n}\n    ${OrganizationDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateUser(\n    $id: ID!\n    $birthday: Date\n    $firstName: String!\n    $lastName: String!\n    $phoneNumber: String\n    $address: AddressInput!\n  )", "content": "{\n    updateUser(\n      userId: $id\n      birthday: $birthday\n      firstName: $firstName\n      lastName: $lastName\n      phoneNumber: $phoneNumber\n      address: $address\n    ) {\n      id\n      name\n      firstName\n      lastName\n      phoneNumber\n      address {\n        id\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Particulars/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateCarrierStatus($status: Boolean)", "content": "{\n    updateCarrierStatus(status: $status) \n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "updateProjectMemberRole($projectID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateProjectMemberRole(input: { projectID: $projectID, userID: $userID, roleCode: $roleCode }) {\n      ok\n      member {\n        id\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/updateProjectMemberRole.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "addressLinkConfirm($address_id: Int!, $signature: String!)", "content": "{\n  addressLinkConfirm(address_id: $address_id, signature: $signature) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "f5ab662234b8c76b3aec239184c34ae7b8b89d6e", "file": "admin-ui/src/auth-provider/ra-auth-jwt.ts", "repo": "VoidCupboard_ContactBook"}}, {"type": "mutation", "name": "inviteProjectMembers($projectID: UUID!, $members: [MemberInvite!]!)", "content": "{\n  inviteProjectMembers(input: {projectID: $projectID, members: $members}) {\n    ok\n    invitedMembers {\n      email\n      invitedOn\n    }\n    members {\n      id\n      fullName\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      username\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateMemberRole($projectId: ID!, $userId: ID!, $roleId: ID!)", "content": "{\n        updateMemberRole(\n            projectId: $projectId\n            userId: $userId\n            roleId: $roleId\n        ) {\n            _id\n            name\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlUpdateMemberRole.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "deleteEje($where: EjeWhereUniqueInput!)", "content": "{\n    deleteEje(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    emailName\n    password\n    enableEmail\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Configuration/Email/Email.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "updateFlag($id: ID!, $input: UpdateFlag!)", "content": "{\n        updateFlag(id: $id, input: $input) {\n            id\n            key\n            name\n            description\n            enabled\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "RemoveSharedItem($shareItemUri: String!)", "content": "{\n      removeSharedItem(shareItemUri: $shareItemUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/removeSharedItem.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "setNewDefaultPaymentMethod($workspaceId: uuid!, $paymentMethodId: uuid!)", "content": "{\n  setAllPaymentMethodToDefaultFalse: updatePaymentMethods(\n    where: {workspaceId: {_eq: $workspaceId}}\n    _set: {isDefault: false}\n  ) {\n    affected_rows\n  }\n  updatePaymentMethods(\n    where: {id: {_eq: $paymentMethodId}}\n    _set: {isDefault: true}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "disableCommunityWatercooler(\n    $input: DisableCommunityWatercoolerInput!\n  )", "content": "{\n    disableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/disableCommunityWatercooler.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteScores($player: ID!)", "content": "{\n    deleteScores(player: $player) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "createFlag($input: NewFlag!)", "content": "{\n        createFlag(input: $input) {\n            id\n            key\n            name\n            enabled\n            description\n            createdAt\n            __typename\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "StoreCopy($id: String!)", "content": "{\n    storeCopy(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/store_copy.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ideaChangeStatus($input: IdeaChangeStatusInput!)", "content": "{\n      ideaChangeStatus(input: $input) {\n        ...ideaFullFields\n      }\n    }\n    ${IDEA_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/idea.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n        _id\n        title\n        discount\n        enabled\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteApiKey($ApiKeyId: String!)", "content": "{\n      deleteApiKey(ApiKeyId: $ApiKeyId)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ApiKeys/deleteApiKey.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    toggleThoughtItemCompleted(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "CreateMyRoom($input: RoomCreateInput!)", "content": "{\n      createMyRoom(input: $input) {\n        id\n        ownerId\n        title\n        description\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "createIdea($challengeId: String!, $title: String!, $description: String, $upload: Upload)", "content": "{\n            createIdea(challengeId: $challengeId, title: $title, description: $description, upload: $upload) {\n              id\n              title\n              description\n              imageUrl\n\n              challenge {\n                id\n                closeDate\n              }\n\n              createdBy {\n                id\n                name\n                imageUrl\n              }\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "ChangePassword($oldPassword:String!,$newPassword:String!)", "content": "{\n    changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Profile/PasswordCard/PasswordCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "createContactJobRole($contactId: ID!, $input: JobRoleInput!)", "content": "{\n  jobRole_Create(contactId: $contactId, input: $input) {\n    ...JobRole\n    organization {\n      id\n      name\n    }\n  }\n}\n    ${JobRoleFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "saveRestaurantToken($token:String, $isEnabled:Boolean)", "content": "{\n  saveRestaurantToken(token:$token, isEnabled: $isEnabled ){\n    _id\n    notificationToken\n    enableNotification\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useNotification.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "deleteRole($id: String!)", "content": "{\n    deleteRole(id: $id) {\n      id\n      roleSettings\n      title\n      color\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Role.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "updateTweet(\n    $_id: String!,\n    $tweet: String!\n  )", "content": "{\n    updateTweet(\n      _id: $_id,\n      tweet: $tweet\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "createTeam($name: String!, $organizationID: UUID!)", "content": "{\n  createTeam(input: {name: $name, organizationID: $organizationID}) {\n    id\n    createdAt\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateEmail($id: ID!, $email: String!)", "content": "{\n    updateEmail(userId: $id, email: $email) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Email/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "update_todo ($todoId: Int, $set: todo_set_input!)", "content": "{\n    update_todo(where: {id: {_eq: $todoId}} _set: $set) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "editAddon($addonInput:AddonInput)", "content": "{\n  editAddon(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "submitCandidacy($slug: String!)", "content": "{\n    cancelCandidacy(slug: $slug) {\n      candidacies {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/ElectionCandidacy.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "AddAffiliate($affiliate: String, $from: String)", "content": "{\n    addAffiliate(affiliate: $affiliate, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "createService(\n        $service: CreateService!,\n    )", "content": "{\n        createService(service:$service){\n           service {\n             ${SERVICE}\n           }\n           commitId\n        }\n    }", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "DeletePostReaction ($postId: Int!, $userId: Int!, $reaction: bpchar!)", "content": "{\n        delete_post_reactions(where: {_and: [{post_id: {_eq: $postId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "disconnectPlayer($id: ID!)", "content": "{\n    disconnect(id: $id) ${presenceResult}\n  }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "test/integration/apiclient.ts", "repo": "aws-samples_aws-appsync-presence-api"}}, {"type": "mutation", "name": "authenticateUserWithPhoneAndPassword ($phone: String!, $password: String!)", "content": "{\n        obj: authenticateUserWithPhoneAndPassword(data: { phone: $phone, password: $password }) {\n            item {\n                id\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/apollo-server-client/lib/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "($id: Int!, $admin: InputAdmin!)", "content": "{\n  editAdmin(id:$id, admin: $admin) {\n    id,\n    username,\n    first_name,\n    last_name,\n    username,\n    payload,\n    permissions,\n    chatbotIds,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/admins/hooks/admins.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "UnpauseApplication($appId: uuid!)", "content": "{\n  updateApp(pk_columns: {id: $appId}, _set: {desiredState: 5}) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "DeleteLabelDefinition($key: String!)", "content": "{\n    deleteLabelDefinition(key: $key) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/MetadataDefinitions/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "UpdateStatus($id:String!,$orderStatus:String!)", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dispatch.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "REMOVE_FROM_CART_MUTATION($id: ID!)", "content": "{\n    deleteCartItem(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/RemoveFromCart.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "AddFunds($offerID: String!, $amount: String!, $from: String)", "content": "{\n    addFunds(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteUser(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/users/hooks/users.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "createStaff($staff: AddStaffInput!)", "content": "{\n    createStaff(staff: $staff) {\n      id\n      first_name\n      last_name\n      name\n      email\n      contact_number\n      creation_date\n      role\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/StaffMemberForm/StaffMemberForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  user: deleteChatId(id: $id) {\n    id,\n    chatIds {\n      id,\n      transport,\n      chatId\n    }\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/chat-ids-manager/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "deleteAccount($password: String!)", "content": "{\n    deleteAccount(password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/delete/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "addDatasetToRedshiftCluster(\n      $clusterUri: String\n      $datasetUri: String\n    )", "content": "{\n      addDatasetToRedshiftCluster(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/addDatasetToCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UserOAuthLogin($req: ApiReqUserOAuthLogin!)", "content": "{\n      user {\n        oauthLogin(req: $req) {\n          session { token },\n          user { id, email, name }\n        }\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "mutation", "name": "createFeedback($authToken:String!, $feedback: FeedbackInput)", "content": "{\n    CreateFeedback(input:{ feedback: $feedback, auth_token: $authToken }) {\n      __typename\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/FeedbackContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "mediaUpload($input: MediaUploadParams!)", "content": "{\n          mediaUpload(input: $input) {\n            messages {\n              field\n              message\n            }\n            successful\n            result {\n              id\n              headers {\n                name\n                value\n              }\n              method\n              referenceUrl\n              uploadUrl\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "SetDarkDieStatus($targets: [Int]!)", "content": "{\n    setDarkDieStatus(targets: $targets)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/DarkPlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "CreateVendor($vendorInput:VendorInput)", "content": "{\n    createVendor(vendorInput:$vendorInput){\n      _id\n      email\n      userType\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Vendor/Vendor.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "setIsActiveFloor($id: ID!, $isActive: Boolean!)", "content": "{\n        setIsActiveFloor(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/floor.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "SaveOrderConfiguration($configurationInput:OrderConfigurationInput!)", "content": "{\n  saveOrderConfiguration(configurationInput:$configurationInput){\n    _id\n    order_id_prefix\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Configuration/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "SignupMutation($name: String!, $email: String!, $password: String!, $confirmPassword: String!)", "content": "{\n        signup(name: $name, email: $email, password: $password, confirmPassword: $confirmPassword) {\n            email\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "WithdrawListing(\n    $data: String!\n    $from: String!\n    $listingID: String\n    $offerID: String\n  )", "content": "{\n    addData(\n      data: $data\n      listingID: $listingID\n      offerID: $offerID\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "PostUnsubscribe ($postId: Int!)", "content": "{\n        postUnsubscribe(post_id: $postId) {\n            message\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/SubscriptionButton/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "($appId : ID! $payload : PackageCreateInput!)", "content": "{\n    addPackage(\n      applicationID: $appId\n      in: $payload  \n    ){\n      id\n    }}", "metadata": {"commit_hash": "e6d9b79197464112cbebeee76cf596345acc67b3", "file": "modules/app-connector/src/server/compass/api.ts", "repo": "kyma-incubator_varkes"}}, {"type": "mutation", "name": "sendEmail($input:EmailInput!)", "content": "{\n\t\tsendEmail(input:$input) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "deleteUser($ids: [String]!)", "content": "{\n    deleteUser(ids: $ids) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/users.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "ResetPassword($email: String!)", "content": "{\n    resetPassword(email: $email) {\n      message\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/SignIn/ResetPassword.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          name\n          # missing field: description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "CancelOrder($_id:String!,$reason:String!)", "content": "{\n    cancelOrder(_id:$_id,reason:$reason){\n        _id\n      orderStatus\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useCancelOrder.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "deleteRole($id: String!)", "content": "{\n    deleteRole(id: $id) {\n      id\n      roleSettings\n      title\n      color\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Role.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "CheckItemsAvailability($items: [ID!]!)", "content": "{\n    checkItemsAvailability(items: $items)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "($id: ID!, $data: PageUpdateInput!)", "content": "{\n\t\t\t\t\t\tupdatePage(where: { id: $id }, data: $data) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website-backend/migrations/migrate-content.ts", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "moveMembership($membershipId: ID!, $userId: ID!)", "content": "{\n    moveMembership(membershipId: $membershipId, userId: $userId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/MoveMembership.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "start", "content": "{\n        start @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createFlag($input: NewFlag!)", "content": "{\n        createFlag(input: $input) {\n            id\n            key\n            name\n            enabled\n            description\n            createdAt\n            __typename\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "deleteSegmentRule($id: ID!, $segmentId: ID!)", "content": "{\n        deleteSegmentRule(id: $id, segmentId: $segmentId)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "(\n          $authenticationType: String,\n          $emailCreator: String\n        )", "content": "{\n          createWorkspaceCreation(input: {\n            AuthenticationType: $authenticationType,\n            CreationStartDate: \"${new Date().toDateString()}\",\n            ReadPrivacyStatementDate: \"${new Date().toDateString()}\"\n            CreationFinishDate: \"${new Date().toDateString()}\",\n            EmailCreator: $emailCreator\n          }) {\n            ID\n          }\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "DestroyCost($costId: String!)", "content": "{\n    destroyCost(costId: $costId)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "friendDelete($input: FriendDeleteInput!)", "content": "{\n          friendDelete(input: $input) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "acceptInvitation($friendName: String!)", "content": "{\n\t\tacceptInvitation(friendName: $friendName)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "setCompleted", "content": "{\n        setCompleted(todoId: \"3\") {\n          id\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "sendSlackInvites($input: SendSlackInvitesInput!)", "content": "{\n    sendSlackInvites(input: $input) {\n      ...communityInfo\n      slackSettings {\n        teamName\n        isConnected\n        hasSentInvites\n        memberCount\n        invitesSentAt\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/sendSlackInvites.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "sendNotification(\n    $receiverName: String\n    $messageId: ID!\n    $channelUrl: String\n    $communityUrl: String\n  )", "content": "{\n    sendNotification(\n      receiverName: $receiverName\n      messageId: $messageId\n      channelUrl: $channelUrl\n      communityUrl: $communityUrl\n      type: \"mention\"\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "updateTaskDescription($taskID: UUID!, $description: String!)", "content": "{\n  updateTaskDescription(input: {taskID: $taskID, description: $description}) {\n    id\n    description\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "($chainId:String!,$decimals:String!,$tokenName:String!,$tokenSymbol:String!, $tokenaddress:String!,$totalSupply:String!,$userwallet:String!  )", "content": "{\n  insert_tokens(objects: {chainId: $chainId, decimal: $decimals,  tokenName: $tokenName, tokenSymbol: $tokenSymbol,tokenaddress:$tokenaddress,  totalSupply: $totalSupply, userwallet: $userwallet}){\n    returning {\n      id\n    \n    }\n  }\n}", "metadata": {"commit_hash": "ee32f3050e6809407130a613ee5622793dd94f76", "file": "src/pages/createToken.tsx", "repo": "Contrax-co_contrax-web"}}, {"type": "mutation", "name": "VerifyEmail($token: String!)", "content": "{\n    personVerifyEmailVerification(token: $token)\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "pages/email/verify/[token].tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "($postId: Int!, $userId: String!)", "content": "{\n    delete_Like(\n      where: { user_id: { _eq: $userId }, post_id: { _eq: $postId } }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "7907866ee41941a96b937dd6e34724a112ce5298", "file": "src/components/Like.js", "repo": "abhi40308_instagram-clone"}}, {"type": "mutation", "name": "DeletePostMutation($id: ID!)", "content": "{\n    deletePost(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/quickstart-with-apollo/src/components/DetailPage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "shareProjectByLinkId($id: ID!)", "content": "{\n      shareProjectByLinkId(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/project_sharelink.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "($resetPasswordEmailInput: ResetInput!)", "content": "{\n    resetPassword(emailInput: $resetPasswordEmailInput) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        email\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/resetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "createUser ($username: String, $email: String, $password: HashedPassword!, $profile: CreateUserProfileInput)", "content": "{\n        createUser (username: $username, email: $email, password: $password, profile: $profile) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/create-user.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "importIdentities(\n    $backend: String!\n    $interval: Int\n    $params: JSONString\n    $url: String\n  )", "content": "{\n    addImportIdentitiesTask(\n      backend: $backend\n      interval: $interval\n      params: $params\n      url: $url\n    ) {\n      task {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "DeletePost($id: ID!)", "content": "{\n    deletePost(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next-cms/pages/posts/index.js", "repo": "department-stockholm_apollo-component"}}, {"type": "mutation", "name": "(\n    $firstName: String\n    $lastName: String\n    $email: String\n    $phoneNumber: String\n    $password: String\n  )", "content": "{\n    updateClientInformation(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      password: $password\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateClientInformationMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "deleteResources($ids: [String]!)", "content": "{\n    deleteResources(ids: $ids) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/resources.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "addLike($id: Int)", "content": "{\n    addLike(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "50a7e35226ea083cf59a1896e507bf80bdae82e8", "file": "src/client/components/pages/Apollo/Apollo.tsx", "repo": "hiroppy_ssr-sample"}}, {"type": "mutation", "name": "emailCodeAuth($email: String!, $code: String!)", "content": "{\n    emailCodeAuth(email: $email, code: $code) {\n      status\n      token\n    }\n  }", "metadata": {"commit_hash": "cebe603e320fbfdc9ef167c45f87a7f383790754", "file": "apollo/auth/mutations/emailCodeAuth.js", "repo": "JustShip_justship_web"}}, {"type": "mutation", "name": "($username: String!, $password: String!)", "content": "{\n    sessionCreate(username: $username, password: $password) {\n      id\n      accessToken\n      userID\n    }\n  }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/session-create.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "setEditName($edit: Boolean!, $_id: String!)", "content": "{\n  update_names(where: {_id: {_eq: $_id }}, \n  _set: {\n    edit: true\n  }) \n  {\n    affected_rows\n  }\n\n    }", "metadata": {"commit_hash": "07231cecbda91b36f6d8088c9dd2e7f2fa54f365", "file": "graphdemo/src/constants/graphql.js", "repo": "malgamves_firebase2graphql-demo"}}, {"type": "mutation", "name": "updateEnrollment(\n    $fromDate: DateTime!\n    $newFromDate: DateTime\n    $newToDate: DateTime\n    $group: String!\n    $toDate: DateTime!\n    $uuid: String!\n    $parentOrg: String\n  )", "content": "{\n    updateEnrollment(\n      fromDate: $fromDate\n      newFromDate: $newFromDate\n      newToDate: $newToDate\n      group: $group\n      toDate: $toDate\n      uuid: $uuid\n      parentOrg: $parentOrg\n    ) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "createArea($data: AreaCreateInput!)", "content": "{\n    createArea(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/create/area-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Rider/Rider.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "($input :InputjobMemberSave!, $workspaceCode : ID!)", "content": "{\n                    createJobMember(input: $input, workspaceCode: $workspaceCode){\n                        ID\n                        JobProfileTitle\n                        CanAllocateTasks\n                        MemberName\n                    }\n                }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/job.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "createMessage($input: CreateMessageInput!)", "content": "{\n      createMessage(input: $input) {\n        __typename\n        id\n        content\n        createdAt\n        attendeeId\n        chatThreadId\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/create-message.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "createQuicksightDataSourceSet ($vpcConnectionId: String!)", "content": "{\n      createQuicksightDataSourceSet(vpcConnectionId: $vpcConnectionId)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/createQuicksightDataSourceSet.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createTaskChecklist($taskID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskChecklist(input: {taskID: $taskID, name: $name, position: $position}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "DeleteCategory($id:String!)", "content": "{\n        deleteCategory(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "createMes($data: MesCreateInput!)", "content": "{\n    createMes(data: $data) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/create/mes-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "addOrderToCart($orderId: ID!, $replace: Boolean!)", "content": "{\n    addOrderToCart(orderId: $orderId, replace: $replace) {\n      id\n      quantity\n      variant {\n        id\n        available\n        price\n        selectedOptions {\n          id\n          option {\n            id\n            name\n          }\n          value {\n            id\n            name\n          }\n        }\n        product {\n          id\n          name\n          imageUrl\n          unavailableOptionsValues {\n            id\n            name\n          }\n          brand {\n            id\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/orders/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "(\n    $controller: String!\n    $chainId: Int!\n    $signature: String!\n    $logo: String\n    $summary: String\n  )", "content": "{\n    savePool(\n      controller: $controller\n      chainId: $chainId\n      signature: $signature\n      logo: $logo\n      summary: $summary\n    ) {\n      message\n      ok\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/PoolManager/Details/PoolImage/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "mutation", "name": "CreateRestaurant($restaurant:RestaurantInput!,$owner:ID!)", "content": "{\n  createRestaurant(restaurant:$restaurant,owner:$owner){\n    _id\n    orderId\n    orderPrefix\n    name\n    slug\n    image\n    address\n    username\n    password\n    minimumOrder\n    tax\n    location{coordinates}\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Restaurant/CreateRestaurant.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "createCoupon($coupon: AddCouponInput!)", "content": "{\n    createCoupon(coupon: $coupon) {\n      id\n      title\n      code\n      number_of_used_coupon\n      number_of_coupon\n      expiration_date\n      creation_date\n      status\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CampaingForm/CampaingForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "($name: String!, $description: String)", "content": "{\n      newQuestionSet: AddOutcomeSet(name: $name, description: $description) {\n        ...defaultOutcomeSet\n      }\n    }\n    ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/outcomeSets/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "enableBrandedLogin($input: EnableBrandedLoginInput!)", "content": "{\n    enableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/enableBrandedLogin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "perspectiveAddLinks($uuid: String!, $links: [LinkInput!]!)", "content": "{\n                perspectiveAddLinks(links: $links, uuid: $uuid) {\n                    ${LINK_EXPRESSION_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "editSection($section:SectionInput!)", "content": "{\n  editSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Section/Section.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "updateTaskDescription($taskID: UUID!, $description: String!)", "content": "{\n  updateTaskDescription(input: {taskID: $taskID, description: $description}) {\n    id\n    description\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "toggleNotificationSettings($input: ToggleNotificationSettingsInput)", "content": "{\n    toggleNotificationSettings(input: $input) {\n      ...userInfo\n      ...userSettings\n    }\n  }\n  ${userInfoFragment}\n  ${userSettingsFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/user/toggleUserNotificationSettings.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdatePaymentStatus($id:String!,$status:String!)", "content": "{\n  updatePaymentStatus(id:$id,status:$status){\n    _id\n    payment_status\n    paid_amount\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "AddListOwner(\n    $listId: ID!\n    $companyId: ID!\n    $userEmails: [String!]\n    $teamIds: [ID!]\n  )", "content": "{\n    addListOwner(\n      listId: $listId\n      companyId: $companyId\n      userEmails: $userEmails\n      teamIds: $teamIds\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddListOwner.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "commit(\n    $repoId: ID!\n    $parentId: ID\n    $message: String!\n    $document: DocumentInput!\n    $isTemplate: Boolean\n  )", "content": "{\n    commit(\n      repoId: $repoId\n      parentId: $parentId\n      message: $message\n      document: $document\n      isTemplate: $isTemplate\n    ) {\n      ...CommitWithDocument\n      repo {\n        ...EditPageRepo\n      }\n    }\n  }\n  ${fragments.CommitWithDocument}\n  ${fragments.EditPageRepo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Edit/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "validateEmail", "content": "{\n            checkEmail\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "GetSignedS3Url($data: S3SignedUrlInput!)", "content": "{\n    getSignedS3Url(data: $data) {\n      url\n      signedRequest\n    }\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/shared/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "CreateFormSubmission($revision: ID!, $data: JSON!)", "content": "{\n      formBuilder {\n        createFormSubmission(revision: $revision, data: $data) {\n          data {\n            id\n            data\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/react-marketingsite/src/components/Form.jsx", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "CancelOrder($_id:String!,$reason:String!)", "content": "{\n    cancelOrder(_id:$_id,reason:$reason){\n        _id\n      orderStatus\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useCancelOrder.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "resetPassword($id: ID!)", "content": "{\n        resetPassword(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "submitConsent", "content": "{\n    submitConsent(name: \"PROGRESS\") {\n      id\n      ...ProgressConsent\n    }\n  }\n  ${userProgressConsentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Article/Progress/api.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "UniswapCreateExchange($from: String!, $tokenAddress: String!)", "content": "{\n    uniswapCreateExchange(from: $from, tokenAddress: $tokenAddress) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateUser($phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)", "content": "{\n        createUser(userInput:{\n            phone:$phone,\n            email:$email,\n            password:$password,\n            name:$name,\n            notificationToken:$notificationToken,\n            appleId:$appleId\n        }){\n            userId\n            token\n            tokenExpiration\n            name\n            email\n            phone\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyEmail/VerifyEmail.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateUser($data: UserInput!)", "content": "{\n      createUser(data: $data) {\n        name\n        email\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/whoswho/src/api/graphql/queries/User.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "payPledge(\n    $pledgeId: ID!\n    $method: PaymentMethod!\n    $sourceId: String\n    $pspPayload: JSON\n    $address: AddressInput\n    $paperInvoice: Boolean\n    $makeDefault: Boolean\n  )", "content": "{\n    payPledge(\n      pledgePayment: {\n        pledgeId: $pledgeId\n        method: $method\n        sourceId: $sourceId\n        makeDefault: $makeDefault\n        pspPayload: $pspPayload\n        address: $address\n        paperInvoice: $paperInvoice\n      }\n    ) {\n      pledgeId\n      userId\n      emailVerify\n      stripePublishableKey\n      stripeClientSecret\n      stripePaymentIntentId\n      companyId\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Submit.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "UpdateLabelDefinition($in: LabelDefinitionInput!)", "content": "{\n    updateLabelDefinition(in: $in) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/MetadataDefinitions/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\nupdateRiderLocation(latitude:$latitude,longitude:$longitude){\n  _id\n}\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "addRestore($input: AddRestoreInput!)", "content": "{\n    addRestore(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/RestoreButton/Prepare.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "AssignOrder($id:String!)", "content": "{\n    assignOrder(id:$id){\n      _id\n      rider{\n        _id\n      }\n    }\n}", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/screens/OrderDetail/OrderDetail.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}}, {"type": "mutation", "name": "editSection($section:SectionInput!)", "content": "{\n  editSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Sections.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "UpdateEnvironment(\n      $environmentUri: String!\n      $input: ModifyEnvironmentInput\n    )", "content": "{\n      updateEnvironment(environmentUri: $environmentUri, input: $input) {\n        environmentUri\n        label\n        userRoleInEnvironment\n        SamlGroupName\n        AwsAccountId\n        dashboardsEnabled\n        notebooksEnabled\n        mlStudiosEnabled\n        pipelinesEnabled\n        warehousesEnabled\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/updateEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RecommendationMutation(\n\t\t$name: String!\n\t\t$parameters: [JobParameterInput]\n\t\t$runDataPeriod: JobRunDataPeriod\n\t\t$runFrequency: JobRunFrequency\n\t\t$runNow: Boolean\n\t\t$type: JobType!\n\t)", "content": "{\n\t\tcreateJob(\n\t\t\tname: $name\n\t\t\tparameters: $parameters\n\t\t\trunDataPeriod: $runDataPeriod\n\t\t\trunFrequency: $runFrequency\n\t\t\trunNow: $runNow\n\t\t\ttype: $type\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tparameters {\n\t\t\t\tname\n\t\t\t\tvalue\n\t\t\t}\n\t\t\tstatus\n\t\t\trunDataPeriod\n\t\t\trunDate\n\t\t\trunFrequency\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "($registerUser: UserInput)", "content": "{\n    register(user: $registerUser) {\n      user {\n        createdAt\n        email\n        username\n        id\n      }\n      error {\n        name\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/register.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "pushNotificationsDisable($input: PushNotificationsDisableInput!)", "content": "{\n          pushNotificationsDisable(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "setThreadLock($threadId: ID!, $value: Boolean!)", "content": "{\n    setThreadLock(threadId: $threadId, value: $value) {\n      id\n      isLocked\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/lockThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "signup($data: UserSignupInput!)", "content": "{\n    signup(data: $data) {\n      user {\n        firstname\n        lastname\n        email\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/signup/signup.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "setAddr($name: String, $key: String, $recordValue: String)", "content": "{\n    setAddr(name: $name, key: $key, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "createTweet(\n    $tweet: String,\n    $author: String,\n    $createdAt: DateTime\n  )", "content": "{\n    createTweet(\n      tweet: $tweet,\n      author: $author,\n      createdAt: $createdAt\n\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/React_Notes_V3/React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "upsertRegion($organisation: UpsertOrganisationInput!)", "content": "{\n  upsertRegion(organisation: $organisation) {\n    success\n    error\n    organisation {\n      id\n      avatarMimeType\n      avatarUrl\n      circlesAddress\n      circlesSafeOwner\n      cityGeonameid\n      city {\n        geonameid\n        country\n        name\n        latitude\n        longitude\n        population\n        feature_code\n      }\n      createdAt\n      description\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "($commentId: ID!, $body: String!)", "content": "{\n    updateComment (input: { id: $commentId, body: $body }) {\n      comment {\n        ...CommentForm\n      }\n    }\n  }\n  ${CommentForm.fragments.comment}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/comments/CommentForm.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "AddMember($teamID: String!, $userID: String!)", "content": "{\n        addMember(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AcceptOrder($_id:String!, $time:String)", "content": "{\n    acceptOrder(_id:$_id, time:$time){\n        _id\n      orderStatus\n      preparationTime\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useAcceptOrder.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "Refresh($refreshToken: Jwt!)", "content": "{\n    refresh(request: { refreshToken: $refreshToken }) {\n      accessToken\n      refreshToken\n    }\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/refresh.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n        _id\n        title\n        discount\n        enabled\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "Login($email: String, $password: String)", "content": "{\n    login(email:$email, password: $password){\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "2047e35b620fe66e4fa7253daec3c2664285b96f", "file": "client/src/mutations/Login.js", "repo": "cezarneaga_apollo-cra-authenticated"}}, {"type": "mutation", "name": "claimMembership($voucherCode: String!)", "content": "{\n    claimMembership(voucherCode: $voucherCode)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Claim.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "($commentId: ID!)", "content": "{\n    deleteComment (input: { id: $commentId }) {\n      result\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/ConfirmCommentDeleteDialog.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(input: { id: \"5\" }) {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "some_mutation($nil: ID, $in: Object)", "content": "{\n        some_mutation(\n          input: {\n            id: \"5\"\n            arr: [1, { a: \"b\" }]\n            obj: { a: \"b\" }\n            num: 5.5\n            nil: $nil\n            bo: true\n          }\n        ) {\n          id\n        }\n        some_mutation_with_variables(input: $in) {\n          id\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdatePhoto(\n        $input: UpdatePhotoInput!\n        $condition: ModelPhotoConditionInput\n    )", "content": "{\n        updatePhoto(input: $input, condition: $condition) {\n            id\n            albumId\n            uploadTime\n            bucket\n            fullsize {\n                key\n                width\n                height\n            }\n            thumbnail {\n                key\n                width\n                height\n            }\n            format\n            exifMake\n            exitModel\n            objectDetected\n            SfnExecutionArn\n            ProcessingStatus\n            geoLocation {\n                Latitude {\n                    D\n                    M\n                    S\n                    Direction\n                }\n                Longtitude {\n                    D\n                    M\n                    S\n                    Direction\n                }\n            }\n            owner\n        }\n    }", "metadata": {"commit_hash": "856a02a2c036a2e9f8222da10b1d79c45d5c5ed4", "file": "lambda-functions/store-image-metadata/index.js", "repo": "aws-samples_lambda-refarch-imagerecognition"}}, {"type": "mutation", "name": "($rec_file: Upload!)", "content": "{\n    upload(rec_file: $rec_file) {\n      success\n      message\n      match_id\n    }\n  }", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Upload.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "mutation", "name": "bookEvent($eventId: ID!)", "content": "{\n        bookEvent(eventId: $eventId) {\n            _id\n            createdAt\n            updatedAt\n        }\n    }", "metadata": {"commit_hash": "111a5a0fa557f4231951199e1a6f89c76f1c2c5a", "file": "src/gql/bookEvent.js", "repo": "stack-guru_fullstack-graphql"}}, {"type": "mutation", "name": "updateSong(\n          $song_id: ID!\n          $song: SongInput!\n        )", "content": "{\n          updateSong(\n            song_id: $song_id\n            song: $song\n          ) {\n            id\n            url\n            title\n            image {\n              mimified\n            }\n          }\n        }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/artist/ArtistController.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "editReplyMessage($messageId: String!, $body: String!)", "content": "{\n    editReplyMessage(body: $body, messageId: $messageId) {\n      body\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "createTaskComment($taskID: UUID!, $message: String!)", "content": "{\n  createTaskComment(input: {taskID: $taskID, message: $message}) {\n    taskID\n    comment {\n      id\n      message\n      pinned\n      createdAt\n      updatedAt\n      createdBy {\n        id\n        fullName\n        profileIcon {\n          initials\n          bgColor\n          url\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "Logout($wallet: String!)", "content": "{\n    logout(wallet: $wallet) {\n      success\n      reason\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/Logout.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "getSubdomains($name: String)", "content": "{\n    getSubdomains(name: $name) {\n      name\n      owner\n      resolver\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "deleteSong(\n          $song_id: ID!\n        )", "content": "{\n          deleteSong(\n            song_id: $song_id\n          ) {\n            id\n            url\n            title\n            image {\n              mimified\n            }\n          }\n        }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/artist/ArtistController.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "InviteReviewer($articleId: ID!, $reviewerId: ID!)", "content": "{\n    inviteReviewer(articleId: $articleId, reviewerId: $reviewerId)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/inviteReviewer.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "AddWatched($addWatched: AddWatched)", "content": "{\n  addWatched(addWatched: $addWatched) {\n    id,\n    username,\n    watched\n  }\n}", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "mutation", "name": "updateOrderBag($id: ID!, $input:UpdateOrderBagInput )", "content": "{\n        updateOrderBag(id: $id, input: $input){\n            id\n            type\n            status\n            delivery_date\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "cartLinesAdd($lines: [CartLineInput!]!, $cartId: ID!)", "content": "{\n    cartLinesAdd(lines: $lines, cartId: $cartId) {\n      cart {\n        id\n        checkoutUrl\n      }\n      userErrors {\n        code\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "70998b427ad850d5beb881dce7d48219ca142e0d", "file": "helpers/cartHelpers.js", "repo": "Shopify_shopify-marketplaces-buyer-app"}}, {"type": "mutation", "name": "userInviteMakeUrl", "content": "{\n          userInviteMakeUrl {\n            result\n            successful\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "(\n      $templateId: ID!\n      $userId:ID!\n      $title: String!,\n      $templateType:String!,\n      $templates: [String]!,\n      $originalTemp:String!,\n      $newTemplates: [String]!,\n      $isUpdated:String!,\n      $node_ids: [String]!,\n      $project_ids: [String]!,\n      $file_names: [String]!,\n      $file_types: [String]!,\n    )", "content": "{\n      updateProcTemplate(\n        templateId: $templateId\n        userId:$userId\n        title:$title\n        templateType:$templateType\n        templates:$templates\n        originalTemp:$originalTemp\n        newTemplates:$newTemplates\n        isUpdated:$isUpdated\n        node_ids:$node_ids\n        project_ids:$project_ids\n        file_names:$file_names\n        file_types:$file_types\n      ){\n        _id\n        title\n        templateType\n        templates\n        originalTemp\n        newTemplates\n        isUpdated\n        node_ids\n        project_ids\n        file_names\n        file_types\n        userId {\n          _id\n          avatar\n        }\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($content: String!, $userID: ID!, $postID: ID!)", "content": "{\n    createComment(content: $content, userId: $userID, postId: $postID) {\n      comment {\n        content\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "mutation", "name": "DeployIdentityContract($from: String!, $contract: String!)", "content": "{\n    deployIdentityContract(from: $from, contract: $contract) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "disableCommunityWatercooler(\n    $input: DisableCommunityWatercoolerInput!\n  )", "content": "{\n    disableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/disableCommunityWatercooler.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "UpdateTeam($id: ID, $input: TeamInput!)", "content": "{\n    updateTeam(id: $id, input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/updateTeam.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "updateCategoryImage($id: Int, \n             $fileName: String\n             )", "content": "{\n            updateCategoryImage(\n              id: $id\n              fileName: $fileName\n            ){\n              status\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateCategoryImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "DestroyInvite($inviteId: String!)", "content": "{\n    destroyInvite(inviteId: $inviteId)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/invite/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "signOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/SignOut.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "toggleFavTask($state: Boolean!, $taskId: ID!)", "content": "{\n        toggleFavTask(state: $state, taskId: $taskId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlToggleFavTask.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "markSingleNotificationSeen($id: ID!)", "content": "{\n    markSingleNotificationSeen(id: $id)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/notification/markSingleNotificationSeen.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "DeleteMember($input: DeleteMemberInput!)", "content": "{\n      deleteMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "($namespace: String!, $application: String!)", "content": "{\n    enableApplication(\n      namespace: $namespace\n      application: $application\n      allServices: true\n    ) {\n      namespace\n      application\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createFlagRule($flagId: ID!, $input: NewFlagRule!)", "content": "{\n        createFlagRule(flagId: $flagId, input: $input) {\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n            distributions {\n                percentage\n                variant {\n                    id\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n      loginUser(\n        email: $email\n        password: $password\n      ) {\n        token\n        user {\n          _id\n          username\n          email\n          avatar\n        }\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "deletePaymentMethod($paymentMethodId: uuid!)", "content": "{\n  deletePaymentMethod(id: $paymentMethodId) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}]