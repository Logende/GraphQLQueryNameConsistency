[{"type": "mutation", "name": "($postId: Int!, $userId: String!)", "content": "{\n    insert_Like(objects: [{ post_id: $postId, user_id: $userId }]) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "7907866ee41941a96b937dd6e34724a112ce5298", "file": "src/components/Like.js", "repo": "abhi40308_instagram-clone"}}, {"type": "mutation", "name": "($postId: Int!, $userId: String!)", "content": "{\n    delete_Like(\n      where: { user_id: { _eq: $userId }, post_id: { _eq: $postId } }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "7907866ee41941a96b937dd6e34724a112ce5298", "file": "src/components/Like.js", "repo": "abhi40308_instagram-clone"}}, {"type": "mutation", "name": "($url: String!, $userId: String!, $caption: String!)", "content": "{\n    insert_Post(objects: { url: $url, caption: $caption, user_id: $userId }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "7907866ee41941a96b937dd6e34724a112ce5298", "file": "src/components/Upload.js", "repo": "abhi40308_instagram-clone"}}, {"type": "mutation", "name": "($followingId: String!, $userId: String!)", "content": "{\n    insert_Follow(\n      objects: [{ follower_id: $userId, following_id: $followingId }]\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "7907866ee41941a96b937dd6e34724a112ce5298", "file": "src/components/Follow.js", "repo": "abhi40308_instagram-clone"}}, {"type": "mutation", "name": "($followingId: String!, $userId: String!)", "content": "{\n    delete_Follow(\n      where: {\n        follower_id: { _eq: $userId }\n        following_id: { _eq: $followingId }\n      }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "7907866ee41941a96b937dd6e34724a112ce5298", "file": "src/components/Follow.js", "repo": "abhi40308_instagram-clone"}}, {"type": "mutation", "name": "createVideos(\n        $name: String!\n        $link: String!\n        $moderatorNotes: String\n    )", "content": "{\n        createVideos(\n            name: $name\n            link: $link\n            moderatorNotes: $moderatorNotes\n        ) {\n            id\n            name\n        }\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/ADD_VIDEO.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "mutation", "name": "removeWatched($id: String!)", "content": "{\n        removeWatched(id: $id) @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/REMOVE_WATCHED.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "mutation", "name": "removeFavorite($id: String!)", "content": "{\n        removeFavorite(id: $id) @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/REMOVE_FAVORITE.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "mutation", "name": "switchMode($id: String!)", "content": "{\n        switchMode(id: $id) @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/SWITCH_MODE.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "mutation", "name": "addFavorite($id: String!)", "content": "{\n        addFavorite(id: $id) @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/ADD_FAVORITE.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "mutation", "name": "addWatched($id: String!)", "content": "{\n        addWatched(id: $id) @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/ADD_WATCHED.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "mutation", "name": "SendMessageMutation($id: String!, $message: String!)", "content": "{\n    sendMessage(_id: $id, message: $message) {\n      chat {\n        users {\n          _id\n          name\n          email\n        }\n        messages {\n          _id\n          user {\n            _id\n            name\n            email\n          }\n          message\n          createdAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Chat/mutations/SendMessageMutation.ts", "repo": "LFSCamargo_Chatify"}}, {"type": "mutation", "name": "AddChatMutation($id: String!)", "content": "{\n    addConversation(otherUser: $id) {\n      chat {\n        updatedAt\n        _id\n        lastMessage\n        users {\n          _id\n          email\n          name\n        }\n        messages {\n          message\n          createdAt\n          user {\n            _id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Chat/mutations/AddChatMutation.ts", "repo": "LFSCamargo_Chatify"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Login/Login.tsx", "repo": "LFSCamargo_Chatify"}}, {"type": "mutation", "name": "register($email: String!, $password: String!, $name: String!)", "content": "{\n    register(email: $email, password: $password, name: $name) {\n      token\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/SignUp/SignUp.tsx", "repo": "LFSCamargo_Chatify"}}, {"type": "mutation", "name": "SendRTCMessage($id: String!, $callID: String!, $message: String!, $type: String!)", "content": "{\n    sendWebRTCMessage(_id: $id, callID: $callID, message: $message, type: $type) {\n      message\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Chat/CallScreen.tsx", "repo": "LFSCamargo_Chatify"}}, {"type": "mutation", "name": "SendRTCMessage($id: String!, $callID: String!, $message: String!, $type: String!)", "content": "{\n    sendWebRTCMessage(_id: $id, callID: $callID, message: $message, type: $type) {\n      message\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Chat/ChatsList.tsx", "repo": "LFSCamargo_Chatify"}}, {"type": "mutation", "name": "tokenAuth($username: String!, $password: String!)", "content": "{\n    tokenAuth(username: $username, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "LockIndividual($uuid: String!)", "content": "{\n    lock(uuid: $uuid) {\n      uuid\n      individual {\n        isLocked\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "UnlockIndividual($uuid: String!)", "content": "{\n    unlock(uuid: $uuid) {\n      uuid\n      individual {\n        isLocked\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "DeleteIdentity($uuid: String!)", "content": "{\n    deleteIdentity(uuid: $uuid) {\n      uuid\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "Merge($fromUuids: [String!], $toUuid: String!)", "content": "{\n    merge(fromUuids: $fromUuids, toUuid: $toUuid) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "unmerge($uuids: [String!])", "content": "{\n    unmergeIdentities(uuids: $uuids) {\n      uuids\n      individuals {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "moveIdentity($fromUuid: String!, $toUuid: String!)", "content": "{\n    moveIdentity(fromUuid: $fromUuid, toUuid: $toUuid) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "enroll(\n    $uuid: String!\n    $group: String!\n    $fromDate: DateTime\n    $toDate: DateTime\n    $parentOrg: String\n  )", "content": "{\n    enroll(\n      uuid: $uuid\n      group: $group\n      fromDate: $fromDate\n      toDate: $toDate\n      parentOrg: $parentOrg\n    ) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "addOrganization($name: String!)", "content": "{\n    addOrganization(name: $name) {\n      organization {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "addTeam(\n    $teamName: String!\n    $organization: String\n    $parentName: String\n  )", "content": "{\n    addTeam(\n      teamName: $teamName\n      organization: $organization\n      parentName: $parentName\n    ) {\n      team {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "addIdentity(\n    $email: String\n    $name: String\n    $source: String!\n    $username: String\n  )", "content": "{\n    addIdentity(\n      email: $email\n      name: $name\n      source: $source\n      username: $username\n    ) {\n      uuid\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "addDomain(\n    $domain: String!\n    $isTopDomain: Boolean\n    $organization: String!\n  )", "content": "{\n    addDomain(\n      domain: $domain\n      isTopDomain: $isTopDomain\n      organization: $organization\n    ) {\n      domain {\n        domain\n        isTopDomain\n        organization {\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "updateProfile($data: ProfileInputType!, $uuid: String)", "content": "{\n    updateProfile(data: $data, uuid: $uuid) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "deleteDomain($domain: String!)", "content": "{\n    deleteDomain(domain: $domain) {\n      domain {\n        domain\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "withdraw(\n    $uuid: String!\n    $group: String!\n    $fromDate: DateTime\n    $toDate: DateTime\n    $parentOrg: String\n  )", "content": "{\n    withdraw(\n      uuid: $uuid\n      group: $group\n      fromDate: $fromDate\n      toDate: $toDate\n      parentOrg: $parentOrg\n    ) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "deleteOrganization($name: String!)", "content": "{\n    deleteOrganization(name: $name) {\n      organization {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "deleteTeam($teamName: String!, $organization: String)", "content": "{\n    deleteTeam(teamName: $teamName, organization: $organization) {\n      team {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "updateEnrollment(\n    $fromDate: DateTime!\n    $newFromDate: DateTime\n    $newToDate: DateTime\n    $group: String!\n    $toDate: DateTime!\n    $uuid: String!\n    $parentOrg: String\n  )", "content": "{\n    updateEnrollment(\n      fromDate: $fromDate\n      newFromDate: $newFromDate\n      newToDate: $newToDate\n      group: $group\n      toDate: $toDate\n      uuid: $uuid\n      parentOrg: $parentOrg\n    ) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "affiliate($uuids: [String])", "content": "{\n    affiliate(uuids: $uuids) {\n      jobId\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "genderize(\n    $uuids: [String]\n    $exclude: Boolean\n    $noStrictMatching: Boolean\n  )", "content": "{\n    genderize(\n      uuids: $uuids\n      exclude: $exclude\n      noStrictMatching: $noStrictMatching\n    ) {\n      jobId\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "unify($criteria: [String], $exclude: Boolean)", "content": "{\n    unify(criteria: $criteria, exclude: $exclude) {\n      jobId\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "manageMergeRecommendation($recommendationId: Int!, $apply: Boolean)", "content": "{\n    manageMergeRecommendation(\n      recommendationId: $recommendationId\n      apply: $apply\n    ) {\n      applied\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "recommendMatches(\n    $criteria: [String]\n    $exclude: Boolean\n    $sourceUuids: [String]\n  )", "content": "{\n    recommendMatches(\n      criteria: $criteria\n      exclude: $exclude\n      sourceUuids: $sourceUuids\n    ) {\n      jobId\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "importIdentities(\n    $backend: String!\n    $interval: Int\n    $params: JSONString\n    $url: String\n  )", "content": "{\n    addImportIdentitiesTask(\n      backend: $backend\n      interval: $interval\n      params: $params\n      url: $url\n    ) {\n      task {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "deleteImportTask($taskId: Int!)", "content": "{\n    deleteImportIdentitiesTask(taskId: $taskId) {\n      deleted\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "updateImportTask(\n    $data: ImportIdentitiesTaskInputType\n    $taskId: Int!\n  )", "content": "{\n    updateImportIdentitiesTask(data: $data, taskId: $taskId) {\n      task {\n        id\n        lastModified\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "mergeOrganizations($fromOrg: String!, $toOrg: String!)", "content": "{\n    mergeOrganizations(fromOrg: $fromOrg, toOrg: $toOrg) {\n      organization {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "addLike($id: Int)", "content": "{\n    addLike(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "50a7e35226ea083cf59a1896e507bf80bdae82e8", "file": "src/client/components/pages/Apollo/Apollo.tsx", "repo": "hiroppy_ssr-sample"}}, {"type": "mutation", "name": "follow($id: ID!)", "content": "{\n    follow(id: $id)\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/follow/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "unfollow($id: ID!)", "content": "{\n    unfollow(id: $id)\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/follow/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "editProfile(\n    $firstname: String\n    $lastname: String\n    $location: String\n    $dob: String\n    $bio: String\n    $website: String\n    $avatar: String\n    $coverPhoto: String\n  )", "content": "{\n    editProfile(\n      firstname: $firstname\n      lastname: $lastname\n      location: $location\n      dob: $dob\n      bio: $bio\n      website: $website\n      avatar: $avatar\n      coverPhoto: $coverPhoto\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/profile/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "addComment($id: ID!, $text: String!)", "content": "{\n    addComment(id: $id, text: $text) {\n      id\n      text\n      isCommentMine\n      user {\n        id\n        handle\n        avatar\n        fullname\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/comment/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "deleteComment($id: ID!)", "content": "{\n    deleteComment(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/comment/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "newTweet($text: String!, $files: [String!]!, $tags: [String!]!)", "content": "{\n    newTweet(text: $text, files: $files, tags: $tags) {\n      id\n      text\n      tags\n      isLiked\n      likesCount\n      commentsCount\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/tweet/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "deleteTweet($id: ID!)", "content": "{\n    deleteTweet(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/tweet/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "toggleLike($id: ID!)", "content": "{\n    toggleLike(id: $id)\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/tweet/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "toggleRetweet($id: ID!)", "content": "{\n    toggleRetweet(id: $id)\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/tweet/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n        handle\n        avatar\n        fullname\n      }\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/auth/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "signup(\n    $firstname: String!\n    $lastname: String!\n    $handle: String!\n    $email: String!\n    $password: String!\n  )", "content": "{\n    signup(\n      firstname: $firstname\n      lastname: $lastname\n      handle: $handle\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        id\n        handle\n        avatar\n        fullname\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/auth/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "Refetch", "content": "{\n    refetch\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddAffiliate($affiliate: String, $from: String)", "content": "{\n    addAffiliate(affiliate: $affiliate, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateWallet($role: String, $name: String)", "content": "{\n    createWallet(role: $role, name: $name) {\n      ...balanceFields\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ImportWallet($role: String, $name: String, $privateKey: String!)", "content": "{\n    importWallet(role: $role, name: $name, privateKey: $privateKey) {\n      ...balanceFields\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ImportWallets($accounts: [WalletInput]!)", "content": "{\n    importWallets(accounts: $accounts) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployToken(\n    $name: String\n    $symbol: String\n    $decimals: String\n    $supply: String\n    $type: String\n    $from: String\n  )", "content": "{\n    deployToken(\n      name: $name\n      symbol: $symbol\n      decimals: $decimals\n      supply: $supply\n      type: $type\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SendFromNode($from: String, $to: String, $value: String)", "content": "{\n    sendFromNode(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SendFromWallet($from: String, $to: String, $value: String)", "content": "{\n    sendFromWallet(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "TransferToken(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )", "content": "{\n    transferToken(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateTokenAllowance(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )", "content": "{\n    updateTokenAllowance(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployMarketplace(\n    $from: String\n    $token: String!\n    $version: String!\n    $autoWhitelist: Boolean\n  )", "content": "{\n    deployMarketplace(\n      from: $from\n      token: $token\n      version: $version\n      autoWhitelist: $autoWhitelist\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentityContract($from: String!, $contract: String!)", "content": "{\n    deployIdentityContract(from: $from, contract: $contract) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentityEventsContract($from: String!)", "content": "{\n    deployIdentityEvents(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateListing(\n    $from: String!\n    $deposit: String\n    $depositManager: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )", "content": "{\n    createListing(\n      from: $from\n      deposit: $deposit\n      depositManager: $depositManager\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateListing(\n    $listingID: ID!\n    $from: String!\n    $additionalDeposit: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )", "content": "{\n    updateListing(\n      listingID: $listingID\n      from: $from\n      additionalDeposit: $additionalDeposit\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawListing(\n    $listingID: String!\n    $target: String!\n    $reason: String\n    $from: String\n  )", "content": "{\n    withdrawListing(\n      listingID: $listingID\n      target: $target\n      reason: $reason\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "MakeOffer(\n    $listingID: String\n    $finalizes: Int\n    $affiliate: String\n    $commission: String\n    $value: String\n    $currency: String\n    $arbitrator: String\n    $data: MakeOfferInput\n    $from: String\n    $withdraw: String\n    $quantity: Int\n  )", "content": "{\n    makeOffer(\n      listingID: $listingID\n      finalizes: $finalizes\n      affiliate: $affiliate\n      commission: $commission\n      value: $value\n      currency: $currency\n      arbitrator: $arbitrator\n      data: $data\n      from: $from\n      withdraw: $withdraw\n      quantity: $quantity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AcceptOffer($offerID: String!, $from: String)", "content": "{\n    acceptOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddFunds($offerID: String!, $amount: String!, $from: String)", "content": "{\n    addFunds(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateRefundMutation(\n    $offerID: String!\n    $amount: String!\n    $from: String\n  )", "content": "{\n    updateRefund(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ExecuteRulingMutation(\n    $offerID: String!\n    $ruling: String!\n    $commission: String!\n    $message: String\n    $refund: String\n    $from: String\n  )", "content": "{\n    executeRuling(\n      offerID: $offerID\n      amount: $amount\n      ruling: $ruling\n      commission: $commission\n      message: $message\n      refund: $refund\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "FinalizeOffer($offerID: String!, $from: String)", "content": "{\n    finalizeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawOffer($offerID: String, $from: String)", "content": "{\n    withdrawOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawListing(\n    $data: String!\n    $from: String!\n    $listingID: String\n    $offerID: String\n  )", "content": "{\n    addData(\n      data: $data\n      listingID: $listingID\n      offerID: $offerID\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentity(\n    $from: String!\n    $profile: ProfileInput\n    $attestations: [String]\n  )", "content": "{\n    deployIdentity(\n      from: $from\n      attestations: $attestations\n      profile: $profile\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UniswapDeployFactory($from: String!)", "content": "{\n    uniswapDeployFactory(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UniswapExchangeTemplate($from: String!)", "content": "{\n    uniswapDeployExchangeTemplate(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UniswapInitFactory($from: String!)", "content": "{\n    uniswapInitializeFactory(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UniswapCreateExchange($from: String!, $tokenAddress: String!)", "content": "{\n    uniswapCreateExchange(from: $from, tokenAddress: $tokenAddress) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UniswapAddLiquidity(\n    $from: String!\n    $exchange: String!\n    $value: String!\n    $tokens: String!\n    $liquidity: String!\n  )", "content": "{\n    uniswapAddLiquidity(\n      from: $from\n      exchange: $exchange\n      value: $value\n      tokens: $tokens\n      liquidity: $liquidity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentityViaProxy(\n    $from: String!\n    $factoryAddress: String\n    $proxyAddress: String\n    $owner: String!\n  )", "content": "{\n    deployIdentityViaProxy(\n      from: $from\n      factoryAddress: $factoryAddress\n      proxyAddress: $proxyAddress\n      owner: $owner\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SignMessage($address: ID!, $message: String!)", "content": "{\n    signMessage(address: $address, message: $message)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SetNetwork($network: String, $customConfig: ConfigInput)", "content": "{\n    setNetwork(network: $network, customConfig: $customConfig)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/_NodeInfo.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "EnableMessaging", "content": "{\n    enableMessaging\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/messaging/Messaging.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SendMessage($to: String!, $content: String!)", "content": "{\n    sendMessage(to: $to, content: $content)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/messaging/Messaging.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SetActiveWallet($address: String!)", "content": "{\n    setActiveWallet(address: $address) {\n      ...balanceFields\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/settings/_SetWalletMutation.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "TransferToken(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )", "content": "{\n    transferToken(token: $token, from: $from, to: $to, value: $value) {\n      to {\n        id\n        balance\n      }\n      from {\n        id\n        balance\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/settings/_WalletAccounts.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SetNetwork($network: String, $customConfig: ConfigInput)", "content": "{\n    setNetwork(network: $network, customConfig: $customConfig)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/settings/Settings.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "RemoveWallet($address: String!)", "content": "{\n    removeWallet(address: $address)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/settings/_RemoveWalletBtn.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ToggleMetaMask($enabled: Boolean)", "content": "{\n    toggleMetaMask(enabled: $enabled)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/components/MetaMaskSwitcher.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "Refetch", "content": "{\n    refetch\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddAffiliate($affiliate: String, $from: String)", "content": "{\n    addAffiliate(affiliate: $affiliate, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateWallet($role: String, $name: String)", "content": "{\n    createWallet(role: $role, name: $name) {\n      ...balanceFields\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ImportWallet($role: String, $name: String, $privateKey: String!)", "content": "{\n    importWallet(role: $role, name: $name, privateKey: $privateKey) {\n      ...balanceFields\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ImportWallets($accounts: [WalletInput]!)", "content": "{\n    importWallets(accounts: $accounts)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployToken(\n    $name: String\n    $symbol: String\n    $decimals: String\n    $supply: String\n    $type: String\n    $from: String\n  )", "content": "{\n    deployToken(\n      name: $name\n      symbol: $symbol\n      decimals: $decimals\n      supply: $supply\n      type: $type\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SendFromNode($from: String, $to: String, $value: String)", "content": "{\n    sendFromNode(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SendFromWallet($from: String, $to: String, $value: String)", "content": "{\n    sendFromWallet(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "TransferToken(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )", "content": "{\n    transferToken(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateTokenAllowance(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )", "content": "{\n    updateTokenAllowance(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployMarketplace(\n    $from: String\n    $token: String\n    $version: String\n    $autoWhitelist: Boolean\n  )", "content": "{\n    deployMarketplace(\n      from: $from\n      token: $token\n      version: $version\n      autoWhitelist: $autoWhitelist\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateListing(\n    $deposit: String\n    $depositManager: String\n    $from: String\n    $data: NewListingInput\n    $autoApprove: Boolean\n  )", "content": "{\n    createListing(\n      deposit: $deposit\n      depositManager: $depositManager\n      from: $from\n      data: $data\n      autoApprove: $autoApprove\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateListing(\n    $listingID: String!\n    $additionalDeposit: String\n    $from: String\n    $data: NewListingInput\n    $autoApprove: Boolean\n  )", "content": "{\n    updateListing(\n      listingID: $listingID\n      additionalDeposit: $additionalDeposit\n      from: $from\n      data: $data\n      autoApprove: $autoApprove\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawListing(\n    $listingID: String!\n    $target: String!\n    $reason: String\n    $from: String\n  )", "content": "{\n    withdrawListing(\n      listingID: $listingID\n      target: $target\n      reason: $reason\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "MakeOffer(\n    $listingID: String\n    $finalizes: Int\n    $affiliate: String\n    $commission: String\n    $value: String\n    $currency: String\n    $arbitrator: String\n    $data: MakeOfferInput\n    $from: String\n    $withdraw: String\n    $quantity: Int\n  )", "content": "{\n    makeOffer(\n      listingID: $listingID\n      finalizes: $finalizes\n      affiliate: $affiliate\n      commission: $commission\n      value: $value\n      currency: $currency\n      arbitrator: $arbitrator\n      data: $data\n      from: $from\n      withdraw: $withdraw\n      quantity: $quantity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AcceptOffer($offerID: String!, $from: String)", "content": "{\n    acceptOffer(offerID: $offerID, from: $from)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddFunds($offerID: String!, $amount: String!, $from: String)", "content": "{\n    addFunds(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateRefundMutation(\n    $offerID: String!\n    $amount: String!\n    $from: String\n  )", "content": "{\n    updateRefund(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ExecuteRulingMutation(\n    $offerID: String!\n    $ruling: String!\n    $commission: String!\n    $message: String\n    $refund: String\n    $from: String\n  )", "content": "{\n    executeRuling(\n      offerID: $offerID\n      amount: $amount\n      ruling: $ruling\n      commission: $commission\n      message: $message\n      refund: $refund\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "FinalizeOffer($offerID: String!, $from: String)", "content": "{\n    finalizeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawOffer($offerID: String, $from: String)", "content": "{\n    withdrawOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawListing(\n    $data: String!\n    $from: String!\n    $listingID: String\n    $offerID: String\n  )", "content": "{\n    addData(\n      data: $data\n      listingID: $listingID\n      offerID: $offerID\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "GenerateAirbnbCode($identity: String!, $airbnbUserId: String!)", "content": "{\n    generateAirbnbCode(identity: $identity, airbnbUserId: $airbnbUserId) {\n      success\n      reason\n      code\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GenerateAirbnbCode.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawOffer($offerID: String!, $from: String)", "content": "{\n    withdrawOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/WithdrawOffer.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SignMessage($address: ID!, $message: String!)", "content": "{\n    signMessage(address: $address, message: $message)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SignMessage.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SwapToToken($from: String!, $token: String!, $tokenValue: String!)", "content": "{\n    swapToToken(from: $from, token: $token, tokenValue: $tokenValue) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SwapToToken.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "VerifyEmailCode(\n    $identity: String!\n    $email: String!\n    $code: String!\n  )", "content": "{\n    verifyEmailCode(identity: $identity, email: $email, code: $code) {\n      success\n      reason\n      data\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/VerifyEmailCode.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "GenerateTelegramCode($identity: String!)", "content": "{\n    generateTelegramCode(identity: $identity) {\n      success\n      reason\n      code\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GenerateTelegramCode.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "Enroll(\n    $agreementMessage: String!\n    $inviteCode: String\n    $fingerprintData: JSON\n  )", "content": "{\n    enroll(\n      agreementMessage: $agreementMessage\n      inviteCode: $inviteCode\n      fingerprintData: $fingerprintData\n    ) {\n      authToken\n      isBanned\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GrowthEnroll.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SetNetwork($network: String!, $customConfig: ConfigInput)", "content": "{\n    setNetwork(network: $network, customConfig: $customConfig)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SetNetwork.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "EnableMessaging", "content": "{\n    enableMessaging\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/EnableMessaging.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "VerifyPromotion(\n    $identity: String!\n    $identityProxy: String\n    $type: String\n    $socialNetwork: String\n    $content: String\n  )", "content": "{\n    verifyPromotion(\n      identity: $identity\n      identityProxy: $identityProxy\n      type: $type\n      socialNetwork: $socialNetwork\n      content: $content\n    ) {\n      success\n      reason\n      data\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/VerifyPromotion.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateListing(\n    $from: String!\n    $deposit: String\n    $depositManager: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n    $version: String\n  )", "content": "{\n    createListing(\n      from: $from\n      deposit: $deposit\n      depositManager: $depositManager\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n      version: $version\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/CreateListing.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "LogSocialFollow($actionType: GrowthActionType!)", "content": "{\n    logSocialFollow(actionType: $actionType)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/LogSocialFollow.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "MarkConversationRead($id: String!)", "content": "{\n    markConversationRead(id: $id) {\n      success\n      messagesRead\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/MarkConversationRead.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UnlinkMobileWallet", "content": "{\n    unlinkMobileWallet\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/UnlinkMobileWallet.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "inviteRemind($invitationId: Int!)", "content": "{\n    inviteRemind(invitationId: $invitationId)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/InviteRemind.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "GenerateWebsiteCode($identity: String!, $website: String!)", "content": "{\n    generateWebsiteCode(identity: $identity, website: $website) {\n      success\n      reason\n      code\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GenerateWebsiteCode.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "Login($wallet: String!)", "content": "{\n    login(wallet: $wallet) {\n      success\n      reason\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/Login.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "FinalizeOffer(\n    $offerID: String!\n    $from: String\n    $rating: Int\n    $review: String\n  )", "content": "{\n    finalizeOffer(\n      offerID: $offerID\n      from: $from\n      rating: $rating\n      review: $review\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/FinalizeOffer.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateListing(\n    $listingID: ID!\n    $from: String!\n    $additionalDeposit: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )", "content": "{\n    updateListing(\n      listingID: $listingID\n      from: $from\n      additionalDeposit: $additionalDeposit\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/UpdateListing.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateIdentity(\n    $from: String!\n    $identity: String!\n    $profile: ProfileInput\n    $attestations: [AttestationInput]\n  )", "content": "{\n    updateIdentity(\n      from: $from\n      identity: $identity\n      attestations: $attestations\n      profile: $profile\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/UpdateIdentity.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String!, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/DisputeOffer.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "VerifyWebsite($identity: String!, $website: String!)", "content": "{\n    verifyWebsite(identity: $identity, website: $website) {\n      success\n      reason\n      data\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/VerifyWebsite.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SendMessage($to: String!, $content: String, $media: [MediaInput])", "content": "{\n    sendMessage(to: $to, content: $content, media: $media) {\n      success\n      error\n      conversation {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SendMessage.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawListing(\n    $listingID: String!\n    $target: String!\n    $from: String\n  )", "content": "{\n    withdrawListing(listingID: $listingID, target: $target, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/WithdrawListing.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddData(\n    $data: String!\n    $from: String!\n    $listingID: String\n    $offerID: String\n  )", "content": "{\n    addData(\n      data: $data\n      listingID: $listingID\n      offerID: $offerID\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/AddData.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AllowToken(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )", "content": "{\n    updateTokenAllowance(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/AllowToken.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentity(\n    $from: String!\n    $profile: ProfileInput\n    $attestations: [String]\n  )", "content": "{\n    deployIdentity(\n      from: $from\n      attestations: $attestations\n      profile: $profile\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/DeployIdentity.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawDust($from: String, $currency: String!, $amount: String!)", "content": "{\n    withdrawDust(amount: $amount, from: $from, currency: $currency) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/WithdrawDust.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "GeneratePhoneCode(\n    $prefix: String!\n    $method: String\n    $phone: String!\n  )", "content": "{\n    generatePhoneCode(prefix: $prefix, method: $method, phone: $phone) {\n      success\n      reason\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GeneratePhoneCode.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "Logout($wallet: String!)", "content": "{\n    logout(wallet: $wallet) {\n      success\n      reason\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/Logout.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "invite($emails: [String!]!)", "content": "{\n    invite(emails: $emails)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/InviteFriends.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AcceptOffer($offerID: String!, $from: String)", "content": "{\n    acceptOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/AcceptOffer.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "MakeOffer(\n    $listingID: String!\n    $value: String!\n    $from: String\n    $quantity: Int!\n    $currency: String\n    $fractionalData: FractionalOfferInput\n    $shippingAddress: ShippingAddressInput\n    $autoswap: Boolean\n    $commission: String\n  )", "content": "{\n    makeOffer(\n      listingID: $listingID\n      value: $value\n      from: $from\n      quantity: $quantity\n      currency: $currency\n      fractionalData: $fractionalData\n      shippingAddress: $shippingAddress\n      autoswap: $autoswap\n      commission: $commission\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/MakeOffer.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "VerifyOAuthAttestation(\n    $provider: String!\n    $identity: String!\n    $authUrl: String\n    $redirect: String\n    $code: String\n  )", "content": "{\n    verifyOAuthAttestation(\n      provider: $provider\n      identity: $identity\n      authUrl: $authUrl\n      redirect: $redirect\n      code: $code\n    ) {\n      success\n      reason\n      data\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/VerifyOAuthAttestation.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "LogSocialShare($contentId: String!, $actionType: GrowthActionType!)", "content": "{\n    logSocialShare(contentId: $contentId, actionType: $actionType)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/LogSocialShare.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "VerifyAirbnbCode($identity: String!, $airbnbUserId: String!)", "content": "{\n    verifyAirbnbCode(identity: $identity, airbnbUserId: $airbnbUserId) {\n      success\n      reason\n      data\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/VerifyAirbnbCode.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "VerifyPhoneCode(\n    $identity: String!\n    $prefix: String!\n    $phone: String!\n    $code: String!\n  )", "content": "{\n    verifyPhoneCode(\n      identity: $identity\n      prefix: $prefix\n      phone: $phone\n      code: $code\n    ) {\n      success\n      reason\n      data\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/VerifyPhoneCode.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentityViaProxy($from: String!, $owner: String!)", "content": "{\n    deployIdentityViaProxy(from: $from, owner: $owner) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/DeployProxy.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "GenerateEmailCode($email: String!)", "content": "{\n    generateEmailCode(email: $email) {\n      success\n      reason\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GenerateEmailCode.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "enableMessaging", "content": "{\n    enableMessaging\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/pages/onboard/Messaging.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "MakeOffer($listingID: String!, $value: String!, $from: String)", "content": "{\n    makeOffer(listingID: $listingID, value: $value, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/graphql-simple-demo/src/Buy.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployToken(\n    $name: String\n    $symbol: String\n    $decimals: String\n    $supply: String\n    $type: String\n    $from: String\n  )", "content": "{\n    deployToken(\n      name: $name\n      symbol: $symbol\n      decimals: $decimals\n      supply: $supply\n      type: $type\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployMarketplace(\n    $from: String\n    $token: String\n    $version: String\n    $autoWhitelist: Boolean\n  )", "content": "{\n    deployMarketplace(\n      from: $from\n      token: $token\n      version: $version\n      autoWhitelist: $autoWhitelist\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddAffiliate($from: String!, $affiliate: String!)", "content": "{\n    addAffiliate(from: $from, affiliate: $affiliate) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateListing(\n    $from: String!\n    $deposit: String\n    $depositManager: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )", "content": "{\n    createListing(\n      from: $from\n      deposit: $deposit\n      depositManager: $depositManager\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateListing(\n    $listingID: ID!\n    $from: String!\n    $additionalDeposit: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )", "content": "{\n    updateListing(\n      listingID: $listingID\n      from: $from\n      additionalDeposit: $additionalDeposit\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "MakeOffer(\n    $listingID: String\n    $finalizes: Int\n    $affiliate: String\n    $commission: String\n    $value: String\n    $currency: String\n    $arbitrator: String\n    $data: MakeOfferInput\n    $from: String\n    $withdraw: String\n    $quantity: Int\n    $autoswap: Boolean\n  )", "content": "{\n    makeOffer(\n      listingID: $listingID\n      finalizes: $finalizes\n      affiliate: $affiliate\n      commission: $commission\n      value: $value\n      currency: $currency\n      arbitrator: $arbitrator\n      data: $data\n      from: $from\n      withdraw: $withdraw\n      quantity: $quantity\n      autoswap: $autoswap\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AcceptOffer($offerID: String!, $from: String)", "content": "{\n    acceptOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawOffer($offerID: String!, $from: String)", "content": "{\n    withdrawOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "FinalizeOffer($offerID: String!, $from: String)", "content": "{\n    finalizeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddData($offerID: String!, $from: String, $data: String)", "content": "{\n    addData(offerID: $offerID, from: $from, data: $data) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String!, $data: String!, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, data: $data, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ExecuteRuling(\n    $offerID: ID!\n    $ruling: String!\n    $commission: String!\n    $message: String\n    $refund: String\n    $from: String\n  )", "content": "{\n    executeRuling(\n      offerID: $offerID\n      ruling: $ruling\n      commission: $commission\n      message: $message\n      refund: $refund\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateTokenAllowance(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )", "content": "{\n    updateTokenAllowance(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "TransferToken(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )", "content": "{\n    transferToken(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentityViaProxy($from: String!, $owner: String!)", "content": "{\n    deployIdentityViaProxy(from: $from, owner: $owner) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "Refetch", "content": "{\n    refetch\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddAffiliate($affiliate: String!, $from: String, $version: String)", "content": "{\n    addAffiliate(affiliate: $affiliate, from: $from, version: $version) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateWallet($role: String, $name: String)", "content": "{\n    createWallet(role: $role, name: $name) {\n      id\n      role\n      name\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ImportWallet($role: String, $name: String, $privateKey: String!)", "content": "{\n    importWallet(role: $role, name: $name, privateKey: $privateKey) {\n      id\n      role\n      name\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ImportWallets($accounts: [WalletInput]!)", "content": "{\n    importWallets(accounts: $accounts) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployToken(\n    $name: String!\n    $symbol: String!\n    $decimals: String!\n    $supply: String!\n    $type: String\n    $from: String\n  )", "content": "{\n    deployToken(\n      name: $name\n      symbol: $symbol\n      decimals: $decimals\n      supply: $supply\n      type: $type\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SendFromNode($from: String!, $to: String!, $value: String!)", "content": "{\n    sendFromNode(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SendFromWallet($from: String, $to: String, $value: String)", "content": "{\n    sendFromWallet(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "TransferToken(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )", "content": "{\n    transferToken(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateTokenAllowance(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )", "content": "{\n    updateTokenAllowance(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployMarketplace(\n    $from: String\n    $token: String!\n    $version: String!\n    $autoWhitelist: Boolean\n  )", "content": "{\n    deployMarketplace(\n      from: $from\n      token: $token\n      version: $version\n      autoWhitelist: $autoWhitelist\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentityContract($from: String!, $contract: String!)", "content": "{\n    deployIdentityContract(from: $from, contract: $contract) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentityEventsContract($from: String!)", "content": "{\n    deployIdentityEvents(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployProxyFactoryContract($from: String!)", "content": "{\n    deployProxyFactory(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentityProxy($from: String!)", "content": "{\n    deployIdentityProxy(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "CreateListing(\n    $from: String!\n    $version: String\n    $deposit: String\n    $depositManager: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )", "content": "{\n    createListing(\n      from: $from\n      version: $version\n      deposit: $deposit\n      depositManager: $depositManager\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateListing(\n    $listingID: ID!\n    $from: String!\n    $additionalDeposit: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )", "content": "{\n    updateListing(\n      listingID: $listingID\n      from: $from\n      additionalDeposit: $additionalDeposit\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawListing(\n    $listingID: String!\n    $target: String!\n    $reason: String\n    $from: String\n  )", "content": "{\n    withdrawListing(\n      listingID: $listingID\n      target: $target\n      reason: $reason\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "MakeOffer(\n    $listingID: String\n    $finalizes: Int\n    $affiliate: String\n    $commission: String\n    $value: String\n    $currency: String\n    $arbitrator: String\n    $data: MakeOfferInput\n    $from: String\n    $withdraw: String\n    $quantity: Int\n  )", "content": "{\n    makeOffer(\n      listingID: $listingID\n      finalizes: $finalizes\n      affiliate: $affiliate\n      commission: $commission\n      value: $value\n      currency: $currency\n      arbitrator: $arbitrator\n      data: $data\n      from: $from\n      withdraw: $withdraw\n      quantity: $quantity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AcceptOffer($offerID: String!, $from: String)", "content": "{\n    acceptOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddFunds($offerID: String!, $amount: String!, $from: String)", "content": "{\n    addFunds(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateRefundMutation(\n    $offerID: String!\n    $amount: String!\n    $from: String\n  )", "content": "{\n    updateRefund(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ExecuteRulingMutation(\n    $offerID: String!\n    $ruling: String!\n    $commission: String!\n    $message: String\n    $refund: String\n    $from: String\n  )", "content": "{\n    executeRuling(\n      offerID: $offerID\n      amount: $amount\n      ruling: $ruling\n      commission: $commission\n      message: $message\n      refund: $refund\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "FinalizeOffer($offerID: String!, $from: String)", "content": "{\n    finalizeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawOffer($offerID: String, $from: String)", "content": "{\n    withdrawOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "WithdrawListing(\n    $data: String!\n    $from: String!\n    $listingID: String\n    $offerID: String\n  )", "content": "{\n    addData(\n      data: $data\n      listingID: $listingID\n      offerID: $offerID\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeployIdentity(\n    $from: String!\n    $profile: ProfileInput\n    $attestations: [String]\n  )", "content": "{\n    deployIdentity(\n      from: $from\n      attestations: $attestations\n      profile: $profile\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UniswapDeployFactory($from: String!)", "content": "{\n    uniswapDeployFactory(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UniswapExchangeTemplate($from: String!)", "content": "{\n    uniswapDeployExchangeTemplate(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UniswapInitFactory(\n    $from: String!\n    $exchange: String\n    $factory: String\n  )", "content": "{\n    uniswapInitializeFactory(\n      from: $from\n      exchange: $exchange\n      factory: $factory\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UniswapCreateExchange(\n    $from: String!\n    $tokenAddress: String!\n    $factory: String\n  )", "content": "{\n    uniswapCreateExchange(\n      from: $from\n      tokenAddress: $tokenAddress\n      factory: $factory\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UniswapAddLiquidity(\n    $from: String!\n    $exchange: String!\n    $value: String!\n    $tokens: String!\n    $liquidity: String!\n  )", "content": "{\n    uniswapAddLiquidity(\n      from: $from\n      exchange: $exchange\n      value: $value\n      tokens: $tokens\n      liquidity: $liquidity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ToggleMetaMask($enabled: Boolean)", "content": "{\n    toggleMetaMask(enabled: $enabled)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "createSchema($input: CreateSchemaInput!)", "content": "{\n        createSchema(input: $input) {\n          id\n        }\n      }", "metadata": {"commit_hash": "bf0bc8482f62b4b9e0c6a5c4fccb6e79a497848d", "file": "src/App.js", "repo": "nerdify_db-schema-diagram"}}, {"type": "mutation", "name": "updateSchema($input: UpdateSchemaInput!)", "content": "{\n        updateSchema(input: $input) {\n          id\n        }\n      }", "metadata": {"commit_hash": "bf0bc8482f62b4b9e0c6a5c4fccb6e79a497848d", "file": "src/App.js", "repo": "nerdify_db-schema-diagram"}}, {"type": "mutation", "name": "updateSchema($input: UpdateSchemaInput!)", "content": "{\n        updateSchema(input: $input) {\n          id\n        }\n      }", "metadata": {"commit_hash": "bf0bc8482f62b4b9e0c6a5c4fccb6e79a497848d", "file": "src/App.js", "repo": "nerdify_db-schema-diagram"}}, {"type": "mutation", "name": "SaveNotificationTokenWeb($token:String!)", "content": "{\n  saveNotificationTokenWeb(token:$token){\n    success\n    message\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/context/User.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SendOtpToPhoneNumber($phone: String!, $otp: String!)", "content": "{\n    sendOtpToPhoneNumber(phone: $phone, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyPhone/VerifyPhone.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyPhone/VerifyPhone.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "PhoneExist($phone:String!)", "content": "{\n  phoneExist(phone:$phone){\n    _id\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/PhoneNumber/PhoneNumber.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EmailExist($email: String!)", "content": "{\n    emailExist(email: $email) {\n      userType\n      _id\n      email\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/NewLogin/NewLogin.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$email:String!)", "content": "{\n    resetPassword(password:$password,email:$email){\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/ResetPassword/ResetPassword.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "PlaceOrder($restaurant:String!,$orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$tipping:Float!, $taxationAmount: Float!,$address:AddressInput!, $orderDate: String!,$isPickedUp: Boolean!, $deliveryCharges: Float!)", "content": "{\n    placeOrder(restaurant:$restaurant,orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,tipping:$tipping, taxationAmount: $taxationAmount, address:$address, orderDate: $orderDate,isPickedUp: $isPickedUp, deliveryCharges:$deliveryCharges) {\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      orderDate\n      expectedTime\n      isPickedUp\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/Checkout/Checkout.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SendOtpToEmail($email: String!, $otp: String!)", "content": "{\n    sendOtpToEmail(email: $email, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyEmail/VerifyEmail.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateUser($phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)", "content": "{\n        createUser(userInput:{\n            phone:$phone,\n            email:$email,\n            password:$password,\n            name:$name,\n            notificationToken:$notificationToken,\n            appleId:$appleId\n        }){\n            userId\n            token\n            tokenExpiration\n            name\n            email\n            phone\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyEmail/VerifyEmail.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ForgotPassword($email:String!,$otp:String!)", "content": "{\n    forgotPassword(email:$email,otp:$otp){\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyForgotOtp/VerifyForgotOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "PhoneExist($phone:String!)", "content": "{\n  phoneExist(phone:$phone){\n    _id\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/Registration/Registration.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/hooks/useRegistration.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SendChatMessage($orderId: ID!, $messageInput: ChatMessageInput!)", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/hooks/useChat.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Profile/ProfileCard/ProfileCard.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ChangePassword($oldPassword:String!,$newPassword:String!)", "content": "{\n    changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Profile/PasswordCard/PasswordCard.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EditAddress($addressInput:AddressInput!)", "content": "{\n    editAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Checkout/AddressDetail.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateAddress($addressInput:AddressInput!)", "content": "{\n    createAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Checkout/AddressDetail.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "Coupon($coupon:String!)", "content": "{\n    coupon(coupon:$coupon){\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Checkout/CartItemCard.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteAddress($id:ID!)", "content": "{\n    deleteAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Checkout/DeliveryCard.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AddFavourite($id:String!)", "content": "{\n    addFavourite(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/RestaurantComponent/Card/Card.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\nupdateRiderLocation(latitude:$latitude,longitude:$longitude){\n  _id\n}\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/utilities/location.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\nupdateRiderLocation(latitude:$latitude,longitude:$longitude){\n  _id\n}\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/context/user.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateWithdrawRequest($amount: Float!)", "content": "{\n  createWithdrawRequest(amount: $amount) {\n    _id\n    requestId\n    requestAmount\n    requestTime\n    status\n    rider {\n      name\n      email\n      accountNumber\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/screens/Withdraw/useWithdrawRequest.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "RiderLogin($username:String,$password:String,$notificationToken:String)", "content": "{\n  riderLogin(username:$username,password:$password,notificationToken:$notificationToken){\n    userId\n    token\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/screens/Login/useLogin.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SendChatMessage($orderId: ID!, $messageInput: ChatMessageInput!)", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/screens/ChatWithCustomer/useChatScreen.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AssignOrder($id:String!)", "content": "{\n  assignOrder(id:$id){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateOrderStatusRider($id:String!,$status:String!)", "content": "{\n  updateOrderStatusRider(id:$id,status:$status){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AssignOrder($id:String!)", "content": "{\n  assignOrder(id:$id){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/Order/useOrder.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/Sidebar/useSidebar.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "muteRing($orderId:String)", "content": "{\n  muteRing(orderId:$orderId)\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useOrderRing.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ToggleAvailability", "content": "{\n  toggleAvailability{\n    _id\n    isAvailable\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useAccount.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "saveRestaurantToken($token:String, $isEnabled:Boolean)", "content": "{\n  saveRestaurantToken(token:$token, isEnabled: $isEnabled ){\n    _id\n    notificationToken\n    enableNotification\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useNotification.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "OrderPickedUp($_id:String!)", "content": "{\n  orderPickedUp(_id:$_id){\n        _id\n      orderStatus\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useOrderPickedUp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CancelOrder($_id:String!,$reason:String!)", "content": "{\n    cancelOrder(_id:$_id,reason:$reason){\n        _id\n      orderStatus\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useCancelOrder.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AcceptOrder($_id:String!, $time:String)", "content": "{\n    acceptOrder(_id:$_id, time:$time){\n        _id\n      orderStatus\n      preparationTime\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useAcceptOrder.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AcceptOrder($_id:String!, $time:String)", "content": "{\n    acceptOrder(_id:$_id, time:$time){\n        _id\n      orderStatus\n      preparationTime\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CancelOrder($_id:String!,$reason:String!)", "content": "{\n    cancelOrder(_id:$_id,reason:$reason){\n        _id\n      orderStatus\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UploadToken($id:String!,$pushToken:String!)", "content": "{\n  uploadToken(id:$id,pushToken:$pushToken){\n    _id\n    pushToken\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/app.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$email:String!)", "content": "{\n    resetPassword(password:$password,email:$email){\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/ForgotPassword/useResetYourPassword.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ForgotPassword($email:String!,$otp:String!)", "content": "{\n    forgotPassword(email:$email,otp:$otp){\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/ForgotPassword/useForgotPassword.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/CreateAccount/useCreateAccount.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/PhoneNumber/usePhoneNumber.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ReviewOrder(\n    $order:String!,\n    $rating:Int!,\n    $description:String,\n  )", "content": "{\n    reviewOrder(reviewInput:{\n      order:$order,\n      rating:$rating,\n      description:$description,\n    }){\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      orderDate\n      expectedTime\n      isPickedUp\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/RateAndReview/RateAndReview.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Profile/Profile.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ChangePassword($oldPassword:String!,$newPassword:String!)", "content": "{\n    changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Profile/ChangePassword.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EditAddress($addressInput:AddressInput!)", "content": "{\n    editAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/EditAddress/EditAddress.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SendOtpToPhoneNumber($phone: String!, $otp: String!)", "content": "{\n    sendOtpToPhoneNumber(phone: $phone, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Otp/Phone/usePhoneOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Otp/Phone/usePhoneOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ForgotPassword($email:String!,$otp:String!)", "content": "{\n    forgotPassword(email:$email,otp:$otp){\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Otp/ForgotPassword/useForgotPasswordOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SendOtpToEmail($email: String!, $otp: String!)", "content": "{\n    sendOtpToEmail(email: $email, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Otp/Email/useEmailOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateUser($phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)", "content": "{\n        createUser(userInput:{\n            phone:$phone,\n            email:$email,\n            password:$password,\n            name:$name,\n            notificationToken:$notificationToken,\n            appleId:$appleId\n        }){\n            userId\n            token\n            tokenExpiration\n            name\n            email\n            phone\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Otp/Email/useEmailOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SendChatMessage($orderId: ID!, $messageInput: ChatMessageInput!)", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/ChatWithRider/useChatScreen.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Login/useLogin.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EmailExist($email: String!)", "content": "{\n    emailExist(email: $email) {\n      userType\n      _id\n      email\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Login/useLogin.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Main/Main.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "Coupon($coupon:String!)", "content": "{\n    coupon(coupon:$coupon){\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Coupon/Coupon.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/CartAddress/CartAddress.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteAddress($id:ID!)", "content": "{\n    deleteAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Addresses/Addresses.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "PushToken($token:String)", "content": "{\n    pushToken(token:$token){\n      _id\n      notificationToken\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateNotificationStatus($offerNotification:Boolean!,$orderNotification:Boolean!)", "content": "{\n            updateNotificationStatus(offerNotification:$offerNotification,orderNotification:$orderNotification){\n              _id\n              notificationToken\n              isOrderNotification\n              isOfferNotification\n            }\n          }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "deactivated($isActive: Boolean!, $email: String!)", "content": "{\n    Deactivate(isActive: $isActive,email: $email) {\n      isActive\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateAddress($addressInput:AddressInput!)", "content": "{\n    createAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/NewAddress/NewAddress.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "PlaceOrder($restaurant:String!,$orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$tipping:Float!, $taxationAmount: Float!,$address:AddressInput!, $orderDate: String!,$isPickedUp: Boolean!, $deliveryCharges: Float!)", "content": "{\n    placeOrder(restaurant:$restaurant,orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,tipping:$tipping, taxationAmount: $taxationAmount, address:$address, orderDate: $orderDate,isPickedUp: $isPickedUp, deliveryCharges:$deliveryCharges) {\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      orderDate\n      expectedTime\n      isPickedUp\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Cart/Cart.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AddFavourite($id:String!)", "content": "{\n    addFavourite(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/components/Main/Item/Item.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SendNotificationUser($notificationTitle:String, $notificationBody: String!)", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Notifications.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UPDATE_DELIVERY_BOUNDS_AND_LOCATION($id:ID!,$bounds:[[[Float!]]],$location:CoordinatesInput!)", "content": "{\n  result :updateDeliveryBoundsAndLocation(id:$id,location:$location,bounds:$bounds){\n    success\n    message\n    data{\n      _id\n      deliveryBounds{\n        coordinates\n      }\n      location{\n        coordinates\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/DeliveryBoundsAndLocation.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateStatus($id:String!,$orderStatus:String!)", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/DispatchRestaurant.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteVendor($id:String!)", "content": "{\n  deleteVendor(id:$id)\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Vendors.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateStatus($id:String!,$orderStatus:String!)", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dispatch.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AssignRider($id:String!,$riderId:String!)", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dispatch.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n        _id\n        title\n        discount\n        enabled\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Coupons.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteCoupon($id:String!)", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Coupons.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EditRestaurant($restaurantInput:RestaurantProfileInput!)", "content": "{\n    editRestaurant(restaurant:$restaurantInput){\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      slug\n      address\n      username\n      password\n      location{coordinates}\n      isAvailable\n      minimumOrder\n      tax\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/VendorProfile.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateTimings($id:String!,$openingTimes:[TimingsInput])", "content": "{\n  updateTimings(id:$id,\n    openingTimes:$openingTimes){\n    _id\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Timings.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeltetRestaurant($id:String!)", "content": "{\n  deleteRestaurant(id:$id){\n    _id\n    isActive\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/RestaurantList.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Riders.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$email:String!)", "content": "{\n    resetPassword(password:$password,email:$email){\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/ForgotPassword.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteFood($id:String!,$restaurant:String!,$categoryId:String!)", "content": "{\n        deleteFood(id:$id,restaurant:$restaurant,categoryId:$categoryId){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Food.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteZone($id:String!)", "content": "{\n  deleteZone(id:$id){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Zone.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ownerLogin($email:String!,$password:String!)", "content": "{\n  ownerLogin(email:$email,password:$password){\n    userId\n    token\n    email\n    userType\n    restaurants{\n      _id\n      orderId\n      name\n      image\n      address\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Login.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateWithdrawRequest($id:ID!, $status:String!)", "content": "{\n  updateWithdrawReqStatus(id:$id,status:$status){\n    success\n    message\n    data{\n      rider{\n        _id\n        currentWalletAmount\n      }\n      withdrawRequest{\n        _id\n        status\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteOption($id:String!,$restaurant:String!)", "content": "{\n        deleteOption(id:$id,restaurant:$restaurant){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Options.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteAddon($id:String!,$restaurant:String!)", "content": "{\n        deleteAddon(id:$id,restaurant:$restaurant){\n          _id\n          addons{\n            _id\n            options\n            title\n            description\n            quantityMinimum\n            quantityMaximum\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Addons.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "editSection($section:SectionInput!)", "content": "{\n  editSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Sections.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateCommission($id:String!,$commissionRate:Float!)", "content": "{\n  updateCommission(id:$id,commissionRate:$commissionRate){\n    _id\n    commissionRate\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Commission.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteCategory($id:String!,$restaurant:String!)", "content": "{\n        deleteCategory(id:$id,restaurant:$restaurant){\n                _id\n                categories{\n                  _id\n                  title\n                  foods{\n                    _id\n                    title\n                    description\n                    variations{\n                      _id\n                      title\n                      price\n                      discounted\n                      addons\n                    }\n                    image\n                    isActive\n                    createdAt\n                    updatedAt\n                  }\n                  createdAt\n                  updatedAt\n                }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Category.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "editTipping($tippingInput:TippingInput!)", "content": "{\n  editTipping(tippingInput:$tippingInput){\n            _id\n            tipVariations\n            enabled\n              }\n            }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Tipping/Tipping.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateTipping($tippingInput:TippingInput!)", "content": "{\n        createTipping(tippingInput:$tippingInput){\n          _id\n          tipVariations\n          enabled\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Tipping/Tipping.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n      zone{\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateZone($zone:ZoneInput!)", "content": "{\n  createZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EditZone($zone:ZoneInput!)", "content": "{\n  editZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n      zone{\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateCategory($category:CategoryInput)", "content": "{\n  createCategory(category:$category){\n    _id\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n        image\n        isActive\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EditCategory($category:CategoryInput)", "content": "{\n        editCategory(category:$category){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateVendor($vendorInput:VendorInput)", "content": "{\n    createVendor(vendorInput:$vendorInput){\n      _id\n      email\n      userType\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Vendor/Vendor.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EditVendor($vendorInput:VendorInput)", "content": "{\n  editVendor(vendorInput:$vendorInput){\n    _id\n    email\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Vendor/Vendor.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateAddons($addonInput:AddonInput)", "content": "{\n  createAddons(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "editAddon($addonInput:editAddonInput)", "content": "{\n  editAddon(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateOptions($optionInput:CreateOptionInput)", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    options{\n      _id\n      title\n      description\n      price\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "editOption($optionInput:editOptionInput)", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateSection($section:SectionInput!)", "content": "{\n  createSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Section/Section.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "editSection($section:SectionInput!)", "content": "{\n  editSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Section/Section.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateCoupon($couponInput:CouponInput!)", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    title\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n        _id\n        title\n        discount\n        enabled\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "VendorResetPassword($oldPassword: String!, $newPassword: String!)", "content": "{\n    vendorResetPassword(oldPassword: $oldPassword, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/ResetPassword/ResetPassword.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateRestaurant($restaurant:RestaurantInput!,$owner:ID!)", "content": "{\n  createRestaurant(restaurant:$restaurant,owner:$owner){\n    _id\n    orderId\n    orderPrefix\n    name\n    slug\n    image\n    address\n    username\n    password\n    minimumOrder\n    tax\n    location{coordinates}\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Restaurant/CreateRestaurant.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SaveDeliveryRateConfiguration($deliveryRate: Float!)", "content": "{\n  saveDeliveryRateConfiguration(deliveryRate:$deliveryRate){\n    _id\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/DeliveryRate/DeliveryRate.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SaveStripeConfiguration($configurationInput:StripeConfigurationInput!)", "content": "{\n  saveStripeConfiguration(configurationInput:$configurationInput){\n    _id\n    publishableKey\n    secretKey\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Stripe/Stripe.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SavePaypalConfiguration($configurationInput:PaypalConfigurationInput!)", "content": "{\n  savePaypalConfiguration(configurationInput:$configurationInput){\n    _id\n    clientId\n    clientSecret\n    sandbox\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Paypal/Paypal.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    emailName\n    password\n    enableEmail\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SaveCurrencyConfiguration($configurationInput:CurrencyConfigurationInput!)", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Currency/Currency.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateFood($foodInput:FoodInput!)", "content": "{\n      createFood(\n          foodInput:$foodInput\n      ){\n        _id\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n        createdAt\n        updatedAt\n      }\n      }\n    }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "EditFood($foodInput:FoodInput!)", "content": "{\n        editFood(\n            foodInput:$foodInput\n        ){\n            _id\n            categories{\n              _id\n              title\n              foods{\n                _id\n                title\n                description\n                variations{\n                  _id\n                  title\n                  price\n                  discounted\n                  addons\n                }\n                image\n                isActive\n              }\n              createdAt\n              updatedAt\n            }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "productVariantUpdate($input: ProductVariantInput!)", "content": "{\n   productVariantUpdate(input: $input) {\n     product {\n       title\n     }\n     productVariant {\n       id\n       price\n     }\n   }\n }", "metadata": {"commit_hash": "dfd9ed5e2f54e77a091f6b15c25d68272e623d8b", "file": "pages/edit-products.js", "repo": "Shopify_shopify-demo-app-node-react"}}, {"type": "mutation", "name": "($url: String!, $description: String!)", "content": "{\n          createLink(url: $url, description: $description) {\n            id\n            url\n            description\n            postedBy {\n              email\n              id\n            }\n          }\n        }", "metadata": {"commit_hash": "206747c230ff8343197ddacc762f289f4083fccd", "file": "quasar/src/store/hn/upload.js", "repo": "briancaffey_django-postgres-vue-gitlab-ecs"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n          tokenAuth(email: $email, password: $password) {\n            token\n          }\n        }", "metadata": {"commit_hash": "206747c230ff8343197ddacc762f289f4083fccd", "file": "quasar/src/store/auth/gqljwt.js", "repo": "briancaffey_django-postgres-vue-gitlab-ecs"}}, {"type": "mutation", "name": "customerReset($id: ID!, $input: CustomerResetInput!)", "content": "{\n    customerReset(id: $id, input: $input) {\n        userErrors {\n            field\n            message\n        }\n        customer {\n            id\n        }\n        customerAccessToken {\n            accessToken\n            expiresAt\n        }\n    }\n}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/pages/account/reset.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "customerRecover($email: String!)", "content": "{\n    customerRecover(email: $email) {\n        userErrors {\n            field\n            message\n        }\n    }\n}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/pages/account/forgotpassword.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!)", "content": "{\n    customerAccessTokenCreate(input: $input) {\n        customerAccessToken {\n            accessToken\n            expiresAt\n        }\n        customerUserErrors {\n            field\n            message\n        }\n    }\n}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/pages/account/login.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "customerActivate($id: ID!, $input: CustomerActivateInput!)", "content": "{\n    customerActivate(id: $id, input: $input) {\n        userErrors {\n            field\n            message\n        }\n        customer {\n            id\n        }\n        customerAccessToken {\n            accessToken\n            expiresAt\n        }\n    }\n}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/pages/account/activate.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "customerCreate($input: CustomerCreateInput!)", "content": "{\n    customerCreate(input: $input) {\n        customer {\n            id\n        }\n        customerUserErrors {\n            code\n            field\n            message\n        }\n    }\n}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/pages/account/register.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "AddToCart ($input: CheckoutCreateInput!)", "content": "{\n        checkoutCreate(input: $input) {\n            checkoutUserErrors {\n                message\n                field\n            }\n            checkout {\n                ...ReturnFieldsCheckout\n            }\n        }\n    }\n    ${ReturnFieldsCheckout}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/AddToCart.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "checkoutLineItemsAdd($lineItems: [CheckoutLineItemInput!]!, $checkoutId: ID!)", "content": "{\n        checkoutLineItemsAdd(lineItems: $lineItems, checkoutId: $checkoutId) {\n            userErrors {\n                field\n                message\n            }\n            checkout {\n                ...ReturnFieldsCheckout\n            }\n        }\n    }\n    ${ReturnFieldsCheckout}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/AddToCart.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "checkoutCustomerAssociateV2($checkoutId: ID!, $customerAccessToken: String!)", "content": "{\n        checkoutCustomerAssociateV2(checkoutId: $checkoutId, customerAccessToken: $customerAccessToken) {\n            userErrors {\n                field\n                message\n            }\n            checkout {\n                ...ReturnFieldsCheckout\n            }\n            customer {\n                id\n            }\n        }\n    }\n    ${ReturnFieldsCheckout}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/AddToCart.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: [ID!]!)", "content": "{\n        checkoutLineItemsRemove(checkoutId: $checkoutId, lineItemIds: $lineItemIds) {\n            userErrors {\n                field\n                message\n            }\n            checkout {\n                ...ReturnFieldsCheckout\n            }\n        }\n    }\n    ${ReturnFieldsCheckout}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/checkout/RemoveProduct.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "customerAccessTokenDelete($customerAccessToken: String!)", "content": "{\n    customerAccessTokenDelete(customerAccessToken: $customerAccessToken) {\n        userErrors {\n            field\n            message\n        }\n        deletedAccessToken\n        deletedCustomerAccessTokenId\n    }\n}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/account/logout.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "ForgotPassword($email: String!)", "content": "{\n    forgotPassword(input: { email: $email }) {\n      success\n    }\n  }", "metadata": {"commit_hash": "70840c85c462b6676380dfe94892e2b78e7499f4", "file": "client/src/components/ForgotPasswordPage.js", "repo": "graphile_bootstrap-react-apollo"}}, {"type": "mutation", "name": "Register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $name: String\n    $avatarUrl: String\n  )", "content": "{\n    register(\n      input: {\n        username: $username\n        email: $email\n        password: $password\n        name: $name\n        avatarUrl: $avatarUrl\n      }\n    ) {\n      user {\n        nodeId\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "70840c85c462b6676380dfe94892e2b78e7499f4", "file": "client/src/components/RegisterPage.js", "repo": "graphile_bootstrap-react-apollo"}}, {"type": "mutation", "name": "ResetPassword(\n    $userId: Int!\n    $token: String!\n    $newPassword: String!\n  )", "content": "{\n    resetPassword(\n      input: { userId: $userId, token: $token, newPassword: $newPassword }\n    ) {\n      user {\n        nodeId\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "70840c85c462b6676380dfe94892e2b78e7499f4", "file": "client/src/components/ResetPasswordPage.js", "repo": "graphile_bootstrap-react-apollo"}}, {"type": "mutation", "name": "Login($username: String!, $password: String!)", "content": "{\n    login(input: { username: $username, password: $password }) {\n      user {\n        nodeId\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "70840c85c462b6676380dfe94892e2b78e7499f4", "file": "client/src/components/LoginPage.js", "repo": "graphile_bootstrap-react-apollo"}}, {"type": "mutation", "name": "VerifyUserEmail($token: String!)", "content": "{\n    verifyUserEmail(input: { token: $token }) {\n      userEmail {\n        nodeId\n        isVerified\n      }\n    }\n  }", "metadata": {"commit_hash": "70840c85c462b6676380dfe94892e2b78e7499f4", "file": "client/src/components/VerifyUserEmailPage.js", "repo": "graphile_bootstrap-react-apollo"}}, {"type": "mutation", "name": "deletePerson($id: ID!)", "content": "{\n          deletePerson(id: $id) {\n            pk\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "3ac7b881e5953dd8253b5562602ea7f1c5455041", "file": "packages/@tests/aws-dynamodb-constructs/test/table.runtime.test.ts", "repo": "functionless_functionless"}}, {"type": "mutation", "name": "deletePeopleAtomic($ids: [ID!]!)", "content": "{\n          deletePeopleAtomic(ids: $ids) {\n            pk\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "3ac7b881e5953dd8253b5562602ea7f1c5455041", "file": "packages/@tests/aws-dynamodb-constructs/test/table.runtime.test.ts", "repo": "functionless_functionless"}}, {"type": "mutation", "name": "deletePeopleBatch($ids: [ID!]!)", "content": "{\n          deletePeopleBatch(ids: $ids) {\n            pk\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "3ac7b881e5953dd8253b5562602ea7f1c5455041", "file": "packages/@tests/aws-dynamodb-constructs/test/table.runtime.test.ts", "repo": "functionless_functionless"}}, {"type": "mutation", "name": "($message: InputMessage!)", "content": "{\n  message: createMessage(message: $message) {\n    id,\n    chatId,\n    user {\n      username,\n      userId,\n      first_name,\n      last_name,\n      username,\n      language,\n      payload,\n      createdAt,\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "lib/sender-factory/store-messages.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($message: InputMessage!)", "content": "{\n  message: createMessage(message: $message) {\n    id,\n    chatId\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "lib/sender-factory/store-messages.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($messageId: String, $message: InputMessage!)", "content": "{\n  editMessage(messageId: $messageId, message: $message) {\n    id,\n    flag,\n    content\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "lib/sender-factory/store-messages.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $chatbot: InputChatbot!)", "content": "{\n  chatbot: editChatbot(id: $id, chatbot: $chatbot) {\n    id,\n    name,\n    description,\n    guid,\n    chatbotId\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/chatbot-configuration/pages/configure-chatbot.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $record: InputRecord!)", "content": "{\n  editRecord(id: $id, record: $record) {\n    id,\n    title,\n    type,\n    createdAt,\n    payload,\n    userId,\n    status\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/user-record/pages/user-record.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteRecord(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/user-record/pages/user-record.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $queue: String!)", "content": "{\n  deleteTask(id: $id, queue: $queue) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/tasks-queues/hooks/tasks.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $queue: String!, $task: InputTask!)", "content": "{\n  updateTask(id:$id, queue: $queue, task: $task) {\n    id,\n    taskId,\n    task,\n    createdAt,\n    priority\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/tasks-queues/hooks/tasks.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($ids: [Int], $all: Boolean, $queue: String!)", "content": "{\n  deleteTasks(ids: $ids, all: $all, queue: $queue)\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/tasks-queues/hooks/tasks.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteUser(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/users/hooks/users.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $user: InputUser!)", "content": "{\n  editUser(id:$id, user: $user) {\n    id,\n    username,\n    userId,\n    first_name,\n    last_name,\n    username,\n    language,\n    payload,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/users/hooks/users.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($fromId: Int!, $toId: Int!, $chatbotId: String!)", "content": "{\n  user: mergeUser(fromId: $fromId, toId: $toId, chatbotId: $chatbotId) {\n    id,\n    username,\n    userId,\n    first_name,\n    last_name,\n    username,\n    language,\n    payload,\n    createdAt,\n    email,\n    chatIds {\n      id,\n      transport,\n      chatId\n    }\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/users/hooks/merge-user.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "(\n  $plugin: String!,\n  $url: String!,\n  $version: String!,\n  $initialConfiguration: String,\n  $initialContent: InputContent,\n  $chatbotId: String,\n  $pluginId: String\n  )", "content": "{\n  installPlugin(\n    plugin: $plugin,\n    url: $url,\n    version: $version,\n    initialConfiguration: $initialConfiguration,\n    initialContent: $initialContent,\n    chatbotId: $chatbotId,\n    pluginId: $pluginId\n  ) {\n    id,\n    plugin,\n    filename,\n    version\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/plugins-manager/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "(\n  $plugin: String!,\n  $url: String!,\n  $version: String!,\n  $initialConfiguration: String,\n  $chatbotId: String\n  )", "content": "{\n  updatePlugin(\n    plugin: $plugin,\n    url: $url,\n    version: $version,\n    initialConfiguration: $initialConfiguration,\n    chatbotId: $chatbotId\n  ) {\n    id,\n    plugin,\n    filename,\n    version\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/plugins-manager/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($plugin: String!, $chatbotId: String)", "content": "{\n  uninstallPlugin(plugin: $plugin, chatbotId: $chatbotId) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/plugins-manager/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteAdmin(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/admins/hooks/admins.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $admin: InputAdmin!)", "content": "{\n  editAdmin(id:$id, admin: $admin) {\n    id,\n    username,\n    first_name,\n    last_name,\n    username,\n    payload,\n    permissions,\n    chatbotIds,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/admins/hooks/admins.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($admin: InputAdmin!)", "content": "{\n  createAdmin(admin: $admin) {\n    id,\n    username,\n    first_name,\n    last_name,\n    username,\n    payload,\n    permissions,\n    chatbotIds,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/admins/hooks/admins.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $device: NewDevice!)", "content": "{\n  editDevice(id: $id, device: $device) {\n    id,\n    name,\n    payload,\n    createdAt,\n    updatedAt,\n    status,\n    lat,\n    lon,\n    jsonSchema,\n    version,\n    lastUpdate,\n    snapshot\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/devices/pages/devices.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($device: NewDevice!)", "content": "{\n  createDevice(device: $device) {\n    id,\n    name,\n    payload,\n    createdAt,\n    updatedAt,\n    status,\n    lat,\n    lon,\n    jsonSchema,\n    version,\n    lastUpdate,\n    snapshot\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/devices/pages/devices.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteDevice(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/devices/pages/devices.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $user: InputUser!)", "content": "{\n  editUser(id:$id, user: $user) {\n    id,\n    username,\n    userId,\n    first_name,\n    last_name,\n    username,\n    language,\n    payload,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "nodes/mc-user-payload.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($configuration: InputConfiguration!)", "content": "{\n  createConfiguration(configuration: $configuration) {\n    id,\n    namespace,\n    payload\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/hooks/configuration.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteRecord(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/user-records/hooks/records.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteCategory(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content/hooks/category.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $category: InputCategory!)", "content": "{\n  editCategory(id: $id, category: $category) {\n    id,\n    name\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content/hooks/category.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($category: InputCategory!)", "content": "{\n  createCategory(category: $category) {\n    id,\n    name\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content/hooks/category.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteContent(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content/hooks/content.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $content: InputContent!)", "content": "{\n  editContent(id: $id, content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content/hooks/content.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($content: InputContent!)", "content": "{\n  createContent(content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content/hooks/content.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $withId: Int!)", "content": "{\n  swapContent(id: $id, withId: $withId) {\n    id,\n    order\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content/hooks/content.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $content: InputContent!)", "content": "{\n  editContent(id: $id, content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content-autocomplete/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($content: InputContent!)", "content": "{\n  createContent(content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content-autocomplete/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteContent(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content-autocomplete/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $device: NewDevice!)", "content": "{\n  editDevice(id: $id, device: $device) {\n    id,\n    name,\n    payload,\n    createdAt,\n    updatedAt,\n    status,\n    lat,\n    lon,\n    jsonSchema,\n    version,\n    lastUpdate,\n    snapshot\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/edit-device/index.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  user: deleteChatId(id: $id) {\n    id,\n    chatIds {\n      id,\n      transport,\n      chatId\n    }\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/chat-ids-manager/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $user: InputUser!)", "content": "{\n  editUser(id: $id, user: $user) {\n    id,\n    context\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/context-modal/index.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "Test($foo: String!)", "content": "{\n              test(foo: $foo)\n            }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/plugins/typescript/react-apollo/tests/react-apollo.spec.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "Test($foo: String!)", "content": "{\n              test(foo: $foo)\n            }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/plugins/typescript/urql/tests/urql.spec.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/jit-sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/jit-sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/jit-sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "CreateMessage($args: CreateMessageInput!)", "content": "{\n    createMessage(args: $args) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/test-message/documents.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "Decline($id: ID!, $reason: String!)", "content": "{\n    decline(id: $id, reason: $reason) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/test-message/documents.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "Approve($id: ID!)", "content": "{\n    approve(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/test-message/documents.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "Escalate($id: ID!)", "content": "{\n    escalate(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/test-message/documents.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.customSuffix.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.customSuffix.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.customSuffix.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.v2.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.v2.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.v2.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.urql.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.urql.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.urql.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.hooks.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.hooks.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.hooks.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.stencilApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.stencilApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.stencilApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/__generated__/new-entry.mutation.stencil-component.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/__generated__/submit-comment.mutation.stencil-component.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/__generated__/vote.mutation.stencil-component.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "CreateReviewForEpisode($episode: Episode!, $review: ReviewInput!)", "content": "{\n    createReview(episode: $episode, review: $review) {\n      stars\n      commentary\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "CreateReviewForEpisode($episode: Episode!, $review: ReviewInput!)", "content": "{\n    createReview(episode: $episode, review: $review) {\n      stars\n      commentary\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/__generated__/CreateReviewForEpisode.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "uploadImage($input: UploadImageInput!)", "content": "{\n    uploadImage(input: $input)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/uploadImage.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "deleteThread($threadId: ID!)", "content": "{\n    deleteThread(threadId: $threadId)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/thread/deleteThread.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "deleteChannel($channelId: ID!)", "content": "{\n    deleteChannel(channelId: $channelId)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/channel/deleteChannel.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "editChannel($input: EditChannelInput!)", "content": "{\n    editChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/channel/editChannel.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "toggleCommunityNoindex($communityId: ID!)", "content": "{\n    toggleCommunityNoindex(communityId: $communityId) {\n      id\n      slug\n      noindex\n    }\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/community/toggleCommunityNoindex.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "deleteCommunity($communityId: ID!)", "content": "{\n    deleteCommunity(communityId: $communityId)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/community/deleteCommunity.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "editCommunity($input: EditCommunityInput!)", "content": "{\n    editCommunity(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/community/editCommunity.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "toggleCommunityRedirect($communityId: ID!)", "content": "{\n    toggleCommunityRedirect(communityId: $communityId) {\n      id\n      slug\n      redirect\n    }\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/community/toggleCommunityRedirect.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "banUser($input: BanUserInput!)", "content": "{\n    banUser(input: $input)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/user/banUser.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "deleteCurrentUser", "content": "{\n    deleteCurrentUser\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/user/deleteCurrentUser.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "editUser($input: EditUserInput!)", "content": "{\n    editUser(input: $input) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/user/editUser.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "deleteMessage($id: ID!)", "content": "{\n    deleteMessage(id: $id)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/message/deleteMessage.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "subscribeToWebPush($subscription: WebPushSubscription!)", "content": "{\n    subscribeWebPush(subscription: $subscription)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/subscriptions/index.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "createTodo($description: String, $title: String, $version: Int!, $completed: Boolean)", "content": "{\n    createTodo(input: {title: $title, description: $description, version: $version, completed: $completed}) {\n      id\n      title\n      description\n      version\n      completed\n    }\n  }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "examples/react-native/src/gql/queries.js", "repo": "aerogear_offix"}}, {"type": "mutation", "name": "updateTodo($id: ID!, $description: String, $title: String, $version: Int!, $completed: Boolean)", "content": "{\n    updateTodo(input: { id: $id, title: $title, description: $description, version: $version, completed: $completed}) {\n      id\n      title\n      description\n      version\n      completed\n    }\n  }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "examples/react-native/src/gql/queries.js", "repo": "aerogear_offix"}}, {"type": "mutation", "name": "deleteTodo($id: ID!)", "content": "{\n    deleteTodo(input: { id: $id }) {\n      id  \n    }\n  }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "examples/react-native/src/gql/queries.js", "repo": "aerogear_offix"}}, {"type": "mutation", "name": "create$", "content": "{modelName}($input: Create${modelName}Input!) {\n                    create${modelName}(input: $input) {\n                        ${graphQLFields}\n                    }\n                }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "packages/datastore/src/replication/mutations/buildGraphQLCRUDMutations.ts", "repo": "aerogear_offix"}}, {"type": "mutation", "name": "update$", "content": "{modelName}($input: Mutate${modelName}Input!) {\n                    update${modelName}(input: $input) {\n                        ${graphQLFields}\n                    }\n                }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "packages/datastore/src/replication/mutations/buildGraphQLCRUDMutations.ts", "repo": "aerogear_offix"}}, {"type": "mutation", "name": "delete$", "content": "{modelName}($input: Mutate${modelName}Input!) {\n                    delete${modelName}(input: $input) {\n                        ${graphQLFields}\n                    }\n                }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "packages/datastore/src/replication/mutations/buildGraphQLCRUDMutations.ts", "repo": "aerogear_offix"}}, {"type": "mutation", "name": "addProductToBasket($productId: String!, $quantity: Int!)", "content": "{\n        addProductToBasket(productId: $productId, quantity: $quantity) {\n            basketId\n            customerId\n            addProductMessage\n            getBasketMessage\n            totalProductsQuantity\n            products {\n                productId\n                itemId\n                quantity\n                productName\n                price\n            }\n        }\n    }", "metadata": {"commit_hash": "d75976ca5a5746fe56fe814655bb3c33e88b042d", "file": "packages/storefront-lwc/src/modules/commerce/basket/gql.js", "repo": "SalesforceCommerceCloud_sfcc-sample-apps"}}, {"type": "mutation", "name": "updateShippingMethod(\n        $basketId: String!\n        $shipmentId: String!\n        $shippingMethodId: String!\n    )", "content": "{\n        updateShippingMethod(\n            basketId: $basketId\n            shipmentId: $shipmentId\n            shippingMethodId: $shippingMethodId\n        ) {\n            ${getBasketAttributes}\n        }\n    }", "metadata": {"commit_hash": "d75976ca5a5746fe56fe814655bb3c33e88b042d", "file": "packages/storefront-lwc/src/modules/commerce/basket/gql.js", "repo": "SalesforceCommerceCloud_sfcc-sample-apps"}}, {"type": "mutation", "name": "removeItemFromBasket($itemId: String!)", "content": "{\n        removeItemFromBasket(itemId: $itemId) {\n            ${getBasketAttributes}\n        }\n    }", "metadata": {"commit_hash": "d75976ca5a5746fe56fe814655bb3c33e88b042d", "file": "packages/storefront-lwc/src/modules/commerce/basket/gql.js", "repo": "SalesforceCommerceCloud_sfcc-sample-apps"}}, {"type": "mutation", "name": "addCouponToBasket($couponCode: String!)", "content": "{\n        addCouponToBasket(couponCode: $couponCode) {\n            ${basketQuery}\n        }\n    }", "metadata": {"commit_hash": "d75976ca5a5746fe56fe814655bb3c33e88b042d", "file": "packages/storefront-lwc/src/modules/commerce/coupons/gqlMutations.js", "repo": "SalesforceCommerceCloud_sfcc-sample-apps"}}, {"type": "mutation", "name": "removeCouponFromBasket($couponItemId: String!)", "content": "{\n        removeCouponFromBasket(couponItemId: $couponItemId) {\n            ${basketQuery}\n        }\n    }", "metadata": {"commit_hash": "d75976ca5a5746fe56fe814655bb3c33e88b042d", "file": "packages/storefront-lwc/src/modules/commerce/coupons/gqlMutations.js", "repo": "SalesforceCommerceCloud_sfcc-sample-apps"}}, {"type": "mutation", "name": "AccountConfirm($email: String!, $token: String!)", "content": "{\n    confirmAccount(email: $email, token: $token) {\n      errors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "52ea1dd236433466b7506c286c2f82488d35d883", "file": "src/views/Account/mutations.ts", "repo": "saleor_saleor-storefront"}}, {"type": "mutation", "name": "RegisterAccount(\n    $email: String!\n    $password: String!\n    $redirectUrl: String\n    $channel: String\n  )", "content": "{\n    accountRegister(\n      input: {\n        email: $email\n        password: $password\n        redirectUrl: $redirectUrl\n        channel: $channel\n      }\n    ) {\n      errors {\n        field\n        message\n      }\n      requiresConfirmation\n    }\n  }", "metadata": {"commit_hash": "52ea1dd236433466b7506c286c2f82488d35d883", "file": "src/components/OverlayManager/Login/queries.ts", "repo": "saleor_saleor-storefront"}}, {"type": "mutation", "name": "ResetPasswordRequest(\n    $email: String!\n    $redirectUrl: String!\n    $channel: String\n  )", "content": "{\n    requestPasswordReset(\n      email: $email\n      redirectUrl: $redirectUrl\n      channel: $channel\n    ) {\n      errors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "52ea1dd236433466b7506c286c2f82488d35d883", "file": "src/components/PasswordResetRequestForm/queries.tsx", "repo": "saleor_saleor-storefront"}}, {"type": "mutation", "name": "clearNotification", "content": "{\n    clearNotification @client\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "sendNotification(\n    $title: String!\n    $content: String!\n    $color: String!\n    $icon: String!\n    $instanceName: String!\n  )", "content": "{\n    sendNotification(\n      title: $title\n      content: $content\n      color: $color\n      icon: $icon\n      instanceName: $instanceName\n    ) @client {\n      title\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "UpdateLabelDefinition($in: LabelDefinitionInput!)", "content": "{\n    updateLabelDefinition(in: $in) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/MetadataDefinitions/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "DeleteLabelDefinition($key: String!)", "content": "{\n    deleteLabelDefinition(key: $key) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/MetadataDefinitions/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createLabelDefinition($in: LabelDefinitionInput!)", "content": "{\n    createLabelDefinition(in: $in) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/MetadataDefinitions/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "registerApplication($in: ApplicationRegisterInput!)", "content": "{\n    registerApplication(in: $in) {\n      name\n      providerName\n      description\n      labels\n      id\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Applications/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "unregisterApplication($id: ID!)", "content": "{\n    unregisterApplication(id: $id) {\n      name\n      providerName\n      description\n      labels\n      id\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Applications/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "registerApplicationFromTemplate($in: ApplicationFromTemplateInput!)", "content": "{\n    registerApplicationFromTemplate(in: $in) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Applications/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deletePackage($id: ID!)", "content": "{\n    deletePackage(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/ApiPackages/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "addPackage($applicationId: ID!, $in: PackageCreateInput!)", "content": "{\n    addPackage(applicationID: $applicationId, in: $in) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/ApiPackages/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updatePackage($id: ID!, $in: PackageUpdateInput!)", "content": "{\n    updatePackage(id: $id, in: $in) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/ApiPackages/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "addAPIDefinition($apiPackageId: ID!, $in: APIDefinitionInput!)", "content": "{\n    addAPIDefinitionToPackage(packageID: $apiPackageId, in: $in) {\n      id\n      name\n      description\n      targetURL\n      spec {\n        data\n        format\n        type\n      }\n      group\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Api/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "addEventDefinition($apiPackageId: ID!, $in: EventDefinitionInput!)", "content": "{\n    addEventDefinitionToPackage(packageID: $apiPackageId, in: $in) {\n      id\n      name\n      description\n      spec {\n        data\n        format\n        type\n      }\n      group\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Api/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteApi($id: ID!)", "content": "{\n    deleteAPIDefinition(id: $id) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Api/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteEventApi($id: ID!)", "content": "{\n    deleteEventDefinition(id: $id) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Api/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateAPIDefinition($id: ID!, $in: APIDefinitionInput!)", "content": "{\n    updateAPIDefinition(id: $id, in: $in) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Api/EditApi/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateEventDefinition($id: ID!, $in: EventDefinitionInput!)", "content": "{\n    updateEventDefinition(id: $id, in: $in) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Api/EditEventApi/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "setApplicationLabel($id: ID!, $scenarios: Any!)", "content": "{\n    setApplicationLabel(\n      applicationID: $id\n      key: \"scenarios\"\n      value: $scenarios\n    ) {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Application/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteApplicationLabel($id: ID!)", "content": "{\n    deleteApplicationLabel(applicationID: $id, key: \"scenarios\") {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Application/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateApplication($id: ID!, $in: ApplicationUpdateInput!)", "content": "{\n    updateApplication(id: $id, in: $in) {\n      name\n      providerName\n      id\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Application/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "requestOneTimeTokenForApplication($id: ID!)", "content": "{\n    requestOneTimeTokenForApplication(id: $id) {\n      rawEncoded\n      legacyConnectorURL\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Application/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "setRuntimeLabel($id: ID!, $scenarios: Any!)", "content": "{\n    setRuntimeLabel(runtimeID: $id, key: \"scenarios\", value: $scenarios) {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Runtimes/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteRuntimeLabel($id: ID!)", "content": "{\n    deleteRuntimeLabel(runtimeID: $id, key: \"scenarios\") {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Runtimes/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createLabelDefinition($in: LabelDefinitionInput!)", "content": "{\n    createLabelDefinition(in: $in) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateLabelDefinition($in: LabelDefinitionInput!)", "content": "{\n    updateLabelDefinition(in: $in) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteApplicationLabel($id: ID!)", "content": "{\n    deleteApplicationLabel(applicationID: $id, key: \"scenarios\") {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "setApplicationLabel($id: ID!, $scenarios: Any!)", "content": "{\n    setApplicationLabel(\n      applicationID: $id\n      key: \"scenarios\"\n      value: $scenarios\n    ) {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteRuntimeLabel($id: ID!)", "content": "{\n    deleteRuntimeLabel(runtimeID: $id, key: \"scenarios\") {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "setRuntimeLabel($id: ID!, $scenarios: Any!)", "content": "{\n    setRuntimeLabel(runtimeID: $id, key: \"scenarios\", value: $scenarios) {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createFunction(\n    $name: String!\n    $namespace: String!\n    $params: FunctionMutationInput!\n  )", "content": "{\n    createFunction(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateFunction(\n    $name: String!\n    $namespace: String!\n    $params: FunctionMutationInput!\n  )", "content": "{\n    updateFunction(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteFunction(\n    $namespace: String!\n    $function: FunctionMetadataInput!\n  )", "content": "{\n    deleteFunction(namespace: $namespace, function: $function) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createGitRepository(\n    $namespace: String!\n    $name: String!\n    $spec: GitRepositorySpecInput!\n  )", "content": "{\n    createGitRepository(namespace: $namespace, name: $name, spec: $spec) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateGitRepository(\n    $namespace: String!\n    $name: String!\n    $spec: GitRepositorySpecInput!\n  )", "content": "{\n    updateGitRepository(namespace: $namespace, name: $name, spec: $spec) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteGitRepository($namespace: String!, $name: String!)", "content": "{\n    deleteGitRepository(namespace: $namespace, name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createManyTriggers(\n    $namespace: String!\n    $triggers: [TriggerCreateInput!]!\n    $ownerRef: [OwnerReferenceInput!]\n  )", "content": "{\n    createManyTriggers(\n      namespace: $namespace\n      triggers: $triggers\n      ownerRef: $ownerRef\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteTrigger($namespace: String!, $triggerName: String!)", "content": "{\n    deleteTrigger(namespace: $namespace, triggerName: $triggerName) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createServiceBinding(\n    $serviceInstanceName: String!\n    $namespace: String!\n    $parameters: JSON\n  )", "content": "{\n    createServiceBinding(\n      serviceInstanceName: $serviceInstanceName\n      namespace: $namespace\n      parameters: $parameters\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createServiceBindingUsage(\n    $createServiceBindingUsageInput: CreateServiceBindingUsageInput\n    $namespace: String!\n  )", "content": "{\n    createServiceBindingUsage(\n      createServiceBindingUsageInput: $createServiceBindingUsageInput\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteServiceBindingUsage(\n    $serviceBindingUsageName: String!\n    $namespace: String!\n  )", "content": "{\n    deleteServiceBindingUsage(\n      serviceBindingUsageName: $serviceBindingUsageName\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteAPIRule($name: String!, $namespace: String!)", "content": "{\n    deleteAPIRule(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteNamespace($name: String!)", "content": "{\n    deleteNamespace(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createFunction(\n    $name: String!\n    $namespace: String!\n    $labels: Labels!\n    $size: String!\n    $runtime: String!\n  )", "content": "{\n    createFunction(\n      name: $name\n      namespace: $namespace\n      labels: $labels\n      size: $size\n      runtime: $runtime\n    ) {\n      name\n      namespace\n      labels\n      size\n      runtime\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateFunction(\n    $name: String!\n    $namespace: String!\n    $params: FunctionUpdateInput!\n  )", "content": "{\n    updateFunction(name: $name, namespace: $namespace, params: $params) {\n      name\n      namespace\n      labels\n      size\n      runtime\n      content\n      dependencies\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "DeleteFunction($name: String!, $namespace: String!)", "content": "{\n    deleteFunction(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createServiceBinding(\n    $serviceInstanceName: String!\n    $namespace: String!\n    $parameters: JSON\n  )", "content": "{\n    createServiceBinding(\n      serviceInstanceName: $serviceInstanceName\n      namespace: $namespace\n      parameters: $parameters\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createServiceBindingUsage(\n    $createServiceBindingUsageInput: CreateServiceBindingUsageInput\n    $namespace: String!\n  )", "content": "{\n    createServiceBindingUsage(\n      createServiceBindingUsageInput: $createServiceBindingUsageInput\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteServiceBindingUsage(\n    $serviceBindingUsageName: String!\n    $namespace: String!\n  )", "content": "{\n    deleteServiceBindingUsage(\n      serviceBindingUsageName: $serviceBindingUsageName\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteServiceBindingUsages(\n    $serviceBindingUsageNames: [String!]!\n    $namespace: String!\n  )", "content": "{\n    deleteServiceBindingUsages(\n      serviceBindingUsageNames: $serviceBindingUsageNames\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createNamespace($name: String!, $labels: Labels)", "content": "{\n    createNamespace(name: $name, labels: $labels) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "UpdateNamespace($name: String!, $labels: Labels!)", "content": "{\n    updateNamespace(name: $name, labels: $labels) {\n      name\n      labels\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createLimitRange(\n    $namespace: String!\n    $name: String!\n    $limitRange: LimitRangeInput!\n  )", "content": "{\n    createLimitRange(\n      namespace: $namespace\n      name: $name\n      limitRange: $limitRange\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateLimitRange($namespace: String!, $name: String!, $json: JSON!)", "content": "{\n    updateLimitRange(namespace: $namespace, name: $name, json: $json) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateResourceQuota(\n    $namespace: String!\n    $name: String!\n    $json: JSON!\n  )", "content": "{\n    updateResourceQuota(namespace: $namespace, name: $name, json: $json) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createResourceQuota(\n    $namespace: String!\n    $name: String!\n    $resourceQuota: ResourceQuotaInput!\n  )", "content": "{\n    createResourceQuota(\n      namespace: $namespace\n      name: $name\n      resourceQuota: $resourceQuota\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateService($name: String!, $namespace: String!, $service: JSON!)", "content": "{\n    updateService(name: $name, namespace: $namespace, service: $service) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteService($name: String!, $namespace: String!)", "content": "{\n    deleteService(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createAPIRule(\n    $name: String!\n    $namespace: String!\n    $params: APIRuleSpecInput!\n  )", "content": "{\n    createAPIRule(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateAPIRule(\n    $name: String!\n    $namespace: String!\n    $generation: Int!\n    $params: APIRuleSpecInput!\n  )", "content": "{\n    updateAPIRule(\n      name: $name\n      namespace: $namespace\n      generation: $generation\n      params: $params\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteAPIRule($name: String!, $namespace: String!)", "content": "{\n    deleteAPIRule(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "($namespace: String!, $application: String!)", "content": "{\n    enableApplication(\n      namespace: $namespace\n      application: $application\n      allServices: true\n    ) {\n      namespace\n      application\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "($namespace: String!, $application: String!)", "content": "{\n    disableApplication(namespace: $namespace, application: $application) {\n      namespace\n      application\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateOAuthClient(\n    $namespace: String!\n    $name: String!\n    $generation: Int!\n    $params: OAuth2ClientSpecInput!\n  )", "content": "{\n    updateOAuth2Client(\n      name: $name\n      namespace: $namespace\n      generation: $generation\n      params: $params\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteOAuthClient($namespace: String!, $name: String!)", "content": "{\n    deleteOAuth2Client(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createOAuth2Client(\n    $namespace: String!\n    $name: String!\n    $params: OAuth2ClientSpecInput!\n  )", "content": "{\n    createOAuth2Client(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createResource($namespace: String!, $resource: JSON!)", "content": "{\n    createResource(namespace: $namespace, resource: $resource)\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createClusterRoleBinding(\n    $name: String!\n    $params: ClusterRoleBindingInput!\n  )", "content": "{\n    createClusterRoleBinding(name: $name, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteClusterRoleBinding($name: String!)", "content": "{\n    deleteClusterRoleBinding(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteSecret($namespace: String!, $name: String!)", "content": "{\n    deleteSecret(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createRoleBinding(\n    $name: String!\n    $namespace: String!\n    $params: RoleBindingInput!\n  )", "content": "{\n    createRoleBinding(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateSecret($namespace: String!, $name: String!, $secret: JSON!)", "content": "{\n    updateSecret(name: $name, namespace: $namespace, secret: $secret) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteRoleBinding($name: String!, $namespace: String!)", "content": "{\n    deleteRoleBinding(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateSubscription(\n    $namespace: String!\n    $name: String!\n    $params: EventSubscriptionSpecInput!\n  )", "content": "{\n    updateSubscription(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createSubscription(\n    $namespace: String!\n    $name: String!\n    $params: EventSubscriptionSpecInput!\n  )", "content": "{\n    createSubscription(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "DeleteServiceInstance($name: String!, $namespace: String!)", "content": "{\n    deleteServiceInstance(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/helpers/instancesGQL/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "CreateServiceInstance(\n    $name: String!\n    $namespace: String!\n    $externalServiceClassName: String!\n    $externalPlanName: String!\n    $labels: [String!]!\n    $parameterSchema: JSON\n    $classClusterWide: Boolean!\n    $planClusterWide: Boolean!\n  )", "content": "{\n    createServiceInstance(\n      namespace: $namespace\n      params: {\n        name: $name\n        classRef: {\n          externalName: $externalServiceClassName\n          clusterWide: $classClusterWide\n        }\n        planRef: {\n          externalName: $externalPlanName\n          clusterWide: $planClusterWide\n        }\n        labels: $labels\n        parameterSchema: $parameterSchema\n      }\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceClassDetails/CreateInstanceModal/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "CreateServiceBinding(\n    $serviceInstanceName: String!\n    $namespace: String!\n    $parameters: JSON\n  )", "content": "{\n    createServiceBinding(\n      serviceInstanceName: $serviceInstanceName\n      namespace: $namespace\n      parameters: $parameters\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceInstanceDetails/ServiceInstanceBindings/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "CreateServiceBindingUsage(\n    $namespace: String!\n    $createServiceBindingUsageInput: CreateServiceBindingUsageInput\n  )", "content": "{\n    createServiceBindingUsage(\n      namespace: $namespace\n      createServiceBindingUsageInput: $createServiceBindingUsageInput\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceInstanceDetails/ServiceInstanceBindings/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "DeleteServiceBinding(\n    $serviceBindingName: String!\n    $namespace: String!\n  )", "content": "{\n    deleteServiceBinding(\n      serviceBindingName: $serviceBindingName\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceInstanceDetails/ServiceInstanceBindings/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "DeleteServiceBindingUsage(\n    $serviceBindingUsageName: String!\n    $namespace: String!\n  )", "content": "{\n    deleteServiceBindingUsage(\n      serviceBindingUsageName: $serviceBindingUsageName\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceInstanceDetails/ServiceInstanceBindings/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createClusterAddonsConfiguration(\n    $name: String!\n    $urls: [String!]!\n    $labels: Labels\n  )", "content": "{\n    createClusterAddonsConfiguration(\n      name: $name\n      urls: $urls\n      labels: $labels\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createAddonsConfiguration(\n    $name: String!\n    $namespace: String!\n    $urls: [String!]!\n    $labels: Labels\n  )", "content": "{\n    createAddonsConfiguration(\n      name: $name\n      namespace: $namespace\n      urls: $urls\n      labels: $labels\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateClusterAddonsConfiguration(\n    $name: String!\n    $urls: [String!]!\n    $labels: Labels\n  )", "content": "{\n    updateClusterAddonsConfiguration(\n      name: $name\n      urls: $urls\n      labels: $labels\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateAddonsConfiguration(\n    $name: String!\n    $namespace: String!\n    $urls: [String!]!\n    $labels: Labels\n  )", "content": "{\n    updateAddonsConfiguration(\n      name: $name\n      namespace: $namespace\n      urls: $urls\n      labels: $labels\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteClusterAddonsConfiguration($name: String!)", "content": "{\n    deleteClusterAddonsConfiguration(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteAddonsConfiguration($name: String!, $namespace: String!)", "content": "{\n    deleteAddonsConfiguration(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "addClusterAddonsConfigurationURLs(\n    $name: String!\n    $urls: [String!]!\n  )", "content": "{\n    addClusterAddonsConfigurationURLs(name: $name, urls: $urls) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "addAddonsConfigurationURLs(\n    $name: String!\n    $namespace: String!\n    $urls: [String!]!\n  )", "content": "{\n    addAddonsConfigurationURLs(\n      name: $name\n      namespace: $namespace\n      urls: $urls\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "removeClusterAddonsConfigurationURLs(\n    $name: String!\n    $urls: [String!]!\n  )", "content": "{\n    removeClusterAddonsConfigurationURLs(name: $name, urls: $urls) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "removeAddonsConfigurationURLs(\n    $name: String!\n    $namespace: String!\n    $urls: [String!]!\n  )", "content": "{\n    removeAddonsConfigurationURLs(\n      name: $name\n      namespace: $namespace\n      urls: $urls\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "resyncClusterAddonsConfiguration($name: String!)", "content": "{\n    resyncClusterAddonsConfiguration(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "resyncAddonsConfiguration($name: String!, $namespace: String!)", "content": "{\n    resyncAddonsConfiguration(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "createPO($input: inputPO!)", "content": "{\n    createPO(input: $input) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/purchase-order.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "createMSA($input: inputMSA!)", "content": "{\n    createMSA(input: $input) {\n      ...MSA_ATTRIBUTES\n    }\n  }\n  ${MSA_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/msa.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "createProposal($input: inputProposal!)", "content": "{\n    createProposal(input: $input) {\n      ...PROPOSAL_ATTRIBUTES\n    }\n  }\n  ${PROPOSAL_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/proposal.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "createRFP($input: inputRFP!)", "content": "{\n    createRFP(input: $input) {\n      ...RFP_ATTRIBUTES\n    }\n  }\n  ${RFP_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/rfp.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "SetRPCProvider($uri: String!)", "content": "{\n    setRPCProvider(uri: $uri) {\n      globalRegistryAddress\n      orgRegistryAddress\n      organizationName\n      organizationRole\n      organizationAddress\n      organizationWhisperKey\n      rpcProvider\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/server-settings.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "SetWalletFromMnemonic($mnemonic: String!, $path: String)", "content": "{\n    setWalletFromMnemonic(mnemonic: $mnemonic, path: $path){\n      globalRegistryAddress\n      orgRegistryAddress\n      organizationName\n      organizationRole\n      organizationWhisperKey\n      rpcProvider\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/server-settings.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "RegisterOrganization($input: RegisterOrganization!)", "content": "{\n    registerOrganization(input: $input){\n      organization {\n        name\n        address\n        role\n      }\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/server-settings.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "addPartner($input: AddPartnerInput!)", "content": "{\n    addPartner(input: $input) {\n      partner {\n        name\n        address\n        role\n        identity\n      }\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/partners.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "removePartner($input: RemovePartnerInput!)", "content": "{\n    removePartner(input: $input) {\n      partner {\n        name\n        address\n        role\n      }\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/partners.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "UpdatePhoto(\n        $input: UpdatePhotoInput!\n        $condition: ModelPhotoConditionInput\n    )", "content": "{\n        updatePhoto(input: $input, condition: $condition) {\n            id\n            albumId\n            owner\n            uploadTime\n            bucket\n            SfnExecutionArn\n            ProcessingStatus\n        }\n    }", "metadata": {"commit_hash": "856a02a2c036a2e9f8222da10b1d79c45d5c5ed4", "file": "amplify/backend/function/S3Trigger984fb593/src/index.js", "repo": "aws-samples_lambda-refarch-imagerecognition"}}, {"type": "mutation", "name": "StartSfnExecution(\n        $input: StartSfnExecutionInput!\n    )", "content": "{\n        startSfnExecution(input: $input) {\n            executionArn\n            startDate\n        }\n    }", "metadata": {"commit_hash": "856a02a2c036a2e9f8222da10b1d79c45d5c5ed4", "file": "amplify/backend/function/S3Trigger984fb593/src/index.js", "repo": "aws-samples_lambda-refarch-imagerecognition"}}, {"type": "mutation", "name": "CreatePhoto(\n          $input: CreatePhotoInput!\n          $condition: ModelPhotoConditionInput\n      )", "content": "{\n          createPhoto(input: $input, condition: $condition) {\n              id\n              albumId\n              owner\n              bucket\n              fullsize {\n                  key\n                  width\n                  height\n              }\n              thumbnail {\n                  key\n                  width\n                  height\n              }\n              album {\n                  id\n                  name\n                  owner\n              }\n          }\n      }", "metadata": {"commit_hash": "856a02a2c036a2e9f8222da10b1d79c45d5c5ed4", "file": "amplify/backend/function/S3Trigger984fb593/src/reference-index.js", "repo": "aws-samples_lambda-refarch-imagerecognition"}}, {"type": "mutation", "name": "UpdatePhoto(\n        $input: UpdatePhotoInput!\n        $condition: ModelPhotoConditionInput\n    )", "content": "{\n        updatePhoto(input: $input, condition: $condition) {\n            id\n            albumId\n            uploadTime\n            bucket\n            fullsize {\n                key\n                width\n                height\n            }\n            thumbnail {\n                key\n                width\n                height\n            }\n            format\n            exifMake\n            exitModel\n            objectDetected\n            SfnExecutionArn\n            ProcessingStatus\n            geoLocation {\n                Latitude {\n                    D\n                    M\n                    S\n                    Direction\n                }\n                Longtitude {\n                    D\n                    M\n                    S\n                    Direction\n                }\n            }\n            owner\n        }\n    }", "metadata": {"commit_hash": "856a02a2c036a2e9f8222da10b1d79c45d5c5ed4", "file": "lambda-functions/store-image-metadata/index.js", "repo": "aws-samples_lambda-refarch-imagerecognition"}}, {"type": "mutation", "name": "CreateGameMessage($input: CreateGameMessageInput!)", "content": "{\n  createGameMessage(input: $input) {\n    id\n    room\n    action\n    data\n    message\n    createdAt\n  }\n}", "metadata": {"commit_hash": "2529ca149d7f584ede780de1cb695a2f55b7031f", "file": "reinvent-2019/doodlechallenge/amplify/backend/function/S3Triggerc9eade68/src/index.js", "repo": "aws-samples_aws-builders-fair-projects"}}, {"type": "mutation", "name": "UploadToken($pushToken:String!)", "content": "{\n  uploadToken(pushToken:$pushToken){\n    _id\n    push_token\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/index.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "ForgotPassword($email:String!)", "content": "{\n  forgotPassword(email:$email){\n    result\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/ForgotPassword/ForgotPassword.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "Login($facebookId:String,$email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(facebookId:$facebookId,email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     is_active\n     tokenExpiration\n     name\n     email\n     phone\n   }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/CreateAccount/CreateAccount.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "ReviewOrder(\n  $orderId:String!,\n  $rating:Int!,\n  $description:String\n)", "content": "{\n  reviewOrder(reviewInput:{\n    orderId:$orderId,\n    rating:$rating,\n    description:$description\n  }){\n    _id\n    order_id\n    review{\n      _id\n      rating\n      description\n    }\n    createdAt\n    updatedAt\n    is_active\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/RateAndReview/RateAndReview.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$is_active:Boolean!)", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone,is_active:$is_active}){\n          _id\n          name\n          phone\n          is_active\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Profile/Profile.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "ChangePassword($oldPassword:String!,$newPassword:String!)", "content": "{\n  changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Profile/ChangePassword.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "EditAddress($addressInput:AddressInput!)", "content": "{\n  editAddress(addressInput:$addressInput){\n    _id\n    label\n    delivery_address\n    details\n    longitude\n    latitude\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/EditAddress/EditAddress.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "Login($facebookId:String,$email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(facebookId:$facebookId,email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     is_active\n     tokenExpiration\n     name\n     email\n     phone\n   }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Login/Login.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "CreateUser($facebookId:String,$phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)", "content": "{\n      createUser(userInput:{\n          facebookId:$facebookId,\n          phone:$phone,\n          email:$email,\n          password:$password,\n          name:$name,\n          notificationToken:$notificationToken,\n          appleId:$appleId\n      }){\n          userId\n          token\n          tokenExpiration\n          name\n          email\n          phone\n          notificationToken\n      }\n    }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Register/Register.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n  selectAddress(id:$id){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/CartAddress/CartAddress.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "DeleteAddress($id:ID!)", "content": "{\n  deleteAddress(id:$id){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Addresses/Addresses.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "PushToken($token:String!)", "content": "{\n  pushToken(token:$token){\n    _id\n    notificationToken\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "UpdateNotificationStatus($offerNotification:Boolean!,$orderNotification:Boolean!)", "content": "{\n      updateNotificationStatus(offerNotification:$offerNotification,orderNotification:$orderNotification){\n        _id\n        notificationToken\n        is_order_notification\n        is_offer_notification\n      }\n    }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$is_active:Boolean!)", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone,is_active:$is_active}){\n          _id\n          name\n          phone\n          is_active\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "CreateAddress($addressInput:AddressInput!)", "content": "{\n  createAddress(addressInput:$addressInput){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/NewAddress/NewAddress.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "Coupon($coupon:String!)", "content": "{\n  coupon(coupon:$coupon){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Cart/Cart.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "PlaceOrder($orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$address:AddressInput!)", "content": "{\n  placeOrder(orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,address:$address) {\n    _id\n    order_id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    user {\n      _id\n      phone\n      email\n    }\n    rider{\n      _id\n    }\n    payment_status\n    payment_method\n    paid_amount\n    order_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Cart/Cart.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\n  updateRiderLocation(latitude:$latitude,longitude:$longitude){\n    _id\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/utilities/location.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\n  updateRiderLocation(latitude:$latitude,longitude:$longitude){\n    _id\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/context/user.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "UpdateOrderStatusRider($id:String!,$status:String!)", "content": "{\n    updateOrderStatusRider(id:$id,status:$status){\n      _id\n      order_status\n    }\n  }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/screens/OrderDetail/OrderDetail.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "AssignOrder($id:String!)", "content": "{\n    assignOrder(id:$id){\n      _id\n      rider{\n        _id\n      }\n    }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/screens/OrderDetail/OrderDetail.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "RiderLogin($username:String,$password:String,$notificationToken:String)", "content": "{\n    riderLogin(username:$username,password:$password,notificationToken:$notificationToken){\n      userId\n      token\n    }\n  }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/screens/Login/Login.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "SendNotificationUser($notificationTitle:String, $notificationBody: String!)", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Notifications.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Coupons.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "DeleteCoupon($id:String!)", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Coupons.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "DeleteRider($id:String!)", "content": "{\n        deleteRider(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Riders.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Riders.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$token:String!)", "content": "{\n  resetPassword(password:$password,token:$token){\n    result\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/ForgotPassword.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "DeleteFood($id:String!)", "content": "{\n        deleteFood(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Food.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "AdminLogin($email:String!,$password:String!)", "content": "{\n  adminLogin(email:$email,password:$password){\n    userId\n    token\n    name\n    email\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Login.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "DeleteOption($id:String!)", "content": "{\n        deleteOption(id:$id)\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Options.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "DeleteAddon($id:String!)", "content": "{\n        deleteAddon(id:$id)\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Addons.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "DeleteCategory($id:String!)", "content": "{\n        deleteCategory(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Category.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n    }\n  }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "CreateCategory($title:String!,$description:String!,$img_menu:String)", "content": "{\n  createCategory(category:{title:$title,description:$description,img_menu:$img_menu}){_id}\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "EditCategory( $_id:String,$title:String!,$description:String!,$img_menu:String)", "content": "{\n        editCategory(category:{_id:$_id,title:$title,description:$description,img_menu:$img_menu}){_id}\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    order_status\n    payment_status\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "AssignRider($id:String!,$riderId:String!)", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    order_status\n    payment_status\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "UpdatePaymentStatus($id:String!,$status:String!)", "content": "{\n  updatePaymentStatus(id:$id,status:$status){\n    _id\n    payment_status\n    paid_amount\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "CreateAddons($addonInput:[AddonInput])", "content": "{\n  createAddons(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "editAddon($addonInput:AddonInput)", "content": "{\n  editAddon(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "CreateOptions($optionInput:[OptionInput])", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "editOption($optionInput:OptionInput)", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          title\n          description\n          price\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "CreateCoupon($couponInput:CouponInput!)", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "SaveOrderConfiguration($configurationInput:OrderConfigurationInput!)", "content": "{\n  saveOrderConfiguration(configurationInput:$configurationInput){\n    _id\n    order_id_prefix\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Configuration/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "SaveDeliveryConfiguration($configurationInput:DeliveryConfigurationInput!)", "content": "{\n  saveDeliveryConfiguration(configurationInput:$configurationInput){\n    _id\n    delivery_charges\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Configuration/Delivery/Delivery.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    password\n    enable_email\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "SaveCurrencyConfiguration($configurationInput:CurrencyConfigurationInput!)", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Configuration/Currency/Currency.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "CreateFood($foodInput:FoodInput!)", "content": "{\n      createFood(\n          foodInput:$foodInput\n      ){\n        _id\n        title\n        img_url\n        description\n        stock\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons{\n            _id\n            title\n            description\n            quantity_minimum\n            quantity_maximum\n            options{\n              _id\n              title\n              price\n            }\n          }\n        }\n        category{\n          _id\n          title\n      }\n      }\n    }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "EditFood($foodInput:FoodInput!)", "content": "{\n        editFood(\n            foodInput:$foodInput\n        ){\n          _id\n          title\n          img_url\n          description\n          stock\n          tag\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons{\n              _id\n              title\n              description\n              quantity_minimum\n              quantity_maximum\n              options{\n                _id\n                title\n                price\n              }\n            }\n          }\n          category{\n            _id\n            title\n        }\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "($postId: String!, $body: String!)", "content": "{\n    createComment(postId: $postId, body: $body) {\n      id\n      comments {\n        id\n        body\n        createdAt\n        username\n      }\n      commentCount\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/pages/SinglePost.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}}, {"type": "mutation", "name": "register($username: String!, $password: String!)", "content": "{\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/pages/Login.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}}, {"type": "mutation", "name": "register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  )", "content": "{\n    register(\n      registerInput: {\n        username: $username\n        password: $password\n        conformPassword: $confirmPassword\n        email: $email\n      }\n    ) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/pages/Register.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}}, {"type": "mutation", "name": "likePost($postId: ID!)", "content": "{\n    likePost(postId: $postId) {\n      id\n      likes {\n        id\n        username\n      }\n      likeCount\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/components/LikeButton.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}}, {"type": "mutation", "name": "deletePost($postId: ID!)", "content": "{\n    deletePost(postId: $postId)\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/components/DeleteButton.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}}, {"type": "mutation", "name": "deleteComment($postId: ID!, $commentId: ID!)", "content": "{\n    deleteComment(postId: $postId, commentId: $commentId) {\n      id\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n      commentCount\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/components/DeleteButton.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}}, {"type": "mutation", "name": "createPost($body: String!)", "content": "{\n    createPost(body: $body) {\n      id\n      body\n      createdAt\n      username\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/components/PostForm.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}}, {"type": "mutation", "name": "doIt$", "content": "{declareArgumentVariables(mutationArgs, args)} {\n    ${mutationName}${argumentVariables(mutationArgs, args)} {\n      ${findMutationType(schema, mutationName).fields.filter(isScalar).map(field => field.name).join(\", \")}\n    }\n  }", "metadata": {"commit_hash": "b2448fceb3ff9bfe3ffbb6e9f553694e6c6aac38", "file": "src/graphql_utils.js", "repo": "launchscout_graphql-admin-react"}}, {"type": "mutation", "name": "CreateDatasetQualityRule(\n      $datasetUri: String!\n      $input: NewDatasetQualityRuleInput\n    )", "content": "{\n      createDatasetQualityRule(datasetUri: $datasetUri, input: $input) {\n        ruleUri\n        name\n        label\n        description\n        created\n        query\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetQualityRule/createDatasetQualityRule.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateDatasetQualityRule(\n      $ruleUri: String!\n      $input: ModifyDatasetQualityRuleInput\n    )", "content": "{\n      updateDatasetQualityRule(ruleUri: $ruleUri, input: $input) {\n        ruleUri\n        name\n        label\n        description\n        created\n        query\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetQualityRule/updateDatasetQualityRule.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "DeleteDatasetQualityRule($ruleUri: String!)", "content": "{\n      deleteDatasetQualityRule(ruleUri: $ruleUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetQualityRule/deleteDatasetqualityRule.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateDatasetTable(\n      $tableUri: String!\n      $input: ModifyDatasetTableInput!\n    )", "content": "{\n      updateDatasetTable(tableUri: $tableUri, input: $input) {\n        tableUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/updateDatasetTable.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "SyncDatasetTableColumns($tableUri: String!)", "content": "{\n      syncDatasetTableColumns(tableUri: $tableUri) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          columnUri\n          name\n          description\n          typeName\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/syncDatasetTableColumns.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteDatasetTable($tableUri: String!)", "content": "{\n      deleteDatasetTable(tableUri: $tableUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/deleteDatasetTable.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateDatasetTableColumn(\n      $columnUri: String!\n      $input: DatasetTableColumnInput\n    )", "content": "{\n      updateDatasetTableColumn(columnUri: $columnUri, input: $input) {\n        columnUri\n        description\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/updateDatasetTableColumn.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "publishDatasetTableUpdate($tableUri: String!)", "content": "{\n      publishDatasetTableUpdate(tableUri: $tableUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/publishDatasetTableUpdate.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "startDatasetProfilingRun($input: StartDatasetProfilingRunInput!)", "content": "{\n      startDatasetProfilingRun(input: $input) {\n        profilingRunUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/startProfilingRun.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "StartProfilingJob($tableUri: String!)", "content": "{\n      startProfilingJob(tableUri: $tableUri) {\n        jobUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/startProfilingJob.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "upVote($input: VoteInput!)", "content": "{\n      upVote(input: $input) {\n        voteUri\n        targetUri\n        targetType\n        upvote\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Vote/upVote.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "DeployScheduledQuery($scheduledQueryUri: String!)", "content": "{\n      deployScheduledQuery(scheduledQueryUri: $scheduledQueryUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/deployScheduledQuery.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RunScheduledQuery($scheduledQueryUri: String!)", "content": "{\n      runScheduledQuery(scheduledQueryUri: $scheduledQueryUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/runScheduledQuery.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateSavedQuery(\n      $scheduledQueryUri: String!\n      $input: NewSavedQueryInput\n    )", "content": "{\n      createSavedQuery(scheduledQueryUri: $scheduledQueryUri, input: $input) {\n        savedQueryUri\n        name\n        label\n        created\n        description\n        tags\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/createSavedQuery.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateSavedQuery(\n      $queryUri: String!\n      $input: ModifySavedQueryInput\n    )", "content": "{\n      updateSavedQuery(queryUri: $queryUri, input: $input) {\n        savedQueryUri\n        name\n        description\n        label\n        created\n        sqlBody\n        tags\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/updateSavedQuery.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateScheduledQuery($input: NewScheduledQueryInput)", "content": "{\n      createScheduledQuery(input: $input) {\n        scheduledQueryUri\n        name\n        label\n        created\n        description\n        tags\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/createScheduledQuery.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RemoveSavedQuery($queryUri: String!)", "content": "{\n      removeSavedQuery(savedQueryUri: $queryUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/removeSavedQuery.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "DeleteDatasetStorageLocation($locationUri: String)", "content": "{\n      deleteDatasetStorageLocation(locationUri: $locationUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/removeDatasetStorageLocation.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RemoveDatasetContributor($datasetUri: String, $userName: String)", "content": "{\n      removeDatasetContributor(datasetUri: $datasetUri, userName: $userName) {\n        datasetUri\n        label\n        userRoleForDataset\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/removeDatasetContributor.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "AddTablePermission(\n      $tableUri: String!\n      $userName: String!\n      $role: DatasetRole!\n    )", "content": "{\n      addTablePermission(\n        tableUri: $tableUri\n        userName: $userName\n        role: $role\n      ) {\n        tableUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/addTablePermission.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteDataset($datasetUri: String!, $deleteFromAWS: Boolean)", "content": "{\n      deleteDataset(datasetUri: $datasetUri, deleteFromAWS: $deleteFromAWS)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/deleteDataset.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateDataset($input: NewDatasetInput)", "content": "{\n        createDataset(input: $input) {\n          datasetUri\n          label\n          userRoleForDataset\n        }\n      }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/createDataset.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "publishDatasetStorageLocationUpdate($locationUri: String!)", "content": "{\n      publishDatasetStorageLocationUpdate(locationUri: $locationUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/publishDatasetLocationUpdate.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "SyncTables($datasetUri: String!)", "content": "{\n      syncTables(datasetUri: $datasetUri) {\n        count\n        nodes {\n          tableUri\n          GlueTableName\n          GlueDatabaseName\n          description\n          name\n          label\n          created\n          S3Prefix\n          dataset {\n            datasetUri\n            name\n            GlueDatabaseName\n            userRoleForDataset\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/syncTables.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "GenerateDatasetAccessToken($datasetUri: String!)", "content": "{\n      generateDatasetAccessToken(datasetUri: $datasetUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/generateDatasetAccessToken.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "StartGlueCrawler($datasetUri: String, $input: CrawlerInput)", "content": "{\n      startGlueCrawler(datasetUri: $datasetUri, input: $input) {\n        Name\n        AwsAccountId\n        region\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/startGlueCrawler.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateDatasetContributor(\n      $datasetUri: String\n      $userName: String\n      $role: DatasetRole\n    )", "content": "{\n      updateDatasetContributor(\n        datasetUri: $datasetUri\n        userName: $userName\n        role: $role\n      ) {\n        datasetUri\n        label\n        userRoleForDataset\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/updateDatasetContributor.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RemoveTablePermission($tableUri: String!, $userName: String!)", "content": "{\n      removeTablePermission(tableUri: $tableUri, userName: $userName)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/removeTablePermission.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RemoveDatasetLoader($loaderUri: String)", "content": "{\n      removeDatasetLoader(loaderUri: $loaderUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/removeDatasetLoader.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "AddDatasetContributor(\n      $datasetUri: String\n      $userName: String\n      $role: DatasetRole\n    )", "content": "{\n      addDatasetContributor(\n        datasetUri: $datasetUri\n        userName: $userName\n        role: $role\n      ) {\n        datasetUri\n        label\n        userRoleForDataset\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/addDatasetContributor.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateDatasetStack($datasetUri: String!)", "content": "{\n      updateDatasetStack(datasetUri: $datasetUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/updateDatasetStack.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateDatasetStorageLocation(\n      $locationUri: String!\n      $input: ModifyDatasetStorageLocationInput!\n    )", "content": "{\n      updateDatasetStorageLocation(locationUri: $locationUri, input: $input) {\n        locationUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/updateDatasetStorageLocation.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "publishDatasetUpdate($datasetUri: String!, $s3Prefix: String!)", "content": "{\n      publishDatasetUpdate(datasetUri: $datasetUri, s3Prefix: $s3Prefix)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/publishDatasetUpdate.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateDatasetStorageLocation(\n      $datasetUri: String\n      $input: NewDatasetStorageLocationInput\n    )", "content": "{\n      createDatasetStorageLocation(datasetUri: $datasetUri, input: $input) {\n        locationUri\n        S3Prefix\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/addDatasetStorageLocation.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "archiveDataset($datasetUri: String!)", "content": "{\n      archiveDataset(datasetUri: $datasetUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/archiveDataset.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateDataset($datasetUri: String, $input: ModifyDatasetInput)", "content": "{\n        updateDataset(datasetUri: $datasetUri, input: $input) {\n          datasetUri\n          label\n          tags\n          userRoleForDataset\n        }\n      }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/updateDataset.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "SaveDatasetSummary($datasetUri: String!, $content: String)", "content": "{\n      saveDatasetSummary(datasetUri: $datasetUri, content: $content)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/saveDatasetSummary.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "ImportDataset($input: ImportDatasetInput)", "content": "{\n      importDataset(input: $input) {\n        datasetUri\n        label\n        userRoleForDataset\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/importDataset.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateDatasetTable(\n      $datasetUri: String\n      $input: NewDatasetTableInput\n    )", "content": "{\n      createDatasetTable(datasetUri: $datasetUri, input: $input) {\n        tableUri\n        name\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/addDatasetTable.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createDatasetLoader(\n      $datasetUri: String\n      $input: NewDatasetLoaderInput\n    )", "content": "{\n      createDatasetLoader(datasetUri: $datasetUri, input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/addDatasetLoader.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RejectShareObject($shareUri: String!)", "content": "{\n      rejectShareObject(shareUri: $shareUri) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/rejectShareObject.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "submitShareObject($shareUri: String!)", "content": "{\n      submitShareObject(shareUri: $shareUri) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/submitApproval.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateShareObject(\n        $datasetUri: String!\n        $itemType: String\n        $itemUri: String\n        $input: NewShareObjectInput\n      )", "content": "{\n        createShareObject(\n          datasetUri: $datasetUri\n          itemType: $itemType\n          itemUri: $itemUri\n          input: $input\n        ) {\n          shareUri\n          created\n        }\n      }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/createShareObject.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "approveShareObject($shareUri: String!)", "content": "{\n      approveShareObject(shareUri: $shareUri) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/approveShareObject.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "DeleteShareObject($shareUri: String!)", "content": "{\n      deleteShareObject(shareUri: $shareUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/deleteShareObject.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "revokeItemsShareObject($input: RevokeItemsInput)", "content": "{\n      revokeItemsShareObject(input: $input) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/revokeItemsShareObject.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RemoveSharedItem($shareItemUri: String!)", "content": "{\n      removeSharedItem(shareItemUri: $shareItemUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/removeSharedItem.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "AddSharedItem($shareUri: String!, $input: AddSharedItemInput!)", "content": "{\n        addSharedItem(shareUri: $shareUri, input: $input) {\n          shareItemUri\n        }\n      }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/addSharedItem.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateDataPipeline(\n      $input: UpdateDataPipelineInput\n      $DataPipelineUri: String!\n    )", "content": "{\n      updateDataPipeline(DataPipelineUri: $DataPipelineUri, input: $input) {\n        DataPipelineUri\n        name\n        label\n        created\n        tags\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/updateDataPipeline.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateDataPipelineEnvironment($input: NewDataPipelineEnvironmentInput)", "content": "{\n      updateDataPipelineEnvironment(input: $input) {\n        envPipelineUri\n        environmentUri\n        environmentLabel\n        pipelineUri\n        pipelineLabel\n        stage\n        region\n        AwsAccountId\n        samlGroupName\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/updateDataPipelineEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteDataPipelineEnvironment(\n      $envPipelineUri: String!\n    )", "content": "{\n      deleteDataPipelineEnvironment(\n        envPipelineUri: $envPipelineUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/deleteDataPipelineEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createDataPipelineEnvironment($input: NewDataPipelineEnvironmentInput)", "content": "{\n      createDataPipelineEnvironment(input: $input) {\n        envPipelineUri\n        environmentUri\n        environmentLabel\n        pipelineUri\n        pipelineLabel\n        stage\n        region\n        AwsAccountId\n        samlGroupName\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/createDataPipelineEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteDataPipeline(\n      $DataPipelineUri: String!\n      $deleteFromAWS: Boolean\n    )", "content": "{\n      deleteDataPipeline(\n        DataPipelineUri: $DataPipelineUri\n        deleteFromAWS: $deleteFromAWS\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/deleteDataPipeline.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updatePipelineStack($DataPipelineUri: String!)", "content": "{\n      updatePipelineStack(DataPipelineUri: $DataPipelineUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/updatePipelineStack.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateDataPipeline($input: NewDataPipelineInput)", "content": "{\n      createDataPipeline(input: $input) {\n        DataPipelineUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/createDataPipeline.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteAirflowCluster($clusterUri: String!)", "content": "{\n      deleteAirflowCluster(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/deleteCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createAirflowCluster(\n      $environmentUri: String!\n      $clusterInput: NewAirflowClusterInput!\n    )", "content": "{\n      createAirflowCluster(\n        environmentUri: $environmentUri\n        clusterInput: $clusterInput\n      ) {\n        clusterUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/createCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "importAirflowCluster(\n      $environmentUri: String!\n      $clusterInput: ImportClusterInput!\n    )", "content": "{\n      importAirflowCluster(\n        environmentUri: $environmentUri\n        clusterInput: $clusterInput\n      ) {\n        clusterUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/importCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createAirflowClusterProject(\n      $clusterUri: String!\n      $projectInput: NewAirflowProjectInput!\n    )", "content": "{\n      createAirflowClusterProject(\n        clusterUri: $clusterUri\n        projectInput: $projectInput\n      ) {\n        projectUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/createAirflowProject.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteAirflowProject($projectUri: String)", "content": "{\n      deleteAirflowProject(projectUri: $projectUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/deleteAirflowProject.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "approveDashboardShare($shareUri: String!)", "content": "{\n      approveDashboardShare(shareUri: $shareUri) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/approveDashboardShare.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "importDashboard($input: ImportDashboardInput)", "content": "{\n      importDashboard(input: $input) {\n        dashboardUri\n        name\n        label\n        DashboardId\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/importDashboard.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateDashboard($input: NewDashboardInput)", "content": "{\n      createDashboard(input: $input) {\n        dashboardUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/createDashboard.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "importDashboard($dashboardUri: String!)", "content": "{\n      deleteDashboard(dashboardUri: $dashboardUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/deleteDashboard.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "requestDashboardShare(\n      $dashboardUri: String!\n      $principalId: String!\n    )", "content": "{\n      requestDashboardShare(\n        dashboardUri: $dashboardUri\n        principalId: $principalId\n      ) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/requestDashboardShare.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "shareDashboard($dashboardUri: String!, $principalId: String!)", "content": "{\n      shareDashboard(dashboardUri: $dashboardUri, principalId: $principalId) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/shareDashboard.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "rejectDashboardShare($shareUri: String!)", "content": "{\n      rejectDashboardShare(shareUri: $shareUri) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/rejectDashboardShare.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateDashboard($input: UpdateDashboardInput)", "content": "{\n      updateDashboard(input: $input) {\n        dashboardUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/updateDashboard.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "PostFeedMessage(\n      $targetUri: String!\n      $targetType: String!\n      $input: FeedMessageInput!\n    )", "content": "{\n      postFeedMessage(\n        targetUri: $targetUri\n        targetType: $targetType\n        input: $input\n      ) {\n        feedMessageUri\n        content\n        created\n        creator\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Feed/postMessage.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "markNotificationAsRead($notificationUri: String!)", "content": "{\n      markNotificationAsRead(notificationUri: $notificationUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Notification/markAsRead.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteNotification($notificationUri: String!)", "content": "{\n      deleteNotification(notificationUri: $notificationUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Notification/archiveNotification.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RemoveUser($input: RemoveOrganizationUserInput)", "content": "{\n      removeUser(input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/removeUser.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateGroup($input: NewGroupInput)", "content": "{\n      createGroup(input: $input) {\n        groupUri\n        label\n        groupRoleInOrganization\n        created\n        userRoleInGroup\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/createGroup.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateOrg($input: NewOrganizationInput)", "content": "{\n      createOrganization(input: $input) {\n        organizationUri\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/createOrganization.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateUser($input: ModifyOrganizationUserInput)", "content": "{\n      updateUser(input: $input) {\n        userName\n        userRoleInOrganization\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/updateUserRole.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateOrg(\n      $organizationUri: String\n      $input: ModifyOrganizationInput\n    )", "content": "{\n      updateOrganization(organizationUri: $organizationUri, input: $input) {\n        organizationUri\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/updateOrganization.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "removeGroupFromOrganization(\n      $organizationUri: String!\n      $groupUri: String!\n    )", "content": "{\n      removeGroupFromOrganization(\n        organizationUri: $organizationUri\n        groupUri: $groupUri\n      ) {\n        organizationUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/removeGroup.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "ArciveOrg($organizationUri: String!)", "content": "{\n      archiveOrganization(organizationUri: $organizationUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/archiveOrganization.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "InviteUser($input: NewOrganizationUserInput)", "content": "{\n      inviteUser(input: $input) {\n        userName\n        userRoleInOrganization\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/inviteUser.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "inviteGroupToOrganization(\n      $input: InviteGroupToOrganizationInput!\n    )", "content": "{\n      inviteGroupToOrganization(input: $input) {\n        organizationUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/inviteGroup.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateTopic($topicUri: String, $input: OrganizationTopicInput)", "content": "{\n      updateTopic(organizationUri: $organizationUri, input: $input) {\n        topicUri\n        label\n        description\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/updateTopic.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createTopic(\n      $organizationUri: String\n      $input: OrganizationTopicInput\n    )", "content": "{\n      createTopic(organizationUri: $organizationUri, input: $input) {\n        topicUri\n        label\n        description\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/addOrUpdateOrganizationTopic.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateGroup($groupUri: String, $input: ModifyGroupInput)", "content": "{\n      updateGroup(groupUri: $groupUri, input: $input) {\n        groupUri\n        groupRoleInOrganization\n        userRoleInGroup\n        created\n        updated\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/updateGroupRoleInOrganization.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateUserProfile($input: UserProfileInput!)", "content": "{\n      updateUserProfile(input: $input) {\n        username\n        bio\n        b64EncodedAvatar\n        tags\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/UserProfile/updateUserProfile.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "enableDataSubscriptions(\n      $environmentUri: String!\n      $input: EnableDataSubscriptionsInput\n    )", "content": "{\n      enableDataSubscriptions(environmentUri: $environmentUri, input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/enableDataSubscriptions.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "removeConsumptionRoleFromEnvironment(\n      $environmentUri: String!\n      $consumptionRoleUri: String!\n    )", "content": "{\n      removeConsumptionRoleFromEnvironment(\n        environmentUri: $environmentUri\n        consumptionRoleUri: $consumptionRoleUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/removeConsumptionRole.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateEnvironment(\n      $environmentUri: String!\n      $input: ModifyEnvironmentInput\n    )", "content": "{\n      updateEnvironment(environmentUri: $environmentUri, input: $input) {\n        environmentUri\n        label\n        userRoleInEnvironment\n        SamlGroupName\n        AwsAccountId\n        dashboardsEnabled\n        notebooksEnabled\n        mlStudiosEnabled\n        pipelinesEnabled\n        warehousesEnabled\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/updateEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "addConsumptionRoleToEnvironment($input: AddConsumptionRoleToEnvironmentInput!)", "content": "{\n      addConsumptionRoleToEnvironment(input: $input) {\n        consumptionRoleUri\n        consumptionRoleName\n        environmentUri\n        groupUri\n        IAMRoleArn\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/addConsumptionRoleToEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateGroupMember(\n      $environmentUri: String!\n      $userName: String!\n      $role: EnvironmentPermission\n    )", "content": "{\n      updateUserEnvironmentRole(\n        environmentUri: $environmentUri\n        userName: $userName\n        role: $role\n      ) {\n        environmentUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/updateEnvironmentMemberRole.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "removeGroupFromEnvironment(\n      $environmentUri: String!\n      $groupUri: String!\n    )", "content": "{\n      removeGroupFromEnvironment(\n        environmentUri: $environmentUri\n        groupUri: $groupUri\n      ) {\n        environmentUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/removeGroup.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteEnvironment(\n      $environmentUri: String!\n      $deleteFromAWS: Boolean\n    )", "content": "{\n      deleteEnvironment(\n        environmentUri: $environmentUri\n        deleteFromAWS: $deleteFromAWS\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/archiveEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateEnvironment($input: NewEnvironmentInput)", "content": "{\n      createEnvironment(input: $input) {\n        environmentUri\n        label\n        userRoleInEnvironment\n        SamlGroupName\n        AwsAccountId\n        created\n        dashboardsEnabled\n        notebooksEnabled\n        mlStudiosEnabled\n        pipelinesEnabled\n        warehousesEnabled\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/createEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "inviteGroupOnEnvironment($input: InviteGroupOnEnvironmentInput!)", "content": "{\n      inviteGroupOnEnvironment(input: $input) {\n        environmentUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/inviteGroup.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "DisableDataSubscriptions($environmentUri: String!)", "content": "{\n      DisableDataSubscriptions(environmentUri: $environmentUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/disableDataSubscriptions.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateGroupEnvironmentPermissions(\n      $input: InviteGroupOnEnvironmentInput!\n    )", "content": "{\n      updateGroupEnvironmentPermissions(input: $input) {\n        environmentUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/updateGroupEnvironmentPermissions.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RemoveUserFromEnvironment(\n      $environmentUri: String!\n      $userName: String!\n    )", "content": "{\n      removeUserFromEnvironment(\n        environmentUri: $environmentUri\n        userName: $userName\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/removeMember.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateEnvironmentStack($environmentUri: String!)", "content": "{\n      updateEnvironmentStack(environmentUri: $environmentUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/updateEnvironmentStack.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateWorksheet($input: NewWorksheetInput)", "content": "{\n      createWorksheet(input: $input) {\n        worksheetUri\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/createWorksheet.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteWorksheet($worksheetUri: String!)", "content": "{\n      deleteWorksheet(worksheetUri: $worksheetUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/deleteWorksheet.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateWorksheet(\n      $worksheetUri: String!\n      $input: UpdateWorksheetInput\n    )", "content": "{\n      updateWorksheet(worksheetUri: $worksheetUri, input: $input) {\n        worksheetUri\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/updateWorksheet.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "ShareWorksheet(\n      $worksheetUri: String!\n      $input: WorksheetShareInput!\n    )", "content": "{\n      shareWorksheet(worksheetUri: $worksheetUri, input: $input) {\n        worksheetShareUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/shareWorksheet.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "StartWorksheetQuery(\n      $worksheetUri: String!\n      $input: WorksheetQueryInput!\n    )", "content": "{\n      startWorksheetQuery(worksheetUri: $worksheetUri, input: $input) {\n        AthenaQueryId\n        Error\n        Status\n        DataScannedInBytes\n        ElapsedTimeInMs\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/startWorksheetQuery.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RemoveWorksheetShare(\n      $worksheetShareUri: String!\n      $canEdit: Boolean\n    )", "content": "{\n      updateWorksheetShare(\n        worksheetShareUri: $worksheetShareUri\n        canEdit: $canEdit\n      ) {\n        worksheetShareUri\n        canEdit\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/updateWorksheetShare.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RemoveWorksheetShare($worksheetShareUri: String!)", "content": "{\n      removeWorksheetShare(worksheetShareUri: $worksheetShareUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/removeWorksheetShare.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "enableRedshiftClusterDatasetCopy(\n      $clusterUri: String\n      $datasetUri: String\n    )", "content": "{\n      enableRedshiftClusterDatasetCopy(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/enableClusterDatasetCopy.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "addDatasetToRedshiftCluster(\n      $clusterUri: String\n      $datasetUri: String\n    )", "content": "{\n      addDatasetToRedshiftCluster(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/addDatasetToCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteRedshiftCluster(\n      $clusterUri: String!\n      $deleteFromAWS: Boolean\n    )", "content": "{\n      deleteRedshiftCluster(\n        clusterUri: $clusterUri\n        deleteFromAWS: $deleteFromAWS\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/deleteCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "enableRedshiftClusterDatasetTableCopy(\n      $clusterUri: String!\n      $datasetUri: String!\n      $tableUri: String!\n      $schema: String!\n      $dataLocation: String\n    )", "content": "{\n      enableRedshiftClusterDatasetTableCopy(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n        tableUri: $tableUri\n        schema: $schema\n        dataLocation: $dataLocation\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/copyTableToCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "resumeRedshiftCluster($clusterUri: String!)", "content": "{\n      resumeRedshiftCluster(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/resumeCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "removeDatasetFromRedshiftCluster(\n      $clusterUri: String\n      $datasetUri: String\n    )", "content": "{\n      removeDatasetFromRedshiftCluster(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/removeDatasetFromCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createRedshiftCluster(\n      $environmentUri: String!\n      $clusterInput: NewClusterInput!\n    )", "content": "{\n      createRedshiftCluster(\n        environmentUri: $environmentUri\n        clusterInput: $clusterInput\n      ) {\n        clusterUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/createCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "importRedshiftCluster(\n      $environmentUri: String!\n      $clusterInput: ImportClusterInput!\n    )", "content": "{\n      importRedshiftCluster(\n        environmentUri: $environmentUri\n        clusterInput: $clusterInput\n      ) {\n        clusterUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/importCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "disableRedshiftClusterDatasetTableCopy(\n      $clusterUri: String\n      $datasetUri: String\n      $tableUri: String\n    )", "content": "{\n      disableRedshiftClusterDatasetTableCopy(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n        tableUri: $tableUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/disableClusterDatasetCopy.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "pauseRedshiftCluster($clusterUri: String!)", "content": "{\n      pauseRedshiftCluster(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/pauseCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "rebootRedshiftCluster($clusterUri: String!)", "content": "{\n      rebootRedshiftCluster(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/rebootCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateStack($targetUri: String!, $targetType: String!)", "content": "{\n      updateStack(targetUri: $targetUri, targetType: $targetType) {\n        stackUri\n        targetUri\n        name\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Stack/updateStack.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteNetwork($vpcUri: String!)", "content": "{\n      deleteNetwork(vpcUri: $vpcUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Vpc/deleteNetwork.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createNetwork($input: NewVpcInput)", "content": "{\n      createNetwork(input: $input) {\n        vpcUri\n        VpcId\n        label\n        description\n        tags\n        owner\n        SamlGroupName\n        privateSubnetIds\n        privateSubnetIds\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Vpc/createNetwork.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteSagemakerNotebook(\n      $notebookUri: String!\n      $deleteFromAWS: Boolean\n    )", "content": "{\n      deleteSagemakerNotebook(\n        notebookUri: $notebookUri\n        deleteFromAWS: $deleteFromAWS\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/deleteSagemakerNotebook.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "StartSagemakerNotebook($notebookUri: String!)", "content": "{\n      startSagemakerNotebook(notebookUri: $notebookUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/startNotebookInstance.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "StopSagemakerNotebook($notebookUri: String!)", "content": "{\n      stopSagemakerNotebook(notebookUri: $notebookUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/stopNotebookInstance.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateSagemakerNotebook($input: NewSagemakerNotebookInput)", "content": "{\n      createSagemakerNotebook(input: $input) {\n        notebookUri\n        name\n        label\n        created\n        description\n        tags\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/createSagemakerNotebook.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateCategory($parentUri: String!, $input: CreateCategoryInput)", "content": "{\n      createCategory(parentUri: $parentUri, input: $input) {\n        nodeUri\n        label\n        path\n        readme\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/addCategory.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateGlossary($input: CreateGlossaryInput)", "content": "{\n      createGlossary(input: $input) {\n        nodeUri\n        label\n        path\n        readme\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/createGlossary.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "RequestLink(\n      $nodeUri: String!\n      $targetUri: String!\n      $targetType: String!\n    )", "content": "{\n      requestLink(\n        nodeUri: $nodeUri\n        targetUri: $targetUri\n        targetType: $targetType\n      ) {\n        linkUri\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/requestLink.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "LinkTerm(\n      $nodeUri: String!\n      $targetUri: String!\n      $targetType: String!\n    )", "content": "{\n      linkTerm(\n        nodeUri: $nodeUri\n        targetUri: $targetUri\n        targetType: $targetType\n      ) {\n        linkUri\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/linkTerm.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateCategory($nodeUri: String!, $input: UpdateCategoryInput)", "content": "{\n      updateCategory(nodeUri: $nodeUri, input: $input) {\n        nodeUri\n        label\n        path\n        readme\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/updateCategory.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateGlossary($nodeUri: String!, $input: UpdateGlossaryInput)", "content": "{\n      updateGlossary(nodeUri: $nodeUri, input: $input) {\n        nodeUri\n        label\n        path\n        readme\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/updateGlossary.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteTerm($nodeUri: String!)", "content": "{\n      deleteTerm(nodeUri: $nodeUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/deleteTerm.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteCategory($nodeUri: String!)", "content": "{\n      deleteCategory(nodeUri: $nodeUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/deleteCategory.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "DismissTermAssociation($linkUri: String!)", "content": "{\n      dismissTermAssociation(linkUri: $linkUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/dismissTermAssociation.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateTerm($nodeUri: String!, $input: UpdateTermInput)", "content": "{\n      updateTerm(nodeUri: $nodeUri, input: $input) {\n        nodeUri\n        label\n        path\n        readme\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/updateTerm.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "ApproveTermAssociation($linkUri: String!)", "content": "{\n      approveTermAssociation(linkUri: $linkUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/approveTermAssociation.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteGlossary($nodeUri: String!)", "content": "{\n      deleteGlossary(nodeUri: $nodeUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/deleteGlossary.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateTerm($parentUri: String!, $input: CreateTermInput)", "content": "{\n      createTerm(parentUri: $parentUri, input: $input) {\n        nodeUri\n        label\n        path\n        readme\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/addTerm.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateApiKey", "content": "{\n      createApiKey {\n        ApiKeyId\n        ApiKeySecret\n        expires\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ApiKeys/createApiKey.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "DeleteApiKey($ApiKeyId: String!)", "content": "{\n      deleteApiKey(ApiKeyId: $ApiKeyId)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ApiKeys/deleteApiKey.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createSagemakerStudioUserProfile(\n      $input: NewSagemakerStudioUserProfileInput\n    )", "content": "{\n      createSagemakerStudioUserProfile(input: $input) {\n        sagemakerStudioUserProfileUri\n        name\n        label\n        created\n        description\n        tags\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerStudio/createSagemakerStudioUserProfile.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteSagemakerStudioUserProfile(\n      $sagemakerStudioUserProfileUri: String!\n      $deleteFromAWS: Boolean\n    )", "content": "{\n      deleteSagemakerStudioUserProfile(\n        sagemakerStudioUserProfileUri: $sagemakerStudioUserProfileUri\n        deleteFromAWS: $deleteFromAWS\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerStudio/deleteSagemakerStudioUserProfile.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateGroupTenantPermissions(\n      $input: UpdateGroupTenantPermissionsInput!\n    )", "content": "{\n      updateGroupTenantPermissions(input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/updateTenantGroupPermissions.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createQuicksightDataSourceSet ($vpcConnectionId: String!)", "content": "{\n      createQuicksightDataSourceSet(vpcConnectionId: $vpcConnectionId)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/createQuicksightDataSourceSet.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateSSMParameter ($name: String!, $value: String!)", "content": "{\n      updateSSMParameter(name: $name, value: $value)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/updateSSMParameter.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateKeyValueTags($input: UpdateKeyValueTagsInput!)", "content": "{\n      updateKeyValueTags(input: $input) {\n        tagUri\n        targetUri\n        targetType\n        key\n        value\n        cascade\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/KeyValueTags/updateKeyValueTags.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "mergeReviews(\n          $userId: ID!\n          $userName: String!\n          $businessId: ID!\n          $businessName: String!\n          $businessCity: String!\n          $businessState: String!\n          $businessAddress: String!\n          $latitude: Float!\n          $longitude: Float!\n          $reviewId: ID!\n          $reviewText: String\n          $reviewDate: DateTime\n          $reviewStars: Float\n          $categories: [String!]!\n        )", "content": "{\n          user: mergeUser(userId: $userId, name: $userName) {\n            userId\n          }\n          business: mergeBusiness(\n            businessId: $businessId\n            name: $businessName\n            address: $businessAddress\n            city: $businessCity\n            state: $businessState\n            latitude: $latitude\n            longitude: $longitude\n          ) {\n            businessId\n          }\n\n          businessCategories: mergeBusinessCategory(\n            categories: $categories\n            businessId: $businessId\n          ) {\n            businessId\n          }\n\n          reviews: createReviews(\n            input: {\n              reviewId: $reviewId\n              stars: $reviewStars\n              text: $reviewText\n              date: $reviewDate\n              business: { connect: { where: { businessId: $businessId } } }\n              user: { connect: { where: { userId: $userId } } }\n            }\n          ) {\n            reviews {\n              reviewId\n              date\n            }\n          }\n        }", "metadata": {"commit_hash": "02d98e091b43a073bbadd7ae87c456d8f4f737ea", "file": "api/src/seed/seed-mutations.js", "repo": "grand-stack_grand-stack-starter"}}, {"type": "mutation", "name": "DeletePersonalAccessToken($patId: uuid!)", "content": "{\n  deletePersonalAccessToken: deleteAuthRefreshToken(id: $patId) {\n    id\n    metadata\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "ResetDatabasePassword($appId: String!, $newPassword: String!)", "content": "{\n  resetPostgresPassword(appID: $appId, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "deleteApplication($appId: uuid!)", "content": "{\n  deleteApp(id: $appId) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "insertApplication($app: apps_insert_input!)", "content": "{\n  insertApp(object: $app) {\n    id\n    name\n    slug\n    workspace {\n      id\n      name\n      slug\n    }\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "PauseApplication($appId: uuid!)", "content": "{\n  updateApp(pk_columns: {id: $appId}, _set: {desiredState: 6}) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "DeleteSecret($appId: uuid!, $name: String!)", "content": "{\n  deleteSecret(appID: $appId, key: $name) {\n    name\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "InsertSecret($appId: uuid!, $secret: ConfigEnvironmentVariableInsertInput!)", "content": "{\n  insertSecret(appID: $appId, secret: $secret) {\n    name\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "UpdateSecret($appId: uuid!, $secret: ConfigEnvironmentVariableInsertInput!)", "content": "{\n  updateSecret(appID: $appId, secret: $secret) {\n    name\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "UpdateConfig($appId: uuid!, $config: ConfigConfigUpdateInput!)", "content": "{\n  updateConfig(appID: $appId, config: $config) {\n    id: __typename\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "UnpauseApplication($appId: uuid!)", "content": "{\n  updateApp(pk_columns: {id: $appId}, _set: {desiredState: 5}) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "updateApplication($appId: uuid!, $app: apps_set_input!)", "content": "{\n  updateApp(pk_columns: {id: $appId}, _set: $app) {\n    name\n    id\n    slug\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "InsertDeployment($object: deployments_insert_input!)", "content": "{\n  insertDeployment(object: $object) {\n    ...DeploymentRow\n  }\n}\n    ${DeploymentRowFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "deletePaymentMethod($paymentMethodId: uuid!)", "content": "{\n  deletePaymentMethod(id: $paymentMethodId) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "insertNewPaymentMethod($workspaceId: uuid!, $paymentMethod: paymentMethods_insert_input!)", "content": "{\n  updatePaymentMethods(\n    where: {workspaceId: {_eq: $workspaceId}}\n    _set: {isDefault: false}\n  ) {\n    affected_rows\n  }\n  insertPaymentMethod(object: $paymentMethod) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "setNewDefaultPaymentMethod($workspaceId: uuid!, $paymentMethodId: uuid!)", "content": "{\n  setAllPaymentMethodToDefaultFalse: updatePaymentMethods(\n    where: {workspaceId: {_eq: $workspaceId}}\n    _set: {isDefault: false}\n  ) {\n    affected_rows\n  }\n  updatePaymentMethods(\n    where: {id: {_eq: $paymentMethodId}}\n    _set: {isDefault: true}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "RestoreApplicationDatabase($appId: String!, $backupId: String!)", "content": "{\n  restoreApplicationDatabase(appID: $appId, backupID: $backupId)\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "remoteAppDeleteUser($id: uuid!)", "content": "{\n  deleteUser(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "updateRemoteAppUser($id: uuid!, $user: users_set_input!)", "content": "{\n  updateUser(pk_columns: {id: $id}, _set: $user) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "insertRemoteAppUserRoles($roles: [authUserRoles_insert_input!]!)", "content": "{\n  insertAuthUserRoles(objects: $roles) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "deleteRemoteAppUserRoles($userId: uuid!, $roles: [String!]!)", "content": "{\n  deleteAuthUserRoles(\n    where: {_and: [{userId: {_eq: $userId}}, {role: {_in: $roles}}]}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "insertFeedbackOne($feedback: feedback_insert_input!)", "content": "{\n  insertFeedbackOne(object: $feedback) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "deleteWorkspaceMemberInvites($id: uuid!)", "content": "{\n  deleteWorkspaceMemberInvites(where: {id: {_eq: $id}}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "insertWorkspaceMemberInvite($workspaceMemberInvite: workspaceMemberInvites_insert_input!)", "content": "{\n  insertWorkspaceMemberInvite(object: $workspaceMemberInvite) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "updateWorkspaceMemberInvite($id: uuid!, $workspaceMemberInvite: workspaceMemberInvites_set_input!)", "content": "{\n  updateWorkspaceMemberInvites(\n    _set: $workspaceMemberInvite\n    where: {id: {_eq: $id}}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "deleteWorkspaceMember($id: uuid!)", "content": "{\n  deleteWorkspaceMember(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "updateWorkspaceMember($id: uuid!, $workspaceMember: workspaceMembers_set_input!)", "content": "{\n  updateWorkspaceMember(_set: $workspaceMember, pk_columns: {id: $id}) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "deleteWorkspace($id: uuid!)", "content": "{\n  deleteWorkspace(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "insertWorkspace($workspace: workspaces_insert_input!)", "content": "{\n  insertWorkspace(object: $workspace) {\n    name\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "updateWorkspace($id: uuid!, $workspace: workspaces_set_input!)", "content": "{\n  updateWorkspace(pk_columns: {id: $id}, _set: $workspace) {\n    id\n    name\n    email\n    companyName\n    addressLine1\n    addressLine2\n    addressPostalCode\n    addressCity\n    addressCountryCode\n    slug\n    taxIdType\n    taxIdValue\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "removeSecurityKey($id: uuid!)", "content": "{\n    deleteAuthUserSecurityKey(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "examples/react-apollo/src/profile/security-keys.tsx", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "AddItem($contents: String!)", "content": "{\n    insertTodo(object: { contents: $contents }) {\n      id\n      contents\n    }\n  }", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "examples/react-apollo/src/apollo/index.tsx", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "RepoMemoPublish($repoId: ID!, $parentId: ID, $text: String!)", "content": "{\n    memo: publishMemo(repoId: $repoId, parentId: $parentId, text: $text) {\n      ...RepoMemo\n    }\n  }\n  ${MemoFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "packages/styleguide/src/components/Editor/Forms/Memo/graphql.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "RepoMemoEdit($id: ID!, $text: String!)", "content": "{\n    memo: editMemo(id: $id, text: $text) {\n      ...RepoMemo\n    }\n  }\n  ${MemoFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "packages/styleguide/src/components/Editor/Forms/Memo/graphql.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "RepoMemoEdit($id: ID!)", "content": "{\n    memo: unpublishMemo(id: $id) {\n      ...RepoMemo\n    }\n  }\n  ${MemoFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "packages/styleguide/src/components/Editor/Forms/Memo/graphql.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updatePostfinancePayment($id: ID!, $message: String!)", "content": "{\n    updatePostfinancePayment(pfpId: $id, mitteilung: $message) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/PostfinancePayments/List/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "importPostfinanceCSV($csv: String!)", "content": "{\n    importPostfinanceCSV(csv: $csv)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/PostfinancePayments/List/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "rematchPayments", "content": "{\n    rematchPayments\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/PostfinancePayments/List/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "hidePostfinancePayment($id: ID!)", "content": "{\n    hidePostfinancePayment(id: $id) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/PostfinancePayments/List/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "manuallyMatchPostfinancePayment($id: ID!)", "content": "{\n    manuallyMatchPostfinancePayment(id: $id) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/PostfinancePayments/List/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "removeUserFromRole($userId: ID!, $role: String!)", "content": "{\n    removeUserFromRole(userId: $userId, role: $role) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Roles.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "addUserToRole($userId: ID!, $role: String!)", "content": "{\n    addUserToRole(userId: $userId, role: $role) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Roles.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "revokeAccess($id: ID!)", "content": "{\n    revokeAccess(id: $id)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Access.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "invalidateAccess($id: ID!)", "content": "{\n    invalidateAccess(id: $id)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Access.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "clearSession($sessionId: ID!, $userId: ID!)", "content": "{\n    clearSession(sessionId: $sessionId, userId: $userId)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Sessions.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "clearSessions($userId: ID!)", "content": "{\n    clearSessions(userId: $userId)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Sessions.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateAdminNotes($notes: String, $userId: ID!)", "content": "{\n    updateAdminNotes(notes: $notes, userId: $userId) {\n      id\n      adminNotes\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/AdminNotes.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updatePreferredFirstFactor(\n    $userId: ID!\n    $tokenType: SignInTokenType!\n  )", "content": "{\n    preferredFirstFactor(userId: $userId, tokenType: $tokenType) {\n      id\n      ...FirstFactors\n    }\n  }\n  ${firstFactorFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/AuthSettings.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "resubscribeEmail($userId: ID!)", "content": "{\n    resubscribeEmail(userId: $userId) {\n      id\n      status\n      subscriptions {\n        id\n        name\n        subscribed\n        isEligible\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/NewsletterSubscriptions.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateNewsletterSubscription(\n    $userId: ID!\n    $name: NewsletterName!\n    $subscribed: Boolean!\n  )", "content": "{\n    updateNewsletterSubscription(\n      userId: $userId\n      name: $name\n      subscribed: $subscribed\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/NewsletterSubscriptions.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateUser(\n    $id: ID!\n    $birthday: Date\n    $firstName: String!\n    $lastName: String!\n    $phoneNumber: String\n    $address: AddressInput!\n  )", "content": "{\n    updateUser(\n      userId: $id\n      birthday: $birthday\n      firstName: $firstName\n      lastName: $lastName\n      phoneNumber: $phoneNumber\n      address: $address\n    ) {\n      id\n      name\n      firstName\n      lastName\n      phoneNumber\n      address {\n        id\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Particulars/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "cancelPledge($pledgeId: ID!)", "content": "{\n    cancelPledge(pledgeId: $pledgeId) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Pledges/CancelPledge.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "movePledge($pledgeId: ID!, $userId: ID!)", "content": "{\n    movePledge(pledgeId: $pledgeId, userId: $userId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Pledges/MovePledge.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "resolvePledgeToPayment($pledgeId: ID!, $reason: String!)", "content": "{\n    resolvePledgeToPayment(pledgeId: $pledgeId, reason: $reason) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Pledges/ResolvePledgeToPayment.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updatePayment(\n    $paymentId: ID!\n    $status: PaymentStatus!\n    $reason: String\n  )", "content": "{\n    updatePayment(paymentId: $paymentId, status: $status, reason: $reason) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Pledges/UpdatePayment.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateAddress($id: ID!, $address: AddressInput!)", "content": "{\n    updateAddress(id: $id, address: $address) {\n      id\n      name\n      line1\n      line2\n      postalCode\n      city\n      country\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Pledges/UpdateAddress.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "mergeUsers($sourceId: ID!, $targetId: ID!)", "content": "{\n    mergeUsers(sourceUserId: $sourceId, targetUserId: $targetId) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Merge/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "deleteUser($userId: ID!, $unpublishComments: Boolean!)", "content": "{\n    deleteUser(userId: $userId, unpublishComments: $unpublishComments) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Actions/DeleteUser.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateEmail($id: ID!, $email: String!)", "content": "{\n    updateEmail(userId: $id, email: $email) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Email/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "resetMembership($membershipId: ID!)", "content": "{\n    resetMembership(id: $membershipId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/ResetMembership.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "setMembershipAutoPay($id: ID!, $autoPay: Boolean!)", "content": "{\n    setMembershipAutoPay(id: $id, autoPay: $autoPay) {\n      id\n      autoPay\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "moveMembership($membershipId: ID!, $userId: ID!)", "content": "{\n    moveMembership(membershipId: $membershipId, userId: $userId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/MoveMembership.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "reactivateMembership($membershipId: ID!)", "content": "{\n    reactivateMembership(id: $membershipId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/ReactivateMembership.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "appendPeriod(\n    $id: ID!\n    $duration: Int!\n    $durationUnit: MembershipTypeInterval!\n  )", "content": "{\n    appendPeriod(id: $id, duration: $duration, durationUnit: $durationUnit) {\n      id\n      periods {\n        id\n        beginDate\n        endDate\n        isCurrent\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/AppendPeriod.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "cancelMembership(\n    $membershipId: ID!\n    $immediately: Boolean\n    $details: CancellationInput!\n  )", "content": "{\n    cancelMembership(\n      id: $membershipId\n      immediately: $immediately\n      details: $details\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/CancelMembership.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateMembershipCancellation(\n    $cancellationId: ID!\n    $details: CancellationInput!\n  )", "content": "{\n    updateMembershipCancellation(id: $cancellationId, details: $details) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/CancelMembership.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "SuspendUser(\n    $id: ID!\n    $interval: String\n    $intervalAmount: Int\n    $reason: String\n  )", "content": "{\n    suspendUser(\n      id: $id\n      interval: $interval\n      intervalAmount: $intervalAmount\n      reason: $reason\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Dialog/DiscussionSuspensions.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "UnsuspendUser($id: ID!)", "content": "{\n    unsuspendUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Dialog/DiscussionSuspensions.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "verifyCredential($id: ID!)", "content": "{\n    verifyCredential(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Dialog/Credentials.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "removeCredentialVerification($id: ID!)", "content": "{\n    removeCredentialVerification(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Dialog/Credentials.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "signIn(\n    $email: String!\n    $context: String\n    $consents: [String!]\n    $tokenType: SignInTokenType\n  )", "content": "{\n    signIn(\n      email: $email\n      context: $context\n      consents: $consents\n      tokenType: $tokenType\n    ) {\n      phrase\n      tokenType\n      alternativeFirstFactors\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Auth/SignIn.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "signOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Auth/SignOut.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "unpublish($repoId: ID!)", "content": "{\n    unpublish(repoId: $repoId)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Publication/Current.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "publish($repoId: ID!, $commitId: ID!, $settings: PublishSettings!)", "content": "{\n    publish(repoId: $repoId, commitId: $commitId, settings: $settings) {\n      unresolvedRepoIds\n      publication {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Publication/PublicationForm.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "repoFileUploadBegin($repoId: ID!, $name: String!)", "content": "{\n    repoFileUploadBegin(repoId: $repoId, name: $name) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/Upload.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "repoFileUploadCommit($id: ID!)", "content": "{\n    repoFileUploadCommit(id: $id) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/Upload.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "repoFileUploadAbort($id: ID!, $error: String!)", "content": "{\n    repoFileUploadAbort(id: $id, error: $error) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/Upload.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "repoFileMakePublic($id: ID!)", "content": "{\n    repoFileMakePublic(id: $id) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/actions/Publish.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "repoFileDestroy($id: ID!)", "content": "{\n    repoFileDestroy(id: $id) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/actions/Destroy.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "generateDerivative($commitId: ID!)", "content": "{\n    generateDerivative(commitId: $commitId) {\n      ...SimpleDerivative\n    }\n  }\n\n  ${fragments.SimpleDerivative}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Derivatives/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "repoArchive($repoId: ID!)", "content": "{\n    archive(repoIds: [$repoId]) {\n      nodes {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Repo/Archive.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "editRepoMeta($repoId: ID!, $publishDate: DateTime)", "content": "{\n    editRepoMeta(repoId: $repoId, publishDate: $publishDate) {\n      ...EditPageRepo\n    }\n  }\n  ${EditPageRepo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Repo/EditMetaDate.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "commit(\n    $repoId: ID!\n    $parentId: ID\n    $message: String!\n    $document: DocumentInput!\n    $isTemplate: Boolean\n  )", "content": "{\n    commit(\n      repoId: $repoId\n      parentId: $parentId\n      message: $message\n      document: $document\n      isTemplate: $isTemplate\n    ) {\n      ...CommitWithDocument\n      repo {\n        ...EditPageRepo\n      }\n    }\n  }\n  ${fragments.CommitWithDocument}\n  ${fragments.EditPageRepo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Edit/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "placeMilestone(\n    $repoId: ID!\n    $commitId: ID!\n    $name: String!\n    $message: String!\n  )", "content": "{\n    placeMilestone(\n      repoId: $repoId\n      commitId: $commitId\n      name: $name\n      message: $message\n    ) {\n      ...MilestoneWithCommit\n    }\n  }\n  ${fragments.MilestoneWithCommit}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/VersionControl/Checklist.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "removeMilestone($repoId: ID!, $name: String!)", "content": "{\n    removeMilestone(repoId: $repoId, name: $name)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/VersionControl/Checklist.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "uncommittedChanges($repoId: ID!, $action: Action!)", "content": "{\n    uncommittedChanges(repoId: $repoId, action: $action)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/VersionControl/UncommittedChanges.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "signIn(\n    $email: String!\n    $context: String\n    $consents: [String!]\n    $tokenType: SignInTokenType\n  )", "content": "{\n    signIn(\n      email: $email\n      context: $context\n      consents: $consents\n      tokenType: $tokenType\n    ) {\n      phrase\n      tokenType\n      alternativeFirstFactors\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Auth/SignIn.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "signOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Auth/SignOut.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitQuestionnaireAndUpdateMe(\n    $questionnaireId: ID!\n    $phoneNumber: String\n    $address: AddressInput\n  )", "content": "{\n    updateMe(phoneNumber: $phoneNumber, address: $address) {\n      id\n      ...PhoneAndAddressOnUser\n    }\n    submitQuestionnaire(id: $questionnaireId) {\n      id\n      userSubmitDate\n      userHasSubmitted\n    }\n  }\n  ${userDetailsFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/pages/umfrage/1-minute.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateAddress($address: AddressInput)", "content": "{\n    updateMe(address: $address) {\n      id\n      address {\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/AddressEditor.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitElectionBallot($electionId: ID!, $candidacyIds: [ID!]!)", "content": "{\n    submitElectionBallot(electionId: $electionId, candidacyIds: $candidacyIds) {\n      id\n      userHasSubmitted\n      userSubmitDate\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/ElectionConfirm.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitCandidacy($slug: String!)", "content": "{\n    cancelCandidacy(slug: $slug) {\n      candidacies {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/ElectionCandidacy.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateCandidacy(\n    $slug: String!\n    $birthday: Date\n    $statement: String\n    $disclosures: String\n    $address: AddressInput\n    $portrait: String\n    $username: String\n    $credential: String!\n    $gender: String\n    $biography: String\n    $publicUrl: String\n    $twitterHandle: String\n    $facebookId: String\n  )", "content": "{\n    updateMe(\n      birthday: $birthday\n      statement: $statement\n      disclosures: $disclosures\n      address: $address\n      portrait: $portrait\n      username: $username\n      gender: $gender\n      biography: $biography\n      publicUrl: $publicUrl\n      twitterHandle: $twitterHandle\n      facebookId: $facebookId\n      hasPublicProfile: true\n    ) {\n      id\n      username\n      name\n      portrait\n      statement\n      disclosures\n      birthday\n      address {\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n      credentials {\n        isListed\n        description\n      }\n      gender\n      biography\n      biographyContent\n      publicUrl\n      twitterHandle\n      facebookId\n    }\n    submitCandidacy(slug: $slug, credential: $credential) {\n      id\n      yearOfBirth\n      city\n      recommendation\n      user {\n        id\n        candidacies {\n          id\n          credential {\n            id\n            description\n            verified\n          }\n          election {\n            slug\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/ElectionCandidacy.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitVotingBallot($votingId: ID!, $optionId: ID)", "content": "{\n    submitVotingBallot(votingId: $votingId, optionId: $optionId) {\n      id\n      userHasSubmitted\n      userSubmitDate\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/Voting.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "grantAccess($campaignId: ID!, $email: String!, $message: String)", "content": "{\n    grantAccess(campaignId: $campaignId, email: $email, message: $message) {\n      email\n      endAt\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Access/Campaigns/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "revokeAccess($id: ID!)", "content": "{\n    revokeAccess(id: $id)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Access/Campaigns/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateMe(\n    $username: String\n    $hasPublicProfile: Boolean\n    $facebookId: String\n    $twitterHandle: String\n    $emailAccessRole: AccessRole\n    $publicUrl: String\n    $biography: String\n    $statement: String\n    $portrait: String\n    $phoneNumber: String\n    $phoneNumberNote: String\n    $phoneNumberAccessRole: AccessRole\n    $pgpPublicKey: String\n    $isListed: Boolean\n    $prolitterisId: String\n  )", "content": "{\n    updateMe(\n      username: $username\n      hasPublicProfile: $hasPublicProfile\n      facebookId: $facebookId\n      twitterHandle: $twitterHandle\n      emailAccessRole: $emailAccessRole\n      publicUrl: $publicUrl\n      biography: $biography\n      statement: $statement\n      portrait: $portrait\n      phoneNumber: $phoneNumber\n      phoneNumberNote: $phoneNumberNote\n      phoneNumberAccessRole: $phoneNumberAccessRole\n      pgpPublicKey: $pgpPublicKey\n      isListed: $isListed\n      prolitterisId: $prolitterisId\n    ) {\n      id\n      username\n      hasPublicProfile\n      facebookId\n      twitterHandle\n      emailAccessRole\n      publicUrl\n      biography\n      biographyContent\n      statement\n      portrait\n      phoneNumber\n      phoneNumberNote\n      phoneNumberAccessRole\n      pgpPublicKey\n      pgpPublicKeyId\n      isListed\n      prolitterisId\n      credentials {\n        isListed\n        description\n        verified\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Profile/Edit.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "publishCredential($description: String)", "content": "{\n    publishCredential(description: $description) {\n      isListed\n      description\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Profile/Edit.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateCard(\n    $id: ID!\n    $portrait: String\n    $statement: String!\n    $payload: JSON\n  )", "content": "{\n    updateCard(\n      id: $id\n      portrait: $portrait\n      statement: $statement\n      payload: $payload\n    ) {\n      ...MyCard\n    }\n  }\n\n  ${fragmentCard}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/Update.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "claimCard(\n    $id: ID!\n    $accessToken: ID!\n    $portrait: String\n    $statement: String!\n    $payload: JSON\n  )", "content": "{\n    claimCard(\n      id: $id\n      accessToken: $accessToken\n      portrait: $portrait\n      statement: $statement\n      payload: $payload\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/Claim.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "subToUser($userId: ID!)", "content": "{\n    subscribe(objectId: $userId, type: User) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/Group.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "unsubFromUser($subscriptionId: ID!)", "content": "{\n    unsubscribe(subscriptionId: $subscriptionId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/Group.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitPledge(\n    $total: Int!\n    $options: [PackageOptionInput!]!\n    $user: UserInput\n    $reason: String\n    $consents: [String!]\n    $accessToken: ID\n    $payload: JSON\n    $address: AddressInput\n    $shippingAddress: AddressInput\n  )", "content": "{\n    submitPledge(\n      pledge: {\n        total: $total\n        options: $options\n        user: $user\n        address: $address\n        shippingAddress: $shippingAddress\n        reason: $reason\n        accessToken: $accessToken\n        payload: $payload\n      }\n      consents: $consents\n    ) {\n      pledgeId\n      userId\n      emailVerify\n      pfAliasId\n      pfSHA\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Submit.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "payPledge(\n    $pledgeId: ID!\n    $method: PaymentMethod!\n    $sourceId: String\n    $pspPayload: JSON\n    $address: AddressInput\n    $paperInvoice: Boolean\n    $makeDefault: Boolean\n  )", "content": "{\n    payPledge(\n      pledgePayment: {\n        pledgeId: $pledgeId\n        method: $method\n        sourceId: $sourceId\n        makeDefault: $makeDefault\n        pspPayload: $pspPayload\n        address: $address\n        paperInvoice: $paperInvoice\n      }\n    ) {\n      pledgeId\n      userId\n      emailVerify\n      stripePublishableKey\n      stripeClientSecret\n      stripePaymentIntentId\n      companyId\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Submit.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "syncPaymentIntent($stripePaymentIntentId: ID!, $companyId: ID!)", "content": "{\n    syncPaymentIntent(\n      stripePaymentIntentId: $stripePaymentIntentId\n      companyId: $companyId\n    ) {\n      pledgeStatus\n      updatedPledge\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Submit.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "reclaimPledge($pledgeId: ID!)", "content": "{\n    reclaimPledge(pledgeId: $pledgeId)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Claim.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "upsertDocumentProgress(\n    $documentId: ID!\n    $percentage: Float!\n    $nodeId: String!\n  )", "content": "{\n    upsertDocumentProgress(\n      documentId: $documentId\n      percentage: $percentage\n      nodeId: $nodeId\n    ) {\n      id\n      document {\n        id\n        ...UserProgressOnDocument\n      }\n    }\n  }\n  ${userProgressFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Article/Progress/api.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "removeDocumentProgress($documentId: ID!)", "content": "{\n    removeDocumentProgress(documentId: $documentId) {\n      id\n      document {\n        id\n        ...UserProgressOnDocument\n      }\n    }\n  }\n  ${userProgressFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Article/Progress/api.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitConsent", "content": "{\n    submitConsent(name: \"PROGRESS\") {\n      id\n      ...ProgressConsent\n    }\n  }\n  ${userProgressConsentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Article/Progress/api.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "revokeConsent", "content": "{\n    revokeConsent(name: \"PROGRESS\") {\n      id\n      ...ProgressConsent\n    }\n  }\n  ${userProgressConsentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Article/Progress/api.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "upvoteCommentMutation($commentId: ID!)", "content": "{\n    upvoteComment(id: $commentId) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "reportCommentMutation($commentId: ID!)", "content": "{\n    reportComment(id: $commentId) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "downvoteComment($commentId: ID!)", "content": "{\n    downvoteComment(id: $commentId) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "unvoteComment($commentId: ID!)", "content": "{\n    unvoteComment(id: $commentId) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "editComment($commentId: ID!, $content: String!, $tags: [String!])", "content": "{\n    editComment(id: $commentId, content: $content, tags: $tags) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "unpublishComment($commentId: ID!)", "content": "{\n    unpublishComment(id: $commentId) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateNotificationSettings(\n    $defaultDiscussionNotificationOption: DiscussionNotificationOption\n    $discussionNotificationChannels: [DiscussionNotificationChannel!]\n  )", "content": "{\n    updateNotificationSettings(\n      defaultDiscussionNotificationOption: $defaultDiscussionNotificationOption\n      discussionNotificationChannels: $discussionNotificationChannels\n    ) {\n      id\n      discussionNotificationChannels\n      defaultDiscussionNotificationOption\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "setDiscussionPreferences(\n    $discussionId: ID!\n    $discussionPreferences: DiscussionPreferencesInput!\n  )", "content": "{\n    setDiscussionPreferences(\n      id: $discussionId\n      discussionPreferences: $discussionPreferences\n    ) {\n      ...Discussion\n    }\n  }\n  ${DISCUSSION_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "UpsertDevice($token: ID!, $information: DeviceInformationInput!)", "content": "{\n    upsertDevice(token: $token, information: $information) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/NativeApp/MessageSync.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateMe(\n    $birthday: Date\n    $firstName: String\n    $lastName: String\n    $phoneNumber: String\n    $address: AddressInput\n  )", "content": "{\n    updateMe(\n      birthday: $birthday\n      firstName: $firstName\n      lastName: $lastName\n      phoneNumber: $phoneNumber\n      address: $address\n    ) {\n      id\n      birthday\n      name\n      firstName\n      lastName\n      ...PhoneAndAddressOnUser\n    }\n  }\n  ${userDetailsFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "addUserToRole($role: String!)", "content": "{\n    addUserToRole(role: $role) {\n      id\n      roles\n      newsletterSettings {\n        id\n        status\n        subscriptions {\n          ...NewsletterInfo\n        }\n      }\n    }\n  }\n  ${newsletterFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "preferredFirstFactor($tokenType: SignInTokenType)", "content": "{\n    preferredFirstFactor(tokenType: $tokenType) {\n      id\n      enabledFirstFactors\n      preferredFirstFactor\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/AuthSettings.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitConsent", "content": "{\n    submitConsent(name: \"${PROLITTERIS_OPT_OUT_CONSENT}\") {\n      id\n      ...ProlitterisConsent\n    }\n  }\n  ${userProlitterisConsentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/ProlitterisSettings.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "revokeConsent", "content": "{\n    revokeConsent(name: \"${PROLITTERIS_OPT_OUT_CONSENT}\") {\n      id\n      ...ProlitterisConsent\n    }\n  }\n  ${userProlitterisConsentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/ProlitterisSettings.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "addPaymentMethod(\n    $stripePlatformPaymentMethodId: ID!\n    $companyId: ID!\n  )", "content": "{\n    addPaymentMethod(\n      stripePlatformPaymentMethodId: $stripePlatformPaymentMethodId\n      companyId: $companyId\n    ) {\n      stripePublishableKey\n      stripeClientSecret\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/PaymentSources.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "setDefaultPaymentMethod($stripePlatformPaymentMethodId: ID!)", "content": "{\n    setDefaultPaymentMethod(\n      stripePlatformPaymentMethodId: $stripePlatformPaymentMethodId\n    ) {\n      id\n      isDefault\n      brand\n      last4\n      expMonth\n      expYear\n      isExpired\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/PaymentSources.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "resubscribeEmail($userId: ID!)", "content": "{\n    resubscribeEmail(userId: $userId) {\n      id\n      status\n      subscriptions {\n        ...NewsletterInfo\n      }\n    }\n  }\n  ${newsletterFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/NewsletterSubscriptions/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateNewsletterSubscription(\n    $name: NewsletterName!\n    $subscribed: Boolean!\n  )", "content": "{\n    updateNewsletterSubscription(name: $name, subscribed: $subscribed) {\n      ...NewsletterInfo\n    }\n  }\n  ${newsletterFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/NewsletterSubscriptions/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "claimMembership($voucherCode: String!)", "content": "{\n    claimMembership(voucherCode: $voucherCode)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Claim.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "claimAccess($voucherCode: String!)", "content": "{\n    claimAccess(voucherCode: $voucherCode) {\n      endAt\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Claim.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateName($firstName: String!, $lastName: String!)", "content": "{\n    updateMe(firstName: $firstName, lastName: $lastName) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Claim.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "cancelMembership($id: ID!, $reason: String)", "content": "{\n    cancelMembership(id: $id, reason: $reason) {\n      id\n      active\n      renew\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Manage.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "reactivateMembership($id: ID!)", "content": "{\n    reactivateMembership(id: $id) {\n      id\n      active\n      renew\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Manage.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "setMembershipAutoPay($id: ID!, $autoPay: Boolean!)", "content": "{\n    setMembershipAutoPay(id: $id, autoPay: $autoPay) {\n      id\n      autoPay\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Manage.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "cancelMembership($id: ID!, $details: CancellationInput!)", "content": "{\n    cancelMembership(id: $id, details: $details) {\n      id\n      active\n      renew\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Cancel.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateEmail($userId: ID!, $email: String!)", "content": "{\n    updateEmail(userId: $userId, email: $email) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/UserInfo/Email.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "addDocumentToCollection($documentId: ID!, $collectionName: String!)", "content": "{\n    addDocumentToCollection(\n      documentId: $documentId\n      collectionName: $collectionName\n    ) {\n      id\n      document {\n        id\n        ...BookmarkOnDocument\n      }\n    }\n  }\n\n  ${onDocumentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/ActionBar/BookmarkButton.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "removeDocumentFromCollection(\n    $documentId: ID!\n    $collectionName: String!\n  )", "content": "{\n    removeDocumentFromCollection(\n      documentId: $documentId\n      collectionName: $collectionName\n    ) {\n      id\n      document {\n        id\n        ...BookmarkOnDocument\n      }\n    }\n  }\n\n  ${onDocumentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/ActionBar/BookmarkButton.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "markNotificationAsRead($id: ID!)", "content": "{\n    markNotificationAsRead(id: $id) {\n      ...notificationInfo\n    }\n  }\n  ${notificationInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "markAllNotificationsAsRead", "content": "{\n    markAllNotificationsAsRead {\n      ...notificationInfo\n    }\n  }\n  ${notificationInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "subToDoc($documentId: ID!, $filters: [EventObjectType!])", "content": "{\n    subscribe(objectId: $documentId, type: Document, filters: $filters) {\n      ...subInfo\n    }\n  }\n  ${subInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "unSubFromDoc($subscriptionId: ID!, $filters: [EventObjectType!])", "content": "{\n    unsubscribe(subscriptionId: $subscriptionId, filters: $filters) {\n      ...subInfo\n    }\n  }\n  ${subInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "subToUser($userId: ID!, $filters: [EventObjectType!])", "content": "{\n    subscribe(objectId: $userId, type: User, filters: $filters) {\n      ...subInfo\n    }\n  }\n  ${subInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "unSubFromUser($subscriptionId: ID!, $filters: [EventObjectType!])", "content": "{\n    unsubscribe(subscriptionId: $subscriptionId, filters: $filters) {\n      ...subInfo\n    }\n  }\n  ${subInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitAnswer($answerId: ID!, $questionId: ID!, $payload: JSON)", "content": "{\n    submitAnswer(\n      answer: { id: $answerId, questionId: $questionId, payload: $payload }\n    ) {\n      ... on QuestionInterface {\n        id\n        userAnswer {\n          id\n          payload\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "anonymizeUserAnswers($questionnaireId: ID!)", "content": "{\n    anonymizeUserAnswers(questionnaireId: $questionnaireId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "resetQuestionnaire($id: ID!)", "content": "{\n    resetQuestionnaire(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "revokeQuestionnaire($id: ID!)", "content": "{\n    revokeQuestionnaire(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitQuestionnaire($id: ID!)", "content": "{\n    submitQuestionnaire(id: $id) {\n      id\n      userSubmitDate\n      userHasSubmitted\n      userSubmissionId\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateMe($firstName: String, $lastName: String, $portrait: String)", "content": "{\n    updateMe(firstName: $firstName, lastName: $lastName, portrait: $portrait) {\n      id\n      firstName\n      lastName\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Climatelab/Onboarding/ClimateProfile.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "grantAccess($campaignId: ID!, $email: String!, $message: String)", "content": "{\n    grantAccess(campaignId: $campaignId, email: $email, message: $message) {\n      email\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Climatelab/Onboarding/Invitation.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "requestAccess($campaignId: ID!, $payload: JSON)", "content": "{\n    requestAccess(campaignId: $campaignId, payload: $payload) {\n      id\n      endAt\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Trial/Form.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "denySession($email: String!, $token: SignInToken!)", "content": "{\n    denySession(email: $email, token: $token)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/TokenAuthorization.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "authorizeSession(\n    $email: String!\n    $tokens: [SignInToken!]!\n    $consents: [String!]\n    $requiredFields: RequiredUserFields\n  )", "content": "{\n    authorizeSession(\n      email: $email\n      tokens: $tokens\n      consents: $consents\n      requiredFields: $requiredFields\n    )\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/withAuthorizeSession.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "signIn(\n    $email: String!\n    $context: String\n    $consents: [String!]\n    $tokenType: SignInTokenType\n    $accessToken: ID\n  )", "content": "{\n    signIn(\n      email: $email\n      context: $context\n      consents: $consents\n      tokenType: $tokenType\n      accessToken: $accessToken\n    ) {\n      phrase\n      tokenType\n      alternativeFirstFactors\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/SignIn.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "requestNewsletter(\n    $email: String!\n    $name: NewsletterName!\n    $context: String!\n  )", "content": "{\n    requestNewsletterSubscription(email: $email, name: $name, context: $context)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/NewsletterSignUp.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "signOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/SignOut.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateNewsletterSubscriptionWithMac(\n    $name: NewsletterName!\n    $subscribed: Boolean!\n    $email: String!\n    $mac: String!\n    $consents: [String!]\n  )", "content": "{\n    updateNewsletterSubscription(\n      name: $name\n      subscribed: $subscribed\n      email: $email\n      mac: $mac\n      consents: $consents\n    ) {\n      id\n      name\n      subscribed\n      isEligible\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/MacNewsletterSubscription.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "reportUser($userId: ID!, $reason: String!)", "content": "{\n    reportUser(userId: $userId, reason: $reason)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Profile/graphql/useReportUserMutation.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitComment(\n    $discussionId: ID!\n    $parentId: ID\n    $id: ID!\n    $content: String!\n    $tags: [String!]!\n  )", "content": "{\n    submitComment(\n      id: $id\n      discussionId: $discussionId\n      parentId: $parentId\n      content: $content\n      tags: $tags\n    ) {\n      ...Comment\n      discussion {\n        id\n        userPreference {\n          notifications\n        }\n        userWaitUntil\n      }\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/mutations/SubmitCommentMutation.graphql.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "featureCommentMutation(\n    $commentId: ID!\n    $content: String\n    $targets: [CommentFeaturedTarget!]\n  )", "content": "{\n    featureComment(id: $commentId, content: $content, targets: $targets) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/mutations/FeatureCommentMutation.graphql.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "upsertMediaProgress($mediaId: ID!, $secs: Float!)", "content": "{\n    upsertMediaProgress(mediaId: $mediaId, secs: $secs) {\n      id\n      mediaId\n      secs\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Audio/hooks/useUpsertMediaProgress.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "AddPlaylistItem($entity: AudioQueueEntityInput!, $sequence: Int)", "content": "{\n    audioQueueItems: addAudioQueueItem(entity: $entity, sequence: $sequence) {\n      ...AudioQueueItemFragment\n    }\n  }\n  ${AudioQueueItemFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Audio/graphql/AudioQueueHooks.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "MoveAudioQueueItem($id: ID!, $sequence: Int!)", "content": "{\n    audioQueueItems: moveAudioQueueItem(id: $id, sequence: $sequence) {\n      ...AudioQueueItemFragment\n    }\n  }\n  ${AudioQueueItemFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Audio/graphql/AudioQueueHooks.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "RemoveAudioQueueItem($id: ID!)", "content": "{\n    audioQueueItems: removeAudioQueueItem(id: $id) {\n      ...AudioQueueItemFragment\n    }\n  }\n  ${AudioQueueItemFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Audio/graphql/AudioQueueHooks.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "ClearAudioQueue", "content": "{\n    audioQueueItems: clearAudioQueue {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Audio/graphql/AudioQueueHooks.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "ReorderAudioQueue($ids: [ID!]!)", "content": "{\n    audioQueueItems: reorderAudioQueue(ids: $ids) {\n      ...AudioQueueItemFragment\n    }\n  }\n  ${AudioQueueItemFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Audio/graphql/AudioQueueHooks.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "acknowledgeCTA($id: ID!, $response: JSON)", "content": "{\n    acknowledgeCallToAction(id: $id, response: $response) {\n      id\n      acknowledgedAt\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/CallToActions/graphql/useAcknowledgeCTAMutation.ts", "repo": "republik_plattform"}}, {"type": "mutation", "name": "updateRef($input: UpdateRefInput!)", "content": "{\n    updateRef(input: $input) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n  }\n  ${fragments.branch}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "deleteRef($deleteRefInput: DeleteRefInput!)", "content": "{\n    ${deleteRefMutationPart}\n  }", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "closePullRequestAndDeleteBranch($closePullRequestInput: ClosePullRequestInput!)", "content": "{\n    ${closePullRequestMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "closePullRequestAndDeleteBranch(\n    $closePullRequestInput: ClosePullRequestInput!\n    $deleteRefInput: DeleteRefInput!\n  )", "content": "{\n    ${closePullRequestMutationPart}\n    ${deleteRefMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "createPullRequest($createPullRequestInput: CreatePullRequestInput!)", "content": "{\n    ${createPullRequestMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "createBranch($createRefInput: CreateRefInput!)", "content": "{\n    createRef(input: $createRefInput) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n  }\n  ${fragments.branch}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "createBranchAndPullRequest(\n    $createRefInput: CreateRefInput!\n    $createPullRequestInput: CreatePullRequestInput!\n  )", "content": "{\n    createRef(input: $createRefInput) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n    ${createPullRequestMutationPart}\n  }\n  ${fragments.branch}\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "reopenPullRequest($reopenPullRequestInput: ReopenPullRequestInput!)", "content": "{\n    reopenPullRequest(input: $reopenPullRequestInput) {\n      clientMutationId\n      pullRequest {\n        ...PullRequestParts\n      }\n    }\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "PrivateMetafieldUpsert($input: PrivateMetafieldInput!)", "content": "{\n    privateMetafieldUpsert(input: $input) {\n      privateMetafield {\n        id\n        key\n        value\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "server/handlers/mutations/update-product-ratings.js", "repo": "Shopify_product-reviews-sample-app"}}, {"type": "mutation", "name": "MetafieldDelete($input: MetafieldDeleteInput!)", "content": "{\n    metafieldDelete(input: $input) {\n      deletedId\n      userErrors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "graphql/mutations/deleteMetafield.js", "repo": "Shopify_product-reviews-sample-app"}}, {"type": "mutation", "name": "ProductMetafieldCreate($input: ProductInput!)", "content": "{\n    productUpdate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "graphql/mutations/productMetafieldCreate.js", "repo": "Shopify_product-reviews-sample-app"}}, {"type": "mutation", "name": "addRecipe($recipe: RecipeInput!)", "content": "{\n    addRecipe(recipe: $recipe) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-6/src/AddRecipe.js", "repo": "nikgraf_graphql-apollo-client-course"}}, {"type": "mutation", "name": "updateRecipeStarred($id: ID!, $isStarred: Boolean!)", "content": "{\n    updateRecipeStarred(id: $id, isStarred: $isStarred) @client\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-6/src/Recipes.js", "repo": "nikgraf_graphql-apollo-client-course"}}, {"type": "mutation", "name": "addRecipe($recipe: RecipeInput!)", "content": "{\n    addRecipe(recipe: $recipe) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-5/src/AddRecipe.js", "repo": "nikgraf_graphql-apollo-client-course"}}, {"type": "mutation", "name": "updateRecipeStarred($id: ID!, $isStarred: Boolean!)", "content": "{\n    updateRecipeStarred(id: $id, isStarred: $isStarred) @client\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-5/src/Recipes.js", "repo": "nikgraf_graphql-apollo-client-course"}}, {"type": "mutation", "name": "addRecipe($recipe: RecipeInput!)", "content": "{\n    addRecipe(recipe: $recipe) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-4/src/AddRecipe.js", "repo": "nikgraf_graphql-apollo-client-course"}}, {"type": "mutation", "name": "($categoryId: ID!, $communityId: ID!)", "content": "{\n    setCategory(categoryId: $categoryId, communityId: $communityId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CategorySetter/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!, $communityId: ID!)", "content": "{\n    setCommunity(thread: $thread, id: $id, communityId: $communityId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitySetter/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($code: String!)", "content": "{\n    githubSignin(code: $code) {\n      token\n      user {\n        nickname\n        bio\n      }\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Header/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($userId: ID!, $rules: String!)", "content": "{\n    stampCmsPassport(userId: $userId, rules: $rules) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/PermissionEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($id: ID!, $action: String!, $type: String!)", "content": "{\n    reaction(id: $id, action: $action, type: $type) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/ArticleViwer/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($id: ID!, $action: String!, $type: String!)", "content": "{\n    undoReaction(id: $id, action: $action, type: $type) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/ArticleViwer/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($title: String!, $desc: String!, $logo: String!, $raw: String!)", "content": "{\n    createCommunity(title: $title, desc: $desc, logo: $logo, raw: $raw) {\n      id\n      title\n      desc\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunityEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "(\n    $id: ID!\n    $title: String\n    $desc: String\n    $logo: String\n    $raw: String\n  )", "content": "{\n    updateCommunity(\n      id: $id\n      title: $title\n      desc: $desc\n      logo: $logo\n      raw: $raw\n    ) {\n      id\n      title\n      desc\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunityEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($profile: UserProfileInput!)", "content": "{\n    updateProfile(profile: $profile) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/AccountEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "(\n    $title: String!\n    $body: String!\n    $digest: String!\n    $length: Int!\n    $linkAddr: String\n    $communityId: ID!\n  )", "content": "{\n    createPost(\n      title: $title\n      body: $body\n      digest: $digest\n      length: $length\n      linkAddr: $linkAddr\n      communityId: $communityId\n    ) {\n      id\n      title\n      body\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/TypeWriter/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!, $body: String!)", "content": "{\n    createComment(thread: $thread, id: $id, body: $body) {\n      id\n      body\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Comments/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!, $body: String!)", "content": "{\n    replyComment(thread: $thread, id: $id, body: $body) {\n      id\n      body\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Comments/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!)", "content": "{\n    deleteComment(thread: $thread, id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Comments/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!)", "content": "{\n    likeComment(thread: $thread, id: $id) {\n      id\n      viewerHasLiked\n      likesCount\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Comments/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!)", "content": "{\n    undoLikeComment(thread: $thread, id: $id) {\n      id\n      viewerHasLiked\n      likesCount\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Comments/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!)", "content": "{\n    dislikeComment(thread: $thread, id: $id) {\n      id\n      viewerHasDisliked\n      dislikesCount\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Comments/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!)", "content": "{\n    undoDislikeComment(thread: $thread, id: $id) {\n      id\n      viewerHasDisliked\n      dislikesCount\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Comments/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($title: String!, $raw: String!)", "content": "{\n    createThread(title: $title, raw: $raw) {\n      title\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/ThreadEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: String!, $id: ID!, $tagId: ID!, $communityId: ID!)", "content": "{\n    setTag(thread: $thread, id: $id, tagId: $tagId, communityId: $communityId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/TagSetter/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteCommunity(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!, $communityId: ID!)", "content": "{\n    unsetCommunity(thread: $thread, id: $id, communityId: $communityId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($communityId: ID!, $threadId: ID!)", "content": "{\n    unsetThread(communityId: $communityId, threadId: $threadId) {\n      id\n      threads {\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($categoryId: ID!, $communityId: ID!)", "content": "{\n    unsetCategory(categoryId: $categoryId, communityId: $communityId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: String!, $id: ID!, $tagId: ID!, $communityId: ID!)", "content": "{\n    setTag(thread: $thread, id: $id, tagId: $tagId, communityId: $communityId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($thread: String!, $id: ID!, $tagId: ID!, $communityId: ID!)", "content": "{\n    unsetTag(\n      thread: $thread\n      id: $id\n      tagId: $tagId\n      communityId: $communityId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($id: ID!, $communityId: ID!)", "content": "{\n    deleteTag(id: $id, communityId: $communityId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteCategory(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($title: String!, $raw: String!)", "content": "{\n    createCategory(title: $title, raw: $raw) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CategoryEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($id: ID!, $title: String!)", "content": "{\n    updateCategory(id: $id, title: $title) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CategoryEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "(\n    $thread: CmsThread!\n    $title: String!\n    $color: String!\n    $communityId: ID!\n    $topic: String\n  )", "content": "{\n    createTag(\n      thread: $thread\n      title: $title\n      color: $color\n      communityId: $communityId\n      topic: $topic\n    ) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/TagEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "(\n    $id: ID!\n    $color: RainbowColorEnum!\n    $title: String!\n    $communityId: ID!\n  )", "content": "{\n    updateTag(\n      id: $id\n      color: $color\n      title: $title\n      communityId: $communityId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/TagEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "($communityId: ID!, $threadId: ID!)", "content": "{\n    setThread(communityId: $communityId, threadId: $threadId) {\n      id\n      threads {\n        ${F.thread}\n      }\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/ThreadSetter/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "create($title: String!, $description: String, $id: ID!)", "content": "{\n    createIssue(\n      input: { title: $title, body: $description, repositoryId: $id }\n    ) {\n      issue {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "b72da2c6606a361d0160d5d78fb534018ba3ce91", "file": "apps/projects/app/utils/gql-queries.js", "repo": "aragon_aragon-apps"}}, {"type": "mutation", "name": "comment($body: String!, $subjectId: ID!)", "content": "{\n    addComment(\n      input: { body: $body, subjectId: $subjectId }\n    ) {\n      subject {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "b72da2c6606a361d0160d5d78fb534018ba3ce91", "file": "apps/projects/app/utils/gql-queries.js", "repo": "aragon_aragon-apps"}}, {"type": "mutation", "name": "CreateComment($input: CreateCommentInput!)", "content": "{\n      createComment(input: $input) {\n        id\n        content\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthTests.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTodo($input: CreateTodoInput!)", "content": "{\n      createTodo(input: $input) {\n        id\n        groups\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthTests.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n      createPost(input: $input) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthTests.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "($postId: ID!)", "content": "{\n      createCommentConnection(input: { content: \"Comment\", commentConnectionPostId: $postId }) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthModelAuthTransformer.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "($postId: ID!)", "content": "{\n      createCommentConnection(input: { content: \"Comment\", commentConnectionPostId: $postId }) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthV2TransformerWithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTask($input: CreateTaskInput!)", "content": "{\n      createTask(input: $input) {\n        id\n        title\n        description\n        priority\n        severity\n        owner\n        readOwners\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateTask($input: UpdateTaskInput!)", "content": "{\n      updateTask(input: $input) {\n        id\n        title\n        description\n        priority\n        severity\n        owner\n        readOwners\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteTask($input: DeleteTaskInput!)", "content": "{\n      deleteTask(input: $input) {\n        id\n        title\n        description\n        priority\n        severity\n        owner\n        readOwners\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTodo($input: CreateTodoInput!)", "content": "{\n      createTodo(input: $input) {\n        id\n        name\n        description\n        level\n        owner\n        sharedOwners\n        status\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateTodo($input: UpdateTodoInput!)", "content": "{\n      updateTodo(input: $input) {\n        id\n        name\n        description\n        level\n        owner\n        sharedOwners\n        status\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteTodo($input: DeleteTodoInput!)", "content": "{\n      deleteTodo(input: $input) {\n        id\n        name\n        description\n        level\n        owner\n        sharedOwners\n        status\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTaskGroup($input: CreateTaskGroupInput!)", "content": "{\n      createTaskGroup(input: $input) {\n        id\n        title\n        description\n        priority\n        severity\n        groups\n        singleGroup\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateTaskGroup($input: UpdateTaskGroupInput!)", "content": "{\n      updateTaskGroup(input: $input) {\n        id\n        title\n        description\n        priority\n        severity\n        groups\n        singleGroup\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteTaskGroup($input: DeleteTaskGroupInput!)", "content": "{\n      deleteTaskGroup(input: $input) {\n        id\n        title\n        description\n        priority\n        severity\n        groups\n        singleGroup\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateMember($input: CreateMemberInput!)", "content": "{\n      createMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateMember($input: UpdateMemberInput!)", "content": "{\n      updateMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteMember($input: DeleteMemberInput!)", "content": "{\n      deleteMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateStudent($input: CreateStudentInput!)", "content": "{\n      createStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateStudent($input: UpdateStudentInput!)", "content": "{\n      updateStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteStudent($input: DeleteStudentInput!)", "content": "{\n      deleteStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n      createPost(input: $input) {\n        id\n        title\n        postOwner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTodo($input: CreateTodoInput!)", "content": "{\n      createTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateTodo($input: UpdateTodoInput!)", "content": "{\n      updateTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteTodo($input: DeleteTodoInput!)", "content": "{\n      deleteTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateNote1($input: CreateNote1Input!)", "content": "{\n        createNote1(input: $input) {\n            noteId\n            noteType\n            owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/IndexWithClaimFieldAsSortKeyAuth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateNote2($input: CreateNote2Input!)", "content": "{\n        createNote2(input: $input) {\n            noteId\n            noteType\n            owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/IndexWithClaimFieldAsSortKeyAuth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateNote3($input: CreateNote3Input!)", "content": "{\n        createNote3(input: $input) {\n            noteId\n            noteType\n            group\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/IndexWithClaimFieldAsSortKeyAuth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateMember($input: CreateMemberInput!)", "content": "{\n      createMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateMember($input: UpdateMemberInput!)", "content": "{\n      updateMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteMember($input: DeleteMemberInput!)", "content": "{\n      deleteMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateStudent($input: CreateStudentInput!)", "content": "{\n      createStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateStudent($input: UpdateStudentInput!)", "content": "{\n      updateStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteStudent($input: DeleteStudentInput!)", "content": "{\n      deleteStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n      createPost(input: $input) {\n        id\n        title\n        postOwner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTodo($input: CreateTodoInput!)", "content": "{\n      createTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateTodo($input: UpdateTodoInput!)", "content": "{\n      updateTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteTodo($input: DeleteTodoInput!)", "content": "{\n      deleteTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateMember($input: CreateMemberInput!)", "content": "{\n      createMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateMember($input: UpdateMemberInput!)", "content": "{\n      updateMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteMember($input: DeleteMemberInput!)", "content": "{\n      deleteMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateStudent($input: CreateStudentInput!)", "content": "{\n      createStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateStudent($input: UpdateStudentInput!)", "content": "{\n      updateStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteStudent($input: DeleteStudentInput!)", "content": "{\n      deleteStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n      createPost(input: $input) {\n        id\n        title\n        postOwner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTodo($input: CreateTodoInput!)", "content": "{\n      createTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTask($input: CreateTaskInput!)", "content": "{\n      createTask(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateNote($input: CreateNoteInput!)", "content": "{\n      createNote(input: $input) {\n        id\n        content\n        secretNote\n        taskNotesId\n        task {\n          description\n        }\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateTodo($input: UpdateTodoInput!)", "content": "{\n      updateTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteTodo($input: DeleteTodoInput!)", "content": "{\n      deleteTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "($postId: ID!)", "content": "{\n      createCommentConnection(input: { content: \"Comment\", commentConnectionPostId: $postId }) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthV2Transformer.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateComment($input: CreateCommentInput!)", "content": "{\n      createComment(input: $input) {\n        id\n        content\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTodo($input: CreateTodoInput!)", "content": "{\n      createTodo(input: $input) {\n        id\n        groups\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n      createPost(input: $input) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateBlog($input: CreateBlogInput!)", "content": "{\n      createBlog(input: $input) {\n        id\n        title\n        ups\n        downs\n        percentageUp\n        isPublished\n        createdAt\n        updatedAt\n        owner\n        groupsField\n        secret\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateComment($input: CreateCommentInput!)", "content": "{\n      createComment(input: $input) {\n        id\n        content\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTodo($input: CreateTodoInput!)", "content": "{\n      createTodo(input: $input) {\n        id\n        groups\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n      createPost(input: $input) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateBlog($input: CreateBlogInput!)", "content": "{\n      createBlog(input: $input) {\n        id\n        title\n        ups\n        downs\n        percentageUp\n        isPublished\n        createdAt\n        updatedAt\n        owner\n        groupsField\n        secret\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "($postId: ID!)", "content": "{\n      createCommentConnection(input: { content: \"Comment\", commentConnectionPostId: $postId }) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/amplify-util-mock/src/__e2e__/multi-auth-model-auth-transformer.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      email\n      role\n      error\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n    register(email: $email, password: $password) {\n      token\n      email\n      role\n      error\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($day: String!)", "content": "{\n    checkOrCreateSheet(day: $day) {\n      id\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($date: Date!)", "content": "{\n    addDay(date: $date) {\n      date\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "(\n    $id: ID!\n    $gratefulFor: String\n    $affirmation: String\n    $callSos: String\n    $research: String\n    $reading: ReadingInputType\n    $accountability: AccountabilityInputType\n    $awake: String\n    $asleep: String\n  )", "content": "{\n    updateSheet(\n      id: $id\n      gratefulFor: $gratefulFor\n      affirmation: $affirmation\n      callSos: $callSos\n      research: $research\n      reading: $reading\n      accountability: $accountability\n      awake: $awake\n      asleep: $asleep\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    updateSheet(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "(\n    $id: ID\n    $sheetId: ID!\n    $type: String\n    $title: String\n    $actions: [TodoActionInputType]!\n  )", "content": "{\n    createTodoItem(\n      id: $id\n      sheetId: $sheetId\n      type: $type\n      title: $title\n      actions: $actions\n    ) {\n      _id\n      sheetId\n      items {\n        _id\n        title\n        completed\n      }\n      type\n      startTime\n      endTime\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!, $title: String!, $actions: [TodoActionInputType]!)", "content": "{\n    updateTodoItem(id: $id, title: $title, actions: $actions) {\n      _id\n      title\n      completed\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    toggleTodoItemCompleted(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteTodoItem(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!, $startTime: String, $endTime: String)", "content": "{\n    updateTodoOptions(id: $id, startTime: $startTime, endTime: $endTime) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($type: String!, $description: String!, $amount: Float!)", "content": "{\n    createExpense(type: $type, description: $description, amount: $amount) {\n      _id\n      type\n      amount\n      description\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!, $description: String, $amount: Float)", "content": "{\n    updateExpense(id: $id, description: $description, amount: $amount) {\n      _id\n      type\n      amount\n      description\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteExpense(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "(\n    $id: ID\n    $type: String\n    $title: String\n    $actions: [ThoughtActionInputType]!\n  )", "content": "{\n    createThoughtItem(id: $id, type: $type, title: $title, actions: $actions) {\n      _id\n      items {\n        _id\n        title\n        completed\n      }\n      type\n      startTime\n      endTime\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!, $title: String!, $actions: [ThoughtActionInputType]!)", "content": "{\n    updateThoughtItem(id: $id, title: $title, actions: $actions) {\n      _id\n      title\n      completed\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    toggleThoughtItemCompleted(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteThoughtItem(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!, $startTime: String, $endTime: String)", "content": "{\n    updateThoughtOptions(id: $id, startTime: $startTime, endTime: $endTime) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    getAllThoughts(id: $id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "(\n    $foodCategory: String!\n    $description: String!\n    $type: String!\n    $day: String!\n    $foodNutrients: [FoodActionInputType]!\n  )", "content": "{\n    createFood(\n      foodCategory: $foodCategory\n      description: $description\n      type: $type\n      day: $day\n      foodNutrients: $foodNutrients\n    ) {\n      foodCategory\n      description\n      type\n      day\n      foodNutrients {\n        nutrientName\n        unitName\n        value\n      }\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteFood(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    updateFood(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "removeName($_id: String!)", "content": "{\n        delete_names(where: {_id: {_eq: $_id}}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "07231cecbda91b36f6d8088c9dd2e7f2fa54f365", "file": "graphdemo/src/constants/graphql.js", "repo": "malgamves_firebase2graphql-demo"}}, {"type": "mutation", "name": "submitName($name: String!, $_id: String!)", "content": "{\n        insert_names(objects: [{name: $name, _id: $_id}]) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "07231cecbda91b36f6d8088c9dd2e7f2fa54f365", "file": "graphdemo/src/constants/graphql.js", "repo": "malgamves_firebase2graphql-demo"}}, {"type": "mutation", "name": "setEditName($edit: Boolean!, $_id: String!)", "content": "{\n  update_names(where: {_id: {_eq: $_id }}, \n  _set: {\n    edit: true\n  }) \n  {\n    affected_rows\n  }\n\n    }", "metadata": {"commit_hash": "07231cecbda91b36f6d8088c9dd2e7f2fa54f365", "file": "graphdemo/src/constants/graphql.js", "repo": "malgamves_firebase2graphql-demo"}}, {"type": "mutation", "name": "cancelName($edit: Boolean!, $_id: String!)", "content": "{\n  update_names(where: {_id: {_eq: $_id }}, \n  _set: {\n    edit: false\n  }) \n  {\n    affected_rows\n  }\n\n    }", "metadata": {"commit_hash": "07231cecbda91b36f6d8088c9dd2e7f2fa54f365", "file": "graphdemo/src/constants/graphql.js", "repo": "malgamves_firebase2graphql-demo"}}, {"type": "mutation", "name": "saveName($edit: Boolean!, $_id: String!, $name: String!)", "content": "{\n  update_names(where: {_id: {_eq: $_id }}, \n  _set: {\n    edit: false,\n    name: $name,\n  }) \n  {\n    affected_rows\n  }\n\n    }", "metadata": {"commit_hash": "07231cecbda91b36f6d8088c9dd2e7f2fa54f365", "file": "graphdemo/src/constants/graphql.js", "repo": "malgamves_firebase2graphql-demo"}}, {"type": "mutation", "name": "UploadToken($id:String!,$pushToken:String!)", "content": "{\n  uploadToken(id:$id,pushToken:$pushToken){\n    _id\n    pushToken\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/app.js", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "SendNotificationUser($notificationTitle:String, $notificationBody: String!)", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Notifications.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "UPDATE_DELIVERY_BOUNDS_AND_LOCATION($id:ID!,$bounds:[[[Float!]]],$location:CoordinatesInput!)", "content": "{\n  result :updateDeliveryBoundsAndLocation(id:$id,location:$location,bounds:$bounds){\n    success\n    message\n    data{\n      _id\n      deliveryBounds{\n        coordinates\n      }\n      location{\n        coordinates\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/DeliveryBoundsAndLocation.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "UpdateStatus($id:String!,$orderStatus:String!)", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/DispatchRestaurant.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "DeleteVendor($id:String!)", "content": "{\n  deleteVendor(id:$id)\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Vendors.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "UpdateStatus($id:String!,$orderStatus:String!)", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Dispatch.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "AssignRider($id:String!,$riderId:String!)", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Dispatch.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n        _id\n        title\n        discount\n        enabled\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "DeleteCoupon($id:String!)", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "EditRestaurant($restaurantInput:RestaurantProfileInput!)", "content": "{\n    editRestaurant(restaurant:$restaurantInput){\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      slug\n      address\n      username\n      password\n      location{coordinates}\n      isAvailable\n      minimumOrder\n      tax\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/VendorProfile.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "UpdateTimings($id:String!,$openingTimes:[TimingsInput])", "content": "{\n  updateTimings(id:$id,\n    openingTimes:$openingTimes){\n    _id\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Timings.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "DeltetRestaurant($id:String!)", "content": "{\n  deleteRestaurant(id:$id){\n    _id\n    isActive\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/RestaurantList.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$token:String!)", "content": "{\n  resetPassword(password:$password,token:$token){\n    result\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/ForgotPassword.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "DeleteFood($id:String!,$restaurant:String!,$categoryId:String!)", "content": "{\n        deleteFood(id:$id,restaurant:$restaurant,categoryId:$categoryId){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Food.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "DeleteZone($id:String!)", "content": "{\n  deleteZone(id:$id){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Zone.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "ownerLogin($email:String!,$password:String!)", "content": "{\n  ownerLogin(email:$email,password:$password){\n    userId\n    token\n    email\n    userType\n    restaurants{\n      _id\n      orderId\n      name\n      image\n      address\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Login.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "UpdateWithdrawRequest($id:ID!, $status:String!)", "content": "{\n  updateWithdrawReqStatus(id:$id,status:$status){\n    success\n    message\n    data{\n      rider{\n        _id\n        currentWalletAmount\n      }\n      withdrawRequest{\n        _id\n        status\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "DeleteOption($id:String!,$restaurant:String!)", "content": "{\n        deleteOption(id:$id,restaurant:$restaurant){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Options.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "DeleteAddon($id:String!,$restaurant:String!)", "content": "{\n        deleteAddon(id:$id,restaurant:$restaurant){\n          _id\n          addons{\n            _id\n            options\n            title\n            description\n            quantityMinimum\n            quantityMaximum\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Addons.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "editSection($section:SectionInput!)", "content": "{\n  editSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Sections.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "UpdateCommission($id:String!,$commissionRate:Float!)", "content": "{\n  updateCommission(id:$id,commissionRate:$commissionRate){\n    _id\n    commissionRate\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Commission.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "DeleteCategory($id:String!,$restaurant:String!)", "content": "{\n        deleteCategory(id:$id,restaurant:$restaurant){\n                _id\n                categories{\n                  _id\n                  title\n                  foods{\n                    _id\n                    title\n                    description\n                    variations{\n                      _id\n                      title\n                      price\n                      discounted\n                      addons\n                    }\n                    image\n                    isActive\n                    createdAt\n                    updatedAt\n                  }\n                  createdAt\n                  updatedAt\n                }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Category.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "editTipping($tippingInput:TippingInput!)", "content": "{\n  editTipping(tippingInput:$tippingInput){\n            _id\n            tipVariations\n            enabled\n              }\n            }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Tipping/Tipping.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateTipping($tippingInput:TippingInput!)", "content": "{\n        createTipping(tippingInput:$tippingInput){\n          _id\n          tipVariations\n          enabled\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Tipping/Tipping.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n      zone{\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateZone($zone:ZoneInput!)", "content": "{\n  createZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Zone/Zone.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "EditZone($zone:ZoneInput!)", "content": "{\n  editZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Zone/Zone.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n      zone{\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateCategory($category:CategoryInput)", "content": "{\n  createCategory(category:$category){\n    _id\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n        image\n        isActive\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "EditCategory($category:CategoryInput)", "content": "{\n        editCategory(category:$category){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateVendor($vendorInput:VendorInput)", "content": "{\n    createVendor(vendorInput:$vendorInput){\n      _id\n      email\n      userType\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Vendor/Vendor.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "EditVendor($vendorInput:VendorInput)", "content": "{\n  editVendor(vendorInput:$vendorInput){\n    _id\n    email\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Vendor/Vendor.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateAddons($addonInput:AddonInput)", "content": "{\n  createAddons(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "editAddon($addonInput:editAddonInput)", "content": "{\n  editAddon(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateOptions($optionInput:CreateOptionInput)", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    options{\n      _id\n      title\n      description\n      price\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "editOption($optionInput:editOptionInput)", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateSection($section:SectionInput!)", "content": "{\n  createSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Section/Section.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "editSection($section:SectionInput!)", "content": "{\n  editSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Section/Section.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateCoupon($couponInput:CouponInput!)", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    title\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n        _id\n        title\n        discount\n        enabled\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "VendorResetPassword($oldPassword: String!, $newPassword: String!)", "content": "{\n    vendorResetPassword(oldPassword: $oldPassword, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/ResetPassword/ResetPassword.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateRestaurant($restaurant:RestaurantInput!,$owner:ID!)", "content": "{\n  createRestaurant(restaurant:$restaurant,owner:$owner){\n    _id\n    orderId\n    orderPrefix\n    name\n    slug\n    image\n    address\n    username\n    password\n    minimumOrder\n    tax\n    location{coordinates}\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Restaurant/CreateRestaurant.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "SaveDeliveryRateConfiguration($deliveryRate: Float!)", "content": "{\n  saveDeliveryRateConfiguration(deliveryRate:$deliveryRate){\n    _id\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Configuration/DeliveryRate/DeliveryRate.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "SaveStripeConfiguration($configurationInput:StripeConfigurationInput!)", "content": "{\n  saveStripeConfiguration(configurationInput:$configurationInput){\n    _id\n    publishableKey\n    secretKey\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Configuration/Stripe/Stripe.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "SavePaypalConfiguration($configurationInput:PaypalConfigurationInput!)", "content": "{\n  savePaypalConfiguration(configurationInput:$configurationInput){\n    _id\n    clientId\n    clientSecret\n    sandbox\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Configuration/Paypal/Paypal.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    emailName\n    password\n    enableEmail\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "SaveCurrencyConfiguration($configurationInput:CurrencyConfigurationInput!)", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Configuration/Currency/Currency.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateFood($foodInput:FoodInput!)", "content": "{\n      createFood(\n          foodInput:$foodInput\n      ){\n        _id\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n        createdAt\n        updatedAt\n      }\n      }\n    }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "EditFood($foodInput:FoodInput!)", "content": "{\n        editFood(\n            foodInput:$foodInput\n        ){\n            _id\n            categories{\n              _id\n              title\n              foods{\n                _id\n                title\n                description\n                variations{\n                  _id\n                  title\n                  price\n                  discounted\n                  addons\n                }\n                image\n                isActive\n              }\n              createdAt\n              updatedAt\n            }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "purchase($id: ID!)", "content": "{\n    purchase(offerId: $id) {\n      success\n      customer {\n        name\n        balance\n      }\n    }\n  }", "metadata": {"commit_hash": "83795300179546e20d1685738fff6939d615c1c6", "file": "js/schemas/purchaseSchema.js", "repo": "eshinkawa_nubank"}}, {"type": "mutation", "name": "addTemplate($name: String!)", "content": "{\n    addNewTemplate(name: $name)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Admin.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "DeleteTemplate($name: String!)", "content": "{\n    deleteTemplate(name: $name)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Admin.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "EnableTemplate($name: String!)", "content": "{\n    enableTemplate(name: $name)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Admin.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "SubmitVote($target: Int!)", "content": "{\n    submitVote(target: $target)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Player.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "UpdatePlayerName($id: Int!, $name: String!)", "content": "{\n    updatePlayerName(id: $id, name: $name)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Player.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "submitChiefCandidate", "content": "{\n    setIsChiefCandidate\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Player.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "setIsVoter", "content": "{\n    setIsVoter\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Player.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "dropOutChiefCandidate", "content": "{\n    setIsChiefDropOut\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Player.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "UpdatePlayerPass($id: Int!, $pass: String!)", "content": "{\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      id\n    }\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Login.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "UpdateTempl($roleId: Int!, $number: Int!, $name: String!)", "content": "{\n    updateTemplateRole(name: $name, number: $number, roleId: $roleId)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/EditTemplateRole.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "UpdateRule($name: String!, $description: String!)", "content": "{\n    updateTemplateDescription(name: $name, description: $description)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/EditTemplateRole.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "UpdateRolePriority($name: String!, $ids: [Int]!)", "content": "{\n    updateTemplateRolePriority(name: $name, ids: $ids)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/EditTemplateRole.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "Logoff", "content": "{\n    logoff\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/App.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "UpdatePlayerPass($id: Int!, $pass: String!)", "content": "{\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      name\n    }\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/App.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "ResetEvent", "content": "{\n    resetEvent\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "UpdatePlayerName($id: Int!, $name: String!)", "content": "{\n    updatePlayerName(id: $id, name: $name)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "GenerateTemplateRole($isCovertWolfToHuman: Boolean!)", "content": "{\n    generateTemplateRole(isCovertWolfToHuman: $isCovertWolfToHuman)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "GenerateTemplatePlayer", "content": "{\n    generateTemplatePlayer\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "RemoveAllPlayer", "content": "{\n    removeAllPlayer\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "VoteStart($targets: [Int])", "content": "{\n    voteStart(targets: $targets)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "VoteChiefStart", "content": "{\n    voteChiefStart\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "SetGameEnded", "content": "{\n    setGameEnded\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "SetDieStatus($id: Int!)", "content": "{\n    setDieStatus(id: $id)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/PlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "SetChiefId($id: Int!)", "content": "{\n    setChiefId(id: $id)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/PlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "SetVoteWeightedId($id: Int!)", "content": "{\n    setVoteWeightedId(id: $id)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/PlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "ResetChiefCandidate($id: Int!)", "content": "{\n    resetChiefCaniddate(id: $id)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/PlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "UpdatePass($id: Int!, $pass: String!)", "content": "{\n    updatePass(id: $id, pass: $pass)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/PlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "SetDarkDieStatus($targets: [Int]!)", "content": "{\n    setDarkDieStatus(targets: $targets)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/DarkPlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "SetDieStatus($id: Int!)", "content": "{\n    setDieStatus(id: $id)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/DarkPlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "SetChiefId($id: Int!)", "content": "{\n    setChiefId(id: $id)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/DarkPlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "SetVoteWeightedId($id: Int!)", "content": "{\n  setVoteWeightedId(id: $id)\n}", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/DarkPlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "createEvent($event: EventInput)", "content": "{\n        createEvent(eventInput: $event) {\n            _id\n            price\n            title\n        }\n    }", "metadata": {"commit_hash": "111a5a0fa557f4231951199e1a6f89c76f1c2c5a", "file": "src/gql/createEvent.js", "repo": "stack-guru_fullstack-graphql"}}, {"type": "mutation", "name": "deleteEvent($eventId: ID!)", "content": "{\n        deleteEvent(eventId: $eventId) {\n            title\n        }\n    }", "metadata": {"commit_hash": "111a5a0fa557f4231951199e1a6f89c76f1c2c5a", "file": "src/gql/deleteEvent.js", "repo": "stack-guru_fullstack-graphql"}}, {"type": "mutation", "name": "cancelBooking($bookingId: ID!)", "content": "{\n        cancelBooking(bookingId: $bookingId) {\n            title\n        }\n    }", "metadata": {"commit_hash": "111a5a0fa557f4231951199e1a6f89c76f1c2c5a", "file": "src/gql/cancelBooking.js", "repo": "stack-guru_fullstack-graphql"}}, {"type": "mutation", "name": "bookEvent($eventId: ID!)", "content": "{\n        bookEvent(eventId: $eventId) {\n            _id\n            createdAt\n            updatedAt\n        }\n    }", "metadata": {"commit_hash": "111a5a0fa557f4231951199e1a6f89c76f1c2c5a", "file": "src/gql/bookEvent.js", "repo": "stack-guru_fullstack-graphql"}}, {"type": "mutation", "name": "createUser($user: UserInput)", "content": "{\n        createUser(userInput: $user) {\n            userId\n            token\n            tokenExpiration\n            name\n        }\n    }", "metadata": {"commit_hash": "111a5a0fa557f4231951199e1a6f89c76f1c2c5a", "file": "src/gql/createUser.js", "repo": "stack-guru_fullstack-graphql"}}, {"type": "mutation", "name": "updateCategoryStatus($id: Int, $isActive: Boolean)", "content": "{\n                updateCategoryStatus(id: $id, isActive: $isActive) {\n                  status\n                  errorMessage\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateCategoryStatus.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "addCategory(\n          $categoryName: String,\n          $capacity: Int,\n          $isActive: Boolean,\n          $categoryImage: String,\n          $categoryMarkerImage: String\n        )", "content": "{\n        addCategory(\n          categoryName: $categoryName,\n          capacity: $capacity,\n          isActive: $isActive,\n          categoryImage: $categoryImage,\n          categoryMarkerImage: $categoryMarkerImage\n        ){\n          status\n          errorMessage\n        }\n      }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/addCategory.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateVehicle($id: Int, $vehicleName: String, $vehicleType: Int, $vehicleNumber: String, $vehicleStatus: String)", "content": "{\n                updateVehicle(\n                id: $id\n                vehicleName: $vehicleName,\n                vehicleType: $vehicleType\n                vehicleNumber: $vehicleNumber,\n                vehicleStatus: $vehicleStatus\n                ){\n                status\n                }\n            }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/editVehicle.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateSiteSettings(\n                $siteName: String,\n                $siteTitle: String,\n                $metaDescription: String, \n                $facebookLink: String,\n                $twitterLink: String,\n                $instagramLink: String,\n                $logoHeight: Int,\n                $logoWidth: Int,\n                $metaKeyword: String,\n                $homeLogo: String,\n                $youtubeLink: String,\n                $appForceUpdate: String\n                $riderAndroidVersion: String\n                $riderIosVersion: String\n                $driverAndroidVersion: String\n                $driverIosVersion: String\n                )", "content": "{\n                    updateSiteSettings(\n                    siteName: $siteName\n                    siteTitle: $siteTitle\n                    metaDescription: $metaDescription\n                    facebookLink: $facebookLink\n                    twitterLink: $twitterLink\n                    instagramLink: $instagramLink\n                    logoHeight: $logoHeight\n                    logoWidth: $logoWidth\n                    metaKeyword: $metaKeyword\n                    homeLogo: $homeLogo\n                    youtubeLink: $youtubeLink\n                    appForceUpdate: $appForceUpdate\n                    riderAndroidVersion: $riderAndroidVersion\n                    riderIosVersion: $riderIosVersion\n                    driverAndroidVersion: $driverAndroidVersion\n                    driverIosVersion: $driverIosVersion\n                    ){\n                    status\n                    }\n                }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateSiteSettings.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateHomePageSafety (\n                $safetyGridImage1: String\n                $safetyGridImage2: String\n                $safetyGridImage3: String\n                $safetyGridTitle1: String\n                $safetyGridContent1: String\n                $safetyGridLink1: String\n                $safetyGridLink2: String\n              )", "content": "{\n                updateHomePageSafety (\n                  safetyGridImage1: $safetyGridImage1\n                  safetyGridImage2: $safetyGridImage2\n                  safetyGridImage3: $safetyGridImage3\n                  safetyGridTitle1: $safetyGridTitle1\n                  safetyGridContent1: $safetyGridContent1\n                  safetyGridLink1: $safetyGridLink1\n                  safetyGridLink2: $safetyGridLink2\n                ) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateHomepageSettingsSafety.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateCategory(\n        $id: Int, \n        $categoryName: String,\n        $capacity: Int,\n        $isActive: Boolean,\n        $categoryImage: String,\n        $categoryMarkerImage: String\n      )", "content": "{\n        updateCategory(\n          id: $id,\n          categoryName: $categoryName,\n          capacity: $capacity,\n          isActive: $isActive,\n          categoryImage: $categoryImage,\n          categoryMarkerImage: $categoryMarkerImage\n        ){\n          status\n          errorMessage\n        }\n      }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/editCategory.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "deleteContentPage ($id: Int!)", "content": "{\n                    deleteContentPage (id: $id) {\n                        status\n                    }\n                }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/ContentPageAction.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateContentPageStatus ($id: Int, $isEnable: Boolean)", "content": "{\n                updateContentPageStatus(id: $id, isEnable: $isEnable){\n                    status\n                }\n            }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/ContentPageAction.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateHomePageCity (\n                $citySectionTitle1: String\n                $citySectionContent1: String\n              )", "content": "{\n                updateHomePageCity (\n                  citySectionTitle1: $citySectionTitle1\n                  citySectionContent1: $citySectionContent1\n                ) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateHomepageSettingsCity.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "uploadProfileImage($userId:ID,$picture:String)", "content": "{\n                uploadProfileImage(userId:$userId, picture:$picture) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/uploadProfileImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateStaticPage(\n  $id: Int,\n  $content: String,\n  $metaTitle: String,\n  $metaDescription: String,\n  $pageBanner: String,\n)", "content": "{\n  updateStaticPage(\n    id: $id,\n    content: $content,\n    metaTitle: $metaTitle,\n    metaDescription: $metaDescription,\n    pageBanner: $pageBanner,\n  ) {\n      status\n  }\n}", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateStaticPage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "addLocation(\n  \t\t\t\t    $LocationName: String!,\n              $coordinates: String!,\n              $description: String!\n            )", "content": "{\n            addLocation(\n              LocationName: $LocationName\n              coordinates: $coordinates\n              description: $description\n            ){\n              status\n              errorMessage\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/addLocation.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "uploadInsuranceImage($id: Int, $vehicleInsurance: String)", "content": "{\n                uploadInsuranceImage(id:$id, vehicleInsurance:$vehicleInsurance) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/uploadInsuranceImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateHomePageFooter (\n                $footerLogo1: String\n                $footerLogo2: String\n                $footerLogo3: String\n                $footerLogo4: String\n                $footerTitle1: String\n                $footerContent1: String\n                $footerLink1: String\n                $footerLink2: String\n                $footerLink3: String\n                $footerLink4: String\n                $footerLinkName1: String\n                $footerLinkName2: String\n                $footerLinkName3: String\n                $footerLinkName4: String\n                $footerLinkTitle: String\n                $footerBottom: String\n              )", "content": "{\n                updateHomePageFooter (\n                  footerLogo1: $footerLogo1\n                  footerLogo2: $footerLogo2\n                  footerLogo3: $footerLogo3\n                  footerLogo4: $footerLogo4\n                  footerTitle1: $footerTitle1\n                  footerContent1: $footerContent1\n                  footerLink1: $footerLink1\n                  footerLink2: $footerLink2\n                  footerLink3: $footerLink3\n                  footerLink4: $footerLink4\n                  footerLinkName1: $footerLinkName1\n                  footerLinkName2: $footerLinkName2\n                  footerLinkName3: $footerLinkName3\n                  footerLinkName4: $footerLinkName4\n                  footerLinkTitle: $footerLinkTitle\n                  footerBottom: $footerBottom\n                ) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateHomepageSettingsFooter.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateRider(\n            $id: ID,\n            $firstName: String,\n            $lastName: String,\n            $email: String,\n            $password: String,\n            $phoneDialCode: String\n            $phoneNumber: String,\n              $userStatus: String,\n              $isBan: Int\n              $phoneCountryCode: String\n            )", "content": "{\n            updateRider(\n              id: $id\n              firstName: $firstName\n              lastName: $lastName\n              email:$email\n              password: $password\n              phoneDialCode: $phoneDialCode\n              phoneNumber: $phoneNumber\n              userStatus: $userStatus\n              isBan: $isBan\n              phoneCountryCode: $phoneCountryCode\n            )\n            {\n              status\n              errorMessage\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/editRider.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "uploadRcbookImage($id: Int, $vehicleRC: String)", "content": "{\n                uploadRcbookImage(id:$id, vehicleRC:$vehicleRC) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/uploadRcbookImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateLocation(\n  \t\t\t\t    $LocationName: String!,\n              $coordinates: String!,\n              $id: Int!,\n              $description: String!,\n              $isActive: Boolean!\n            )", "content": "{\n              updateLocation(\n              LocationName: $LocationName\n              coordinates: $coordinates,\n              id: $id,\n              description: $description,\n              isActive: $isActive\n            ){\n              status\n              errorMessage\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateLocation.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateCategoryImage($id: Int, \n             $fileName: String\n             )", "content": "{\n            updateCategoryImage(\n              id: $id\n              fileName: $fileName\n            ){\n              status\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateCategoryImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "deleteCategory($id: Int)", "content": "{\n                deleteCategory(id: $id) {\n                  status\n                  errorMessage\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/deleteCategory.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "uploadLicenceFrontImage($userId:ID,$licenceFront:String)", "content": "{\n                uploadLicenceFrontImage(userId:$userId, licenceFront:$licenceFront) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/uploadLicenceFrontImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "uploadLicenceBackImage($userId:ID,$licenceBack:String)", "content": "{\n                uploadLicenceBackImage(userId:$userId, licenceBack:$licenceBack) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/uploadLicenceBackImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateCategoryMarker($id: Int, \n             $fileName: String\n             )", "content": "{\n            updateCategoryMarker(\n              id: $id\n              fileName: $fileName\n            ){\n              status\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateCategoryMarker.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "deleteUser($profileId: Int)", "content": "{\n                deleteUser(profileId: $profileId) {\n                  status\n                  errorMessage\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/deleteUser.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateHomePageAbout (\n                $aboutGridImage1: String\n                $aboutGridImage2: String\n                $aboutGridTitle1: String\n                $aboutGridTitle2: String\n                $aboutGridTitle3: String\n                $aboutGridTitle4: String\n                $aboutGridTitle5: String\n                $aboutGridTitle6: String\n                $aboutGridContent1: String\n                $aboutGridContent2: String\n                $aboutGridContent3: String\n                $aboutGridContent4: String\n                $aboutGridContent5: String\n                $aboutGridContent6: String\n              )", "content": "{\n                updateHomePageAbout (\n                  aboutGridImage1: $aboutGridImage1\n                  aboutGridImage2: $aboutGridImage2\n                  aboutGridTitle1: $aboutGridTitle1\n                  aboutGridTitle2: $aboutGridTitle2\n                  aboutGridTitle3: $aboutGridTitle3\n                  aboutGridTitle4: $aboutGridTitle4\n                  aboutGridTitle5: $aboutGridTitle5\n                  aboutGridTitle6: $aboutGridTitle6\n                  aboutGridContent1: $aboutGridContent1\n                  aboutGridContent2: $aboutGridContent2\n                  aboutGridContent3: $aboutGridContent3\n                  aboutGridContent4: $aboutGridContent4\n                  aboutGridContent5: $aboutGridContent5\n                  aboutGridContent6: $aboutGridContent6\n                  \n                ) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateHomepageSettingsAbout.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateHomePageHome (\n                $homeSectionImage1: String\n                $homeSectionImage2: String\n                $homeSectionImage3: String\n                $homeSectionImage4: String\n                $homeSectionImage5: String\n                $homeSectionImage6: String\n                $homeSectionImage7: String\n                $homeSectionImage8: String\n                $homeSectionButton1: String\n                $homeSectionTitle1: String\n              )", "content": "{\n                updateHomePageHome (\n                  homeSectionImage1: $homeSectionImage1\n                  homeSectionImage2: $homeSectionImage2\n                  homeSectionImage3: $homeSectionImage3\n                  homeSectionImage4: $homeSectionImage4\n                  homeSectionImage5: $homeSectionImage5\n                  homeSectionImage6: $homeSectionImage6\n                  homeSectionImage7: $homeSectionImage7\n                  homeSectionImage8: $homeSectionImage8\n                  homeSectionButton1: $homeSectionButton1\n                  homeSectionTitle1: $homeSectionTitle1\n                ) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateHomepageSettingsHome.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "($id: Int)", "content": "{\n                removeCancelReason(id: $id) {\n                    status\n                }\n            }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/removeCancelReason.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateHomePageSignup (\n                $signupGridImage1: String\n                $signupGridImage2: String\n                $signupGridImage3: String\n                $signupGridTitle1: String\n                $signupGridContent1: String\n                $signupGridLink1: String\n                $signupGridLink2: String\n              )", "content": "{\n                updateHomePageSignup (\n                  signupGridImage1: $signupGridImage1\n                  signupGridImage2: $signupGridImage2\n                  signupGridImage3: $signupGridImage3\n                  signupGridTitle1: $signupGridTitle1\n                  signupGridContent1: $signupGridContent1\n                  signupGridLink1: $signupGridLink1\n                  signupGridLink2: $signupGridLink2\n                ) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateHomepageSettingsSignup.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateDriver(\n            $id: ID,\n            $firstName: String,\n            $lastName: String,\n            $email: String,\n            $password: String,\n            $phoneDialCode: String\n            $phoneNumber: String,\n            $userStatus: String,\n            $isBan: Int,\n            $phoneCountryCode: String\n           \n            )", "content": "{\n            updateDriver(\n              id: $id\n              firstName: $firstName\n              lastName: $lastName\n              email:$email\n              password: $password\n              phoneDialCode: $phoneDialCode\n              phoneNumber: $phoneNumber\n              userStatus: $userStatus\n              isBan: $isBan\n              phoneCountryCode: $phoneCountryCode\n            )\n            {\n              status\n              errorMessage\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/editDriver.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateCashPayout ($id: Int, $payoutStatus: Boolean)", "content": "{\n          updateCashPayout(id: $id, payoutStatus: $payoutStatus){\n              status\n            }\n        }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Payout/updateCashPayout.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updatePayout ($id: Int!, $isBanStatus: Boolean!)", "content": "{\n          updatePayout(id: $id, isBanStatus: $isBanStatus){\n              status\n              errorMessage\n            }\n        }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Payout/updatePayout.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "( \n  $id: Int!\n)", "content": "{\n  deletePromoCode(\n      id: $id\n  ) {\n      status\n      errorMessage\n  }\n}", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/PromoCode/deletePromoCode.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "( \n  $title: String!, \n  $description: String!, \n  $code: String!, \n  $type: Int!,\n  $promoValue: Float!, \n  $currency: String,\n  $expiryDate: String\n)", "content": "{\n  addPromoCode(\n      title: $title,\n      description: $description,\n      code: $code,\n      type: $type,\n      promoValue: $promoValue,\n      currency: $currency,\n      expiryDate: $expiryDate\n  ) {\n      status\n      errorMessage\n  }\n}", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/PromoCode/addPromoCode.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "( \n  $id: Int!,\n  $title: String!, \n  $description: String!, \n  $code: String!, \n  $type: Int!,\n  $promoValue: Float!, \n  $currency: String,\n  $expiryDate: String,\n  $isEnable: String\n)", "content": "{\n  updatePromoCode(\n      id: $id,\n      title: $title,\n      description: $description,\n      code: $code,\n      type: $type,\n      promoValue: $promoValue,\n      currency: $currency,\n      expiryDate: $expiryDate,\n      isEnable: $isEnable\n  ) {\n      status\n      errorMessage\n  }\n}", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/PromoCode/addPromoCode.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "($id: Int!, $isActive: Boolean)", "content": "{\n  updatePricingStatus(id: $id, isActive: $isActive) {\n      status\n      errorMessage    \n  }\n}", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Pricing/updatePricingStatus.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deletePricing(id: $id) {\n      status\n      errorMessage    \n  }\n}", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Pricing/deletePricing.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "($id: Int, $categoryId: Int!, $locationId: Int!, $unitPrice: Float, $minutePrice: Float, $basePrice: Float,\n  $currency: String!, $riderFeeType: String, $riderFeeValue: Float, $driverFeeType: String, $driverFeeValue: Float, \n  $isActive: Boolean, $isSurgePrice: Boolean)", "content": "{\n  addUpdatePricing(id: $id, categoryId: $categoryId, locationId: $locationId, unitPrice: $unitPrice,\n      minutePrice: $minutePrice, basePrice: $basePrice, currency: $currency, riderFeeType: $riderFeeType,\n      riderFeeValue:$riderFeeValue, driverFeeType: $driverFeeType, driverFeeValue: $driverFeeValue, \n      isActive: $isActive, isSurgePrice: $isSurgePrice) {\n      id\n      status\n      errorMessage    \n  }\n}", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Pricing/addUpdatePricing.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateTempImages(\n          $tableName: String,\n          $fieldName: String,\n          $fileName: String\n        )", "content": "{\n        updateTempImages(\n          tableName: $tableName,\n          fieldName: $fieldName,\n          fileName: $fileName\n        ){\n          status\n        }\n      }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/TempImages/updateTempImages.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "($id: Int, $name: String!, $description: String, $privileges: [Int]!)", "content": "{\n        createAdminRole (id: $id, name: $name, description: $description, privileges: $privileges) {\n            status\n            errorMessage\n        }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/AdminRoles/manageAdminRoles.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n        deleteAdminRole(id: $id) {\n            status\n            errorMessage\n        }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/AdminRoles/manageAdminRoles.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updatePrecautionNotificationImage(\n        $id:Int!,\n        $imageName:String)", "content": "{\n            updatePrecautionNotificationImage(\n                id:$id,\n                imageName:$imageName) {\n                    status\n                    errorMessage\n            }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/PrecautionNotification/updatePrecautionNotificationImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updatePrecautionNotification(\n        $id:Int, \n        $title:String!,\n        $description:String!, \n        $isEnabled:Boolean!, \n        $imageName:String)", "content": "{\n            updatePrecautionNotification(\n                id:$id, \n                title:$title, \n                description:$description, \n                isEnabled:$isEnabled, \n                imageName:$imageName) { \n                    status\n                    errorMessage\n            }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/PrecautionNotification/updatePrecautionNotification.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "($id: String, $email: String!, $password: String, $roleId: Int!)", "content": "{\n        createAdminUser (id: $id, email: $email, password: $password, roleId: $roleId) {\n        status\n        errorMessage\n        }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/AdminUser/manageAdminUser.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "($id: String!)", "content": "{\n        deleteAdminUser (id: $id) {\n        status\n        errorMessage\n        }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/AdminUser/manageAdminUser.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateCurrency ($id: Int, $isEnable: Boolean, $symbol: String)", "content": "{\n                  updateCurrency(id: $id, isEnable: $isEnable, symbol: $symbol){\n                        status\n                    }\n                }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Currency/updateCurrency.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "setBaseCurrency($id: Int)", "content": "{\n              setBaseCurrency(id: $id){\n                    status\n                }\n            }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Currency/updateCurrency.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "allowPaymentCurrency($id: Int,$isPayment: Int)", "content": "{\n              allowPaymentCurrency(id: $id,isPayment: $isPayment){\n                    status\n                }\n            }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Currency/updateCurrency.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "changeAdminUser($email: String, $password: String!)", "content": "{\n      changeAdminUser (email: $email, password: $password) {\n        status\n      }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/components/SiteAdmin/ChangeAdminForm/ChangeAdminForm.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "($chainId:String!,$decimals:String!,$tokenName:String!,$tokenSymbol:String!, $tokenaddress:String!,$totalSupply:String!,$userwallet:String!  )", "content": "{\n  insert_tokens(objects: {chainId: $chainId, decimal: $decimals,  tokenName: $tokenName, tokenSymbol: $tokenSymbol,tokenaddress:$tokenaddress,  totalSupply: $totalSupply, userwallet: $userwallet}){\n    returning {\n      id\n    \n    }\n  }\n}", "metadata": {"commit_hash": "ee32f3050e6809407130a613ee5622793dd94f76", "file": "src/pages/createToken.tsx", "repo": "Contrax-co_contrax-web"}}, {"type": "mutation", "name": "CreateReview(\n    $reviewContent: String!\n    $rating: String!\n    $id: ID!\n    $userID: ID!\n  )", "content": "{\n    createReview(\n      data: {\n        content: $reviewContent\n        rating: $rating\n        laptop: $id\n        user: $userID\n      }\n    ) {\n      data {\n        id\n        attributes {\n          content\n          user {\n            data {\n              id\n              attributes {\n                username\n              }\n            }\n          }\n          rating\n          laptop {\n            data {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "920b5d6b04a8ad98c88c96b3bcbd236e91e9f462", "file": "apollo/constants/graphql.js", "repo": "silversoftdev_Geeks-eShop"}}, {"type": "mutation", "name": "generateNewResetPasswordTokenMutation($email: String!)", "content": "{\n    generateNewResetPasswordToken(email: $email)\n  }", "metadata": {"commit_hash": "281d357865d26cb238f40855bc145a25f5c37f7d", "file": "frontend/src/common/Dialogs/ResetPasswordDialog/constants.js", "repo": "Kichiyaki_gqlgen-nextjs-postgres-starter"}}, {"type": "mutation", "name": "signOutMutation", "content": "{\n    signout\n  }", "metadata": {"commit_hash": "281d357865d26cb238f40855bc145a25f5c37f7d", "file": "frontend/src/common/AppLayout/Navbar/constants.js", "repo": "Kichiyaki_gqlgen-nextjs-postgres-starter"}}, {"type": "mutation", "name": "generateNewActivationTokenMutation", "content": "{\n    generateNewActivationTokenForMe\n  }", "metadata": {"commit_hash": "281d357865d26cb238f40855bc145a25f5c37f7d", "file": "frontend/src/features/UserPage/features/SettingsPage/features/AccountPage/constants.js", "repo": "Kichiyaki_gqlgen-nextjs-postgres-starter"}}, {"type": "mutation", "name": "signInMutation($login: String!, $password: String!)", "content": "{\n    signin(login: $login, password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "281d357865d26cb238f40855bc145a25f5c37f7d", "file": "frontend/src/features/SignUpPage/components/SignInForm/constants.js", "repo": "Kichiyaki_gqlgen-nextjs-postgres-starter"}}, {"type": "mutation", "name": "signupMutation($user: UserInput!)", "content": "{\n    signup(user: $user) {\n      id\n    }\n  }", "metadata": {"commit_hash": "281d357865d26cb238f40855bc145a25f5c37f7d", "file": "frontend/src/features/SignUpPage/components/SignUpForm/constants.js", "repo": "Kichiyaki_gqlgen-nextjs-postgres-starter"}}, {"type": "mutation", "name": "upsertCategory($name: String!, $categoryId: ID)", "content": "{\n    upsertCategory(name: $name, categoryId: $categoryId) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "upsertOption($optionId: ID, $categoryId: ID!, $name: String!, $values: [OptionValueInput!]!)", "content": "{\n    upsertOption(optionId: $optionId, categoryId: $categoryId, name: $name, values: $values) {\n      id\n      name\n      category {\n        id\n        name\n      }\n      values {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "upsertBrand($name: String!, $categoryId: ID!, $brandId: ID)", "content": "{\n    upsertBrand(name: $name, categoryId: $categoryId, brandId: $brandId) {\n      id\n      name\n      category {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "upsertAttribute($value: String!, $categoryId: ID!, $attributeId: ID)", "content": "{\n    upsertAttribute(value: $value, categoryId: $categoryId, attributeId: $attributeId) {\n      id\n      value\n      category {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "deleteOption($optionId: ID!)", "content": "{\n    deleteOption(optionId: $optionId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "deleteCategory($categoryId: ID!)", "content": "{\n    deleteCategory(categoryId: $categoryId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "deleteBrand($brandId: ID!)", "content": "{\n    deleteBrand(brandId: $brandId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "deleteAttribute($attributeId: ID!)", "content": "{\n    deleteAttribute(attributeId: $attributeId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "deleteProduct($productId: ID!)", "content": "{\n    deleteProduct(productId: $productId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "upsertProduct(\n    $name: String!\n    $description: String\n    $brandId: ID!\n    $categoryId: ID!\n    $available: Boolean!\n    $optionIds: [ID!]!\n    $variants: [ProductVariantInput!]!\n    $productId: ID,\n    $attributesIds: [ID!]!\n    $unavailableOptionsValuesIds: [ID!]!\n    $displayPrice: Float!\n    $imageUrl: String,\n    $nullValue: DateTime\n  )", "content": "{\n    upsertProduct(\n      name: $name\n      description: $description\n      imageUrl: $imageUrl\n      brandId: $brandId\n      categoryId: $categoryId\n      available: $available\n      optionIds: $optionIds\n      variants: $variants\n      productId: $productId\n      attributesIds: $attributesIds\n      unavailableOptionsValuesIds: $unavailableOptionsValuesIds\n      displayPrice: $displayPrice\n    ) {\n      id\n      name\n      description\n      available\n      displayPrice\n      imageUrl\n      brand {\n        id\n        name\n      }\n      category {\n        id\n        name\n      }\n      options {\n        id\n        name\n        values {\n          id\n          name\n        }\n      }\n      variants(where: { deletedAt: $nullValue }) {\n        id\n        price\n        available\n        selectedOptions {\n          id\n          option {\n            id\n            name\n          }\n          value {\n            id\n            name\n          }\n        }\n      }\n      displayPrice\n      attributes {\n        id\n        value\n        category {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "authenticateUser($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      user {\n        role\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "upsertBestSellers($bestSellerProducts: [OrderableProductInput!]!)", "content": "{\n    upsertBestSellerProducts(bestSellerProducts: $bestSellerProducts) {\n      id\n      bestSellerProducts(orderBy: position_ASC) {\n        id\n        position\n        product {\n          id\n          name\n          imageUrl\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "upsertNewProducts($newProducts: [OrderableProductInput!]!)", "content": "{\n    upsertNewProducts(newProducts: $newProducts) {\n      id\n      newProducts(orderBy: position_ASC) {\n        id\n        position\n        product {\n          id\n          name\n          imageUrl\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "setOrderAsPrepared($orderId: ID!)", "content": "{\n    setOrderAsPrepared(orderId: $orderId) {\n      id\n      orderStatus\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "updateShopMotd($MOTD: String!)", "content": "{\n    updateMOTD(MOTD: $MOTD) {\n      id\n      MOTD\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "updateUser($firstName: String!, $lastName: String!)", "content": "{\n    updateUser(firstName: $firstName, lastName: $lastName) {\n      id\n      firstName\n      lastName\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/username/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "changePassword($oldPassword: String!, $newPassword: String!)", "content": "{\n    changePassword(oldPassword: $oldPassword, newPassword: $newPassword) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/password/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "updateSelectedShop($selectedShopId: ID!)", "content": "{\n    updateUser(selectedShopId: $selectedShopId) {\n      id\n      firstName\n      cart {\n        id\n        deletedAt\n        quantity\n        variant {\n          id\n          available\n          price\n          selectedOptions {\n            id\n            option {\n              id\n              name\n            }\n            value {\n              id\n              name\n            }\n          }\n          product {\n            ...ProductCardFragment\n          }\n        }\n      }\n      orders(first: 1, orderBy: createdAt_DESC) {\n        id\n        createdAt\n        lineItems {\n          id\n          quantity\n          variant {\n            id\n            price\n            product {\n              id\n              name\n            }\n          }\n        }\n        totalPrice\n      }\n      selectedShop {\n        id\n        MOTD\n        bestSellerProducts(orderBy: position_ASC, first: 5) {\n          id\n          product {\n            ...ProductCardFragment\n          }\n        }\n        newProducts(orderBy: position_ASC, first: 5) {\n          id\n          product {\n            ...ProductCardFragment\n          }\n        }\n      }\n    }\n  }\n  ${ProductCardFragment}", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/shops/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "deleteAccount($password: String!)", "content": "{\n    deleteAccount(password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/delete/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "addOrderToCart($orderId: ID!, $replace: Boolean!)", "content": "{\n    addOrderToCart(orderId: $orderId, replace: $replace) {\n      id\n      quantity\n      variant {\n        id\n        available\n        price\n        selectedOptions {\n          id\n          option {\n            id\n            name\n          }\n          value {\n            id\n            name\n          }\n        }\n        product {\n          id\n          name\n          imageUrl\n          unavailableOptionsValues {\n            id\n            name\n          }\n          brand {\n            id\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/orders/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "resetPassword($email: String!)", "content": "{\n      resetPassword(email: $email) {\n        mailMaybeSent\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/password-reset/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "checkout", "content": "{\n    checkout {\n      id\n      orderStatus\n      totalPrice\n      totalRefunded\n      totalTax\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/recap/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "removeItemFromCart($lineItemId: ID!)", "content": "{\n      removeItemFromCart(lineItemId: $lineItemId) {\n        id\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/basket/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "updateLineItemQuantity($variantId: ID!, $quantity: Int!)", "content": "{\n      addItemToCart(variantId: $variantId, quantity: $quantity) {\n        id\n        quantity\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/basket/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "pay($stripeTokenId: String!)", "content": "{\n      pay(stripeTokenId: $stripeTokenId) {\n        redirectUrl\n        order {\n          id\n          createdAt\n          orderStatus\n        }\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/payment/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "addOrderToCart($orderId: ID!, $replace: Boolean!)", "content": "{\n    addOrderToCart(orderId: $orderId, replace: $replace) {\n      id\n      quantity\n      variant {\n        id\n        available\n        price\n        selectedOptions {\n          id\n          option {\n            id\n            name\n          }\n          value {\n            id\n            name\n          }\n        }\n        product {\n          ...ProductCardFragment\n        }\n      }\n    }\n  }\n  ${ProductCardFragment}", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/home/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "updateOneSignalUserId($oneSignalUserId: String!)", "content": "{\n    updateUser(oneSignalUserId: $oneSignalUserId) {\n      id\n      oneSignalUserId\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/home/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "authenticatedUser($email: String!, $password: String!)", "content": "{\n      login(email: $email, password: $password) {\n        token\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/sign-in/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "signUp($email: String!, $password: String!, $firstName: String!, $lastName: String!, $shopId: ID!)", "content": "{\n      signup(email: $email, password: $password, firstName: $firstName, lastName: $lastName, shopId: $shopId) {\n        token\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/sign-up/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "addItemToCart($variantId: ID!, $quantity: Int!)", "content": "{\n      addItemToCart(variantId: $variantId, quantity: $quantity) {\n        id\n        quantity\n        variant {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/product/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "SaveNotificationTokenWeb($token:String!)", "content": "{\n  saveNotificationTokenWeb(token:$token){\n    success\n    message\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/context/User.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SendOtpToPhoneNumber($phone: String!, $otp: String!)", "content": "{\n    sendOtpToPhoneNumber(phone: $phone, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/VerifyPhone/VerifyPhone.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/VerifyPhone/VerifyPhone.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "PhoneExist($phone:String!)", "content": "{\n  phoneExist(phone:$phone){\n    _id\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/PhoneNumber/PhoneNumber.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EmailExist($email: String!)", "content": "{\n    emailExist(email: $email) {\n      userType\n      _id\n      email\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/NewLogin/NewLogin.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$email:String!)", "content": "{\n    resetPassword(password:$password,email:$email){\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/ResetPassword/ResetPassword.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "PlaceOrder($restaurant:String!,$orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$tipping:Float!, $taxationAmount: Float!,$address:AddressInput!, $orderDate: String!,$isPickedUp: Boolean!, $deliveryCharges: Float!)", "content": "{\n    placeOrder(restaurant:$restaurant,orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,tipping:$tipping, taxationAmount: $taxationAmount, address:$address, orderDate: $orderDate,isPickedUp: $isPickedUp, deliveryCharges:$deliveryCharges) {\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      orderDate\n      expectedTime\n      isPickedUp\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/Checkout/Checkout.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SendOtpToEmail($email: String!, $otp: String!)", "content": "{\n    sendOtpToEmail(email: $email, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/VerifyEmail/VerifyEmail.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateUser($phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)", "content": "{\n        createUser(userInput:{\n            phone:$phone,\n            email:$email,\n            password:$password,\n            name:$name,\n            notificationToken:$notificationToken,\n            appleId:$appleId\n        }){\n            userId\n            token\n            tokenExpiration\n            name\n            email\n            phone\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/VerifyEmail/VerifyEmail.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ForgotPassword($email:String!,$otp:String!)", "content": "{\n    forgotPassword(email:$email,otp:$otp){\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/VerifyForgotOtp/VerifyForgotOtp.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "PhoneExist($phone:String!)", "content": "{\n  phoneExist(phone:$phone){\n    _id\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/Registration/Registration.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/hooks/useRegistration.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SendChatMessage($orderId: ID!, $messageInput: ChatMessageInput!)", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/hooks/useChat.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Profile/ProfileCard/ProfileCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ChangePassword($oldPassword:String!,$newPassword:String!)", "content": "{\n    changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Profile/PasswordCard/PasswordCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditAddress($addressInput:AddressInput!)", "content": "{\n    editAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Checkout/AddressDetail.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateAddress($addressInput:AddressInput!)", "content": "{\n    createAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Checkout/AddressDetail.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "Coupon($coupon:String!)", "content": "{\n    coupon(coupon:$coupon){\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Checkout/CartItemCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteAddress($id:ID!)", "content": "{\n    deleteAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Checkout/DeliveryCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "AddFavourite($id:String!)", "content": "{\n    addFavourite(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/RestaurantComponent/Card/Card.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\nupdateRiderLocation(latitude:$latitude,longitude:$longitude){\n  _id\n}\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/utilities/location.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\nupdateRiderLocation(latitude:$latitude,longitude:$longitude){\n  _id\n}\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateWithdrawRequest($amount: Float!)", "content": "{\n  createWithdrawRequest(amount: $amount) {\n    _id\n    requestId\n    requestAmount\n    requestTime\n    status\n    rider {\n      name\n      email\n      accountNumber\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/Withdraw/useWithdrawRequest.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "RiderLogin($username:String,$password:String,$notificationToken:String)", "content": "{\n  riderLogin(username:$username,password:$password,notificationToken:$notificationToken){\n    userId\n    token\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/Login/useLogin.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SendChatMessage($orderId: ID!, $messageInput: ChatMessageInput!)", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/ChatWithCustomer/useChatScreen.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "AssignOrder($id:String!)", "content": "{\n  assignOrder(id:$id){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateOrderStatusRider($id:String!,$status:String!)", "content": "{\n  updateOrderStatusRider(id:$id,status:$status){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "AssignOrder($id:String!)", "content": "{\n  assignOrder(id:$id){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/components/Order/useOrder.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/components/Sidebar/useSidebar.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "muteRing($orderId:String)", "content": "{\n  muteRing(orderId:$orderId)\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useOrderRing.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ToggleAvailability", "content": "{\n  toggleAvailability{\n    _id\n    isAvailable\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useAccount.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "saveRestaurantToken($token:String, $isEnabled:Boolean)", "content": "{\n  saveRestaurantToken(token:$token, isEnabled: $isEnabled ){\n    _id\n    notificationToken\n    enableNotification\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useNotification.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "OrderPickedUp($_id:String!)", "content": "{\n  orderPickedUp(_id:$_id){\n        _id\n      orderStatus\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useOrderPickedUp.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CancelOrder($_id:String!,$reason:String!)", "content": "{\n    cancelOrder(_id:$_id,reason:$reason){\n        _id\n      orderStatus\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useCancelOrder.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "AcceptOrder($_id:String!, $time:String)", "content": "{\n    acceptOrder(_id:$_id, time:$time){\n        _id\n      orderStatus\n      preparationTime\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useAcceptOrder.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "AcceptOrder($_id:String!, $time:String)", "content": "{\n    acceptOrder(_id:$_id, time:$time){\n        _id\n      orderStatus\n      preparationTime\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CancelOrder($_id:String!,$reason:String!)", "content": "{\n    cancelOrder(_id:$_id,reason:$reason){\n        _id\n      orderStatus\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UploadToken($id:String!,$pushToken:String!)", "content": "{\n  uploadToken(id:$id,pushToken:$pushToken){\n    _id\n    pushToken\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/app.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$email:String!)", "content": "{\n    resetPassword(password:$password,email:$email){\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/ForgotPassword/useResetYourPassword.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ForgotPassword($email:String!,$otp:String!)", "content": "{\n    forgotPassword(email:$email,otp:$otp){\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/ForgotPassword/useForgotPassword.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/CreateAccount/useCreateAccount.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/PhoneNumber/usePhoneNumber.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ReviewOrder(\n    $order:String!,\n    $rating:Int!,\n    $description:String,\n  )", "content": "{\n    reviewOrder(reviewInput:{\n      order:$order,\n      rating:$rating,\n      description:$description,\n    }){\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      orderDate\n      expectedTime\n      isPickedUp\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/RateAndReview/RateAndReview.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Profile/Profile.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ChangePassword($oldPassword:String!,$newPassword:String!)", "content": "{\n    changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Profile/ChangePassword.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditAddress($addressInput:AddressInput!)", "content": "{\n    editAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/EditAddress/EditAddress.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SendOtpToPhoneNumber($phone: String!, $otp: String!)", "content": "{\n    sendOtpToPhoneNumber(phone: $phone, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Otp/Phone/usePhoneOtp.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Otp/Phone/usePhoneOtp.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ForgotPassword($email:String!,$otp:String!)", "content": "{\n    forgotPassword(email:$email,otp:$otp){\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Otp/ForgotPassword/useForgotPasswordOtp.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SendOtpToEmail($email: String!, $otp: String!)", "content": "{\n    sendOtpToEmail(email: $email, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Otp/Email/useEmailOtp.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateUser($phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)", "content": "{\n        createUser(userInput:{\n            phone:$phone,\n            email:$email,\n            password:$password,\n            name:$name,\n            notificationToken:$notificationToken,\n            appleId:$appleId\n        }){\n            userId\n            token\n            tokenExpiration\n            name\n            email\n            phone\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Otp/Email/useEmailOtp.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SendChatMessage($orderId: ID!, $messageInput: ChatMessageInput!)", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/ChatWithRider/useChatScreen.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Login/useLogin.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EmailExist($email: String!)", "content": "{\n    emailExist(email: $email) {\n      userType\n      _id\n      email\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Login/useLogin.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Main/Main.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "Coupon($coupon:String!)", "content": "{\n    coupon(coupon:$coupon){\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Coupon/Coupon.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/CartAddress/CartAddress.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteAddress($id:ID!)", "content": "{\n    deleteAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Addresses/Addresses.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "PushToken($token:String)", "content": "{\n    pushToken(token:$token){\n      _id\n      notificationToken\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Settings/Settings.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateNotificationStatus($offerNotification:Boolean!,$orderNotification:Boolean!)", "content": "{\n            updateNotificationStatus(offerNotification:$offerNotification,orderNotification:$orderNotification){\n              _id\n              notificationToken\n              isOrderNotification\n              isOfferNotification\n            }\n          }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Settings/Settings.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "deactivated($isActive: Boolean!, $email: String!)", "content": "{\n    Deactivate(isActive: $isActive,email: $email) {\n      isActive\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Settings/Settings.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateAddress($addressInput:AddressInput!)", "content": "{\n    createAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/NewAddress/NewAddress.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "PlaceOrder($restaurant:String!,$orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$tipping:Float!, $taxationAmount: Float!,$address:AddressInput!, $orderDate: String!,$isPickedUp: Boolean!, $deliveryCharges: Float!)", "content": "{\n    placeOrder(restaurant:$restaurant,orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,tipping:$tipping, taxationAmount: $taxationAmount, address:$address, orderDate: $orderDate,isPickedUp: $isPickedUp, deliveryCharges:$deliveryCharges) {\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      orderDate\n      expectedTime\n      isPickedUp\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Cart/Cart.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "AddFavourite($id:String!)", "content": "{\n    addFavourite(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/components/Main/Item/Item.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SendNotificationUser($notificationTitle:String, $notificationBody: String!)", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Notifications.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UPDATE_DELIVERY_BOUNDS_AND_LOCATION($id:ID!,$bounds:[[[Float!]]],$location:CoordinatesInput!)", "content": "{\n  result :updateDeliveryBoundsAndLocation(id:$id,location:$location,bounds:$bounds){\n    success\n    message\n    data{\n      _id\n      deliveryBounds{\n        coordinates\n      }\n      location{\n        coordinates\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/DeliveryBoundsAndLocation.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateStatus($id:String!,$orderStatus:String!)", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/DispatchRestaurant.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteVendor($id:String!)", "content": "{\n  deleteVendor(id:$id)\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Vendors.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateStatus($id:String!,$orderStatus:String!)", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Dispatch.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "AssignRider($id:String!,$riderId:String!)", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Dispatch.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n        _id\n        title\n        discount\n        enabled\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Coupons.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteCoupon($id:String!)", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Coupons.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditRestaurant($restaurantInput:RestaurantProfileInput!)", "content": "{\n    editRestaurant(restaurant:$restaurantInput){\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      slug\n      address\n      username\n      password\n      location{coordinates}\n      isAvailable\n      minimumOrder\n      tax\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/VendorProfile.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateTimings($id:String!,$openingTimes:[TimingsInput])", "content": "{\n  updateTimings(id:$id,\n    openingTimes:$openingTimes){\n    _id\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Timings.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeltetRestaurant($id:String!)", "content": "{\n  deleteRestaurant(id:$id){\n    _id\n    isActive\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/RestaurantList.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteRider($id:String!)", "content": "{\n        deleteRider(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Riders.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Riders.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$email:String!)", "content": "{\n    resetPassword(password:$password,email:$email){\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/ForgotPassword.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteFood($id:String!,$restaurant:String!,$categoryId:String!)", "content": "{\n        deleteFood(id:$id,restaurant:$restaurant,categoryId:$categoryId){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteZone($id:String!)", "content": "{\n  deleteZone(id:$id){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Zone.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ownerLogin($email:String!,$password:String!)", "content": "{\n  ownerLogin(email:$email,password:$password){\n    userId\n    token\n    email\n    userType\n    restaurants{\n      _id\n      orderId\n      name\n      image\n      address\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Login.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateWithdrawRequest($id:ID!, $status:String!)", "content": "{\n  updateWithdrawReqStatus(id:$id,status:$status){\n    success\n    message\n    data{\n      rider{\n        _id\n        currentWalletAmount\n      }\n      withdrawRequest{\n        _id\n        status\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/WithdrawRequest.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteOption($id:String!,$restaurant:String!)", "content": "{\n        deleteOption(id:$id,restaurant:$restaurant){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Options.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteAddon($id:String!,$restaurant:String!)", "content": "{\n        deleteAddon(id:$id,restaurant:$restaurant){\n          _id\n          addons{\n            _id\n            options\n            title\n            description\n            quantityMinimum\n            quantityMaximum\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Addons.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "editSection($section:SectionInput!)", "content": "{\n  editSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Sections.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteSection($id:String!)", "content": "{\n  deleteSection(id:$id)\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Sections.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateCommission($id:String!,$commissionRate:Float!)", "content": "{\n  updateCommission(id:$id,commissionRate:$commissionRate){\n    _id\n    commissionRate\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Commission.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteCategory($id:String!,$restaurant:String!)", "content": "{\n        deleteCategory(id:$id,restaurant:$restaurant){\n                _id\n                categories{\n                  _id\n                  title\n                  foods{\n                    _id\n                    title\n                    description\n                    variations{\n                      _id\n                      title\n                      price\n                      discounted\n                      addons\n                    }\n                    image\n                    isActive\n                    createdAt\n                    updatedAt\n                  }\n                  createdAt\n                  updatedAt\n                }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "editTipping($tippingInput:TippingInput!)", "content": "{\n  editTipping(tippingInput:$tippingInput){\n            _id\n            tipVariations\n            enabled\n              }\n            }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Tipping/Tipping.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateTipping($tippingInput:TippingInput!)", "content": "{\n        createTipping(tippingInput:$tippingInput){\n          _id\n          tipVariations\n          enabled\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Tipping/Tipping.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n      zone{\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Rider/Rider.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Rider/Rider.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateZone($zone:ZoneInput!)", "content": "{\n  createZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditZone($zone:ZoneInput!)", "content": "{\n  editZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n      zone{\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateCategory($category:CategoryInput)", "content": "{\n  createCategory(category:$category){\n    _id\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n        image\n        isActive\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Category/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditCategory($category:CategoryInput)", "content": "{\n        editCategory(category:$category){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Category/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Order/Order.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateVendor($vendorInput:VendorInput)", "content": "{\n    createVendor(vendorInput:$vendorInput){\n      _id\n      email\n      userType\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Vendor/Vendor.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditVendor($vendorInput:VendorInput)", "content": "{\n  editVendor(vendorInput:$vendorInput){\n    _id\n    email\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Vendor/Vendor.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateAddons($addonInput:AddonInput)", "content": "{\n  createAddons(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Addon/Addon.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "editAddon($addonInput:editAddonInput)", "content": "{\n  editAddon(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Addon/Addon.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateOptions($optionInput:CreateOptionInput)", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    options{\n      _id\n      title\n      description\n      price\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Option/Option.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "editOption($optionInput:editOptionInput)", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Option/Option.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateSection($section:SectionInput!)", "content": "{\n  createSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Section/Section.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "editSection($section:SectionInput!)", "content": "{\n  editSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Section/Section.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateCoupon($couponInput:CouponInput!)", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    title\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Coupon/Coupon.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n        _id\n        title\n        discount\n        enabled\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Coupon/Coupon.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "VendorResetPassword($oldPassword: String!, $newPassword: String!)", "content": "{\n    vendorResetPassword(oldPassword: $oldPassword, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/ResetPassword/ResetPassword.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateRestaurant($restaurant:RestaurantInput!,$owner:ID!)", "content": "{\n  createRestaurant(restaurant:$restaurant,owner:$owner){\n    _id\n    orderId\n    orderPrefix\n    name\n    slug\n    image\n    address\n    username\n    password\n    minimumOrder\n    tax\n    location{coordinates}\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Restaurant/CreateRestaurant.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SaveDeliveryRateConfiguration($deliveryRate: Float!)", "content": "{\n  saveDeliveryRateConfiguration(deliveryRate:$deliveryRate){\n    _id\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Configuration/DeliveryRate/DeliveryRate.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SaveStripeConfiguration($configurationInput:StripeConfigurationInput!)", "content": "{\n  saveStripeConfiguration(configurationInput:$configurationInput){\n    _id\n    publishableKey\n    secretKey\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Configuration/Stripe/Stripe.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SavePaypalConfiguration($configurationInput:PaypalConfigurationInput!)", "content": "{\n  savePaypalConfiguration(configurationInput:$configurationInput){\n    _id\n    clientId\n    clientSecret\n    sandbox\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Configuration/Paypal/Paypal.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    emailName\n    password\n    enableEmail\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Configuration/Email/Email.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SaveCurrencyConfiguration($configurationInput:CurrencyConfigurationInput!)", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Configuration/Currency/Currency.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateFood($foodInput:FoodInput!)", "content": "{\n      createFood(\n          foodInput:$foodInput\n      ){\n        _id\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n        createdAt\n        updatedAt\n      }\n      }\n    }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Food/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditFood($foodInput:FoodInput!)", "content": "{\n        editFood(\n            foodInput:$foodInput\n        ){\n            _id\n            categories{\n              _id\n              title\n              foods{\n                _id\n                title\n                description\n                variations{\n                  _id\n                  title\n                  price\n                  discounted\n                  addons\n                }\n                image\n                isActive\n              }\n              createdAt\n              updatedAt\n            }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Food/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "AddTodo($title: String!, $user_id: ID!, $completed: Boolean!)", "content": "{\n    newTodo: createTodo(title: $title, user_id: $user_id, completed: $completed) {\n      id\n      title\n      completed\n    }\n  }", "metadata": {"commit_hash": "1692f891caba032a215afa5fd33ba9be063f9162", "file": "src/apollo/todos.js", "repo": "Andryuha-Nikolaev_apollo-graphql-todo"}}, {"type": "mutation", "name": "UpdateTodo($id: ID!, $completed: Boolean)", "content": "{\n    updateTodo(id: $id, completed: $completed) {\n      id\n      title\n      completed\n    }\n  }", "metadata": {"commit_hash": "1692f891caba032a215afa5fd33ba9be063f9162", "file": "src/apollo/todos.js", "repo": "Andryuha-Nikolaev_apollo-graphql-todo"}}, {"type": "mutation", "name": "DeleteTodo($id: ID!)", "content": "{\n    removeTodo(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1692f891caba032a215afa5fd33ba9be063f9162", "file": "src/apollo/todos.js", "repo": "Andryuha-Nikolaev_apollo-graphql-todo"}}, {"type": "mutation", "name": "refreshTokens($token: String!)", "content": "{\n            refreshTokens(token: $token) {\n              token\n              refreshToken\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n            signIn(email: $email, password: $password, generateRefreshToken: true) {\n              token\n              refreshToken\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "signUp($name: String!, $email: String!, $password: String!)", "content": "{\n            signUp(name: $name, email: $email, password: $password) {\n              _\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "resendEmailConfirmation($email: String!)", "content": "{\n            resendEmailConfirmation(email: $email) {\n              _\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "requestResetPassword($email: String!)", "content": "{\n            requestResetPassword(email: $email) {\n              _\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "resetPassword($token: String!, $password: String!)", "content": "{\n            resetPassword(token: $token, password: $password) {\n              _\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "validateEmail", "content": "{\n            checkEmail\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "updateUser($id: ID!, $name: String, $image: Upload)", "content": "{\n            updateUser(id: $id, name: $name, upload: $image) {\n              id\n              name\n              imageUrl\n              email\n\n              createdDate\n              modifiedDate\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "confirmEmail($token: String!)", "content": "{\n            confirmEmail(token: $token) {\n              _\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "checkEmail($email: String!)", "content": "{\n            checkEmail(email: $email) {\n              isAvailable\n              isBlacklisted\n              isCorporate\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "createChallenge($title: String!, $description: String, $closeDate: DateTime, $endDate: DateTime, $upload: Upload, $privacyMode: ChallengePrivacyMode)", "content": "{\n            createChallenge(title: $title, description: $description, closeDate: $closeDate, endDate: $endDate, upload: $upload, privacyMode: $privacyMode) {\n              id\n              title\n              description\n              imageUrl\n              closeDate\n              endDate\n              privacyData\n              privacyMode\n\n              createdDate\n              createdBy {\n                id\n                name\n                imageUrl\n              }\n              modifiedDate\n              modifiedBy {\n                id\n                name\n                imageUrl\n              }\n\n              ideas {\n                totalCount\n                edges {\n                  node {\n                    id\n                    title\n                    description\n                    imageUrl\n\n                    reactionsSummary {\n                      value\n                      totalCount\n                    }\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "updateChallenge($id: ID!, $title: String!, $description: String, $closeDate: DateTime, $endDate: DateTime, $upload: Upload, $privacyMode: ChallengePrivacyMode)", "content": "{\n            updateChallenge(id: $id, title: $title, description: $description, closeDate: $closeDate, endDate: $endDate, upload: $upload, privacyMode: $privacyMode) {\n              id\n              title\n              description\n              imageUrl\n              closeDate\n              endDate\n              privacyMode\n              privacyData\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "deleteChallenge($id: ID!)", "content": "{\n            deleteChallenge(id: $id)\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "createIdea($challengeId: String!, $title: String!, $description: String, $upload: Upload)", "content": "{\n            createIdea(challengeId: $challengeId, title: $title, description: $description, upload: $upload) {\n              id\n              title\n              description\n              imageUrl\n\n              challenge {\n                id\n                closeDate\n              }\n\n              createdBy {\n                id\n                name\n                imageUrl\n              }\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "updateIdea($id: ID!, $title: String!, $description: String, $upload: Upload)", "content": "{\n            updateIdea(id: $id, title: $title, description: $description, upload: $upload) {\n              id\n              title\n              description\n              imageUrl\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "deleteIdea($id: ID!)", "content": "{\n            deleteIdea(id: $id)\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "createReaction($ideaId: ID!)", "content": "{\n            createReaction(objectType: IDEA, objectId: $ideaId, value: \"LIKE\") {\n              id\n              value\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "deleteReaction($id: ID!)", "content": "{\n            deleteReaction(objectType: IDEA, id: $id)\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "($articleCommentCreateInput: ArticleCommentCreateInput!)", "content": "{\n        articleCommentCreate(newArticleComment: $articleCommentCreateInput) {\n            id,\n            userID,\n            articleID,\n            comment,\n            createdAt,\n            updatedAt,\n        }\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/article-comments-create.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($username: String!, $password: String!)", "content": "{\n    sessionCreate(username: $username, password: $password) {\n      id\n      accessToken\n      userID\n    }\n  }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/session-create.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($articleCreateInput: ArticleCreateInput!)", "content": "{\n        articleCreate(newArticle: $articleCreateInput) {\n            id,\n            name,\n            description,\n            content,\n            imageURL,\n            userID,\n        }\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/article-create.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($wordFilterID: Float!)", "content": "{\n        wordFilterDelete(id: $wordFilterID)\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/word-filter-delete.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($rankID: Float!, $rankChanges: RankUpdateInput!)", "content": "{\n        rankUpdate(id: $rankID, rankChanges: $rankChanges)\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/rank-update-by-id.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($articleID: Float!)", "content": "{\n        articleDelete(id: $articleID)\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/article-delete.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($username: String!, $email: String!, $password: String!, $gender: String, $look: String)", "content": "{\n    userCreate(newUser: {email: $email, username: $username, password: $password, gender: $gender, look: $look}) {\n      id\n      username\n      email\n      rankID\n      credits\n      vipPoints\n      activityPoints\n      look\n      gender\n      motto\n      accountCreatedAt\n      onlineStatus\n      ipRegisteredWith\n      homeRoomID\n    }\n  }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/user-create.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($wordFilterID: Float!, $wordFilterUpdateInput: WordFilterUpdateInput!)", "content": "{\n        wordFilterUpdate(id: $wordFilterID, wordFilterChanges: $wordFilterUpdateInput)\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/word-filter-update.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($rankCreateInput: RankCreateInput!)", "content": "{\n        rankCreate(newRank: $rankCreateInput) {\n            id\n            name\n            scopes {\n                accessAdminPanel\n                manageArticles\n            }\n            badgeCode\n            description\n        }\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/rank-create.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($wordFilterCreateInput: WordFilterCreateInput!)", "content": "{\n        wordFilterCreate(newWordFilter: $wordFilterCreateInput) {\n            id,\n            word,\n            replacement,\n            strict,\n            bannable,\n            addedByUserID\n        }\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/word-filter-create.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($rankID: Float!)", "content": "{\n        rankDelete(id: $rankID)\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/rank-delete.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($articleID: Float!, $articleChanges: ArticleUpdateInput!)", "content": "{\n        articleUpdate(id: $articleID, articleChanges: $articleChanges)\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/article-update.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($configUpdateInput: ConfigUpdateInput!)", "content": "{\n        configUpdate(configUpdateInput: $configUpdateInput)\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/update-config.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "($data: BotAddInfo!)", "content": "{\n                    addBot(data: $data)\n                  }", "metadata": {"commit_hash": "89dd6d9be2c03695498196ef118e7054874db3fa", "file": "pages/addbot.tsx", "repo": "pikokr_uniquebots"}}, {"type": "mutation", "name": "(\n                $id: String!\n                $category: [String!]!\n                $brief: String!\n                $description: String!\n                $library: String!\n                $website: String\n                $git: String\n                $prefix: String!\n                $support: String\n                $invite: String!\n                $owners: [String!]!\n              )", "content": "{\n                editBot(\n                  data: {\n                    id: $id\n                    category: $category\n                    brief: $brief\n                    description: $description\n                    library: $library\n                    website: $website\n                    git: $git\n                    prefix: $prefix\n                    support: $support\n                    invite: $invite\n                    owners: $owners\n                  }\n                )\n              }", "metadata": {"commit_hash": "89dd6d9be2c03695498196ef118e7054874db3fa", "file": "pages/bots/edit/[id].tsx", "repo": "pikokr_uniquebots"}}, {"type": "mutation", "name": "($code: String!)", "content": "{\n          login(code: $code)\n        }", "metadata": {"commit_hash": "89dd6d9be2c03695498196ef118e7054874db3fa", "file": "pages/callback/auth.tsx", "repo": "pikokr_uniquebots"}}, {"type": "mutation", "name": "createShop($name: String!)", "content": "{\n    createShop(input: { name: $name }) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "offixapp/src/queries.js", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "updateShop($id: ID!, $name: String!)", "content": "{\n    updateShop(id: $id, input: {name: $name}) {\n      ...ShopFields\n    }\n  }\n\n  ${ShopFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/updateShop.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "createProduct($id: ID!, $name: String!, $quantity: Int!)", "content": "{\n    createProduct(input: {name: $name, quantity: $quantity}) {\n      ...ProductFields\n    }\n  }\n\n  ${ProductFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/createProduct.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "updatePerson($id: ID!, $name: String!)", "content": "{\n    updatePerson(id: $id, input: {name: $name}) {\n      ...PersonFields\n    }\n  }\n\n  ${PersonFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/updatePerson.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "updateProduct($id: ID!, $name: String!, $quantity: Int!)", "content": "{\n    updateProduct(id: $id, input: {name: $name, quantity: $quantity}) {\n      ...ProductFields\n    }\n  }\n\n  ${ProductFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/updateProduct.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "createShop($id: ID!, $name: String!)", "content": "{\n    createShop(input: {name: $name}) {\n      ...ShopFields\n    }\n  }\n\n  ${ShopFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/createShop.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "createPerson($id: ID!, $name: String!)", "content": "{\n    createPerson(input: {name: $name}) {\n      ...PersonFields\n    }\n  }\n\n  ${PersonFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/createPerson.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "createLiftMutation($userId: ID!, $movement: String!, $units: String!, $weight: Float!)", "content": "{\n    createLift(userId: $userId, movement: $movement, units: $units, weight: $weight) {\n      id\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "mutation", "name": "deleteLiftMutation($id: ID!)", "content": "{\n    deleteLift(id: $id) {\n      id\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "mutation", "name": "updateLiftMutation($id: ID!, $movement: String!, $units: String!, $weight: Float!)", "content": "{\n    updateLift(id: $id, movement: $movement, units: $units, weight: $weight) {\n      id\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "mutation", "name": "facebookLoginMutation($facebookToken: String!)", "content": "{\n    authenticateFacebookUser(facebookToken: $facebookToken) {\n      token\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "mutation", "name": "updateUserMutation($id: ID!, $firstName: String!, $lastName: String!, $gender: String!)", "content": "{\n    updateUser(id: $id, firstName: $firstName, lastName: $lastName, gender: $gender) {\n      id\n      firstName\n      lastName\n      gender\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "mutation", "name": "($description: String!, $imageUrl: String!)", "content": "{\n    createPost(description: $description, imageUrl: $imageUrl) {\n      id\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "instagram/src/CreatePage.js", "repo": "hansjhoffman_react-native"}}, {"type": "mutation", "name": "createBook($title: String!, $author: String, $description: String, $rating: Int, $image: String)", "content": "{\n    createBook(title: $title, author: $author, description: $description, rating: $rating, image: $image) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "book-it/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "mutation", "name": "customerUpdate($input: CustomerInput!)", "content": "{\n      customerUpdate(input: $input) {\n        customer {\n          id\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }", "metadata": {"commit_hash": "5dcbe39560ea84d54883c7e27657773311319d25", "file": "server/handlers/mutations/add-customer-metafield.js", "repo": "CharmingDev777_shopipoints.com-custom-app-main"}}, {"type": "mutation", "name": "createForum($name: String!)", "content": "{\n    forum: createForum(name: $name) {\n      id\n      name\n      UserId\n      slug\n    }\n  }", "metadata": {"commit_hash": "2cc48e5c2fae89fbdd2f9dc37fe1de9c3fc49983", "file": "src/browser/graphql/index.js", "repo": "Undeadlol1_boilerplate"}}, {"type": "mutation", "name": "CreateProposal($name: String!, $note: String!)", "content": "{\n    createProposal(proposal: { name: $name, note: $note }) {\n      proposal {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "CreateIntent($agent: ID!, $resource: ID!, $oneUnit: ID!, $currency: ID!, $howMuch: Decimal!)", "content": "{\n    item: createIntent(\n      intent: {\n        name: \"project\"\n        action: \"transfer\"\n        provider: $agent\n        resourceInventoriedAs: $resource\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $oneUnit }\n      }\n    ) {\n      intent {\n        id\n      }\n    }\n    payment: createIntent(\n      intent: {\n        name: \"payment\"\n        action: \"transfer\"\n        receiver: $agent\n        resourceConformsTo: $currency\n        resourceQuantity: { hasNumericalValue: $howMuch, hasUnit: $oneUnit }\n      }\n    ) {\n      intent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "LinkProposalAndIntent($proposal: ID!, $item: ID!, $payment: ID!)", "content": "{\n    linkItem: proposeIntent(publishedIn: $proposal, publishes: $item, reciprocal: false) {\n      proposedIntent {\n        id\n      }\n    }\n    linkPayment: proposeIntent(publishedIn: $proposal, publishes: $payment, reciprocal: true) {\n      proposedIntent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "CreateLocation($name: String!, $addr: String!, $lat: Decimal!, $lng: Decimal!)", "content": "{\n    createSpatialThing(spatialThing: { name: $name, mappableAddress: $addr, lat: $lat, long: $lng }) {\n      spatialThing {\n        id\n        lat\n        long\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "CreateProject(\n    $name: String!\n    $note: String!\n    $metadata: JSONObject\n    $agent: ID!\n    $creationTime: DateTime!\n    $location: ID\n    $tags: [URI!]\n    $resourceSpec: ID!\n    $oneUnit: ID!\n    $images: [IFile!]\n    $repo: String\n    $process: ID!\n    $license: String!\n  )", "content": "{\n    createEconomicEvent(\n      event: {\n        action: \"produce\"\n        provider: $agent\n        receiver: $agent\n        outputOf: $process\n        hasPointInTime: $creationTime\n        resourceClassifiedAs: $tags\n        resourceConformsTo: $resourceSpec\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $oneUnit }\n        toLocation: $location\n        resourceMetadata: $metadata\n      }\n      newInventoriedResource: { name: $name, note: $note, images: $images, repo: $repo, license: $license }\n    ) {\n      economicEvent {\n        id\n        resourceInventoriedAs {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "TransferProject (\n    $resource: ID!\n    $name: String!\n    $note: String!\n    $metadata: JSONObject\n    $agent: ID!\n    $creationTime: DateTime!\n    $tags: [URI!]\n    $oneUnit: ID!\n  )", "content": "{\n    createEconomicEvent(\n      event: {\n        resourceInventoriedAs: $resource\n        action: \"transfer\"\n        provider: \"${process.env.NEXT_PUBLIC_LOSH_ID}\"\n        receiver: $agent\n        hasPointInTime: $creationTime\n        resourceClassifiedAs: $tags\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $oneUnit }\n        resourceMetadata: $metadata\n      }\n      newInventoriedResource: { name: $name, note: $note}\n    ) {\n      economicEvent {\n        id\n        toResourceInventoriedAs {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "CreateProcess($name: String!)", "content": "{\n    createProcess(process: { name: $name }) {\n      process {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "ForkProject(\n    $agent: ID! # Agent.id\n    $creationTime: DateTime!\n    $resource: ID! # EconomicResource.id\n    $process: ID! # Process.id\n    $unitOne: ID! # Unit.id\n    $tags: [URI!]\n    $location: ID # SpatialThing.id\n    $spec: ID! # ResourceSpecification.id\n    $name: String!\n    $note: String\n    $repo: String\n    $metadata: JSONObject\n  )", "content": "{\n    cite: createEconomicEvent(\n      event: {\n        action: \"cite\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        hasPointInTime: $creationTime\n        resourceInventoriedAs: $resource\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n    produce: createEconomicEvent(\n      event: {\n        action: \"produce\"\n        outputOf: $process\n        provider: $agent\n        receiver: $agent\n        hasPointInTime: $creationTime\n        resourceClassifiedAs: $tags\n        resourceConformsTo: $spec\n        toLocation: $location\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n        resourceMetadata: $metadata\n      }\n      newInventoriedResource: { name: $name, note: $note, repo: $repo }\n    ) {\n      economicEvent {\n        id\n        resourceInventoriedAs {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "proposeContribution(\n    $process: ID!\n    $owner: ID!\n    $proposer: ID!\n    $creationTime: DateTime!\n    $resourceForked: ID!\n    $unitOne: ID!\n    $resourceOrigin: ID!\n  )", "content": "{\n    citeResourceForked: createIntent(\n      intent: {\n        action: \"cite\"\n        inputOf: $process\n        provider: $proposer\n        hasPointInTime: $creationTime\n        resourceInventoriedAs: $resourceForked\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      intent {\n        id\n      }\n    }\n    acceptResourceOrigin: createIntent(\n      intent: {\n        action: \"accept\"\n        inputOf: $process\n        receiver: $owner\n        hasPointInTime: $creationTime\n        resourceInventoriedAs: $resourceOrigin\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      intent {\n        id\n      }\n    }\n    modifyResourceOrigin: createIntent(\n      intent: {\n        action: \"modify\"\n        outputOf: $process\n        receiver: $owner\n        hasPointInTime: $creationTime\n        resourceInventoriedAs: $resourceOrigin\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      intent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "LinkContributionAndProposalAndIntent(\n    $proposal: ID!\n    $citeIntent: ID!\n    $acceptIntent: ID!\n    $modifyIntent: ID!\n  )", "content": "{\n    proposeCite: proposeIntent(publishedIn: $proposal, publishes: $citeIntent) {\n      proposedIntent {\n        id\n      }\n    }\n    proposeAccept: proposeIntent(publishedIn: $proposal, publishes: $acceptIntent) {\n      proposedIntent {\n        id\n      }\n    }\n    proposeModify: proposeIntent(publishedIn: $proposal, publishes: $modifyIntent) {\n      proposedIntent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "citeProject(\n    $agent: ID! # Agent.id\n    $creationTime: DateTime!\n    $resource: ID! # EconomicResource.id\n    $process: ID! # Process.id\n    $unitOne: ID! # Unit.id\n  )", "content": "{\n    createEconomicEvent(\n      event: {\n        action: \"cite\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        hasPointInTime: $creationTime\n        resourceInventoriedAs: $resource\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "contributeToProject(\n    $agent: ID! # Agent.id\n    $creationTime: DateTime!\n    $process: ID! # Process.id\n    $unitOne: ID! # Unit.id\n    $conformsTo: ID!\n  )", "content": "{\n    createEconomicEvent(\n      event: {\n        action: \"work\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceConformsTo: $conformsTo\n        hasPointInTime: $creationTime\n        effortQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "acceptProposal(\n    $process: ID!\n    $owner: ID!\n    $proposer: ID!\n    $unitOne: ID!\n    $resourceForked: ID!\n    $resourceOrigin: ID!\n    $creationTime: DateTime!\n    $metadata: JSONObject\n  )", "content": "{\n    cite: createEconomicEvent(\n      event: {\n        action: \"cite\"\n        inputOf: $process\n        provider: $proposer\n        receiver: $owner\n        resourceInventoriedAs: $resourceForked\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n        hasPointInTime: $creationTime\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n\n    accept: createEconomicEvent(\n      event: {\n        action: \"accept\"\n        inputOf: $process\n        provider: $owner\n        receiver: $owner\n        resourceInventoriedAs: $resourceOrigin\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n        hasPointInTime: $creationTime\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n\n    modify: createEconomicEvent(\n      event: {\n        action: \"modify\"\n        outputOf: $process\n        provider: $owner\n        receiver: $owner\n        resourceInventoriedAs: $resourceOrigin\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n        hasPointInTime: $creationTime\n        resourceMetadata: $metadata\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "satisfyIntents(\n    $unitOne: ID!\n    $intentCited: ID!\n    $intentAccepted: ID!\n    $intentModify: ID!\n    $eventCite: ID!\n    $eventAccept: ID!\n    $eventModify: ID!\n  )", "content": "{\n    cite: createSatisfaction(\n      satisfaction: {\n        satisfies: $intentCited\n        satisfiedByEvent: $eventCite\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      satisfaction {\n        id\n      }\n    }\n\n    accept: createSatisfaction(\n      satisfaction: {\n        satisfies: $intentAccepted\n        satisfiedByEvent: $eventAccept\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      satisfaction {\n        id\n      }\n    }\n\n    modify: createSatisfaction(\n      satisfaction: {\n        satisfies: $intentModify\n        satisfiedByEvent: $eventModify\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      satisfaction {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "rejectProposal($intentCite: ID!, $intentAccept: ID!, $intentModify: ID!)", "content": "{\n    cite: updateIntent(intent: { id: $intentCite, finished: true }) {\n      intent {\n        id\n      }\n    }\n    accept: updateIntent(intent: { id: $intentAccept, finished: true }) {\n      intent {\n        id\n      }\n    }\n    modify: updateIntent(intent: { id: $intentModify, finished: true }) {\n      intent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "claimDID($id: ID!)", "content": "{\n    claimPerson(id: $id)\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "updateMetadata(\n    $process: ID!\n    $agent: ID!\n    $resource: ID!\n    $quantity: IMeasure!\n    $now: DateTime!\n    $metadata: JSONObject!\n  )", "content": "{\n    accept: createEconomicEvent(\n      event: {\n        action: \"accept\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceInventoriedAs: $resource\n        resourceQuantity: $quantity\n        hasPointInTime: $now\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n    modify: createEconomicEvent(\n      event: {\n        action: \"modify\"\n        outputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceInventoriedAs: $resource\n        resourceQuantity: $quantity\n        resourceMetadata: $metadata\n        hasPointInTime: $now\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "updateContribution(\n    $process: ID!\n    $agent: ID!\n    $resource: ID!\n    $quantity: IMeasure!\n    $now: DateTime!\n    $metadata: JSONObject!\n    $conformsTo: ID!\n    $unitOne: ID!\n  )", "content": "{\n    contribute: createEconomicEvent(\n      event: {\n        action: \"work\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceConformsTo: $conformsTo\n        hasPointInTime: $now\n        effortQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "relocateProject(\n    $process: ID!\n    $agent: ID!\n    $resource: ID!\n    $quantity: IMeasure!\n    $now: DateTime!\n    $location: ID!\n  )", "content": "{\n    pickup: createEconomicEvent(\n      event: {\n        action: \"pickup\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceInventoriedAs: $resource\n        resourceQuantity: $quantity\n        hasPointInTime: $now\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n    dropoff: createEconomicEvent(\n      event: {\n        action: \"dropoff\"\n        outputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceInventoriedAs: $resource\n        resourceQuantity: $quantity\n        toLocation: $location\n        hasPointInTime: $now\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "SendEmailVerification($template: EmailTemplate!)", "content": "{\n    personRequestEmailVerification(template: $template)\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "SignUp(\n    $name: String!\n    $user: String!\n    $email: String!\n    $eddsaPublicKey: String!\n    $reflowPublicKey: String!\n    $ethereumAddress: String!\n    $ecdhPublicKey: String!\n    $bitcoinPublicKey: String!\n  )", "content": "{\n    createPerson(\n      person: {\n        name: $name\n        user: $user\n        email: $email\n        eddsaPublicKey: $eddsaPublicKey\n        reflowPublicKey: $reflowPublicKey\n        ethereumAddress: $ethereumAddress\n        ecdhPublicKey: $ecdhPublicKey\n        bitcoinPublicKey: $bitcoinPublicKey\n      }\n    ) {\n      agent {\n        id\n        name\n        user\n        email\n        eddsaPublicKey\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "VerifyEmail($token: String!)", "content": "{\n    personVerifyEmailVerification(token: $token)\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "pages/email/verify/[token].tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "EditImages($id: ID!, $images: [IFile!])", "content": "{\n    updateEconomicResource(resource: { id: $id, images: $images }) {\n      economicResource {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "pages/project/[id]/edit/images.tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "EditMain($id: ID!, $classifiedAs: [URI!], $note: String, $name: String, $repo: String)", "content": "{\n    updateEconomicResource(resource: { id: $id, classifiedAs: $classifiedAs, name: $name, note: $note, repo: $repo }) {\n      economicResource {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "pages/project/[id]/edit/index.tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "RegisterUser($firstRegistration: Boolean!, $userData: JSONObject!)", "content": "{\n    keypairoomServer(firstRegistration: $firstRegistration, userData: $userData)\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "contexts/AuthContext.tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "updateUser($id: ID!, $name: String, $note: String, $primaryLocation: ID, $user: String, $images: [IFile!])", "content": "{\n    updatePerson(\n      person: { id: $id, name: $name, note: $note, primaryLocation: $primaryLocation, user: $user, images: $images }\n    ) {\n      agent {\n        id\n        name\n        note\n        images {\n          name\n        }\n        primaryLocation {\n          id\n          lat\n          long\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/UpdateProfileForm.tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "loginUser($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      profile {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/mutations.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "addProfile($username: String!, $email: String!, $password: String!)", "content": "{\n    addProfile(username: $username, email: $email, password: $password) {\n      token\n      profile {\n        username\n        email\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/mutations.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "addCharacter($characterName: String!, $characterClass: String!)", "content": "{\n  addCharacter(character_name: $characterName, character_class: $characterClass) {\n    _id\n    character_name\n    character_class\n  }\n}", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/mutations.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "RemoveCharacter($characterId: ID!)", "content": "{\n    removeCharacter(characterId: $characterId) {\n      _id\n      character_name\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/mutations.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/pages/Signin.jsx", "repo": "Dr169_Air-condition"}}, {"type": "mutation", "name": "deleteUser($userId: ID!)", "content": "{\n    deleteUser(userId: $userId) {\n      success\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/AlertDialog.jsx", "repo": "Dr169_Air-condition"}}, {"type": "mutation", "name": "makeUser(\n    $email: String!\n    $firstName: String!\n    $lastName: String!\n    $password: String!\n    $phoneNumber: String!\n    $departmentName: ID!\n  )", "content": "{\n    createUser(\n      departmentName: $departmentName\n      email: $email\n      firstName: $firstName\n      lastName: $lastName\n      password: $password\n      phoneNumber: $phoneNumber\n    ) {\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/FormDialog.jsx", "repo": "Dr169_Air-condition"}}, {"type": "mutation", "name": "login ($email: String! $password: String! )", "content": "{\n  login(email: $email password: $password ){\n    token\n  }\n}", "metadata": {"commit_hash": "fded8f5e0ee7b70172ed1cc0aa2b3e6e551ed2c1", "file": "src/graphql/mutations.js", "repo": "Umoren_Vue-auth"}}, {"type": "mutation", "name": "createUser($name: String! $email: String! $password: String! )", "content": "{\n    createUser( name: $name, email: $email, password: $password) {\n      token\n    }\n}", "metadata": {"commit_hash": "fded8f5e0ee7b70172ed1cc0aa2b3e6e551ed2c1", "file": "src/graphql/mutations.js", "repo": "Umoren_Vue-auth"}}, {"type": "mutation", "name": "authenticate($token: String!)", "content": "{\n            authenticate(input: {token: $token}) {\n              user {\n                id\n              }\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botCreate", "content": "{\n          botCreate {\n            messages {\n              field\n              message\n            }\n            successful\n            result {\n              id\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userLocationGetToken", "content": "{\n          userLocationGetToken {\n            successful\n            messages {\n              message\n            }\n            result\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userLocationUpdate(\n          $input: UserLocationUpdateInput!\n        )", "content": "{\n          userLocationUpdate(\n            input: $input\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "notificationDelete($input: NotificationDeleteInput!)", "content": "{\n          notificationDelete(input: $input) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botInvite($input: BotInviteInput!)", "content": "{\n          botInvite(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botInvitationRespond($input: BotInvitationRespondInput!)", "content": "{\n          botInvitationRespond(input: $input) {\n            successful\n            result\n            messages {\n              message\n              field\n              code\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userUpdate($values: UserParams!)", "content": "{\n          userUpdate(input: {values: $values}) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userDelete", "content": "{\n          userDelete {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "mediaUpload($input: MediaUploadParams!)", "content": "{\n          mediaUpload(input: $input) {\n            messages {\n              field\n              message\n            }\n            successful\n            result {\n              id\n              headers {\n                name\n                value\n              }\n              method\n              referenceUrl\n              uploadUrl\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "friendInvite($input: FriendInviteInput!)", "content": "{\n          friendInvite(input: $input) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "friendShareUpdate($input: FriendShareUpdateInput!)", "content": "{\n          friendShareUpdate(input: $input) {\n            messages {\n              code\n              field\n              message\n            }\n            successful\n            result {\n              user {\n                id\n                handle\n              }\n              createdAt\n              shareConfig {\n                nearbyDistance\n                nearbyCooldown\n              }\n              shareType\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "friendDelete($input: FriendDeleteInput!)", "content": "{\n          friendDelete(input: $input) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userBlock($input: UserBlockInput!)", "content": "{\n          userBlock(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userUnblock($input: UserUnblockInput!)", "content": "{\n          userUnblock(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botUnsubscribe($input: BotUnsubscribeInput!)", "content": "{\n          botUnsubscribe(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "messageSend($input: MessageSendInput!)", "content": "{\n          messageSend(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "messageMarkRead($input: MessageMarkReadInput!)", "content": "{\n          messageMarkRead(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botDelete($input: BotDeleteInput!)", "content": "{\n          botDelete(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botItemDelete($input: BotItemDeleteInput!)", "content": "{\n          botItemDelete(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botUpdate(\n          $id: String!\n          $userLocation: UserLocationUpdateInput\n          $values: BotParams\n        )", "content": "{\n          botUpdate(input: {id: $id, userLocation: $userLocation, values: $values}) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botItemPublish($input: BotItemPublishInput!)", "content": "{\n          botItemPublish(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "pushNotificationsEnable($input: PushNotificationsEnableInput!)", "content": "{\n          pushNotificationsEnable(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "pushNotificationsDisable($input: PushNotificationsDisableInput!)", "content": "{\n          pushNotificationsDisable(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "mediaDelete($tros: String!)", "content": "{\n          mediaDelete(input: {url: $tros}) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userInviteRedeemCode($input: UserInviteRedeemCodeInput!)", "content": "{\n          userInviteRedeemCode(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userInviteSend($input: UserInviteSendInput!)", "content": "{\n          userInviteSend(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "presenceStatus(\n          $status: PresenceStatus!\n        )", "content": "{\n          presenceStatus(\n            input: {status: $status}\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userLocationRequestTrigger(\n          $userId: String!\n        )", "content": "{\n          userLocationRequestTrigger(\n            input: {userId: $userId}\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userFullAudit(\n          $enable: Boolean!\n        )", "content": "{\n          userFullAudit(\n            input: {enable: $enable}\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userInviteMakeUrl", "content": "{\n          userInviteMakeUrl {\n            result\n            successful\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "login($credentials: Credentials!)", "content": "{\n    login(credentials: $credentials) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/auth.js", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "signup($credentials: Credentials!)", "content": "{\n    signup(credentials: $credentials) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/auth.js", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "createTask($data: TaskCreateInput!)", "content": "{\n    createTask(data: $data) {\n      completed\n      createdAt\n      id\n      text\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/tasks.js", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "updateTask($data: TaskUpdateInput!, $where: TaskWhereUniqueInput!)", "content": "{\n    updateTask(data: $data, where: $where) {\n      completed\n      createdAt\n      id\n      text\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/tasks.js", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      roles\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "admin-ui/src/auth-provider/ra-auth-http.ts", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "admin-ui/src/auth-provider/ra-auth-jwt.ts", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "Login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        email\n        }\n      }\n    }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/mutations.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "mutation", "name": "AddUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/mutations.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "mutation", "name": "SaveCard($cardId: ID!, $name: String!, $image: String, $setName: String, $seriesName: String, $setImage: String, $rarity: String, $releaseDate: String)", "content": "{\n    saveCard(cardId: $cardId, name: $name, image: $image, setName: $setName, seriesName: $seriesName, setImage: $setImage, rarity: $rarity, releaseDate: $releaseDate) {\n      _id\n      username\n      email\n      savedCards {\n        cardId\n        name\n        image\n        setName\n        seriesName\n        setImage\n        rarity\n        releaseDate\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/mutations.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "mutation", "name": "RemoveCard($cardId: ID!)", "content": "{\n    removeCard(cardId: $cardId) {\n      _id\n      username\n      email\n      savedCards {\n        cardId\n        name\n        image\n        setName\n        seriesName\n        setImage\n        rarity\n        releaseDate\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/mutations.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux/components/Submit.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n    updatePost(id: $id, votes: $votes) {\n      id\n      __typename\n      votes\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux/components/PostUpvoter.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "Create($name: String!, $email: String!, $password: String!)", "content": "{\n    createUser(\n      name: $name\n      authProvider: { email: { email: $email, password: $password } }\n    ) {\n      id\n    }\n    signinUser(email: { email: $email, password: $password }) {\n      token\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-auth/components/RegisterBox.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "Signin($email: String!, $password: String!)", "content": "{\n    signinUser(email: { email: $email, password: $password }) {\n      token\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-auth/components/SigninBox.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n        createPost(title: $title, url: $url) {\n          id\n          title\n          votes\n          url\n          createdAt\n        }\n      }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo/components/Submit.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n        updatePost(id: $id, votes: $votes) {\n          id\n          __typename\n          votes\n        }\n      }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo/components/PostUpvoter.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux-saga/components/Submit.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n    updatePost(id: $id, votes: $votes) {\n      id\n      __typename\n      votes\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux-saga/components/PostVoteUp.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n    updatePost(id: $id, votes: $votes) {\n      id\n      __typename\n      votes\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux-saga/components/PostVoteDown.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "Signup($signUpInput: SignUpInput!)", "content": "{\n    signup(signUpInput: $signUpInput) {\n      user {\n        username\n        id\n        email\n      }\n      refreshToken\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/signup.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "UpdateUserAddress($input: UpdateAddressInput!)", "content": "{\n    updateUserAddress(input: $input) {\n      country\n      city\n      address\n      index\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "EditProfile($updateUserInput: UpdateUserInput!)", "content": "{\n    editProfile(updateUserInput: $updateUserInput) {\n      id\n      username\n      email\n      firstname\n      phone\n      lastname\n      patronymic\n      instagram\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "UpdateUserPayment($input: UpdatePaymentInput!)", "content": "{\n    updateUserPayment(input: $input) {\n      firstname\n      lastname\n      patronymic\n      number\n      cvv\n      month\n      year\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "CreateMyRoom($input: RoomCreateInput!)", "content": "{\n      createMyRoom(input: $input) {\n        id\n        ownerId\n        title\n        description\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "Mutation($newMessage: NewMessageInput!)", "content": "{\n      sendMessage(newMessage: $newMessage) {\n        id\n        userId\n        roomId\n        content\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "JoinToRoom($roomId: Float!)", "content": "{\n  joinToRoom(roomId: $roomId) {\n    username\n    firstname\n    lastname\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "LeaveFromRoom($roomId: Float!)", "content": "{\n  leaveFromRoom(roomId: $roomId) {\n    avatarUrl\n    lastname\n    firstname\n    username\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "Logout($logoutId: Int!)", "content": "{\n  logout(id: $logoutId) {\n    loggedOut\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/logout.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "Signin($signInInput: SignInInput!)", "content": "{\n  signin(signInInput: $signInInput) {\n    user {\n      username\n      id\n      email\n    }\n    refreshToken\n    accessToken\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/signin.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "CreateMyBid($input: CreateBidInput!)", "content": "{\n      createMyBid(input: $input) {\n        id\n        userId\n        auctionId\n        bitPrice\n        createdAt\n        updatedAt\n        user {\n          username\n          firstname\n          lastname\n          avatarUrl\n        }\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/auctions.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "CreateToken($data: CreateTokenInput!)", "content": "{\n  createToken(data: $data) {\n    updatedAt\n    title\n    sortOrder\n    points\n    price\n    id\n    description\n    createdAt\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/tokens.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "GetTokenById($getTokenByIdId: Int!)", "content": "{\n  getTokenById(id: $getTokenByIdId) {\n    createdAt\n    description\n    points\n    id\n    price\n    updatedAt\n    title\n    sortOrder\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/tokens.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "GetTokenById($updateTokenId: Int!, $data: UpdateTokenInput!)", "content": "{\n  updateToken(id: $updateTokenId, data: $data) {\n    createdAt\n    description\n    id\n    points\n    price\n    sortOrder\n    title\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/tokens.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "createSqlQuery", "content": "{\n        create_query {\n            success\n            error\n            result {\n                view_id\n                project {\n                    name\n                }\n                path\n                spec {\n                    ... on QuerySpec {\n                        query_text\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-web/create-query-button.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "updateQueryText($queryId: ID!, $queryText: String!)", "content": "{\n        update_query_text(id: $queryId, query_text: $queryText) {\n            success\n            error\n            result {\n                view_id\n                project {\n                    name\n                }\n                path\n                spec {\n                    ... on QuerySpec {\n                        query_text\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/query-editor.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "moveQuery(\n        $queryId: ID!\n        $projectName: String!\n        $queryPath: String!\n    )", "content": "{\n        move_view(\n            id: $queryId\n            project_name: $projectName\n            view_path: $queryPath\n        ) {\n            success\n            error\n            result {\n                view_id\n                project {\n                    name\n                }\n                path\n                spec {\n                    ... on QuerySpec {\n                        query_text\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/query-editor.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "createHistoryTable(\n        $sourceDbName: String!\n        $sourceTableName: String!\n    )", "content": "{\n        delete_view(id: $viewId) {\n            success\n            error\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/schema-settings.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "deleteView($viewId: ID!, $force: boolean!)", "content": "{\n        delete_view(id: $viewId, force_no_cleanup: $force) {\n            success\n            error\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/schema-settings.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "viewResultPreview($viewId: ID!)", "content": "{\n        preview_view_result(id: $viewId) {\n            success\n            error\n            result\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/view-result-preview.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "Login($email: String, $password: String)", "content": "{\n    login(email: $email, password: $password) {\n      id\n      email\n      firstName\n      lastName\n    }\n  }", "metadata": {"commit_hash": "1da721c31ef94e5172a7ed7719d575f484f67b1e", "file": "src/app/mutations/Login.js", "repo": "johncoffeeocean_with-nextjs-graphql-mongodb"}}, {"type": "mutation", "name": "Signup($firstName: String, $lastName: String, $email: String, $password: String)", "content": "{\n    signup(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      id\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "1da721c31ef94e5172a7ed7719d575f484f67b1e", "file": "src/app/mutations/Signup.js", "repo": "johncoffeeocean_with-nextjs-graphql-mongodb"}}, {"type": "mutation", "name": "InsertNode($type_id: Int)", "content": "{\n    insert_nodes(objects: { type_id: $type_id }) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "mutation", "name": "InsertNodes($objects: [nodes_insert_input!]!)", "content": "{\n    insert_nodes(objects: $objects) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "mutation", "name": "InsertLink($fromId: Int, $toId: Int, $type_id: Int)", "content": "{\n    insert_nodes(objects: { from_id: $fromId, to_id: $toId, type_id: $type_id }) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "mutation", "name": "Clear($type_id: Int)", "content": "{\n    delete_nodes__mp(where: { item: { type_id: { _eq: $type_id } } }) { affected_rows }\n    delete_nodes(where: { type_id: { _eq: $type_id } }) { affected_rows }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "mutation", "name": "DeleteNode($id: Int)", "content": "{\n    delete_nodes(where: { id: { _eq: $id } }) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "mutation", "name": "saveAccount($account:AccountVOInput)", "content": "{\n    saveAccount(account: $account){\n      id\n      updateDate\n      settings {\n        id\n        updateDate\n      }\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "mutation", "name": "sendAccountConfirmationEmail($email:String, $locale:String)", "content": "{\n    sendAccountConfirmationEmail(email: $email, locale: $locale)\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "mutation", "name": "confirmAccountEmail($email:String, $code:String)", "content": "{\n    confirmAccountEmail(email: $email, code: $code)\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "mutation", "name": "saveTrips($trips:[TripVOInput])", "content": "{\n    saveTrips(trips: $trips){\n      id\n      updateDate\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/trip-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "mutation", "name": "(\n      $title: String!,\n      $imageUrl:String!,\n      $categories: [String]!,\n      $variables: [String]!,\n      $description: String!,\n      $userId:ID!\n    )", "content": "{\n      addPost(\n        title:$title\n        imageUrl:$imageUrl\n        categories:$categories\n        variables:$variables\n        description:$description\n        userId:$userId\n      ){\n        _id\n        title\n        imageUrl\n        categories\n        variables\n        description\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n      $report_name: String!,\n      $report_desc: String!,\n      $template_name: [String]!,\n      $file_name: [String]!,\n      $project_id: [String]!,\n      $node_id: [String]!,\n      $variable: [String]!,\n      $previous: [String]!,\n      $modified: [String]!,\n      $userId:ID!\n    )", "content": "{\n      addReport(\n        report_name:$report_name\n        report_desc:$report_desc\n        template_name:$template_name\n        file_name:$file_name\n        project_id:$project_id\n        node_id:$node_id\n        variable:$variable\n        previous:$previous\n        modified:$modified\n        userId:$userId\n      ){\n        _id\n        report_name\n        report_desc\n        template_name\n        file_name\n        project_id\n        node_id\n        variable\n        previous\n        modified\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n      $title: String!,\n      $templateType:String!,\n      $content: String!,\n      $treeTemplate: [String]!,\n      $filenames: [String]!,\n      $filetypes: [String]!,\n      $userId:ID!\n    )", "content": "{\n      addTemplate(\n        title:$title\n        templateType:$templateType\n        content:$content\n        treeTemplate:$treeTemplate\n        filenames:$filenames\n        filetypes:$filetypes\n        userId:$userId\n      ){\n        _id\n        title\n        templateType\n        content\n        treeTemplate\n        filenames\n        filetypes\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n      $title: String!,\n      $templateType:String!,\n      $templates: [String]!,\n      $originalTemp:String!,\n      $newTemplates: [String]!,\n      $isUpdated:String!,\n      $node_ids: [String]!,\n      $project_ids: [String]!,\n      $file_names: [String]!,\n      $file_types: [String]!,\n      $userId:ID!\n    )", "content": "{\n      saveTemplates(\n        title:$title\n        templateType:$templateType\n        templates:$templates\n        originalTemp:$originalTemp\n        newTemplates:$newTemplates\n        isUpdated:$isUpdated\n        node_ids:$node_ids\n        project_ids:$project_ids\n        file_names:$file_names\n        file_types:$file_types\n        userId:$userId\n      ){\n        _id\n        title\n        templateType\n        templates\n        originalTemp\n        newTemplates\n        isUpdated\n        node_ids\n        project_ids\n        file_names\n        file_types\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n    $postId: ID!\n    $userId: ID!\n    $title: String!\n    $imageUrl: String!\n    $categories: [String]!\n    $variables: [String]!\n    $description: String!\n  )", "content": "{\n    updateUserPost(\n      postId: $postId\n      userId: $userId\n      title: $title\n      imageUrl: $imageUrl\n      categories: $categories\n      variables: $variables\n      description: $description\n    ) {\n      _id\n      title\n      imageUrl\n      description\n      categories\n      variables\n      createdDate\n      userId {\n        _id\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n      $templateId: ID!\n      $userId:ID!\n      $title: String!,\n      $templateType:String!,\n      $templates: [String]!,\n      $originalTemp:String!,\n      $newTemplates: [String]!,\n      $isUpdated:String!,\n      $node_ids: [String]!,\n      $project_ids: [String]!,\n      $file_names: [String]!,\n      $file_types: [String]!,\n    )", "content": "{\n      updateProcTemplate(\n        templateId: $templateId\n        userId:$userId\n        title:$title\n        templateType:$templateType\n        templates:$templates\n        originalTemp:$originalTemp\n        newTemplates:$newTemplates\n        isUpdated:$isUpdated\n        node_ids:$node_ids\n        project_ids:$project_ids\n        file_names:$file_names\n        file_types:$file_types\n      ){\n        _id\n        title\n        templateType\n        templates\n        originalTemp\n        newTemplates\n        isUpdated\n        node_ids\n        project_ids\n        file_names\n        file_types\n        userId {\n          _id\n          avatar\n        }\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n    $templateId: ID!\n    $userId: ID!\n    $title: String!\n    $templateType: String!\n    $content: String!\n    $treeTemplate: [String]!\n    $filenames: [String]!\n    $filetypes: [String]!\n  )", "content": "{\n    updateUserTemplate(\n      templateId: $templateId\n      userId: $userId\n      title: $title\n      templateType: $templateType\n      content: $content\n      treeTemplate: $treeTemplate\n      filenames: $filenames\n      filetypes: $filetypes\n    ) {\n      _id\n      title\n      templateType\n      content\n      treeTemplate\n      filenames\n      filetypes\n      createdDate\n      userId {\n        _id\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($postId: ID!)", "content": "{\n    deleteUserPost(postId: $postId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($templateId: ID!)", "content": "{\n    deleteUserTemplate (templateId: $templateId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($reportId: ID!)", "content": "{\n    deleteUserReport (reportId: $reportId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($templateId: ID!)", "content": "{\n    deleteUserSavedTemplate(templateId: $templateId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n      loginUser(\n        email: $email\n        password: $password\n      ) {\n        token\n        user {\n          _id\n          username\n          email\n          avatar\n        }\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($username: String!, $email: String!, $password: String!)", "content": "{\n      registerUser(\n        username: $username\n        email: $email\n        password: $password\n      ) {\n        token\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n\t\t\t\tdailyHints\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "addUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n\t\t\t\tdailyHints\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "addFriend($id: ID!)", "content": "{\n    addFriend(friendId: $id) {\n      _id\n      username\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "addFriendByUsername($username: String!)", "content": "{\n\t\taddFriendByUsername(username: $username) {\n\t\t\tfriends {\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "sendEmail($input:EmailInput!)", "content": "{\n\t\tsendEmail(input:$input) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "shareLobbyByEmail($room: String!, $to: [String]!)", "content": "{\n\t\tshareLobbyByEmail(room: $room, to: $to) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "sendFeedback($input: FeedbackInput!)", "content": "{\n\t\tsendFeedback(input: $input) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "sendNotification($NotificationInput: NotificationInput!)", "content": "{\n\t\tsendNotification(input: $NotificationInput) {\n\t\t\tvoid\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "newAlbum($input: AlbumInput!)", "content": "{\n    newAlbum(input: $input) {\n      AlbumName\n      Artist\n    }\n  }", "metadata": {"commit_hash": "b51fb08011eb7f9872aff7c5266f46d15eec0047", "file": "s3-react-app/src/components/Table/NewAlbum.tsx", "repo": "sudopla_react-cognito-appsync"}}, {"type": "mutation", "name": "createUser($input: UserInput!)", "content": "{\n    createUser(input: $input) {\n      email\n    }\n  }", "metadata": {"commit_hash": "b51fb08011eb7f9872aff7c5266f46d15eec0047", "file": "s3-react-app/src/components/NewUser/NewUser.tsx", "repo": "sudopla_react-cognito-appsync"}}, {"type": "mutation", "name": "upsertShippingAddress($data: PostAddressInput!)", "content": "{\n  upsertShippingAddress(data: $data) {\n    id\n    name\n    street\n    house\n    zip\n    cityGeonameid\n    city\n    state\n    country\n    notificationEmail\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "createPurchase($lines: [PurchaseLineInput!]!, $deliveryMethodId: Int!, $deliveryAddressId: Int)", "content": "{\n  purchase(\n    lines: $lines\n    deliveryMethodId: $deliveryMethodId\n    deliveryAddressId: $deliveryAddressId\n  ) {\n    id\n    buyerAddress\n    buyerProfile {\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n    sellerAddress\n    sellerProfile {\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n    purchaseId\n    lines {\n      id\n      amount\n      offer {\n        id\n        version\n        createdByAddress\n        createdByProfile {\n          id\n          circlesAddress\n          firstName\n          lastName\n          avatarUrl\n        }\n        pricePerUnit\n        title\n        description\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "requestSessionChallenge($address: String!)", "content": "{\n  requestSessionChallenge(address: $address)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "verifySessionChallenge($challenge: String!, $signature: String!)", "content": "{\n  verifySessionChallenge(challenge: $challenge, signature: $signature) {\n    success\n    errorMessage\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "addNewLang($langToCreate: String, $langToCopyFrom: String)", "content": "{\n  addNewLang(langToCreate: $langToCreate, langToCopyFrom: $langToCopyFrom)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "updateValue($lang: String, $key: String, $createdBy: String, $value: String)", "content": "{\n  updateValue(lang: $lang, key: $key, createdBy: $createdBy, value: $value) {\n    lang\n    key\n    createdBy\n    value\n    version\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "createNewStringAndKey($lang: String, $key: String, $createdBy: String, $version: Int, $value: String)", "content": "{\n  createNewStringAndKey(\n    lang: $lang\n    key: $key\n    createdBy: $createdBy\n    version: $version\n    value: $value\n  ) {\n    lang\n    key\n    createdBy\n    version\n    value\n    needsUpdate\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "setStringUpdateState($key: String)", "content": "{\n  setStringUpdateState(key: $key) {\n    lang\n    key\n    createdBy\n    version\n    value\n    needsUpdate\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "claimInvitation($code: String!)", "content": "{\n  claimInvitation(code: $code) {\n    success\n    claimedInvitation {\n      createdAt\n      createdByProfileId\n      claimedAt\n      claimedByProfileId\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "acknowledge($until: Date!, $safeAddress: String)", "content": "{\n  acknowledge(until: $until, safeAddress: $safeAddress)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "sendMessage($fromSafeAddress: String, $toSafeAddress: String!, $content: String!)", "content": "{\n  sendMessage(\n    fromSafeAddress: $fromSafeAddress\n    toSafeAddress: $toSafeAddress\n    content: $content\n  ) {\n    success\n    error\n    event {\n      block_number\n      direction\n      safe_address\n      safe_address_profile {\n        id\n        firstName\n        lastName\n        avatarUrl\n        circlesAddress\n      }\n      timestamp\n      transaction_hash\n      transaction_index\n      type\n      value\n      tags {\n        id\n        typeId\n        value\n      }\n      payload {\n        ... on ChatMessage {\n          id\n          from\n          from_profile {\n            id\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n          }\n          to\n          to_profile {\n            id\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n          }\n          text\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "addMember($groupId: String!, $memberAddress: String!)", "content": "{\n  addMember(groupId: $groupId, memberAddress: $memberAddress) {\n    error\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "removeMember($groupId: String!, $memberAddress: String!)", "content": "{\n  removeMember(groupId: $groupId, memberAddress: $memberAddress) {\n    error\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "redeemClaimedInvitation", "content": "{\n  redeemClaimedInvitation {\n    success\n    error\n    transactionHash\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "logout", "content": "{\n  logout {\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "tagTransaction($transactionHash: String!, $tag: CreateTagInput!)", "content": "{\n  tagTransaction(transactionHash: $transactionHash, tag: $tag) {\n    success\n    error\n    tag {\n      id\n      typeId\n      value\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertProfile($id: Int, $firstName: String!, $lastName: String, $emailAddress: String, $askedForEmailAddress: Boolean!, $dream: String, $country: String, $avatarUrl: String, $avatarCid: String, $avatarMimeType: String, $circlesAddress: String, $circlesSafeOwner: String, $newsletter: Boolean, $displayCurrency: DisplayCurrency, $displayTimeCircles: Boolean, $cityGeonameid: Int, $status: String!, $successorOfCirclesAddress: String, $gender: Gender, $age: Int)", "content": "{\n  upsertProfile(\n    data: {id: $id, firstName: $firstName, lastName: $lastName, emailAddress: $emailAddress, askedForEmailAddress: $askedForEmailAddress, dream: $dream, country: $country, avatarUrl: $avatarUrl, avatarCid: $avatarCid, avatarMimeType: $avatarMimeType, circlesAddress: $circlesAddress, circlesSafeOwner: $circlesSafeOwner, newsletter: $newsletter, displayCurrency: $displayCurrency, displayTimeCircles: $displayTimeCircles, cityGeonameid: $cityGeonameid, status: $status, successorOfCirclesAddress: $successorOfCirclesAddress, gender: $gender, age: $age}\n  ) {\n    id\n    circlesAddress\n    displayCurrency\n    circlesSafeOwner\n    invitationLink\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    emailAddress\n    askedForEmailAddress\n    dream\n    country\n    avatarUrl\n    avatarCid\n    avatarMimeType\n    newsletter\n    displayTimeCircles\n    displayCurrency\n    cityGeonameid\n    age\n    gender\n    city {\n      geonameid\n      name\n      country\n      latitude\n      longitude\n      population\n    }\n    memberships {\n      isAdmin\n      organisation {\n        id\n        circlesAddress\n        displayCurrency\n        displayName\n        circlesSafeOwner\n        name\n        description\n        avatarUrl\n        cityGeonameid\n        city {\n          geonameid\n          country\n          name\n          population\n        }\n      }\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertOrganisation($organisation: UpsertOrganisationInput!)", "content": "{\n  upsertOrganisation(organisation: $organisation) {\n    success\n    error\n    organisation {\n      id\n      avatarMimeType\n      avatarUrl\n      circlesAddress\n      circlesSafeOwner\n      cityGeonameid\n      city {\n        geonameid\n        country\n        name\n        latitude\n        longitude\n        population\n        feature_code\n      }\n      createdAt\n      description\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertRegion($organisation: UpsertOrganisationInput!)", "content": "{\n  upsertRegion(organisation: $organisation) {\n    success\n    error\n    organisation {\n      id\n      avatarMimeType\n      avatarUrl\n      circlesAddress\n      circlesSafeOwner\n      cityGeonameid\n      city {\n        geonameid\n        country\n        name\n        latitude\n        longitude\n        population\n        feature_code\n      }\n      createdAt\n      description\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "importOrganisations", "content": "{\n  importOrganisationsOfAccount {\n    id\n    circlesAddress\n    name\n    description\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "completePurchase($invoiceId: Int!, $revoke: Boolean)", "content": "{\n  completePurchase(invoiceId: $invoiceId, revoke: $revoke) {\n    id\n    sellerAddress\n    paymentTransactionHash\n    buyerAddress\n    pickupCode\n    buyerSignature\n    buyerSignedDate\n    sellerSignature\n    sellerSignedDate\n    purchase {\n      id\n    }\n    sellerProfile {\n      type\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "completeSale($invoiceId: Int!, $revoke: Boolean)", "content": "{\n  completeSale(invoiceId: $invoiceId, revoke: $revoke) {\n    id\n    sellerAddress\n    paymentTransactionHash\n    buyerAddress\n    pickupCode\n    buyerSignature\n    buyerSignedDate\n    sellerSignature\n    sellerSignedDate\n    sellerProfile {\n      type\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "verifySafe($safeAddress: String!)", "content": "{\n  verifySafe(safeAddress: $safeAddress) {\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "revokeSafeVerification($safeAddress: String!)", "content": "{\n  revokeSafeVerification(safeAddress: $safeAddress) {\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "announcePayment($invoiceId: Int!, $transactionHash: String!)", "content": "{\n  announcePayment(invoiceId: $invoiceId, transactionHash: $transactionHash) {\n    transactionHash\n    invoiceId\n    pickupCode\n    simplePickupCode\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertShop($shop: ShopInput!)", "content": "{\n  upsertShop(shop: $shop) {\n    id\n    name\n    description\n    legalText\n    smallBannerUrl\n    largeBannerUrl\n    openingHours\n    adultOnly\n    private\n    productListingStyle\n    owner {\n      id\n      name\n      avatarUrl\n      circlesAddress\n    }\n    categories {\n      id\n      name\n      description\n      sortOrder\n      enabled\n      private\n      largeBannerUrl\n      smallBannerUrl\n      productListingStyle\n      createdAt\n      entries {\n        id\n        sortOrder\n        product {\n          id\n          version\n          title\n          description\n          currentInventory\n          pictureUrl\n          pricePerUnit\n          createdByProfile {\n            id\n            displayName\n            avatarUrl\n            circlesAddress\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertShopCategories($shopCategories: [ShopCategoryInput!]!)", "content": "{\n  upsertShopCategories(shopCategories: $shopCategories) {\n    inserted\n    updated\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertShopCategoryEntries($shopCategoryEntries: [ShopCategoryEntryInput!]!)", "content": "{\n  upsertShopCategoryEntries(shopCategoryEntries: $shopCategoryEntries) {\n    inserted\n    updated\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "confirmLegalAge($age: Int!)", "content": "{\n  confirmLegalAge(age: $age)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertOffer($offer: OfferInput!)", "content": "{\n  upsertOffer(offer: $offer) {\n    id\n    version\n    createdAt\n    createdByAddress\n    title\n    description\n    pictureUrl\n    pricePerUnit\n    minAge\n    currentInventory\n    timeCirclesPriceShare\n    tags {\n      typeId\n      value\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "proofUniqueness($humanodeToken: String!)", "content": "{\n  proofUniqueness(humanodeToken: $humanodeToken) {\n    existingSafe\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "SaveSurveyMutation($surveyId: String!, $submissionId: String!, $answers: [InputSurveyAnswer]!)", "content": "{\n        submitSurveyResponse(surveyId: $surveyId, submissionId: $submissionId, answers: $answers) {\n            id\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/survey/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SetLogoutError", "content": "{\n        setLogoutError @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/core/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "StartSubmision($articleType: String!)", "content": "{\n        startSubmission(articleType: $articleType) {\n            id\n            lastStepVisited\n            manuscriptDetails {\n                title\n            }\n            updated\n            articleType\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/dashboard/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "DeleteSubmission($id: ID!)", "content": "{\n        deleteSubmission(id: $id)\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/dashboard/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveArticleType($id: ID!, $articleType: String!)", "content": "{\n        saveArticleType(id: $id, articleType: $articleType) {\n            id\n            updated\n            lastStepVisited\n            articleType\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/dashboard/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveAuthorPage($id: ID!, $details: AuthorDetailsInput!)", "content": "{\n        saveAuthorPage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            author {\n                firstName\n                lastName\n                email\n                institution\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveFilesPage($id: ID!, $coverLetter: String)", "content": "{\n        saveFilesPage(id: $id, coverLetter: $coverLetter) {\n            id\n            lastStepVisited\n            files {\n                coverLetter\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "UploadManuscript($id: ID!, $file: Upload!, $fileSize: Int!)", "content": "{\n        uploadManuscript(id: $id, file: $file, fileSize: $fileSize) {\n            id\n            suggestions {\n                fieldName\n                value\n            }\n            files {\n                manuscriptFile {\n                    filename\n                    url\n                    downloadLink\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "UploadSupportingFile($id: ID!, $file: Upload!, $fileSize: Int!)", "content": "{\n        uploadSupportingFile(id: $id, file: $file, fileSize: $fileSize) {\n            id\n            filename\n            url\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveDetailsPage($id: ID!, $details: ManuscriptDetailsInput!)", "content": "{\n        saveDetailsPage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            manuscriptDetails {\n                title\n                subjects\n                previouslyDiscussed\n                previouslySubmitted\n                cosubmission\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "DeleteSupportingFile($fileId: ID!, $submissionId: ID!)", "content": "{\n        deleteSupportingFile(fileId: $fileId, submissionId: $submissionId)\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveEditorPage($id: ID!, $details: EditorDetailsInput!)", "content": "{\n        saveEditorPage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            editorDetails {\n                suggestedSeniorEditors\n                opposedSeniorEditors\n                opposedSeniorEditorsReason\n                suggestedReviewingEditors\n                opposedReviewingEditors\n                opposedReviewingEditorsReason\n                suggestedReviewers {\n                    name\n                    email\n                }\n                opposedReviewers {\n                    name\n                    email\n                }\n                opposedReviewersReason\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveDisclosurePage($id: ID!, $details: DisclosureDetailsInput!)", "content": "{\n        saveDisclosurePage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            disclosure {\n                submitterSignature\n                disclosureConsent\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "Submit($id: ID!)", "content": "{\n        submit(id: $id) {\n            id\n            status\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "ClearError", "content": "{\n        clearError @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SetLogoutError", "content": "{\n        setLogoutError @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SetValidationError", "content": "{\n        setValidationError @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "generateStartup($keyword: String!)", "content": "{\n  generateStartup(keyword: $keyword) {\n    id\n    name\n    valueProposition\n    keyword\n    colorScheme\n  }\n}", "metadata": {"commit_hash": "b1cd78e068ae27b14a38c22dd8e257ef8de5d1c5", "file": "frontend/src/generated/graphql.tsx", "repo": "jdiebold_foundst-rs"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "addUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        email\n        highScore\n        lastScore\n        friends {\n          _id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "saveScore($value: Int!, $highScore: Boolean!, $difficulty: String, $player: ID!)", "content": "{\n    saveScore(value: $value, highScore: $highScore, difficulty: $difficulty, player: $player){\n      value\n      highScore\n      difficulty\n      player {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "updateOldHigh($difficulty: String, $player: ID!)", "content": "{\n    updateOldHigh(difficulty: $difficulty, player: $player) {\n      value\n      highScore\n      difficulty\n      player {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "updatePlayerHigh($_id: ID!, $highScore: Int!)", "content": "{\n    updatePlayerHigh(_id: $_id, highScore: $highScore) {\n      _id\n      highScore\n      lastScore\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "lastScore($_id: ID!, $lastScore: Int!)", "content": "{\n    lastScore(_id: $_id, lastScore: $lastScore) {\n      _id\n      lastScore\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "deleteScores($player: ID!)", "content": "{\n    deleteScores(player: $player) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "Register($firstName: String!, $lastName: String!, $emailAddress: String!, $phoneNumber: String!, $username: String!, $password: String!)", "content": "{\n    registerUser(firstName: $firstName, lastName: $lastName, emailAddress: $emailAddress, phoneNumber: $phoneNumber, username: $username, password: $password) {\n      firstName\n      lastName\n      emailAddress\n      phoneNumber\n      username\n      password\n    }\n  }", "metadata": {"commit_hash": "4fe648cefe060e8df7f5238510ada4b7b1525ccf", "file": "src/graphql/mutations/index.js", "repo": "bitabs_fullstack-course"}}, {"type": "mutation", "name": "AddInboxMutation($name: String!, $email: String!, $contact: String!, $message: String!)", "content": "{\n        insert_inboxes(objects: {name: $name, email: $email, contact: $contact, message: $message}) {\n            affected_rows\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/mutations/inboxes.js", "repo": "v08nike_ESL-Learning-Center"}}, {"type": "mutation", "name": "AddStudentMutation($firebase_id: String!, $firstname: String!, $lastname: String!, $email: String, $contact: String, $gender: String, $birth_date: String, $password: String!)", "content": "{\n        insert_students(objects: {firebase_id: $firebase_id, firstname: $firstname, lastname: $lastname, email: $email, contact: $contact, gender: $gender, birth_date: $birth_date, password: $password}) {\n            affected_rows\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/mutations/students.js", "repo": "v08nike_ESL-Learning-Center"}}, {"type": "mutation", "name": "UpdateStudentMutation($id: uuid!, $firstname: String, $lastname: String, $contact: String, $gender: String, $birth_date: String)", "content": "{\n        update_students(where: {id: {_eq: $id}}, _set: {firstname: $firstname, lastname: $lastname, contact: $contact, gender: $gender, birth_date: $birth_date}) {\n            affected_rows\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/mutations/students.js", "repo": "v08nike_ESL-Learning-Center"}}, {"type": "mutation", "name": "Login($code: String!)", "content": "{\n  login(code: $code) {\n    access_token\n    expires_in\n    refresh_token\n    user_id\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "Refresh($token: String!)", "content": "{\n  refresh(token: $token) {\n    access_token\n    expires_in\n    refresh_token\n    user_id\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "createRun($startDate: String!, $endDate: String!, $startTime: String!, $endTime: String!, $intensityFB: Int!)", "content": "{\n  createRun(\n    startDate: $startDate\n    endDate: $endDate\n    startTime: $startTime\n    endTime: $endTime\n    intensity: $intensityFB\n  ) {\n    userId\n    date\n    duration\n    heartRate\n    vo2max\n    intensityFeedback\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "resyncRun($startDate: String!, $startTime: String!, $duration: Int!, $intensityFeedback: Int!)", "content": "{\n  resyncRun(\n    startDate: $startDate\n    startTime: $startTime\n    duration: $duration\n    intensity: $intensityFeedback\n  ) {\n    userId\n    date\n    duration\n    heartRate\n    vo2max\n    intensityFeedback\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "AnalyticsObservation($event: String!, $payload: String)", "content": "{\n  createEvent(event: $event, payload: $payload) {\n    user\n    event\n    payload\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "AddSleepVariable($name: String!, $emoji: String!, $sleepDate: String!, $custom: Boolean!)", "content": "{\n  addSleepVariable(\n    custom: $custom\n    emoji: $emoji\n    name: $name\n    sleepDate: $sleepDate\n  ) {\n    date\n    variables {\n      name\n      emoji\n      custom\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "RemoveSleepVariable($name: String!, $sleepDate: String!)", "content": "{\n  removeSleepVariable(name: $name, sleepDate: $sleepDate) {\n    date\n    variables {\n      name\n      emoji\n      custom\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "TrackVariable($name: String!)", "content": "{\n  trackVariable(name: $name)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "UntrackVariable($name: String!)", "content": "{\n  untrackVariable(name: $name)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "UpdateDefaultRunDuration($duration: Int!)", "content": "{\n  updateDefaultRunDuration(duration: $duration)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "MarkFeatureSeen($feature: String!)", "content": "{\n  markFeatureSeen(feature: $feature)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "sendFriendRequest($friendId: ID!)", "content": "{\n  sendFriendRequest(friendId: $friendId)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "acceptFriendRequest($friendId: ID!)", "content": "{\n  acceptFriendRequest(friendId: $friendId) {\n    id\n    firstName\n    lastName\n    avatarUrl\n    xp\n    emblem\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "rejectFriendRequest($friendId: ID!)", "content": "{\n  rejectFriendRequest(friendId: $friendId)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "CompleteOnboarding($firstName: String!, $lastName: String!, $experience: ExperienceLevel!, $dob: String!)", "content": "{\n  completeOnboarding(\n    experience: $experience\n    firstName: $firstName\n    lastName: $lastName\n    dob: $dob\n  ) {\n    id\n    firstName\n    lastName\n    experience\n    stage\n    dob\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "UpdateProfile($firstName: String!, $lastName: String!, $dob: String!)", "content": "{\n  updateProfile(dob: $dob, firstName: $firstName, lastName: $lastName) {\n    firstName\n    lastName\n    dob\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "updateProfilePic($avatarUrl: String!)", "content": "{\n  updateProfilePic(avatarUrl: $avatarUrl) {\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "UpdateEmblem($emblem: String!)", "content": "{\n  updateEmblem(emblem: $emblem)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "CreateSleepVariable($name: String!, $emoji: String!)", "content": "{\n  createSleepVariable(emoji: $emoji, name: $name) {\n    name\n    emoji\n    custom\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "updateInRun($inRun: InRun!)", "content": "{\n  updateInRun(inRun: $inRun) {\n    inRun\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "updateNextRunTimes($nextRunStart: String!, $nextRunEnd: String!)", "content": "{\n  updateNextRunTimes(nextRunEnd: $nextRunEnd, nextRunStart: $nextRunStart) {\n    nextRunStart\n    nextRunEnd\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "updateRunParams($intensityFeedback: Int!)", "content": "{\n  updateRunParams(intensityFeedback: $intensityFeedback) {\n    lastIntensityFeedback\n    currentRunParams {\n      highIntensity\n      lowIntensity\n      repetitions\n      sets\n      restPeriod\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "updateBook($id: ID, $name: String!)", "content": "{\n    updateBook(id: $id, name: $name) {\n      name\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/01_GraphQL/frontend/src/components/Form/mutations.js", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "AddBook($authorId: ID, $name: String!)", "content": "{\n    addBook(authorId: $authorId, name: $name) {\n      name\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/01_GraphQL/frontend/src/components/Form/mutations.js", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "DeleteBook($id: ID)", "content": "{\n    deleteBook(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/01_GraphQL/frontend/src/components/Form/mutations.js", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($registerUser: UserInput)", "content": "{\n    register(user: $registerUser) {\n      user {\n        createdAt\n        email\n        username\n        id\n      }\n      error {\n        name\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/register.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($email: String!)", "content": "{\n    sendEmail(email: $email) {\n      message\n      error {\n        name\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/requetsResetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($resetPasswordEmailInput: ResetInput!)", "content": "{\n    resetPassword(emailInput: $resetPasswordEmailInput) {\n      error {\n        message\n        name\n      }\n      user {\n        email\n        createdAt\n        username\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/resetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($loginUser: UserInput)", "content": "{\n    login(user: $loginUser) {\n      user {\n        createdAt\n        email\n        username\n        id\n      }\n      error {\n        name\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/login.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($registerUser: UserInput)", "content": "{\n    register(user: $registerUser) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        email\n        username\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/register.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($sendEmailEmail: String!)", "content": "{\n    sendEmail(email: $sendEmailEmail) {\n      error {\n        message\n        name\n      }\n      message\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/requetsResetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($resetPasswordEmailInput: ResetInput!)", "content": "{\n    resetPassword(emailInput: $resetPasswordEmailInput) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        email\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/resetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($loginUser: UserInput)", "content": "{\n    login(user: $loginUser) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        username\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/login.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "Register($input: UserInput!)", "content": "{\n    register(input: $input) {\n      error {\n        message\n        field\n      }\n      user {\n        username\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/register.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($sendEmailEmail: String!)", "content": "{\n    sendEmail(email: $sendEmailEmail) {\n      error {\n        message\n        name\n      }\n      message\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/requetsResetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($resetPasswordEmailInput: ResetInput!)", "content": "{\n    resetPassword(emailInput: $resetPasswordEmailInput) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        email\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/resetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($loginUser: UserInput)", "content": "{\n    login(user: $loginUser) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        username\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/login.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "PredictSnakeSpicie($input: PredictionInputType!)", "content": "{\n    predictSnake(input: $input) {\n      error {\n        field\n        message\n      }\n      ok\n      prediction {\n        topPrediction {\n          label\n          probability\n          className\n          specie {\n            id\n            specieName\n            commonName\n          }\n        }\n        predictions {\n          label\n          probability\n          className\n          specie {\n            id\n            specieName\n            commonName\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/21_GRAPHQL_FILE_UPLOADS/02_GRAPH_QL_UPLOAD_REACT/client/src/App.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "Login($email: String!, $password: String!)", "content": "{\n  login(email: $email, password: $password) {\n    accessToken\n    user {\n      userId\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "Logout", "content": "{\n  logout\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "Register($email: String!, $password: String!)", "content": "{\n  register(email: $email, password: $password) {\n    accessToken\n    user {\n      userId\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "register(\n\t\t$username: String!\n\t\t$passwordHash: String!\n\t\t$confirmHash: String!\n\t\t$email: String!\n\t)", "content": "{\n\t\tregister(\n\t\t\tregisterInput: {\n\t\t\t\tusername: $username\n\t\t\t\tpasswordHash: $passwordHash\n\t\t\t\tconfirmHash: $confirmHash\n\t\t\t\temail: $email\n\t\t\t}\n\t\t) {\n\t\t\tusername\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "login($username: String!, $passwordHash: String!)", "content": "{\n\t\tlogin(username: $username, passwordHash: $passwordHash) {\n\t\t\tid\n\t\t\temail\n\t\t\tusername\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "sendInvitation($friendName: String!)", "content": "{\n\t\tsendInvitation(friendName: $friendName)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "acceptInvitation($friendName: String!)", "content": "{\n\t\tacceptInvitation(friendName: $friendName)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "declineInvitation($friendName: String!)", "content": "{\n\t\tdeclineInvitation(friendName: $friendName)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "createFarm($farmName: String!, $farmType: String!)", "content": "{\n\t\tcreateFarm(farmName: $farmName, farmType: $farmType) {\n\t\t\tid\n\t\t\tfarmName\n\t\t\tfarmType\n\t\t\tmembers {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\tchunks {\n\t\t\t\tid\n\t\t\t\tcoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t}\n\t\t\tplants {\n\t\t\t\tid\n\t\t\t\tplantType\n\t\t\t\ttitle\n\t\t\t\tbody\n\t\t\t\tchunkCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tplantCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tauthor\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "createPlant(\n\t\t$farmId: ID!\n\t\t$plantType: String!\n\t\t$title: String!\n\t\t$body: String!\n\t\t$chunkCoordinates: CoordinateInput!\n\t\t$plantCoordinates: CoordinateInput!\n\t)", "content": "{\n\t\tcreatePlant(\n\t\t\tplantInput: {\n\t\t\t\tfarmId: $farmId\n\t\t\t\tplantType: $plantType\n\t\t\t\ttitle: $title\n\t\t\t\tbody: $body\n\t\t\t\tchunkCoordinates: $chunkCoordinates\n\t\t\t\tplantCoordinates: $plantCoordinates\n\t\t\t}\n\t\t) {\n\t\t\tplantType\n\t\t\ttitle\n\t\t\tbody\n\t\t\tchunkCoordinates {\n\t\t\t\tx\n\t\t\t\ty\n\t\t\t}\n\t\t\tplantCoordinates {\n\t\t\t\tx\n\t\t\t\ty\n\t\t\t}\n\t\t\tauthor\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "editPlant(\n\t\t$farmId: ID!\n\t\t$plantId: ID\n\t\t$plantType: String\n\t\t$title: String\n\t\t$body: String\n\t\t$chunkCoordinates: CoordinateInput\n\t\t$plantCoordinates: CoordinateInput\n\t)", "content": "{\n\t\teditPlant(\n\t\t\tplantInput: {\n\t\t\t\tfarmId: $farmId\n\t\t\t\tplantId: $plantId\n\t\t\t\tplantType: $plantType\n\t\t\t\ttitle: $title\n\t\t\t\tbody: $body\n\t\t\t\tchunkCoordinates: $chunkCoordinates\n\t\t\t\tplantCoordinates: $plantCoordinates\n\t\t\t}\n\t\t) {\n\t\t\tid\n\t\t\tplantType\n\t\t\ttitle\n\t\t\tbody\n\t\t\tchunkCoordinates {\n\t\t\t\tx\n\t\t\t\ty\n\t\t\t}\n\t\t\tplantCoordinates {\n\t\t\t\tx\n\t\t\t\ty\n\t\t\t}\n\t\t\tauthor\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "deletePlant($farmId: ID!, $plantId: ID!)", "content": "{\n\t\tdeletePlant(farmId: $farmId, plantId: $plantId)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "leaveFarm($farmId: ID!)", "content": "{\n\t\tleaveFarm(farmId: $farmId)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "addFarmer($farmId: ID!, $friendId: ID!)", "content": "{\n\t\taddFarmer(farmId: $farmId, friendId: $friendId)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "editProfile($newProfile: String!)", "content": "{\n\t\teditProfile(newProfile: $newProfile)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "addChunk($farmId: ID!, $chunkCoordinates: CoordinateInput!)", "content": "{\n\t\taddChunk(\n\t\t\tfarmId: $farmId,\n\t\t\tchunkCoordinates: $chunkCoordinates\n\t\t)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "toggleProjectVisibility($projectID: UUID!, $isPublic: Boolean!)", "content": "{\n    toggleProjectVisibility(input: { projectID: $projectID, isPublic: $isPublic }) {\n      project {\n        id\n        publicOn\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/toggleProjectVisibility.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "notificationMarkAllRead", "content": "{\n    notificationMarkAllRead {\n      success\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/notifictionMarkAllRead.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "notificationToggleRead($notifiedID: UUID!)", "content": "{\n    notificationToggleRead(input: { notifiedID: $notifiedID }) {\n      id\n      read\n      readAt\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/notificationToggleRead.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistItemName($taskChecklistItemID: UUID!, $name: String!)", "content": "{\n    updateTaskChecklistItemName(input: { taskChecklistItemID: $taskChecklistItemID, name: $name }) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistItemName.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskChecklistItem($taskChecklistID: UUID!, $name: String!, $position: Float!)", "content": "{\n    createTaskChecklistItem(input: { taskChecklistID: $taskChecklistID, name: $name, position: $position }) {\n      id\n      name\n      taskChecklistID\n      position\n      complete\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/createTaskChecklistItem.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "setTaskChecklistItemComplete($taskChecklistItemID: UUID!, $complete: Boolean!)", "content": "{\n    setTaskChecklistItemComplete(input: { taskChecklistItemID: $taskChecklistItemID, complete: $complete }) {\n      id\n      complete\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/setTaskChecklistItemComplete.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskComment($commentID: UUID!, $message: String!)", "content": "{\n    updateTaskComment(input: { commentID: $commentID, message: $message }) {\n      comment {\n        id\n        updatedAt\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskComment.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistItemLocation($taskChecklistID: UUID!, $taskChecklistItemID: UUID!, $position: Float!)", "content": "{\n    updateTaskChecklistItemLocation(\n      input: { taskChecklistID: $taskChecklistID, taskChecklistItemID: $taskChecklistItemID, position: $position }\n    ) {\n      taskChecklistID\n      prevChecklistID\n      checklistItem {\n        id\n        taskChecklistID\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistItemLocation.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "toggleTaskWatch($taskID: UUID!)", "content": "{\n    toggleTaskWatch(input: { taskID: $taskID }) {\n      id\n      watched\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/toggleTaskWatcher.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "setTaskComplete($taskID: UUID!, $complete: Boolean!)", "content": "{\n  setTaskComplete(input: { taskID: $taskID, complete: $complete }) {\n    ...TaskFields\n  }\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/setTaskComplete.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistLocation($taskChecklistID: UUID!, $position: Float!)", "content": "{\n    updateTaskChecklistLocation(input: { taskChecklistID: $taskChecklistID, position: $position }) {\n      checklist {\n        id\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistLocation.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTask($taskGroupID: UUID!, $name: String!, $position: Float!, $assigned: [UUID!])", "content": "{\n    createTask(input: { taskGroupID: $taskGroupID, name: $name, position: $position, assigned: $assigned }) {\n      ...TaskFields\n    }\n  }\n  ${TASK_FRAGMENT}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/createTask.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskComment($taskID: UUID!, $message: String!)", "content": "{\n    createTaskComment(input: { taskID: $taskID, message: $message }) {\n      taskID\n      comment {\n        id\n        message\n        pinned\n        createdAt\n        updatedAt\n        createdBy {\n          id\n          fullName\n          profileIcon {\n            initials\n            bgColor\n            url\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/createTaskComment.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistName($taskChecklistID: UUID!, $name: String!)", "content": "{\n    updateTaskChecklistName(input: { taskChecklistID: $taskChecklistID, name: $name }) {\n      id\n      name\n      position\n      items {\n        id\n        name\n        taskChecklistID\n        complete\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistName.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskChecklist($taskChecklistID: UUID!)", "content": "{\n    deleteTaskChecklist(input: { taskChecklistID: $taskChecklistID }) {\n      ok\n      taskChecklist {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/deleteTaskChecklist.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskChecklist($taskID: UUID!, $name: String!, $position: Float!)", "content": "{\n    createTaskChecklist(input: { taskID: $taskID, name: $name, position: $position }) {\n      id\n      name\n      position\n      items {\n        id\n        name\n        taskChecklistID\n        complete\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/createTaskChecklist.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskComment($commentID: UUID!)", "content": "{\n    deleteTaskComment(input: { commentID: $commentID }) {\n      commentID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/deleteTaskComment.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskChecklistItem($taskChecklistItemID: UUID!)", "content": "{\n    deleteTaskChecklistItem(input: { taskChecklistItemID: $taskChecklistItemID }) {\n      ok\n      taskChecklistItem {\n        id\n        taskChecklistID\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/deleteTaskChecklistItem.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "duplicateTaskGroup($taskGroupID: UUID!, $name: String!, $position: Float!, $projectID: UUID!)", "content": "{\n  duplicateTaskGroup(\n  input: {\n    projectID: $projectID\n    taskGroupID: $taskGroupID\n    name: $name\n    position: $position\n  }\n  ) {\n    taskGroup {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/duplicateTaskGroup.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskGroupTasks($taskGroupID: UUID!)", "content": "{\n    deleteTaskGroupTasks(input: { taskGroupID: $taskGroupID }) {\n      tasks\n      taskGroupID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/deleteTaskGroupTasks.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "sortTaskGroup($tasks: [TaskPositionUpdate!]!, $taskGroupID: UUID!)", "content": "{\n    sortTaskGroup(input: { taskGroupID: $taskGroupID, tasks: $tasks }) {\n      taskGroupID\n      tasks {\n        id\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/sortTaskGroup.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskGroupName($taskGroupID: UUID!, $name: String!)", "content": "{\n  updateTaskGroupName(input:{taskGroupID:$taskGroupID, name:$name}) {\n    id\n    name\n  }\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/updateTaskGroupName.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTeamMemberRole($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateTeamMemberRole(input: { teamID: $teamID, userID: $userID, roleCode: $roleCode }) {\n      member {\n        id\n        role {\n          code\n          name\n        }\n      }\n      teamID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/updateTeamMemberRole.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTeam($teamID: UUID!)", "content": "{\n    deleteTeam(input: { teamID: $teamID }) {\n      ok\n      team {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/deleteTeam.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTeamMember($userID: UUID!, $teamID: UUID!)", "content": "{\n    createTeamMember(input: { userID: $userID, teamID: $teamID }) {\n      team {\n        id\n      }\n      teamMember {\n        id\n        username\n        fullName\n        role {\n          code\n          name\n        }\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/createTeamMember.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTeamMember($teamID: UUID!, $userID: UUID!, $newOwnerID: UUID)", "content": "{\n    deleteTeamMember(input: { teamID: $teamID, userID: $userID, newOwnerID: $newOwnerID }) {\n      teamID\n      userID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/deleteTeamMember.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTeam($name: String!, $organizationID: UUID!)", "content": "{\n    createTeam(input: { name: $name, organizationID: $organizationID }) {\n      id\n      createdAt\n      name\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/createTeam.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteInvitedUserAccount($invitedUserID: UUID!)", "content": "{\n    deleteInvitedUserAccount(input: { invitedUserID: $invitedUserID }) {\n      invitedUser {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/deleteInvitedUser.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserRole($userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateUserRole(input: { userID: $userID, roleCode: $roleCode }) {\n      user {\n        id\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/updateUserRole.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserInfo($name: String!, $initials: String!, $email: String!, $bio: String!)", "content": "{\n    updateUserInfo(input: { name: $name, initials: $initials, email: $email, bio: $bio }) {\n      user {\n        id\n        email\n        fullName\n        bio\n        profileIcon {\n          initials\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/updateUserInfo.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createUserAccount(\n    $username: String!\n    $roleCode: String!\n    $email: String!\n    $fullName: String!\n    $initials: String!\n    $password: String!\n  )", "content": "{\n    createUserAccount(\n      input: {\n        roleCode: $roleCode\n        username: $username\n        email: $email\n        fullName: $fullName\n        initials: $initials\n        password: $password\n      }\n    ) {\n      id\n      email\n      fullName\n      initials\n      username\n      bio\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      role {\n        code\n        name\n      }\n      owned {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n      member {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/createUser.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteUserAccount($userID: UUID!, $newOwnerID: UUID)", "content": "{\n    deleteUserAccount(input: { userID: $userID, newOwnerID: $newOwnerID }) {\n      ok\n      userAccount {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/deleteUser.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserPassword($userID: UUID!, $password: String!)", "content": "{\n    updateUserPassword(input: { userID: $userID, password: $password }) {\n      ok\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/updateUserPassword.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "inviteProjectMembers($projectID: UUID!, $members: [MemberInvite!]!)", "content": "{\n    inviteProjectMembers(input: { projectID: $projectID, members: $members }) {\n      ok\n      invitedMembers {\n        email\n        invitedOn\n      }\n      members {\n        id\n        fullName\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n        username\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/inviteProjectMembers.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProject($projectID: UUID!)", "content": "{\n    deleteProject(input: { projectID: $projectID }) {\n      ok\n      project {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/deleteProject.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteInvitedProjectMember($projectID: UUID!, $email: String!)", "content": "{\n    deleteInvitedProjectMember(input: { projectID: $projectID, email: $email }) {\n      invitedMember {\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/deleteProjectInvitedMember.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProjectMember($projectID: UUID!, $userID: UUID!)", "content": "{\n    deleteProjectMember(input: { projectID: $projectID, userID: $userID }) {\n      ok\n      member {\n        id\n      }\n      projectID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/deleteProjectMember.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateProjectMemberRole($projectID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateProjectMemberRole(input: { projectID: $projectID, userID: $userID, roleCode: $roleCode }) {\n      ok\n      member {\n        id\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/updateProjectMemberRole.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "assignTask($taskID: UUID!, $userID: UUID!)", "content": "{\n  assignTask(input: {taskID: $taskID, userID: $userID}) {\n    id\n    assigned {\n      id\n      fullName\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "clearProfileAvatar", "content": "{\n  clearProfileAvatar {\n    id\n    fullName\n    profileIcon {\n      initials\n      bgColor\n      url\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createProject($teamID: UUID, $name: String!)", "content": "{\n  createProject(input: {teamID: $teamID, name: $name}) {\n    id\n    shortId\n    name\n    team {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createProjectLabel($projectID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  createProjectLabel(\n    input: {projectID: $projectID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskGroup($projectID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskGroup(\n    input: {projectID: $projectID, name: $name, position: $position}\n  ) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProjectLabel($projectLabelID: UUID!)", "content": "{\n  deleteProjectLabel(input: {projectLabelID: $projectLabelID}) {\n    id\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTask($taskID: UUID!)", "content": "{\n  deleteTask(input: {taskID: $taskID}) {\n    taskID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskGroup($taskGroupID: UUID!)", "content": "{\n  deleteTaskGroup(input: {taskGroupID: $taskGroupID}) {\n    ok\n    affectedRows\n    taskGroup {\n      id\n      tasks {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "notificationToggleRead($notifiedID: UUID!)", "content": "{\n  notificationToggleRead(input: {notifiedID: $notifiedID}) {\n    id\n    read\n    readAt\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "notificationMarkAllRead", "content": "{\n  notificationMarkAllRead {\n    success\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProject($projectID: UUID!)", "content": "{\n  deleteProject(input: {projectID: $projectID}) {\n    ok\n    project {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteInvitedProjectMember($projectID: UUID!, $email: String!)", "content": "{\n  deleteInvitedProjectMember(input: {projectID: $projectID, email: $email}) {\n    invitedMember {\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProjectMember($projectID: UUID!, $userID: UUID!)", "content": "{\n  deleteProjectMember(input: {projectID: $projectID, userID: $userID}) {\n    ok\n    member {\n      id\n    }\n    projectID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "inviteProjectMembers($projectID: UUID!, $members: [MemberInvite!]!)", "content": "{\n  inviteProjectMembers(input: {projectID: $projectID, members: $members}) {\n    ok\n    invitedMembers {\n      email\n      invitedOn\n    }\n    members {\n      id\n      fullName\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      username\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateProjectMemberRole($projectID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateProjectMemberRole(\n    input: {projectID: $projectID, userID: $userID, roleCode: $roleCode}\n  ) {\n    ok\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTask($taskGroupID: UUID!, $name: String!, $position: Float!, $assigned: [UUID!])", "content": "{\n  createTask(\n    input: {taskGroupID: $taskGroupID, name: $name, position: $position, assigned: $assigned}\n  ) {\n    ...TaskFields\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskChecklist($taskID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskChecklist(input: {taskID: $taskID, name: $name, position: $position}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskChecklistItem($taskChecklistID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskChecklistItem(\n    input: {taskChecklistID: $taskChecklistID, name: $name, position: $position}\n  ) {\n    id\n    name\n    taskChecklistID\n    position\n    complete\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskComment($taskID: UUID!, $message: String!)", "content": "{\n  createTaskComment(input: {taskID: $taskID, message: $message}) {\n    taskID\n    comment {\n      id\n      message\n      pinned\n      createdAt\n      updatedAt\n      createdBy {\n        id\n        fullName\n        profileIcon {\n          initials\n          bgColor\n          url\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskChecklist($taskChecklistID: UUID!)", "content": "{\n  deleteTaskChecklist(input: {taskChecklistID: $taskChecklistID}) {\n    ok\n    taskChecklist {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskChecklistItem($taskChecklistItemID: UUID!)", "content": "{\n  deleteTaskChecklistItem(input: {taskChecklistItemID: $taskChecklistItemID}) {\n    ok\n    taskChecklistItem {\n      id\n      taskChecklistID\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskComment($commentID: UUID!)", "content": "{\n  deleteTaskComment(input: {commentID: $commentID}) {\n    commentID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "setTaskChecklistItemComplete($taskChecklistItemID: UUID!, $complete: Boolean!)", "content": "{\n  setTaskChecklistItemComplete(\n    input: {taskChecklistItemID: $taskChecklistItemID, complete: $complete}\n  ) {\n    id\n    complete\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "setTaskComplete($taskID: UUID!, $complete: Boolean!)", "content": "{\n  setTaskComplete(input: {taskID: $taskID, complete: $complete}) {\n    ...TaskFields\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "toggleTaskWatch($taskID: UUID!)", "content": "{\n  toggleTaskWatch(input: {taskID: $taskID}) {\n    id\n    watched\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistItemLocation($taskChecklistID: UUID!, $taskChecklistItemID: UUID!, $position: Float!)", "content": "{\n  updateTaskChecklistItemLocation(\n    input: {taskChecklistID: $taskChecklistID, taskChecklistItemID: $taskChecklistItemID, position: $position}\n  ) {\n    taskChecklistID\n    prevChecklistID\n    checklistItem {\n      id\n      taskChecklistID\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistItemName($taskChecklistItemID: UUID!, $name: String!)", "content": "{\n  updateTaskChecklistItemName(\n    input: {taskChecklistItemID: $taskChecklistItemID, name: $name}\n  ) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistLocation($taskChecklistID: UUID!, $position: Float!)", "content": "{\n  updateTaskChecklistLocation(\n    input: {taskChecklistID: $taskChecklistID, position: $position}\n  ) {\n    checklist {\n      id\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistName($taskChecklistID: UUID!, $name: String!)", "content": "{\n  updateTaskChecklistName(input: {taskChecklistID: $taskChecklistID, name: $name}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskComment($commentID: UUID!, $message: String!)", "content": "{\n  updateTaskComment(input: {commentID: $commentID, message: $message}) {\n    comment {\n      id\n      updatedAt\n      message\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskGroupTasks($taskGroupID: UUID!)", "content": "{\n  deleteTaskGroupTasks(input: {taskGroupID: $taskGroupID}) {\n    tasks\n    taskGroupID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "duplicateTaskGroup($taskGroupID: UUID!, $name: String!, $position: Float!, $projectID: UUID!)", "content": "{\n  duplicateTaskGroup(\n    input: {projectID: $projectID, taskGroupID: $taskGroupID, name: $name, position: $position}\n  ) {\n    taskGroup {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "sortTaskGroup($tasks: [TaskPositionUpdate!]!, $taskGroupID: UUID!)", "content": "{\n  sortTaskGroup(input: {taskGroupID: $taskGroupID, tasks: $tasks}) {\n    taskGroupID\n    tasks {\n      id\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskGroupName($taskGroupID: UUID!, $name: String!)", "content": "{\n  updateTaskGroupName(input: {taskGroupID: $taskGroupID, name: $name}) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTeam($name: String!, $organizationID: UUID!)", "content": "{\n  createTeam(input: {name: $name, organizationID: $organizationID}) {\n    id\n    createdAt\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTeamMember($userID: UUID!, $teamID: UUID!)", "content": "{\n  createTeamMember(input: {userID: $userID, teamID: $teamID}) {\n    team {\n      id\n    }\n    teamMember {\n      id\n      username\n      fullName\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTeam($teamID: UUID!)", "content": "{\n  deleteTeam(input: {teamID: $teamID}) {\n    ok\n    team {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTeamMember($teamID: UUID!, $userID: UUID!, $newOwnerID: UUID)", "content": "{\n  deleteTeamMember(\n    input: {teamID: $teamID, userID: $userID, newOwnerID: $newOwnerID}\n  ) {\n    teamID\n    userID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTeamMemberRole($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateTeamMemberRole(\n    input: {teamID: $teamID, userID: $userID, roleCode: $roleCode}\n  ) {\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n    teamID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "toggleProjectVisibility($projectID: UUID!, $isPublic: Boolean!)", "content": "{\n  toggleProjectVisibility(input: {projectID: $projectID, isPublic: $isPublic}) {\n    project {\n      id\n      publicOn\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "toggleTaskLabel($taskID: UUID!, $projectLabelID: UUID!)", "content": "{\n  toggleTaskLabel(input: {taskID: $taskID, projectLabelID: $projectLabelID}) {\n    active\n    task {\n      id\n      labels {\n        id\n        assignedDate\n        projectLabel {\n          id\n          createdDate\n          labelColor {\n            id\n            colorHex\n            name\n            position\n          }\n          name\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "unassignTask($taskID: UUID!, $userID: UUID!)", "content": "{\n  unassignTask(input: {taskID: $taskID, userID: $userID}) {\n    assigned {\n      id\n      fullName\n    }\n    id\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateProjectLabel($projectLabelID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  updateProjectLabel(\n    input: {projectLabelID: $projectLabelID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateProjectName($projectID: UUID!, $name: String!)", "content": "{\n  updateProjectName(input: {projectID: $projectID, name: $name}) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskDescription($taskID: UUID!, $description: String!)", "content": "{\n  updateTaskDescription(input: {taskID: $taskID, description: $description}) {\n    id\n    description\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskDueDate($taskID: UUID!, $dueDate: Time, $hasTime: Boolean!, $createNotifications: [CreateTaskDueDateNotification!]!, $updateNotifications: [UpdateTaskDueDateNotification!]!, $deleteNotifications: [DeleteTaskDueDateNotification!]!)", "content": "{\n  updateTaskDueDate(\n    input: {taskID: $taskID, dueDate: $dueDate, hasTime: $hasTime}\n  ) {\n    id\n    dueDate {\n      at\n    }\n    hasTime\n  }\n  createTaskDueDateNotifications(input: $createNotifications) {\n    notifications {\n      id\n      period\n      duration\n    }\n  }\n  updateTaskDueDateNotifications(input: $updateNotifications) {\n    notifications {\n      id\n      period\n      duration\n    }\n  }\n  deleteTaskDueDateNotifications(input: $deleteNotifications) {\n    notifications\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskGroupLocation($taskGroupID: UUID!, $position: Float!)", "content": "{\n  updateTaskGroupLocation(input: {taskGroupID: $taskGroupID, position: $position}) {\n    id\n    position\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskLocation($taskID: UUID!, $taskGroupID: UUID!, $position: Float!)", "content": "{\n  updateTaskLocation(\n    input: {taskID: $taskID, taskGroupID: $taskGroupID, position: $position}\n  ) {\n    previousTaskGroupID\n    task {\n      id\n      createdAt\n      name\n      position\n      taskGroup {\n        id\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskName($taskID: UUID!, $name: String!)", "content": "{\n  updateTaskName(input: {taskID: $taskID, name: $name}) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createUserAccount($username: String!, $roleCode: String!, $email: String!, $fullName: String!, $initials: String!, $password: String!)", "content": "{\n  createUserAccount(\n    input: {roleCode: $roleCode, username: $username, email: $email, fullName: $fullName, initials: $initials, password: $password}\n  ) {\n    id\n    email\n    fullName\n    initials\n    username\n    bio\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    role {\n      code\n      name\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteInvitedUserAccount($invitedUserID: UUID!)", "content": "{\n  deleteInvitedUserAccount(input: {invitedUserID: $invitedUserID}) {\n    invitedUser {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteUserAccount($userID: UUID!, $newOwnerID: UUID)", "content": "{\n  deleteUserAccount(input: {userID: $userID, newOwnerID: $newOwnerID}) {\n    ok\n    userAccount {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserInfo($name: String!, $initials: String!, $email: String!, $bio: String!)", "content": "{\n  updateUserInfo(\n    input: {name: $name, initials: $initials, email: $email, bio: $bio}\n  ) {\n    user {\n      id\n      email\n      fullName\n      bio\n      profileIcon {\n        initials\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserPassword($userID: UUID!, $password: String!)", "content": "{\n  updateUserPassword(input: {userID: $userID, password: $password}) {\n    ok\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserRole($userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateUserRole(input: {userID: $userID, roleCode: $roleCode}) {\n    user {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createIntegrante(\n    $data: IntegranteCreateInput!,\n    $whereInput: IntegranteWhereInput!)", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n      }\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/directory/directory.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateIntegrante(\n    $data: IntegranteUpdateInput!\n    $where: IntegranteWhereUniqueInput!\n    $whereInput: IntegranteWhereInput!\n  )", "content": "{\n    updateIntegrante(data: $data, where: $where, whereInput: $whereInput) {\n      id\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n        codigo\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/update/integrante-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createIntegrante(\n    $data: IntegranteCreateInput!\n    $whereInput: IntegranteWhereInput!\n  )", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      id\n      usuario {\n        firstname\n      }\n      proyecto {\n        codigo\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/create/integrante-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteIntegrante($where: IntegranteWhereUniqueInput!)", "content": "{\n    deleteIntegrante(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyIntegrantes($where: IntegranteWhereInput!)", "content": "{\n    deleteManyIntegrantes(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updatePago(\n    $data: PagoUpdateInput!\n    $where: PagoWhereUniqueInput!\n    $whereInput: PagoWhereInput!\n  )", "content": "{\n    updatePago(data: $data, where: $where, whereInput: $whereInput) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/update/pago-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createPago(\n    $data: PagoCreateInput!\n    $whereInput: PagoWhereInput!\n  )", "content": "{\n    createPago(data: $data, whereInput: $whereInput) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/create/pago-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deletePago($where: PagoWhereUniqueInput!)", "content": "{\n    deletePago(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyPagos($where: PagoWhereInput!)", "content": "{\n    deleteManyPagos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(username: $username, password: $password) {\n      user {\n        firstname\n        username\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+auth/login/login.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createIntegrante(\n    $data: IntegranteCreateInput!,\n    $whereInput: IntegranteWhereInput!)", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n      }\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/directory/directory.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateIntegrante(\n    $data: IntegranteUpdateInput!\n    $where: IntegranteWhereUniqueInput!\n    $whereInput: IntegranteWhereInput!\n  )", "content": "{\n    updateIntegrante(data: $data, where: $where, whereInput: $whereInput) {\n      id\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n        codigo\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/update/integrante-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createIntegrante(\n    $data: IntegranteCreateInput!\n    $whereInput: IntegranteWhereInput!\n  )", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      id\n      usuario {\n        firstname\n      }\n      proyecto {\n        codigo\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/create/integrante-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteIntegrante($where: IntegranteWhereUniqueInput!)", "content": "{\n    deleteIntegrante(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyIntegrantes($where: IntegranteWhereInput!)", "content": "{\n    deleteManyIntegrantes(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateAnno($data: AnnoUpdateInput!, $where: AnnoWhereUniqueInput!)", "content": "{\n    updateAnno(data: $data, where: $where) {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/update/anno-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createAnno($data: AnnoCreateInput!)", "content": "{\n    createAnno(data: $data) {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/create/anno-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteAnno($where: AnnoWhereUniqueInput!)", "content": "{\n    deleteAnno(where: $where) {\n      numero\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/list/anno-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyAnnoes($where: AnnoWhereInput!)", "content": "{\n    deleteManyAnnoes(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/list/anno-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateArea($data: AreaUpdateInput!, $where: AreaWhereUniqueInput!)", "content": "{\n    updateArea(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/update/area-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createArea($data: AreaCreateInput!)", "content": "{\n    createArea(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/create/area-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteArea($where: AreaWhereUniqueInput!)", "content": "{\n    deleteArea(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/list/area-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyAreas($where: AreaWhereInput!)", "content": "{\n    deleteManyAreas(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/list/area-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateLinea($data: LineaUpdateInput!, $where: LineaWhereUniqueInput!)", "content": "{\n    updateLinea(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/update/linea-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createLinea($data: LineaCreateInput!)", "content": "{\n    createLinea(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/create/linea-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteLinea($where: LineaWhereUniqueInput!)", "content": "{\n    deleteLinea(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/list/linea-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyLineas($where: LineaWhereInput!)", "content": "{\n    deleteManyLineas(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/list/linea-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateRole($data: RoleUpdateInput!, $where: RoleWhereUniqueInput!)", "content": "{\n    updateRole(data: $data, where: $where) {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/update/role-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createRole($data: RoleCreateInput!)", "content": "{\n    createRole(data: $data) {\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/create/role-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteRole($where: RoleWhereUniqueInput!)", "content": "{\n    deleteRole(where: $where) {\n      name\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyRoles($where: RoleWhereInput!)", "content": "{\n    deleteManyRoles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "changeFile($file: Upload!, $where: FileWhereUniqueInput!)", "content": "{\n    changeFile(file: $file, where: $where) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/change/file-change.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n    uploadFiles(files: $files) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/upload/file-upload.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteFile($where: FileWhereUniqueInput!)", "content": "{\n    deleteFile(where: $where) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyFiles($where: FileWhereInput!)", "content": "{\n    deleteManyFiles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateAlcance($data: AlcanceUpdateInput!, $where: AlcanceWhereUniqueInput!)", "content": "{\n    updateAlcance(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/update/alcance-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createAlcance($data: AlcanceCreateInput!)", "content": "{\n    createAlcance(data: $data) {\n      id\n      nombre\n      valor\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/create/alcance-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteAlcance($where: AlcanceWhereUniqueInput!)", "content": "{\n    deleteAlcance(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/list/alcance-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyAlcances($where: AlcanceWhereInput!)", "content": "{\n    deleteManyAlcances(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/list/alcance-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateMes($data: MesUpdateInput!, $where: MesWhereUniqueInput!)", "content": "{\n    updateMes(data: $data, where: $where) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/update/mes-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createMes($data: MesCreateInput!)", "content": "{\n    createMes(data: $data) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/create/mes-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteMes($where: MesWhereUniqueInput!)", "content": "{\n    deleteMes(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/list/mes-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyMeses($where: MesWhereInput!)", "content": "{\n    deleteManyMeses(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/list/mes-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateTipo($data: TipoUpdateInput!, $where: TipoWhereUniqueInput!)", "content": "{\n    updateTipo(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/update/tipo-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createTipo($data: TipoCreateInput!)", "content": "{\n    createTipo(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/create/tipo-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteTipo($where: TipoWhereUniqueInput!)", "content": "{\n    deleteTipo(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/list/tipo-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyTipos($where: TipoWhereInput!)", "content": "{\n    deleteManyTipos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/list/tipo-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateUser($data: UserUpdateInput!, $where: UserWhereUniqueInput!)", "content": "{\n    updateUser(data: $data, where: $where) {\n      id\n      firstname\n      email\n      lastname\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createUser($data: UserCreateInput!)", "content": "{\n    createUser(data: $data) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/create/user-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteUser($where: UserWhereUniqueInput!)", "content": "{\n    deleteUser(where: $where) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyUsers($where: UserWhereInput!)", "content": "{\n    deleteManyUsers(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateProyecto($data: ProyectoUpdateInput!, $where: ProyectoWhereUniqueInput!)", "content": "{\n    updateProyecto(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/update/project-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createProyecto($data: ProyectoCreateInput!)", "content": "{\n    createProyecto(data: $data) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/create/project-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteProyecto($where: ProyectoWhereUniqueInput!)", "content": "{\n    deleteProyecto(where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/list/project-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyProyectos($where: ProyectoWhereInput!)", "content": "{\n    deleteManyProyectos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/list/project-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateEje($data: EjeUpdateInput!, $where: EjeWhereUniqueInput!)", "content": "{\n    updateEje(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/update/eje-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createEje($data: EjeCreateInput!)", "content": "{\n    createEje(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/create/eje-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteEje($where: EjeWhereUniqueInput!)", "content": "{\n    deleteEje(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyEjes($where: EjeWhereInput!)", "content": "{\n    deleteManyEjes(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updatePago(\n    $data: PagoUpdateInput!\n    $where: PagoWhereUniqueInput!\n    $whereInput: PagoWhereInput!\n  )", "content": "{\n    updatePago(data: $data, where: $where, whereInput: $whereInput) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/update/pago-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createPago(\n    $data: PagoCreateInput!\n    $whereInput: PagoWhereInput!\n  )", "content": "{\n    createPago(data: $data, whereInput: $whereInput) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/create/pago-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deletePago($where: PagoWhereUniqueInput!)", "content": "{\n    deletePago(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyPagos($where: PagoWhereInput!)", "content": "{\n    deleteManyPagos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createArea($data: AreaCreateInput!)", "content": "{\n      createArea(data: $data) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteArea($where: AreaWhereUniqueInput!)", "content": "{\n      deleteArea(where: $where) {\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyAreas($where: AreaWhereInput!)", "content": "{\n      deleteManyAreas(where: $where) {\n        count\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateArea(\n      $data: AreaUpdateInput!\n      $where: AreaWhereUniqueInput!\n    )", "content": "{\n      updateArea(data: $data, where: $where) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createTipo($data: TipoCreateInput!)", "content": "{\n      createTipo(data: $data) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteTipo($where: TipoWhereUniqueInput!)", "content": "{\n      deleteTipo(where: $where) {\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateTipo(\n      $data: TipoUpdateInput!\n      $where: TipoWhereUniqueInput!\n    )", "content": "{\n      updateTipo(data: $data, where: $where) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteProyecto($where: ProyectoWhereUniqueInput!)", "content": "{\n      deleteProyecto(where: $where) {\n        id\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyProyectos($where: ProyectoWhereInput!)", "content": "{\n      deleteManyProyectos(where: $where) {\n        count\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n      login(username: $username, password: $password) {\n        user {\n          firstname\n          username\n          roles {\n            name\n          }\n        }\n        token\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "changeFile($file: Upload!, $where: FileWhereUniqueInput!)", "content": "{\n      changeFile(file: $file, where: $where) {\n        filename\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteFile($where: FileWhereUniqueInput!)", "content": "{\n      deleteFile(where: $where) {\n        filename\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyFiles($where: FileWhereInput!)", "content": "{\n      deleteManyFiles(where: $where) {\n        count\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n      uploadFiles(files: $files) {\n        filename\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "CreateGithub($input: CreateGithubInput!, $condition: ModelGithubConditionInput)", "content": "{\n    createGithub(input: $input, condition: $condition) {\n      id\n      datetime\n      repos {\n        id\n        name\n        url\n        stars\n        forks\n      }\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "lekoarts-stats/.github/actions/pull-push-data/graphql.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "CreateTwitter($input: CreateTwitterInput!, $condition: ModelTwitterConditionInput)", "content": "{\n    createTwitter(input: $input, condition: $condition) {\n      id\n      datetime\n      followers\n      tweets\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "lekoarts-stats/.github/actions/pull-push-data/graphql.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "($input: CreateContributorInput!)", "content": "{\n    createContributor(input: $input) {\n      email\n      github {\n        username\n        contributionCount\n        pullRequests {\n          id\n        }\n      }\n      shopify {\n        id\n        codes {\n          code\n          used\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "store.gatsbyjs.org/src/components/ContributorArea/ContentForContributorWithNoAccount.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "($user: String!)", "content": "{\n            updateContributorTags(githubUsername: $user) {\n              email\n              github {\n                username\n                contributionCount\n                pullRequests {\n                  id\n                }\n              }\n              shopify {\n                id\n                codes {\n                  code\n                  used\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "store.gatsbyjs.org/src/components/Layout/Layout.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "($description: String!, $title: String!)", "content": "{\n    createListing(description: $description, title: $title) {\n      id\n    }\n  }", "metadata": {"commit_hash": "29a44a12529919aaab0fdc48efcb8b652bf28ce4", "file": "classifieds-app/src/components/Root/Listings/AddListing/AddListing.js", "repo": "nizar787_mircroservice-app-front-back-build-deploy-docker"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n    createUserSession(email: $email, password: $password) {\n      id\n      user {\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "29a44a12529919aaab0fdc48efcb8b652bf28ce4", "file": "classifieds-app/src/components/Root/AccountDetails/Login/Login.js", "repo": "nizar787_mircroservice-app-front-back-build-deploy-docker"}}, {"type": "mutation", "name": "($sessionId: ID!)", "content": "{\n    deleteUserSession(sessionId: $sessionId)\n  }", "metadata": {"commit_hash": "29a44a12529919aaab0fdc48efcb8b652bf28ce4", "file": "classifieds-app/src/components/Root/AccountDetails/Account/Account.js", "repo": "nizar787_mircroservice-app-front-back-build-deploy-docker"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n    createUser(email: $email, password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "29a44a12529919aaab0fdc48efcb8b652bf28ce4", "file": "classifieds-app/src/components/Root/AccountDetails/SignUp/SignUp.js", "repo": "nizar787_mircroservice-app-front-back-build-deploy-docker"}}, {"type": "mutation", "name": "UploadToken($pushToken:String!)", "content": "{\n  uploadToken(pushToken:$pushToken){\n    _id\n    push_token\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/index.js", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SendNotificationUser($notificationTitle:String, $notificationBody: String!)", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Notifications.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteCoupon($id:String!)", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteRider($id:String!)", "content": "{\n        deleteRider(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$token:String!)", "content": "{\n  resetPassword(password:$password,token:$token){\n    result\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/ForgotPassword.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteFood($id:String!)", "content": "{\n        deleteFood(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "AdminLogin($email:String!,$password:String!)", "content": "{\n  adminLogin(email:$email,password:$password){\n    userId\n    token\n    name\n    email\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Login.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteOption($id:String!)", "content": "{\n        deleteOption(id:$id)\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Options.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteAddon($id:String!)", "content": "{\n        deleteAddon(id:$id)\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Addons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteCategory($id:String!)", "content": "{\n        deleteCategory(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n    }\n  }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateCategory($title:String!,$description:String!,$img_menu:String)", "content": "{\n  createCategory(category:{title:$title,description:$description,img_menu:$img_menu}){_id}\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "EditCategory( $_id:String,$title:String!,$description:String!,$img_menu:String)", "content": "{\n        editCategory(category:{_id:$_id,title:$title,description:$description,img_menu:$img_menu}){_id}\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    order_status\n    payment_status\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "AssignRider($id:String!,$riderId:String!)", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    order_status\n    payment_status\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "UpdatePaymentStatus($id:String!,$status:String!)", "content": "{\n  updatePaymentStatus(id:$id,status:$status){\n    _id\n    payment_status\n    paid_amount\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateAddons($addonInput:[AddonInput])", "content": "{\n  createAddons(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "editAddon($addonInput:AddonInput)", "content": "{\n  editAddon(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateOptions($optionInput:[OptionInput])", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "editOption($optionInput:OptionInput)", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          title\n          description\n          price\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateCoupon($couponInput:CouponInput!)", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SaveOrderConfiguration($configurationInput:OrderConfigurationInput!)", "content": "{\n  saveOrderConfiguration(configurationInput:$configurationInput){\n    _id\n    order_id_prefix\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SaveDeliveryConfiguration($configurationInput:DeliveryConfigurationInput!)", "content": "{\n  saveDeliveryConfiguration(configurationInput:$configurationInput){\n    _id\n    delivery_charges\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Delivery/Delivery.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    password\n    enable_email\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SaveCurrencyConfiguration($configurationInput:CurrencyConfigurationInput!)", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Currency/Currency.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateFood($foodInput:FoodInput!)", "content": "{\n      createFood(\n          foodInput:$foodInput\n      ){\n        _id\n        title\n        img_url\n        description\n        stock\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons{\n            _id\n            title\n            description\n            quantity_minimum\n            quantity_maximum\n            options{\n              _id\n              title\n              price\n            }\n          }\n        }\n        category{\n          _id\n          title\n      }\n      }\n    }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "EditFood($foodInput:FoodInput!)", "content": "{\n        editFood(\n            foodInput:$foodInput\n        ){\n          _id\n          title\n          img_url\n          description\n          stock\n          tag\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons{\n              _id\n              title\n              description\n              quantity_minimum\n              quantity_maximum\n              options{\n                _id\n                title\n                price\n              }\n            }\n          }\n          category{\n            _id\n            title\n        }\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "AccessEvent($letsChatWithUrl: String)", "content": "{\n    accessEvent(letsChatWithUrl: $letsChatWithUrl)\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/access-event.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "DeleteMatch($input: DeleteMatchInput!)", "content": "{\n      deleteMatch(input: $input) {\n        id\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/delete-match.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "CreateAttendee($input: CreateAttendeeInput!)", "content": "{\n      createAttendee(input: $input) {\n        __typename\n        id\n        fullName\n        avatarUrl\n        title\n        company\n        pronouns\n        bio\n        newsletterSubscribed\n        linkedin\n        twitter\n        facebook\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/create-attendee.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "createReport($input: CreateReportInput!)", "content": "{\n      createReport(input: $input) {\n        __typename\n        id\n        eventId\n        reportedAttendeeId\n        reportingAttendeeId\n        reason\n        status\n        message\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/create-report.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "UpdateCandidate($input: UpdateCandidateInput!)", "content": "{\n    updateCandidate(input: $input) {\n      id\n      attendeeId\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-candidate.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "UpdateAttendee($input: UpdateAttendeeInput!)", "content": "{\n    updateAttendee(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-attendee.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "updateChatThread($input: UpdateChatThreadInput!)", "content": "{\n      updateChatThread(input: $input) {\n        id\n        lastMessageAt\n        matchId\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-chat-thread.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "UpdateUser($input: UpdateUserInput!, $condition: ModelUserConditionInput)", "content": "{\n      updateUser(input: $input, condition: $condition) {\n        id\n        termsAccepted\n        notificationConfig {\n          matches\n          messages\n          subscribe\n        }\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-user.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "UpdateReport($input: UpdateReportInput!, $condition: ModelReportConditionInput)", "content": "{\n      updateReport(input: $input, condition: $condition) {\n        id\n        eventId\n        message\n        reason\n        status\n        reportedAttendee {\n          fullName\n          id\n          avatarUrl\n          title\n        }\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-report.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "createMessage($input: CreateMessageInput!)", "content": "{\n      createMessage(input: $input) {\n        __typename\n        id\n        content\n        createdAt\n        attendeeId\n        chatThreadId\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/create-message.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "FileUpload($bucketFolder: String, $fileName: String, $base64: String)", "content": "{\n    fileUpload(bucketFolder: $bucketFolder, fileName: $fileName, base64: $base64)\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/file-upload.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "UpdateMatch($input: UpdateMatchInput!)", "content": "{\n      updateMatch(input: $input) {\n        id\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-match.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "($message: InputMessage!)", "content": "{\n  message: createMessage(message: $message) {\n    id,\n    chatId,\n    user {\n      username,\n      userId,\n      first_name,\n      last_name,\n      username,\n      language,\n      payload,\n      createdAt,\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "lib/sender-factory/store-messages.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($message: InputMessage!)", "content": "{\n  message: createMessage(message: $message) {\n    id,\n    chatId\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "lib/sender-factory/store-messages.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($messageId: String, $message: InputMessage!)", "content": "{\n  editMessage(messageId: $messageId, message: $message) {\n    id,\n    flag,\n    content\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "lib/sender-factory/store-messages.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $chatbot: InputChatbot!)", "content": "{\n  chatbot: editChatbot(id: $id, chatbot: $chatbot) {\n    id,\n    name,\n    description,\n    guid,\n    chatbotId\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/chatbot-configuration/pages/configure-chatbot.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $record: InputRecord!)", "content": "{\n  editRecord(id: $id, record: $record) {\n    id,\n    title,\n    type,\n    createdAt,\n    payload,\n    userId,\n    status\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/user-record/pages/user-record.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteRecord(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/user-record/pages/user-record.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $queue: String!)", "content": "{\n  deleteTask(id: $id, queue: $queue) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/tasks-queues/hooks/tasks.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $queue: String!, $task: InputTask!)", "content": "{\n  updateTask(id:$id, queue: $queue, task: $task) {\n    id,\n    taskId,\n    task,\n    createdAt,\n    priority\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/tasks-queues/hooks/tasks.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($ids: [Int], $all: Boolean, $queue: String!)", "content": "{\n  deleteTasks(ids: $ids, all: $all, queue: $queue)\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/tasks-queues/hooks/tasks.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteUser(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/users/hooks/users.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $user: InputUser!)", "content": "{\n  editUser(id:$id, user: $user) {\n    id,\n    username,\n    userId,\n    first_name,\n    last_name,\n    username,\n    language,\n    payload,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/users/hooks/users.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($fromId: Int!, $toId: Int!, $chatbotId: String!)", "content": "{\n  user: mergeUser(fromId: $fromId, toId: $toId, chatbotId: $chatbotId) {\n    id,\n    username,\n    userId,\n    first_name,\n    last_name,\n    username,\n    language,\n    payload,\n    createdAt,\n    email,\n    chatIds {\n      id,\n      transport,\n      chatId\n    }\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/users/hooks/merge-user.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "(\n  $plugin: String!,\n  $url: String!,\n  $version: String!,\n  $initialConfiguration: String,\n  $initialContent: InputContent,\n  $chatbotId: String,\n  $pluginId: String\n  )", "content": "{\n  installPlugin(\n    plugin: $plugin,\n    url: $url,\n    version: $version,\n    initialConfiguration: $initialConfiguration,\n    initialContent: $initialContent,\n    chatbotId: $chatbotId,\n    pluginId: $pluginId\n  ) {\n    id,\n    plugin,\n    filename,\n    version\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/plugins-manager/queries.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "(\n  $plugin: String!,\n  $url: String!,\n  $version: String!,\n  $initialConfiguration: String,\n  $chatbotId: String\n  )", "content": "{\n  updatePlugin(\n    plugin: $plugin,\n    url: $url,\n    version: $version,\n    initialConfiguration: $initialConfiguration,\n    chatbotId: $chatbotId\n  ) {\n    id,\n    plugin,\n    filename,\n    version\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/plugins-manager/queries.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($plugin: String!, $chatbotId: String)", "content": "{\n  uninstallPlugin(plugin: $plugin, chatbotId: $chatbotId) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/plugins-manager/queries.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteAdmin(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/admins/hooks/admins.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $admin: InputAdmin!)", "content": "{\n  editAdmin(id:$id, admin: $admin) {\n    id,\n    username,\n    first_name,\n    last_name,\n    username,\n    payload,\n    permissions,\n    chatbotIds,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/admins/hooks/admins.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($admin: InputAdmin!)", "content": "{\n  createAdmin(admin: $admin) {\n    id,\n    username,\n    first_name,\n    last_name,\n    username,\n    payload,\n    permissions,\n    chatbotIds,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/admins/hooks/admins.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $device: NewDevice!)", "content": "{\n  editDevice(id: $id, device: $device) {\n    id,\n    name,\n    payload,\n    createdAt,\n    updatedAt,\n    status,\n    lat,\n    lon,\n    jsonSchema,\n    version,\n    lastUpdate,\n    snapshot\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/devices/pages/devices.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($device: NewDevice!)", "content": "{\n  createDevice(device: $device) {\n    id,\n    name,\n    payload,\n    createdAt,\n    updatedAt,\n    status,\n    lat,\n    lon,\n    jsonSchema,\n    version,\n    lastUpdate,\n    snapshot\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/devices/pages/devices.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteDevice(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/devices/pages/devices.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $user: InputUser!)", "content": "{\n  editUser(id:$id, user: $user) {\n    id,\n    username,\n    userId,\n    first_name,\n    last_name,\n    username,\n    language,\n    payload,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "nodes/mc-user-payload.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($configuration: InputConfiguration!)", "content": "{\n  createConfiguration(configuration: $configuration) {\n    id,\n    namespace,\n    payload\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/hooks/configuration.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteRecord(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/user-records/hooks/records.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteCategory(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content/hooks/category.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $category: InputCategory!)", "content": "{\n  editCategory(id: $id, category: $category) {\n    id,\n    name\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content/hooks/category.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($category: InputCategory!)", "content": "{\n  createCategory(category: $category) {\n    id,\n    name\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content/hooks/category.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteContent(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content/hooks/content.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $content: InputContent!)", "content": "{\n  editContent(id: $id, content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content/hooks/content.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($content: InputContent!)", "content": "{\n  createContent(content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content/hooks/content.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $withId: Int!)", "content": "{\n  swapContent(id: $id, withId: $withId) {\n    id,\n    order\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content/hooks/content.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $content: InputContent!)", "content": "{\n  editContent(id: $id, content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content-autocomplete/queries.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($content: InputContent!)", "content": "{\n  createContent(content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content-autocomplete/queries.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteContent(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content-autocomplete/queries.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $device: NewDevice!)", "content": "{\n  editDevice(id: $id, device: $device) {\n    id,\n    name,\n    payload,\n    createdAt,\n    updatedAt,\n    status,\n    lat,\n    lon,\n    jsonSchema,\n    version,\n    lastUpdate,\n    snapshot\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/edit-device/index.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  user: deleteChatId(id: $id) {\n    id,\n    chatIds {\n      id,\n      transport,\n      chatId\n    }\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/chat-ids-manager/queries.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "($id: Int!, $user: InputUser!)", "content": "{\n  editUser(id: $id, user: $user) {\n    id,\n    context\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/context-modal/index.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "UploadToken($pushToken:String!)", "content": "{\n  uploadToken(pushToken:$pushToken){\n    _id\n    push_token\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/index.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "ForgotPassword($email:String!)", "content": "{\n  forgotPassword(email:$email){\n    result\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/ForgotPassword/ForgotPassword.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "Login($facebookId:String,$email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(facebookId:$facebookId,email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     is_active\n     tokenExpiration\n     name\n     email\n     phone\n   }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/CreateAccount/CreateAccount.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "ReviewOrder(\n  $orderId:String!,\n  $rating:Int!,\n  $description:String\n)", "content": "{\n  reviewOrder(reviewInput:{\n    orderId:$orderId,\n    rating:$rating,\n    description:$description\n  }){\n    _id\n    order_id\n    review{\n      _id\n      rating\n      description\n    }\n    createdAt\n    updatedAt\n    is_active\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/RateAndReview/RateAndReview.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$is_active:Boolean!)", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone,is_active:$is_active}){\n          _id\n          name\n          phone\n          is_active\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Profile/Profile.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "ChangePassword($oldPassword:String!,$newPassword:String!)", "content": "{\n  changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Profile/ChangePassword.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "EditAddress($addressInput:AddressInput!)", "content": "{\n  editAddress(addressInput:$addressInput){\n    _id\n    label\n    delivery_address\n    details\n    longitude\n    latitude\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/EditAddress/EditAddress.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "Login($facebookId:String,$email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(facebookId:$facebookId,email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     is_active\n     tokenExpiration\n     name\n     email\n     phone\n   }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Login/Login.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "CreateUser($facebookId:String,$phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)", "content": "{\n      createUser(userInput:{\n          facebookId:$facebookId,\n          phone:$phone,\n          email:$email,\n          password:$password,\n          name:$name,\n          notificationToken:$notificationToken,\n          appleId:$appleId\n      }){\n          userId\n          token\n          tokenExpiration\n          name\n          email\n          phone\n          notificationToken\n      }\n    }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Register/Register.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n  selectAddress(id:$id){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/CartAddress/CartAddress.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "DeleteAddress($id:ID!)", "content": "{\n  deleteAddress(id:$id){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Addresses/Addresses.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "PushToken($token:String!)", "content": "{\n  pushToken(token:$token){\n    _id\n    notificationToken\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdateNotificationStatus($offerNotification:Boolean!,$orderNotification:Boolean!)", "content": "{\n      updateNotificationStatus(offerNotification:$offerNotification,orderNotification:$orderNotification){\n        _id\n        notificationToken\n        is_order_notification\n        is_offer_notification\n      }\n    }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$is_active:Boolean!)", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone,is_active:$is_active}){\n          _id\n          name\n          phone\n          is_active\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "CreateAddress($addressInput:AddressInput!)", "content": "{\n  createAddress(addressInput:$addressInput){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/NewAddress/NewAddress.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "Coupon($coupon:String!)", "content": "{\n  coupon(coupon:$coupon){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Cart/Cart.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "PlaceOrder($orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$address:AddressInput!)", "content": "{\n  placeOrder(orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,address:$address) {\n    _id\n    order_id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    user {\n      _id\n      phone\n      email\n    }\n    rider{\n      _id\n    }\n    payment_status\n    payment_method\n    paid_amount\n    order_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Cart/Cart.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\n  updateRiderLocation(latitude:$latitude,longitude:$longitude){\n    _id\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/utilities/location.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\n  updateRiderLocation(latitude:$latitude,longitude:$longitude){\n    _id\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdateOrderStatusRider($id:String!,$status:String!)", "content": "{\n    updateOrderStatusRider(id:$id,status:$status){\n      _id\n      order_status\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/screens/OrderDetail/OrderDetail.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "AssignOrder($id:String!)", "content": "{\n    assignOrder(id:$id){\n      _id\n      rider{\n        _id\n      }\n    }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/screens/OrderDetail/OrderDetail.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "RiderLogin($username:String,$password:String,$notificationToken:String)", "content": "{\n    riderLogin(username:$username,password:$password,notificationToken:$notificationToken){\n      userId\n      token\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/screens/Login/Login.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "SendNotificationUser($notificationTitle:String, $notificationBody: String!)", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Notifications.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Coupons.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "DeleteCoupon($id:String!)", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Coupons.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "DeleteRider($id:String!)", "content": "{\n        deleteRider(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Riders.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Riders.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$token:String!)", "content": "{\n  resetPassword(password:$password,token:$token){\n    result\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/ForgotPassword.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "DeleteFood($id:String!)", "content": "{\n        deleteFood(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "AdminLogin($email:String!,$password:String!)", "content": "{\n  adminLogin(email:$email,password:$password){\n    userId\n    token\n    name\n    email\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Login.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "DeleteOption($id:String!)", "content": "{\n        deleteOption(id:$id)\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Options.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "DeleteAddon($id:String!)", "content": "{\n        deleteAddon(id:$id)\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Addons.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "DeleteCategory($id:String!)", "content": "{\n        deleteCategory(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Rider/Rider.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Rider/Rider.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "CreateCategory($title:String!,$description:String!,$img_menu:String)", "content": "{\n  createCategory(category:{title:$title,description:$description,img_menu:$img_menu}){_id}\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Category/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "EditCategory( $_id:String,$title:String!,$description:String!,$img_menu:String)", "content": "{\n        editCategory(category:{_id:$_id,title:$title,description:$description,img_menu:$img_menu}){_id}\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Category/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    order_status\n    payment_status\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "AssignRider($id:String!,$riderId:String!)", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    order_status\n    payment_status\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdatePaymentStatus($id:String!,$status:String!)", "content": "{\n  updatePaymentStatus(id:$id,status:$status){\n    _id\n    payment_status\n    paid_amount\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "CreateAddons($addonInput:[AddonInput])", "content": "{\n  createAddons(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "editAddon($addonInput:AddonInput)", "content": "{\n  editAddon(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "CreateOptions($optionInput:[OptionInput])", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Option/Option.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "editOption($optionInput:OptionInput)", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          title\n          description\n          price\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Option/Option.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "CreateCoupon($couponInput:CouponInput!)", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Coupon/Coupon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Coupon/Coupon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "SaveOrderConfiguration($configurationInput:OrderConfigurationInput!)", "content": "{\n  saveOrderConfiguration(configurationInput:$configurationInput){\n    _id\n    order_id_prefix\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Configuration/Order/Order.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "SaveDeliveryConfiguration($configurationInput:DeliveryConfigurationInput!)", "content": "{\n  saveDeliveryConfiguration(configurationInput:$configurationInput){\n    _id\n    delivery_charges\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Configuration/Delivery/Delivery.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    password\n    enable_email\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Configuration/Email/Email.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "SaveCurrencyConfiguration($configurationInput:CurrencyConfigurationInput!)", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Configuration/Currency/Currency.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "CreateFood($foodInput:FoodInput!)", "content": "{\n      createFood(\n          foodInput:$foodInput\n      ){\n        _id\n        title\n        img_url\n        description\n        stock\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons{\n            _id\n            title\n            description\n            quantity_minimum\n            quantity_maximum\n            options{\n              _id\n              title\n              price\n            }\n          }\n        }\n        category{\n          _id\n          title\n      }\n      }\n    }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Food/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "EditFood($foodInput:FoodInput!)", "content": "{\n        editFood(\n            foodInput:$foodInput\n        ){\n          _id\n          title\n          img_url\n          description\n          stock\n          tag\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons{\n              _id\n              title\n              description\n              quantity_minimum\n              quantity_maximum\n              options{\n                _id\n                title\n                price\n              }\n            }\n          }\n          category{\n            _id\n            title\n        }\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Food/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "($username: String!)", "content": "{\n    insert_user (\n      objects: [{\n        username: $username\n      }]\n    ) {\n      returning {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "9e0a92d6eef113a715e32576f5c67505b954e621", "file": "\ucd08\ubcf4\ub97c-\uc704\ud55c-\ub3c4\ucee4-\uc548\ub0b4\uc11c/11.chatapp/workshop-chatapp/src/components/LandingPage.js", "repo": "sinkyoungdeok_docker"}}, {"type": "mutation", "name": "insert_message ($message: message_insert_input! )", "content": "{\n    insert_message (\n      objects: [$message]\n    ) {\n      returning {\n        id\n        timestamp\n        text\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "9e0a92d6eef113a715e32576f5c67505b954e621", "file": "\ucd08\ubcf4\ub97c-\uc704\ud55c-\ub3c4\ucee4-\uc548\ub0b4\uc11c/11.chatapp/workshop-chatapp/src/components/Textbox.js", "repo": "sinkyoungdeok_docker"}}, {"type": "mutation", "name": "($userId: Int)", "content": "{\n    update_user (\n      _set: {\n        last_typed: \"now()\"\n      }\n      where: {\n        id: {\n          _eq: $userId\n        }\n      }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "9e0a92d6eef113a715e32576f5c67505b954e621", "file": "\ucd08\ubcf4\ub97c-\uc704\ud55c-\ub3c4\ucee4-\uc548\ub0b4\uc11c/11.chatapp/workshop-chatapp/src/components/Textbox.js", "repo": "sinkyoungdeok_docker"}}, {"type": "mutation", "name": "($userId:Int!)", "content": "{\n    update_user (\n      _set: {\n        last_seen: \"now()\"\n      }\n      where: {\n        id: {\n          _eq: $userId\n        }\n      }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "9e0a92d6eef113a715e32576f5c67505b954e621", "file": "\ucd08\ubcf4\ub97c-\uc704\ud55c-\ub3c4\ucee4-\uc548\ub0b4\uc11c/11.chatapp/workshop-chatapp/src/components/Chat.js", "repo": "sinkyoungdeok_docker"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n        signIn(email: $email, password: $password)\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "signUp($email: String!, $password: String!)", "content": "{\n        signUp(email: $email, password: $password)\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "($name: String!, $sub: ID)", "content": "{\n        createBlogs(\n            input: [\n                { name: $name, creator: { connect: { where: { id: $sub } } } }\n            ]\n        ) {\n            blogs {\n                id\n                name\n                createdAt\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "editBlog($id: ID, $name: String)", "content": "{\n        updateBlogs(where: { id: $id }, update: { name: $name }) {\n            blogs {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "deleteBlog($id: ID)", "content": "{\n        deleteComments(where: { post: { blog: { id: $id } } }) {\n            nodesDeleted\n        }\n        deletePosts(where: { blog: { id: $id } }) {\n            nodesDeleted\n        }\n        deleteBlogs(where: { id: $id }) {\n            nodesDeleted\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "createPost(\n        $title: String!\n        $content: String!\n        $user: ID\n        $blog: ID\n    )", "content": "{\n        createPosts(\n            input: [\n                {\n                    title: $title\n                    content: $content\n                    blog: { connect: { where: { id: $blog } } }\n                    author: { connect: { where: { id: $user } } }\n                }\n            ]\n        ) {\n            posts {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "commentOnPost($post: ID, $content: String!, $user: ID)", "content": "{\n        commentOnPost: createComments(\n            input: [\n                {\n                    content: $content\n                    post: { connect: { where: { id: $post } } }\n                    author: { connect: { where: { id: $user } } }\n                }\n            ]\n        ) {\n            comments {\n                id\n                content\n                author {\n                    id\n                    email\n                }\n                createdAt\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "updateComment($id: ID, $content: String)", "content": "{\n        updateComments(where: { id: $id }, update: { content: $content }) {\n            comments {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "deleteComment($id: ID)", "content": "{\n        deleteComments(where: { id: $id }) {\n            nodesDeleted\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "editPost($id: ID, $content: String, $title: String)", "content": "{\n        updatePosts(\n            where: { id: $id }\n            update: { content: $content, title: $title }\n        ) {\n            posts {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "deletePost($id: ID)", "content": "{\n        deleteComments(where: { post: { id: $id } }) {\n            nodesDeleted\n        }\n        deletePosts(where: { id: $id }) {\n            nodesDeleted\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "assignBlogAuthor($blog: ID, $authorEmail: String)", "content": "{\n        updateBlogs(\n            where: { id: $blog }\n            connect: { authors: { where: { email: $authorEmail } } }\n        ) {\n            blogs {\n                authors {\n                    email\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "revokeBlogAuthor($blog: ID, $authorEmail: String)", "content": "{\n        updateBlogs(\n            where: { id: $blog }\n            disconnect: { authors: { where: { email: $authorEmail } } }\n        ) {\n            blogs {\n                authors {\n                    email\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "($ids: [String!]!, $opts: SceneUpdateOpts!)", "content": "{\n          updateScenes(ids: $ids, opts: $opts) {\n            rating\n          }\n        }", "metadata": {"commit_hash": "4b31a8b3f7ef66204ebb1cc0769dcf1842c10a23", "file": "app/src/mixins/scene.ts", "repo": "vaginessa_porn-vault"}}, {"type": "mutation", "name": "($ids: [String!]!, $opts: SceneUpdateOpts!)", "content": "{\n          updateScenes(ids: $ids, opts: $opts) {\n            favorite\n          }\n        }", "metadata": {"commit_hash": "4b31a8b3f7ef66204ebb1cc0769dcf1842c10a23", "file": "app/src/mixins/scene.ts", "repo": "vaginessa_porn-vault"}}, {"type": "mutation", "name": "($ids: [String!]!, $opts: SceneUpdateOpts!)", "content": "{\n          updateScenes(ids: $ids, opts: $opts) {\n            bookmark\n          }\n        }", "metadata": {"commit_hash": "4b31a8b3f7ef66204ebb1cc0769dcf1842c10a23", "file": "app/src/mixins/scene.ts", "repo": "vaginessa_porn-vault"}}, {"type": "mutation", "name": "($id: String!)", "content": "{\n        watchScene(id: $id) {\n          watches\n        }\n      }", "metadata": {"commit_hash": "4b31a8b3f7ef66204ebb1cc0769dcf1842c10a23", "file": "app/src/util/scene.ts", "repo": "vaginessa_porn-vault"}}, {"type": "mutation", "name": "($id: String!)", "content": "{\n        unwatchScene(id: $id) {\n          watches\n        }\n      }", "metadata": {"commit_hash": "4b31a8b3f7ef66204ebb1cc0769dcf1842c10a23", "file": "app/src/util/scene.ts", "repo": "vaginessa_porn-vault"}}, {"type": "mutation", "name": "(\n    $controller: String!\n    $chainId: Int!\n    $signature: String!\n    $logo: String\n    $summary: String\n  )", "content": "{\n    savePool(\n      controller: $controller\n      chainId: $chainId\n      signature: $signature\n      logo: $logo\n      summary: $summary\n    ) {\n      message\n      ok\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/PoolManager/Details/Strategy/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "mutation", "name": "(\n    $controller: String!\n    $chainId: Int!\n    $signature: String!\n    $logo: String\n    $summary: String\n  )", "content": "{\n    savePool(\n      controller: $controller\n      chainId: $chainId\n      signature: $signature\n      logo: $logo\n      summary: $summary\n    ) {\n      message\n      ok\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/PoolManager/Details/PoolImage/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "mutation", "name": "(\n    $controller: String!\n    $chainId: Int!\n    $signature: String!\n    $logo: String\n    $summary: String\n  )", "content": "{\n    savePool(\n      controller: $controller\n      chainId: $chainId\n      signature: $signature\n      logo: $logo\n      summary: $summary\n    ) {\n      message\n      ok\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/Manage/CreatePool/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "mutation", "name": "DELETE_ATTRIBUTE($id: ID)", "content": "{\n        deleteAttribute(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/attributes/deleteAttributeMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_LIBRARY($id: ID)", "content": "{\n        deleteLibrary(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/libraries/deleteLibraryMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_TREE($id: ID!)", "content": "{\n        deleteTree(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/trees/deleteTreeMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_APPLICATION($application: ApplicationInput!)", "content": "{\n        saveApplication(application: $application) {\n            ...DetailsApplication\n        }\n    }\n    ${DetailsApplicationFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_ATTRIBUTE($id: ID)", "content": "{\n        deleteAttribute(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_ATTRIBUTE($attribute: AttributeInput!)", "content": "{\n        saveAttribute(attribute: $attribute) {\n            ...AttributeDetails\n        }\n    }\n    ${AttributeDetailsFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_LIBRARY($id: ID)", "content": "{\n        deleteLibrary(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "saveLibrary($library: LibraryInput!)", "content": "{\n        saveLibrary(library: $library) {\n            ...LibraryDetails\n        }\n    }\n    ${LibraryDetailsFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_TREE($id: ID!)", "content": "{\n        deleteTree(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_TREE($tree: TreeInput!)", "content": "{\n        saveTree(tree: $tree) {\n            ...TreeDetails\n        }\n    }\n    ${TreeDetailsFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "CANCEL_TASK($taskId: ID!)", "content": "{\n        cancelTask(taskId: $taskId)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/tasks/cancelTask.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_TASK($taskId: ID!, $archive: Boolean!)", "content": "{\n        deleteTask(taskId: $taskId, archive: $archive)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/tasks/deleteTask.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_VALUE($library: ID!, $recordId: ID!, $attribute: ID!, $valueId: ID)", "content": "{\n        deleteValue(library: $library, recordId: $recordId, attribute: $attribute, valueId: $valueId) {\n            attribute {\n                id\n            }\n            id_value\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/values/deleteValueMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "PURGE_RECORDS($libraryId: String!)", "content": "{\n        purgeInactiveRecords(libraryId: $libraryId) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/records/purgeRecords.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "INDEX_RECORDS($libraryId: String!, $records: [String!])", "content": "{\n        indexRecords(libraryId: $libraryId, records: $records)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/records/indexRecordsMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_ATTRIBUTE_ACTION_LIST($att: AttributeInput!)", "content": "{\n        saveAttribute(attribute: $att) {\n            id\n            actions_list {\n                saveValue {\n                    id\n                    params {\n                        name\n                        value\n                    }\n                }\n                getValue {\n                    id\n                    params {\n                        name\n                        value\n                    }\n                }\n                deleteValue {\n                    id\n                    params {\n                        name\n                        value\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/attributes/saveAttributeActionsListMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_ATTRIBUTE($attrId: ID!)", "content": "{\n        deleteAttribute(id: $attrId) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/attributes/deleteAttributeMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_ATTRIBUTE_EMBEDDED_FIELDS($attribute: AttributeInput)", "content": "{\n        saveAttribute(attribute: $attribute) {\n            id\n            label\n            format\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/attributes/saveAttributesEmbeddedFieldsQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_PERMISSION($permData: PermissionInput!)", "content": "{\n        savePermission(permission: $permData) {\n            type\n            applyTo\n            usersGroup\n            actions {\n                name\n                allowed\n            }\n            permissionTreeTarget {\n                nodeId\n                tree\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/permissions/savePermissionMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_FORM($library: ID!, $formId: ID!)", "content": "{\n        deleteForm(library: $library, id: $formId) {\n            library {\n                id\n            }\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/forms/deleteFormMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_VERSION_PROFILE($id: String!)", "content": "{\n        deleteVersionProfile(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/versionProfiles/deleteVersionProfileMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_VERSION_PROFILE($versionProfile: VersionProfileInput!)", "content": "{\n        saveVersionProfile(versionProfile: $versionProfile) {\n            id\n            label\n            description\n            trees {\n                id\n                label\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/versionProfiles/saveVersionProfileMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_LIBRARY($libID: ID!)", "content": "{\n        deleteLibrary(id: $libID) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/libraries/deleteLibMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_APPLICATION($appId: ID!)", "content": "{\n        deleteApplication(id: $appId) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/applications/deleteApplicationMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_API_KEY($id: String!)", "content": "{\n        deleteApiKey(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/apiKeys/deleteApiKeyMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_TREE($treeId: ID!)", "content": "{\n        deleteTree(id: $treeId) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/deleteTreeMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "ADD_TREE_ELEMENT($treeId: ID!, $element: TreeElementInput!, $parent: ID)", "content": "{\n        treeAddElement(treeId: $treeId, element: $element, parent: $parent, order: 0) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/treeAddElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $deleteChildren: Boolean)", "content": "{\n        treeDeleteElement(treeId: $treeId, nodeId: $nodeId, deleteChildren: $deleteChildren)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/treeDeleteElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "MOVE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $parentTo: ID, $order: Int)", "content": "{\n        treeMoveElement(treeId: $treeId, nodeId: $nodeId, parentTo: $parentTo, order: $order) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/treeMoveElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_TREE($treeData: TreeInput!)", "content": "{\n        saveTree(tree: $treeData) {\n            id\n            system\n            label\n            behavior\n            libraries {\n                library {\n                    id\n                    label\n                    attributes {\n                        id\n                        label\n                        type\n                        ... on TreeAttribute {\n                            linked_tree {\n                                id\n                            }\n                        }\n                    }\n                }\n                settings {\n                    allowMultiplePositions\n                    allowedAtRoot\n                    allowedChildren\n                }\n            }\n            permissions_conf {\n                libraryId\n                permissionsConf {\n                    permissionTreeAttributes {\n                        id\n                        label\n                    }\n                    relation\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/saveTreeMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_USER_DATA($key: String!, $value: Any, $global: Boolean!)", "content": "{\n        saveUserData(key: $key, value: $value, global: $global) {\n            global\n            data\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/portal/src/queries/userData/saveUserData.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "CANCEL_TASK($taskId: ID!)", "content": "{\n        cancelTask(taskId: $taskId)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/tasks/cancelTask.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_TASK($taskId: ID!, $archive: Boolean!)", "content": "{\n        deleteTask(taskId: $taskId, archive: $archive)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/tasks/deleteTask.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "IMPORT_EXCEL($file: Upload!, $sheets: [SheetInput], $startAt: Int)", "content": "{\n        importExcel(file: $file, sheets: $sheets, startAt: $startAt)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/import/importExcel.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_VALUE($library: ID!, $recordId: ID!, $attribute: ID!, $value: ValueInput)", "content": "{\n        deleteValue(library: $library, recordId: $recordId, attribute: $attribute, value: $value) {\n            id_value\n            attribute {\n                id\n                format\n                type\n                system\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/values/deleteValueMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "FORCE_PREVIEWS_GENERATION(\n        $libraryId: ID!\n        $filters: [RecordFilterInput!]\n        $recordIds: [ID!]\n        $failedOnly: Boolean\n    )", "content": "{\n        forcePreviewsGeneration(\n            libraryId: $libraryId\n            filters: $filters\n            recordIds: $recordIds\n            failedOnly: $failedOnly\n        )\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/files/forcePreviewsGenerationMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_USER_DATA($key: String!, $value: Any, $global: Boolean!)", "content": "{\n        saveUserData(key: $key, value: $value, global: $global) {\n            global\n            data\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/userData/saveUserData.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DEACTIVATE_RECORDS($libraryId: String!, $recordsIds: [String!], $filters: [RecordFilterInput!])", "content": "{\n        deactivateRecords(recordsIds: $recordsIds, filters: $filters, libraryId: $libraryId) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/records/deactivateRecordsMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "DELETE_VIEW($viewId: String!)", "content": "{\n        deleteView(viewId: $viewId) {\n            id\n            library\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/views/deleteViewMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "MOVE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $parentTo: ID, $order: Int)", "content": "{\n        treeMoveElement(treeId: $treeId, nodeId: $nodeId, parentTo: $parentTo, order: $order) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/trees/moveTreeElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "REMOVE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $deleteChildren: Boolean)", "content": "{\n        treeDeleteElement(treeId: $treeId, nodeId: $nodeId, deleteChildren: $deleteChildren)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/trees/removeTreeElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "ADD_TREE_ELEMENT($treeId: ID!, $element: TreeElementInput!, $parent: ID, $order: Int)", "content": "{\n        treeAddElement(treeId: $treeId, element: $element, parent: $parent, order: $order) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/trees/addTreeElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "($idToken: String!)", "content": "{\n    authenticateUser(idToken: $idToken) {\n      id\n      token\n    }\n  }", "metadata": {"commit_hash": "b43642d07e7f391c685bd8839c42d2a33f42cfa4", "file": "client/src/auth.js", "repo": "knowit_kodekalender"}}, {"type": "mutation", "name": "giveAnswer($doorId: String!, $answer: String!)", "content": "{\n    checkAnswer(challengeId: $doorId, answer: $answer) {\n      correct\n      discussionUrl\n      remainingAttempts\n    }\n  }", "metadata": {"commit_hash": "b43642d07e7f391c685bd8839c42d2a33f42cfa4", "file": "client/src/components/GiveAnswer.js", "repo": "knowit_kodekalender"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      roles\n    }\n  }", "metadata": {"commit_hash": "b5d33f85de5af7fcb67099022088749c12dc20b9", "file": "admin-ui/src/auth-provider/ra-auth-http.ts", "repo": "amplication_blog-server"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "b5d33f85de5af7fcb67099022088749c12dc20b9", "file": "admin-ui/src/auth-provider/ra-auth-jwt.ts", "repo": "amplication_blog-server"}}, {"type": "mutation", "name": "emailCodeAuth($email: String!, $code: String!)", "content": "{\n    emailCodeAuth(email: $email, code: $code) {\n      status\n      token\n    }\n  }", "metadata": {"commit_hash": "cebe603e320fbfdc9ef167c45f87a7f383790754", "file": "apollo/auth/mutations/emailCodeAuth.js", "repo": "JustShip_justship_web"}}, {"type": "mutation", "name": "signUp(\n    $token: String!\n    $email: String!\n    $password: String!\n  )", "content": "{\n    signUp(\n      token: $token\n      email: $email\n      password: $password\n    ) {\n      status\n    }\n  }", "metadata": {"commit_hash": "cebe603e320fbfdc9ef167c45f87a7f383790754", "file": "apollo/auth/mutations/signUp.js", "repo": "JustShip_justship_web"}}, {"type": "mutation", "name": "tokenAuth($username: String!, $password: String!)", "content": "{\n    tokenAuth(username: $username, password: $password) {\n      token\n      user {\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "cebe603e320fbfdc9ef167c45f87a7f383790754", "file": "apollo/auth/mutations/tokenAuth.js", "repo": "JustShip_justship_web"}}, {"type": "mutation", "name": "insert_todo ($objects: [todo_insert_input!]!)", "content": "{\n    insert_todo(objects: $objects) {\n      affected_rows\n      returning {\n        id\n        task\n        completed\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "update_todo ($todoId: Int, $set: todo_set_input!)", "content": "{\n    update_todo(where: {id: {_eq: $todoId}} _set: $set) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "delete_todo ($todoId: Int)", "content": "{\n    delete_todo(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($name:String)", "content": "{\n              insert_user (\n                objects: {\n                  name: $name\n                }\n              ) {\n                returning {\n                  id\n                }\n              }\n            }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "tic-tac-toe-react/client/src/utils.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($name:String, $id: Int!)", "content": "{\n              insert_user (\n                objects: {\n                  name: $name\n                  id: $id\n                }\n              ) {\n                returning {\n                  id\n                }\n              }\n            }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "tic-tac-toe-react/client/src/utils.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($user_id: Int, $board_id: uuid!)", "content": "{\n      update_board (\n        _set: {\n          user_2_id: $user_id\n        },\n        where: {\n          _and: {\n            id: {\n              _eq: $board_id\n            },\n            user_2_id: {\n              _is_null: true\n            },\n            user_1_id: {\n              _neq: $user_id\n            }\n          }\n        }\n      ) {\n        affected_rows\n        returning {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "tic-tac-toe-react/client/src/utils.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($user_id: Int)", "content": "{\n    insert_board (\n      objects: [{\n        user_1_id: $user_id,\n        turn: \"x\",\n      }]\n    ) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "tic-tac-toe-react/client/src/components/Boards/BoardsList.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "(\n    $board_id: String!,\n    $position: Int!,\n    $user_id: Int!\n  )", "content": "{\n    make_move (\n      board_id: $board_id,\n      position: $position,\n      user_id: $user_id\n    ) {\n      success\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "tic-tac-toe-react/client/src/components/Game/TicTacToe.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "insert_author($name: String!)", "content": "{\n    insert_author(objects: { name: $name }) {\n      returning {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "gatsby-postgres-graphql/src/components/AddAuthor.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($username: String!)", "content": "{\n    insert_user_one(object: { username: $username }) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-chat/src/components/LandingPage.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "insert_message($message: message_insert_input!)", "content": "{\n    insert_message_one(object: $message) {\n      id\n      timestamp\n      text\n      username\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-chat/src/components/Textbox.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($userId: Int!)", "content": "{\n    update_user_by_pk(\n      pk_columns: { id: $userId }\n      _set: { last_typed: \"now()\" }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-chat/src/components/Textbox.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($userId: Int!)", "content": "{\n    update_user_by_pk(\n      pk_columns: { id: $userId }\n      _set: { last_seen: \"now()\" }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-chat/src/components/Chat.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "insert_playlist($name: String!)", "content": "{\n\t  insert_playlist(objects: [{\n\t    name: $name\n\t  }]) {\n\t    affected_rows\n\t  }\n\t}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "gatsby-contentful-auth0/app/src/components/Playlist.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "insert_todos($text: String!)", "content": "{\n    insert_todos(objects: [{text: $text}]) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n      }\n    }\n}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "vuetify-vuex-todo-graphql/src/store.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "update_todos($todoId: Int!, $done: Boolean)", "content": "{\n    update_todos(_set: {is_completed: $done}, where: {id: {_eq: $todoId}}) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n      }\n    }\n}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "vuetify-vuex-todo-graphql/src/store.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "update_todos($done: Boolean)", "content": "{\n    update_todos(_set: {is_completed: $done}, where: {id: {_gt: 0}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "vuetify-vuex-todo-graphql/src/store.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "delete_todos($todoId: Int!)", "content": "{\n    delete_todos(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "vuetify-vuex-todo-graphql/src/store.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "delete_todos", "content": "{\n    delete_todos(where: {is_completed: {_eq: true}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "vuetify-vuex-todo-graphql/src/store.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($userId: String!, $timestamp: timestamptz!)", "content": "{\n              update_users(\n                where: { auth0_id: { _eq: $userId } }\n                _set: { auth0_id: $userId, last_seen: $timestamp }\n              ) {\n                affected_rows\n              }\n            }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "react-apollo-todo/src/components/Home/Home.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "insert_todos($objects: [todos_insert_input!]!)", "content": "{\n    insert_todos(objects: $objects) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n        created_at\n        is_public\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "update_todos($todoId: Int, $set: todos_set_input!)", "content": "{\n    update_todos(where: { id: { _eq: $todoId } }, _set: $set) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "delete_todos($todoId: Int)", "content": "{\n    delete_todos(where: { id: { _eq: $todoId } }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($username: String!)", "content": "{\n    insert_user_one(object: { username: $username }) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "streaming-subscriptions-chat/src/components/LandingPage.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($username: String!)", "content": "{\n    insert_user_one(\n      object: { username: $username }\n      on_conflict: { constraint: user_username_key, update_columns: [] }\n    ) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "streaming-subscriptions-chat/src/components/Main.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "insert_message($message: message_insert_input!)", "content": "{\n    insert_message_one(object: $message) {\n      id\n      timestamp\n      text\n      username\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "streaming-subscriptions-chat/src/components/Textbox.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($userId: Int!)", "content": "{\n    update_user_by_pk(\n      pk_columns: { id: $userId }\n      _set: { last_typed: \"now()\" }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "streaming-subscriptions-chat/src/components/Textbox.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "($userId: Int!)", "content": "{\n    update_user_by_pk(\n      pk_columns: { id: $userId }\n      _set: { last_seen: \"now()\" }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "streaming-subscriptions-chat/src/components/Chat.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "insert_vehicle_location ($objects: [vehicle_location_insert_input!]! )", "content": "{\n    insert_vehicle_location (objects: $objects){\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "insert_vehicle ($objects: [vehicle_insert_input!]! )", "content": "{\n    insert_vehicle (objects: $objects){\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "vote($optionId: uuid!, $userId: uuid!)", "content": "{\n    insert_vote(\n      objects: [{ option_id: $optionId, created_by_user_id: $userId }]\n    ) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-poll/src/GraphQL.jsx", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "userOnline($uuid: uuid)", "content": "{\n    update_user(where: { id: { _eq: $uuid } }, _set: { online_ping: true }) {\n      affected_rows\n      returning {\n        last_seen_at\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-poll/src/GraphQL.jsx", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "newUser($uuid: uuid)", "content": "{\n    insert_user(objects: [{ id: $uuid }]) {\n      returning {\n        id\n        created_at\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-poll/src/GraphQL.jsx", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "SettingsFormMutation($name: String, $picture: String, $userId: Int)", "content": "{\n    update_users(_set: {name: $name, picture: $picture}, where: {id: {_eq: $userId}}) {\n      affected_rows\n      returning {\n        id\n        name\n        picture\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/SettingsScreen/SettingsForm.tsx", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "CompleteGroupButtonMutation(\n    $userIds: [chat_users_insert_input!]!\n    $groupName: String!\n    $groupPicture: String\n    $ownerId: Int\n  )", "content": "{\n    insert_chat(objects: [{name: $groupName, picture: $groupPicture, owner_id: $ownerId, users:{data: $userIds}}]) {\n      returning {\n        ...chat\n      }\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/GroupDetailsScreen/CompleteGroupButton.tsx", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "GroupDetailsScreenUpdateMutation($name: String, $picture: String, $chatId: Int!)", "content": "{\n    update_chat(_set: {name: $name, picture: $picture}, where: {id: {_eq: $chatId}}) {\n      affected_rows\n      returning {\n        ...chat\n      }\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/GroupDetailsScreen/index.tsx", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "MessageBoxMutation($chatId: Int!, $content: String!, $sender_id: Int!)", "content": "{\n    insert_message(objects: [{chat_id: $chatId, content: $content, sender_id: $sender_id}]) {\n      affected_rows\n      returning {\n        id\n        content\n        created_at\n        sender_id\n        chat_id\n        chat {\n          id\n        }\n        sender {\n          id\n          name\n        }\n        recipients {\n          user {\n            id\n          }\n          message {\n            id\n            chat {\n              id\n            }\n          }\n          received_at\n          read_at\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/MessageBox.tsx", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "deleteChat($chatId: Int!)", "content": "{\n    delete_chat_users(where:{chat_id:{_eq: $chatId}}) {\n      affected_rows\n    }\n    delete_message(where:{chat_id:{_eq: $chatId}}) {\n      affected_rows\n    }\n    delete_chat(where:{id: {_eq: $chatId}}) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/ChatNavbar.tsx", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "NewChatScreenMutation($userId: Int!,$currentUserId: Int!)", "content": "{\n    insert_chat(objects: [{\n      owner_id: null,\n      users: {\n        data: [\n          {user_id: $userId},\n          {user_id: $currentUserId}\n        ]\n      }\n    \n    }]) {\n      affected_rows\n      returning {\n        ...chat\n      }\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/NewChatScreen/index.tsx", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "followCommunity($url: String)", "content": "{\n    followCommunity(url: $url) {\n      id\n      members {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Community.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "unfollowCommunity($url: String)", "content": "{\n    unfollowCommunity(url: $url) {\n      id\n      members {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Community.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "createCommunity(\n    $name: String!\n    $url: String!\n    $description: String\n    $isPrivate: Boolean\n    $image: String\n  )", "content": "{\n    createCommunity(\n      name: $name\n      url: $url\n      description: $description\n      isPrivate: $isPrivate\n      image: $image\n    ) {\n      url\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Community.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "updateChannelInfo($channelUrl: String!, $date: String!)", "content": "{\n    updateChannelInfo(channelUrl: $channelUrl, date: $date) {\n      id\n      fullname\n      username\n      bio\n      email\n      social\n      image\n      isOnline\n      owner\n      communitiesOwned {\n        id\n        url\n      }\n      communitiesFollowed {\n        id\n        url\n        author {\n          id\n        }\n        image\n        name\n        members {\n          id\n        }\n        notifications {\n          id\n        }\n      }\n      role {\n        id\n        roleSettings\n        title\n      }\n      channelsInfo {\n        id\n        channel {\n          id\n          name\n          url\n        }\n        lastUpdateAt\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/ChannelInfo.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "markNotificationsAsRead($type: String!)", "content": "{\n    markNotificationsAsRead(type: $type) {\n      count\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Notification.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "markNotificationAsRead($id: String!)", "content": "{\n    markNotificationAsRead(id: $id) {\n      count\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Notification.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "markChannelNotificationsAsRead($channelUrl: String!)", "content": "{\n    markChannelNotificationsAsRead(channelUrl: $channelUrl) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "createChannel(\n    $name: String!\n    $description: String\n    $url: String!\n    $isPrivate: Boolean\n    $communityUrl: String!\n  )", "content": "{\n    createChannel(\n      name: $name\n      description: $description\n      url: $url\n      isPrivate: $isPrivate\n      communityUrl: $communityUrl\n    ) {\n      id\n      name\n      url\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "editChannel($channelId: String!, $name: String!, $description: String)", "content": "{\n    editChannel(channelId: $channelId, name: $name, description: $description) {\n      id\n      name\n      description\n      url\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "editMessage($messageId: String!, $body: String!)", "content": "{\n    editMessage(body: $body, messageId: $messageId) {\n      body\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "deleteMessage($messageId: String!)", "content": "{\n    deleteMessage(messageId: $messageId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "toggleReaction($messageId: String!, $name: String!)", "content": "{\n    toggleReaction(messageId: $messageId, name: $name) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "sendMessage(\n    $body: String!\n    $channelUrl: String!\n    $urlList: [String!]\n    $mentions: [String!]\n    $communityUrl: String!\n  )", "content": "{\n    sendMessage(\n      body: $body\n      channelUrl: $channelUrl\n      urlList: $urlList\n      mentions: $mentions\n      communityUrl: $communityUrl\n    ) {\n      id\n      body\n      createdAt\n      urlList\n      author {\n        id\n        username\n        image\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "sendNotification(\n    $receiverName: String\n    $messageId: ID!\n    $channelUrl: String\n    $communityUrl: String\n  )", "content": "{\n    sendNotification(\n      receiverName: $receiverName\n      messageId: $messageId\n      channelUrl: $channelUrl\n      communityUrl: $communityUrl\n      type: \"mention\"\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "setUserTypingStatus($channelUrl: String, $isTyping: Boolean)", "content": "{\n    setUserTypingStatus(channelUrl: $channelUrl, isTyping: $isTyping) {\n      username\n      isTyping\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "searchMessages($channelUrl: String, $searchQuery: String)", "content": "{\n    messages: searchMessages(channelUrl: $channelUrl, searchQuery: $searchQuery) {\n      ...message\n    }\n  }\n  ${MessagesFragment}", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "replyMessage(\n    $parentId: String!\n    $body: String!\n    $urlList: [String!]\n  )", "content": "{\n    replyMessage(parentId: $parentId, body: $body, urlList: $urlList) {\n      id\n      body\n      urlList\n      author {\n        id\n        username\n        image\n        role {\n          color\n        }\n      }\n      parent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "editReplyMessage($messageId: String!, $body: String!)", "content": "{\n    editReplyMessage(body: $body, messageId: $messageId) {\n      body\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "deleteReplyMessage($messageId: String!)", "content": "{\n    deleteReplyMessage(messageId: $messageId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "logout", "content": "{\n    logout {\n      isOnline\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/User.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "users($searchString: String)", "content": "{\n    users(searchString: $searchString) {\n      id\n      username\n      fullname\n      image\n      isOnline\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/User.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "signup(\n    $fullname: String!\n    $username: String!\n    $email: String!\n    $password: String!\n    $bio: String\n  )", "content": "{\n    signup(\n      fullname: $fullname\n      username: $username\n      email: $email\n      password: $password\n      bio: $bio\n    ) {\n      token\n      user {\n        id\n        username\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/User.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/User.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "setCurrentChannel($channelUrl: String)", "content": "{\n    setCurrentChannel(channelUrl: $channelUrl) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/User.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "createRole($title: String, $roleSettings: String, $color: String)", "content": "{\n    createRole(title: $title, roleSettings: $roleSettings, color: $color) {\n      id\n      title\n      roleSettings\n      color\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Role.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "updateRole($id: String, $title: String, $roleSettings: String, $color: String)", "content": "{\n    updateRole(id: $id, title: $title, roleSettings: $roleSettings, color: $color) {\n      id\n      title\n      roleSettings\n      color\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Role.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "deleteRole($id: String!)", "content": "{\n    deleteRole(id: $id) {\n      id\n      roleSettings\n      title\n      color\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Role.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "attachRoleToUser($userId: String!, $roleId: String!)", "content": "{\n    attachRoleToUser(userId: $userId, roleId: $roleId) {\n      id\n      username\n      social\n      image\n      isOnline\n      communitiesOwned {\n        id\n        url\n      }\n      communitiesFollowed {\n        id\n        url\n      }\n      role {\n        id\n        roleSettings\n        title\n        color\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Role.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "deattachRoleToUser($userId: String!, $roleId: String!)", "content": "{\n    deattachRoleToUser(userId: $userId, roleId: $roleId) {\n      id\n      username\n      social\n      image\n      isOnline\n      communitiesOwned {\n        id\n        url\n      }\n      communitiesFollowed {\n        id\n        url\n      }\n      role {\n        id\n        roleSettings\n        title\n        color\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Role.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "uploadFile($file: File!)", "content": "{\n    uploadFile(file: $file) {\n      Key\n      filename\n      mimetype\n      encoding\n      filesize\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/File.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "($id: ID!,$title: String, $body: String, $description: String, $enable: Boolean, $banner: ID)", "content": "{\n        updatePost(input: {data: {title: $title, body: $body, description: $description, enable: $enable, banner: $banner}, where: {id: $id}}){\n            post {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "33a1987b2320151ee0f3c5dce241aa9dca9f2404", "file": "src/app/core/graphql/mutations/post-update.ts", "repo": "binary-coffee-dev_dcs-admin-frontend"}}, {"type": "mutation", "name": "($title: String, $body: String, $description: String, $enable: Boolean, $banner: ID, $author: ID)", "content": "{\n        createPost(input: {data:  {title: $title, body: $body, description: $description, enable: $enable, banner: $banner, author: $author}}){\n            post {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "33a1987b2320151ee0f3c5dce241aa9dca9f2404", "file": "src/app/core/graphql/mutations/post-create.ts", "repo": "binary-coffee-dev_dcs-admin-frontend"}}, {"type": "mutation", "name": "updateUser($id: ID!, $email: String, $page: String)", "content": "{\n        updateUser(input: { where: {id: $id},data: { email: $email, page: $page } }) {\n            user {\n                id\n                username\n                email\n                confirmed\n                blocked\n                role {\n                    name\n                }\n                page\n                avatar {\n                    url\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "33a1987b2320151ee0f3c5dce241aa9dca9f2404", "file": "src/app/core/graphql/mutations/update-profile.ts", "repo": "binary-coffee-dev_dcs-admin-frontend"}}, {"type": "mutation", "name": "updateUser($id: ID!, $avatar: ID)", "content": "{\n        updateUser(input: { where: {id: $id},data: { avatar: $avatar } }) {\n            user {\n                id\n                username\n                email\n                confirmed\n                blocked\n                role {\n                    name\n                }\n                page\n                avatar {\n                    url\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "33a1987b2320151ee0f3c5dce241aa9dca9f2404", "file": "src/app/core/graphql/mutations/update-profile.ts", "repo": "binary-coffee-dev_dcs-admin-frontend"}}, {"type": "mutation", "name": "login($identifier: String!, $password: String!)", "content": "{\n        login(input: {identifier: $identifier, password: $password}){\n            jwt\n        }\n    }", "metadata": {"commit_hash": "33a1987b2320151ee0f3c5dce241aa9dca9f2404", "file": "src/app/core/graphql/mutations/login.ts", "repo": "binary-coffee-dev_dcs-admin-frontend"}}, {"type": "mutation", "name": "AddDiscussionMessage($input: AddDiscussionMessageInput!)", "content": "{\n    addDiscussionMessage(input: $input) {\n      result {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "fragments/chat/src/useChat.ts", "repo": "atls_serenity"}}, {"type": "mutation", "name": "AddProjectReply($input: AddProjectReplyInput!)", "content": "{\n    addProjectReply(input: $input) {\n      result {\n        id\n        discussion {\n          id\n          messages {\n            id\n            content\n            author {\n              photo {\n                url\n              }\n              personalInformation {\n                firstName\n                lastName\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}}, {"type": "mutation", "name": "AddReplyMessage($input: AddReplyMessageInput!)", "content": "{\n    addReplyMessage(input: $input) {\n      result {\n        id\n        content\n        author {\n          photo {\n            url\n          }\n          personalInformation {\n            firstName\n            lastName\n          }\n        }\n      }\n      errors {\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}}, {"type": "mutation", "name": "ChangeReplyStatus($input: ChangeReplyStatusInput!)", "content": "{\n    changeReplyStatus(input: $input) {\n      result {\n        id\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}}, {"type": "mutation", "name": "ChooseSpecialist($input: ChooseSpecialistInput!)", "content": "{\n    chooseSpecialist(input: $input) {\n      result {\n        id\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}}, {"type": "mutation", "name": "ConfirmProjectReply($input: ConfirmProjectReplyInput!)", "content": "{\n    confirmProjectReply(input: $input) {\n      result {\n        id\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}}, {"type": "mutation", "name": "RejectProjectReply($input: RejectProjectReplyInput!)", "content": "{\n    rejectProjectReply(input: $input) {\n      result {\n        id\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}}, {"type": "mutation", "name": "SubmitSandboxPayment(\n    $paymentId: ID!\n    $transition: String!\n    $input: SandboxPaymentInput!\n  )", "content": "{\n    payment: submitSandboxPayment(\n      paymentId: $paymentId\n      transition: $transition\n      paymentInput: $input\n    ) {\n      ...Payment\n    }\n  }\n  ${PaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/checkout/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "SubmitBamboraPayment(\n    $paymentId: ID!\n    $transition: String!\n    $input: BamboraPaymentInput!\n  )", "content": "{\n    payment: submitBamboraPayment(\n      paymentId: $paymentId\n      transition: $transition\n      paymentInput: $input\n    ) {\n      ...Payment\n    }\n  }\n  ${PaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/checkout/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "CreateService($input: CreateServiceInput!)", "content": "{\n    service: createService(service: $input) {\n      ...Service\n    }\n  }\n  ${ServiceFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "InviteUser($serviceID: ID!, $email: String!, $role: String!)", "content": "{\n    service: inviteUser(serviceId: $serviceID, email: $email, role: $role) {\n      ...Service\n    }\n  }\n  ${ServiceFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "AcceptInvite($serviceID: ID!)", "content": "{\n    service: acceptInvite(serviceId: $serviceID) {\n      ...Service\n    }\n  }\n  ${ServiceFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "UpdateService($id: ID!, $input: UpdateServiceInput!)", "content": "{\n    service: updateService(id: $id, service: $input) {\n      ...Service\n    }\n  }\n  ${ServiceFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "SubmitRefund($paymentId: ID!, $amount: Int!, $reference: String)", "content": "{\n    refund: submitRefund(\n      paymentId: $paymentId\n      amount: $amount\n      reference: $reference\n    ) {\n      ...PaymentRefund\n    }\n  }\n  ${PaymentRefundFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "UpdateGatewayAccountCardTypes(\n    $gatewayAccountId: ID!\n    $cardTypeIds: [ID!]!\n  )", "content": "{\n    gatewayAccount: updateGatewayAccountCardTypes(\n      gatewayAccountId: $gatewayAccountId\n      cardTypeIds: $cardTypeIds\n    ) {\n      ...GatewayAccount\n    }\n  }\n  ${GatewayAccountFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "UpdateGatewayAccountCredentials(\n    $gatewayAccountId: ID!\n    $input: BamboraCredentialsInput!\n  )", "content": "{\n    gatewayAccount: updateGatewayAccountCredentials(\n      gatewayAccountId: $gatewayAccountId\n      credentials: $input\n    ) {\n      credentials {\n        ...GatewayAccountCredentials\n      }\n    }\n  }\n  ${GatewayAccountCredentialsFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "CreateProduct($gatewayAccountId: ID!, $input: CreateProductInput!)", "content": "{\n    product: createProduct(\n      gatewayAccountId: $gatewayAccountId\n      product: $input\n    ) {\n      ...Product\n    }\n  }\n  ${ProductFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "Signout", "content": "{\n    signout {\n      signedOut\n    }\n  }", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/auth/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "CreatePayment($serviceNameSlug: String!, $nameSlug: String!)", "content": "{\n    payment: createProductPayment(\n      serviceNameSlug: $serviceNameSlug\n      nameSlug: $nameSlug\n    ) {\n      ...ProductPayment\n    }\n  }\n  ${ProductPaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/products/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "UpdatePayment($id: ID!, $input: UpdateProductPaymentInput!)", "content": "{\n    payment: updateProductPayment(id: $id, productPayment: $input) {\n      ...ProductPayment\n    }\n  }\n  ${ProductPaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/products/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "SubmitPayment($id: ID!)", "content": "{\n    payment: submitProductPayment(id: $id) {\n      ...ProductPayment\n    }\n  }\n  ${ProductPaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/products/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "createUser($username: String!, $email: String!, $password: String!)", "content": "{\n  addUser(username: $username, email: $email, password: $password) {\n    token\n    user {\n        _id\n        username\n    }\n  }\n}", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/mutations.js", "repo": "Morgoth27_pewpew_spaceman"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n  login(username: $username, password: $password) {\n    token\n    user {\n        _id\n        username\n    }\n  }\n}", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/mutations.js", "repo": "Morgoth27_pewpew_spaceman"}}, {"type": "mutation", "name": "removeUser($id: ID!)", "content": "{\n    removeUser(id: $id)\n}", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/mutations.js", "repo": "Morgoth27_pewpew_spaceman"}}, {"type": "mutation", "name": "submitScore($username: String!, $score: Int!)", "content": "{\n    submitScore(username: $username, score: $score)\n}", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/mutations.js", "repo": "Morgoth27_pewpew_spaceman"}}, {"type": "mutation", "name": "CreateCost($data: CostInput!)", "content": "{\n    createCost(data: $data) {\n      ...Cost\n      ...Payer\n    }\n  }\n  ${Cost}\n  ${Payer}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "EditCost($costId: String!, $data: CostInput!)", "content": "{\n    editCost(costId: $costId, data: $data) {\n      ...Cost\n      ...Shares\n    }\n  }\n  ${Cost}\n  ${Shares}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "DestroyCost($costId: String!)", "content": "{\n    destroyCost(costId: $costId)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "GetSignedS3Url($data: S3SignedUrlInput!)", "content": "{\n    getSignedS3Url(data: $data) {\n      url\n      signedRequest\n    }\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/shared/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "CreateGroup($data: GroupInput!)", "content": "{\n    createGroup(data: $data) {\n      ...Group\n      users {\n        ...User\n      }\n      invites {\n        ...Invite\n      }\n    }\n  }\n  ${Group}\n  ${User}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/group/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "EditGroup($groupId: String!, $data: GroupInput!)", "content": "{\n    editGroup(groupId: $groupId, data: $data) {\n      ...Group\n    }\n  }\n  ${Group}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/group/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "Login($data: LoginInput!)", "content": "{\n    login(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "Register($data: RegisterInput!)", "content": "{\n    register(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "UpdateUser($data: UpdateInput!)", "content": "{\n    updateUser(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "ForgotPassword($email: String!)", "content": "{\n    forgotPassword(email: $email)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "ResetPassword($data: ResetPasswordInput!)", "content": "{\n    resetPassword(data: $data)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "CreateInvite($data: InviteInput!)", "content": "{\n    createInvite(data: $data) {\n      ...Invite\n    }\n  }\n  ${Invite}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/invite/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "DestroyInvite($inviteId: String!)", "content": "{\n    destroyInvite(inviteId: $inviteId)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/invite/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "CreateCost($data: CostInput!)", "content": "{\n    createCost(data: $data) {\n      ...Cost\n      ...Payer\n    }\n  }\n  ${CostFragmentDoc}\n  ${PayerFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "EditCost($costId: String!, $data: CostInput!)", "content": "{\n    editCost(costId: $costId, data: $data) {\n      ...Cost\n      ...Shares\n    }\n  }\n  ${CostFragmentDoc}\n  ${SharesFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "DestroyCost($costId: String!)", "content": "{\n    destroyCost(costId: $costId)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "CreateGroup($data: GroupInput!)", "content": "{\n    createGroup(data: $data) {\n      ...Group\n      users {\n        ...User\n      }\n      invites {\n        ...Invite\n      }\n    }\n  }\n  ${GroupFragmentDoc}\n  ${UserFragmentDoc}\n  ${InviteFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "EditGroup($groupId: String!, $data: GroupInput!)", "content": "{\n    editGroup(groupId: $groupId, data: $data) {\n      ...Group\n    }\n  }\n  ${GroupFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "CreateInvite($data: InviteInput!)", "content": "{\n    createInvite(data: $data) {\n      ...Invite\n    }\n  }\n  ${InviteFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "DestroyInvite($inviteId: String!)", "content": "{\n    destroyInvite(inviteId: $inviteId)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "GetSignedS3Url($data: S3SignedUrlInput!)", "content": "{\n    getSignedS3Url(data: $data) {\n      url\n      signedRequest\n    }\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "Login($data: LoginInput!)", "content": "{\n    login(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "Register($data: RegisterInput!)", "content": "{\n    register(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "UpdateUser($data: UpdateInput!)", "content": "{\n    updateUser(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "ForgotPassword($email: String!)", "content": "{\n    forgotPassword(email: $email)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "ResetPassword($data: ResetPasswordInput!)", "content": "{\n    resetPassword(data: $data)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "(\n    $recipe_id: Int!\n    $ingredient_id: Int!\n    $quantity: Int\n    $comments: String\n  )", "content": "{\n    insert_recipe_ingredient(\n      objects: [\n        {\n          ingredient_id: $ingredient_id\n          recipe_id: $recipe_id\n          quantity: $quantity\n          comments: $comments\n        }\n      ]\n    ) {\n      returning {\n        id\n        ingredient_id\n        recipe_id\n        quantity\n        comments\n        ingredient {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "821bcde594f373c2d28fe847fe7d940be8ad22bb", "file": "hasura-crud-app/src/queries/index.js", "repo": "thisdot_blog-demos"}}, {"type": "mutation", "name": "(\n    $id: Int!\n    $name: String!\n    $description: String\n    $instructions: String\n    $food_category_id: Int\n    $time_to_prepare: String\n    $number_of_servings: Int\n    $calories_per_serving: Int\n    $created_by: String\n  )", "content": "{\n    update_recipe(\n      where: { id: { _eq: $id } }\n      _set: {\n        name: $name\n        description: $description\n        instructions: $instructions\n        food_category_id: $food_category_id\n        time_to_prepare: $time_to_prepare\n        number_of_servings: $number_of_servings\n        calories_per_serving: $calories_per_serving\n        created_by: $created_by\n      }\n    ) {\n      returning {\n        id\n        name\n        description\n        instructions\n        number_of_servings\n        vegetarian\n        calories_per_serving\n        source\n        food_category_id\n        food_category {\n          id\n          name\n        }\n        created_by\n        time_to_prepare\n        recipe_ingredients {\n          id\n          ingredient {\n            id\n            name\n          }\n          quantity\n          comments\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "821bcde594f373c2d28fe847fe7d940be8ad22bb", "file": "hasura-crud-app/src/queries/index.js", "repo": "thisdot_blog-demos"}}, {"type": "mutation", "name": "addBook($name: String!, $genre: String!, $authorId: ID!)", "content": "{\n        addBook(name: $name, genre: $genre, authorId: $authorId) {\n            name\n            id\n        }\n    }", "metadata": {"commit_hash": "821bcde594f373c2d28fe847fe7d940be8ad22bb", "file": "graphql-crud/client/src/app/queries.ts", "repo": "thisdot_blog-demos"}}, {"type": "mutation", "name": "updateBook($id: ID!, $name: String, $genre: String, $authorId: ID)", "content": "{\n        updateBook(id: $id, name: $name, genre: $genre, authorId: $authorId) {\n            name\n            id\n        }\n    }", "metadata": {"commit_hash": "821bcde594f373c2d28fe847fe7d940be8ad22bb", "file": "graphql-crud/client/src/app/queries.ts", "repo": "thisdot_blog-demos"}}, {"type": "mutation", "name": "deleteBook($id: ID!)", "content": "{\n        deleteBook(id: $id) {\n            id\n            name\n        }\n    }", "metadata": {"commit_hash": "821bcde594f373c2d28fe847fe7d940be8ad22bb", "file": "graphql-crud/client/src/app/queries.ts", "repo": "thisdot_blog-demos"}}, {"type": "mutation", "name": "registerTestDomain($name: String!)", "content": "{\n    registerTestDomain(name: $name) @client {\n      id\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/routes/TestRegistrar.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "registerTestdomain($label: String)", "content": "{\n    registerTestdomain(label: $label)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setError($message: String)", "content": "{\n    setError(message: $message) {\n      message\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "getSubdomains($name: String)", "content": "{\n    getSubdomains(name: $name) {\n      name\n      owner\n      resolver\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "bid(\n    $name: String\n    $bidAmount: Int\n    $decoyBidAmount: Int\n    $secret: String\n  )", "content": "{\n    bid(\n      name: $name\n      bidAmount: $bidAmount\n      decoyBidAmount: $decoyBidAmount\n      secret: $secret\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "startAuctionAndBid(\n    $name: String\n    $bidAmount: Int\n    $decoyBidAmount: Int\n    $secret: String\n  )", "content": "{\n    startAuctionAndBid(\n      name: $name\n      bidAmount: $bidAmount\n      decoyBidAmount: $decoyBidAmount\n      secret: $secret\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setResolver($name: String, $address: String)", "content": "{\n    setResolver(name: $name, address: $address)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setOwner($name: String, $address: String)", "content": "{\n    setOwner(name: $name, address: $address)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setSubnodeOwner($name: String, $address: String)", "content": "{\n    setSubnodeOwner(name: $name, address: $address)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "createSubdomain($name: String)", "content": "{\n    createSubdomain(name: $name)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "deleteSubdomain($name: String)", "content": "{\n    deleteSubdomain(name: $name)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setName($name: String)", "content": "{\n    setName(name: $name)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setAddress($name: String, $recordValue: String)", "content": "{\n    setAddress(name: $name, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setContent($name: String, $recordValue: String)", "content": "{\n    setContent(name: $name, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setContenthash($name: String, $recordValue: String)", "content": "{\n    setContenthash(name: $name, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setText($name: String, $key: String, $recordValue: String)", "content": "{\n    setText(name: $name, key: $key, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setAddr($name: String, $key: String, $recordValue: String)", "content": "{\n    setAddr(name: $name, key: $key, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "migrateResolver($name: String)", "content": "{\n    migrateResolver(name: $name)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "addMultiRecords($name: String, $records: Records)", "content": "{\n    addMultiRecords(name: $name, records: $records)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "setRegistrant($name: String, $address: String)", "content": "{\n    setRegistrant(name: $name, address: $address)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "reclaim($name: String, $address: String)", "content": "{\n    reclaim(name: $name, address: $address)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "commit($label: String, $secret: String)", "content": "{\n    commit(label: $label, secret: $secret)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "register($label: String, $duration: Int, $secret: String)", "content": "{\n    register(label: $label, duration: $duration, secret: $secret)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "renew($label: String, $duration: Int)", "content": "{\n    renew(label: $label, duration: $duration)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "submitProof($name: String, $parentOwner: String)", "content": "{\n    submitProof(name: $name, parentOwner: $parentOwner)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "renewDomains($labels: [String], $duration: Int)", "content": "{\n    renewDomains(labels: $labels, duration: $duration)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "migrateRegistry($name: String, $address: String)", "content": "{\n    migrateRegistry(name: $name, address: $address)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "AddFavouriteMutation($domain: Domain)", "content": "{\n    addFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "AddSubDomainFavourite($domain: Domain)", "content": "{\n    addSubDomainFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "DeleteFavouriteMutation($domain: Domain)", "content": "{\n    deleteFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "DeleteSubDomainFavourite($domain: Domain)", "content": "{\n    deleteSubDomainFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "verifyEmail($token: String!)", "content": "{\n        verifyEmail(token: $token) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/verify-email.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "loginWithGoogle ($accessToken: String!)", "content": "{\n        loginWithGoogle (accessToken: $accessToken) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/login-with-google.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "changePassword($oldPassword: HashedPassword!, $newPassword: HashedPassword!)", "content": "{\n        changePassword(oldPassword: $oldPassword, newPassword: $newPassword) {\n          success\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/change-password.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "forgotPassword($email: String!)", "content": "{\n        forgotPassword(email: $email) {\n          success\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/forgot-password.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "loginWithLinkedIn($code: String! $redirectUri: String!)", "content": "{\n        loginWithLinkedIn(code: $code redirectUri: $redirectUri) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/login-with-linkedIn.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "logout($token: String!)", "content": "{\n        logout(token: $token) {\n          success\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/logout.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "sendVerificationEmail($email: String)", "content": "{\n        sendVerificationEmail(email: $email) {\n          success\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/send-verification-email.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "loginWithFacebook ($accessToken: String!)", "content": "{\n        loginWithFacebook (accessToken: $accessToken) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/login-with-facebook.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "resetPassword($newPassword: HashedPassword!, $token: String!)", "content": "{\n        resetPassword(newPassword: $newPassword, token: $token) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/reset-password.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "login ($username: String, $email: String, $password: HashedPassword!)", "content": "{\n        loginWithPassword (username: $username, email: $email, password: $password) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/login-with-password.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "createUser ($username: String, $email: String, $password: HashedPassword!, $profile: CreateUserProfileInput)", "content": "{\n        createUser (username: $username, email: $email, password: $password, profile: $profile) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/create-user.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "saveSubscription($subscription: SubscriptionInput!)", "content": "{\n    saveSubscription(subscription: $subscription) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/components/smart/pwa/subscribe-btn.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "deleteSubscription($endpoint: String!)", "content": "{\n    deleteSubscription(endpoint: $endpoint) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/components/smart/pwa/unsubscribe-btn.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "Login($email: String, $password: String)", "content": "{\n    login(email:$email, password: $password){\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "2047e35b620fe66e4fa7253daec3c2664285b96f", "file": "client/src/mutations/Login.js", "repo": "cezarneaga_apollo-cra-authenticated"}}, {"type": "mutation", "name": "Signup($email: String, $password: String)", "content": "{\n    signup(email:$email, password: $password){\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "2047e35b620fe66e4fa7253daec3c2664285b96f", "file": "client/src/mutations/Signup.js", "repo": "cezarneaga_apollo-cra-authenticated"}}, {"type": "mutation", "name": "createUser($input: CreateUserInput!)", "content": "{\n        createUser(input: $input){\n            user{\n                name\n                email\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "createVendor($input: CreateVendorInput!)", "content": "{\n        createVendor(input: $input){\n            vendor{\n                name\n                email\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "loginUser($input: LoginInput!)", "content": "{\n        loginUser(input: $input){\n            user{\n                id\n                name\n                email\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "loginVendor($input: LoginInput!)", "content": "{\n        loginVendor(input: $input){\n            vendor{\n                id\n                name\n                email\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "createItem($input: CreateItemInput!)", "content": "{\n        createItem(input: $input){\n            ...itemDetails\n        }\n    }\n    ${ITEM_DETAILS}", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "updateItem($id: ID!,$input: UpdateItemInput!)", "content": "{\n        updateItem(id: $id, input: $input){\n            ...itemDetails\n        }\n    }\n    ${ITEM_DETAILS}", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "removeItem($id: ID!)", "content": "{\n        removeItem(id: $id){\n            id\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "updateAvailability($id: ID!,$input: UpdateItemInput!)", "content": "{\n        updateItem(id: $id, input: $input){\n            id\n            is_available\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "addToCart($input: CreateCartItemInput!)", "content": "{\n        createCartItem(input: $input){\n            id\n            item{\n                id\n                name\n                type\n                price\n                is_available\n            }\n            type\n            quantity\n            delivery_date\n            added_at\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "addOrRemoveFromCart($itemId: ID!)", "content": "{\n    addOrRemoveFromCart(id: $itemId) @client\n  }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "emptyCart", "content": "{\n        emptyCart @client\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "createOrder($input: CreateOrderInput!)", "content": "{\n        createOrder(input: $input){\n            id\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "updateOrderBag($id: ID!, $input:UpdateOrderBagInput )", "content": "{\n        updateOrderBag(id: $id, input: $input){\n            id\n            type\n            status\n            delivery_date\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n        login(email: $email, password: $password) {\n          partner {\n            id\n            name\n            firstName\n            lastName\n            street\n            street2\n            city\n            state\n            {\n              id\n            }\n            country\n            {\n              id\n            }\n            email\n            phone\n          }\n        }\n      }", "metadata": {"commit_hash": "74d2a328b7e10495b34cd88c0d88a5e79458a8a3", "file": "custom-api/customQueries.js", "repo": "wnprince_template-odoo"}}, {"type": "mutation", "name": "register(\n        $email: String!\n        $firstName: String!\n        $lastName: String!\n        $password: String\n      )", "content": "{\n        register(emailPhone: $email, firstName: $firstName, lastName: $lastName, password: $password)\n      }", "metadata": {"commit_hash": "74d2a328b7e10495b34cd88c0d88a5e79458a8a3", "file": "custom-api/customQueries.js", "repo": "wnprince_template-odoo"}}, {"type": "mutation", "name": "UpdateCandle ($token: String, $exchange: String, $mode: String, $symbol: String, $timeframe: String, $bar: InputBar)", "content": "{\n        updateCandle (token: $token, exchange: $exchange, mode: $mode, symbol: $symbol, timeframe: $timeframe, bar: $bar) {\n            time\n            open\n            high\n            low\n            close\n            volume\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "ImportCandles ($token: String, $exchange: String, $mode: String, $symbol: String, $timeframe: String, $bars: [InputBar])", "content": "{\n        importCandles (token: $token, exchange: $exchange, mode: $mode, symbol: $symbol, timeframe: $timeframe, bars: $bars) {\n            time\n            open\n            high\n            low\n            close\n            volume\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "UpdatePositionCapital ($symbol: String, $capital: Float)", "content": "{\n        updatePositionCapital (symbol: $symbol, capital: $capital) {\n            symbol\n            direction\n            conditionalEntryPrice\n            startingCapital\n            tradingId\n            value\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "EnterPosition ($symbol: String, $direction: TradeDirection, $entryPrice: Float)", "content": "{\n        updatePositionStatusEnter (symbol: $symbol, direction: $direction, entryPrice: $entryPrice) {\n            symbol\n            direction\n            conditionalEntryPrice\n            startingCapital\n            tradingId\n            value\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "ExitPosition ($symbol: String)", "content": "{\n        updatePositionStatusExit (symbol: $symbol) {\n            symbol\n            direction\n            conditionalEntryPrice\n            startingCapital\n            tradingId\n            value\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "PositionPosition ($symbol: String)", "content": "{\n        updatePositionStatusPosition (symbol: $symbol) {\n            symbol\n            direction\n            conditionalEntryPrice\n            startingCapital\n            tradingId\n            value\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "NonePosition ($symbol: String)", "content": "{\n        updatePositionStatusNone (symbol: $symbol) {\n            symbol\n            direction\n            conditionalEntryPrice\n            startingCapital\n            tradingId\n            value\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "CreatePosition ($symbol: String $position: InputPosition)", "content": "{\n        createPosition (symbol: $symbol, position: $position) {\n            positionId\n            symbol\n            direction\n            entryTime\n            entryPrice\n            growth\n            profit\n            profitPct\n            holdingPeriod\n            amount\n            initialStopPrice\n            curStopPrice\n            profitTarget\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "UpdatePosition ($position: InputPosition)", "content": "{\n        updatePosition (position: $position) {\n            positionId\n            symbol\n            direction\n            entryTime\n            entryPrice\n            growth\n            profit\n            profitPct\n            holdingPeriod\n            amount\n            initialStopPrice\n            curStopPrice\n            profitTarget\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "ClosePosition ($symbol: String)", "content": "{\n        closePosition (symbol: $symbol) {\n            positionId\n            symbol\n            direction\n            entryTime\n            entryPrice\n            growth\n            profit\n            profitPct\n            holdingPeriod\n            amount\n            initialStopPrice\n            curStopPrice\n            profitTarget\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "UpdateTrading ($trade: InputTrade)", "content": "{\n        updateTrading (trade: $trade) {\n            tradingId\n            symbol\n            direction\n            entryTime\n            entryPrice\n            growth\n            profit\n            profitPct\n            holdingPeriod\n            amount\n            exitTime\n            exitPrice\n            exitReason\n            stopPrice\n            finalCapital\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "RemoveTrading ($tradingId: String)", "content": "{\n        removeTrading (tradingId: $tradingId) {\n            tradingId\n            symbol\n            direction\n            entryTime\n            entryPrice\n            growth\n            profit\n            profitPct\n            holdingPeriod\n            amount\n            exitTime\n            exitPrice\n            exitReason\n            stopPrice\n            finalCapital\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "UpdateOrder ($order: InputOrder)", "content": "{\n        updateOrder (order: $order) {\n            orderId\n            tradingId\n            symbol\n            time\n            lastQty\n            orderQty\n            leavesQty\n            lastPrice\n            price\n            avgPrice\n            stopPrice\n            side\n            ordType\n            ordStatus\n            currency\n            homeNotional\n            text\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "($files: [Upload]!, $topicId: String)", "content": "{\n    multipleUpload(files: $files, topicId: $topicId) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/component/Uploads.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "createCourse($name: String!)", "content": "{\n    addCourse(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/courses.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "deleteCourse($ids: [String]!)", "content": "{\n    deleteCourse(ids: $ids) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/courses.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "updateRole($name: String!)", "content": "{\n    updateRole(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/users.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "deleteUser($ids: [String]!)", "content": "{\n    deleteUser(ids: $ids) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/users.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "createTopic($name: String!, $unitId: String!, $courseId: String!)", "content": "{\n    addTopic(name: $name, unitId: $unitId, courseId: $courseId) {\n      name\n      _id\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/topics.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "deleteTopic($ids: [String]!)", "content": "{\n    deleteTopic(ids: $ids) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/topics.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "deleteResources($ids: [String]!)", "content": "{\n    deleteResources(ids: $ids) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/resources.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "createUnit($name: String!, $courseId: String!)", "content": "{\n    addUnit(name: $name, courseId: $courseId) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/units.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "deleteUnit($ids: [String]!)", "content": "{\n    deleteUnit(ids: $ids) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/units.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "LoginUser($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/core/queries/login.mutation.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "RegisterUser(\n    $email: String!\n    $password: String!\n    $name: String!\n    $gender: String!\n  )", "content": "{\n    register(email: $email, password: $password, name: $name, gender: $gender) {\n      email\n      password\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/core/queries/register.mutation.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "ConnectStripe($input: ConnectStripeInput!)", "content": "{\n    connectStripe(input: $input) {\n      hasWallet\n    }\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/mutations/ConnectStripe/index.ts", "repo": "AllTwinkleStars_recat"}}, {"type": "mutation", "name": "LogOut", "content": "{\n    logOut {\n      id\n      token\n      avatar\n      hasWallet\n      didRequest\n    }\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/mutations/LogOut/index.ts", "repo": "AllTwinkleStars_recat"}}, {"type": "mutation", "name": "HostListing($input: HostListingInput!)", "content": "{\n    hostListing(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/mutations/HostListing/index.ts", "repo": "AllTwinkleStars_recat"}}, {"type": "mutation", "name": "LogIn($input: LoginInput)", "content": "{\n    logIn(input: $input) {\n      id\n      token\n      avatar\n      hasWallet\n      didRequest\n    }\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/mutations/LogIn/index.ts", "repo": "AllTwinkleStars_recat"}}, {"type": "mutation", "name": "CreateBooking($input: CreateBookingInput!)", "content": "{\n    createBooking(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/mutations/CreateBooking/index.ts", "repo": "AllTwinkleStars_recat"}}, {"type": "mutation", "name": "DisconnectStripe", "content": "{\n    disconnectStripe {\n      hasWallet\n    }\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/mutations/DisconnectStripe/index.ts", "repo": "AllTwinkleStars_recat"}}, {"type": "mutation", "name": "giveStar($in: LessonUserId)", "content": "{\n    giveStar(input: $in)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "approveSubmission($in: SubmissionEdit)", "content": "{\n    approveSubmission(input: $in) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "makeTeacher($in: LessonId)", "content": "{\n    makeTeacher(input: $in)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "unMakeTeacher($in: LessonId)", "content": "{\n    unMakeTeacher(input: $in)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "unapproveSubmission($in: SubmissionEdit)", "content": "{\n    unapproveSubmission(input: $in) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "rejectSubmission($in: SubmissionEdit)", "content": "{\n    rejectSubmission(input: $in) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "createSubmission($in: SubmissionInput)", "content": "{\n    createSubmission(input: $in) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "adoptStudent($input: LessonUserId)", "content": "{\n    adoptStudent(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "unAdoptStudent($input: LessonUserId)", "content": "{\n    unAdoptStudent(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "saveLesson($input: LessonInput)", "content": "{\n    saveLesson(input: $input) {\n      id\n      description\n      docUrl\n      githubUrl\n      videoUrl\n      order\n      title\n      chatUrl\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "createLesson($input: LessonInput)", "content": "{\n    createLesson(input: $input) {\n      id\n      description\n      docUrl\n      githubUrl\n      videoUrl\n      order\n      title\n      chatUrl\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "saveChallenge($input: ChallengeInput)", "content": "{\n    saveChallenge(input: $input) {\n      id\n      lessonId\n      title\n      description\n      order\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "createChallenge($input: ChallengeInput)", "content": "{\n    createChallenge(input: $input) {\n      id\n      lessonId\n      title\n      description\n      order\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "deleteLesson($input: LessonId)", "content": "{\n    deleteLesson(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "deleteChallenge($input: ChallengeId)", "content": "{\n    deleteChallenge(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "($in: UserAdmin)", "content": "{\n    toggleAdmin(input: $in){\n      id,\n      isAdmin\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "($input: String)", "content": "{\n    sendPasswordResetEmail(value: $input )\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "($input: inviteToCohort)", "content": "{\n    inviteToCohort(value: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "($input: PasswordChange)", "content": "{\n    forgotResetPassword(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "($input: String)", "content": "{\n    resendEmailConfirmation(value: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "delete($input: String)", "content": "{\n    deleteAnnouncement(value: $input) {\n      id,\n      description\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "create($input: String)", "content": "{\n    createAnnouncement(value: $input) {\n      id,\n      description\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "deleteWaitlistStudent($input: inviteToCohort)", "content": "{\n    deleteWaitlistStudent(value: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "(\n      $target: NotificationTargets!\n      $type: NotificationTypes!\n      $accountId: ID!\n      $balance: Float!\n      $date: AWSDateTime!\n      $delta: Float!\n      $description: String!\n      $id: ID!\n    )", "content": "{\n      notifyTransactionCreated(\n        data: {\n          target: $target\n          type: $type\n          accountId: $accountId\n          transaction: {\n            balance: $balance\n            date: $date\n            delta: $delta\n            description: $description\n            id: $id\n          }\n        }\n      ) {\n        transaction {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "e5ea650d524a01b7811e2e8e6daa8b7a6cdcd5ab", "file": "src/shared/infra/appsync/templates/Mutation.notifyTransactionCreated.e2e.ts", "repo": "s4nt14go_white-label"}}, {"type": "mutation", "name": "($data: NotifyTransactionCreatedInput!)", "content": "{\n          notifyTransactionCreated(data: $data) {\n            target\n            type\n            accountId\n            transaction {\n              id\n              balance\n              delta\n              date\n              description\n            }\n          }\n        }", "metadata": {"commit_hash": "e5ea650d524a01b7811e2e8e6daa8b7a6cdcd5ab", "file": "src/modules/notification/services/fe/FeService.ts", "repo": "s4nt14go_white-label"}}, {"type": "mutation", "name": "($userId: ID!, $description: String!, $delta: Float!)", "content": "{\n        createTransaction(\n          userId: $userId\n          description: $description\n          delta: $delta\n        ) {\n          __typename\n        }\n      }", "metadata": {"commit_hash": "e5ea650d524a01b7811e2e8e6daa8b7a6cdcd5ab", "file": "src/modules/notification/useCases/notifyFE/NotifyFE.e2e.ts", "repo": "s4nt14go_white-label"}}, {"type": "mutation", "name": "MyMutation(\n        $email: AWSEmail!\n        $password: String!\n        $username: String!\n        $alias: String\n      )", "content": "{\n        createUser(\n          email: $email\n          password: $password\n          username: $username\n          alias: $alias\n        ) {\n          id\n          response_time\n        }\n      }", "metadata": {"commit_hash": "e5ea650d524a01b7811e2e8e6daa8b7a6cdcd5ab", "file": "src/modules/users/useCases/createUser/CreateUser.e2e.ts", "repo": "s4nt14go_white-label"}}, {"type": "mutation", "name": "($userId: ID!, $description: String!, $delta: Float!)", "content": "{\n        createTransaction(\n          userId: $userId\n          description: $description\n          delta: $delta\n        ) {\n          id\n          response_time\n        }\n      }", "metadata": {"commit_hash": "e5ea650d524a01b7811e2e8e6daa8b7a6cdcd5ab", "file": "src/modules/accounts/useCases/createTransaction/CreateTransaction.e2e.ts", "repo": "s4nt14go_white-label"}}, {"type": "mutation", "name": "MyMutation(\n        $fromDescription: String!\n        $fromUserId: ID!\n        $quantity: Float!\n        $toUserId: ID!\n        $toDescription: String\n      )", "content": "{\n        transfer(\n          fromDescription: $fromDescription\n          fromUserId: $fromUserId\n          quantity: $quantity\n          toUserId: $toUserId\n          toDescription: $toDescription\n        ) {\n          fromTransaction\n          toTransaction\n          response_time\n        }\n      }", "metadata": {"commit_hash": "e5ea650d524a01b7811e2e8e6daa8b7a6cdcd5ab", "file": "src/modules/accounts/useCases/transfer/Transfer.e2e.ts", "repo": "s4nt14go_white-label"}}, {"type": "mutation", "name": "UpvotePost($postId: Int!)", "content": "{\n    upvotePost(postId: $postId) {\n      id\n      title\n      votes\n    }\n  }", "metadata": {"commit_hash": "e65f9275fa83daf8c6816c358e73e3aa7b0c6fc8", "file": "examples/apollo/components/Author.js", "repo": "react-cosmos_react-cosmos-classic"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      roles\n    }\n  }", "metadata": {"commit_hash": "f5ab662234b8c76b3aec239184c34ae7b8b89d6e", "file": "admin-ui/src/auth-provider/ra-auth-http.ts", "repo": "VoidCupboard_ContactBook"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "f5ab662234b8c76b3aec239184c34ae7b8b89d6e", "file": "admin-ui/src/auth-provider/ra-auth-jwt.ts", "repo": "VoidCupboard_ContactBook"}}, {"type": "mutation", "name": "AddTodo_CreateTodo($body: String!)", "content": "{\n    createTodo(body: $body) {\n      id\n      __typename\n      body\n      status\n    }\n  }", "metadata": {"commit_hash": "1031aa444ebf354ed13eb74c16f02d76b09f3302", "file": "fixtures/example-todo-master/web/src/components/AddTodo/AddTodo.js", "repo": "decoupled_redwood-core"}}, {"type": "mutation", "name": "TodoListCell_CheckTodo($id: Int!, $status: String!)", "content": "{\n    updateTodoStatus(id: $id, status: $status) {\n      id\n      __typename\n      status\n    }\n  }", "metadata": {"commit_hash": "1031aa444ebf354ed13eb74c16f02d76b09f3302", "file": "fixtures/example-todo-master/web/src/components/TodoListCell/TodoListCell.js", "repo": "decoupled_redwood-core"}}, {"type": "mutation", "name": "AddTodo_CreateTodo($body: String!)", "content": "{\n    createTodo(body: $body) {\n      id\n      __typename\n      body\n      status\n    }\n  }", "metadata": {"commit_hash": "1031aa444ebf354ed13eb74c16f02d76b09f3302", "file": "fixtures/example-todo-master-with-errors/web/src/components/AddTodo/AddTodo.js", "repo": "decoupled_redwood-core"}}, {"type": "mutation", "name": "TodoListCell_CheckTodo($id: Int!, $status: String!)", "content": "{\n    updateTodoStatus(id: $id, status: $status) {\n      id\n      __typename\n      status\n    }\n  }", "metadata": {"commit_hash": "1031aa444ebf354ed13eb74c16f02d76b09f3302", "file": "fixtures/example-todo-master-with-errors/web/src/components/TodoListCell/TodoListCell.js", "repo": "decoupled_redwood-core"}}, {"type": "mutation", "name": "paymentAdd($", "content": "{commonPaymentParamDefs}) {\n  paymentAdd(${commonPaymentParams}) {\n    _id\n  }\n}", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "PaymentEdit($_id: String!, $", "content": "{commonPaymentParamDefs}) {\n  paymentEdit(_id: $_id, ${commonPaymentParams}) {\n    _id\n  }\n}", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "paymentRemove($_id: String!)", "content": "{\n    paymentRemove(_id: $_id)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "createInvoice($", "content": "{createInvoiceParamDefs}) {\n  createInvoice(${createInvoiceParams})\n}", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "SetPaymentConfig($contentType: String!, $contentTypeId: String!)", "content": "{\n    setPaymentConfig(contentType: $contentType, contentTypeId: $contentTypeId) {\n      _id\n      paymentIds\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "PaymentConfigsAdd($contentType: String!, $contentTypeId: String!, $paymentIds: [String])", "content": "{\n  paymentConfigsAdd(contentType: $contentType, contentTypeId: $contentTypeId, paymentIds: $paymentIds) {\n    ${paymentConfigFields}\n  }\n}", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "PaymentConfigsEdit($_id: String!, $paymentIds: [String])", "content": "{\n    paymentConfigsEdit(_id: $_id, paymentIds: $paymentIds) {\n      ${paymentConfigFields}\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "PaymentConfigsRemove($_id: String!)", "content": "{\n    paymentConfigsRemove(_id: $_id)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "usersConfigEmailSignatures($signatures: [EmailSignature])", "content": "{\n          usersConfigEmailSignatures(signatures: $signatures) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/ui-settings/src/email/containers/Signature.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "tagsTag(\n    $type: String!\n    $targetIds: [String!]!\n    $tagIds: [String!]!\n  )", "content": "{\n    tagsTag(type: $type, targetIds: $targetIds, tagIds: $tagIds)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/ui-tags/src/containers/Tagger.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "usersChangePassword(\n          $currentPassword: String!\n          $newPassword: String!\n        )", "content": "{\n          usersChangePassword(\n            currentPassword: $currentPassword\n            newPassword: $newPassword\n          ) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/core-ui/src/modules/settings/profile/containers/ChangePassword.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "Mutation", "content": "{\n    clientPortalLogout\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-forum-ui/src/containers/subscriptionProducts/PaymentTest/CpLogin.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "ClientPortalLogin(\n    $clientPortalId: String!\n    $login: String!\n    $password: String!\n  )", "content": "{\n    clientPortalLogin(\n      clientPortalId: $clientPortalId\n      login: $login\n      password: $password\n    )\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-forum-ui/src/containers/subscriptionProducts/PaymentTest/CpLogin.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "GenerateInvoiceUrl(\n    $amount: Float!\n    $contentType: String\n    $contentTypeId: String\n    $customerId: String\n  )", "content": "{\n    generateInvoiceUrl(\n      amount: $amount\n      contentType: $contentType\n      contentTypeId: $contentTypeId\n      customerId: $customerId\n    )\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-forum-ui/src/containers/subscriptionProducts/PaymentTest/index.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "ForumCpCreateSubscriptionOrder($subscriptionProductId: ID!)", "content": "{\n    forumCpCreateSubscriptionOrder(\n      subscriptionProductId: $subscriptionProductId\n    ) {\n      _id\n      cpUserId\n      createdAt\n      state\n      price\n      multiplier\n      invoiceId\n      contentType\n      unit\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-forum-ui/src/containers/subscriptionProducts/PaymentTest/index.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "ForumCpCompleteSubscriptionOrder(\n    $invoiceId: ID!\n    $subscriptionOrderId: ID!\n  )", "content": "{\n    forumCpCompleteSubscriptionOrder(\n      invoiceId: $invoiceId\n      subscriptionOrderId: $subscriptionOrderId\n    )\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-forum-ui/src/containers/subscriptionProducts/PaymentTest/index.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "usersConfigGetNotificationByEmail($isAllowed: Boolean)", "content": "{\n          usersConfigGetNotificationByEmail(isAllowed: $isAllowed) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-notifications-ui/src/containers/NotificationSettings.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "notificationsSaveConfig(\n          $notifType: String!\n          $isAllowed: Boolean\n        )", "content": "{\n          notificationsSaveConfig(\n            notifType: $notifType\n            isAllowed: $isAllowed\n          ) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-notifications-ui/src/containers/NotificationSettings.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "ClientPortalNotificationsRemove($ids: [String])", "content": "{\n    clientPortalNotificationsRemove(_ids: $ids)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/main/containers/notifications/Detail.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "ClientPortalNotificationsMarkAsRead($ids: [String])", "content": "{\n    clientPortalNotificationsMarkAsRead(_ids: $ids)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/main/containers/notifications/List.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "clientPortalCreateCard(\n    $type: String!\n    $stageId: String!\n    $subject: String!\n    $description: String\n    $priority: String\n    $attachments: [AttachmentInput]\n  )", "content": "{\n    clientPortalCreateCard(\n      type: $type\n      stageId: $stageId\n      subject: $subject\n      description: $description\n      priority: $priority\n      attachments: $attachments\n    )\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/publicTask/containers/Form.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "ClientPortalUserUpdateNotificationSettings(\n    $configs: [NotificationConfigInput]\n    $receiveByEmail: Boolean\n    $receiveBySms: Boolean\n  )", "content": "{\n    clientPortalUserUpdateNotificationSettings(\n      configs: $configs\n      receiveByEmail: $receiveByEmail\n      receiveBySms: $receiveBySms\n    ) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/user/containers/Settings.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "widgetsSaveCustomerGetNotified(\n            $customerId: String\n            $visitorId: String\n            $type: String!\n            $value: String!\n          )", "content": "{\n            widgetsSaveCustomerGetNotified(\n              customerId: $customerId\n              visitorId: $visitorId\n              type: $type\n              value: $value\n            )\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "widgets/client/messenger/containers/AppContext.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "changeConversationOperator(\n            $_id: String!\n            $operatorStatus: String!\n          )", "content": "{\n            changeConversationOperator(\n              _id: $_id\n              operatorStatus: $operatorStatus\n            )\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "widgets/client/messenger/containers/AppContext.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "widgetGetBotInitialMessage($integrationId: String)", "content": "{\n            widgetGetBotInitialMessage(integrationId: $integrationId)\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "widgets/client/messenger/containers/AppContext.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "widgetBotRequest(\n            $message: String!\n            $payload: String!\n            $type: String!\n            $conversationId: String\n            $customerId: String\n            $visitorId: String\n            $integrationId: String!\n          )", "content": "{\n            widgetBotRequest(\n              message: $message\n              payload: $payload\n              type: $type\n              conversationId: $conversationId\n              customerId: $customerId\n              visitorId: $visitorId\n              integrationId: $integrationId\n            )\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "widgets/client/messenger/containers/AppContext.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "widgetsInsertMessage(\n              $", "content": "{connection.queryVariables}\n              $message: String\n              $contentType: String\n              $conversationId: String\n              $attachments: [AttachmentInput]\n              $skillId: String\n            ) {\n\n            widgetsInsertMessage(\n              ${connection.queryParams}\n              contentType: $contentType\n              message: $message\n              conversationId: $conversationId\n              attachments: $attachments\n              skillId: $skillId\n            ) {\n              ${graphqlTypes.messageFields}\n            }\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "widgets/client/messenger/containers/AppContext.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "CreateStoreOptions($input: StoreOptionsInput)", "content": "{\n  createStoreOptions(input: $input) {\n    id\n    slider\n    slider_image\n    bestProducts\n    ourBrands\n    whatsapp\n    popup\n    primaryColor\n    bgColor\n    popupImage\n    storeId\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "mutation", "name": "CreateProduct($input: ProductInput)", "content": "{\n  createProduct(input: $input) {\n    id\n    uuid\n    name\n    description\n    image\n    price\n    promoPrice\n    stock\n    status\n    createdAt\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "mutation", "name": "CreateStore($input: StoreInput)", "content": "{\n  createStore(input: $input) {\n    id\n    name\n    address\n    phone\n    description\n    image\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "mutation", "name": "DeleteProduct($deleteProductId: ID!)", "content": "{\n  deleteProduct(id: $deleteProductId) {\n    id\n    name\n    description\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "mutation", "name": "Login($input: LoginInput)", "content": "{\n  login(input: $input) {\n    id\n    firstName\n    lastName\n    email\n    role\n    token\n    store {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "mutation", "name": "UpdateOptions($input: StoreOptionsInput, $updateStoreOptionsId: ID!)", "content": "{\n  updateStoreOptions(input: $input, id: $updateStoreOptionsId) {\n    id\n    slider\n    slider_image\n    bestProducts\n    ourBrands\n    whatsapp\n    primaryColor\n    bgColor\n    storeId\n    popup\n    popupImage\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "mutation", "name": "RecommendationMutation(\n\t\t$name: String!\n\t\t$parameters: [JobParameterInput]\n\t\t$runDataPeriod: JobRunDataPeriod\n\t\t$runFrequency: JobRunFrequency\n\t\t$runNow: Boolean\n\t\t$type: JobType!\n\t)", "content": "{\n\t\tcreateJob(\n\t\t\tname: $name\n\t\t\tparameters: $parameters\n\t\t\trunDataPeriod: $runDataPeriod\n\t\t\trunFrequency: $runFrequency\n\t\t\trunNow: $runNow\n\t\t\ttype: $type\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tparameters {\n\t\t\t\tname\n\t\t\t\tvalue\n\t\t\t}\n\t\t\tstatus\n\t\t\trunDataPeriod\n\t\t\trunDate\n\t\t\trunFrequency\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "RecommendationDeleteMutation($jobIds: [String]!)", "content": "{\n\t\tdeleteJobs(jobIds: $jobIds)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "RecommendationRunMutation(\n\t\t$jobId: String!\n\t\t$runDataPeriod: JobRunDataPeriod!\n\t)", "content": "{\n\t\trunJob(jobId: $jobId, runDataPeriod: $runDataPeriod) {\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "RecommendationUpdateMutation(\n\t\t$jobId: String!\n\t\t$name: String!\n\t\t$parameters: [JobParameterInput]\n\t\t$runDataPeriod: JobRunDataPeriod\n\t\t$runFrequency: JobRunFrequency\n\t\t$runNow: Boolean\n\t)", "content": "{\n\t\tupdateJob(\n\t\t\tjobId: $jobId\n\t\t\tname: $name\n\t\t\tparameters: $parameters\n\t\t\trunDataPeriod: $runDataPeriod\n\t\t\trunFrequency: $runFrequency\n\t\t\trunNow: $runNow\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tparameters {\n\t\t\t\tname\n\t\t\t\tvalue\n\t\t\t}\n\t\t\tstatus\n\t\t\trunDataPeriod\n\t\t\trunDate\n\t\t\trunFrequency\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "Preference($key: String!, $value: String!)", "content": "{\n\t\tpreference(key: $key, value: $value) {\n\t\t\tkey\n\t\t\tvalue\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/data-privacy/queries/PreferenceMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "DataControlRequest(\n\t\t$emailAddresses: [String]\n\t\t$fileName: String\n\t\t$ownerId: String!\n\t\t$types: [DataControlTaskType]!\n\t)", "content": "{\n\t\tdataControlTasks(\n\t\t\temailAddresses: $emailAddresses\n\t\t\tfileName: $fileName\n\t\t\townerId: $ownerId\n\t\t\ttypes: $types\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/data-privacy/queries/DataControlRequestMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "CustomAssetsReportMutation(\n\t\t$dashboardId: String!\n\t\t$definition: String!\n\t\t$modifiedByUserName: String!\n\t\t$modifiedByUserId: String!\n\t)", "content": "{\n\t\tdashboard(\n\t\t\tdashboardId: $dashboardId\n\t\t\tdefinition: $definition\n\t\t\tmodifiedByUserName: $modifiedByUserName\n\t\t\tmodifiedByUserId: $modifiedByUserId\n\t\t) {\n\t\t\tassetId\n\t\t\tassetTitle\n\t\t\tdefinition\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/CustomAssetsReportMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "ExperimentMutation(\n\t\t$experimentId: String!\n\t\t$experimentSettings: ExperimentSettings\n\t\t$publishedDXPVariantId: String\n\t\t$status: String!\n\t)", "content": "{\n\t\texperiment(\n\t\t\texperimentId: $experimentId\n\t\t\texperimentSettings: $experimentSettings\n\t\t\tpublishedDXPVariantId: $publishedDXPVariantId\n\t\t\tstatus: $status\n\t\t) {\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/experiments/queries/ExperimentMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "ExperimentDeleteMutation($experimentId: String!)", "content": "{\n\t\tdeleteExperiment(experimentId: $experimentId)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/experiments/queries/ExperimentMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "updateAccountSubscriptionGroup(\n\t\t$accountSubscriptionGroupId: Long!\n\t\t$AccountSubscriptionGroup: InputC_AccountSubscriptionGroup!\n\t)", "content": "{\n\t\tupdateAccountSubscriptionGroup(\n\t\t\taccountSubscriptionGroupId: $accountSubscriptionGroupId\n\t\t\tinput: $AccountSubscriptionGroup\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"PUT\"\n\t\t\t\ttype: \"C_AccountSubscriptionGroup\"\n\t\t\t\tpath: \"/c/accountsubscriptiongroups/{args.accountSubscriptionGroupId}\"\n\t\t\t) {\n\t\t\taccountSubscriptionGroupId\n\t\t\taccountKey\n\t\t\tactivationStatus\n\t\t\texternalReferenceCode\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/account-subscription-groups/queries/useUpdateAccountSubscriptionGroup.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "updateLiferayExperienceCloudEnvironment(\n\t\t$liferayExperienceCloudEnvironmentId: Long!\n\t\t$LiferayExperienceCloudEnvironment: InputC_LiferayExperienceCloudEnvironment!\n\t)", "content": "{\n\t\tupdateLiferayExperienceCloudEnvironment(\n\t\t\tliferayExperienceCloudEnvironmentId: $liferayExperienceCloudEnvironmentId\n\t\t\tinput: $LiferayExperienceCloudEnvironment\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"PUT\"\n\t\t\t\ttype: \"C_LiferayExperienceCloudEnvironment\"\n\t\t\t\tpath: \"/c/liferayexperiencecloudenvironments/{args.liferayExperienceCloudEnvironmentId}\"\n\t\t\t) {\n\t\t\tliferayExperienceCloudEnvironmentId\n\t\t\tprojectId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/liferay-experience-cloud-environments/queries/useUpdateLiferayExperienceCloudEnvironment.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "createLiferayExperienceCloudEnvironment(\n\t\t$LiferayExperienceCloudEnvironment: InputC_LiferayExperienceCloudEnvironment!\n\t)", "content": "{\n\t\tcreateLiferayExperienceCloudEnvironment(\n\t\t\tinput: $LiferayExperienceCloudEnvironment\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_LiferayExperienceCloudEnvironment\"\n\t\t\t\tpath: \"/c/liferayexperiencecloudenvironments\"\n\t\t\t) {\n\t\t\taccountKey\n\t\t\tid\n\t\t\tincidentManagementEmailAddress\n\t\t\tincidentManagementFullName\n\t\t\tprimaryRegion\n\t\t\tprojectId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/liferay-experience-cloud-environments/queries/useCreateLiferayExperienceCloudEnvironment.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "createAdminLiferayExperienceCloud(\n\t\t$AdminLiferayExperienceCloud: InputC_AdminLiferayExperienceCloud!\n\t)", "content": "{\n\t\tcreateAdminLiferayExperienceCloud(input: $AdminLiferayExperienceCloud)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_AdminLiferayExperienceCloud\"\n\t\t\t\tpath: \"/c/adminliferayexperienceclouds\"\n\t\t\t) {\n\t\t\temailAddress\n\t\t\tfullName\n\t\t\tgithubUsername\n\t\t\tliferayExperienceCloudEnvironmentId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/liferay-experience-cloud-environments/queries/useCreateAdminLiferayExperienceCloud.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "HideBlockedCustomEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\thideBlockedEventDefinitions(\n\t\t\tblockedEventDefinitionIds: $eventDefinitionIds\n\t\t) {\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\tlastSeenDate\n\t\t\tlastSeenURL\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/definitions/events/queries/BlockedCustomEventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "UnhideBlockedCustomEventDefinitions(\n\t\t$eventDefinitionIds: [String]!\n\t)", "content": "{\n\t\tunhideBlockedEventDefinitions(\n\t\t\tblockedEventDefinitionIds: $eventDefinitionIds\n\t\t) {\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\tlastSeenDate\n\t\t\tlastSeenURL\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/definitions/events/queries/BlockedCustomEventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "UpdateEventDefinition(\n\t\t$description: String\n\t\t$displayName: String\n\t\t$id: String!\n\t)", "content": "{\n\t\tupdateEventDefinition(\n\t\t\tdescription: $description\n\t\t\tdisplayName: $displayName\n\t\t\teventDefinitionId: $id\n\t\t) {\n\t\t\tdescription\n\t\t\tdisplayName\n\t\t\teventAttributeDefinitions {\n\t\t\t\tdataType\n\t\t\t\tdescription\n\t\t\t\tdisplayName\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tsampleValue\n\t\t\t}\n\t\t\tid\n\t\t\tname\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventDefinitionQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "DeleteEventAnalysisMutation($eventAnalysisIds: [String]!)", "content": "{\n\t\tdeleteEventAnalyses(eventAnalysisIds: $eventAnalysisIds)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventAnalysisQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "CreateEventAnalysis(\n\t\t$analysisType: AnalysisType!\n\t\t$channelId: String!\n\t\t$compareToPrevious: Boolean!\n\t\t$eventAnalysisBreakdowns: [EventAnalysisBreakdownInput]\n\t\t$eventAnalysisFilters: [EventAnalysisFilterInput]\n\t\t$eventDefinitionId: String!\n\t\t$name: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$userId: String!\n\t\t$userName: String!\n\t)", "content": "{\n\t\tcreateEventAnalysis(\n\t\t\tanalysisType: $analysisType\n\t\t\tchannelId: $channelId\n\t\t\tcompareToPrevious: $compareToPrevious\n\t\t\teventAnalysisBreakdowns: $eventAnalysisBreakdowns\n\t\t\teventAnalysisFilters: $eventAnalysisFilters\n\t\t\teventDefinitionId: $eventDefinitionId\n\t\t\tname: $name\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\tuserId: $userId\n\t\t\tuserName: $userName\n\t\t) {\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventAnalysisQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "UpdateEventAnalysis(\n\t\t$analysisType: AnalysisType!\n\t\t$channelId: String!\n\t\t$compareToPrevious: Boolean!\n\t\t$eventAnalysisBreakdowns: [EventAnalysisBreakdownInput]\n\t\t$eventAnalysisFilters: [EventAnalysisFilterInput]\n\t\t$eventAnalysisId: String!\n\t\t$eventDefinitionId: String!\n\t\t$name: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$userId: String!\n\t\t$userName: String!\n\t)", "content": "{\n\t\tupdateEventAnalysis(\n\t\t\tanalysisType: $analysisType\n\t\t\tchannelId: $channelId\n\t\t\tcompareToPrevious: $compareToPrevious\n\t\t\teventAnalysisBreakdowns: $eventAnalysisBreakdowns\n\t\t\teventAnalysisFilters: $eventAnalysisFilters\n\t\t\teventAnalysisId: $eventAnalysisId\n\t\t\teventDefinitionId: $eventDefinitionId\n\t\t\tname: $name\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\tuserId: $userId\n\t\t\tuserName: $userName\n\t\t) {\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventAnalysisQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "HideEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\thideEventDefinitions(eventDefinitionIds: $eventDefinitionIds) {\n\t\t\tdescription\n\t\t\tdisplayName\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "UnhideEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\tunhideEventDefinitions(eventDefinitionIds: $eventDefinitionIds) {\n\t\t\tdescription\n\t\t\tdisplayName\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "BlockCustomEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\tblockCustomEventDefinitions(eventDefinitionIds: $eventDefinitionIds)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/CustomEventDefinitions.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "UnblockCustomEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\tunblockCustomEventDefinitions(eventDefinitionIds: $eventDefinitionIds)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/CustomEventDefinitions.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "UpdateEventAttributeDefinition(\n\t\t$dataType: EventAttributeDefinitionDataType\n\t\t$description: String\n\t\t$displayName: String\n\t\t$id: String!\n\t)", "content": "{\n\t\tupdateEventAttributeDefinition(\n\t\t\tdataType: $dataType\n\t\t\tdescription: $description\n\t\t\tdisplayName: $displayName\n\t\t\teventAttributeDefinitionId: $id\n\t\t) {\n\t\t\tdataType\n\t\t\tdescription\n\t\t\tdisplayName\n\t\t\tid\n\t\t\tname\n\t\t\trecentValues {\n\t\t\t\tlastSeenDate\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventAttributeDefinitionQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "patchOrderItemByExternalReferenceCode(\n\t\t$externalReferenceCode: String\n\t\t$orderItem: InputOrderItem\n\t)", "content": "{\n\t\tpatchOrderItemByExternalReferenceCode(\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t\torderItem: $orderItem\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "addAccountFlag($accountFlag: InputC_AccountFlag!)", "content": "{\n\t\tcreateAccountFlag(input: $accountFlag)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_AccountFlag\"\n\t\t\t\tpath: \"/c/accountflags\"\n\t\t\t) {\n\t\t\taccountKey\n\t\t\tname\n\t\t\tfinished\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "addDXPCloudEnvironment(\n\t\t$DXPCloudEnvironment: InputC_DXPCloudEnvironment!\n\t)", "content": "{\n\t\tcreateDXPCloudEnvironment(input: $DXPCloudEnvironment)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_DXPCloudEnvironment\"\n\t\t\t\tpath: \"/c/dxpcloudenvironments/\"\n\t\t\t) {\n\t\t\taccountKey\n\t\t\tdataCenterRegion\n\t\t\tdisasterDataCenterRegion\n\t\t\tid\n\t\t\tprojectId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "addAdminDXPCloud($AdminDXPCloud: InputC_AdminDXPCloud!)", "content": "{\n\t\tcreateAdminDXPCloud(input: $AdminDXPCloud)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_AdminDXPCloud\"\n\t\t\t\tpath: \"/c/admindxpclouds/\"\n\t\t\t) {\n\t\t\temailAddress\n\t\t\tfirstName\n\t\t\tgithubUsername\n\t\t\tlastName\n\t\t\tdxpCloudEnvironmentId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "updateDXPCloudProjectId(\n\t\t$dxpCloudEnvironmentId: Long!\n\t\t$DXPCloudEnvironment: InputC_DXPCloudEnvironment!\n\t)", "content": "{\n\t\tupdateDXPCloudEnvironment(\n\t\t\tdxpCloudEnvironmentId: $dxpCloudEnvironmentId\n\t\t\tinput: $DXPCloudEnvironment\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"PUT\"\n\t\t\t\ttype: \"C_DXPCloudEnvironment\"\n\t\t\t\tpath: \"/c/dxpcloudenvironments/{args.dxpCloudEnvironmentId}\"\n\t\t\t) {\n\t\t\tdxpCloudEnvironmentId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "addAnalyticsCloudWorkspace(\n\t\t$analyticsCloudWorkspace: InputC_AnalyticsCloudWorkspace!\n\t)", "content": "{\n\t\tcreateAnalyticsCloudWorkspace(input: $analyticsCloudWorkspace)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_AnalyticsCloudWorkspace\"\n\t\t\t\tpath: \"/c/analyticscloudworkspaces/\"\n\t\t\t) {\n\t\t\taccountKey\n\t\t\tallowedEmailDomains\n\t\t\tdataCenterLocation\n\t\t\tid\n\t\t\townerEmailAddress\n\t\t\ttimeZone\n\t\t\tworkspaceFriendlyUrl\n\t\t\tworkspaceName\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "addIncidentReportAnalyticsCloud(\n\t\t$IncidentReportContactAnalyticsCloud: InputC_IncidentReportContactAnalyticsCloud!\n\t)", "content": "{\n\t\tcreateIncidentReportContactAnalyticsCloud(\n\t\t\tinput: $IncidentReportContactAnalyticsCloud\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_IncidentReportContactAnalyticsCloud\"\n\t\t\t\tpath: \"/c/incidentreportcontactanalyticsclouds/\"\n\t\t\t) {\n\t\t\temailAddress\n\t\t\tanalyticsCloudWorkspaceId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "addTeamMembersInvitation(\n\t\t$TeamMembersInvitation: [InputC_TeamMembersInvitation]!\n\t)", "content": "{\n\t\tcreateTeamMembersInvitation(input: $TeamMembersInvitation)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_TeamMembersInvitation\"\n\t\t\t\tpath: \"/c/teammembersinvitations/batch\"\n\t\t\t) {\n\t\t\temail\n\t\t\trole\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "createAndAssociateUserAccountWithAccountAndAccountRole(\n\t\t$emailAddress: String!\n\t\t$userAccount: InputUserAccount!\n\t\t$accountKey: String!\n\t\t$accountRoleId: Long!\n\t)", "content": "{\n\t\tcreateAccountUserAccountByExternalReferenceCode(\n\t\t\tuserAccount: $userAccount\n\t\t\texternalReferenceCode: $accountKey\n\t\t) {\n\t\t\tid\n\t\t}\n\t\tcreateAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress(\n\t\t\taccountRoleId: $accountRoleId\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $accountKey\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "associateUserAccountWithAccount(\n\t\t$emailAddress: String!\n\t\t$accountKey: String!\n\t)", "content": "{\n\t\tcreateAccountUserAccountByExternalReferenceCodeByEmailAddress(\n\t\t\texternalReferenceCode: $accountKey\n\t\t\temailAddress: $emailAddress\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "associateUserAccountWithAccountAndAccountRole(\n\t\t$emailAddress: String!\n\t\t$accountKey: String!\n\t\t$accountRoleId: Long!\n\t)", "content": "{\n\t\tcreateAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress(\n\t\t\taccountRoleId: $accountRoleId\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $accountKey\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "patchUserAccount(\n\t\t$userAccountId: Long!\n\t\t$userAccount: InputUserAccount!\n\t)", "content": "{\n\t\tpatchUserAccount(\n\t\t\tuserAccountId: $userAccountId\n\t\t\tuserAccount: $userAccount\n\t\t) {\n\t\t\talternateName\n\t\t\tfamilyName\n\t\t\tgivenName\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "putAccountSubscriptionGroups(\n\t\t$id: Long!\n\t\t$accountSubscriptionGroup: InputC_AccountSubscriptionGroup!\n\t)", "content": "{\n\t\tupdateAccountSubscriptionGroup(\n\t\t\taccountSubscriptionGroupId: $id\n\t\t\tinput: $accountSubscriptionGroup\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"PUT\"\n\t\t\t\ttype: \"C_AccountSubscriptionGroup\"\n\t\t\t\tpath: \"/c/accountsubscriptiongroups/{args.accountSubscriptionGroupId}\"\n\t\t\t) {\n\t\t\taccountSubscriptionGroupId\n\t\t\taccountKey\n\t\t\tactivationStatus\n\t\t\texternalReferenceCode\n\t\t\tname\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "deleteAccountUserRoles(\n\t\t$accountRoleId: Long!\n\t\t$emailAddress: String!\n\t\t$accountKey: String!\n\t)", "content": "{\n\t\tdeleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress(\n\t\t\taccountRoleId: $accountRoleId\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $accountKey\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "deleteAccountUserAccountByExternalReferenceCodeByEmailAddress(\n\t\t$emailAddress: String!\n\t\t$accountKey: String!\n\t)", "content": "{\n\t\tdeleteAccountUserAccountByExternalReferenceCodeByEmailAddress(\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $accountKey\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "createNotificationQueueEntry(\n\t\t$notificationQueueEntry: InputNotificationQueueEntry!\n\t)", "content": "{\n\t\tcreateNotificationQueueEntry(\n\t\t\tnotificationQueueEntry: $notificationQueueEntry\n\t\t) {\n\t\t\tbody\n\t\t\tid\n\t\t\trecipients\n\t\t\tsubject\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "putAccountSubscriptionGroups(\n\t\t$id: Long!\n\t\t$accountSubscriptionGroup: InputC_AccountSubscriptionGroup!\n\t)", "content": "{\n\t\tc {\n\t\t\tupdateAccountSubscriptionGroup(\n\t\t\t\taccountSubscriptionGroupId: $id\n\t\t\t\tAccountSubscriptionGroup: $accountSubscriptionGroup\n\t\t\t) {\n\t\t\t\taccountSubscriptionGroupId\n\t\t\t\taccountKey\n\t\t\t\tactivationStatus\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/account-subscription-groups/queries/putAccountSubscriptionGroups.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "replaceAccountRoleByUserAccountEmailAddress(\n\t\t$currentAccountRoleId: Long!\n\t\t$emailAddress: String!\n\t\t$externalReferenceCode: String!\n\t\t$newAccountRoleId: Long!\n\t)", "content": "{\n\t\tdeleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress(\n\t\t\taccountRoleId: $currentAccountRoleId\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t)\n\t\tcreateAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress(\n\t\t\taccountRoleId: $newAccountRoleId\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/account-roles/mutations/useReplaceAccountRoleByUserAccountEmailAddress.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "deleteUserAccountByEmailAddress(\n\t\t$emailAddress: String!\n\t\t$externalReferenceCode: String!\n\t)", "content": "{\n\t\tdeleteAccountUserAccountByExternalReferenceCodeByEmailAddress(\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/user-accounts/mutations/useDeleteUserAccountByEmailAddress.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "updateRolesByContactEmailAddress(\n\t\t$externalReferenceCode: String!\n\t\t$contactEmail: String!\n\t\t$contactRoleName: String!\n\t)", "content": "{\n\t\tupdateRolesByContactEmailAddress(\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t\tcontactEmail: $contactEmail\n\t\t\tcontactRoleName: $contactRoleName\n\t\t\tinput: {}\n\t\t)\n\t\t\t@rest(\n\t\t\t\ttype: \"R_ContactRole\"\n\t\t\t\tpath: \"/accounts/{args.externalReferenceCode}/contacts/by-email-address/{args.contactEmail}/roles?{args.contactRoleName}\"\n\t\t\t\tmethod: \"PUT\"\n\t\t\t) {\n\t\t\tNoResponse\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/raysource/graphql/roles/mutations/useUpdateRolesByContactEmailAddress.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "deleteRolesByContactEmailAddress(\n\t\t$externalReferenceCode: String!\n\t\t$contactEmail: String!\n\t\t$contactRoleNames: String!\n\t)", "content": "{\n\t\tdeleteRolesByContactEmailAddress(\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t\tcontactEmail: $contactEmail\n\t\t\tcontactRoleNames: $contactRoleNames\n\t\t)\n\t\t\t@rest(\n\t\t\t\ttype: \"R_ContactRole\"\n\t\t\t\tpath: \"/accounts/{args.externalReferenceCode}/contacts/by-email-address/{args.contactEmail}/roles?{args.contactRoleNames}\"\n\t\t\t\tmethod: \"DELETE\"\n\t\t\t) {\n\t\t\tNoResponse\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/raysource/graphql/roles/mutations/useDeleteRolesByContactEmailAddress.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "registerSubmission(\n    $comment: String!\n    $animationId: String!\n    $proFeedback: Boolean!\n    $videoId: UUID!\n    $authorId: UUID!\n    $thumbnailUrl: String!\n  )", "content": "{\n    __typename\n    registerSubmission(\n      input: {\n        _thumbnailUrl: $thumbnailUrl\n        _comment: $comment\n        _uploadId: $videoId\n        _animationId: $animationId\n        _profileId: $authorId\n        _proFeedback: $proFeedback\n      }\n    ) {\n      animationByAnimationId {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/submit/src/submit.js", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerAnimation(\n    $title: String!\n    $startFrame: Int!\n    $endFrame: Int!\n    $thumbnailUrl: String!\n    $comment: String!\n    $videoId: UUID!\n    $authorId: UUID!\n    $proFeedback: Boolean!\n  )", "content": "{\n    __typename\n    registerAnimation(\n      input: {\n        _title: $title\n        _startFrame: $startFrame\n        _endFrame: $endFrame\n        _thumbnailUrl: $thumbnailUrl\n        _comment: $comment\n        _uploadId: $videoId\n        _profileId: $authorId\n        _proFeedback: $proFeedback\n      }\n    ) {\n      animation {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/submit/src/submit.js", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "getUserFromSerialKey($serialKey: String!)", "content": "{\n        __typename\n        profileFromSerialKey(input: { serialKey: $serialKey }) {\n          profile {\n            id\n            role\n            username\n            hasCostumerId\n            animationsByProfileId {\n              nodes {\n                startFrame\n                endFrame\n                title\n                id\n                submissionsByAnimationId {\n                  totalCount\n                }\n              }\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/submit/src/verify.js", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "adminChangeInstructorStatus(\n    $profileId: UUID!\n    $instructorStatus: InstructorStatus!\n  )", "content": "{\n    adminEditInstructorStatus(\n      input: { instructorStatus_: $instructorStatus, profileId_: $profileId }\n    ) {\n      clientMutationId\n      instructor {\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "adminPromoteToInstructor($profileId: UUID!)", "content": "{\n    adminPromoteToInstructor(input: { profileId_: $profileId }) {\n      instructor {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "adminUpdatePost($title: String!, $id: UUID!, $body: String!)", "content": "{\n    adminUpdatePost(input: { title_: $title, id_: $id, body_: $body }) {\n      news {\n        updatedAt\n        title\n        thumbnail\n        status\n        slug\n        profileId\n        nodeId\n        intro\n        id\n        createdAt\n        body\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "changePassword(\n    $currentPassword: String!\n    $newPassword: String!\n    $repeatedNewPassword: String!\n  )", "content": "{\n    __typename\n    changePassword(\n      input: {\n        currentPassword: $currentPassword\n        newPassword: $newPassword\n        repeatedNewPassword: $repeatedNewPassword\n      }\n    ) {\n      boolean\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "changeUserRole($userId: UUID!, $role: UserRole!)", "content": "{\n    changeUserRole(input: { userid_: $userId, role_: $role }) {\n      profile {\n        role\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "claimFeedback($feedbackRequestId: String!, $submissionId: String!)", "content": "{\n    __typename\n    claimFeedback(\n      input: {\n        submissionId_: $submissionId\n        feedbackRequestId_: $feedbackRequestId\n      }\n    ) {\n      feedbackResponse {\n        createdAt\n        status\n        id\n        profileId\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "companyAdminAddMonthToGroup(\n    $year: Int!\n    $month: Int!\n    $groupId: UUID!\n    $amountFeedbacks: Int!\n  )", "content": "{\n    companyAdminAddMonthToGroup(\n      input: {\n        year_: $year\n        month_: $month\n        groupId_: $groupId\n        amountFeedbacks_: $amountFeedbacks\n      }\n    ) {\n      companyGroupMonth {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "companyAdminAddPremiumToGroup($groupId: UUID!, $premiumId: UUID!)", "content": "{\n    companyAdminAddPremiumToGroup(\n      input: { groupId_: $groupId, premiumId_: $premiumId }\n    ) {\n      companyGroupPremium {\n        premiumId\n        companyGroupId\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "companyAdminRemoveMonthFromGroup($monthId: UUID!)", "content": "{\n    companyAdminRemoveMonthFromGroup(input: { monthId_: $monthId }) {\n      companyGroupMonth {\n        groupId\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "companyAdminRemovePremiumFromGroup($premiumId: UUID!)", "content": "{\n    companyAdminRemovePremiumFromGroup(input: { premiumId_: $premiumId }) {\n      companyProGroupByCompanyGroupId {\n        groupName\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "companyCreateGroup($name: String!, $description: String)", "content": "{\n    companyCreateGroup(input: { name_: $name, description_: $description }) {\n      clientMutationId\n      companyProGroup {\n        companyId\n        createdAt\n        description\n        groupName\n        id\n        nodeId\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "companyDeleteGroup($id: UUID!)", "content": "{\n    companyDeleteGroup(input: { groupId_: $id }) {\n      companyProGroup {\n        groupName\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "deleteOwnAnimation($animationId: String!)", "content": "{\n    deleteOwnAnimation(input: { animationId: $animationId }) {\n      string\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "deleteOwnNote($id: String!)", "content": "{\n    deleteOwnNote(input: { _id: $id }) {\n      note {\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "deleteNoteComment($id: UUID!)", "content": "{\n    deleteOwnNoteComment(input: { _id: $id }) {\n      noteComment {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "deleteOwnSubmission($submissionId: String!)", "content": "{\n    deleteOwnSubmission(input: { submissionId: $submissionId }) {\n      string\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "instructorRegisterBanner($banner: String!)", "content": "{\n    instructorRegisterBanner(input: { banner_: $banner }) {\n      instructor {\n        id\n        banner\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "instructorUpdateAvailability(\n    $availability: InstructorAvailability!\n  )", "content": "{\n    instructorUpdateAvailability(input: { availability_: $availability }) {\n      instructor {\n        availability\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "instructorUpdateBio($bio: String!)", "content": "{\n    instructorUpdateBio(input: { biography_: $bio }) {\n      instructor {\n        id\n        biography\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "loginByEmail($email: String!, $password: String!)", "content": "{\n    __typename\n    authenticate(input: { email: $email, password: $password }) {\n      jwtToken\n      __typename\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "loginByUsername($username: String!, $password: String!)", "content": "{\n    __typename\n    authenticateByUsername(\n      input: { username: $username, password: $password }\n    ) {\n      jwtToken\n      __typename\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "refreshToken", "content": "{\n    refreshJwtToken(input: {}) {\n      jwtToken\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerAvatar($avatar: String!)", "content": "{\n    registerNewAvatar(input: { avatar_: $avatar }) {\n      profile {\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerFeedbackResponse($thumbnail: String!, $link: String!)", "content": "{\n    __typename\n    registerFeedbackResponse(input: { thumbnail_: $thumbnail, link_: $link }) {\n      animation {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerHeadline(\n    $thumbnail: String!\n    $link: String!\n    $title: String\n  )", "content": "{\n    __typename\n    registerHeadline(\n      input: { thumbnail_: $thumbnail, link_: $link, title_: $title }\n    ) {\n      headline {\n        id\n        createdAt\n        link\n        thumbnail\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerNewBanner($banner: String!)", "content": "{\n    registerNewBanner(input: { banner_: $banner }) {\n      profile {\n        banner\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerNews(\n    $title: String!\n    $paragraph: String!\n    $body: String!\n    $thumbnail: String!\n    $proContent: String\n    $videoUrl: String\n  )", "content": "{\n    registerNews(\n      input: {\n        title_: $title\n        intro_: $paragraph\n        body_: $body\n        thumbnail_: $thumbnail\n        proContent_: $proContent\n        videoUrl_: $videoUrl\n      }\n    ) {\n      news {\n        id\n        body\n        createdAt\n        intro\n        nodeId\n        profileId\n        slug\n        thumbnail\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerNewsComment($body: String!, $newsId: UUID)", "content": "{\n    registerNewsComment(input: { body_: $body, newsId_: $newsId }) {\n      newsComment {\n        body\n        createdAt\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerNote(\n    $submissionId: String!\n    $body: String!\n    $paragraph: String!\n  )", "content": "{\n    registerNote(\n      input: { submissionId: $submissionId, body: $body, paragraph: $paragraph }\n    ) {\n      note {\n        id\n        createdAt\n        body\n        submissionId\n        profileId\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerNoteComment($noteId: String!, $body: String!)", "content": "{\n    __typename\n    registerNoteComment(input: { noteId: $noteId, body: $body }) {\n      noteComment {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerProfile(\n    $username: String!\n    $email: String!\n    $password: String!\n  )", "content": "{\n    __typename\n    registerProfile(\n      input: { username: $username, email: $email, pass: $password }\n    ) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerSocial(\n    $www: String\n    $youtube: String\n    $vimeo: String\n    $twitter: String\n    $instagram: String\n    $linkedin: String\n    $facebook: String\n    $artstation: String\n  )", "content": "{\n    registerSocial(\n      input: {\n        www_: $www\n        youtube_: $youtube\n        vimeo_: $vimeo\n        twitter_: $twitter\n        instagram_: $instagram\n        linkedin_: $linkedin\n        facebook_: $facebook\n        artstation_: $artstation\n      }\n    ) {\n      profileSocial {\n        linkedin\n        instagram\n        facebook\n        artstation\n        profileId\n        twitter\n        vimeo\n        www\n        youtube\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "registerProfileDetails(\n    $organisation: String\n    $occupation: String\n    $lastname: String\n    $firstname: String\n    $about: String\n  )", "content": "{\n    __typename\n    registerProfileDetails(\n      input: {\n        organisation_: $organisation\n        occupation_: $occupation\n        lastname_: $lastname\n        firstname_: $firstname\n        about_: $about\n      }\n    ) {\n      profile {\n        about\n        firstname\n        lastname\n        occupation\n        organisation\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "requestProfeedback($animationId: String!)", "content": "{\n    requestProfeedback(input: { animationdId_: $animationId }) {\n      boolean\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "updateAnimationTitle($animationId: String!, $title: String!)", "content": "{\n    updateAnimationTitle(\n      input: { animationId_: $animationId, title_: $title }\n    ) {\n      animation {\n        title\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "UpdateOwnNewsComment($id: UUID!, $body: String!)", "content": "{\n    updateOwnNewsComment(input: { body_: $body, id_: $id }) {\n      newsComment {\n        id\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "UpdateOwnNote($id: String!, $paragraph: String!, $body: String!)", "content": "{\n    updateOwnNote(input: { body_: $body, paragraph_: $paragraph, id_: $id }) {\n      note {\n        id\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "UpdateOwnNoteComment($id: String!, $body: String!)", "content": "{\n    updateOwnNoteComment(input: { body_: $body, id_: $id }) {\n      noteComment {\n        id\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "updateReel($reelDescription: String, $reel: String)", "content": "{\n    __typename\n    registerReel(input: { reelDescription_: $reelDescription, reel_: $reel }) {\n      clientMutationId\n      profile {\n        reel\n        reelDescription\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "updateOwnSubmissionComment(\n    $comment: String!\n    $shortComment: String!\n    $id: String!\n  )", "content": "{\n    updateOwnSubmissionComment(\n      input: { comment_: $comment, shortComment_: $shortComment, id_: $id }\n    ) {\n      submission {\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "PostComment($input: postCommentInput)", "content": "{\n  postComment(input: $input) {\n    _id\n    comment\n    user {\n      givenName\n      surName\n      displayName\n    }\n    createdAt\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/comment-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "EditComment($input: editCommentInput!)", "content": "{\n  editComment(input: $input) {\n    _id\n    comment\n    user {\n      givenName\n      surName\n      displayName\n    }\n    createdAt\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/comment-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "CreateXlsxCurationList($input: materialsInput)", "content": "{\n  createXlsxCurationList(input: $input) {\n    columns {\n      field\n      values\n      user\n    }\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/material-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "UpdateXlsxCurationList($input: columnsInput)", "content": "{\n  updateXlsxCurationList(input: $input) {\n    field\n    values\n    user\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/material-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "DeleteXlsxCurationList($input: materialFieldInput)", "content": "{\n  deleteXlsxCurationList(input: $input) {\n    field\n    values\n    user\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/material-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "Mutation($input: createContactInput!)", "content": "{\n  submitContact(input: $input) {\n    _id\n    fullName\n    email\n    purpose\n    message\n    createdAt\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/contact-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "Mutation($input: updateContactInput!)", "content": "{\n    updateContact(input: $input) {\n      _id\n      fullName\n      email\n      purpose\n      message\n      resolved\n      response\n      createdAt\n      updatedAt\n      resolvedBy\n    }\n  }", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/contact-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "CreateDatasetId", "content": "{\n  createDatasetId {\n    datasetGroupId\n    status\n    createdAt\n    updatedAt\n    user {\n      id\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/dataset-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "DeleteUser($input: deleteUsersInput)", "content": "{\n  deleteUser(input: $input)\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/user-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "UpdateUser($input: updateUserInput)", "content": "{\n  updateUser(input: $input) {\n    _id\n    alias\n    givenName\n    surName\n    displayName\n    email\n    apiAccess\n    roles\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/user-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "updateScene($id: ID!, $data: SceneInput!)", "content": "{\n    updateScene(id: $id, data: $data) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Scene.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "createScene($data: SceneInput!)", "content": "{\n    createScene(data: $data) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Scene.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "deleteScene($id: ID!)", "content": "{\n    deleteScene(id: $id) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Scene.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "CreateQuest($name: String!, $description: String, $image: ID)", "content": "{\n    createQuest(\n      data: { Name: $name, Description: $description, Image: $image }\n    ) {\n      data {\n        id\n        attributes {\n          Name\n          Description\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Quest.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "deleteQuest($id: ID!)", "content": "{\n    deleteQuest(id: $id) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Quest.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "updateQuest(\n    $id: ID!\n    $name: String\n    $description: String\n    $image: ID\n    $music: ID\n  )", "content": "{\n    updateQuest(\n      id: $id\n      data: {\n        Name: $name\n        Description: $description\n        Image: $image\n        Music: $music\n      }\n    ) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Quest.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "($file: Upload!)", "content": "{\n    upload(file: $file) {\n      data {\n        id\n        attributes {\n          name\n          url\n          ext\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Upload.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteUploadFile(id: $id) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Upload.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "CreateChapter(\n    $name: String!\n    $description: String\n    $image: ID\n    $processing: Boolean!\n    $quest: ID!\n  )", "content": "{\n    createChapter(\n      data: {\n        Name: $name\n        Description: $description\n        Image: $image\n        processing: $processing\n        quest: $quest\n      }\n    ) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "deleteChapter($id: ID!)", "content": "{\n    deleteChapter(id: $id) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "updateChapter($chapterId: ID!, $firstScene: String!)", "content": "{\n    updateChapter(id: $chapterId, data: { firstScene: $firstScene }) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "updateChapter(\n    $id: ID!\n    $name: String!\n    $description: String\n    $processing: Boolean!\n    $image: ID\n  )", "content": "{\n    updateChapter(\n      id: $id\n      data: {\n        Name: $name\n        Description: $description\n        Image: $image\n        processing: $processing\n      }\n    ) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "updateScene($id: ID!, $data: SceneInput!)", "content": "{\n    updateScene(id: $id, data: $data) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Scene.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "createScene($data: SceneInput!)", "content": "{\n    createScene(data: $data) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Scene.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "deleteScene($id: ID!)", "content": "{\n    deleteScene(id: $id) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Scene.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "CreateChapter(\n    $name: String!\n    $description: String\n    $image: ID\n    $quest: ID!\n  )", "content": "{\n    createChapter(\n      data: {\n        Name: $name\n        Description: $description\n        Image: $image\n        quest: $quest\n      }\n    ) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "deleteChapter($id: ID!)", "content": "{\n    deleteChapter(id: $id) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "updateChapter($chapterId: ID!, $firstScene: String!)", "content": "{\n    updateChapter(id: $chapterId, data: { firstScene: $firstScene }) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "updateChapter(\n    $id: ID!\n    $name: String!\n    $description: String\n    $image: ID!\n  )", "content": "{\n    updateChapter(\n      id: $id\n      data: { Name: $name, Description: $description, Image: $image }\n    ) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "CreateJobsMutation($input: CreateJobsInput)", "content": "{\n      job: createJobs(input: $input) {\n        id\n        title\n        description\n        company {\n          id\n          name\n        }\n      }\n    }", "metadata": {"commit_hash": "acccc18590a18fe78d1cc1dc18ea038bfad4f28d", "file": "backend/GraphQL/job-board/client/src/requests.js", "repo": "shikhar360_MyLearnings"}}, {"type": "mutation", "name": "CreateJobsMutation($input: CreateJobsInput)", "content": "{\n      job: createJobs(input: $input) {\n       ...JobDetail   // Fragment Name\n      }\n    }\n    ${jobDetailFragment}    // imp todo", "metadata": {"commit_hash": "acccc18590a18fe78d1cc1dc18ea038bfad4f28d", "file": "backend/GraphQL/job-board/client/src/requests.js", "repo": "shikhar360_MyLearnings"}}, {"type": "mutation", "name": "refreshTokens($token: String!)", "content": "{\n            refreshTokens(token: $token) {\n              token\n              refreshToken\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n            signIn(email: $email, password: $password, generateRefreshToken: true) {\n              token\n              refreshToken\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "signUp($name: String!, $email: String!, $password: String!)", "content": "{\n            signUp(name: $name, email: $email, password: $password) {\n              _\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "resendEmailConfirmation($email: String!)", "content": "{\n            resendEmailConfirmation(email: $email) {\n              _\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "requestResetPassword($email: String!)", "content": "{\n            requestResetPassword(email: $email) {\n              _\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "resetPassword($token: String!, $password: String!)", "content": "{\n            resetPassword(token: $token, password: $password) {\n              _\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "validateEmail", "content": "{\n            checkEmail\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "updateUser($id: ID!, $name: String, $image: Upload)", "content": "{\n            updateUser(id: $id, name: $name, upload: $image) {\n              id\n              name\n              imageUrl\n              email\n\n              createdDate\n              modifiedDate\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "confirmEmail($token: String!)", "content": "{\n            confirmEmail(token: $token) {\n              _\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "checkEmail($email: String!)", "content": "{\n            checkEmail(email: $email) {\n              isAvailable\n              isBlacklisted\n              isCorporate\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "createChallenge($title: String!, $description: String, $closeDate: DateTime, $endDate: DateTime, $upload: Upload, $privacyMode: ChallengePrivacyMode)", "content": "{\n            createChallenge(title: $title, description: $description, closeDate: $closeDate, endDate: $endDate, upload: $upload, privacyMode: $privacyMode) {\n              id\n              title\n              description\n              imageUrl\n              closeDate\n              endDate\n              privacyData\n              privacyMode\n\n              createdDate\n              createdBy {\n                id\n                name\n                imageUrl\n              }\n              modifiedDate\n              modifiedBy {\n                id\n                name\n                imageUrl\n              }\n\n              ideas {\n                totalCount\n                edges {\n                  node {\n                    id\n                    title\n                    description\n                    imageUrl\n\n                    reactionsSummary {\n                      value\n                      totalCount\n                    }\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "updateChallenge($id: ID!, $title: String!, $description: String, $closeDate: DateTime, $endDate: DateTime, $upload: Upload, $privacyMode: ChallengePrivacyMode)", "content": "{\n            updateChallenge(id: $id, title: $title, description: $description, closeDate: $closeDate, endDate: $endDate, upload: $upload, privacyMode: $privacyMode) {\n              id\n              title\n              description\n              imageUrl\n              closeDate\n              endDate\n              privacyMode\n              privacyData\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "deleteChallenge($id: ID!)", "content": "{\n            deleteChallenge(id: $id)\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "createIdea($challengeId: String!, $title: String!, $description: String, $upload: Upload)", "content": "{\n            createIdea(challengeId: $challengeId, title: $title, description: $description, upload: $upload) {\n              id\n              title\n              description\n              imageUrl\n\n              challenge {\n                id\n                closeDate\n              }\n\n              createdBy {\n                id\n                name\n                imageUrl\n              }\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "updateIdea($id: ID!, $title: String!, $description: String, $upload: Upload)", "content": "{\n            updateIdea(id: $id, title: $title, description: $description, upload: $upload) {\n              id\n              title\n              description\n              imageUrl\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "deleteIdea($id: ID!)", "content": "{\n            deleteIdea(id: $id)\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "createReaction($ideaId: ID!)", "content": "{\n            createReaction(objectType: IDEA, objectId: $ideaId, value: \"LIKE\") {\n              id\n              value\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "deleteReaction($id: ID!)", "content": "{\n            deleteReaction(objectType: IDEA, id: $id)\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "Weather", "content": "{\n    weather {\n      icon\n      text\n    }\n  }", "metadata": {"commit_hash": "e7a757ca1e82e3c718266d58c64fa587078177fe", "file": "client/src/components/Publisher/Publisher.tsx", "repo": "mihailgaberov_redis-pubsub-visualized"}}, {"type": "mutation", "name": "Sport", "content": "{\n    sport {\n      icon\n      text\n    }\n  }", "metadata": {"commit_hash": "e7a757ca1e82e3c718266d58c64fa587078177fe", "file": "client/src/components/Publisher/Publisher.tsx", "repo": "mihailgaberov_redis-pubsub-visualized"}}, {"type": "mutation", "name": "Music", "content": "{\n    music {\n      icon\n      text\n    }\n  }", "metadata": {"commit_hash": "e7a757ca1e82e3c718266d58c64fa587078177fe", "file": "client/src/components/Publisher/Publisher.tsx", "repo": "mihailgaberov_redis-pubsub-visualized"}}, {"type": "mutation", "name": "CreateTeam($data: TeamInput!)", "content": "{\n    createTeam(input: $data) {\n      id\n      members {\n        id\n        username\n      }\n      object {\n        objectId\n        objectType\n      }\n      name\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/createTeam.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "submitManuscript($data: ManuscriptInput!)", "content": "{\n    updateManuscript(data: $data) {\n      communicationHistory {\n        content\n        # id\n        timestamp\n        user {\n          id\n          username\n        }\n      }\n      decisionLetter\n      id\n      status {\n        decision {\n          accepted\n          rejected\n          revise\n        }\n        scienceOfficer {\n          approved\n          pending\n        }\n        submission {\n          initial\n          datatypeSelected\n          full\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/updateManuscriptForEditor.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "UploadFile($file: Upload!)", "content": "{\n    upload(file: $file) {\n      url\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/uploadFile.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "submitManuscript($data: ManuscriptInput!)", "content": "{\n    updateManuscript(data: $data) {\n      acknowledgements\n      authors {\n        affiliations\n        credit\n        email\n        name\n        submittingAuthor\n        WBId\n      }\n      comments\n      communicationHistory {\n        content\n        timestamp\n        user {\n          id\n          username\n        }\n      }\n      dataType\n      decisionLetter\n      disclaimer\n      funding\n      geneExpression {\n        antibodyUsed\n        backboneVector {\n          name\n          WBId\n        }\n        coinjected\n        constructComments\n        constructionDetails\n        detectionMethod\n        dnaSequence {\n          name\n          WBId\n        }\n        expressionPattern {\n          name\n          WBId\n        }\n        fusionType {\n          name\n          WBId\n        }\n        genotype\n        injectionConcentration\n        inSituDetails\n        integratedBy {\n          name\n          WBId\n        }\n        observeExpression {\n          certainly {\n            certainly {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          partially {\n            partially {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          possibly {\n            possibly {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          not {\n            not {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n        }\n        reporter {\n          name\n          WBId\n        }\n        species {\n          name\n          WBId\n        }\n        strain\n        transgeneName\n        transgeneUsed {\n          name\n          WBId\n        }\n        utr {\n          name\n          WBId\n        }\n        variation {\n          name\n          WBId\n        }\n      }\n      id\n      image {\n        name\n        url\n      }\n      imageCaption\n      laboratory {\n        name\n        WBId\n      }\n      methods\n      patternDescription\n      reagents\n      references\n      status {\n        decision {\n          accepted\n          rejected\n          revise\n        }\n        scienceOfficer {\n          approved\n          pending\n        }\n        submission {\n          initial\n          datatypeSelected\n          full\n        }\n      }\n      suggestedReviewer {\n        name\n        WBId\n      }\n      title\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/submitManuscript.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "CreateSubmission", "content": "{\n    createSubmission {\n      id\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/createSubmission.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "UpdateTeam($id: ID, $input: TeamInput!)", "content": "{\n    updateTeam(id: $id, input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/updateTeam.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "InviteReviewer($articleId: ID!, $reviewerId: ID!)", "content": "{\n    inviteReviewer(articleId: $articleId, reviewerId: $reviewerId)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/inviteReviewer.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "ManuscriptMetadataUpdate($manuscriptId: ID!, $data: MetadataInput!)", "content": "{\n    manuscriptMetadataUpdate(manuscriptId: $manuscriptId, data: $data)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/manuscriptMetadataUpdate.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "HandleInvitation(\n    $action: String!\n    $articleId: ID!\n    $currentUserId: ID!\n  )", "content": "{\n    handleInvitation(\n      action: $action\n      articleId: $articleId\n      currentUserId: $currentUserId\n    )\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/handleInvitation.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "UpdateCurrentlyWith($data: ManuscriptInput!)", "content": "{\n    updateManuscript(data: $data) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/updateCurrentlyWith.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "DeleteArticle($id: ID!)", "content": "{\n    deleteManuscript(id: $id)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/deleteArticle.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "CreateReview($input: CreateReviewInput!)", "content": "{\n    createReview(input: $input)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/createReview.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "UpdateReview($id: ID!, $input: UpdateReviewInput!)", "content": "{\n    updateReview(id: $id, input: $input)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/updateReview.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "updateTool($tool: UpdatedTool!)", "content": "{\n    updateTool(updatedTool: $tool) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "newConfigurableItem($newConfigurableItem: NewConfigurableItem!)", "content": "{\n    createConfigurableItem(newConfigurableItem: $newConfigurableItem) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "updateConfigurableItem($item: UpdatedConfigurableItem!)", "content": "{\n    updateConfigurableItem(updatedConfigurableItem: $item) {\n      id\n      type\n      name\n      sanctioned\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "($tool_id: ID!, $decomissioned_status: DecomissionedToolStatus!, $decomission_reason: String!)", "content": "{\n    decomissionTool(tool_id: $tool_id, decomissioned_status: $decomissioned_status, decomission_reason: $decomission_reason) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "newTool($newTool: NewTool!)", "content": "{\n    createTool(newTool: $newTool) {\n      id\n      brand {\n        id\n        name\n      }\n      type {\n        id\n        name\n      }\n      year\n      status\n      model_number\n      serial_number\n      purchased_from {\n        id\n        name\n      }\n      date_purchased\n      price\n      photo\n      tagged\n      owner {\n        ... on Location {\n          id\n          name\n          type\n        }\n        ... on User {\n          id\n          first_name\n          last_name\n          email\n          phone_number\n          type\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "deleteConfigurableItem($id: ID!)", "content": "{\n    deleteConfigurableItem(configurable_item_id: $id) {\n      toolsWithConfigurableItem {\n        id\n        type {\n          id\n        }\n        brand {\n          id\n        }\n        model_number\n        serial_number\n        status\n        tagged\n        owner {\n          ... on Location {\n            id\n          }\n          ... on User {\n            id\n          }\n        }\n        purchased_from {\n          id\n        }\n        date_purchased\n        photo\n        price\n        year\n      }\n      deletedConfigurableItem {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "($email: String!)", "content": "{\n    requestPasswordReset(email: $email)\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "attemptUserLogin($organization_name: String!, $email: String!, $password: String!)", "content": "{\n     login(organization_name: $organization_name, email: $email, password: $password) {\n      token\n      user {\n        id\n        first_name\n        last_name\n        email\n        phone_number\n        role\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "attemptPasswordReset($new_password: String!, $password_reset_code: ID!)", "content": "{\n    resetPassword(new_password: $new_password, password_reset_code: $password_reset_code)\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "transferTools($tool_id_list: [ID!]!, $to_owner_id: ID!)", "content": "{\n    transferMultipleTool (tool_id_list: $tool_id_list, to_owner_id: $to_owner_id) {\n      id\n      type {\n        id\n        name\n      }\n      brand {\n        id\n        name\n      }\n      status\n      tagged\n      owner {\n        ... on Location {\n           id\n           name\n           type\n        }\n        ... on User {\n           id\n           first_name\n           last_name\n           type\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "deleteUser($updatedUser: UpdatedUser!)", "content": "{\n    updateUser(updatedUser: $updatedUser) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "updateStatus($user: UpdatedUser!)", "content": "{\n    updateUser(updatedUser: $user) {\n      id\n      first_name\n      last_name\n      email\n      phone_number\n      role\n      status\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "recomissionTool($tool_id: ID!, $status: InServiceToolStatus!)", "content": "{\n    recomissionTool(tool_id: $tool_id, recomissioned_status: $status) {\n      status\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "Modular($pin: Int, $state: Int)", "content": "{\n    modular(pin: $pin, state: $state) {\n      state\n      pin\n    }\n  }", "metadata": {"commit_hash": "6779ec1650cf05b3e2b7c27a818719ac909e9510", "file": "src/graphql/mutations/MODULAR.ts", "repo": "venancioavila_action"}}, {"type": "mutation", "name": "Digital($pin: Int, $state: Int)", "content": "{\n    digital(pin: $pin, state: $state) {\n      state\n      pin\n    }\n  }", "metadata": {"commit_hash": "6779ec1650cf05b3e2b7c27a818719ac909e9510", "file": "src/graphql/mutations/DIGITAL.ts", "repo": "venancioavila_action"}}, {"type": "mutation", "name": "Servo($pin: Int, $state: Int)", "content": "{\n    servo(pin: $pin, state: $state) {\n      state\n      pin\n    }\n  }", "metadata": {"commit_hash": "6779ec1650cf05b3e2b7c27a818719ac909e9510", "file": "src/graphql/mutations/SERVO.ts", "repo": "venancioavila_action"}}, {"type": "mutation", "name": "updateOrderStatus($input: UpdateOrderStatusInput)", "content": "{\n        updateOrderStatus(input: $input) {\n          orderId\n          expectedCollectedTime\n          expectedDeliveredTime\n          sender {\n            userId\n            username\n            firstName\n            lastName\n            email\n            phone\n          }\n          receiver {\n            userId\n            username\n            firstName\n            lastName\n            email\n            phone\n          }\n          sendAddress\n          sendLatLng {\n            latitude\n            longitude\n          }\n          receiveAddress\n          receiveLatLng {\n            latitude\n            longitude\n          }\n          status\n          comments\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/customer/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "createOrder($input: CreateOrderInput)", "content": "{\n        createOrder(input: $input) {\n          orderId\n          expectedCollectedTime\n          expectedDeliveredTime\n          sender {\n            userId\n            username\n            firstName\n            lastName\n            email\n            phone\n          }\n          receiver {\n            userId\n            username\n            firstName\n            lastName\n            email\n            phone\n          }\n          sendAddress\n          sendLatLng {\n            latitude\n            longitude\n          }\n          receiveAddress\n          receiveLatLng {\n            latitude\n            longitude\n          }\n          status\n          comments\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/customer/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "($input: SignInInput)", "content": "{\n        signIn(input: $input) {\n          userId\n          firstName\n          lastName\n          email\n          role\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/customer/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "($input: SignUpInput)", "content": "{\n        signUp(input: $input) {\n          userId\n          firstName\n          lastName\n          email\n          role\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/customer/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "($input: UpdateOrderStatusInput)", "content": "{\n        updateOrderStatus(input: $input) {\n          logs {\n            orderLogId\n            status\n            comments\n            createdAt\n          }\n          orderId\n          sender {\n            userId\n            username\n            firstName\n            lastName\n            email\n            phone\n          }\n          receiver {\n            userId\n            username\n            firstName\n            lastName\n            email\n            phone\n          }\n          sendAddress\n          sendLatLng {\n            latitude\n            longitude\n          }\n          receiveAddress\n          receiveLatLng {\n            latitude\n            longitude\n          }\n          status\n          comments\n          createdAt\n          updatedAt\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/driver/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "($input: SignInInput)", "content": "{\n        signIn(input: $input) {\n          userId\n          firstName\n          lastName\n          email\n          role\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/driver/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "($input: SignUpInput)", "content": "{\n        signUp(input: $input) {\n          userId\n          firstName\n          lastName\n          email\n          role\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/driver/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "($input: LatLngInput)", "content": "{\n        updateCurrentLocation(input: $input) {\n          latLng {\n            latitude\n            longitude\n          }\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/driver/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "($input: ResponseNewJobInput)", "content": "{\n        responseNewJob(input: $input)\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/driver/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "($input: UpdateOrderStatusInput)", "content": "{\n        updateOrderStatus(input: $input) {\n          suggestedPolylines\n          estimatedDuration\n          duration\n          orderId\n          expectedCollectedTime\n          expectedDeliveredTime\n          sender {\n            userId\n            username\n            firstName\n            lastName\n            role\n          }\n          receiver {\n            userId\n            username\n            firstName\n            lastName\n            role\n          }\n          jobs {\n            polylines\n            duration\n            driver {\n              userId\n              username\n              firstName\n              lastName\n              role\n            }\n          }\n          sendAddress\n          sendLatLng {\n            latitude\n            longitude\n          }\n          receiveAddress\n          receiveLatLng {\n            latitude\n            longitude\n          }\n          status\n          comments\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "web/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "($input: SignInInput)", "content": "{\n        signIn(input: $input) {\n          userId\n          firstName\n          lastName\n          email\n          role\n          username\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "web/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "($input: SignUpInput)", "content": "{\n        signUp(input: $input) {\n          userId\n          firstName\n          lastName\n          email\n          role\n          username\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "web/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n    signIn(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/ejemplo02/bookshop-frontend/src/page/Signin.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n    signIn(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/ejemplo03/bookshop-frontend/src/page/Signin.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "mutation", "name": "signUp($name: String, $lastname: String, $email: String!, $password: String!)", "content": "{\n  signUp(\n    input: {\n      name: $name\n      lastname: $lastname\n      email: $email\n      password: $password\n    }\n  ) {\n    name\n    lastname\n    email\n  }\n}", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/ejemplo03/bookshop-frontend/src/page/Signup.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n    signIn(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/postwork/bedulives-frontend/src/page/Signin.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "mutation", "name": "signUp($name: String, $lastname: String, $email: String!, $password: String!)", "content": "{\n  signUp(\n    input: {\n      name: $name\n      lastname: $lastname\n      email: $email\n      password: $password\n    }\n  ) {\n    name\n    lastname\n    email\n  }\n}", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/postwork/bedulives-frontend/src/page/Signup.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n    signIn(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/reto02/bookshop-frontend/src/page/Signin.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "mutation", "name": "signUp($name: String, $lastname: String, $email: String!, $password: String!)", "content": "{\n  signUp(\n    input: {\n      name: $name\n      lastname: $lastname\n      email: $email\n      password: $password\n    }\n  ) {\n    name\n    lastname\n    email\n  }\n}", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/reto02/bookshop-frontend/src/page/Signup.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "mutation", "name": "createUser($input: CreateUserInput!)", "content": "{\n    createUser(createUserInput: $input) {\n      user {\n        userName\n        bio\n        profileImageUrl\n        profileBannerUrl\n        emailAddress\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "a9041359d3e97fb0bc9b8bd85512416ebe859345", "file": "client/src/App.tsx", "repo": "mohsenasadi501_GraphqlSampleApp"}}, {"type": "mutation", "name": "login($input: LoginInput!)", "content": "{\n    login(loginInput: $input) {\n      message\n      accessToken\n      refreshToken\n    }\n  }", "metadata": {"commit_hash": "a9041359d3e97fb0bc9b8bd85512416ebe859345", "file": "client/src/App.tsx", "repo": "mohsenasadi501_GraphqlSampleApp"}}, {"type": "mutation", "name": "createPerson(\n    $email: String!,\n    $name: String!,\n    $picture: String,\n    $headline: String,\n    $currentPosition: String\n  )", "content": "{\n    createPerson(\n      email: $email,\n      name: $name,\n      picture: $picture,\n      headline: $headline\n      currentPosition: $currentPosition\n      ) {\n      ${personFields}\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/persons.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "updatePerson(\n    $id: ID!,\n    $email: String,\n    $name: String,\n    $picture: String,\n    $headline: String,\n    $currentPosition: String\n  )", "content": "{\n    updatePerson(\n      id: $id,\n      email: $email,\n      name: $name,\n      picture: $picture,\n      headline: $headline\n      currentPosition: $currentPosition\n      ) {\n      ${personFields}\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/persons.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTag($name: String!, $description: String!)", "content": "{\n    createTag(name: $name, description: $description) {\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "setTagOn(\n    $tagName: String!\n    $on: String!\n    $targetType: String!\n    $targetId: ID!\n  )", "content": "{\n    setTagOn(\n      tagName: $tagName\n      on: $on\n      targetType: $targetType\n      targetId: $targetId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "setTagParent($tagName: String!, $parentName: String)", "content": "{\n    setTagParent(tagName: $tagName, parentName: $parentName) {\n      tagName\n      parentName\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "updateTagging($id: ID!, $level: Int, $description: String)", "content": "{\n    updateTagging(id: $id, level: $level, description: $description) {\n      id\n      level\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "usurpUser($input: UsurpUserInputType!)", "content": "{\n    usurpUser(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/argos/src/review/routes/admin/Admin.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "CreateGuestbookEntry($input: GuestbookEntryInput!)", "content": "{\n      createGuestbookEntry(data: $input) {\n        _id\n        _ts\n        name\n        message\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-fauna/lib/fauna.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SignUpMutation($email: String!, $password: String!)", "content": "{\n    signUp(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/api-routes-apollo-server-and-client-auth/pages/signup.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SignInMutation($email: String!, $password: String!)", "content": "{\n    signIn(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/api-routes-apollo-server-and-client-auth/pages/signin.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SignOutMutation", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/api-routes-apollo-server-and-client-auth/pages/signout.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-apollo-and-redux/components/Submit.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "votePost($id: String!)", "content": "{\n    votePost(id: $id) {\n      __typename\n      id\n      votes\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-apollo-and-redux/components/PostUpvoter.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "insertItem($item: items_insert_input!)", "content": "{\n    insert_items_one(object: $item) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-nhost-auth-realtime-graphql/pages/index.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteItem($item_id: uuid!)", "content": "{\n    delete_items_by_pk(id: $item_id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-nhost-auth-realtime-graphql/pages/index.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-apollo/components/Submit.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "votePost($id: String!)", "content": "{\n    votePost(id: $id) {\n      id\n      votes\n      __typename\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-apollo/components/PostUpvoter.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/with-apollo-next/components/Submit.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "votePost($id: String!)", "content": "{\n    votePost(id: $id) {\n      id\n      votes\n      __typename\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/with-apollo-next/components/PostUpvoter.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createVote($data: VoteInput!)", "content": "{\n    createVote(data: $data) {\n      _id\n      email\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/geeksblabla.com/src/components/Suggest/graphql/mutation.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteVote($id: ID!)", "content": "{\n    deleteVote(id: $id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/geeksblabla.com/src/components/Suggest/graphql/mutation.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createEpisode($data: EpisodeInput!)", "content": "{\n    createEpisode(data: $data) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/geeksblabla.com/src/components/Suggest/graphql/mutation.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "CreateUser($data: UserInput!)", "content": "{\n      createUser(data: $data) {\n        name\n        email\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/whoswho/src/api/graphql/queries/User.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "setName", "content": "{\n          name\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/ObservableQuery.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate($listId: ID!)", "content": "{\n          makeListPrivate(id: $listId)\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(input: { id: \"5\" }) {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\") {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n        makeListPrivate(id: \"5\") {\n          id\n          isPrivate\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName($id: ID!)", "content": "{\n          changeAuthorName(newName: \"Jack Smith\", id: $id) {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "upVote($id: ID!)", "content": "{\n          upvote(id: $id) {\n            success\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo($text: String)", "content": "{\n        createTodo(text: $text) {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n      submitComment(\n        repoFullName: $repoFullName\n        commentContent: $commentContent\n      ) {\n        postedBy {\n          login\n          html_url\n        }\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "setCompleted", "content": "{\n        setCompleted(todoId: \"3\") {\n          id\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "upload($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          name\n          # missing field: description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Reset", "content": "{\n        reset {\n          echo\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($a: Int!, $b: Int, $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($a: Int = 1, $b: String = \"cheese\", $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($a: Int!, $b: Int, $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: Int!)", "content": "{\n            mut(inline: 5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: Float!)", "content": "{\n            mut(inline: 5.5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: String!)", "content": "{\n            mut(inline: \"abc\", variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: Array!)", "content": "{\n            mut(inline: [1, 2], variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: Object!)", "content": "{\n            mut(inline: { a: 1 }, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: Boolean!)", "content": "{\n            mut(inline: true, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "some_mutation($nil: ID, $in: Object)", "content": "{\n        some_mutation(\n          input: {\n            id: \"5\"\n            arr: [1, { a: \"b\" }]\n            obj: { a: \"b\" }\n            num: 5.5\n            nil: $nil\n            bo: true\n          }\n        ) {\n          id\n        }\n        some_mutation_with_variables(input: $in) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Directive", "content": "{\n        mutate {\n          field {\n            subField {\n              hello @live\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "nameOfMutation", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "complexStuff(\n          $test: Input =", "content": "{ key1: [\"value\", \"value2\"], key2: { key3: 4 } }\n        ) {\n          complexStuff(test: $test) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Directive", "content": "{\n        mutate {\n          field {\n            subField {\n              hello @live\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "nameOfMutation", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/getFromAST.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/fragments.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/batch-http/__tests__/batchHttpLink.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/ws/__tests__/webSocketLink.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/http/__tests__/HttpLink.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/parser/__tests__/parser.test.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/parser/__tests__/parser.test.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "One($t: String!)", "content": "{\n        user(t: $t) {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/parser/__tests__/parser.test.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "setName", "content": "{\n          name\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/ObservableQuery.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "updateName($id: ID!, $firstName: String!)", "content": "{\n    updateName(id: $id, firstName: $firstName) {\n      __typename\n      id\n      firstName\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/fetchPolicies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate($listId: ID!)", "content": "{\n          makeListPrivate(id: $listId)\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(input: { id: \"5\" }) {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\") {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n        makeListPrivate(id: \"5\") {\n          id\n          isPrivate\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName($id: ID!)", "content": "{\n          changeAuthorName(newName: \"Jack Smith\", id: $id) {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: Int!)", "content": "{\n            mut(inline: 5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: Float!)", "content": "{\n            mut(inline: 5.5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: String!)", "content": "{\n            mut(inline: \"abc\", variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: Array!)", "content": "{\n            mut(inline: [1, 2], variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: Object!)", "content": "{\n            mut(inline: { a: 1 }, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut($in: Boolean!)", "content": "{\n            mut(inline: true, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "some_mutation($nil: ID, $in: Object)", "content": "{\n        some_mutation(\n          input: {\n            id: \"5\"\n            arr: [1, { a: \"b\" }]\n            obj: { a: \"b\" }\n            num: 5.5\n            nil: $nil\n            bo: true\n          }\n        ) {\n          id\n        }\n        some_mutation_with_variables(input: $in) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "upVote($id: ID!)", "content": "{\n          upvote(id: $id) {\n            success\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          __typename\n          id\n          todos {\n            id\n            text\n            completed\n            __typename\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo($text: String)", "content": "{\n        createTodo(text: $text) {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "AddItem($item: Item!)", "content": "{\n          addItem(item: $item) {\n            text\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n      submitComment(\n        repoFullName: $repoFullName\n        commentContent: $commentContent\n      ) {\n        postedBy {\n          login\n          html_url\n        }\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "setCompleted", "content": "{\n        setCompleted(todoId: \"3\") {\n          id\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "upload($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "AddNewPerson($newName: String!)", "content": "{\n        newPerson(name: $newName) {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          name\n          # missing field: description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Reset", "content": "{\n        reset {\n          echo\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($a: Int!, $b: Int, $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($a: Int = 1, $b: String = \"cheese\", $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($a: Int!, $b: Int, $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Foo", "content": "{\n          foo {\n            bar\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "start", "content": "{\n        start @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "start", "content": "{\n        start @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "start", "content": "{\n        start @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "upvotePost($postId: Int!)", "content": "{\n          topPost @client @export(as: \"postId\")\n          upvotePost(postId: $postId) {\n            title\n            votes\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/export.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "upvotePost($postId: Int!)", "content": "{\n          topPost @client @export(as: \"postId\")\n          upvotePost(postId: $postId) {\n            title\n            votes\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/export.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "start", "content": "{\n        start @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "start", "content": "{\n          start @client\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "start($id: ID!)", "content": "{\n        start(field: $id) @client {\n          field\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Select", "content": "{\n        select(itemId: $id) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "AddOrUpdate", "content": "{\n        addOrUpdate(id: $id, title: $title) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Increment($amount: Int = 1)", "content": "{\n        increment(amount: $amount) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Decrement($amount: Int = 1)", "content": "{\n        decrement(amount: $amount) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "AddTodo($message: String, $title: String)", "content": "{\n        addTodo(message: $message, title: $title) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SelectItem($id: Int!)", "content": "{\n        toggleItem(id: $id) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SelectItem($id: Int!)", "content": "{\n        touchIllegally(id: $id) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n        incrementCount @client\n        updateUser(firstName: \"Harry\") {\n          firstName\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "addPerson", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/shared-operations.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "addPerson", "content": "{\n    allPeople(first: 1) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/index.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "addPerson($first: Int)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/index.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "addPerson($first: Int!, $second: Int!)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/index.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "addPerson($id: Int)", "content": "{\n    allPeople(id: $id) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/lifecycle.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/recycled-queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/recycled-queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo($description: String!, $priority: String)", "content": "{\n      createTodo(description: $description, priority: $priority) {\n        id\n        description\n        priority\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useMutation.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "AddCar", "content": "{\n          addCar {\n            id\n            make\n            model\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "AddOrUpdate", "content": "{\n          addOrUpdate(id: $id, title: $title) @client\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "submitRepository", "content": "{\n          submitRepository(repoFullName: \"apollographql/apollo-client\") {\n            createdAt\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Query.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo($text: String!)", "content": "{\n    createTodo {\n      id\n      text\n      completed\n      __typename\n    }\n    __typename\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Mutation.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "logout", "content": "{\n    logout {\n      ...UserResponseFragment\n    }\n  }\n  ${UserResponseFragmentFragmentDoc}", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/auth-ts-next-boilerplate/src/generated/graphql.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Signin($params: UserSignInInput!)", "content": "{\n    signin(params: $params) {\n      ...UserResponseFragment\n    }\n  }\n  ${UserResponseFragmentFragmentDoc}", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/auth-ts-next-boilerplate/src/generated/graphql.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Signup($params: UserSignUpInput!)", "content": "{\n    signup(params: $params) {\n      ...UserResponseFragment\n    }\n  }\n  ${UserResponseFragmentFragmentDoc}", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/auth-ts-next-boilerplate/src/generated/graphql.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($postId: ID!, $body: String!)", "content": "{\n        createComment(postId: $postId, body: $body) {\n            id\n            comments {\n                id\n                body\n                createdAt\n                username\n            }\n            commentCount\n        }\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/pages/SinglePost.js", "repo": "rimijoker_Social-Media-App"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n        login(username: $username, password: $password) {\n            id\n            email\n            username\n            createdAt\n            token\n        }\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/pages/Login.js", "repo": "rimijoker_Social-Media-App"}}, {"type": "mutation", "name": "register(\n        $username: String!\n        $email: String!\n        $password: String!\n        $confirmPassword: String!\n    )", "content": "{\n        register(\n            registerInput: {\n                username: $username\n                email: $email\n                password: $password\n                confirmPassword: $confirmPassword\n            }\n        ) {\n            id\n            email\n            username\n            createdAt\n            token\n        }\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/pages/Register.js", "repo": "rimijoker_Social-Media-App"}}, {"type": "mutation", "name": "likePost($postId: ID!)", "content": "{\n        likePost(postId: $postId) {\n            id\n            likes {\n                id\n                username\n            }\n            likeCount\n        }\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/components/LikeButton.js", "repo": "rimijoker_Social-Media-App"}}, {"type": "mutation", "name": "deletePost($postId: ID!)", "content": "{\n        deletePost(postId: $postId)\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/components/DeleteButton.js", "repo": "rimijoker_Social-Media-App"}}, {"type": "mutation", "name": "deleteComment($postId: ID!, $commentId: ID!)", "content": "{\n        deleteComment(postId: $postId, commentId: $commentId) {\n            id\n            comments {\n                id\n                username\n                createdAt\n            }\n            commentCount\n        }\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/components/DeleteButton.js", "repo": "rimijoker_Social-Media-App"}}, {"type": "mutation", "name": "createPost($body: String!)", "content": "{\n        createPost(body: $body) {\n            id\n            body\n            createdAt\n            username\n            likes {\n                id\n                username\n                createdAt\n            }\n            likeCount\n            comments {\n                id\n                body\n                username\n                createdAt\n            }\n            commentCount\n        }\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/components/PostForm.js", "repo": "rimijoker_Social-Media-App"}}, {"type": "mutation", "name": "($authSignupInput: AuthSignupInput!)", "content": "{\n        signup(authSignupInput: $authSignupInput)\n      }", "metadata": {"commit_hash": "8c0fb55d246c2e0a35475d7168d3a427a5d44c80", "file": "apps/pwa/src/app/auth/services/auth.service.ts", "repo": "mIaborde_fullstack"}}, {"type": "mutation", "name": "($emailToken: String!)", "content": "{\n        confirmEmail(emailToken: $emailToken)\n      }", "metadata": {"commit_hash": "8c0fb55d246c2e0a35475d7168d3a427a5d44c80", "file": "apps/pwa/src/app/auth/services/auth.service.ts", "repo": "mIaborde_fullstack"}}, {"type": "mutation", "name": "($name: String!, $description: String!, $address: String!, $tag_list: String)", "content": "{\n  addStore(store: { name: $name, description: $description, address: $address, tag_list: $tag_list}) {\n    id\n    name\n    description\n    address\n    tags {\n      name\n    }\n    latitude\n    longitude\n  }\n}", "metadata": {"commit_hash": "9b8d3bbb00c1789761f4809ef30fdb6293effbf7", "file": "app/javascript/packs/stores/query.js", "repo": "elct9620_FiveFood"}}, {"type": "mutation", "name": "PostFlags($flags: [String!]!)", "content": "{\n      postFlags(flags: $flags)\n    }", "metadata": {"commit_hash": "5d4ba443dca65ed9d3135e1db563195f782ae847", "file": "src/next/lib/graphql.ts", "repo": "Giotino_LessDestructiveFarm"}}, {"type": "mutation", "name": "UpdateUser(\n    $id: ID!,\n    $firstName: String!,\n    $lastName: String!,\n    $email: String!,\n    $password: String!,\n    $displayName: String\n    $gender: Gender,\n    $birthdate: String,\n    $country: String,\n    $city: String,\n    $mobile: String,\n    $username: String,\n    $photoURL: String,\n    $bio: String,\n    $group: [UserGroup!]\n  )", "content": "{\n    updateUser (\n      id: $id\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n      displayName: $displayName\n      gender: $gender\n      birthdate: $birthdate\n      country: $country\n      city: $city\n      mobile: $mobile\n      username: $username\n      photoURL: $photoURL\n      bio: $bio\n      group: $group\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/users/EditUser.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "DeleteUser($id: ID!)", "content": "{\n    deleteUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/users/EditUser.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "UpdateUser(\n    $id: ID!,\n    $firstName: String!,\n    $lastName: String!,\n    $displayName: String\n    $gender: Gender,\n    $birthdate: String,\n    $country: String,\n    $city: String,\n    $mobile: String,\n    $photoURL: String,\n    $bio: String,\n    $registrationDate: String\n    $lastSeen: DateTime\n    $onlineStatus: OnlineStatus!\n    $group: [UserGroup!]\n    $accountStatus: Enabled!\n  )", "content": "{\n    updateUser(\n      id: $id\n      firstName: $firstName\n      lastName: $lastName\n      displayName: $displayName\n      gender: $gender\n      birthdate: $birthdate\n      country: $country\n      city: $city\n      mobile: $mobile\n      photoURL: $photoURL\n      bio: $bio\n      registrationDate: $registrationDate\n      lastSeen: $lastSeen\n      onlineStatus: $onlineStatus\n      group: $group\n      accountStatus: $accountStatus\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/users/NewUser.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "SignUp($email: String!, $password: String!)", "content": "{\n    signupUser(email: $email, password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/users/NewUser.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "CreataEventTable(\n    $name: String!,\n    $fromDateTime: DateTime,\n    $toDateTime: DateTime,\n    $active: Enabled,\n    $description: String,\n    $campaignId: ID,\n  )", "content": "{\n    createEventTable(\n      name: $name\n      fromDateTime: $fromDateTime\n      toDateTime: $toDateTime\n      active: $active\n      description: $description\n      campaignId: $campaignId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/NewEvent.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "DeleteCampaign($id: ID!)", "content": "{\n    deleteCampaign(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCampaign.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "UpdateCampaign(\n    $id: ID!,\n    $name: String!,\n    $availableCities: [String!],\n    $description: String,\n    $defaultPlaceId: ID,\n    $active: Boolean,\n    $partnerId: ID,\n    $pushNotificationActive: Boolean,\n    $pushNotificationMsg: String,\n    $feedNotificationActive: Boolean,\n    $feedNotificationImg: String,\n    $feedNotificationMsg: String,\n    $photoUrl: String!,\n  )", "content": "{\n    updateCampaign (\n      id: $id\n      name: $name\n      availableCities: $availableCities\n      description: $description\n      defaultPlaceId: $defaultPlaceId\n      active: $active\n      partnerId: $partnerId\n      pushNotificationActive: $pushNotificationActive\n      pushNotificationMsg: $pushNotificationMsg,\n      feedNotificationActive: $feedNotificationActive,\n      feedNotificationImg: $feedNotificationImg,\n      feedNotificationMsg: $feedNotificationMsg,\n      photoUrl: $photoUrl,\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCampaign.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "UpdateEventTable(\n    $id: ID!,\n    $name: String!,\n    $fromDateTime: DateTime,\n    $toDateTime: DateTime,\n    $active: Enabled,\n    $description: String,\n  )", "content": "{\n    updateEventTable (\n      id: $id\n      name: $name\n      fromDateTime: $fromDateTime\n      toDateTime: $toDateTime\n      active: $active\n      description: $description\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditEvent.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "DeleteEventTable($id: ID!)", "content": "{\n    deleteEventTable(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditEvent.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "CreateCondition(\n    $name: String!,\n    $pointReward: Int!,\n    $active: Boolean,\n    $distance: Int!,\n    $notificationType: NotificatiionType,\n    $type: ConditionTypes!,\n    $badgeReward: String!,\n    $places: [ConditionplacesConditionPlace!]!,\n    $dates: [ConditiondatesConditionDate!]!,\n    $campaignId: ID,\n  )", "content": "{\n    createCondition(\n      name: $name\n      pointReward: $pointReward\n      active: $active\n      distance: $distance\n      notificationType: $notificationType\n      type: $type\n      badgeReward: {\n        name: \"badge\",\n        photoURL: $badgeReward\n      }\n      places: $places\n      dates: $dates\n      campaignId: $campaignId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/NewCondition.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "CreateCampaign(\n    $name: String!,\n    $availableCities: [String!],\n    $description: String,\n    $defaultPlaceId: ID,\n    $active: Boolean,\n    $partnerId: ID,\n    $pushNotificationActive: Boolean,\n    $pushNotificationMsg: String,\n    $feedNotificationActive: Boolean,\n    $feedNotificationImg: String,\n    $feedNotificationMsg: String,\n    $photoUrl: String!,\n  )", "content": "{\n    createCampaign(\n      name: $name\n      availableCities: $availableCities\n      description: $description\n      defaultPlaceId: $defaultPlaceId\n      active: $active\n      partnerId: $partnerId\n      pushNotificationActive: $pushNotificationActive\n      pushNotificationMsg: $pushNotificationMsg\n      feedNotificationActive: $feedNotificationActive\n      feedNotificationImg: $feedNotificationImg\n      feedNotificationMsg: $feedNotificationMsg\n      photoUrl: $photoUrl\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/NewCampaign.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "UpdateCondition(\n    $id: ID!,\n    $name: String!,\n    $pointReward: Int!,\n    $active: Boolean,\n    $distance: Int!,\n    $notificationType: NotificatiionType,\n    $badgeReward: String!,\n    $dates: [ConditiondatesConditionDate!]!,\n    $places: [ConditionplacesConditionPlace!]!,\n  )", "content": "{\n    updateCondition (\n      id: $id\n      name: $name\n      pointReward: $pointReward\n      active: $active\n      distance: $distance\n      notificationType: $notificationType\n      badgeReward: {\n        name: \"badge\",\n        photoURL: $badgeReward\n      }\n      dates: $dates\n      places: $places\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCondition.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "DeleteCondition($id: ID!)", "content": "{\n    deleteCondition(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCondition.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "CreateStory(\n    $title: String!,\n    $story: String!,\n    $pictureURL: [String!],\n    $status: StoryStatus!\n    $hashtag: [String!]\n    $placeId: ID,\n    $createdById: ID,\n  )", "content": "{\n    createStory(\n      title: $title\n      story: $story\n      pictureURL: $pictureURL\n      status: $status\n      hashtag: $hashtag\n      placeId: $placeId\n      createdById: $createdById\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/NewStory.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "DeleteStory($id: ID!)", "content": "{\n    deleteStory(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/EditStory.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "UpdateStory(\n    $id: ID!,\n    $title: String!,\n    $story: String!,\n    $pictureURL: [String!],\n    $hashtag: [String!],\n    $status: StoryStatus!,\n    $placeId: ID,\n    $createdById: ID,\n  )", "content": "{\n    updateStory (\n      id: $id\n      title: $title\n      story: $story\n      pictureURL: $pictureURL\n      hashtag: $hashtag\n      status: $status\n      placeId: $placeId\n      createdById: $createdById\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/EditStory.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "DeletePlace($id: ID!)", "content": "{\n    deletePlace(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/places/EditPlace.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "UpdatePlace(\n    $id: ID!,\n    $placeName: String!,\n    $description: String,\n    $address: String,\n    $addressStreet: String,\n    $addressAreaDistrict: String,\n    $addressCityTown: String,\n    $addressStateProvince: String,\n    $addressCountry: String,\n    $addressPostalCode: String,\n    $locationLat: Float,\n    $locationLong: Float,\n    $source: PlaceSource!,\n    $sourceId: String,\n    $pictureURL: [String!],\n    $status: PlaceStatus!,\n  )", "content": "{\n    updatePlace (\n      id: $id\n      placeName: $placeName\n      description: $description\n      address: $address\n      addressStreet: $addressStreet\n      addressAreaDistrict: $addressAreaDistrict\n      addressCityTown: $addressCityTown\n      addressStateProvince: $addressStateProvince\n      addressCountry: $addressCountry\n      addressPostalCode: $addressPostalCode\n      locationLat: $locationLat\n      locationLong: $locationLong\n      source: $source\n      sourceId: $sourceId\n      pictureURL: $pictureURL\n      status: $status\n    ) {\n      placeName\n      description\n      address\n      addressStreet\n      addressAreaDistrict\n      addressCityTown\n      addressStateProvince\n      addressCountry\n      addressPostalCode\n      locationLat\n      locationLong\n      source\n      sourceId\n      pictureURL\n      createdAt\n      status\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/places/EditPlace.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "CreatePlace(\n    $placeName: String!,\n    $description: String,\n    $createSide: CreateSide!,\n    $address: String,\n    $addressStreet: String,\n    $addressAreaDistrict: String,\n    $addressCityTown: String,\n    $addressStateProvince: String,\n    $addressCountry: String,\n    $addressPostalCode: String,\n    $locationLat: Float,\n    $locationLong: Float,\n    $source: PlaceSource!,\n    $sourceId: String,\n    $pictureURL: [String!],\n    $createdById: ID,\n    $status: PlaceStatus!\n  )", "content": "{\n    createPlace(\n      placeName: $placeName\n      description: $description\n      createSide: $createSide\n      address: $address\n      addressStreet: $addressStreet\n      addressAreaDistrict: $addressAreaDistrict\n      addressCityTown: $addressCityTown\n      addressStateProvince: $addressStateProvince\n      addressCountry: $addressCountry\n      addressPostalCode: $addressPostalCode\n      locationLat: $locationLat\n      locationLong: $locationLong\n      source: $source\n      sourceId: $sourceId\n      pictureURL: $pictureURL\n      createdById: $createdById\n      status: $status\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/places/NewPlace.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "AuthenticateUserMutation ($email: String!, $password: String!)", "content": "{ \n    authenticateUser(email: $email, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/auth/Login.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "($input: InputJobSave!)", "content": "{\n                    createJob(input: $input){\n                        ID\n                        Title\n                        Description\n                        StartDate\n                        FinishDate\n                    }\n                }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/job.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($id:ID!, $workspaceCode:ID!)", "content": "{\n                    deleteJob(id: $id, workspaceCode: $workspaceCode)\n                }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/job.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($input: InputJobUpdate, $id: ID!, $workspaceCode: ID!)", "content": "{\n                    updateJob(input: $input, id:  $id, workspaceCode: $workspaceCode){\n                        ID\n                    }\n                }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/job.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($input :InputjobMemberSave!, $workspaceCode : ID!)", "content": "{\n                    createJobMember(input: $input, workspaceCode: $workspaceCode){\n                        ID\n                        JobProfileTitle\n                        CanAllocateTasks\n                        MemberName\n                    }\n                }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/job.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($jobMemberCode: ID!, $workspaceCode: ID!)", "content": "{\n                    deleteJobMember(jobMemberCode: $jobMemberCode, workspaceCode: $workspaceCode){\n\n                    }\n                }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/job.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n            createTokenPassword( email: $email, password: $password ) {\n              accessToken\n              refreshToken\n              user {\n                ID\n                Email\n                UserName\n              }\n            }\n          }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/auth.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($tokenNetwork: String!)", "content": "{\n        createTokenSocialNetwork(tokenNetwork: $tokenNetwork, socialNetwork: GOOGLE) {\n          user {\n            ID\n            Email\n            UserName\n            Photo\n          }\n          accessToken\n          refreshToken\n        }\n      }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/auth.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($refreshToken: String!, $accessToken: String!)", "content": "{\n          destroyToken(refreshToken: $refreshToken, accessToken: $accessToken )\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/auth.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($refreshToken: String!)", "content": "{\n          updateToken(refreshToken: $refreshToken) {\n            token\n            refreshToken\n          }\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/auth.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "(\n          $input:InputUserSKUpdate!,\n          $id:ID!\n        )", "content": "{\n          updateUserSK(input:$input, id:$id){\n            ID\n            UserName\n            IsActive\n          }\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($input:InputUpdateUserInWorkspace!, $id:ID!)", "content": "{\n        updateUserInWorkspace(input:$input, id:$id)\n      }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "(\n        $workSpaceName: String,\n        $workspaceURL: String,\n        $email: String!,\n        $userName: String!,\n        $password: String,\n        $profileCode: ID!,\n        $workSpaceStatusCode: ID!,\n        $clientTypeCode: ID!,\n        $clientSizeCode: ID!,\n        $businessAreaCode: ID!,\n        $invitesEmails: [String!]\n      )", "content": "{\n        createAccount(input: {\n          Workspace: {\n            WorkspaceName: $workSpaceName,\n            WorkspaceURL: $workspaceURL,\n            InvitedDate: \"${new Date().toDateString()}\"\n            DateAcceptedInvite: \"${new Date().toDateString()}\",\n          },\n          UserSK: {\n            Email: $email,\n            UserName: $userName,\n            IsActive: true,\n            ShowGetStarted: false\n          },\n          UserWorkSpace: {\n            InvitedDate:  \"${new Date().toDateString()}\",\n            DateAcceptedInvite:  \"${new Date().toDateString()}\",\n          },\n          Authenticate: {\n            AuthenticationType: PASSWORD,\n            Password: $password,\n          },\n          InvitesEmail: $invitesEmails,\n          ProfileCode: $profileCode,\n          workspacestatuscode:  $workSpaceStatusCode,\n          clienttypecode: $clientTypeCode,\n          clientsizecode: $clientSizeCode,\n          businessareacode: $businessAreaCode,\n        }) {\n          ID\n        }\n      }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($input: InputUserSKSave!)", "content": "{\n        createUserSK(input:$input){\n          ID\n          Email\n          UserName\n        }\n      }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($input: InputUserWorkspaceSave!)", "content": "{\n        createUserWorkspace(input:$input){\n          userSK {\n            ID\n            UserName\n          }\n          workspace {\n            ID\n            WorkspaceName\n          }\n        }\n      }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($input:InputEnrollUserToWorkspaceSave!)", "content": "{\n          enrollUserToWorkspace(input:$input){\n            ID\n            InvitedDate\n            userSK {\n              ID\n              UserName\n            }\n            profile {\n              ID\n              Profile\n            }\n            workspace {\n              ID\n              WorkspaceName\n            }\n          }\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "(\n          $authenticationType: String,\n          $emailCreator: String\n        )", "content": "{\n          createWorkspaceCreation(input: {\n            AuthenticationType: $authenticationType,\n            CreationStartDate: \"${new Date().toDateString()}\",\n            ReadPrivacyStatementDate: \"${new Date().toDateString()}\"\n            CreationFinishDate: \"${new Date().toDateString()}\",\n            EmailCreator: $emailCreator\n          }) {\n            ID\n          }\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "(\n          $authenticationType: String,\n          $emailCreator: String,\n          $workspaceName: String,\n          $workspaceURL: String,\n          $usernameCreator: String,\n          $password: String,\n          $clientsizecode: ID,\n        )", "content": "{\n          createWorkspaceCreation(input: {\n            AuthenticationType: $authenticationType,\n            CreationStartDate: \"${new Date().toDateString()}\",\n            ReadPrivacyStatementDate: \"${new Date().toDateString()}\"\n            CreationFinishDate: \"${new Date().toDateString()}\",\n            EmailCreator: $emailCreator,\n            WorkspaceName: $workspaceName,\n            WorkspaceURL: $workspaceURL,\n            UsernameCreator: $usernameCreator,\n            Password: $password,\n            clientsizecode: $clientsizecode\n          }) {\n            ID\n          }\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "(\n          $authenticationType: String,\n          $emailCreator: String,\n          $workspaceName: String,\n          $workspaceURL: String,\n          $usernameCreator: String,\n          $password: String,\n          $clientsizecode: ID,\n          $workspacecreationcode: ID\n        )", "content": "{\n          createWorkspaceCreation(input: {\n            AuthenticationType: $authenticationType,\n            CreationStartDate: \"${new Date().toDateString()}\",\n            ReadPrivacyStatementDate: \"${new Date().toDateString()}\"\n            CreationFinishDate: \"${new Date().toDateString()}\",\n            EmailCreator: $emailCreator,\n            WorkspaceName: $workspaceName,\n            WorkspaceURL: $workspaceURL,\n            UsernameCreator: $usernameCreator,\n            Password: $password,\n            clientsizecode: $clientsizecode\n            workspacecreationcode: $workspacecreationcode\n          }) {\n            ID\n          }\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "(\n          $authenticationType: String,\n          $emailCreator: String,\n          $workspaceName: String,\n          $workspaceURL: String,\n          $usernameCreator: String,\n          $password: String,\n          $email1: String,\n          $email2: String,\n          $email3: String,\n          $businesscode: ID,\n          $clientsizecode: ID,\n          $clienttypecode: ID,\n        )", "content": "{\n          createWorkspaceCreation(input: {\n            AuthenticationType: $authenticationType,\n            CreationStartDate: \"${new Date().toDateString()}\",\n            ReadPrivacyStatementDate: \"${new Date().toDateString()}\"\n            CreationFinishDate: \"${new Date().toDateString()}\",\n            EmailCreator: $emailCreator,\n            WorkspaceName: $workspaceName,\n            WorkspaceURL: $workspaceURL,\n            UsernameCreator: $usernameCreator,\n            Password: $password,\n            clientsizecode: $clientsizecode,\n            clienttypecode: $clienttypecode,\n            EmailInvite1: $email1,\n            EmailInvite2: $email2,\n            EmailInvite3: $email3,\n            businessareacode: $businesscode,\n          }) {\n            ID\n          }\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($email: String!)", "content": "{\n          resetPassword(email: $email)\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "(\n        $password: String!,\n        $confirmPassword: String!,\n        $token: String!\n      )", "content": "{\n        updatePasswordRecovery(\n          password: $password,\n          confirmPassword: $confirmPassword,\n          token: $token\n        )\n      }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "(\n        $userName: String!,\n        $workSpaceName: String,\n        $workspaceURL: String,\n        $federationToken: String,\n        $profileCode: ID!,\n        $workSpaceStatusCode: ID!,\n        $clientTypeCode: ID!,\n        $clientSizeCode: ID!,\n        $businessAreaCode: ID!,\n        $invitesEmails: [String!]\n      )", "content": "{\n        createAccount(input: {\n          Workspace: {\n            WorkspaceName: $workSpaceName,\n            WorkspaceURL: $workspaceURL,\n            InvitedDate: \"${new Date().toDateString()}\"\n            DateAcceptedInvite: \"${new Date().toDateString()}\",\n          },\n          UserSK: {\n            UserName: $userName,\n            IsActive: true,\n            ShowGetStarted: false\n          },\n          UserWorkSpace: {\n            InvitedDate:  \"${new Date().toDateString()}\",\n            DateAcceptedInvite:  \"${new Date().toDateString()}\",\n          },\n          Authenticate: {\n            AuthenticationType: GOOGLE,\n            FederationToken: $federationToken,\n          },\n          InvitesEmail: $invitesEmails,\n          ProfileCode: $profileCode,\n          workspacestatuscode:  $workSpaceStatusCode,\n          clienttypecode: $clientTypeCode,\n          clientsizecode: $clientSizeCode,\n          businessareacode: $businessAreaCode,\n        }) {\n          ID\n        }\n      }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "($id:ID!)", "content": "{\n          deleteUserWorkspace(id:$id)\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "mutation", "name": "CreateComment(\n    $post_id: ID!\n    $reply_comment_id: ID\n    $writer: String!\n    $password: String!\n    $comment: String!\n  )", "content": "{\n    createComment(\n      post_id: $post_id\n      reply_comment_id: $reply_comment_id\n      writer: $writer\n      password: $password\n      comment: $comment\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "985c3c6103b6fbdf208cc69007a81fc1cd62cd31", "file": "graphql/comment.ts", "repo": "rlawnsxo131_devlog-client"}}, {"type": "mutation", "name": "UpdateComment($comment_id: ID!, $email: String, $comment: String!)", "content": "{\n    updateComment(comment_id: $comment_id, email: $email, comment: $comment)\n  }", "metadata": {"commit_hash": "985c3c6103b6fbdf208cc69007a81fc1cd62cd31", "file": "graphql/comment.ts", "repo": "rlawnsxo131_devlog-client"}}, {"type": "mutation", "name": "RemoveComment($comment_id: ID!)", "content": "{\n    removeComment(comment_id: $comment_id)\n  }", "metadata": {"commit_hash": "985c3c6103b6fbdf208cc69007a81fc1cd62cd31", "file": "graphql/comment.ts", "repo": "rlawnsxo131_devlog-client"}}, {"type": "mutation", "name": "addRecipe($title: String!)", "content": "{\n    createRecipe(title: $title) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "e9993e4d62a7beeddd51eb9f9b9891683a682e73", "file": "apollo-client-demo/components/CreateRecipeForm.tsx", "repo": "nfactorial-incubator_2018-react-native"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      ok\n      token\n      refreshToken\n      errors {\n        path\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/routes/Login.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "mutation", "name": "($name: String!)", "content": "{\n    createTeam(name: $name) {\n      ok\n      team {\n        id\n      }\n      errors {\n        path\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/routes/CreateTeam.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "mutation", "name": "($username: String!, $email: String!, $password: String!)", "content": "{\n    register(username: $username, email: $email, password: $password) {\n      ok\n      errors {\n        path\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/routes/Register.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "mutation", "name": "($email: String!, $teamId: Int!)", "content": "{\n    addTeamMember(email: $email, teamId: $teamId) {\n      ok\n      errors {\n        path\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/components/InvitePeopleModal.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "mutation", "name": "($teamId: Int!, $name: String!, $public: Boolean, $members: [Int!])", "content": "{\n    createChannel(teamId: $teamId, name: $name, public: $public, members: $members) {\n      ok\n      channel {\n        id\n        name\n        dm\n      }\n    }\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/components/AddChannelModal.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "mutation", "name": "($teamId: Int!, $members: [Int!]!)", "content": "{\n    getOrCreateChannel(teamId: $teamId, members: $members) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/components/DirectMessageModal.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "mutation", "name": "($channelId: Int!, $file: File)", "content": "{\n    createMessage(channelId: $channelId, file: $file)\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/components/FileUpload.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "mutation", "name": "createTask($title: String!, $description: String)", "content": "{\n    createTask(input: {title: $title, description: $description, version: 1, status: \"open\"}) {\n       ...TaskFields\n    }\n  }\n\n${TaskFragment}", "metadata": {"commit_hash": "3b9a94dfb9cecb604197dee1a0614d9b39aec46c", "file": "template/client/src/graphql/mutations/TaskMutation.ts", "repo": "aerogear_modern-appdev-workshop"}}, {"type": "mutation", "name": "assign($id: ID!, $status: String!, $version: Int!)", "content": "{\n  assign(id: $id, status: $status, version: $version) {\n    id,\n    status,\n    version\n  }\n}", "metadata": {"commit_hash": "3b9a94dfb9cecb604197dee1a0614d9b39aec46c", "file": "template/client/src/graphql/mutations/AssignTaskMutation.ts", "repo": "aerogear_modern-appdev-workshop"}}, {"type": "mutation", "name": "CreateUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n  )", "content": "{\n    createUser(firstName: $firstName, lastName: $lastName, email: $email) {\n      id\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "cf7a3ac37afda95dcf803843b62b87229d2ec447", "file": "src/app/users/_common/stores/users.queries.ts", "repo": "codilime_mobx-in-react-scalable-state-management"}}, {"type": "mutation", "name": "DeleteUsers($ids: [ID!]!)", "content": "{\n    deleteUsers(ids: $ids)\n  }", "metadata": {"commit_hash": "cf7a3ac37afda95dcf803843b62b87229d2ec447", "file": "src/app/users/_common/stores/users.queries.ts", "repo": "codilime_mobx-in-react-scalable-state-management"}}, {"type": "mutation", "name": "ItemClientNDDescriptionImportBlocks(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    itemClientNDDescriptionImportBlocks(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_client_nd_description_import_blocks.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "SkillForceImportServer(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    skillForceImportServer(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/skillforce_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "MapSptCreate($projectId: String!, $values: JSON)", "content": "{\n    mapSptCreate(projectId: $projectId, values: $values) {\n      id\n      ...MapSptNameParts\n    }\n  }\n\n  ${MapSptNameParts}", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/mapspt_create.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ResourceUpdate($id: String!, $values: JSON)", "content": "{\n    resourceUpdate(id: $id, values: $values) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/resource_update.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "StoreImportNpcharacter(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    storeImportNpcharacter(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/store_import_npcharacter.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "SkillForceImportClient(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    skillForceImportClient(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/skillforce_import_client.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "StoreImportServer(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    storeImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/store_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "MapActiveImportServer(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n    $mapName: String!\n    $activeName: String!\n  )", "content": "{\n    mapActiveImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n      mapName: $mapName\n      activeName: $activeName\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/mapactive_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ProjectCreate(\n    $title: String!\n    $description: String!\n    $isPublic: Boolean!\n  )", "content": "{\n    projectCreate(\n      title: $title\n      description: $description\n      isPublic: $isPublic\n    ) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/project_create.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "MapSptImportServer(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n    $mapName: String!\n  )", "content": "{\n    mapSptImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n      mapName: $mapName\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/mapspt_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "MapSptUpdate($id: String!, $values: JSON)", "content": "{\n    mapSptUpdate(id: $id, values: $values) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/mapspt_update.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "StoreImportClient(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    storeImportClient(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/store_import_client.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "StoreCopy($id: String!)", "content": "{\n    storeCopy(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/store_copy.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ItemImportClientND(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    itemImportClientND(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_import_client_nd.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "StoreUpdate($id: String!, $values: JSON)", "content": "{\n    storeUpdate(id: $id, values: $values) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/store_update.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ItemImportServer(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    itemImportServer(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ResourceImportClient(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    resourceImportClient(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/resource_import_client.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ItemRemoveVirtual($id: String!)", "content": "{\n    itemRemoveVirtual(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_remove_virtual.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ItemUpdate($id: String!, $values: JSON)", "content": "{\n    itemUpdate(id: $id, values: $values) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_update.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "MapBlockImportServer(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n    $mapName: String!\n  )", "content": "{\n    mapBlockImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n      mapName: $mapName\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/mapblock_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "BoxItemOutUpdate($id: String!, $values: JSON)", "content": "{\n    boxItemOutUpdate(id: $id, values: $values) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/boxItemOut_update.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ItemImportClient(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    itemImportClient(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_import_client.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ItemRestoreVirtual($id: String!)", "content": "{\n    itemRestoreVirtual(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_restore_virtual.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "ItemRemoveFully($id: String!)", "content": "{\n    itemRemoveFully(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_remove_fully.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "MapPortalImportServer(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n    $mapName: String!\n  )", "content": "{\n    mapPortalImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n      mapName: $mapName\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/mapportal_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "UserLogin($ident: String!, $password: String!)", "content": "{\n    userLogin(ident: $ident, password: $password) {\n      token\n      user {\n        id\n        login\n        email\n        role {\n          id\n          name\n          title\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/user_login.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "UserRegister($login: String!, $email: String!, $password: String!)", "content": "{\n    userRegister(login: $login, email: $email, password: $password) {\n      token\n      user {\n        id\n        login\n        email\n        role {\n          id\n          name\n          title\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/user_register.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "BoxItemOutImportServer(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    boxItemOutImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/boxItemOut_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "PotionItemEffectImportServer(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    potionItemEffectImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/potionItemEffect_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "Answer($answers: [AnswerInput]!)", "content": "{\n  answer(answers: $answers) {\n    allowed\n  }\n}", "metadata": {"commit_hash": "bb65ac9bd047c336c18bcb23bdb496aebd5ecc98", "file": "src/graphql/answer.js", "repo": "qiujun8023_gallery-client"}}, {"type": "mutation", "name": "createMessage($username: String!, $chatId: Int!, $text: String!, $userToken: String!)", "content": "{\n            createMessage(username: $username, groupId: $chatId, text: $text, userToken: $userToken) {\n                message{\n                    text\n                    timestamp\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "createIndividualGroup($username: String!, $users: [String!]!, $userToken: String!)", "content": "{\n            createIndividualGroup(username: $username, users: $users, userToken: $userToken) {\n                group{\n                    id\n                    name\n                    individual\n                    users {\n                        username\n                        profilePicture\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "createGroupalGroup($username: String!, $groupName: String!, $users: [String!]!, $userToken: String!)", "content": "{\n            createGroupalGroup(username: $username, groupName: $groupName, users: $users, userToken: $userToken) {\n                group{\n                    id\n                    name\n                    individual\n                    users {\n                        username\n                        profilePicture\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "updateStatusPetition($petitionId: Int!, $statusPetition: String!, $userToken: String!)", "content": "{\n        updateStatusPetition(petitionId: $petitionId, statusPetition: $statusPetition, userToken: $userToken){\n            petition{\n              status\n              id\n            }\n        }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertyRequestsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "createUser ($username: String!, $password: String!, $firstName: String!, $lastName: String!, $email: String!, $roles: String!, $genre: String!, $code: String)", "content": "{\n                    createUser (username: $username, password: $password, firstName: $firstName, lastName: $lastName, email: $email, roles: $roles, genre: $genre, code: $code){\n                        user{\n                            username\n                        }\n                    }\n\n                    tokenAuth(username: $username, password: $password){\n                        token\n                        user{\n                          username\n                          roles{\n                            role\n                          }\n                          userpreferences{\n                            inappropiateLanguage\n                          }\n                        }\n                      }\n                }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "editUser($username: String!, $firstName: String, $lastName: String, $email: String, $role: String, $genre: String, $profilePicture: String, $biography: String, $profession: String, $userToken: String!)", "content": "{\n                    editUser(username: $username, firstName: $firstName, lastName: $lastName, email: $email, role: $role, genre: $genre, profilePicture: $profilePicture, biography: $biography, profession: $profession, userToken: $userToken){\n                        user{\n                            username\n                            roles{\n                                role\n                            }\n                            age\n                            birthday\n                        }\n                    }\n                }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "logUser($username: String!, $password: String!)", "content": "{\n                    tokenAuth(username: $username, password: $password){\n                        token\n                        user{\n                          username\n                          roles{\n                            role\n                          }\n                          userpreferences{\n                            inappropiateLanguage\n                          }\n                        }\n                      }\n                }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "createReview ($valuedUser: String!, $evaluatorUser: String!, $text: String!, $relationship: String!, $rating: Int, $userToken: String!)", "content": "{\n            createReview (valuedUser: $valuedUser, evaluatorUser: $evaluatorUser, text: $text, relationship: $relationship, rating: $rating, userToken: $userToken){\n                review{\n                    text\n                    evaluatorUser{\n                        username\n                        firstName\n                        lastName\n                        profilePicture\n                        genre\n                    }\n                    valuedUser{\n                        averageRating\n                    }\n                    rating\n                    relationship\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "changePassword($username: String!, $newPassword: String!, $oldPassword: String!, $userToken: String!)", "content": "{\n            changeUserPassword(username: $username, newPassword: $newPassword, oldPassword: $oldPassword, userToken: $userToken){\n                user{\n                    username\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "editUserPublic($username: String!, $tags: [String]!, $biography: String, $profession: String, $profilePicture: String, $firstName: String!, $lastName: String!, $birthday: String, $userToken: String!)", "content": "{\n            editUserPublic(username: $username, biography: $biography, profession: $profession, profilePicture: $profilePicture, tags: $tags, firstName: $firstName, lastName: $lastName, birthday: $birthday, userToken: $userToken){\n                user{\n                    firstName\n                    lastName\n                    profilePicture\n                    biography\n                    profession\n                    birthday\n                    averageRating\n                    roles{\n                        role\n                    }\n                    tags{\n                        name\n                        color\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "editUserPrivate($username: String!, $firstName: String!, $lastName: String!, $email: String!, $genre: String!, $role: String!, $profilePicture: String, $userToken: String!)", "content": "{\n            editUserPrivate(username: $username, firstName: $firstName, lastName: $lastName, email: $email , genre: $genre, role: $role, profilePicture: $profilePicture, userToken: $userToken){\n                user{\n                    firstName\n                    lastName\n                    profilePicture\n                    email\n                    roles{\n                        role\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "editUserPreferences($username: String!, $inappropiateLanguage: Boolean!, $userToken: String!)", "content": "{\n            editUserPreferences(username: $username, inappropiateLanguage: $inappropiateLanguage, userToken: $userToken){\n                userPreferences{\n                    inappropiateLanguage\n                }   \n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "changeContract($numDaysSelected: Int!, $planType: String!, $token: String!, $username: String!)", "content": "{\n            changeContract(numDaysSelected: $numDaysSelected, planType: $planType, token: $token, username: $username) {\n                contract {\n                    endDate\n                    plan{\n                        visitsNumber\n                    }\n                }         \n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "editUserFlatterCoins($username: String!, $token: String!, $flatterCoins: Int!)", "content": "{\n            editUserFlatterCoins(username: $username, token: $token, flatterCoins: $flatterCoins){\n                user{\n                    username\n                    flatterCoins\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "deleteUser($token: String!, $username: String!)", "content": "{\n            deleteUser(token: $token, username: $username){\n                user{\n                    username\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "redeemPromotion($token: String!, $username: String!, $code: String!)", "content": "{\n            redeemPromotion(token: $token, username: $username, code: $code){\n                promotion{\n                    quantity\n                    isDiscount\n                    isDisabled\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "updateStatusPetition($petitionId: Int!, $statusPetition: String!, $userToken: String!)", "content": "{\n      updateStatusPetition(petitionId: $petitionId, statusPetition: $statusPetition, userToken: $userToken){\n        petition{\n          status\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/personalRequestsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "addUserToProperty($propertyId: Int!, $username: String!, $userToken: String!)", "content": "{\n      addUserToProperty(propertyId: $propertyId, username: $username, userToken: $userToken){\n        user{\n          username\n        }\n    \t\tproperty{\n          title\n          id\n        }    \t\t\t\t\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/personalRequestsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "createProperty(\n      $title: String!\n      $description: String!\n      $province: String!\n      $bathroomsNumber: Int!\n      $bedroomsNumber: Int!\n      $dimensions: Int!\n      $location: String!\n      $municipality: String!\n      $ownerUsername: String!\n      $price: Float!\n      $images: [String]\n      $maxCapacity: Int!\n      $tags: [String]!\n      $userToken: String!\n    )", "content": "{\n      createProperty(\n        title: $title\n        description: $description\n        dimensions: $dimensions\n        ownerUsername: $ownerUsername\n        location: $location\n        bedroomsNumber: $bedroomsNumber\n        bathroomsNumber: $bathroomsNumber\n        province: $province\n        municipality: $municipality\n        price: $price\n        images: $images\n        maxCapacity: $maxCapacity\n        tags: $tags\n        userToken: $userToken\n      ) {\n        property {\n          title\n          description\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "updateProperty(\n      $id: Int!\n      $title: String!\n      $description: String!\n      $province: String!\n      $bathroomsNumber: Int!\n      $bedroomsNumber: Int!\n      $dimensions: Int!\n      $location: String!\n      $municipality: String!\n      $price: Float!\n      $images: [String]\n      $tags: [String]!\n      $userToken: String!\n    )", "content": "{\n      updateProperty(\n        propertyId: $id\n        title: $title\n        description: $description\n        dimensions: $dimensions\n        location: $location\n        bedroomsNumber: $bedroomsNumber\n        bathroomsNumber: $bathroomsNumber\n        province: $province\n        municipality: $municipality\n        price: $price\n        images: $images\n        tags: $tags\n        userToken: $userToken\n      ) {\n        property {\n          title\n          description\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "deletePropertyById($propertyId: Int!, $userToken: String!)", "content": "{\n      deleteProperty(propertyId: $propertyId, userToken: $userToken) {\n        property {\n          title\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "makePropertyOutstanding($propertyId: Int!, $userToken: String!)", "content": "{\n      makePropertyOutstanding(propertyId: $propertyId, userToken: $userToken) {\n        property {\n          isOutstanding\n          title\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "createPropertyRequest($message: String!, $requesterUsername: String!, $propertyId: Int!, $userToken: String!)", "content": "{\n            createPetition(message: $message, requesterUsername: $requesterUsername, propertyId: $propertyId, userToken: $userToken) {\n                petition {\n                    status\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "removePropertyRequest($requestId: Int!, $userToken: String!)", "content": "{\n            deletePetition(petitionId: $requestId, userToken: $userToken) {\n                petition {\n                    status\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "addUsersToFavouriteProperty($username: String!, $propertyId: Int!, $userToken: String!)", "content": "{\n        addUsersToFavouriteProperty(username: $username, propertyId: $propertyId, userToken: $userToken){\n            user{\n                username\n            }\n        }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "deleteUsersToFavouriteProperty($username: String!, $propertyId: Int!, $userToken: String!)", "content": "{\n          deleteUsersToFavouriteProperty(username: $username, propertyId: $propertyId, userToken: $userToken){\n              user{\n                  username\n              }\n          }\n      }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "updatePostfinancePayment(\n    $id: ID!\n    $message: String!\n  )", "content": "{\n    updatePostfinancePayment(\n      pfpId: $id\n      mitteilung: $message\n    ) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "importPostfinanceCSV($csv: String!)", "content": "{\n    importPostfinanceCSV(csv: $csv)\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "rematchPayments", "content": "{\n    rematchPayments\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "hidePostfinancePayment($id: ID!)", "content": "{\n    hidePostfinancePayment(id: $id) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "manuallyMatchPostfinancePayment($id: ID!)", "content": "{\n    manuallyMatchPostfinancePayment(id: $id) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "removeUserFromRole($userId: ID!, $role: String!)", "content": "{\n    removeUserFromRole(userId: $userId, role: $role) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Roles.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "addUserToRole($userId: ID!, $role: String!)", "content": "{\n    addUserToRole(userId: $userId, role: $role) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Roles.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "revokeAccess(\n    $id: ID!\n  )", "content": "{\n    revokeAccess(id: $id)\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Access.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "clearSession(\n    $sessionId: ID!\n    $userId: ID!\n  )", "content": "{\n    clearSession(\n      sessionId: $sessionId\n      userId: $userId\n    )\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Sessions.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "clearSessions($userId: ID!)", "content": "{\n    clearSessions(userId: $userId)\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Sessions.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "updateAdminNotes(\n    $notes: String\n    $userId: ID!\n  )", "content": "{\n    updateAdminNotes(\n      notes: $notes\n      userId: $userId\n    ) {\n      id\n      adminNotes\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/AdminNotes.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "updatePreferredFirstFactor(\n    $userId: ID!\n    $tokenType: SignInTokenType!\n  )", "content": "{\n    preferredFirstFactor(\n      userId: $userId\n      tokenType: $tokenType\n    ) {\n      id\n      ...FirstFactors\n    }\n  }\n  ${firstFactorFragment}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/AuthSettings.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "resubscribeEmail($userId: ID!)", "content": "{\n    resubscribeEmail(userId: $userId) {\n      id\n      status\n      subscriptions {\n        id\n        name\n        subscribed\n        isEligible\n      }\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/NewsletterSubscriptions.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "updateNewsletterSubscription(\n    $userId: ID!\n    $name: NewsletterName!\n    $subscribed: Boolean!\n  )", "content": "{\n    updateNewsletterSubscription(\n      userId: $userId\n      name: $name\n      subscribed: $subscribed\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/NewsletterSubscriptions.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "updateUser(\n    $id: ID!\n    $birthday: Date\n    $firstName: String!\n    $lastName: String!\n    $phoneNumber: String\n    $address: AddressInput!\n  )", "content": "{\n    updateUser(\n      userId: $id\n      birthday: $birthday\n      firstName: $firstName\n      lastName: $lastName\n      phoneNumber: $phoneNumber\n      address: $address\n    ) {\n      id\n      name\n      firstName\n      lastName\n      phoneNumber\n      address {\n        id\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Particulars/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "cancelPledge($pledgeId: ID!)", "content": "{\n    cancelPledge(pledgeId: $pledgeId) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Pledges/CancelPledge.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "movePledge($pledgeId: ID!, $userId: ID!)", "content": "{\n    movePledge(pledgeId: $pledgeId, userId: $userId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Pledges/MovePledge.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "resolvePledgeToPayment($pledgeId: ID!, $reason: String!)", "content": "{\n    resolvePledgeToPayment(pledgeId: $pledgeId, reason: $reason) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Pledges/ResolvePledgeToPayment.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "updatePayment(\n    $paymentId: ID!\n    $status: PaymentStatus!\n    $reason: String\n  )", "content": "{\n    updatePayment(paymentId: $paymentId, status: $status, reason: $reason) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Pledges/UpdatePayment.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "updateAddress($id: ID!, $address: AddressInput!)", "content": "{\n    updateAddress(id: $id, address: $address) {\n      id\n      name\n      line1\n      line2\n      postalCode\n      city\n      country\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Pledges/UpdateAddress.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "mergeUsers($sourceId: ID!, $targetId: ID!)", "content": "{\n    mergeUsers(\n      sourceUserId: $sourceId\n      targetUserId: $targetId\n    ) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Merge/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "deleteUser($userId: ID!, $unpublishComments: Boolean!)", "content": "{\n    deleteUser(userId: $userId, unpublishComments: $unpublishComments) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Actions/DeleteUser.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "updateEmail($id: ID!, $email: String!)", "content": "{\n    updateEmail(userId: $id, email: $email) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Email/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "resetMembership($membershipId: ID!)", "content": "{\n    resetMembership(id: $membershipId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/ResetMembership.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "setMembershipAutoPay($id: ID!, $autoPay: Boolean!)", "content": "{\n    setMembershipAutoPay(id: $id, autoPay: $autoPay) {\n      id\n      autoPay\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "moveMembership($membershipId: ID!, $userId: ID!)", "content": "{\n    moveMembership(membershipId: $membershipId, userId: $userId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/MoveMembership.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "reactivateMembership($membershipId: ID!)", "content": "{\n    reactivateMembership(id: $membershipId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/ReactivateMembership.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "appendPeriod(\n    $id: ID!\n    $duration: Int!\n    $durationUnit: MembershipTypeInterval!\n  )", "content": "{\n    appendPeriod(id: $id, duration: $duration, durationUnit: $durationUnit) {\n      id\n      periods {\n        id\n        beginDate\n        endDate\n        isCurrent\n      }\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/AppendPeriod.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "cancelMembership(\n    $membershipId: ID!\n    $immediately: Boolean\n    $details: CancellationInput!\n  )", "content": "{\n    cancelMembership(\n      id: $membershipId\n      immediately: $immediately\n      details: $details\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/CancelMembership.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "updateMembershipCancellation(\n    $cancellationId: ID!\n    $details: CancellationInput!\n  )", "content": "{\n    updateMembershipCancellation(id: $cancellationId, details: $details) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/CancelMembership.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "verifyCredential($id: ID!)", "content": "{\n    verifyCredential(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Dialog/Credentials.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "removeCredentialVerification($id: ID!)", "content": "{\n    removeCredentialVerification(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Dialog/Credentials.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "signIn($email: String!, $context: String, $consents: [String!], $tokenType: SignInTokenType)", "content": "{\n  signIn(email: $email, context: $context, consents: $consents, tokenType: $tokenType) {\n    phrase\n    tokenType\n    alternativeFirstFactors\n  }\n}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Auth/SignIn.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "signOut", "content": "{\n  signOut\n}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Auth/SignOut.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "Directive", "content": "{\n        mutate {\n          field {\n            subField {\n              hello @live\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/directives.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "nameOfMutation", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/getFromAST.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/fragments.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/batch-http/__tests__/batchHttpLink.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/ws/__tests__/webSocketLink.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/http/__tests__/HttpLink.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/parser/__tests__/parser.test.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/parser/__tests__/parser.test.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "One($t: String!)", "content": "{\n        user(t: $t) {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/parser/__tests__/parser.test.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "setName", "content": "{\n          name\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "updateName($id: ID!, $firstName: String!)", "content": "{\n    updateName(id: $id, firstName: $firstName) {\n      __typename\n      id\n      firstName\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/fetchPolicies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/links.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/links.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "makeListPrivate($listId: ID!)", "content": "{\n          makeListPrivate(id: $listId)\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(input: { id: \"5\" }) {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\") {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n        makeListPrivate(id: \"5\") {\n          id\n          isPrivate\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName($id: ID!)", "content": "{\n          changeAuthorName(newName: \"Jack Smith\", id: $id) {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n        changeAuthorName(newName: \"Jack Smith\") {\n          firstName\n          lastName\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "mut($in: Int!)", "content": "{\n            mut(inline: 5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "mut($in: Float!)", "content": "{\n            mut(inline: 5.5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "mut($in: String!)", "content": "{\n            mut(inline: \"abc\", variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "mut($in: Array!)", "content": "{\n            mut(inline: [1, 2], variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "mut($in: Object!)", "content": "{\n            mut(inline: { a: 1 }, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "mut($in: Boolean!)", "content": "{\n            mut(inline: true, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "some_mutation($nil: ID, $in: Object)", "content": "{\n        some_mutation(\n          input: {\n            id: \"5\"\n            arr: [1, { a: \"b\" }]\n            obj: { a: \"b\" }\n            num: 5.5\n            nil: $nil\n            bo: true\n          }\n        ) {\n          id\n        }\n        some_mutation_with_variables(input: $in) {\n          id\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/client.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/client.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "upVote($id: ID!)", "content": "{\n          upvote(id: $id) {\n            success\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/client.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          __typename\n          id\n          todos {\n            id\n            text\n            completed\n            __typename\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo($text: String)", "content": "{\n        createTodo(text: $text) {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "AddItem($item: Item!)", "content": "{\n          addItem(item: $item) {\n            text\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n      submitComment(\n        repoFullName: $repoFullName\n        commentContent: $commentContent\n      ) {\n        postedBy {\n          login\n          html_url\n        }\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "setCompleted", "content": "{\n        setCompleted(todoId: \"3\") {\n          id\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "upload($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "AddNewPerson($newName: String!)", "content": "{\n        newPerson(name: $newName) {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          name\n          # missing field: description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "DoSomething", "content": "{\n        doSomething {\n          time\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Reset", "content": "{\n        reset {\n          echo\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "($a: Int!, $b: Int, $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "($a: Int = 1, $b: String = \"cheese\", $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "($a: Int!, $b: Int, $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Foo", "content": "{\n          foo {\n            bar\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "start", "content": "{\n        start @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "start", "content": "{\n        start @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "start", "content": "{\n        start @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "upvotePost($postId: Int!)", "content": "{\n          topPost @client @export(as: \"postId\")\n          upvotePost(postId: $postId) {\n            title\n            votes\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "upvotePost($postId: Int!)", "content": "{\n          topPost @client @export(as: \"postId\")\n          upvotePost(postId: $postId) {\n            title\n            votes\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "start", "content": "{\n        start @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "start", "content": "{\n          start @client\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "start($id: ID!)", "content": "{\n        start(field: $id) @client {\n          field\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Select", "content": "{\n        select(itemId: $id) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "AddOrUpdate", "content": "{\n        addOrUpdate(id: $id, title: $title) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Increment($amount: Int = 1)", "content": "{\n        increment(amount: $amount) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Decrement($amount: Int = 1)", "content": "{\n        decrement(amount: $amount) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "AddTodo($message: String, $title: String)", "content": "{\n        addTodo(message: $message, title: $title) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SelectItem($id: Int!)", "content": "{\n        toggleItem(id: $id) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SelectItem($id: Int!)", "content": "{\n        touchIllegally(id: $id) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n        incrementCount @client\n        updateUser(firstName: \"Harry\") {\n          firstName\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addPerson", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/shared-operations.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addPerson", "content": "{\n    allPeople(first: 1) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/index.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addPerson($first: Int)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/index.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addPerson($first: Int!, $second: Int!)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/index.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addPerson($id: Int)", "content": "{\n    allPeople(id: $id) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/lifecycle.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/recycled-queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/recycled-queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo($description: String!, $priority: String)", "content": "{\n      createTodo(description: $description, priority: $priority) {\n        id\n        description\n        priority\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useMutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "DoSomething", "content": "{\n        doSomething {\n          time\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useMutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "AddCar", "content": "{\n          addCar {\n            id\n            make\n            model\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "AddOrUpdate", "content": "{\n          addOrUpdate(id: $id, title: $title) @client\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "submitRepository", "content": "{\n          submitRepository(repoFullName: \"apollographql/apollo-client\") {\n            createdAt\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo($text: String!)", "content": "{\n    createTodo {\n      id\n      text\n      completed\n      __typename\n    }\n    __typename\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Mutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Login($email: String!, $hash: String!)", "content": "{\n    login(email: $email, password: $hash) {\n      code\n      token\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout {\n      code\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "Signup($data: RegisterInput!)", "content": "{\n    signup(data: $data) {\n      code\n      token\n      message\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "SetUserBuild($data: UserBuildInput!)", "content": "{\n    setUserBuild(data: $data) {\n      id\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "RemoveUserBuild($id: String!)", "content": "{\n    removeUserBuild(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "SetUserCharacter($data: UserAvatarInput!)", "content": "{\n    setUserCharacter(data: $data) {\n      id\n      avatarId\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "RemoveUserCharacter($id: String!)", "content": "{\n    removeUserCharacter(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "SetUserWeapon($data: UserWeaponInput!)", "content": "{\n    setUserWeapon(data: $data) {\n      id\n      weaponId\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "RemoveUserWeapon($id: String!)", "content": "{\n    removeUserWeapon(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "UpdateGameVersion($id: ID!, $input: UpdateGameVersionInput!)", "content": "{\n            updateGameVersion(id: $id, input: $input) {\n              id\n              identifier\n              release\n            }\n          }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/views/administration/game-version/index.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "mutation", "name": "SignUp($input: CreateAccountInput!)", "content": "{\n            signUp(input: $input) {\n              id\n              username\n            }\n          }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/views/sign-up/sign-up.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "mutation", "name": "CreateCommodity($input: CreateCommodityInput!)", "content": "{\n            createCommodity(input: $input) {\n              id\n              name\n            }\n          }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/components/create-commodity/create-commodity.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "mutation", "name": "CreateItemPrice($input: CreateItemPriceInput!)", "content": "{\n              createItemPrice(input: $input) {\n                id\n              }\n            }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/components/report-prices/report-prices.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "mutation", "name": "CreateGameVersion($input: CreateGameVersionInput!)", "content": "{\n            createGameVersion(input: $input) {\n              id\n              identifier\n            }\n          }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/components/create-game-version/create-game-version.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "mutation", "name": "CreateLocation($input: CreateLocationInput!)", "content": "{\n            createLocation(input: $input) {\n              id\n              name\n            }\n          }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/components/create-location/create-location.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "mutation", "name": "AddMoney($amount: Float!, $currency: String!)", "content": "{\n  addMoney(amount: $amount, currency: $currency) {\n    account {\n      id\n      balance\n    }\n    message\n  }\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "CreateAccount($currency: String!)", "content": "{\n  createAccount(currency: $currency)\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "createCard", "content": "{\n  createCard\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "CreateTransaction($currency: String!)", "content": "{\n  createTransaction(currency: $currency)\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "DeleteAccount($currency: String!)", "content": "{\n  deleteAccount(currency: $currency)\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "DestroyAccount", "content": "{\n  destroyAccount\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "Exchange($selectedAccountCurrency: String!, $toAccountCurrency: String!, $amount: Float!)", "content": "{\n  exchange(selectedAccountCurrency: $selectedAccountCurrency, toAccountCurrency: $toAccountCurrency, amount: $amount) {\n    account {\n      id\n      balance\n    }\n    message\n  }\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "Login($email: String!, $password: String!)", "content": "{\n  login(email: $email, password: $password) {\n    accessToken\n    user {\n      id\n      email\n      firstName\n      lastName\n      dateOfBirth\n      streetAddress\n      postCode\n      city\n      country\n    }\n  }\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "Logout", "content": "{\n  logout\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "Register($email: String!, $password: String!, $firstName: String!, $lastName: String!, $dateOfBirth: String!, $streetAddress: String!, $postCode: String!, $city: String!, $country: String!)", "content": "{\n  register(email: $email, password: $password, firsName: $firstName, lastName: $lastName, dateOfBirth: $dateOfBirth, streetAddress: $streetAddress, postCode: $postCode, city: $city, country: $country)\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "UpdatePassword($oldPassword: String!, $newPassword: String!)", "content": "{\n  updatePassword(oldPassword: $oldPassword, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "SignIn($input: SignInInput!)", "content": "{\n    signIn(input: $input) @client {\n      user {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/graphql/mutations/index.ts", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "CreateDeathwish($input: CreateDeathwishInput!)", "content": "{\n    createDeathwish(input: $input) {\n      deathwish {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/graphql/mutations/index.ts", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "UpdateDeathwish($input: UpdateDeathwishInput!)", "content": "{\n    updateDeathwish(input: $input) {\n      deathwish {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/graphql/mutations/index.ts", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "DeleteDeathwish($input: DeleteDeathwishInput!)", "content": "{\n    deleteDeathwish(input: $input) {\n      deathwish {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/graphql/mutations/index.ts", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "SignIn($input: SignInInput!)", "content": "{\n  signIn(input: $input) @client {\n    user {\n      id\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "CreateDeathwish($input: CreateDeathwishInput!)", "content": "{\n  createDeathwish(input: $input) {\n    deathwish {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "UpdateDeathwish($input: UpdateDeathwishInput!)", "content": "{\n  updateDeathwish(input: $input) {\n    deathwish {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "DeleteDeathwish($input: DeleteDeathwishInput!)", "content": "{\n  deleteDeathwish(input: $input) {\n    deathwish {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "DeleteUser(\n        $input: DeleteUserInput!\n        $condition: ModelUserConditionInput\n    )", "content": "{\n        deleteUser(input: $input, condition: $condition) {\n            id\n            cognitoId\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAdminAddNewUser/src/deleteUser.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "CreateUser(\n        $input: CreateUserInput!\n        $condition: ModelUserConditionInput\n    )", "content": "{\n        createUser(input: $input, condition: $condition) {\n            id\n            username\n            cognitoId\n            tenantId\n            contact {\n                emailAddress\n            }\n            displayName\n            name\n            roles\n            dateOfBirth\n            riderResponsibility\n            disabled\n            createdAt\n            updatedAt\n            _version\n            _deleted\n            _lastChangedAt\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAdminAddNewUser/src/createUser.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "CreateTenant($input: CreateTenantInput!)", "content": "{\n        createTenant(input: $input) {\n            referenceIdentifier\n            id\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/createTenant.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "DeleteTenant(\n        $input: DeleteTenantInput!\n        $condition: ModelTenantConditionInput\n    )", "content": "{\n        deleteTenant(input: $input, condition: $condition) {\n            id\n            name\n            referenceIdentifier\n            admin {\n                id\n                username\n                cognitoId\n                tenantId\n                contact {\n                    name\n                    telephoneNumber\n                    mobileNumber\n                    emailAddress\n                    ward\n                    line1\n                    line2\n                    line3\n                    town\n                    county\n                    state\n                    country\n                    postcode\n                    what3words\n                }\n                displayName\n                name\n                roles\n                dateOfBirth\n                riderResponsibility\n                profilePictureThumbnailURL\n                profilePicture {\n                    bucket\n                    key\n                    region\n                }\n                profilePictureThumbnail {\n                    bucket\n                    key\n                    region\n                }\n                comments {\n                    nextToken\n                    startedAt\n                }\n                assignments {\n                    nextToken\n                    startedAt\n                }\n                createdTasks {\n                    nextToken\n                    startedAt\n                }\n                active\n                createdAt\n                updatedAt\n                _version\n                _deleted\n                _lastChangedAt\n            }\n            createdAt\n            updatedAt\n            _version\n            _deleted\n            _lastChangedAt\n            tenantAdminId\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/deleteTenant.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "DeleteUser(\n        $input: DeleteUserInput!\n        $condition: ModelUserConditionInput\n    )", "content": "{\n        deleteUser(input: $input, condition: $condition) {\n            id\n            username\n            cognitoId\n            tenantId\n            contact {\n                name\n                telephoneNumber\n                mobileNumber\n                emailAddress\n                ward\n                line1\n                line2\n                line3\n                town\n                county\n                state\n                country\n                postcode\n                what3words\n            }\n            displayName\n            name\n            roles\n            dateOfBirth\n            riderResponsibility\n            profilePictureThumbnailURL\n            profilePicture {\n                bucket\n                key\n                region\n            }\n            profilePictureThumbnail {\n                bucket\n                key\n                region\n            }\n            comments {\n                items {\n                    id\n                    parentId\n                    tenantId\n                    body\n                    visibility\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                    userCommentsId\n                    owner\n                }\n                nextToken\n                startedAt\n            }\n            assignments {\n                items {\n                    id\n                    tenantId\n                    role\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                }\n                nextToken\n                startedAt\n            }\n            createdTasks {\n                items {\n                    id\n                    tenantId\n                    timeOfCall\n                    timePickedUp\n                    timeDroppedOff\n                    timeCancelled\n                    timeRejected\n                    timeRiderHome\n                    pickUpLocationId\n                    dropOffLocationId\n                    riderResponsibility\n                    priority\n                    status\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                    userCreatedTasksId\n                }\n                nextToken\n                startedAt\n            }\n            active\n            createdAt\n            updatedAt\n            _version\n            _deleted\n            _lastChangedAt\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/deleteUser.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "CreateUser(\n        $input: CreateUserInput!\n        $condition: ModelUserConditionInput\n    )", "content": "{\n        createUser(input: $input, condition: $condition) {\n            id\n            username\n            cognitoId\n            tenantId\n            contact {\n                emailAddress\n            }\n            displayName\n            name\n            roles\n            disabled\n            createdAt\n            updatedAt\n            _version\n            _deleted\n            _lastChangedAt\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/createUser.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "UpdateTenant(\n        $input: UpdateTenantInput!\n        $condition: ModelTenantConditionInput\n    )", "content": "{\n        updateTenant(input: $input, condition: $condition) {\n            id\n            name\n            referenceIdentifier\n            admin {\n                id\n                username\n                cognitoId\n                tenantId\n                contact {\n                    name\n                    telephoneNumber\n                    mobileNumber\n                    emailAddress\n                    ward\n                    line1\n                    line2\n                    line3\n                    town\n                    county\n                    state\n                    country\n                    postcode\n                    what3words\n                }\n                displayName\n                name\n                roles\n                dateOfBirth\n                riderResponsibility\n                profilePictureThumbnailURL\n                profilePicture {\n                    bucket\n                    key\n                    region\n                }\n                profilePictureThumbnail {\n                    bucket\n                    key\n                    region\n                }\n                comments {\n                    nextToken\n                    startedAt\n                }\n                assignments {\n                    nextToken\n                    startedAt\n                }\n                createdTasks {\n                    nextToken\n                    startedAt\n                }\n                active\n                createdAt\n                updatedAt\n                _version\n                _deleted\n                _lastChangedAt\n            }\n            createdAt\n            updatedAt\n            _version\n            _deleted\n            _lastChangedAt\n            tenantAdminId\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/updateTenant.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "UpdateUser(\n        $input: UpdateUserInput!\n        $condition: ModelUserConditionInput\n    )", "content": "{\n        updateUser(input: $input, condition: $condition) {\n            id\n            cognitoId\n            tenantId\n            _version\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/updateUser.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "UpdateUser(\n        $input: UpdateUserInput!\n        $condition: ModelUserConditionInput\n    )", "content": "{\n        updateUser(input: $input, condition: $condition) {\n            id\n            username\n            cognitoId\n            tenantId\n            contact {\n                name\n                telephoneNumber\n                mobileNumber\n                emailAddress\n                ward\n                line1\n                line2\n                line3\n                town\n                county\n                state\n                country\n                postcode\n                what3words\n            }\n            displayName\n            name\n            roles\n            dateOfBirth\n            riderResponsibility\n            possibleRiderResponsibilities {\n                items {\n                    id\n                    tenantId\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                    userPossibleRiderResponsibilitiesId\n                    riderResponsibilityPossibleUsersId\n                }\n                nextToken\n                startedAt\n            }\n            profilePicture {\n                bucket\n                key\n                region\n            }\n            comments {\n                items {\n                    id\n                    parentId\n                    tenantId\n                    body\n                    visibility\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                    userCommentsId\n                    owner\n                }\n                nextToken\n                startedAt\n            }\n            assignments {\n                items {\n                    id\n                    tenantId\n                    role\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                }\n                nextToken\n                startedAt\n            }\n            createdTasks {\n                items {\n                    id\n                    tenantId\n                    timeOfCall\n                    timePickedUp\n                    timeDroppedOff\n                    timeCancelled\n                    timeRejected\n                    timeRiderHome\n                    pickUpLocationId\n                    dropOffLocationId\n                    establishmentLocationId\n                    riderResponsibility\n                    priority\n                    status\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                    userCreatedTasksId\n                }\n                nextToken\n                startedAt\n            }\n            disabled\n            createdAt\n            updatedAt\n            _version\n            _deleted\n            _lastChangedAt\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAdminChangeUserRoles/src/updateUserRoles.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "createTask ($status: String, $title: String!)", "content": "{\n  createTask(status: $status, title: $title) {\n    id\n    status\n    title\n  }\n}", "metadata": {"commit_hash": "14889afbfcb5ab2a27c2baac51dd35453797c1f1", "file": "react-fundamentals/3-react-graphql-apollo-solution/src/App.js", "repo": "udacity_live-codings-react-nanodegree"}}, {"type": "mutation", "name": "updateTask ($id: ID!, $status: String, $title: String)", "content": "{\n  updateTask(id: $id, status: $status, title: $title){\n    id\n    status\n    title\n  }\n}", "metadata": {"commit_hash": "14889afbfcb5ab2a27c2baac51dd35453797c1f1", "file": "react-fundamentals/3-react-graphql-apollo-solution/src/App.js", "repo": "udacity_live-codings-react-nanodegree"}}, {"type": "mutation", "name": "deleteTask ($id:ID!)", "content": "{\n  deleteTask(id:$id){\n    id\n  }\n}", "metadata": {"commit_hash": "14889afbfcb5ab2a27c2baac51dd35453797c1f1", "file": "react-fundamentals/3-react-graphql-apollo-solution/src/App.js", "repo": "udacity_live-codings-react-nanodegree"}}, {"type": "mutation", "name": "AddTodo($todoItem: String!)", "content": "{\n  createTodo(\n\t\tdata: {\n      todoItem: $todoItem\n    }\n  )\n  {data{\n    todoItem,\n    taskCompleted\n  }}\n}", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/todo-react-tailwind/src/App.js", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "DeleteTodo($id: ID!)", "content": "{\n      deleteTodo(revision: $id) {\n        data\n      }\n    }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/todo-react-tailwind/src/components/TaskList.js", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "UpdateQuery($id: ID!, $completed: Boolean!)", "content": "{\n      updateTodo(\n        revision: $id\n        data: { taskCompleted: $completed }\n      ) {\n        data {\n          todoItem\n          taskCompleted\n        }\n      }\n    }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/todo-react-tailwind/src/components/TaskList.js", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n      deleteProducts(revision: $id) {\n        data\n      }\n    }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/vuejs-marketplace/src/stores/products.js", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "CreateActiveUser($activeUsers: String!)", "content": "{\n    createActiveUsers(data: { activeUsers: $activeUsers }) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/next-chat-application/pages/chat.js", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "PublishActiveUsers($revision: ID!)", "content": "{\n    publishActiveUsers(revision: $revision) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/next-chat-application/pages/chat.js", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "($chats: String!, $time: DateTime!, $user: String!)", "content": "{\n    createChats(data: { chats: $chats, time: $time, user: $user }) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/next-chat-application/pages/chat.js", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "($revision: ID!)", "content": "{\n    publishChats(revision: $revision) {\n      data {\n        id\n        chats\n        time\n        user\n      }\n    }\n  }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/next-chat-application/pages/chat.js", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "CreateFormSubmission($revision: ID!, $data: JSON!)", "content": "{\n      formBuilder {\n        createFormSubmission(revision: $revision, data: $data) {\n          data {\n            id\n            data\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/react-marketingsite/src/components/Form.jsx", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "tokenVerify($token: String)", "content": "{\n    tokenVerify(token: $token) {\n      id\n      email\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/user.js", "repo": "craigmulligan_clementine"}}, {"type": "mutation", "name": "logout", "content": "{\n    userLogout\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/logout.js", "repo": "craigmulligan_clementine"}}, {"type": "mutation", "name": "CREATE_GRAPH(\n    $name: String!\n    $traceFilters: [TraceFilter]\n    $to: DateTime\n    $from: DateTime\n  )", "content": "{\n    graphCreate(name: $name) {\n      id\n      name\n      stats(to: $to, from: $from, traceFilters: $traceFilters) {\n        errorCount\n        errorPercent\n        count\n        duration\n      }\n    }\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/graph/index.js", "repo": "craigmulligan_clementine"}}, {"type": "mutation", "name": "createApiKey($graphId: ID!)", "content": "{\n    keyCreate(graphId: $graphId) {\n      id\n      secret\n      prefix\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/key/index.js", "repo": "craigmulligan_clementine"}}, {"type": "mutation", "name": "revokeApiKey($keyId: ID!)", "content": "{\n    keyRevoke(keyId: $keyId)\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/key/index.js", "repo": "craigmulligan_clementine"}}, {"type": "mutation", "name": "login($email: String!)", "content": "{\n    userLogin(email: $email)\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/auth/index.js", "repo": "craigmulligan_clementine"}}, {"type": "mutation", "name": "createServicesDetail($input: ServicesDetailCreateInput!)", "content": "{\n        createServicesDetail(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/service-detail.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "deleteServicesDetail($id: ID!)", "content": "{\n        deleteServicesDetail(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/service-detail.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "checkIn($id: ID!)", "content": "{\n        checkIn(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/booking.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "checkOut($id: ID!)", "content": "{\n        checkOut(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/booking.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "cancel($id: ID!)", "content": "{\n        cancel(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/booking.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "addBookingToBill($bill: BillId!, $booking: BookingCreateInput!)", "content": "{\n        addBookingToBill(bill: $bill, booking: $booking) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/bill.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "bookAndCheckIn(\n        $bookings: [BookAndCheckInCreateInput!]!\n        $bill: BillCreateInput!\n    )", "content": "{\n        bookAndCheckIn(bookings: $bookings, bill: $bill) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/bill.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createBill(\n        $bookings: [BookingCreateInput!]!\n        $bill: BillCreateInput!\n    )", "content": "{\n        createBill(bookings: $bookings, bill: $bill) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/bill.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "payTheBill($id: ID!)", "content": "{\n        payTheBill(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/bill.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "updateBillDiscount($input: BillUpdateDiscountInput!)", "content": "{\n        updateBillDiscount(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/bill.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createPrice($input: PriceCreateInput!)", "content": "{\n        createPrice(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/price.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createPriceVolatility($input: PriceVolatilityCreateInput!)", "content": "{\n        createPriceVolatility(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/priceVolatility.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createPatron($input: PatronCreateInput!)", "content": "{\n        createPatron(input: $input) {\n            id\n            identification\n            name\n            birthdate\n            email\n            gender\n            residence\n            domicile\n            phoneNumber\n            nationality\n            company\n            note\n            patronKind {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/patron.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "updatePatron($input: PatronUpdateInput!)", "content": "{\n        updatePatron(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/patron.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createEmployee($input: EmployeeCreateInput!)", "content": "{\n        createEmployee(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "updateEmployee($input: EmployeeUpdateInput!)", "content": "{\n        updateEmployee(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "resetPassword($id: ID!)", "content": "{\n        resetPassword(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "setIsActiveAccount($id: ID!, $isActive: Boolean!)", "content": "{\n        setIsActiveAccount(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "changePassword($password: String!, $newPassword: String!)", "content": "{\n        changePassword(password: $password, newPassword: $newPassword)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "userLogin($id: String!, $password: String!)", "content": "{\n        login(id: $id, password: $password) {\n            token\n            employee {\n                id\n                name\n                position {\n                    id\n                    name\n                    permissionCleaning\n                    permissionGetAccountingVoucher\n                    permissionGetMap\n                    permissionGetPatron\n                    permissionGetPrice\n                    permissionGetService\n                    permissionManageEmployee\n                    permissionManageRentingRoom\n                    permissionManageMap\n                    permissionManagePatron\n                    permissionManagePatronKind\n                    permissionManagePosition\n                    permissionManagePrice\n                    permissionManageService\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "userCheckLogin", "content": "{\n        checkLogin {\n            id\n            name\n            position {\n                id\n                name\n                permissionCleaning\n                permissionGetAccountingVoucher\n                permissionGetMap\n                permissionGetPatron\n                permissionGetPrice\n                permissionGetService\n                permissionManageEmployee\n                permissionManageRentingRoom\n                permissionManageMap\n                permissionManagePatron\n                permissionManagePatronKind\n                permissionManagePosition\n                permissionManagePrice\n                permissionManageService\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createPosition($input: PositionCreateInput!)", "content": "{\n        createPosition(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/position.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "updatePosition($input: PositionUpdateInput!)", "content": "{\n        updatePosition(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/position.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "deletePosition($id: ID!)", "content": "{\n        deletePosition(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/position.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "setIsActivePosition($id: ID!, $isActive: Boolean!)", "content": "{\n        setIsActivePosition(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/position.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "setIsActivePositionAndMoveEmployee(\n        $id: ID!\n        $newId: ID!\n        $isActive: Boolean!\n    )", "content": "{\n        setIsActivePositionAndMoveEmployee(\n            id: $id\n            newId: $newId\n            isActive: $isActive\n        )\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/position.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createService($input: ServiceCreateInput!)", "content": "{\n        createService(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/service.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "updateService($input: ServiceUpdateInput!)", "content": "{\n        updateService(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/service.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "deleteService($id: ID!)", "content": "{\n        deleteService(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/service.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "setIsActiveService($id: ID!, $isActive: Boolean!)", "content": "{\n        setIsActiveService(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/service.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createPatronKind($input: PatronKindCreateInput!)", "content": "{\n        createPatronKind(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/patronKind.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "updatePatronKind($input: PatronKindUpdateInput!)", "content": "{\n        updatePatronKind(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/patronKind.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createFloor($input: FloorCreateInput!)", "content": "{\n        createFloor(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/floor.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "updateFloor($input: FloorUpdateInput!)", "content": "{\n        updateFloor(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/floor.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "deleteFloor($id: ID!)", "content": "{\n        deleteFloor(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/floor.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "setIsActiveFloor($id: ID!, $isActive: Boolean!)", "content": "{\n        setIsActiveFloor(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/floor.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createRoom($input: RoomCreateInput!)", "content": "{\n        createRoom(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "updateRoom($input: RoomUpdateInput!)", "content": "{\n        updateRoom(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "deleteRoom($id: ID!)", "content": "{\n        deleteRoom(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "setIsActiveRoom($id: ID!, $isActive: Boolean!)", "content": "{\n        setIsActiveRoom(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "setIsCleanRoom($id: ID!, $isClean: Boolean!)", "content": "{\n        setIsCleanRoom(id: $id, isClean: $isClean)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "checkReceipt($id: ID!)", "content": "{\n        checkReceipt(id: $id) {\n            id\n            status\n            statusText\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/receipt.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createReceipt($input: ReceiptCreateInput!)", "content": "{\n        createReceipt(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/receipt.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "initializeAdminAccount($email: String!, $password: String!)", "content": "{\n        initializeAdminAccount(email: $email, password: $password)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/initialize.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "createRoomKind($input: RoomKindCreateInput!)", "content": "{\n        createRoomKind(input: $input) {\n            id\n            name\n            numberOfBeds\n            amountOfPeople\n            isActive\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room-kind.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "updateRoomKind($input: RoomKindUpdateInput!)", "content": "{\n        updateRoomKind(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room-kind.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "deleteRoomKind($id: ID!)", "content": "{\n        deleteRoomKind(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room-kind.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "setIsActiveRoomKind($id: ID!, $isActive: Boolean!)", "content": "{\n        setIsActiveRoomKind(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room-kind.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "$", "content": "{this.queryName()}${this.declareArgumentVariables()} {\n          ${this.queryName()}${this.argumentVariables()} {\n            ${this.scalarFields().map((field) => field.name).join(', ')}\n          }\n        }", "metadata": {"commit_hash": "5c2bcc5ed8229b1da33546fa5871153145a110e6", "file": "src/app/graphql_builder.ts", "repo": "launchscout_graphql-admin"}}, {"type": "mutation", "name": "addNewItem ($name: String!, $desc: String, $ownerId: ID!)", "content": "{\n    addItem(name: $name, desc: $desc, ownerId: $ownerId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "08a950231ef190e1d66641a34d1071e427c4a6b9", "file": "client/src/queries/item.queries.js", "repo": "theogravity_graphql-apollo-server-client-example"}}, {"type": "mutation", "name": "($username: String!, $email: String!, $password: String!)", "content": "{\n    createUser(username: $username, email: $email, password: $password) {\n      user {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "mutation", "name": "($username: String!, $password: String!)", "content": "{\n    tokenAuth(username: $username, password: $password) {\n      token\n      user {\n        id\n        username\n        firstName\n        lastName\n        email\n        avatar\n        bio\n        location\n        website\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "mutation", "name": "($content: String!, $userID: ID!, $postID: ID!)", "content": "{\n    createComment(content: $content, userId: $userID, postId: $postID) {\n      comment {\n        content\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "mutation", "name": "($postID: ID!, $userID: ID!)", "content": "{\n    updatePostLike(postId: $postID, userId: $userID) {\n      post {\n        id\n        title\n        likes {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "mutation", "name": "($commentID: ID!, $userID: ID!)", "content": "{\n    updateCommentLike(commentId: $commentID, userId: $userID) {\n      comment {\n        id\n        likes {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "mutation", "name": "(\n    $userID: ID!\n    $firstName: String!\n    $lastName: String!\n    $avatar: Upload!\n    $bio: String!\n    $location: String!\n    $website: String!\n  )", "content": "{\n    updateUserProfile(\n      userId: $userID\n      firstName: $firstName\n      lastName: $lastName\n      avatar: $avatar\n      bio: $bio\n      location: $location\n      website: $website\n    ) {\n      user {\n        id\n        username\n        firstName\n        lastName\n        email\n        avatar\n        bio\n        location\n        website\n        commentSet {\n          id\n          content\n          post {\n            id\n            title\n            slug\n          }\n          isApproved\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n          signIn(email: $email, password: $password) {\n            token\n            refreshToken\n            expiresAt\n          }\n        }", "metadata": {"commit_hash": "a33eec57a5308fc4435a3c8a388bce6c30cb13fe", "file": "src/core/apiclients/graphql/GraphQLAPIClient.ts", "repo": "orangeloops_public-ol-native-template"}}, {"type": "mutation", "name": "refreshTokens($token: String!)", "content": "{\n          refreshTokens(token: $token) {\n            token\n            refreshToken\n            expiresAt\n          }\n        }", "metadata": {"commit_hash": "a33eec57a5308fc4435a3c8a388bce6c30cb13fe", "file": "src/core/apiclients/graphql/GraphQLAPIClient.ts", "repo": "orangeloops_public-ol-native-template"}}, {"type": "mutation", "name": "createFlag($input: NewFlag!)", "content": "{\n        createFlag(input: $input) {\n            id\n            key\n            name\n            enabled\n            description\n            createdAt\n            __typename\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "updateFlag($id: ID!, $input: UpdateFlag!)", "content": "{\n        updateFlag(id: $id, input: $input) {\n            id\n            key\n            name\n            description\n            enabled\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "deleteFlag($id: ID!)", "content": "{\n        deleteFlag(id: $id)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "createVariant($flagId: ID!, $input: NewVariant!)", "content": "{\n        createVariant(flagId: $flagId, input: $input) {\n            id\n            description\n            value\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "updateVariant($id: ID!, $flagId: ID!, $input: UpdateVariant!)", "content": "{\n        updateVariant(id: $id, flagId: $flagId, input: $input) {\n            id\n            description\n            value\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "deleteVariant($id: ID!, $flagId: ID!)", "content": "{\n        deleteVariant(id: $id, flagId: $flagId)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "createFlagRule($flagId: ID!, $input: NewFlagRule!)", "content": "{\n        createFlagRule(flagId: $flagId, input: $input) {\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n            distributions {\n                percentage\n                variant {\n                    id\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "updateFlagRule($id: ID!, $flagId: ID!, $input: UpdateFlagRule!)", "content": "{\n        updateFlagRule(id: $id, flagId: $flagId, input: $input){\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n            distributions {\n                percentage\n                variant {\n                    id\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "deleteFlagRule($id: ID!, $flagId: ID!)", "content": "{\n        deleteFlagRule(id: $id, flagId: $flagId)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "toggleFlag($id: ID!, $input: UpdateFlag!)", "content": "{\n    updateFlag(id: $id, input: $input) {\n      id\n      enabled\n    }\n  }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagList/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "deleteUser($id: ID!)", "content": "{\n        deleteUser(id: $id)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/UserForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "deleteEvaluation($id: ID!)", "content": "{\n        deleteEvaluation(id: $id)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/UserForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "createSegment($input: NewSegment!)", "content": "{\n        createSegment(input: $input) {\n            id\n            name\n            description\n            rules {\n                id\n                constraints {\n                    id\n                    operation\n                    property\n                    values\n                }\n            }\n            createdAt\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "updateSegment($id: ID!, $input: UpdateSegment!)", "content": "{\n        updateSegment(id: $id, input: $input) {\n            id\n            name\n            description\n            rules {\n                id\n                constraints {\n                    id\n                    operation\n                    property\n                    values\n                }\n            }\n            createdAt\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "deleteSegment($id: ID!)", "content": "{\n        deleteSegment(id: $id)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "createSegmentRule($segmentId: ID!, $input: NewSegmentRule!)", "content": "{\n        createSegmentRule(segmentId: $segmentId, input: $input) {\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "updateSegmentRule($id: ID!, $segmentId: ID!, $input: UpdateSegmentRule!)", "content": "{\n        updateSegmentRule(id: $id, segmentId: $segmentId, input: $input) {\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "deleteSegmentRule($id: ID!, $segmentId: ID!)", "content": "{\n        deleteSegmentRule(id: $id, segmentId: $segmentId)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "CreateCost($data: CostInput!)", "content": "{\n    createCost(data: $data) {\n      ...Cost\n      ...Payer\n    }\n  }\n  ${Cost}\n  ${Payer}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "EditCost($costId: String!, $data: CostInput!)", "content": "{\n    editCost(costId: $costId, data: $data) {\n      ...Cost\n      ...Shares\n    }\n  }\n  ${Cost}\n  ${Shares}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "DestroyCost($costId: String!)", "content": "{\n    destroyCost(costId: $costId)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "GetSignedS3Url($data: S3SignedUrlInput!)", "content": "{\n    getSignedS3Url(data: $data) {\n      url\n      signedRequest\n    }\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/shared/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "CreateGroup($data: GroupInput!)", "content": "{\n    createGroup(data: $data) {\n      ...Group\n      users {\n        ...User\n      }\n      invites {\n        ...Invite\n      }\n    }\n  }\n  ${Group}\n  ${User}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/group/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "EditGroup($groupId: String!, $data: GroupInput!)", "content": "{\n    editGroup(groupId: $groupId, data: $data) {\n      ...Group\n    }\n  }\n  ${Group}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/group/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "Login($data: LoginInput!)", "content": "{\n    login(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "Register($data: RegisterInput!)", "content": "{\n    register(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "UpdateUser($data: UpdateInput!)", "content": "{\n    updateUser(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "ForgotPassword($email: String!)", "content": "{\n    forgotPassword(email: $email)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "ResetPassword($data: ResetPasswordInput!)", "content": "{\n    resetPassword(data: $data)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "CreateInvite($data: InviteInput!)", "content": "{\n    createInvite(data: $data) {\n      ...Invite\n    }\n  }\n  ${Invite}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/invite/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "DestroyInvite($inviteId: String!)", "content": "{\n    destroyInvite(inviteId: $inviteId)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/invite/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "CreateCost($data: CostInput!)", "content": "{\n    createCost(data: $data) {\n      ...Cost\n      ...Payer\n    }\n  }\n  ${CostFragmentDoc}\n  ${PayerFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "EditCost($costId: String!, $data: CostInput!)", "content": "{\n    editCost(costId: $costId, data: $data) {\n      ...Cost\n      ...Shares\n    }\n  }\n  ${CostFragmentDoc}\n  ${SharesFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "DestroyCost($costId: String!)", "content": "{\n    destroyCost(costId: $costId)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "CreateGroup($data: GroupInput!)", "content": "{\n    createGroup(data: $data) {\n      ...Group\n      users {\n        ...User\n      }\n      invites {\n        ...Invite\n      }\n    }\n  }\n  ${GroupFragmentDoc}\n  ${UserFragmentDoc}\n  ${InviteFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "EditGroup($groupId: String!, $data: GroupInput!)", "content": "{\n    editGroup(groupId: $groupId, data: $data) {\n      ...Group\n    }\n  }\n  ${GroupFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "CreateInvite($data: InviteInput!)", "content": "{\n    createInvite(data: $data) {\n      ...Invite\n    }\n  }\n  ${InviteFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "DestroyInvite($inviteId: String!)", "content": "{\n    destroyInvite(inviteId: $inviteId)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "GetSignedS3Url($data: S3SignedUrlInput!)", "content": "{\n    getSignedS3Url(data: $data) {\n      url\n      signedRequest\n    }\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "Login($data: LoginInput!)", "content": "{\n    login(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "Register($data: RegisterInput!)", "content": "{\n    register(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "UpdateUser($data: UpdateInput!)", "content": "{\n    updateUser(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "ForgotPassword($email: String!)", "content": "{\n    forgotPassword(email: $email)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "ResetPassword($data: ResetPasswordInput!)", "content": "{\n    resetPassword(data: $data)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "AddAddressToOrder($input: CreateAddressInput!)", "content": "{\n    setOrderShippingAddress(input: $input) {\n      ...ActiveOrder\n    }\n  }\n  ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/pages/checkout.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}}, {"type": "mutation", "name": "SetOrderCustomer($input: CreateCustomerInput!)", "content": "{\n    setCustomerForOrder(input: $input) {\n      ...ActiveOrder\n    }\n  }\n  ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/pages/checkout.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}}, {"type": "mutation", "name": "TransitionToArrangingPayment", "content": "{\n        transitionOrderToState(state: \"ArrangingPayment\") {\n            ...ActiveOrder\n        }\n    }\n    ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/pages/checkout.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}}, {"type": "mutation", "name": "AddPaymentToOrder($input: PaymentInput!)", "content": "{\n    addPaymentToOrder(input: $input) {\n      ...ActiveOrder\n    }\n  }\n  ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/pages/checkout.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}}, {"type": "mutation", "name": "AddItemToOrder($id: ID!, $quantity: Int!)", "content": "{\n    addItemToOrder(productVariantId: $id, quantity: $quantity) {\n      ...ActiveOrder\n    }\n  }\n  ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/templates/ProductDetail.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}}, {"type": "mutation", "name": "SetActiveOrderId($id: String!)", "content": "{\n    setActiveOrderId(id: $id) @client\n  }", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/templates/ProductDetail.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}}, {"type": "mutation", "name": "AdjustItemQuantity($id: ID!, $quantity: Int!)", "content": "{\n    adjustItemQuantity(orderItemId: $id, quantity: $quantity) {\n      ...ActiveOrder\n    }\n  }\n  ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/components/ShoppingCart/ShoppingCart.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}}, {"type": "mutation", "name": "CreateTag($input: TagInput!)", "content": "{\n  tag_Create(input: $input) {\n    id\n    name\n    createdAt\n    updatedAt\n    source\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "DeleteTag($id: ID!)", "content": "{\n  tag_Delete(id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "UpdateTag($input: TagUpdateInput!)", "content": "{\n  tag_Update(input: $input) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "addEmailToContact($contactId: ID!, $input: EmailInput!)", "content": "{\n  emailMergeToContact(contactId: $contactId, input: $input) {\n    ...Email\n    label\n  }\n}\n    ${EmailFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "addLocationToContact($contactId: ID!)", "content": "{\n  contact_AddNewLocation(contactId: $contactId) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "addPhoneToContact($contactId: ID!, $input: PhoneNumberInput!)", "content": "{\n  phoneNumberMergeToContact(contactId: $contactId, input: $input) {\n    ...PhoneNumber\n    label\n  }\n}\n    ${PhoneNumberFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "addTagToContact($input: ContactTagInput!)", "content": "{\n  contact_AddTagById(input: $input) {\n    id\n    tags {\n      ...Tag\n    }\n  }\n}\n    ${TagFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "archiveContact($id: ID!)", "content": "{\n  contact_Archive(contactId: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "attachOrganizationToContact($input: ContactOrganizationInput!)", "content": "{\n  contact_AddOrganizationById(input: $input) {\n    ...ContactPersonalDetails\n  }\n}\n    ${ContactPersonalDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "createContact($input: ContactInput!)", "content": "{\n  contact_Create(input: $input) {\n    ...ContactPersonalDetails\n    ...ContactCommunicationChannelsDetails\n  }\n}\n    ${ContactPersonalDetailsFragmentDoc}\n${ContactCommunicationChannelsDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "createContactJobRole($contactId: ID!, $input: JobRoleInput!)", "content": "{\n  jobRole_Create(contactId: $contactId, input: $input) {\n    ...JobRole\n    organization {\n      id\n      name\n    }\n  }\n}\n    ${JobRoleFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "createContactNote($contactId: ID!, $input: NoteInput!)", "content": "{\n  note_CreateForContact(contactId: $contactId, input: $input) {\n    ...NoteContent\n  }\n}\n    ${NoteContentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "CreatePhoneCallInteractionEvent($contactId: ID, $sentBy: String, $content: String, $contentType: String)", "content": "{\n  interactionEvent_Create(\n    event: {channel: \"VOICE\", sentTo: [{contactID: $contactId}], sentBy: [{email: $sentBy}], appSource: \"Openline\", content: $content, contentType: $contentType}\n  ) {\n    ...InteractionEventFragment\n  }\n}\n    ${InteractionEventFragmentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeContactJobRole($contactId: ID!, $roleId: ID!)", "content": "{\n  jobRole_Delete(contactId: $contactId, roleId: $roleId) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "mergeContacts($primaryContactId: ID!, $mergedContactIds: [ID!]!)", "content": "{\n  contact_Merge(\n    primaryContactId: $primaryContactId\n    mergedContactIds: $mergedContactIds\n  ) {\n    id\n    ...ContactPersonalDetails\n  }\n}\n    ${ContactPersonalDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeEmailFromContact($contactId: ID!, $id: ID!)", "content": "{\n  emailRemoveFromContactById(contactId: $contactId, id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeLocationFromContact($locationId: ID!, $contactId: ID!)", "content": "{\n  location_RemoveFromContact(locationId: $locationId, contactId: $contactId) {\n    id\n    locations {\n      ...LocationBaseDetails\n    }\n  }\n}\n    ${LocationBaseDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeOrganizationFromContact($input: ContactOrganizationInput!)", "content": "{\n  contact_RemoveOrganizationById(input: $input) {\n    ...ContactPersonalDetails\n  }\n}\n    ${ContactPersonalDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removePhoneNumberFromContact($contactId: ID!, $id: ID!)", "content": "{\n  phoneNumberRemoveFromContactById(contactId: $contactId, id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "RemoveTagFromContact($input: ContactTagInput!)", "content": "{\n  contact_RemoveTagById(input: $input) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateContactEmail($contactId: ID!, $input: EmailUpdateInput!)", "content": "{\n  emailUpdateInContact(contactId: $contactId, input: $input) {\n    primary\n    label\n    email\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateJobRole($contactId: ID!, $input: JobRoleUpdateInput!)", "content": "{\n  jobRole_Update(contactId: $contactId, input: $input) {\n    ...JobRole\n    organization {\n      id\n      name\n    }\n  }\n}\n    ${JobRoleFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateContactPersonalDetails($input: ContactUpdateInput!)", "content": "{\n  contact_Update(input: $input) {\n    id\n    title\n    firstName\n    lastName\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateContactPhoneNumber($contactId: ID!, $input: PhoneNumberUpdateInput!)", "content": "{\n  phoneNumberUpdateInContact(contactId: $contactId, input: $input) {\n    ...PhoneNumber\n    label\n  }\n}\n    ${PhoneNumberFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "addEmailToOrganization($organizationId: ID!, $input: EmailInput!)", "content": "{\n  emailMergeToOrganization(organizationId: $organizationId, input: $input) {\n    ...Email\n    label\n  }\n}\n    ${EmailFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "addLocationToOrganization($organzationId: ID!)", "content": "{\n  organization_AddNewLocation(organizationId: $organzationId) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "addPhoneToOrganization($organizationId: ID!, $input: PhoneNumberInput!)", "content": "{\n  phoneNumberMergeToOrganization(organizationId: $organizationId, input: $input) {\n    ...PhoneNumber\n    label\n  }\n}\n    ${PhoneNumberFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "addRelationshipToOrganization($organizationId: ID!, $relationship: OrganizationRelationship!)", "content": "{\n  organization_AddRelationship(\n    organizationId: $organizationId\n    relationship: $relationship\n  ) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "addOrganizationSubsidiary($input: LinkOrganizationsInput!)", "content": "{\n  organization_AddSubsidiary(input: $input) {\n    id\n    subsidiaries {\n      organization {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "createOrganization($input: OrganizationInput!)", "content": "{\n  organization_Create(input: $input) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "createOrganizationNote($organizationId: ID!, $input: NoteInput!)", "content": "{\n  note_CreateForOrganization(organizationId: $organizationId, input: $input) {\n    ...NoteContent\n  }\n}\n    ${NoteContentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "deleteOrganization($id: ID!)", "content": "{\n  organization_Delete(id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "mergeOrganizations($primaryOrganizationId: ID!, $mergedOrganizationIds: [ID!]!)", "content": "{\n  organization_Merge(\n    primaryOrganizationId: $primaryOrganizationId\n    mergedOrganizationIds: $mergedOrganizationIds\n  ) {\n    id\n    ...OrganizationDetails\n  }\n}\n    ${OrganizationDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeEmailFromOrganization($organizationId: ID!, $id: ID!)", "content": "{\n  emailRemoveFromOrganizationById(organizationId: $organizationId, id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "RemoveHealthIndicator($organizationId: ID!)", "content": "{\n  organization_RemoveHealthIndicator(organizationId: $organizationId) {\n    id\n    healthIndicator {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeLocationFromOrganization($locationId: ID!, $organizationId: ID!)", "content": "{\n  location_RemoveFromOrganization(\n    locationId: $locationId\n    organizationId: $organizationId\n  ) {\n    id\n    locations {\n      ...LocationBaseDetails\n    }\n  }\n}\n    ${LocationBaseDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeOrganizationOwner($organizationId: ID!)", "content": "{\n  organization_UnsetOwner(organizationId: $organizationId) {\n    id\n    owner {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeOrganizationRelationship($organizationId: ID!, $relationship: OrganizationRelationship!)", "content": "{\n  organization_RemoveRelationship(\n    organizationId: $organizationId\n    relationship: $relationship\n  ) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removePhoneNumberFromOrganization($organizationId: ID!, $id: ID!)", "content": "{\n  phoneNumberRemoveFromOrganizationById(organizationId: $organizationId, id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeStageFromOrganizationRelationship($organizationId: ID!, $relationship: OrganizationRelationship!)", "content": "{\n  organization_RemoveRelationshipStage(\n    organizationId: $organizationId\n    relationship: $relationship\n  ) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeOrganizationSubsidiary($organizationId: ID!, $subsidiaryId: ID!)", "content": "{\n  organization_RemoveSubsidiary(\n    organizationId: $organizationId\n    subsidiaryId: $subsidiaryId\n  ) {\n    id\n    subsidiaries {\n      organization {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "SetHealthIndicator($organizationId: ID!, $healthIndicatorId: ID!)", "content": "{\n  organization_SetHealthIndicator(\n    organizationId: $organizationId\n    healthIndicatorId: $healthIndicatorId\n  ) {\n    id\n    healthIndicator {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "setStageToOrganizationRelationship($organizationId: ID!, $relationship: OrganizationRelationship!, $stage: String!)", "content": "{\n  organization_SetRelationshipStage(\n    organizationId: $organizationId\n    relationship: $relationship\n    stage: $stage\n  ) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateOrganizationDescription($input: OrganizationUpdateInput!)", "content": "{\n  organization_Update(input: $input) {\n    id\n    description\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateOrganizationEmail($organizationId: ID!, $input: EmailUpdateInput!)", "content": "{\n  emailUpdateInOrganization(organizationId: $organizationId, input: $input) {\n    primary\n    label\n    id\n    email\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateOrganizationIndustry($input: OrganizationUpdateInput!)", "content": "{\n  organization_Update(input: $input) {\n    id\n    industry\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateOrganizationName($input: OrganizationUpdateInput!)", "content": "{\n  organization_Update(input: $input) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateOrganizationOwner($organizationId: ID!, $userId: ID!)", "content": "{\n  organization_SetOwner(organizationId: $organizationId, userId: $userId) {\n    id\n    owner {\n      id\n      firstName\n      lastName\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateOrganizationPhoneNumber($organizationId: ID!, $input: PhoneNumberUpdateInput!)", "content": "{\n  phoneNumberUpdateInOrganization(organizationId: $organizationId, input: $input) {\n    ...PhoneNumber\n    label\n    primary\n  }\n}\n    ${PhoneNumberFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateOrganizationWebsite($input: OrganizationUpdateInput!)", "content": "{\n  organization_Update(input: $input) {\n    id\n    website\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "createMeeting($meeting: MeetingInput!)", "content": "{\n  meeting_Create(meeting: $meeting) {\n    id\n    attendedBy {\n      ... on ContactParticipant {\n        contactParticipant {\n          id\n          name\n          firstName\n          lastName\n        }\n      }\n      ... on UserParticipant {\n        userParticipant {\n          id\n          lastName\n          firstName\n        }\n      }\n    }\n    conferenceUrl\n    meetingStartedAt: startedAt\n    meetingEndedAt: endedAt\n    name\n    agenda\n    agendaContentType\n    note {\n      id\n      html\n      appSource\n    }\n    createdBy {\n      ... on ContactParticipant {\n        contactParticipant {\n          id\n        }\n      }\n      ... on UserParticipant {\n        userParticipant {\n          id\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "linkMeetingAttachment($meetingId: ID!, $attachmentId: ID!)", "content": "{\n  meeting_LinkAttachment(meetingId: $meetingId, attachmentId: $attachmentId) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "meetingLinkAttachment($meetingId: ID!, $attachmentId: ID!)", "content": "{\n  meeting_LinkAttachment(meetingId: $meetingId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n      name\n      mimeType\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "linkMeetingAttendee($meetingId: ID!, $participant: MeetingParticipantInput!)", "content": "{\n  meeting_LinkAttendedBy(meetingId: $meetingId, participant: $participant) {\n    id\n    attendedBy {\n      ... on ContactParticipant {\n        contactParticipant {\n          id\n          name\n          firstName\n          lastName\n        }\n      }\n      ... on UserParticipant {\n        userParticipant {\n          id\n          lastName\n          firstName\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "meetingLinkRecording($meetingId: ID!, $attachmentId: ID!)", "content": "{\n  meeting_LinkRecording(meetingId: $meetingId, attachmentId: $attachmentId) {\n    id\n    attendedBy {\n      ... on UserParticipant {\n        userParticipant {\n          id\n          firstName\n          lastName\n        }\n      }\n      ... on ContactParticipant {\n        contactParticipant {\n          id\n          firstName\n          lastName\n          name\n        }\n      }\n    }\n    recording {\n      id\n    }\n    meetingStartedAt: startedAt\n    agenda\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "meetingUnlinkAttachment($meetingId: ID!, $attachmentId: ID!)", "content": "{\n  meeting_UnlinkAttachment(meetingId: $meetingId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n      name\n      mimeType\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "unlinkMeetingAttendee($meetingId: ID!, $participant: MeetingParticipantInput!)", "content": "{\n  meeting_UnlinkAttendedBy(meetingId: $meetingId, participant: $participant) {\n    id\n    attendedBy {\n      ... on ContactParticipant {\n        contactParticipant {\n          id\n          name\n          firstName\n          lastName\n        }\n      }\n      ... on UserParticipant {\n        userParticipant {\n          id\n          lastName\n          firstName\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "meetingUnlinkRecording($meetingId: ID!, $attachmentId: ID!)", "content": "{\n  meeting_UnlinkRecording(meetingId: $meetingId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "noteLinkAttachment($noteId: ID!, $attachmentId: ID!)", "content": "{\n  note_LinkAttachment(noteId: $noteId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n      name\n      mimeType\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "noteUnlinkAttachment($noteId: ID!, $attachmentId: ID!)", "content": "{\n  note_UnlinkAttachment(noteId: $noteId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n      name\n      mimeType\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "removeNote($id: ID!)", "content": "{\n  note_Delete(id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateLocation($input: LocationUpdateInput!)", "content": "{\n  location_Update(input: $input) {\n    locality\n    rawAddress\n    postalCode\n    street\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateMeeting($meetingId: ID!, $meetingInput: MeetingUpdateInput!)", "content": "{\n  meeting_Update(meetingId: $meetingId, meeting: $meetingInput) {\n    ...MeetingTimelineEventFragment\n  }\n}\n    ${MeetingTimelineEventFragmentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateNote($input: NoteUpdateInput!)", "content": "{\n  note_Update(input: $input) {\n    ...NoteContent\n  }\n}\n    ${NoteContentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "UserLogin($req: ApiReqUserLogin!)", "content": "{\n      user {\n        login(req: $req) {\n          session { token },\n          user { id, email, name }\n        }\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "mutation", "name": "UserOAuthLogin($req: ApiReqUserOAuthLogin!)", "content": "{\n      user {\n        oauthLogin(req: $req) {\n          session { token },\n          user { id, email, name }\n        }\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "mutation", "name": "UserRegister($req: ApiReqUserRegister!)", "content": "{\n      user {\n        register(req: $req) {\n          session { token },\n          user { id, email, name }\n        }\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "mutation", "name": "UserLogout", "content": "{\n      user{\n        logout\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "mutation", "name": "PadsCreate($req: ApiReqPadsCreate!)", "content": "{\n      pads {\n        create(req: $req) {\n          pad {\n            id\n            hash\n            title\n            status\n            creator\n            language\n            createTime\n            updateTime\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "mutation", "name": "requestResetPassword($email: String!)", "content": "{\n        requestResetPassword(email: $email){\n            message\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/RequestResetPassword/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "undoEmailChange($token: String!)", "content": "{\n        undoEmailChange(token: $token){\n            message,\n            token,\n            email\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/UndoEmailChange/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "changeNotificationPreference(\n\t\t$postParticipated: Boolean\n\t\t$postCreated: Boolean\n\t\t$newProposal: Boolean\n\t\t$ownProposal: Boolean\n\t)", "content": "{\n\t\tchangeNotificationPreference(\n\t\t\tnotificationPreferences: {\n\t\t\t\tpostParticipated: $postParticipated,\n\t\t\t\tpostCreated: $postCreated,\n\t\t\t\tnewProposal: $newProposal,\n\t\t\t\townProposal: $ownProposal\n\t\t\t}\n\t\t) {\n            message\n            token\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/NotificationSettings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "resetPassword($newPassword: String!, $userId: Int! $token: String!)", "content": "{\n        resetPassword(newPassword: $newPassword, userId: $userId, token: $token){\n            message\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/ResetPassword/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "changeUsername($username: String!, $password: String!)", "content": "{\n\t\tchangeUsername(username: $username, password: $password){\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "changeEmail($email: String!, $password: String!)", "content": "{\n\t\tchangeEmail(email: $email, password: $password) {\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "changePassword($oldPassword: String!, $newPassword: String!)", "content": "{\n\t\tchangePassword(oldPassword: $oldPassword, newPassword: $newPassword){\n\t\t\tmessage\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addressLinkStart($network: String!, $address: String!)", "content": "{\n\t\taddressLinkStart(network: $network, address: $address) {\n\t\t\tsign_message\n\t\t\tmessage\n\t\t\taddress_id\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addressLinkConfirm($address_id: Int!, $signature: String!)", "content": "{\n    \taddressLinkConfirm(address_id: $address_id, signature: $signature) {\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addressUnlink($address: String!)", "content": "{\n\t\taddressUnlink(address: $address) {\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "resendVerifyEmailToken", "content": "{\n\t\tresendVerifyEmailToken {\n\t\t\tmessage\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "setDefaultAddress($address: String!)", "content": "{\n\t\tsetDefaultAddress(address: $address) {\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "setCredentialsStart($address: String!)", "content": "{\n\t\tsetCredentialsStart(address: $address) {\n\t\t\tmessage\n\t\t\tsignMessage\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "setCredentialsConfirm($address: String!, $email: String, $signature: String!, $username: String!, $password: String!)", "content": "{\n\t\tsetCredentialsConfirm(address: $address, email: $email, signature: $signature, username: $username, password: $password) {\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "deleteAccount($password: String!)", "content": "{\n\t\tdeleteAccount(password: $password){\n\t\t\tmessage\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "verifyEmail($token: String!)", "content": "{\n        verifyEmail(token: $token){\n            message,\n            token\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/VerifyEmail/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "createPost($userId: Int! $content: String! $topicId: Int! $title: String!)", "content": "{\n        __typename\n        insert_posts(objects: {\n            author_id: $userId,\n            content: $content,\n            title: $title,\n            topic_id: $topicId,\n        }) {\n            affected_rows\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/CreatePost/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "createPoll($postId: Int! $blockEnd: Int!)", "content": "{\n        __typename\n        insert_poll(objects: {post_id: $postId, block_end: $blockEnd}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/CreatePost/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "EditComment ($id: uuid!, $content: String!)", "content": "{\n        update_comments(where: {id: {_eq: $id}}, _set: {content: $content}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Comment/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DeleteComment ($id: uuid!)", "content": "{\n        delete_comments(where: {id: {_eq: $id}}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Comment/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "SIGNUP($email: String, $password: String!, $username: String!)", "content": "{\n        signup(email: $email, password: $password, username:$username){\n            token\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Signup/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddressSignupStart($address: String!)", "content": "{\n        addressSignupStart(address: $address){\n            message\n            signMessage\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Signup/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddressSignupConfirm($network: String!, $address: String!, $signature: String!)", "content": "{\n        addressSignupConfirm(network: $network, address: $address, signature: $signature) {\n            token\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Signup/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "LOGOUT", "content": "{\n        logout {\n            message\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/MenuBar/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "createOptionPoll($postId: Int!, $question: String!, $options: String! $endAt: Int!)", "content": "{\n        __typename\n        insert_option_poll(objects: {post_id: $postId, question: $question, options: $options, end_at: $endAt}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/OptionPoll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddOptionPollVote ($optionPollId: Int!, $userId: Int!, $option: String!)", "content": "{\n        __typename\n        insert_option_poll_votes_one(object: {option_poll_id: $optionPollId, user_id: $userId, option: $option}) {\n            id\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/OptionPoll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DeleteOptionPollVote ($optionPollId: Int!, $userId: Int!)", "content": "{\n        delete_option_poll_votes(\n            where: {\n                _and: [\n                    {option_poll_id: {_eq: $optionPollId}},\n                    {user_id: {_eq: $userId}}\n                ]\n            }\n        ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/OptionPoll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddPostReaction ($postId: Int!, $userId: Int!, $reaction: bpchar!)", "content": "{\n        __typename\n        insert_post_reactions(objects: {post_id: $postId, user_id: $userId, reaction: $reaction}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddCommentReaction ($commentId: uuid!, $userId: Int!, $reaction: bpchar!)", "content": "{\n        __typename\n        insert_comment_reactions(objects: {comment_id: $commentId, user_id: $userId, reaction: $reaction}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DeletePostReaction ($postId: Int!, $userId: Int!, $reaction: bpchar!)", "content": "{\n        delete_post_reactions(where: {_and: [{post_id: {_eq: $postId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DeleteCommentReaction ($commentId: uuid!, $userId: Int!, $reaction: bpchar!)", "content": "{\n        delete_comment_reactions(where: {_and: [{comment_id: {_eq: $commentId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "EditPost ($id: Int!, $content: String!, $title: String!)", "content": "{\n        update_posts(where: {id: {_eq: $id}}, _set: {content: $content, title: $title}) {\n            affected_rows\n        }\n  }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddPostComment ($authorId: Int!, $content: String!, $postId: Int!)", "content": "{\n        __typename\n        insert_comments(objects: {author_id: $authorId, content:  $content, post_id: $postId}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddPollVote ($pollId: Int!, $userId: Int!, $vote: bpchar!)", "content": "{\n        __typename\n        insert_poll_votes_one(object: {poll_id: $pollId, user_id: $userId, vote: $vote}) {\n            id\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/Poll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DeleteVote ($pollId: Int!, $userId: Int!)", "content": "{\n        delete_poll_votes(\n            where: {\n                _and: [\n                    {poll_id: {_eq: $pollId}},\n                    {user_id: {_eq: $userId}}\n                ]\n            }\n        ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/Poll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "EditPoll ($id: Int!,  $blockEnd: Int!)", "content": "{\n        update_poll(where: {id: {_eq: $id}}, _set: {block_end: $blockEnd}) {\n            affected_rows\n        }\n  }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/Poll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "PostSubscribe ($postId: Int!)", "content": "{\n        postSubscribe(post_id: $postId) {\n            message\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/SubscriptionButton/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "PostUnsubscribe ($postId: Int!)", "content": "{\n        postUnsubscribe(post_id: $postId) {\n            message\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/SubscriptionButton/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "ReportContent ($network: String!, $type: String!, $content_id: String!, $reason: String!, $comments: String!)", "content": "{\n        reportContent(network: $network, type: $type, content_id: $content_id, reason: $reason, comments: $comments) {\n            message\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/ReportButton/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndProposalMutation (\n        $onchainProposalId:Int!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_proposal_id: $onchainProposalId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndTreasurySpendProposalMutation (\n        $onchainTreasuryProposalId:Int!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_treasury_proposal_id: $onchainTreasuryProposalId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndBountyMutation (\n        $onchainBountyId:Int!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_bounty_id: $onchainBountyId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndTechCommitteeProposalMutation (\n        $onchainTechCommitteeProposalId: Int!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_tech_committee_proposal_id: $onchainTechCommitteeProposalId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndTipMutation (\n        $onchainTipId:String!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_tip_id: $onchainTipId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndMotionMutation (\n        $onchainMotionProposalId:Int!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_motion_id: $onchainMotionProposalId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addReferendumIdToProposalMutation($proposalId: Int!, $referendumId: Int!)", "content": "{\n        update_onchain_links(\n            where: {\n                onchain_proposal_id: {_eq: $proposalId}\n            },\n            _set: {\n                onchain_referendum_id: $referendumId\n            }\n        ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addMotionIdToTreasuryProposalMutation($treasuryProposalId: Int!, $motionId: Int!)", "content": "{\n        update_onchain_links(\n            where: {\n                onchain_treasury_proposal_id: {_eq: $treasuryProposalId}\n            },\n            _set: {\n                onchain_motion_id: $motionId\n            }\n        ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addReferendumIdToMotionMutation($motionId: Int!, $referendumId: Int!)", "content": "{\n            update_onchain_links(\n                where: {\n                    onchain_motion_id: {_eq: $motionId}\n                },\n                _set: {\n                    onchain_referendum_id: $referendumId\n                }\n            ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "loginMutation($password: String!, $username: String!)", "content": "{\n        login(password: $password, username: $username) {\n            token\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndProposalMutation($onchainProposalId: Int!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_proposal_id: $onchainProposalId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndTreasurySpendProposalMutation($onchainTreasuryProposalId: Int!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_treasury_proposal_id: $onchainTreasuryProposalId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndBountyMutation($onchainBountyId: Int!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_bounty_id: $onchainBountyId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndTechCommitteeProposalMutation($onchainTechCommitteeProposalId: Int!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_tech_committee_proposal_id: $onchainTechCommitteeProposalId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndTipMutation($onchainTipId: String!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_tip_id: $onchainTipId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addPostAndMotionMutation($onchainMotionProposalId: Int!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_motion_id: $onchainMotionProposalId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addReferendumIdToProposalMutation($proposalId: Int!, $referendumId: Int!)", "content": "{\n  update_onchain_links(where: {onchain_proposal_id: {_eq: $proposalId}}, _set: {onchain_referendum_id: $referendumId}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addMotionIdToTreasuryProposalMutation($treasuryProposalId: Int!, $motionId: Int!)", "content": "{\n  update_onchain_links(where: {onchain_treasury_proposal_id: {_eq: $treasuryProposalId}}, _set: {onchain_motion_id: $motionId}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addReferendumIdToMotionMutation($motionId: Int!, $referendumId: Int!)", "content": "{\n  update_onchain_links(where: {onchain_motion_id: {_eq: $motionId}}, _set: {onchain_referendum_id: $referendumId}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "loginMutation($password: String!, $username: String!)", "content": "{\n  login(password: $password, username: $username) {\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "EditComment($id: uuid!, $content: String!)", "content": "{\n  update_comments(where: {id: {_eq: $id}}, _set: {content: $content}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DeleteComment($id: uuid!)", "content": "{\n  delete_comments(where: {id: {_eq: $id}}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "LOGIN($password: String!, $username: String!)", "content": "{\n  login(password: $password, username: $username) {\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddressLoginStart($address: String!)", "content": "{\n  addressLoginStart(address: $address) {\n    message\n    signMessage\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddressLogin($address: String!, $signature: String!)", "content": "{\n  addressLogin(address: $address, signature: $signature) {\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "LOGOUT", "content": "{\n  logout {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "createOptionPoll($postId: Int!, $question: String!, $options: String!, $endAt: Int!)", "content": "{\n  __typename\n  insert_option_poll(\n    objects: {post_id: $postId, question: $question, options: $options, end_at: $endAt}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddOptionPollVote($optionPollId: Int!, $userId: Int!, $option: String!)", "content": "{\n  __typename\n  insert_option_poll_votes_one(\n    object: {option_poll_id: $optionPollId, user_id: $userId, option: $option}\n  ) {\n    id\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DeleteOptionPollVote($optionPollId: Int!, $userId: Int!)", "content": "{\n  delete_option_poll_votes(\n    where: {_and: [{option_poll_id: {_eq: $optionPollId}}, {user_id: {_eq: $userId}}]}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddPollVote($pollId: Int!, $userId: Int!, $vote: bpchar!)", "content": "{\n  __typename\n  insert_poll_votes_one(object: {poll_id: $pollId, user_id: $userId, vote: $vote}) {\n    id\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DeleteVote($pollId: Int!, $userId: Int!)", "content": "{\n  delete_poll_votes(\n    where: {_and: [{poll_id: {_eq: $pollId}}, {user_id: {_eq: $userId}}]}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "EditPoll($id: Int!, $blockEnd: Int!)", "content": "{\n  update_poll(where: {id: {_eq: $id}}, _set: {block_end: $blockEnd}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "EditPost($id: Int!, $content: String!, $title: String!)", "content": "{\n  update_posts(where: {id: {_eq: $id}}, _set: {content: $content, title: $title}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddPostComment($authorId: Int!, $content: String!, $postId: Int!)", "content": "{\n  __typename\n  insert_comments(\n    objects: {author_id: $authorId, content: $content, post_id: $postId}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddPostReaction($postId: Int!, $userId: Int!, $reaction: bpchar!)", "content": "{\n  __typename\n  insert_post_reactions(\n    objects: {post_id: $postId, user_id: $userId, reaction: $reaction}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddCommentReaction($commentId: uuid!, $userId: Int!, $reaction: bpchar!)", "content": "{\n  __typename\n  insert_comment_reactions(\n    objects: {comment_id: $commentId, user_id: $userId, reaction: $reaction}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DeletePostReaction($postId: Int!, $userId: Int!, $reaction: bpchar!)", "content": "{\n  delete_post_reactions(\n    where: {_and: [{post_id: {_eq: $postId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DeleteCommentReaction($commentId: uuid!, $userId: Int!, $reaction: bpchar!)", "content": "{\n  delete_comment_reactions(\n    where: {_and: [{comment_id: {_eq: $commentId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "ReportContent($network: String!, $type: String!, $content_id: String!, $reason: String!, $comments: String!)", "content": "{\n  reportContent(\n    network: $network\n    type: $type\n    content_id: $content_id\n    reason: $reason\n    comments: $comments\n  ) {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "SIGNUP($email: String, $password: String!, $username: String!)", "content": "{\n  signup(email: $email, password: $password, username: $username) {\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddressSignupStart($address: String!)", "content": "{\n  addressSignupStart(address: $address) {\n    message\n    signMessage\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddressSignupConfirm($network: String!, $address: String!, $signature: String!)", "content": "{\n  addressSignupConfirm(\n    network: $network\n    address: $address\n    signature: $signature\n  ) {\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "PostSubscribe($postId: Int!)", "content": "{\n  postSubscribe(post_id: $postId) {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "PostUnsubscribe($postId: Int!)", "content": "{\n  postUnsubscribe(post_id: $postId) {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "createPost($userId: Int!, $content: String!, $topicId: Int!, $title: String!)", "content": "{\n  __typename\n  insert_posts(\n    objects: {author_id: $userId, content: $content, title: $title, topic_id: $topicId}\n  ) {\n    affected_rows\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "createPoll($postId: Int!, $blockEnd: Int!)", "content": "{\n  __typename\n  insert_poll(objects: {post_id: $postId, block_end: $blockEnd}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "changeNotificationPreference($postParticipated: Boolean, $postCreated: Boolean, $newProposal: Boolean, $ownProposal: Boolean)", "content": "{\n  changeNotificationPreference(\n    notificationPreferences: {postParticipated: $postParticipated, postCreated: $postCreated, newProposal: $newProposal, ownProposal: $ownProposal}\n  ) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "requestResetPassword($email: String!)", "content": "{\n  requestResetPassword(email: $email) {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "resetPassword($newPassword: String!, $userId: Int!, $token: String!)", "content": "{\n  resetPassword(newPassword: $newPassword, userId: $userId, token: $token) {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "changeUsername($username: String!, $password: String!)", "content": "{\n  changeUsername(username: $username, password: $password) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "changeEmail($email: String!, $password: String!)", "content": "{\n  changeEmail(email: $email, password: $password) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "changePassword($oldPassword: String!, $newPassword: String!)", "content": "{\n  changePassword(oldPassword: $oldPassword, newPassword: $newPassword) {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addressLinkStart($network: String!, $address: String!)", "content": "{\n  addressLinkStart(network: $network, address: $address) {\n    sign_message\n    message\n    address_id\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addressLinkConfirm($address_id: Int!, $signature: String!)", "content": "{\n  addressLinkConfirm(address_id: $address_id, signature: $signature) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addressUnlink($address: String!)", "content": "{\n  addressUnlink(address: $address) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "resendVerifyEmailToken", "content": "{\n  resendVerifyEmailToken {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "setDefaultAddress($address: String!)", "content": "{\n  setDefaultAddress(address: $address) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "setCredentialsStart($address: String!)", "content": "{\n  setCredentialsStart(address: $address) {\n    message\n    signMessage\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "setCredentialsConfirm($address: String!, $email: String, $signature: String!, $username: String!, $password: String!)", "content": "{\n  setCredentialsConfirm(\n    address: $address\n    email: $email\n    signature: $signature\n    username: $username\n    password: $password\n  ) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "deleteAccount($password: String!)", "content": "{\n  deleteAccount(password: $password) {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "undoEmailChange($token: String!)", "content": "{\n  undoEmailChange(token: $token) {\n    message\n    token\n    email\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "verifyEmail($token: String!)", "content": "{\n  verifyEmail(token: $token) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "LOGIN($password: String!, $username: String!)", "content": "{\n        login(password: $password, username:$username){\n            token\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Login/query.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddressLoginStart($address: String!)", "content": "{\n        addressLoginStart(address: $address){\n            message\n            signMessage\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Login/query.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddressLogin($address: String!, $signature: String!)", "content": "{\n        addressLogin(address: $address, signature:$signature){\n            token\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Login/query.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "StartExchange($id: String!)", "content": "{\n  startExchange(exchangeId: $id)\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "AddInstrument($exchangeId: String!, $instrumentType: String!, $name: String!, $positionLimit: Int!, $tickSize: Int!, $bondFixedPrice: Int!, $bondVolatility: Int!)", "content": "{\n  addInstrument(\n    exchangeId: $exchangeId\n    instrument: {instrumentType: $instrumentType, name: $name, positionLimit: $positionLimit, tickSizeMin: $tickSize, bondFixedPrice: $bondFixedPrice, bondVolatility: $bondVolatility}\n  ) {\n    id\n    name\n    tickSizeMin\n    positionLimit\n    bondFixedPrice\n    bondVolatility\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "EditInstrument($exchangeId: String!, $instrumentId: String!, $instrumentType: String!, $name: String!, $positionLimit: Int!, $tickSize: Int!, $bondFixedPrice: Int!, $bondVolatility: Int!)", "content": "{\n  editInstrument(\n    exchangeId: $exchangeId\n    instrumentId: $instrumentId\n    instrument: {instrumentType: $instrumentType, name: $name, positionLimit: $positionLimit, tickSizeMin: $tickSize, bondFixedPrice: $bondFixedPrice, bondVolatility: $bondVolatility}\n  ) {\n    id\n    name\n    tickSizeMin\n    positionLimit\n    bondFixedPrice\n    bondVolatility\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "DeleteInstrument($id: String!)", "content": "{\n  deleteInstrument(instrumentId: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "CreateInvite($exchangeId: String!, $userId: String!)", "content": "{\n  createInvite(createInviteInput: {exchangeId: $exchangeId, userId: $userId}) {\n    exchangeId\n    userId\n    id\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "GenerateApiKey($exchangeId: String!, $forceNew: Boolean!)", "content": "{\n  generateApiKey(exchangeId: $exchangeId, forceNew: $forceNew) {\n    apiKey\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "JoinExchange($id: String!)", "content": "{\n  joinExchange(id: $id) {\n    exchange {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "CreateTestExchange", "content": "{\n  createTestExchange {\n    id\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "CreateExchange($name: String!, $color: Int!)", "content": "{\n  createExchange(exchangeData: {exchangeColor: $color, exchangeName: $name}) {\n    id\n    name\n    colour\n    userPermissions {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "DeleteExchange($id: String!)", "content": "{\n  deleteExchange(exchangeId: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "EditExchange($id: String!, $name: String!, $color: Int!)", "content": "{\n  editExchange(\n    exchangeId: $id\n    exchangeData: {exchangeColor: $color, exchangeName: $name}\n  ) {\n    id\n    name\n    colour\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "CreateUser($name: String!, $email: String!, $profilePicUrl: String, $id: ID!)", "content": "{\n  createUser(\n    createUserInput: {name: $name, email: $email, profilePicUrl: $profilePicUrl, id: $id}\n  ) {\n    name\n    email\n    profilePicUrl\n    id\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "createMember($profile: ProfileCreateInput!)", "content": "{\n    members {\n      create(profile: $profile) {\n        id\n        profileSlug\n        firstName\n        lastName\n        email\n        canFeature\n        createdAt\n        lastUpdatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/member/create.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "updateMember($profile: ProfileUpdateInput!)", "content": "{\n    members {\n      member {\n        update(profile: $profile) {\n          id\n          profileSlug\n          firstName\n          lastName\n          email\n          canFeature\n          createdAt\n          lastUpdatedAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/member/edit.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "castVote($eventId: ID!, $vote: VoteInput!)", "content": "{\n    sessions {\n      voting(eventId: $eventId) {\n        cast(vote: $vote) {\n          id\n          notes\n          memberId\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/wi/2021/voting/vote.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "updateSession($sessionId: ID!, $session: SessionUpdateInput!)", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            title\n            status\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/shared/SessionPreview.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "castVote($eventId: ID!, $vote: VoteInput!)", "content": "{\n    sessions {\n      voting(eventId: $eventId) {\n        cast(vote: $vote) {\n          id\n          notes\n          memberId\n          vote\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Voting/Shared/SlimSession.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "updateSession($sessionId: ID!, $session: SessionUpdateInput!)", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            type\n            category\n            status\n            title\n            shortDescription\n            longDescription\n            primaryCategory\n            secondaryCategory\n            targetAudience\n            supportingArtifacts {\n              name\n              url\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Submit/Details.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "updateSession($sessionId: ID!, $session: SessionUpdateInput!)", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            type\n            category\n            status\n            title\n            shortDescription\n            longDescription\n            primaryCategory\n            secondaryCategory\n            targetAudience\n            supportingArtifacts {\n              name\n              url\n            }\n            prerequisites\n            agenda\n            takeaways\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Submit/AdditionalInfo.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "updateSession($sessionId: ID!, $session: SessionUpdateInput!)", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            type\n            category\n            status\n            title\n            shortDescription\n            longDescription\n            primaryCategory\n            secondaryCategory\n            targetAudience\n            supportingArtifacts {\n              name\n              url\n            }\n            prerequisites\n            agenda\n            takeaways\n            canRecord\n            mentorship\n            whyAreYou\n            otherComments\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Submit/Lastly.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "createSession($eventId: ID!, $session: SessionCreateInput!)", "content": "{\n    sessions {\n      create {\n        create(eventId: $eventId, session: $session) {\n          id\n          type\n          title\n          category\n          status\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Submit/Intro.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "updateSession($sessionId: ID!, $session: SessionUpdateInput!)", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            type\n            title\n            category\n            status\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Submit/Intro.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "updateSession($sessionId: ID!, $session: SessionUpdateInput!)", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            title\n            status\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Member/MySessions/Current.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "updateSession($sessionId: ID!, $session: SessionUpdateInput!)", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            title\n            status\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Member/SessionEdit/Details.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "updateMember($profile: ProfileUpdateInput!)", "content": "{\n    members {\n      member {\n        update(profile: $profile) {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/CounselorAgreement/Acknowledgment.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "UpdateProfile(\n    $primaryUsername: StringWithDisplay\n    $alternativeName: StringWithDisplay\n    $description: StringWithDisplay\n    $firstName: StringWithDisplay\n    $funTitle: StringWithDisplay\n    $identities: IdentitiesWithDisplay\n    $lastName: StringWithDisplay\n    $location: StringWithDisplay\n    $phoneNumbers: KeyValuesWithDisplay\n    $picture: StringWithDisplay\n    $pronouns: StringWithDisplay\n    $timezone: StringWithDisplay\n    $languages: KeyValuesWithDisplay\n    $tags: KeyValuesWithDisplay\n    $uris: KeyValuesWithDisplay\n    $custom1PrimaryEmail: StringWithDisplay\n    $custom2PrimaryEmail: StringWithDisplay\n    $accessInformationMozilliansorgDisplay: Display\n    $accessInformationLdapDisplay: Display\n    $staffInformationTitleDisplay: Display\n    $staffInformationOfficeLocationDisplay: Display\n    $primaryEmailDisplay: Display\n  )", "content": "{\n    profile(\n      update: {\n        primaryUsername: $primaryUsername\n        alternativeName: $alternativeName\n        description: $description\n        firstName: $firstName\n        funTitle: $funTitle\n        identities: $identities\n        lastName: $lastName\n        location: $location\n        phoneNumbers: $phoneNumbers\n        picture: $picture\n        pronouns: $pronouns\n        timezone: $timezone\n        languages: $languages\n        tags: $tags\n        uris: $uris\n        custom1PrimaryEmail: $custom1PrimaryEmail\n        custom2PrimaryEmail: $custom2PrimaryEmail\n        accessInformationMozilliansorgDisplay: $accessInformationMozilliansorgDisplay\n        accessInformationLdapDisplay: $accessInformationLdapDisplay\n        staffInformationTitleDisplay: $staffInformationTitleDisplay\n        staffInformationOfficeLocationDisplay: $staffInformationOfficeLocationDisplay\n        primaryEmailDisplay: $primaryEmailDisplay\n      }\n    ) {\n      uuid {\n        value\n        metadata {\n          display\n        }\n      }\n      primaryUsername {\n        value\n        metadata {\n          display\n        }\n      }\n      alternativeName {\n        value\n        metadata {\n          display\n        }\n      }\n      description {\n        value\n        metadata {\n          display\n        }\n      }\n      firstName {\n        value\n        metadata {\n          display\n        }\n      }\n      funTitle {\n        value\n        metadata {\n          display\n        }\n      }\n      identities {\n        githubIdV3 {\n          value\n          metadata {\n            display\n          }\n        }\n        bugzillaMozillaOrgId {\n          value\n          metadata {\n            display\n          }\n        }\n        bugzillaMozillaOrgPrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n        custom1PrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n        custom2PrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n      }\n      lastName {\n        value\n        metadata {\n          display\n        }\n      }\n      location {\n        value\n        metadata {\n          display\n        }\n      }\n      phoneNumbers {\n        values\n        metadata {\n          display\n        }\n      }\n      picture {\n        value\n        metadata {\n          display\n        }\n      }\n      primaryEmail {\n        value\n        metadata {\n          display\n        }\n      }\n      pronouns {\n        value\n        metadata {\n          display\n        }\n      }\n      timezone {\n        value\n        metadata {\n          display\n        }\n      }\n      uris {\n        values\n        metadata {\n          display\n        }\n      }\n      languages {\n        values\n        metadata {\n          display\n        }\n      }\n      tags {\n        values\n        metadata {\n          display\n        }\n      }\n      accessInformation {\n        mozilliansorg {\n          values\n          metadata {\n            display\n          }\n        }\n        ldap {\n          values\n          metadata {\n            display\n          }\n        }\n      }\n      staffInformation {\n        staff {\n          value\n          metadata {\n            display\n          }\n        }\n        team {\n          value\n          metadata {\n            display\n          }\n        }\n        title {\n          value\n          metadata {\n            display\n          }\n        }\n        officeLocation {\n          value\n          metadata {\n            display\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "22138104b54eba7aea621a502e3a1d9396d6a92d", "file": "src/queries/profile.js", "repo": "mozilla-iam_dino-park-front-end"}}, {"type": "mutation", "name": "cartCreate($input: CartInput)", "content": "{\n    cartCreate(input: $input) {\n      cart {\n        id\n        checkoutUrl\n      }\n      userErrors {\n        code\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "70998b427ad850d5beb881dce7d48219ca142e0d", "file": "helpers/cartHelpers.js", "repo": "Shopify_shopify-marketplaces-buyer-app"}}, {"type": "mutation", "name": "cartLinesAdd($lines: [CartLineInput!]!, $cartId: ID!)", "content": "{\n    cartLinesAdd(lines: $lines, cartId: $cartId) {\n      cart {\n        id\n        checkoutUrl\n      }\n      userErrors {\n        code\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "70998b427ad850d5beb881dce7d48219ca142e0d", "file": "helpers/cartHelpers.js", "repo": "Shopify_shopify-marketplaces-buyer-app"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      user {\n        ...UserResponse \n      }\n      jwt\n    }\n  }\n  ${authFragments.user}", "metadata": {"commit_hash": "5280d119af49c7634a832864d0ffc7c8e9f36e21", "file": "libs/schemas/src/lib/app/models/auth.model.ts", "repo": "Vrishtrix_fullstack-ts-boilerplate"}}, {"type": "mutation", "name": "signup($username: String!, $email: String!, $password: String!)", "content": "{\n    signup(username: $username, email: $email, password: $password) {\n      user {\n        ...UserResponse\n      }\n      jwt\n    }\n  }\n  ${authFragments.user}", "metadata": {"commit_hash": "5280d119af49c7634a832864d0ffc7c8e9f36e21", "file": "libs/schemas/src/lib/app/models/auth.model.ts", "repo": "Vrishtrix_fullstack-ts-boilerplate"}}, {"type": "mutation", "name": "Logout($token: String!)", "content": "{\n    logout(token: $token)\n  }", "metadata": {"commit_hash": "5280d119af49c7634a832864d0ffc7c8e9f36e21", "file": "libs/schemas/src/lib/app/models/auth.model.ts", "repo": "Vrishtrix_fullstack-ts-boilerplate"}}, {"type": "mutation", "name": "tweet($text: String!)", "content": "{\n      tweet(text: $text) {\n        id\n        createdAt\n        text\n      }\n    }", "metadata": {"commit_hash": "cdc3e383299f4b6e33541d9a79562fcfa59301a7", "file": "aws/Burning-Monk/Testing-Serverless-Apps/ch01-04-e2e-troubleshoot/__tests__/steps/when.js", "repo": "muratkeremozcan_books"}}, {"type": "mutation", "name": "follow($userId: ID!)", "content": "{\n      follow(userId: $userId)\n    }", "metadata": {"commit_hash": "cdc3e383299f4b6e33541d9a79562fcfa59301a7", "file": "aws/Burning-Monk/Testing-Serverless-Apps/ch01-04-e2e-troubleshoot/__tests__/steps/when.js", "repo": "muratkeremozcan_books"}}, {"type": "mutation", "name": "tweet($text: String!)", "content": "{\n      tweet(text: $text) {\n        id\n        createdAt\n        text\n      }\n    }", "metadata": {"commit_hash": "cdc3e383299f4b6e33541d9a79562fcfa59301a7", "file": "aws/Burning-Monk/Testing-Serverless-Apps/ch03-test-appsync/__tests__/steps/when.js", "repo": "muratkeremozcan_books"}}, {"type": "mutation", "name": "follow($userId: ID!)", "content": "{\n      follow(userId: $userId)\n    }", "metadata": {"commit_hash": "cdc3e383299f4b6e33541d9a79562fcfa59301a7", "file": "aws/Burning-Monk/Testing-Serverless-Apps/ch03-test-appsync/__tests__/steps/when.js", "repo": "muratkeremozcan_books"}}, {"type": "mutation", "name": "writeSettings($languageAddress: String!, $settings: String!)", "content": "{\n                languageWriteSettings(languageAddress: $languageAddress, settings: $settings)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/language/LanguageClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "languageApplyTemplateAndPublish(\n                $sourceLanguageHash: String!,\n                $templateData: String!,\n            )", "content": "{\n                languageApplyTemplateAndPublish(sourceLanguageHash: $sourceLanguageHash, templateData: $templateData) {\n                    name, address\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/language/LanguageClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "languagePublish(\n                $languagePath: String!,\n                $languageMeta: LanguageMetaInput!,\n            )", "content": "{\n                languagePublish(languagePath: $languagePath, languageMeta: $languageMeta) {\n                    ${LANGUAGE_META}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/language/LanguageClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "languageRemove(\n                $address: String!,\n            )", "content": "{\n                languageRemove(address: $address)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/language/LanguageClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectivePublishSnapshot($uuid: String!)", "content": "{\n                perspectivePublishSnapshot(uuid: $uuid)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectiveAdd($name: String!)", "content": "{\n                perspectiveAdd(name: $name) {\n                    ${PERSPECTIVE_HANDLE_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectiveUpdate($uuid: String!, $name: String!)", "content": "{\n                perspectiveUpdate(uuid: $uuid, name: $name) {\n                    ${PERSPECTIVE_HANDLE_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectiveRemove($uuid: String!)", "content": "{\n                perspectiveRemove(uuid: $uuid)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectiveAddLink($uuid: String!, $link: LinkInput!, $status: String)", "content": "{\n                perspectiveAddLink(link: $link, uuid: $uuid, status: $status) {\n                    ${LINK_EXPRESSION_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectiveAddLinks($uuid: String!, $links: [LinkInput!]!)", "content": "{\n                perspectiveAddLinks(links: $links, uuid: $uuid) {\n                    ${LINK_EXPRESSION_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectiveRemoveLinks($uuid: String!, $links: [LinkExpressionInput!]!)", "content": "{\n                perspectiveRemoveLinks(links: $links, uuid: $uuid) {\n                    ${LINK_EXPRESSION_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectiveLinkMutations($uuid: String!, $mutations: LinkMutations!)", "content": "{\n                perspectiveLinkMutations(mutations: $mutations, uuid: $uuid) {\n                    additions {\n                        ${LINK_EXPRESSION_FIELDS}\n                    }\n                    removals {\n                        ${LINK_EXPRESSION_FIELDS}\n                    }\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectiveAddLinkExpression($uuid: String!, $link: LinkExpressionInput!, $status: String)", "content": "{\n                perspectiveAddLinkExpression(link: $link, uuid: $uuid, status: $status) {\n                    ${LINK_EXPRESSION_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectiveUpdateLink(\n                $uuid: String!, \n                $newLink: LinkInput!\n                $oldLink: LinkExpressionInput!\n            )", "content": "{\n                perspectiveUpdateLink(\n                    newLink: $newLink, \n                    oldLink: $oldLink, \n                    uuid: $uuid\n                ) {\n                    ${LINK_EXPRESSION_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectiveRemoveLink($link: LinkExpressionInput!, $uuid: String!)", "content": "{\n                perspectiveRemoveLink(link: $link, uuid: $uuid)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "runtimeQuit", "content": "{ runtimeQuit }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "runtimeOpenLink($url: String!)", "content": "{\n                runtimeOpenLink(url: $url)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "addTrustedAgents($agents: [String!]!)", "content": "{\n                addTrustedAgents(agents: $agents)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "deleteTrustedAgents($agents: [String!]!)", "content": "{\n                deleteTrustedAgents(agents: $agents)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "runtimeAddKnownLinkLanguageTemplates($addresses: [String!]!)", "content": "{\n                runtimeAddKnownLinkLanguageTemplates(addresses: $addresses)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "runtimeRemoveKnownLinkLanguageTemplates($addresses: [String!]!)", "content": "{\n                runtimeRemoveKnownLinkLanguageTemplates(addresses: $addresses)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "runtimeAddFriends($dids: [String!]!)", "content": "{\n                runtimeAddFriends(dids: $dids)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "runtimeRemoveFriends($dids: [String!]!)", "content": "{\n                runtimeRemoveFriends(dids: $dids)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "runtimeHcAddAgentInfos($agentInfos: String!)", "content": "{\n                runtimeHcAddAgentInfos(agentInfos: $agentInfos)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "runtimeSetStatus($status: PerspectiveInput!)", "content": "{\n                runtimeSetStatus(status: $status)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "runtimeFriendSendMessage($did: String!, $message: PerspectiveInput!)", "content": "{\n                runtimeFriendSendMessage(did: $did, message: $message)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentGenerate(\n                $passphrase: String!\n            )", "content": "{\n                agentGenerate(passphrase: $passphrase) {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentImport(\n                $did: String!,\n                $didDocument: String!,\n                $keystore: String!,\n                $passphrase: String!\n            )", "content": "{\n                agentImport(did: $did, didDocument: $didDocument, keystore: $keystore, passphrase: $passphrase) {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentLock($passphrase: String!)", "content": "{\n                agentLock(passphrase: $passphrase) {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentUnlock($passphrase: String!)", "content": "{\n                agentUnlock(passphrase: $passphrase) {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentUpdatePublicPerspective($perspective: PerspectiveInput!)", "content": "{\n                agentUpdatePublicPerspective(perspective: $perspective) {\n                    ${AGENT_SUBITEMS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentUpdateDirectMessageLanguage($directMessageLanguage: String!)", "content": "{\n                agentUpdateDirectMessageLanguage(directMessageLanguage: $directMessageLanguage) {\n                    ${AGENT_SUBITEMS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentAddEntanglementProofs($proofs: [EntanglementProofInput!]!)", "content": "{\n                agentAddEntanglementProofs(proofs: $proofs) {\n                    ${ENTANGLEMENT_PROOF_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentDeleteEntanglementProofs($proofs: [EntanglementProofInput!]!)", "content": "{\n                agentDeleteEntanglementProofs(proofs: $proofs) {\n                    ${ENTANGLEMENT_PROOF_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentEntanglementProofPreFlight($deviceKey: String!, $deviceKeyType: String!)", "content": "{\n                agentEntanglementProofPreFlight(deviceKey: $deviceKey, deviceKeyType: $deviceKeyType) {\n                    ${ENTANGLEMENT_PROOF_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentRequestCapability($authInfo: AuthInfoInput!)", "content": "{\n            agentRequestCapability(authInfo: $authInfo)\n          }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentPermitCapability($auth: String!)", "content": "{\n            agentPermitCapability(auth: $auth)\n          }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentGenerateJwt($requestId: String!, $rand: String!)", "content": "{\n            agentGenerateJwt(requestId: $requestId, rand: $rand)\n          }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentRemoveApp($requestId: String!)", "content": "{\n                agentRemoveApp(requestId: $requestId) {\n                    ${Apps_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentRevokeToken($requestId: String!)", "content": "{\n                agentRevokeToken(requestId: $requestId) {\n                    ${Apps_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentSignMessage($message: String!)", "content": "{\n                agentSignMessage(message: $message) {\n                    ${AGENT_SIGNATURE_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "expressionCreate($content: String!, $languageAddress: String!)", "content": "{\n                expressionCreate(content: $content, languageAddress: $languageAddress)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/expression/ExpressionClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "expressionInteract($url: String!, $interactionCall: InteractionCall!)", "content": "{\n                expressionInteract(url: $url, interactionCall: $interactionCall)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/expression/ExpressionClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "neighbourhoodPublishFromPerspective(\n                $linkLanguage: String!,\n                $meta: PerspectiveInput!,\n                $perspectiveUUID: String!\n            )", "content": "{\n                neighbourhoodPublishFromPerspective(\n                    linkLanguage: $linkLanguage,\n                    meta: $meta,\n                    perspectiveUUID: $perspectiveUUID\n                )\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "neighbourhoodJoinFromUrl($url: String!)", "content": "{\n                neighbourhoodJoinFromUrl(url: $url) {\n                    uuid\n                    name\n                    sharedUrl\n                    state\n                    neighbourhood { \n                        linkLanguage \n                        meta { \n                            links\n                                {\n                                    author\n                                    timestamp\n                                    data { source, predicate, target }\n                                    proof { valid, invalid, signature, key }\n                                }  \n                        } \n                    }\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "neighbourhoodSetOnlineStatus(\n                $perspectiveUUID: String!,\n                $status: PerspectiveInput!\n            )", "content": "{\n                neighbourhoodSetOnlineStatus(\n                    perspectiveUUID: $perspectiveUUID,\n                    status: $status\n                )\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "neighbourhoodSetOnlineStatusU(\n                $perspectiveUUID: String!,\n                $status: PerspectiveUnsignedInput!\n            )", "content": "{\n                neighbourhoodSetOnlineStatusU(\n                    perspectiveUUID: $perspectiveUUID,\n                    status: $status\n                )\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "neighbourhoodSendSignal(\n                $perspectiveUUID: String!,\n                $remoteAgentDid: String!,\n                $payload: PerspectiveInput!\n            )", "content": "{\n                neighbourhoodSendSignal(\n                    perspectiveUUID: $perspectiveUUID,\n                    remoteAgentDid: $remoteAgentDid,\n                    payload: $payload\n                )\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "neighbourhoodSendSignalU(\n                $perspectiveUUID: String!,\n                $remoteAgentDid: String!,\n                $payload: PerspectiveUnsignedInput!\n            )", "content": "{\n                neighbourhoodSendSignalU(\n                    perspectiveUUID: $perspectiveUUID,\n                    remoteAgentDid: $remoteAgentDid,\n                    payload: $payload\n                )\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "neighbourhoodSendBroadcast(\n                $perspectiveUUID: String!,\n                $payload: PerspectiveInput!\n            )", "content": "{\n                neighbourhoodSendBroadcast(\n                    perspectiveUUID: $perspectiveUUID,\n                    payload: $payload\n                )\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "neighbourhoodSendBroadcastU(\n                $perspectiveUUID: String!,\n                $payload: PerspectiveUnsignedInput!\n            )", "content": "{\n                neighbourhoodSendBroadcastU(\n                    perspectiveUUID: $perspectiveUUID,\n                    payload: $payload\n                )\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "login($email: String!)", "content": "{\n    login(email: $email)\n  }", "metadata": {"commit_hash": "b665a32a216dd9c3439369fb59e665b3b8d05e74", "file": "frontend/src/pages/login.tsx", "repo": "zzy_actix-graphql-react"}}, {"type": "mutation", "name": "addOrRemoveFromCart($launchId: ID!)", "content": "{\n    addOrRemoveFromCart(id: $launchId) @client\n  }", "metadata": {"commit_hash": "b665a32a216dd9c3439369fb59e665b3b8d05e74", "file": "frontend/src/containers/action-button.tsx", "repo": "zzy_actix-graphql-react"}}, {"type": "mutation", "name": "cancel($launchId: ID!)", "content": "{\n    cancelTrip(launchId: $launchId) {\n      success\n      message\n      launches {\n        id\n        isBooked\n      }\n    }\n  }", "metadata": {"commit_hash": "b665a32a216dd9c3439369fb59e665b3b8d05e74", "file": "frontend/src/containers/action-button.tsx", "repo": "zzy_actix-graphql-react"}}, {"type": "mutation", "name": "BookTrips($launchIds: [ID]!)", "content": "{\n    bookTrips(launchIds: $launchIds) {\n      success\n      message\n      launches {\n        id\n        isBooked\n      }\n    }\n  }", "metadata": {"commit_hash": "b665a32a216dd9c3439369fb59e665b3b8d05e74", "file": "frontend/src/containers/book-trips.tsx", "repo": "zzy_actix-graphql-react"}}, {"type": "mutation", "name": "addPost($post: PostInput!)", "content": "{\n          addPost(post: $post) {\n            code\n            message\n          }\n        }", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/client-batching-query/__tests__/index.integration.spec.ts", "repo": "mrdulin_apollo-graphql-tutorial"}}, {"type": "mutation", "name": "addPost($post1: PostInput!, $post2: PostInput!)", "content": "{\n          addPost1: addPost(post: $post1) {\n            code\n            message\n          }\n          addPost2: addPost(post: $post2) {\n            code\n            message\n          }\n        }", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/client-batching-query/__tests__/index.integration.spec.ts", "repo": "mrdulin_apollo-graphql-tutorial"}}, {"type": "mutation", "name": "createPost($input: CreatePostInput!)", "content": "{\n    createPost(input: $input) {\n      code\n      message\n    }\n  }", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/graphql-authentication-and-authorization/__tests__/mutations.ts", "repo": "mrdulin_apollo-graphql-tutorial"}}, {"type": "mutation", "name": "createUser($input: CreateUserInput!)", "content": "{\n    createUser(input: $input) {\n      code\n      message\n    }\n  }", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/graphql-authentication-and-authorization/__tests__/mutations.ts", "repo": "mrdulin_apollo-graphql-tutorial"}}, {"type": "mutation", "name": "($file: Upload!)", "content": "{\n    singleUpload(file: $file) {\n      code\n      message\n    }\n  }", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/upload/__tests__/mutations.ts", "repo": "mrdulin_apollo-graphql-tutorial"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n          signIn(email: $email, password: $password) {\n            token\n            refreshToken\n            expiresAt\n          }\n        }", "metadata": {"commit_hash": "f03e1a5786db0afe7dcf0191ee25097b4385f90e", "file": "src/core/apiclients/graphql/GraphQLAPIClient.ts", "repo": "orangeloops_public-ol-web-template"}}, {"type": "mutation", "name": "refreshTokens($token: String!)", "content": "{\n          refreshTokens(token: $token) {\n            token\n            refreshToken\n            expiresAt\n          }\n        }", "metadata": {"commit_hash": "f03e1a5786db0afe7dcf0191ee25097b4385f90e", "file": "src/core/apiclients/graphql/GraphQLAPIClient.ts", "repo": "orangeloops_public-ol-web-template"}}, {"type": "mutation", "name": "ScheduleJob($repoSlug: String!, $branchName: String!, $commitSha: String!)", "content": "{\n    scheduleJob(repoSlug: $repoSlug, branchName: $branchName, commitSha: $commitSha) {\n      id\n    }\n  }", "metadata": {"commit_hash": "51ed43ee1f30cf3fbf441f2623f1bf6322c0486b", "file": "web/src/graphql/mutations/index.js", "repo": "spawnfest_elixirbench"}}, {"type": "mutation", "name": "name($data: ImageCreateInput!)", "content": "{\n\t\tcreateImage(data: $data) {\n\t\t\tid\n\t\t\timage {\n\t\t\t\tid\n\t\t\t\tfilename\n\t\t\t\tpublicUrl\n\t\t\t\tencoding\n\t\t\t\tpath\n\t\t\t}\n\t\t\tcaption\n\t\t}\n\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/dynamic-blocks/do-and-avoid.js", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "name($data: ImageCreateInput!)", "content": "{\n\t\tcreateImage(data: $data) {\n\t\t\tid\n\t\t\timage {\n\t\t\t\tid\n\t\t\t\tfilename\n\t\t\t\tpublicUrl\n\t\t\t\tencoding\n\t\t\t\tpath\n\t\t\t}\n\t\t\tcaption\n\t\t}\n\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/dynamic-blocks/image.js", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "($id: ID!, $data: PageUpdateInput!)", "content": "{\n\t\t\t\t\t\tupdatePage(where: { id: $id }, data: $data) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website-backend/migrations/migrate-content.ts", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "($id: ID!, $data: DraftPageUpdateInput!)", "content": "{\n\t\t\t\t\t\tupdateDraftPage(where: { id: $id }, data: $data) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website-backend/migrations/migrate-content.ts", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "($data: ImageCreateInput!)", "content": "{\n\t\t\tcreateImage(data: $data) {\n\t\t\t\tid\n\t\t\t\timage {\n\t\t\t\t\tpublicUrl\n\t\t\t\t}\n\t\t\t}\n\t\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website-backend/admin/component-blocks/image-field.tsx", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "($Filename: String! , $UserId: String! , $FileCategory: String! , $FileExtension: String! , $Files: String!)", "content": "{\n              upload(filename: $Filename , userId: $UserId , fileCategory:$FileCategory  , fileExtension: $FileExtension , file: $Files)\n            }", "metadata": {"commit_hash": "3ab3a6926645806009516173b8745d3f0b7fb185", "file": "libs/client/company-representative/feature/src/lib/company-representative-service/company-representative-service.service.ts", "repo": "COS-301_graduates"}}, {"type": "mutation", "name": "( $UserId: String! , $FileCategory: String!)", "content": "{\n            delete( userId: $UserId , fileCategory:$FileCategory )\n          }", "metadata": {"commit_hash": "3ab3a6926645806009516173b8745d3f0b7fb185", "file": "libs/client/storage/feature/src/lib/delete-all/delete-all.component.ts", "repo": "COS-301_graduates"}}, {"type": "mutation", "name": "( $UserId: String! , $FileCategory: String!)", "content": "{\n          delete( userId: $UserId , fileCategory:$FileCategory )\n        }", "metadata": {"commit_hash": "3ab3a6926645806009516173b8745d3f0b7fb185", "file": "libs/client/storage/feature/src/lib/main-storage-page/main-storage-page.component.ts", "repo": "COS-301_graduates"}}, {"type": "mutation", "name": "($Filename: String! , $UserId: String! , $FileCategory: String! , $FileExtension: String! , $Files: String!)", "content": "{\n            upload(filename: $Filename , userId: $UserId , fileCategory:$FileCategory  , fileExtension: $FileExtension , file: $Files)\n          }", "metadata": {"commit_hash": "3ab3a6926645806009516173b8745d3f0b7fb185", "file": "libs/client/storage/feature/src/lib/file-upload/file-upload.component.ts", "repo": "COS-301_graduates"}}, {"type": "mutation", "name": "signin($identity: String, $secret: String)", "content": "{\n        auth: authenticateUserWithPassword(email: $identity, password: $secret) {\n            user: item {\n                id\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/apollo-server-client/lib/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "authenticateUserWithPhoneAndPassword ($phone: String!, $password: String!)", "content": "{\n        obj: authenticateUserWithPhoneAndPassword(data: { phone: $phone, password: $password }) {\n            item {\n                id\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/apollo-server-client/lib/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "create$", "content": "{MODEL}($data: ${MODEL}CreateInput) {\n            obj: create${MODEL}(data: $data) ${fields}\n        }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/keystone/gen.gql.utils.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "update$", "content": "{MODEL}($id: ID!, $data: ${MODEL}UpdateInput) {\n            obj: update${MODEL}(id: $id, data: $data) ${fields}\n        }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/keystone/gen.gql.utils.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "delete$", "content": "{MODEL}($id: ID!) {\n            obj: delete${MODEL}(id: $id) ${fields}\n        }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/keystone/gen.gql.utils.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "authenticateUserWithPhoneAndPassword ($phone: String!, $password: String!)", "content": "{\n        obj: authenticateUserWithPhoneAndPassword(data: { phone: $phone, password: $password }) {\n            item {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/keystone/test.utils.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "sigin($identity: String, $secret: String)", "content": "{\n        auth: authenticateUserWithPassword(email: $identity, password: $secret) {\n            user: item {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/keystone/test.utils.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "create$", "content": "{MODEL}($data: ${inputName}) {\n             obj: ${mutationName}(data: $data) ${fields}\n         }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "create$", "content": "{MODELS}($data: [${inputName}]) {\n             objs: ${mutationName}(data: $data) ${fields}\n         }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "update$", "content": "{MODEL}($id: ID!, $data: ${inputName}) {\n             obj: ${mutationName}(id: $id, data: $data) ${fields}\n         }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "update$", "content": "{MODELS}($data: [${inputName}]) {\n             objs: ${mutationName}(data: $data) ${fields}\n         }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "delete$", "content": "{MODEL}($id: ID!) {\n            obj: delete${MODEL}(id: $id) ${fields}\n        }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "delete$", "content": "{MODELS}($ids: [ID!]) {\n            objs: delete${MODELS}(ids: $ids) ${fields}\n        }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "sendMessage ($data: SendMessageInput!)", "content": "{\n        result: sendMessage(data: $data) { status id isDuplicateMessage }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/notification/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "resendMessage ($data: ResendMessageInput!)", "content": "{\n        result: resendMessage(data: $data) { status id }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/notification/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "syncRemoteClient ($data: SyncRemoteClientInput!)", "content": "{\n        result: syncRemoteClient(data: $data) ${REMOTE_CLIENT_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/notification/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "disconnectUserFromRemoteClient ($data: DisconnectUserFromRemoteClientInput!)", "content": "{\n        result: disconnectUserFromRemoteClient(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/notification/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "setMessageStatus ($data: SetMessageStatusInput!)", "content": "{\n        result: setMessageStatus(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/notification/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "sendB2CAppPushMessage ($data: SendB2CAppPushMessageInput!)", "content": "{\n        result: sendB2CAppPushMessage(data: $data) { id status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/miniapp/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "registerResident ($data: RegisterResidentInput!)", "content": "{\n        result: registerResident(data: $data) ${RESIDENT_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/resident/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "registerServiceConsumer ($data: RegisterServiceConsumerInput!)", "content": "{\n        obj: registerServiceConsumer(data: $data) ${SERVICE_CONSUMER_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/resident/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "sendMessageToResidentScopes ($data: SendMessageToResidentScopesServiceInput!)", "content": "{\n        result: sendMessageToResidentScopes(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/resident/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "discoverServiceConsumers ($data: DiscoverServiceConsumersInput!)", "content": "{\n        result: discoverServiceConsumers(data: $data) { status createdServiceConsumersTotal }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/resident/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "createOnBoardingByType ($data: CreateOnBoardingInput!)", "content": "{\n        result: createOnBoardingByType(data: $data) {\n            id\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/onboarding/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "shareTicket($data: ShareTicketInput!)", "content": "{\n        obj: shareTicket(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "createBankAccountRequest ($data: CreateBankAccountRequestInput!)", "content": "{\n        result: createBankAccountRequest(data: $data) { status id }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/banking/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "importBankTransactions ($data: ImportBankTransactionsInput!)", "content": "{\n        result: importBankTransactions(data: $data) { bankAccount ${BANK_ACCOUNT_FIELDS} }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/banking/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "_internalDeleteMeterAndMeterReadings ($data: _internalDeleteMeterAndMeterReadingsInput!)", "content": "{\n        result: _internalDeleteMeterAndMeterReadings(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/meter/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "_internalSyncContactsWithResidentsForOrganization ($data: _internalSyncContactsWithResidentsForOrganizationInput!)", "content": "{\n        result: _internalSyncContactsWithResidentsForOrganization(data: $data) ${CONTACT_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/contact/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "registerNewUser($data: RegisterNewUserInput!)", "content": "{\n        user: registerNewUser(data: $data) { ${USER_FIELDS} }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "sigin($identity: String, $secret: String)", "content": "{\n        obj: authenticateUserWithPassword(email: $identity, password: $secret) {\n            item {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "changePasswordWithToken($data: ChangePasswordWithTokenInput!)", "content": "{\n        result: changePasswordWithToken(data: $data) { status, phone }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "authenticateUserWithPhoneAndPassword ($phone: String!, $password: String!)", "content": "{\n        obj: authenticateUserWithPhoneAndPassword(data: { phone: $phone, password: $password }) {\n            item {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "startPasswordRecovery($data: StartPasswordRecoveryInput!)", "content": "{\n        result: startPasswordRecovery(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "startConfirmPhoneAction($data: StartConfirmPhoneActionInput!)", "content": "{\n        result: startConfirmPhoneAction(data: $data) { token }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "resendConfirmPhoneActionSms($data: ResendConfirmPhoneActionSmsInput!)", "content": "{\n        result: resendConfirmPhoneActionSms(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "completeConfirmPhoneAction($data: CompleteConfirmPhoneActionInput!)", "content": "{\n        result: completeConfirmPhoneAction(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "signinResidentUser ($data: SigninResidentUserInput!)", "content": "{\n        result: signinResidentUser(data: $data) { user { id name }, token }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "changePhoneNumberResidentUser ($data: ChangePhoneNumberResidentUserInput!)", "content": "{\n        result: changePhoneNumberResidentUser(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "signinAsUser ($data: SigninAsUserInput!)", "content": "{\n        result: signinAsUser(data: $data) { user { id } token }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "resetUser ($data: ResetUserInput!)", "content": "{\n        result: resetUser(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "registerNewServiceUser ($data: RegisterNewServiceUserInput!)", "content": "{\n        result: registerNewServiceUser(data: $data) { id email password }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "sendMessageToSupport ($data: SendMessageToSupportInput!)", "content": "{\n        result: sendMessageToSupport(data: $data) { id, status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "authenticateUserWithPhoneAndPassword ($phone: String!, $password: String!)", "content": "{\n            obj: authenticateUserWithPhoneAndPassword(data: { phone: $phone, password: $password }) {\n                item {\n                    id\n                }\n                token\n            }\n        }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/schema/AuthenticateUserWithPhoneAndPasswordService.test.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "registerMultiPayment ($data: RegisterMultiPaymentInput!)", "content": "{\n        result: registerMultiPayment(data: $data) { dv multiPaymentId webViewUrl feeCalculationUrl directPaymentUrl getCardTokensUrl }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/acquiring/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "registerMultiPaymentForOneReceipt ($data: RegisterMultiPaymentForOneReceiptInput!)", "content": "{\n        result: registerMultiPaymentForOneReceipt(data: $data) { dv multiPaymentId webViewUrl feeCalculationUrl directPaymentUrl anonymousPaymentUrl }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/acquiring/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "registerMultiPaymentForVirtualReceipt ($data: RegisterMultiPaymentForVirtualReceiptInput!)", "content": "{\n        result: registerMultiPaymentForVirtualReceipt(data: $data) { dv multiPaymentId webViewUrl feeCalculationUrl directPaymentUrl anonymousPaymentUrl }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/acquiring/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "updateOrganizationById($id: ID!, $data: OrganizationUpdateInput!)", "content": "{\n        obj: updateOrganization(id: $id, data: $data) ${ORGANIZATION_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "registerNewOrganization($data: RegisterNewOrganizationInput!)", "content": "{\n        obj: registerNewOrganization(data: $data) ${ORGANIZATION_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "inviteNewOrganizationEmployee($data: InviteNewOrganizationEmployeeInput!)", "content": "{\n        obj: inviteNewOrganizationEmployee(data: $data) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "reInviteOrganizationEmployee($data: ReInviteOrganizationEmployeeInput!)", "content": "{\n        obj: reInviteOrganizationEmployee(data: $data) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "acceptOrRejectOrganizationInviteById($id: ID!, $data: AcceptOrRejectOrganizationInviteInput!)", "content": "{\n        obj: acceptOrRejectOrganizationInviteById(id: $id, data: $data) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "acceptOrRejectOrganizationInviteByCode($inviteCode: String!, $data: AcceptOrRejectOrganizationInviteInput!)", "content": "{\n        obj: acceptOrRejectOrganizationInviteByCode(inviteCode: $inviteCode, data: $data) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "resetOrganization ($data: ResetOrganizationInput!)", "content": "{\n        result: resetOrganization(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "_internalScheduleTaskByName ($data: _internalScheduleTaskByNameInput!)", "content": "{\n        result: _internalScheduleTaskByName(data: $data) { id }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/common/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "registerBillingReceipts ($data: RegisterBillingReceiptsInput!)", "content": "{\n        result: registerBillingReceipts(data: $data) ${BILLING_RECEIPT_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/billing/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "sendNewReceiptMessagesToResidentScopes ($data: SendNewReceiptMessagesToResidentScopesInput!)", "content": "{\n        result: sendNewReceiptMessagesToResidentScopes(data: $data) { \n            status \n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/billing/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "signinAsUser ($data: SigninAsUserInput!)", "content": "{\n            result: signinAsUser(data: $data) { user { id } token }\n        }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/admin-ui/index.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "signin($email: String, $password: String)", "content": "{\n        authenticateUserWithPassword(email: $email, password: $password) {\n            item {\n                ${userFragment}\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/next/auth.jsx", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "UPDATE_CLIENT($id: ID!, $name: String!, $email: String!)", "content": "{\n    updateClient(input: { id: $id, name: $name, email: $email }) {\n      id\n      name\n      email\n    }\n  }", "metadata": {"commit_hash": "c0f781406d532b0c1dba200a8512992571c23a79", "file": "packages/web/src/components/ClientEdit.js", "repo": "VitorLuizC_dev-demands"}}, {"type": "mutation", "name": "sign_up(\n        $email: String!\n        $name: String!\n        $password: String!\n        $admin: Boolean!\n      )", "content": "{\n        sign_up(\n          email: $email\n          name: $name\n          password: $password\n          admin: $admin\n        ) {\n          email\n          name\n          admin\n        }\n      }", "metadata": {"commit_hash": "dcbf455cda4fa1257c7ac458a41b1c86232ffa65", "file": "pages/sign_up.tsx", "repo": "PabloSzx_Next-Now-Apollo-TypeGraphQL-TypeORM-Passport"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n        login(email: $email, password: $password) {\n          email\n          name\n          admin\n        }\n      }", "metadata": {"commit_hash": "dcbf455cda4fa1257c7ac458a41b1c86232ffa65", "file": "pages/login.tsx", "repo": "PabloSzx_Next-Now-Apollo-TypeGraphQL-TypeORM-Passport"}}, {"type": "mutation", "name": "remove$", "content": "{resource}($id: ID!) {\n                    remove${resource}(id: $id)\n                }", "metadata": {"commit_hash": "972973ec52aa9e555621581361412f2c10d1ca2f", "file": "src/dataProvider/graphql.js", "repo": "myshine112_react-admin-with-material-ui-next"}}, {"type": "mutation", "name": "switchActiveStandby($input: switchActiveStandbyInput!)", "content": "{\n    switchActiveStandby(input: $input) {\n      id\n      remoteId\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/mutation/SwitchActiveStandby.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "addSshKey($input: AddSshKeyInput!)", "content": "{\n    addSshKey(input: $input) {\n      id\n      name\n      keyType\n      created\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/mutation/AddSshKey.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "deleteSshKeyById($input: DeleteSshKeyByIdInput!)", "content": "{\n    deleteSshKeyById(input: $input)\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/mutation/DeleteSshKeyById.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "($input: DeleteEnvironmentInput!)", "content": "{\n    deleteEnvironment(input: $input)\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/mutation/DeleteEnvironment.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "deployEnvironmentLatest($environmentId: Int!)", "content": "{\n    deployEnvironmentLatest(input: { environment: { id: $environmentId } })\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/DeployLatest/index.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "cancelDeployment($deploymentId: Int!)", "content": "{\n    cancelDeployment(input: { deployment: { id: $deploymentId } })\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/CancelDeployment/index.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "taskDrushSqlSync($sourceEnvironment: Int!, $destinationEnvironment: Int!)", "content": "{\n    taskDrushSqlSync(sourceEnvironment: $sourceEnvironment, destinationEnvironment: $destinationEnvironment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/DrushSqlSync.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "taskDrushCron($environment: Int!)", "content": "{\n    taskDrushCron(environment: $environment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/DrushCron.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "taskDrushCacheClear($environment: Int!)", "content": "{\n    taskDrushCacheClear(environment: $environment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/DrushCacheClear.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "taskDrushRsyncFiles($sourceEnvironment: Int!, $destinationEnvironment: Int!)", "content": "{\n    taskDrushRsyncFiles(sourceEnvironment: $sourceEnvironment, destinationEnvironment: $destinationEnvironment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/DrushRsyncFiles.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "taskDrushArchiveDump($environment: Int!)", "content": "{\n    taskDrushArchiveDump(environment: $environment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/DrushArchiveDump.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "taskDrushUserLogin($environment: Int!)", "content": "{\n    taskDrushUserLogin(environment: $environment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/DrushUserLogin.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "taskDrushSqlDump($environment: Int!)", "content": "{\n    taskDrushSqlDump(environment: $environment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/DrushSqlDump.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "invokeRegisteredTask(\n    $environment: Int!\n    $taskRegistration: Int!\n    $argumentValues: [AdvancedTaskDefinitionArgumentValueInput]\n  )", "content": "{\n    invokeRegisteredTask(\n      environment: $environment\n      advancedTaskDefinition: $taskRegistration\n      argumentValues: $argumentValues\n    ) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/InvokeRegisteredTask.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "addRestore($input: AddRestoreInput!)", "content": "{\n    addRestore(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/RestoreButton/Prepare.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "AddBook($name: String!, $genre: String!, $authorId: ID!)", "content": "{\n        addBook(name: $name, genre: $genre, authorId: $authorId){\n            name\n            id\n        }\n    }", "metadata": {"commit_hash": "b1d1012ce4f4f5b16ea44e5d3e55882295026518", "file": "client/src/queries/queries.js", "repo": "Mironshoh1603_GraphQlBooks"}}, {"type": "mutation", "name": "LoginMutation($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "f787b31d5bf36dc74ea6030ce1982f331c8cf362", "file": "src/screens/Login/Login.js", "repo": "vctormb_react-todolist-apollo-prisma"}}, {"type": "mutation", "name": "CreateTodoMutation($description: String!)", "content": "{\n    createTodo(description: $description) {\n      id\n      description\n      isDone\n    }\n  }", "metadata": {"commit_hash": "f787b31d5bf36dc74ea6030ce1982f331c8cf362", "file": "src/screens/Todo/TodoInput.js", "repo": "vctormb_react-todolist-apollo-prisma"}}, {"type": "mutation", "name": "MarkTodoAsDone($todoId: String!, $isDone: Boolean!)", "content": "{\n    markTodoAsDone(todoId: $todoId, isDone: $isDone) {\n      id\n      isDone\n    }\n  }", "metadata": {"commit_hash": "f787b31d5bf36dc74ea6030ce1982f331c8cf362", "file": "src/screens/Todo/TodoItem.js", "repo": "vctormb_react-todolist-apollo-prisma"}}, {"type": "mutation", "name": "DeleteTodoMutation($todoIds: [String!])", "content": "{\n    deleteManyTodoes(todoIds: $todoIds) {\n      count\n    }\n  }", "metadata": {"commit_hash": "f787b31d5bf36dc74ea6030ce1982f331c8cf362", "file": "src/screens/Todo/TodoItem.js", "repo": "vctormb_react-todolist-apollo-prisma"}}, {"type": "mutation", "name": "modifyGame($id: Int!, $win: Boolean!, $activities: [Int!])", "content": "{\n    modifyGame(input: {params: {\n      id: $id\n      win: $win\n      activities: $activities\n      }\n     }\n    )\n    {\n           game {\n             id\n             win\n             level\n           }\n           success\n         }\n  }", "metadata": {"commit_hash": "ce63327cdc13d8d5323b232a3f9891fb949a0f52", "file": "src/Views/BingoView.js", "repo": "Swolify_swolify-fe"}}, {"type": "mutation", "name": "createGame($userId: ID!, $categories: [String!], $level: String!)", "content": "{\n      createGame(input: {params: {\n        userId: $userId\n        categories: $categories\n        level: $level\n        }\n       }\n      ){\n        game {\n          id\n          userId\n          gameActivities {\n            id\n            activity {\n              name\n              description\n              duration\n              video\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "ce63327cdc13d8d5323b232a3f9891fb949a0f52", "file": "src/Components/GameSelectionForm.js", "repo": "Swolify_swolify-fe"}}, {"type": "mutation", "name": "ForgotPassword($email:String!)", "content": "{\n  forgotPassword(email:$email){\n    result\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/ForgotPassword/ForgotPassword.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "Login($facebookId:String,$email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(facebookId:$facebookId,email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     name\n     email\n     phone\n   }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/CreateAccount/CreateAccount.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "ReviewOrder(\n  $orderId:String!,\n  $rating:Int!,\n  $description:String\n)", "content": "{\n  reviewOrder(reviewInput:{\n    orderId:$orderId,\n    rating:$rating,\n    description:$description\n  }){\n    _id\n    order_id\n    review{\n      _id\n      rating\n      description\n    }\n    createdAt\n    updatedAt\n    is_active\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/RateAndReview/RateAndReview.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!)", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone}){\n          _id\n          name\n          phone\n        }\n      }", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Profile/Profile.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "ChangePassword($oldPassword:String!,$newPassword:String!)", "content": "{\n  changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Profile/ChangePassword.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "EditAddress($addressInput:AddressInput!)", "content": "{\n  editAddress(addressInput:$addressInput){\n    _id\n    label\n    delivery_address\n    details\n    longitude\n    latitude\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/EditAddress/EditAddress.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "Login($facebookId:String,$email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(facebookId:$facebookId,email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     name\n     email\n     phone\n   }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Login/Login.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "CreateUser($facebookId:String,$phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)", "content": "{\n      createUser(userInput:{\n          facebookId:$facebookId,\n          phone:$phone,\n          email:$email,\n          password:$password,\n          name:$name,\n          notificationToken:$notificationToken,\n          appleId:$appleId\n      }){\n          userId\n          token\n          tokenExpiration\n          name\n          email\n          phone\n          notificationToken\n      }\n    }", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Register/Register.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n  selectAddress(id:$id){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/CartAddress/CartAddress.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "DeleteAddress($id:ID!)", "content": "{\n  deleteAddress(id:$id){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Addresses/Addresses.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "PushToken($token:String!)", "content": "{\n  pushToken(token:$token){\n    _id\n    notificationToken\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Settings/Settings.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "UpdateNotificationStatus($offerNotification:Boolean!,$orderNotification:Boolean!)", "content": "{\n      updateNotificationStatus(offerNotification:$offerNotification,orderNotification:$orderNotification){\n        _id\n        notificationToken\n        is_order_notification\n        is_offer_notification\n      }\n    }", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Settings/Settings.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "CreateAddress($addressInput:AddressInput!)", "content": "{\n  createAddress(addressInput:$addressInput){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/NewAddress/NewAddress.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "Coupon($coupon:String!)", "content": "{\n  coupon(coupon:$coupon){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Cart/Cart.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "PlaceOrder($orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$address:AddressInput!)", "content": "{\n  placeOrder(orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,address:$address) {\n    _id\n    order_id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    user {\n      _id\n      phone\n      email\n    }\n    rider{\n      _id\n    }\n    payment_status\n    payment_method\n    paid_amount\n    order_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Cart/Cart.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "UpdateCartItemQuantity($command: InputChangeCartItemQuantityType!)", "content": "{\n    changeCartItemQuantity(command: $command) {\n      itemsQuantity\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/updateQuantity/updateQuantityMutation.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "mutation", "name": "RemoveFromCart($command: InputRemoveItemType!)", "content": "{\n    removeCartItem(command: $command) {\n      itemsCount\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/removeFromCart/removeFromCartMutation.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "mutation", "name": "AddItem($command: InputAddItemType!)", "content": "{\n    addItem(command: $command) {\n      name,\n      itemsQuantity\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/addToCart/addToCartMutation.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "mutation", "name": "ClearCart($command: InputClearCartType!)", "content": "{\n    clearCart(command: $command) {\n      itemsCount\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/clearCart/clearCartMutation.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "mutation", "name": "AddOrUpdateCartShpment($command: InputAddOrUpdateCartShipmentType!)", "content": "{\n    addOrUpdateCartShipment(command: $command) {\n      name\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/addOrUpdateCartShipment/addOrUpdateCartShipmentMutation.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "mutation", "name": "PlaceOrder($command: InputCreateOrderFromCartType!)", "content": "{\n    createOrderFromCart(command: $command) {\n      id\n      number\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/placeOrder/placeOrderMutation.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "mutation", "name": "AddOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!)", "content": "{\n    addOrUpdateCartPayment(command: $command) {\n      name\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/addOrUpdateCartPayment/addOrUpdateCartPaymentMutation.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "mutation", "name": "createUser( $FirstName: String! , $LastName: String! , $email: String!  , $role : String!)", "content": "{\n    createUser(input:{ FirstName: $FirstName, LastName : $LastName, email: $email , role :$role}) {\n      id\n      FirstName\n      LastName\n      email\n      role\n    }\n  }", "metadata": {"commit_hash": "09dc9553d02ee66df50dd5df12f0d4aef0b324c4", "file": "client/src/queries/users.js", "repo": "mPooja-15_graphql-api-backend"}}, {"type": "mutation", "name": "updateUser($id: ID!, $FirstName: String! , $LastName: String! , $email: String! , $role :String!)", "content": "{\n    updateUser(id: $id , input : { FirstName: $FirstName, LastName : $LastName, email: $email , role :$role}) {\n      id\n      FirstName\n      LastName\n      email\n      role\n    }\n  }", "metadata": {"commit_hash": "09dc9553d02ee66df50dd5df12f0d4aef0b324c4", "file": "client/src/queries/users.js", "repo": "mPooja-15_graphql-api-backend"}}, {"type": "mutation", "name": "updateUser($id: ID!)", "content": "{\n    updateUser(id: $id) {\n      id\n      likes\n    }\n  }", "metadata": {"commit_hash": "09dc9553d02ee66df50dd5df12f0d4aef0b324c4", "file": "client/src/queries/users.js", "repo": "mPooja-15_graphql-api-backend"}}, {"type": "mutation", "name": "deleteUser($id: ID!)", "content": "{\n    deleteUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "09dc9553d02ee66df50dd5df12f0d4aef0b324c4", "file": "client/src/queries/users.js", "repo": "mPooja-15_graphql-api-backend"}}, {"type": "mutation", "name": "searchUser($id :IS!)", "content": "{\n    searchUser(id:$id){\n      id\n    }\n  }", "metadata": {"commit_hash": "09dc9553d02ee66df50dd5df12f0d4aef0b324c4", "file": "client/src/queries/users.js", "repo": "mPooja-15_graphql-api-backend"}}, {"type": "mutation", "name": "($input: SellingPlanGroupInput!)", "content": "{\n        sellingPlanGroupCreate(input: $input) {\n            sellingPlanGroup {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "lib/sellingPlanGraphQL.ts", "repo": "mr-perseus_permaculture"}}, {"type": "mutation", "name": "productJoinSellingPlanGroups(\n        $id: ID!\n        $sellingPlanGroupIds: [ID!]!\n    )", "content": "{\n        productJoinSellingPlanGroups(\n            id: $id\n            sellingPlanGroupIds: $sellingPlanGroupIds\n        ) {\n            product {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "lib/sellingPlanGraphQL.ts", "repo": "mr-perseus_permaculture"}}, {"type": "mutation", "name": "productJoinSellingPlanGroups(\n        $id: ID!\n        $sellingPlanGroupIds: [ID!]!\n    )", "content": "{\n        productVariantJoinSellingPlanGroups(\n            id: $id\n            sellingPlanGroupIds: $sellingPlanGroupIds\n        ) {\n            productVariant {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "lib/sellingPlanGraphQL.ts", "repo": "mr-perseus_permaculture"}}, {"type": "mutation", "name": "sellingPlanGroupUpdate($id: ID!, $input: SellingPlanGroupInput!)", "content": "{\n        sellingPlanGroupUpdate(id: $id, input: $input) {\n            deletedSellingPlanIds\n            sellingPlanGroup {\n                id\n                name\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "pages/sellingPlanGroups/[id].tsx", "repo": "mr-perseus_permaculture"}}, {"type": "mutation", "name": "sellingPlanGroupDelete($id: ID!)", "content": "{\n        sellingPlanGroupDelete(id: $id) {\n            deletedSellingPlanGroupId\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "pages/sellingPlanGroups/[id].tsx", "repo": "mr-perseus_permaculture"}}, {"type": "mutation", "name": "productLeaveSellingPlanGroups(\n        $id: ID!\n        $productVariantIds: [ID!]!\n        $sellingPlanGroupIds: [ID!]!\n        $sellingPlanGroupId: ID!\n    )", "content": "{\n        productLeaveSellingPlanGroups(\n            id: $id\n            sellingPlanGroupIds: $sellingPlanGroupIds\n        ) {\n            product {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n        sellingPlanGroupRemoveProductVariants(\n            id: $sellingPlanGroupId\n            productVariantIds: $productVariantIds\n        ) {\n            removedProductVariantIds\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "admin-extension/RemoveSellingPlan.tsx", "repo": "mr-perseus_permaculture"}}, {"type": "mutation", "name": "sellingPlanGroupRemoveProductVariants(\n        $id: ID!\n        $productVariantIds: [ID!]!\n    )", "content": "{\n        sellingPlanGroupRemoveProductVariants(\n            id: $id\n            productVariantIds: $productVariantIds\n        ) {\n            removedProductVariantIds\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "admin-extension/RemoveSellingPlan.tsx", "repo": "mr-perseus_permaculture"}}, {"type": "mutation", "name": "sellingPlanGroupDelete($id: ID!)", "content": "{\n        sellingPlanGroupDelete(id: $id) {\n            deletedSellingPlanGroupId\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "components/SubscriptionsTab.tsx", "repo": "mr-perseus_permaculture"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "e0a8e6f7b5ccf7d913dae3006e6e54762ae76e25", "file": "client/src/utils/mutations.js", "repo": "daisyle0203_UPIN"}}, {"type": "mutation", "name": "addUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "e0a8e6f7b5ccf7d913dae3006e6e54762ae76e25", "file": "client/src/utils/mutations.js", "repo": "daisyle0203_UPIN"}}, {"type": "mutation", "name": "AddReview(\n    $company: String!\n    $interviewExperience: String!\n    $role: String!\n    $interviewerInfo: String!\n    $rating: Float!\n  )", "content": "{\n    addReview(\n      company: $company\n      interviewExperience: $interviewExperience\n      role: $role\n      interviewerInfo: $interviewerInfo\n      rating: $rating\n    ) {\n      _id\n      company\n      role\n      interviewExperience\n      interviewerInfo\n      rating\n      reviewAuthor\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "e0a8e6f7b5ccf7d913dae3006e6e54762ae76e25", "file": "client/src/utils/mutations.js", "repo": "daisyle0203_UPIN"}}, {"type": "mutation", "name": "AddComment($reviewId: ID!, $commentText: String!)", "content": "{\n    addComment(reviewId: $reviewId, commentText: $commentText) {\n      comments {\n        _id\n        commentText\n        commentAuthor\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "e0a8e6f7b5ccf7d913dae3006e6e54762ae76e25", "file": "client/src/utils/mutations.js", "repo": "daisyle0203_UPIN"}}, {"type": "mutation", "name": "Mutation($reviewId: ID!)", "content": "{\n    removeReview(reviewId: $reviewId) {\n      _id\n      company\n      interviewExperience\n      role\n      interviewerInfo\n      reviewAuthor\n      rating\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "e0a8e6f7b5ccf7d913dae3006e6e54762ae76e25", "file": "client/src/utils/mutations.js", "repo": "daisyle0203_UPIN"}}, {"type": "mutation", "name": "Mutation($reviewId: ID!, $commentId: ID!)", "content": "{\n    removeComment(reviewId: $reviewId, commentId: $commentId) {\n      _id\n      company\n      interviewExperience\n      role\n      interviewerInfo\n      reviewAuthor\n      rating\n      createdAt\n      comments {\n        _id\n        commentText\n        commentAuthor\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "e0a8e6f7b5ccf7d913dae3006e6e54762ae76e25", "file": "client/src/utils/mutations.js", "repo": "daisyle0203_UPIN"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\n  updateRiderLocation(latitude:$latitude,longitude:$longitude){\n    _id\n  }\n}", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/utilities/location.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\n  updateRiderLocation(latitude:$latitude,longitude:$longitude){\n    _id\n  }\n}", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/context/user.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}}, {"type": "mutation", "name": "UpdateOrderStatusRider($id:String!,$status:String!)", "content": "{\n    updateOrderStatusRider(id:$id,status:$status){\n      _id\n      order_status\n    }\n  }", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/screens/OrderDetail/OrderDetail.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}}, {"type": "mutation", "name": "AssignOrder($id:String!)", "content": "{\n    assignOrder(id:$id){\n      _id\n      rider{\n        _id\n      }\n    }\n}", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/screens/OrderDetail/OrderDetail.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}}, {"type": "mutation", "name": "RiderLogin($username:String,$password:String,$notificationToken:String)", "content": "{\n    riderLogin(username:$username,password:$password,notificationToken:$notificationToken){\n      userId\n      token\n    }\n  }", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/screens/Login/Login.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}}, {"type": "mutation", "name": "createService(\n        $service: CreateService!,\n    )", "content": "{\n        createService(service:$service){\n           service {\n             ${SERVICE}\n           }\n           commitId\n        }\n    }", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "deployService($deployment: DeploymentCreate!)", "content": "{\n    deployService(deployment:$deployment){\n        ${SERVICE}\n    }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "deleteServiceByUniqueName($uniqueName: String!)", "content": "{\n    deleteServiceByUniqueName(uniqueName:$uniqueName) { id }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "deleteService($id: Id!)", "content": "{\n    deleteService(id:$id){\n        affected\n    }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "pushService($base64Service: String!, $notes: [String]!, $description: String!)", "content": "{\n  pushService(base64Service:$base64Service, releaseNotes: $notes, description: $description){\n    data\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "promoteServiceByUniqueName($uniqueName: String!)", "content": "{\n  promoteServiceByUniqueName(uniqueName: $uniqueName) {\n    ${SERVICE}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "promoteService($id: Int!)", "content": "{\n  promoteService(id: $id){\n    ${SERVICE}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "generateServiceEntities($base64Service: String!)", "content": "{\n  generateServiceEntities(base64Service:$base64Service) {\n    data\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "createProject($data: InputProject!)", "content": "{\n  createProject(data:$data){\n    ${PROJECT}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "deleteProject($id: Int!)", "content": "{\n  deleteProject(id: $id)\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "deleteProject($uniqueName: String!)", "content": "{\n  deleteProjectByUniqueName(uniqueName: $uniqueName) {\n    id\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "promote($data: PromoteServiceInProject!)", "content": "{\n  promoteServiceInProject(input:$data){\n    id\n    commitId\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "promote($data: PromoteServiceInProjectByUniqueName!)", "content": "{\n  promoteServiceInProjectByUniqueName(input:$data){\n    id\n    commitId\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "includeServiceByUniqueNames($data: InputProjectServiceUniqueNamesWithBilling!)", "content": "{\n      includeServiceByUniqueNames(data: $data) {\n        status\n      }\n    }", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/index.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "excludeServiceByUniqueNames($data: InputProjectServiceUniqueNames!)", "content": "{\n      excludeServiceByUniqueNames(data: $data) {\n        status\n      }\n    }", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/index.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "updateTaskChecklistItemName($taskChecklistItemID: UUID!, $name: String!)", "content": "{\n    updateTaskChecklistItemName(input: { taskChecklistItemID: $taskChecklistItemID, name: $name }) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/updateTaskChecklistItemName.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTaskChecklistItem($taskChecklistID: UUID!, $name: String!, $position: Float!)", "content": "{\n    createTaskChecklistItem(input: { taskChecklistID: $taskChecklistID, name: $name, position: $position }) {\n      id\n      name\n      taskChecklistID\n      position\n      complete\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/createTaskChecklistItem.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "setTaskChecklistItemComplete($taskChecklistItemID: UUID!, $complete: Boolean!)", "content": "{\n    setTaskChecklistItemComplete(input: { taskChecklistItemID: $taskChecklistItemID, complete: $complete }) {\n      id\n      complete\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/setTaskChecklistItemComplete.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskComment($commentID: UUID!, $message: String!)", "content": "{\n    updateTaskComment(input: { commentID: $commentID, message: $message }) {\n      comment {\n        id\n        updatedAt\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/updateTaskComment.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskChecklistItemLocation($taskChecklistID: UUID!, $taskChecklistItemID: UUID!, $position: Float!)", "content": "{\n    updateTaskChecklistItemLocation(\n      input: { taskChecklistID: $taskChecklistID, taskChecklistItemID: $taskChecklistItemID, position: $position }\n    ) {\n      taskChecklistID\n      prevChecklistID\n      checklistItem {\n        id\n        taskChecklistID\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/updateTaskChecklistItemLocation.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "setTaskComplete($taskID: UUID!, $complete: Boolean!)", "content": "{\n  setTaskComplete(input: { taskID: $taskID, complete: $complete }) {\n    ...TaskFields\n  }\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/setTaskComplete.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskChecklistLocation($taskChecklistID: UUID!, $position: Float!)", "content": "{\n    updateTaskChecklistLocation(input: { taskChecklistID: $taskChecklistID, position: $position }) {\n      checklist {\n        id\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/updateTaskChecklistLocation.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTask($taskGroupID: UUID!, $name: String!, $position: Float!, $assigned: [UUID!])", "content": "{\n    createTask(input: { taskGroupID: $taskGroupID, name: $name, position: $position, assigned: $assigned }) {\n      ...TaskFields\n    }\n  }\n  ${TASK_FRAGMENT}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/createTask.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTaskComment($taskID: UUID!, $message: String!)", "content": "{\n    createTaskComment(input: { taskID: $taskID, message: $message }) {\n      taskID\n      comment {\n        id\n        message\n        pinned\n        createdAt\n        updatedAt\n        createdBy {\n          id\n          fullName\n          profileIcon {\n            initials\n            bgColor\n            url\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/createTaskComment.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskChecklistName($taskChecklistID: UUID!, $name: String!)", "content": "{\n    updateTaskChecklistName(input: { taskChecklistID: $taskChecklistID, name: $name }) {\n      id\n      name\n      position\n      items {\n        id\n        name\n        taskChecklistID\n        complete\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/updateTaskChecklistName.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTaskChecklist($taskChecklistID: UUID!)", "content": "{\n    deleteTaskChecklist(input: { taskChecklistID: $taskChecklistID }) {\n      ok\n      taskChecklist {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/deleteTaskChecklist.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTaskChecklist($taskID: UUID!, $name: String!, $position: Float!)", "content": "{\n    createTaskChecklist(input: { taskID: $taskID, name: $name, position: $position }) {\n      id\n      name\n      position\n      items {\n        id\n        name\n        taskChecklistID\n        complete\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/createTaskChecklist.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTaskComment($commentID: UUID!)", "content": "{\n    deleteTaskComment(input: { commentID: $commentID }) {\n      commentID\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/deleteTaskComment.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTaskChecklistItem($taskChecklistItemID: UUID!)", "content": "{\n    deleteTaskChecklistItem(input: { taskChecklistItemID: $taskChecklistItemID }) {\n      ok\n      taskChecklistItem {\n        id\n        taskChecklistID\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/deleteTaskChecklistItem.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "duplicateTaskGroup($taskGroupID: UUID!, $name: String!, $position: Float!, $projectID: UUID!)", "content": "{\n  duplicateTaskGroup(\n  input: {\n    projectID: $projectID\n    taskGroupID: $taskGroupID\n    name: $name\n    position: $position\n  }\n  ) {\n    taskGroup {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/taskGroup/duplicateTaskGroup.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTaskGroupTasks($taskGroupID: UUID!)", "content": "{\n    deleteTaskGroupTasks(input: { taskGroupID: $taskGroupID }) {\n      tasks\n      taskGroupID\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/taskGroup/deleteTaskGroupTasks.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "sortTaskGroup($tasks: [TaskPositionUpdate!]!, $taskGroupID: UUID!)", "content": "{\n    sortTaskGroup(input: { taskGroupID: $taskGroupID, tasks: $tasks }) {\n      taskGroupID\n      tasks {\n        id\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/taskGroup/sortTaskGroup.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskGroupName($taskGroupID: UUID!, $name: String!)", "content": "{\n  updateTaskGroupName(input:{taskGroupID:$taskGroupID, name:$name}) {\n    id\n    name\n  }\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/taskGroup/updateTaskGroupName.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTeamMemberRole($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateTeamMemberRole(input: { teamID: $teamID, userID: $userID, roleCode: $roleCode }) {\n      member {\n        id\n        role {\n          code\n          name\n        }\n      }\n      teamID\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/team/updateTeamMemberRole.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTeam($teamID: UUID!)", "content": "{\n    deleteTeam(input: { teamID: $teamID }) {\n      ok\n      team {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/team/deleteTeam.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTeamMember($userID: UUID!, $teamID: UUID!)", "content": "{\n    createTeamMember(input: { userID: $userID, teamID: $teamID }) {\n      team {\n        id\n      }\n      teamMember {\n        id\n        username\n        fullName\n        role {\n          code\n          name\n        }\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/team/createTeamMember.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTeamMember($teamID: UUID!, $userID: UUID!, $newOwnerID: UUID)", "content": "{\n    deleteTeamMember(input: { teamID: $teamID, userID: $userID, newOwnerID: $newOwnerID }) {\n      teamID\n      userID\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/team/deleteTeamMember.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTeam($name: String!, $organizationID: UUID!)", "content": "{\n    createTeam(input: { name: $name, organizationID: $organizationID }) {\n      id\n      createdAt\n      name\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/team/createTeam.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteInvitedUserAccount($invitedUserID: UUID!)", "content": "{\n    deleteInvitedUserAccount(input: { invitedUserID: $invitedUserID }) {\n      invitedUser {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/user/deleteInvitedUser.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateUserRole($userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateUserRole(input: { userID: $userID, roleCode: $roleCode }) {\n      user {\n        id\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/user/updateUserRole.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateUserInfo($name: String!, $initials: String!, $email: String!, $bio: String!)", "content": "{\n    updateUserInfo(input: { name: $name, initials: $initials, email: $email, bio: $bio }) {\n      user {\n        id\n        email\n        fullName\n        bio\n        profileIcon {\n          initials\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/user/updateUserInfo.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createUserAccount(\n    $username: String!\n    $roleCode: String!\n    $email: String!\n    $fullName: String!\n    $initials: String!\n    $password: String!\n  )", "content": "{\n    createUserAccount(\n      input: {\n        roleCode: $roleCode\n        username: $username\n        email: $email\n        fullName: $fullName\n        initials: $initials\n        password: $password\n      }\n    ) {\n      id\n      email\n      fullName\n      initials\n      username\n      bio\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      role {\n        code\n        name\n      }\n      owned {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n      member {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/user/createUser.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteUserAccount($userID: UUID!, $newOwnerID: UUID)", "content": "{\n    deleteUserAccount(input: { userID: $userID, newOwnerID: $newOwnerID }) {\n      ok\n      userAccount {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/user/deleteUser.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateUserPassword($userID: UUID!, $password: String!)", "content": "{\n    updateUserPassword(input: { userID: $userID, password: $password }) {\n      ok\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/user/updateUserPassword.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "inviteProjectMembers($projectID: UUID!, $members: [MemberInvite!]!)", "content": "{\n    inviteProjectMembers(input: { projectID: $projectID, members: $members }) {\n      ok\n      invitedMembers {\n        email\n        invitedOn\n      }\n      members {\n        id\n        fullName\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n        username\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/project/inviteProjectMembers.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteProject($projectID: UUID!)", "content": "{\n    deleteProject(input: { projectID: $projectID }) {\n      ok\n      project {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/project/deleteProject.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteInvitedProjectMember($projectID: UUID!, $email: String!)", "content": "{\n    deleteInvitedProjectMember(input: { projectID: $projectID, email: $email }) {\n      invitedMember {\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/project/deleteProjectInvitedMember.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteProjectMember($projectID: UUID!, $userID: UUID!)", "content": "{\n    deleteProjectMember(input: { projectID: $projectID, userID: $userID }) {\n      ok\n      member {\n        id\n      }\n      projectID\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/project/deleteProjectMember.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateProjectMemberRole($projectID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateProjectMemberRole(input: { projectID: $projectID, userID: $userID, roleCode: $roleCode }) {\n      ok\n      member {\n        id\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/project/updateProjectMemberRole.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "assignTask($taskID: UUID!, $userID: UUID!)", "content": "{\n  assignTask(input: {taskID: $taskID, userID: $userID}) {\n    id\n    assigned {\n      id\n      fullName\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "clearProfileAvatar", "content": "{\n  clearProfileAvatar {\n    id\n    fullName\n    profileIcon {\n      initials\n      bgColor\n      url\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createProject($teamID: UUID, $name: String!)", "content": "{\n  createProject(input: {teamID: $teamID, name: $name}) {\n    id\n    name\n    team {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createProjectLabel($projectID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  createProjectLabel(\n    input: {projectID: $projectID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTaskGroup($projectID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskGroup(\n    input: {projectID: $projectID, name: $name, position: $position}\n  ) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteProjectLabel($projectLabelID: UUID!)", "content": "{\n  deleteProjectLabel(input: {projectLabelID: $projectLabelID}) {\n    id\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTask($taskID: UUID!)", "content": "{\n  deleteTask(input: {taskID: $taskID}) {\n    taskID\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTaskGroup($taskGroupID: UUID!)", "content": "{\n  deleteTaskGroup(input: {taskGroupID: $taskGroupID}) {\n    ok\n    affectedRows\n    taskGroup {\n      id\n      tasks {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteProject($projectID: UUID!)", "content": "{\n  deleteProject(input: {projectID: $projectID}) {\n    ok\n    project {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteInvitedProjectMember($projectID: UUID!, $email: String!)", "content": "{\n  deleteInvitedProjectMember(input: {projectID: $projectID, email: $email}) {\n    invitedMember {\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteProjectMember($projectID: UUID!, $userID: UUID!)", "content": "{\n  deleteProjectMember(input: {projectID: $projectID, userID: $userID}) {\n    ok\n    member {\n      id\n    }\n    projectID\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "inviteProjectMembers($projectID: UUID!, $members: [MemberInvite!]!)", "content": "{\n  inviteProjectMembers(input: {projectID: $projectID, members: $members}) {\n    ok\n    invitedMembers {\n      email\n      invitedOn\n    }\n    members {\n      id\n      fullName\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      username\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateProjectMemberRole($projectID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateProjectMemberRole(\n    input: {projectID: $projectID, userID: $userID, roleCode: $roleCode}\n  ) {\n    ok\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTask($taskGroupID: UUID!, $name: String!, $position: Float!, $assigned: [UUID!])", "content": "{\n  createTask(\n    input: {taskGroupID: $taskGroupID, name: $name, position: $position, assigned: $assigned}\n  ) {\n    ...TaskFields\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTaskChecklist($taskID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskChecklist(input: {taskID: $taskID, name: $name, position: $position}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTaskChecklistItem($taskChecklistID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskChecklistItem(\n    input: {taskChecklistID: $taskChecklistID, name: $name, position: $position}\n  ) {\n    id\n    name\n    taskChecklistID\n    position\n    complete\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTaskComment($taskID: UUID!, $message: String!)", "content": "{\n  createTaskComment(input: {taskID: $taskID, message: $message}) {\n    taskID\n    comment {\n      id\n      message\n      pinned\n      createdAt\n      updatedAt\n      createdBy {\n        id\n        fullName\n        profileIcon {\n          initials\n          bgColor\n          url\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTaskChecklist($taskChecklistID: UUID!)", "content": "{\n  deleteTaskChecklist(input: {taskChecklistID: $taskChecklistID}) {\n    ok\n    taskChecklist {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTaskChecklistItem($taskChecklistItemID: UUID!)", "content": "{\n  deleteTaskChecklistItem(input: {taskChecklistItemID: $taskChecklistItemID}) {\n    ok\n    taskChecklistItem {\n      id\n      taskChecklistID\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTaskComment($commentID: UUID!)", "content": "{\n  deleteTaskComment(input: {commentID: $commentID}) {\n    commentID\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "setTaskChecklistItemComplete($taskChecklistItemID: UUID!, $complete: Boolean!)", "content": "{\n  setTaskChecklistItemComplete(\n    input: {taskChecklistItemID: $taskChecklistItemID, complete: $complete}\n  ) {\n    id\n    complete\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "setTaskComplete($taskID: UUID!, $complete: Boolean!)", "content": "{\n  setTaskComplete(input: {taskID: $taskID, complete: $complete}) {\n    ...TaskFields\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskChecklistItemLocation($taskChecklistID: UUID!, $taskChecklistItemID: UUID!, $position: Float!)", "content": "{\n  updateTaskChecklistItemLocation(\n    input: {taskChecklistID: $taskChecklistID, taskChecklistItemID: $taskChecklistItemID, position: $position}\n  ) {\n    taskChecklistID\n    prevChecklistID\n    checklistItem {\n      id\n      taskChecklistID\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskChecklistItemName($taskChecklistItemID: UUID!, $name: String!)", "content": "{\n  updateTaskChecklistItemName(\n    input: {taskChecklistItemID: $taskChecklistItemID, name: $name}\n  ) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskChecklistLocation($taskChecklistID: UUID!, $position: Float!)", "content": "{\n  updateTaskChecklistLocation(\n    input: {taskChecklistID: $taskChecklistID, position: $position}\n  ) {\n    checklist {\n      id\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskChecklistName($taskChecklistID: UUID!, $name: String!)", "content": "{\n  updateTaskChecklistName(input: {taskChecklistID: $taskChecklistID, name: $name}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskComment($commentID: UUID!, $message: String!)", "content": "{\n  updateTaskComment(input: {commentID: $commentID, message: $message}) {\n    comment {\n      id\n      updatedAt\n      message\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTaskGroupTasks($taskGroupID: UUID!)", "content": "{\n  deleteTaskGroupTasks(input: {taskGroupID: $taskGroupID}) {\n    tasks\n    taskGroupID\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "duplicateTaskGroup($taskGroupID: UUID!, $name: String!, $position: Float!, $projectID: UUID!)", "content": "{\n  duplicateTaskGroup(\n    input: {projectID: $projectID, taskGroupID: $taskGroupID, name: $name, position: $position}\n  ) {\n    taskGroup {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "sortTaskGroup($tasks: [TaskPositionUpdate!]!, $taskGroupID: UUID!)", "content": "{\n  sortTaskGroup(input: {taskGroupID: $taskGroupID, tasks: $tasks}) {\n    taskGroupID\n    tasks {\n      id\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskGroupName($taskGroupID: UUID!, $name: String!)", "content": "{\n  updateTaskGroupName(input: {taskGroupID: $taskGroupID, name: $name}) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTeam($name: String!, $organizationID: UUID!)", "content": "{\n  createTeam(input: {name: $name, organizationID: $organizationID}) {\n    id\n    createdAt\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createTeamMember($userID: UUID!, $teamID: UUID!)", "content": "{\n  createTeamMember(input: {userID: $userID, teamID: $teamID}) {\n    team {\n      id\n    }\n    teamMember {\n      id\n      username\n      fullName\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTeam($teamID: UUID!)", "content": "{\n  deleteTeam(input: {teamID: $teamID}) {\n    ok\n    team {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTeamMember($teamID: UUID!, $userID: UUID!, $newOwnerID: UUID)", "content": "{\n  deleteTeamMember(\n    input: {teamID: $teamID, userID: $userID, newOwnerID: $newOwnerID}\n  ) {\n    teamID\n    userID\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTeamMemberRole($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateTeamMemberRole(\n    input: {teamID: $teamID, userID: $userID, roleCode: $roleCode}\n  ) {\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n    teamID\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "toggleTaskLabel($taskID: UUID!, $projectLabelID: UUID!)", "content": "{\n  toggleTaskLabel(input: {taskID: $taskID, projectLabelID: $projectLabelID}) {\n    active\n    task {\n      id\n      labels {\n        id\n        assignedDate\n        projectLabel {\n          id\n          createdDate\n          labelColor {\n            id\n            colorHex\n            name\n            position\n          }\n          name\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "unassignTask($taskID: UUID!, $userID: UUID!)", "content": "{\n  unassignTask(input: {taskID: $taskID, userID: $userID}) {\n    assigned {\n      id\n      fullName\n    }\n    id\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateProjectLabel($projectLabelID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  updateProjectLabel(\n    input: {projectLabelID: $projectLabelID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateProjectName($projectID: UUID!, $name: String!)", "content": "{\n  updateProjectName(input: {projectID: $projectID, name: $name}) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskDescription($taskID: UUID!, $description: String!)", "content": "{\n  updateTaskDescription(input: {taskID: $taskID, description: $description}) {\n    id\n    description\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskDueDate($taskID: UUID!, $dueDate: Time, $hasTime: Boolean!)", "content": "{\n  updateTaskDueDate(\n    input: {taskID: $taskID, dueDate: $dueDate, hasTime: $hasTime}\n  ) {\n    id\n    dueDate\n    hasTime\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskGroupLocation($taskGroupID: UUID!, $position: Float!)", "content": "{\n  updateTaskGroupLocation(input: {taskGroupID: $taskGroupID, position: $position}) {\n    id\n    position\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskLocation($taskID: UUID!, $taskGroupID: UUID!, $position: Float!)", "content": "{\n  updateTaskLocation(\n    input: {taskID: $taskID, taskGroupID: $taskGroupID, position: $position}\n  ) {\n    previousTaskGroupID\n    task {\n      id\n      createdAt\n      name\n      position\n      taskGroup {\n        id\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateTaskName($taskID: UUID!, $name: String!)", "content": "{\n  updateTaskName(input: {taskID: $taskID, name: $name}) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createUserAccount($username: String!, $roleCode: String!, $email: String!, $fullName: String!, $initials: String!, $password: String!)", "content": "{\n  createUserAccount(\n    input: {roleCode: $roleCode, username: $username, email: $email, fullName: $fullName, initials: $initials, password: $password}\n  ) {\n    id\n    email\n    fullName\n    initials\n    username\n    bio\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    role {\n      code\n      name\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteInvitedUserAccount($invitedUserID: UUID!)", "content": "{\n  deleteInvitedUserAccount(input: {invitedUserID: $invitedUserID}) {\n    invitedUser {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteUserAccount($userID: UUID!, $newOwnerID: UUID)", "content": "{\n  deleteUserAccount(input: {userID: $userID, newOwnerID: $newOwnerID}) {\n    ok\n    userAccount {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateUserInfo($name: String!, $initials: String!, $email: String!, $bio: String!)", "content": "{\n  updateUserInfo(\n    input: {name: $name, initials: $initials, email: $email, bio: $bio}\n  ) {\n    user {\n      id\n      email\n      fullName\n      bio\n      profileIcon {\n        initials\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateUserPassword($userID: UUID!, $password: String!)", "content": "{\n  updateUserPassword(input: {userID: $userID, password: $password}) {\n    ok\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateUserRole($userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateUserRole(input: {userID: $userID, roleCode: $roleCode}) {\n    user {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "publish($event: EventInput!)", "content": "{\n        publish(event: $event) {\n          accountId\n          eventId\n          target\n          payload\n        }\n      }", "metadata": {"commit_hash": "2505e8ced703c575e9958cf95c8e6fbae0b02af2", "file": "testing-event-driven/event-catcher/functions/publish.js", "repo": "WojciechMatuszewski_testing-serverless-architectures"}}, {"type": "mutation", "name": "signup(\n  $name: String!\n  $email: String!\n  $password: String! \n)", "content": "{\n  signup(name: $name, email: $email, password: $password) {\n    name\n    email\n  }\n}", "metadata": {"commit_hash": "2c4335dade177e2649f4f38c42838e56b0bbff7f", "file": "frontend/src/GraphQL/Mutations.js", "repo": "riggedCoinflip_lol-friendfinder"}}, {"type": "mutation", "name": "userUpdateSelf(\n    $aboutMe: String\n    $languages: [String]\n    $dateOfBirth: Date\n    $gender: EnumUserPrivateGender\n    $blocked: UserPrivateBlockedMutation\n    $ingameRole: [EnumUserPrivateIngameRole]\n  )", "content": "{\n    userUpdateSelf(\n      aboutMe: $aboutMe\n      languages: $languages\n      dateOfBirth: $dateOfBirth\n      gender: $gender\n      blocked: $blocked\n      ingameRole: $ingameRole\n\n    ) {\n      name\n      aboutMe\n      gender\n      languages\n      dateOfBirth\n      ingameRole\n      friends {\n        user\n      }\n      blocked\n    }\n  }", "metadata": {"commit_hash": "2c4335dade177e2649f4f38c42838e56b0bbff7f", "file": "frontend/src/GraphQL/Mutations.js", "repo": "riggedCoinflip_lol-friendfinder"}}, {"type": "mutation", "name": "swipe (\n\t\t\t$recipient: MongoID\n        $status: String!\n    )", "content": "{\n    swipe\n  (    record: {\n            recipient:  $recipient\n            status:  $status\n        }) {\n        record{\n            requester\n            recipient\n            status\n        }\n    }\n}", "metadata": {"commit_hash": "2c4335dade177e2649f4f38c42838e56b0bbff7f", "file": "frontend/src/GraphQL/Mutations.js", "repo": "riggedCoinflip_lol-friendfinder"}}, {"type": "mutation", "name": "sendMessage(\n$chatID: MongoID!\n$content: String!\n)", "content": "{\n    sendMessage(\n        chatID: $chatID\n        content: $content\n    )\n}", "metadata": {"commit_hash": "2c4335dade177e2649f4f38c42838e56b0bbff7f", "file": "frontend/src/GraphQL/Mutations.js", "repo": "riggedCoinflip_lol-friendfinder"}}, {"type": "mutation", "name": "SubmitOrder($dishes: [Order!]!)", "content": "{\n    order(dishes: $dishes) {\n      id\n      delivery\n      delivered\n      items {\n        id\n        name\n        price\n      }\n    }\n  }", "metadata": {"commit_hash": "b6d96035d668b9480ff20fb4a7df628fa97a9250", "file": "3_examples/react/src/apollo/mutations.js", "repo": "systek_graphql-workshop"}}, {"type": "mutation", "name": "MarkOrderDelivered($orderId: String!)", "content": "{\n    markDelivered(orderId: $orderId) {\n      id\n      delivery\n      delivered\n      items {\n        id\n        name\n        price\n      }\n    }\n  }", "metadata": {"commit_hash": "b6d96035d668b9480ff20fb4a7df628fa97a9250", "file": "3_examples/react/src/apollo/mutations.js", "repo": "systek_graphql-workshop"}}, {"type": "mutation", "name": "renameList($name: String!, $url: String!, $listId: Int!)", "content": "{\n    renameList(name: $name, url: $url, listId: $listId) {\n      message\n      success\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/mutations/renamelist.js", "repo": "Marikita1007_prestashop_youtube"}}, {"type": "mutation", "name": "addToList($listId: Int!, $productId: Int!, $quantity: Int!, $productAttributeId: Int!, $url: String!)", "content": "{\n    addToList(\n      listId: $listId\n      productId: $productId\n      quantity: $quantity\n      productAttributeId: $productAttributeId\n      url: $url\n    ) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/mutations/addtolist.js", "repo": "Marikita1007_prestashop_youtube"}}, {"type": "mutation", "name": "shareList($listId: Int!, $userId: Int!)", "content": "{\n    shareList(listId: $listId, userId: $userId) {\n      url\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/mutations/sharelist.js", "repo": "Marikita1007_prestashop_youtube"}}, {"type": "mutation", "name": "removeFromList($listId: Int!, $productId: Int!, $productAttributeId: Int!, $url: String!)", "content": "{\n    removeFromList(listId: $listId, productId: $productId, productAttributeId: $productAttributeId, url: $url) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/mutations/removeFromList.js", "repo": "Marikita1007_prestashop_youtube"}}, {"type": "mutation", "name": "createList($name: String!, $url: String!)", "content": "{\n    createList(name: $name, url: $url) {\n      message\n      datas {\n        name\n        id_wishlist\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/mutations/createlist.js", "repo": "Marikita1007_prestashop_youtube"}}, {"type": "mutation", "name": "deleteList($listId: Int!, $url: String!)", "content": "{\n    deleteList(listId: $listId, url: $url) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/mutations/deletelist.js", "repo": "Marikita1007_prestashop_youtube"}}, {"type": "mutation", "name": "($name: String!, $genre: String!, $authorId: ID!)", "content": "{\n    addBook(name: $name, genre: $genre, authorId: $authorId) {\n      name\n      id\n    }\n  }", "metadata": {"commit_hash": "452abd50606adbf0cc2be478b3724da5f3dd770b", "file": "client/src/queries/queries.js", "repo": "Shawoll_GraphQLServerNode"}}, {"type": "mutation", "name": "AddToCartClient($id: ID!, $title: String!, $price: Float!)", "content": "{\n    addToCartClient(id: $id, title: $title, price: $price) @client\n  }", "metadata": {"commit_hash": "5dd0189183c913410137e8fc9b14e96fcac09baf", "file": "client/src/screens/Home/Home.js", "repo": "vctormb_apollo-shopping-cart-caching"}}, {"type": "mutation", "name": "Checkout($productIds: [ID!])", "content": "{\n    checkout(productIds: $productIds) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5dd0189183c913410137e8fc9b14e96fcac09baf", "file": "client/src/screens/Cart/Cart.js", "repo": "vctormb_apollo-shopping-cart-caching"}}, {"type": "mutation", "name": "RemoveFromCartClient($id: ID!)", "content": "{\n    removeFromCartClient(id: $id) @client\n  }", "metadata": {"commit_hash": "5dd0189183c913410137e8fc9b14e96fcac09baf", "file": "client/src/apollo/queries/index.js", "repo": "vctormb_apollo-shopping-cart-caching"}}, {"type": "mutation", "name": "StoreInquirySubmission($input: CreateInquirySubmissionMutationInput!)", "content": "{\n    createInquirySubmission(input:$input){\n      id\n    }\n  }", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/inquiry/utils/store-inquiry.js", "repo": "endeavorb2b_websites"}}, {"type": "mutation", "name": "LoginAppUser($input: LoginAppUserMutationInput!)", "content": "{\n    loginAppUser(input: $input) {\n      token {\n        id\n        value\n      }\n      user {\n        ...ActiveUserFragment\n      }\n    }\n  }\n\n  ${userFragment}", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/authenticate.js", "repo": "endeavorb2b_websites"}}, {"type": "mutation", "name": "LogoutAppUser($input: LogoutAppUserMutationInput!)", "content": "{\n    logoutAppUser(input: $input)\n  }", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/logout.js", "repo": "endeavorb2b_websites"}}, {"type": "mutation", "name": "LoginCreateAppUser($email: String!)", "content": "{\n    createAppUser(input: { email: $email }) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/login.js", "repo": "endeavorb2b_websites"}}, {"type": "mutation", "name": "LoginSendLoginLink($input: SendAppUserLoginLinkMutationInput!)", "content": "{\n    sendAppUserLoginLink(input: $input)\n  }", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/login.js", "repo": "endeavorb2b_websites"}}, {"type": "mutation", "name": "UpdateUserProfile($input: UpdateOwnAppUserMutationInput!)", "content": "{\n    updateOwnAppUser(input: $input) {\n      ...ActiveUserFragment\n    }\n  }\n\n  ${userFragment}", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/profile.js", "repo": "endeavorb2b_websites"}}, {"type": "mutation", "name": "generateAccessTokenByLoginWithWeChatCode(\n      $code: String!\n      $imageUrl: String\n      $nickname: String\n    )", "content": "{\n      accessToken: generateAccessTokenByLoginWithWeChatCode(\n        code: $code\n        imageUrl: $imageUrl\n        nickname: $nickname\n      )\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-taro-mall/src/pages/home/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "invitedUsers(\n      $invitedId: ID!\n    )", "content": "{\n      invitedUsers (\n        invitedId: $invitedId\n      )\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-taro-mall/src/pages/home/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "($name: String!, $category: String!)", "content": "{\n    addProduct(name: $name, category: $category) {\n      id\n      name\n      category {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-manager/src/http/graphql/query.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "($name: String!)", "content": "{\n    addCategory(name: $name) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-manager/src/http/graphql/query.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "($name: String!, $categoryId: String!)", "content": "{\n    delProductByName(name: $name, category: $categoryId) {\n      id\n      name\n      category {\n        id\n        name\n        products {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-manager/src/http/graphql/query.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "CreateOrder(\n        $name: String\n        $phone: String\n        $account: String\n        $card: String\n        $openId: String\n      )", "content": "{\n        addAccount(\n          input: {\n            name: $name\n            phone: $phone\n            account: $account\n            card: $card\n            openId: $openId\n          }\n        ) {\n            name\n            phone\n            account\n            card\n            openId\n        }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/addCollection/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "generateAccessTokenByLoginWithWeChatCode(\n      $code: String!\n      $imageUrl: String\n      $nickname: String\n    )", "content": "{\n      accessToken: generateAccessTokenByLoginWithWeChatCode(\n        code: $code\n        imageUrl: $imageUrl\n        nickname: $nickname\n      )\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/home/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "invitedUsers(\n      $invitedId: ID!\n    )", "content": "{\n      invitedUsers (\n        invitedId: $invitedId\n      )\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/home/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "toApplyForCashWithdrawals(\n        $remark:String\n        )", "content": "{\n        toApplyForCashWithdrawals (\n          input: {\n            remark: $remark\n          }) {\n                id\n                price\n              }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/withdrawal/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "($itemCode: ID!, $status: String)", "content": "{\n        addCollection(itemCode: $itemCode, status: $status)\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/details/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "createOrder(\n        $itemIds: [itemIds]!\n        $storeId: ID!\n        $couponId: ID\n        $address: AddressInput\n        $time: String\n        $type:OrderType!\n        $payment:OrderPayment\n        $pointDiscount:Boolean!\n      )", "content": "{\n        createOrder(\n          input: {\n            itemIds: $itemIds\n            storeId: $storeId\n            couponId: $couponId\n            address: $address\n            time: $time\n            type:$type\n            payment:$payment\n            pointDiscount:$pointDiscount\n          }\n        ) {\n          appId\n          timeStamp\n          paySign\n          package\n          signType\n          nonceStr\n          timestamp\n        }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/orderDetails/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "createBalanceOrder(\n      $itemIds: [itemIds]!\n      $storeId: ID!\n      $couponId: ID\n      $address: AddressInput\n      $time: String\n      $type:OrderType!\n      $payment:OrderPayment\n      $pointDiscount:Boolean!\n    )", "content": "{\n      createBalanceOrder(\n        input: {\n          itemIds: $itemIds\n          storeId: $storeId\n          couponId: $couponId\n          address: $address\n          time: $time\n          type:$type\n          payment:$payment\n          pointDiscount:$pointDiscount\n        }\n      )\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/orderDetails/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "BindPhoneByUser(\n        $code: String!\n        $encryptedData: String!\n        $iv: String!\n      )", "content": "{\n        bindPhoneByUser(\n          code: $code\n          encryptedData: $encryptedData\n          iv: $iv\n        ) {\n          number\n        }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/bindPhoneNum/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n        userTopUp(id: $id){\n          appId\n          timeStamp\n          nonceStr\n          signType\n          package\n          paySign\n          timestamp\n        }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/packageA/pages/prepaid/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n        drawCoupon(id: $id) {\n          id\n        }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/gifts/service.tsx", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "($code: Int)", "content": "{\n        drawCard(code: $code)\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/packageA/pages/activityCoupons/service.tsx", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "SignOutMutation", "content": "{\n          signOut\n      }", "metadata": {"commit_hash": "bc6e01dc618e83918faa66d5823011ac213793be", "file": "client/src/app/services/auth.service.ts", "repo": "MitchTalmadge_CometCrate"}}, {"type": "mutation", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/parser.test.ts", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/parser.test.ts", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "One($t: String!)", "content": "{\n        user(t: $t) {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/parser.test.ts", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "submitRepository", "content": "{\n          submitRepository(repoFullName: \"apollographql/apollo-client\") {\n            createdAt\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/Query.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "addPerson", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/shared-operations.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "Account__SetPlanMutation($accountId: ID!, $planId: ID!)", "content": "{\n        accountSetPlan(accountId: $accountId, planId: $planId)\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "addPerson", "content": "{\n    allPeople(first: 1) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/index.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "addPerson($first: Int)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/index.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "addPerson($id: Int)", "content": "{\n    allPeople(id: $id) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/lifecycle.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "createTodo", "content": "{\n          createTodo {\n            id\n            text\n            completed\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/recycled-queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "createTodo", "content": "{\n          createTodo {\n            id\n            text\n            completed\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/recycled-queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "PostSong(\n\t\t$title: String!\n\t\t$artist: String!\n\t\t$url: String!\n\t\t$genre_id: Int!\n\t)", "content": "{\n\t\tinsert_songs(\n\t\t\tobjects: {\n\t\t\t\ttitle: $title\n\t\t\t\tartist: $artist\n\t\t\t\turl: $url\n\t\t\t\tgenre_id: $genre_id\n\t\t\t}\n\t\t) {\n\t\t\treturning {\n\t\t\t\tid\n\t\t\t\ttitle\n\t\t\t\tartist\n\t\t\t\turl\n\t\t\t\tgenre_id\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "5470ca0cda52c34bc1477a8bced74aaced212903", "file": "src/containers/CreateSongs.js", "repo": "JulienDemarque_JAMstack-hackathon-video-audio-matcher"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n        login(data: { email: $email, password: $password }) {\n            id\n            token\n        }\n    }", "metadata": {"commit_hash": "470c1d4642a33b4280439bd04bbd948feeba96ce", "file": "client/graphql/user/mutations/login.ts", "repo": "topbrightdev_ecommerce-microservice-nest-api"}}, {"type": "mutation", "name": "MUTATION_ADD_TO_CART($variantId: String!, $quantity: Int!, $note: String)", "content": "{\n    addToCart(variantId: $variantId, quantity: $quantity, note: $note) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/checkout/mutations/MUTATION_ADD_TO_CART.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_UPDATE_QUANTITY($itemId: String!, $quantity: Int!)", "content": "{\n    updateCartQuantity(itemId: $itemId, quantity: $quantity) {\n        success\n        message\n        data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/checkout/mutations/MUTATION_UPDATE_CART_ITEM.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_REMOVE_FROM_CART($itemId: String!)", "content": "{\n        removeFromCart(itemId: $itemId) {\n            success\n            message\n            data\n        }\n    }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/checkout/mutations/MUTATION_REMOVE_FROM_CART.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_SIGNIN_EMAIL($email: String!, $password: String!)", "content": "{\n    signinEmail(email: $email, password: $password) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/user/mutations/MUTATION_SIGNIN_EMAIL.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_SIGNUP_CUSTOMER($email: String!, $password: String!)", "content": "{\n    signupCustomer(email: $email, password: $password) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/user/mutations/MUTATION_SIGNUP_EMAIL.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_SIGNOUT", "content": "{\n    signout {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/user/mutations/MUTATION_SIGNOUT.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_CHECKOUT_ADDRESS($shippingAddress: ShippingAddressInput)", "content": "{\n    populateCheckout(shippingAddress: $shippingAddress) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/address/mutations/MUTATION_CHECKOUT_ADDRESS.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "startDownload($v: String!)", "content": "{\n    startDownload(v: $v) {\n      v\n    }\n  }", "metadata": {"commit_hash": "3e951b300431b09ea649f3bb347b11a6a6b9d019", "file": "src/components/NewDownload.js", "repo": "opensoars_ytmp3dl-web"}}, {"type": "mutation", "name": "retryDownload($v: String!)", "content": "{\n    retryDownload(v: $v) {\n      v\n    }\n  }", "metadata": {"commit_hash": "3e951b300431b09ea649f3bb347b11a6a6b9d019", "file": "src/components/Downloads.js", "repo": "opensoars_ytmp3dl-web"}}, {"type": "mutation", "name": "deleteDownload($v: String!)", "content": "{\n    deleteDownload(v: $v) {\n      v\n    }\n  }", "metadata": {"commit_hash": "3e951b300431b09ea649f3bb347b11a6a6b9d019", "file": "src/components/Downloads.js", "repo": "opensoars_ytmp3dl-web"}}, {"type": "mutation", "name": "createItem($title: String!)", "content": "{\n    createItem(title: $title){\n      title\n    }\n  }", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "mutation", "name": "createList($title: String!)", "content": "{\n    createList(title: $title){\n      title\n    }\n  }", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "mutation", "name": "deleteItem($id: ID!)", "content": "{\n    deleteItem(id: $id){\n      title\n    }\n  }", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "mutation", "name": "somethingFake($id: ID!)", "content": "{\n    somethingFake(id: $id){\n      title\n    }\n  }", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "mutation", "name": "mod($catgId: Int!, $quesId: Int!, $state: StateEnum!)", "content": "{\n        setQuestionState(catgId: $catgId, quesId: $quesId, state: $state) {\n            catgId\n            quesId\n            points\n            categoryName\n            question\n            answer\n            state\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "mod($gameId: Int!)", "content": "{\n        joinGame(gameId: $gameId) {\n            gameId\n            login\n            name\n            organization\n            score\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "mod($quesId: Int!)", "content": "{\n        nominateSelf(quesId: $quesId) {\n            quesId\n            login\n            name\n            organization\n            timebuzzed\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "mod($quesId: Int!, $login: String!)", "content": "{\n        removeNominee(quesId: $quesId, login: $login) {\n            quesId\n            login\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "mod($gameId: Int!, $login: String!, $increment: Int!)", "content": "{\n        addContestantScore(gameId: $gameId, login: $login, increment: $increment) {\n            gameId\n            login\n            name\n            organization\n            score\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "AddContestantScore($gameId: Int!, $increment: Int!, $login: String!)", "content": "{\n      addContestantScore(gameId: $gameId, increment: $increment, login: $login) {\n        gameId\n        login\n        name\n        organization\n        score\n      }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/mutations.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "JoinGame($gameId: Int!)", "content": "{\n    joinGame(gameId: $gameId) {\n      gameId\n      login\n      name\n      organization\n      score\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/mutations.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "LeaveGame(\n    $gameId: Int!\n    $login: String!\n  )", "content": "{\n    leaveGame(\n      gameId: $gameId\n      login: $login\n  ) {\n      gameId\n      login\n      name\n      organization\n      score\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/mutations.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "NominateContestant(\n    $login: String!\n    $name: String!\n    $organization: String!\n    $quesId: Int!\n  )", "content": "{\n    nominateContestant(\n      login: $login\n      name: $name\n      organization: $organization\n      quesId: $quesId\n    ) {\n      login\n      name\n      organization\n      quesId\n      timebuzzed\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/mutations.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "RemoveNominee($login: String!, $quesId: Int!)", "content": "{\n    removeNominee(login: $login, quesId: $quesId) {\n      login\n      name\n      organization\n      quesId\n      timebuzzed\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/mutations.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "SetQuestionState($catgId: Int!, $quesId: Int!, $state: StateEnum!)", "content": "{\n    setQuestionState(catgId: $catgId, quesId: $quesId, state: $state) {\n      answer\n      catgId\n      points\n      quesId\n      categoryName\n      question\n      state\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/mutations.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "(\n  $business_id: uuid!\n  $business: businesses_set_input!\n  $tags: [businesses_tags_insert_input!]!\n  $ignore_delete_tags: [bigint!]!\n  $territories: [businesses_territories_insert_input!]!\n)", "content": "{\n  delete_businesses_tags( where: {\n    _and: [\n      {business_id: {_eq:$business_id}},\n      {_not: { tag_id: { _in: $ignore_delete_tags } }}\n    ]\n  }) {\n    affected_rows,\n    returning {\n      business {\n        name\n        tags { tag { name } } }\n    }\n  }\n  insert_businesses_tags(objects:$tags) {\n    returning {\n      id\n      tag_id\n      business_id\n    }\n  }\n  delete_businesses_territories(where:{business_id:{_eq:$business_id}}) {\n    affected_rows,\n    returning {\n      business {\n        name\n        territories { territory { name } } }\n    }\n  }\n  insert_businesses_territories(objects:$territories) {\n    returning {\n      id\n      territory_id\n      business_id\n    }\n  }\n  update_businesses_by_pk(\n    pk_columns: {id: $business_id }\n    _set: $business) {\n    id name short_description long_description, preview_image\n    territories { territory { id, name, description_url }}\n  }\n}", "metadata": {"commit_hash": "6433a73b20a112acc8346c4e7d6e01762143f3c9", "file": "src/queries/index.js", "repo": "nativesintech_native-owned-businesses"}}, {"type": "mutation", "name": "($business_id: uuid!)", "content": "{\n  update_businesses_by_pk(\n    pk_columns: { id: $business_id }\n    _set: { deleted: true }\n  ) { id, name }\n}", "metadata": {"commit_hash": "6433a73b20a112acc8346c4e7d6e01762143f3c9", "file": "src/queries/index.js", "repo": "nativesintech_native-owned-businesses"}}, {"type": "mutation", "name": "VouchForAgent($agentId: ID!)", "content": "{\n    vouchForAgent(agentId: $agentId)\n  }", "metadata": {"commit_hash": "cb7ee7787a2a0ee259216418899710641070d85e", "file": "ui/src/graphql/queries.ts", "repo": "holochain-open-dev_social-triangulation"}}, {"type": "mutation", "name": "JoinNetwork($agentId: ID!)", "content": "{\n    joinNetwork(agentId: $agentId)\n  }", "metadata": {"commit_hash": "cb7ee7787a2a0ee259216418899710641070d85e", "file": "ui/src/graphql/queries.ts", "repo": "holochain-open-dev_social-triangulation"}}, {"type": "mutation", "name": "($addressInput: String!)", "content": "{\n    updateAddress(addressInput: $addressInput) {\n      id\n      name\n      address {\n        id\n        name\n        info\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/address.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "($addressId: String!)", "content": "{\n    deleteAddress(addressId: $addressId) {\n      id\n      name\n      address {\n        id\n        name\n        info\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/address.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "($contactInput: String!)", "content": "{\n    updateContact(contactInput: $contactInput) {\n      id\n      name\n      contact {\n        id\n        type\n        number\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/contact.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "($contactId: String!)", "content": "{\n    deleteContact(contactId: $contactId) {\n      id\n      name\n      contact {\n        id\n        type\n        number\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/contact.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "($orderInput: String!)", "content": "{\n    addOrder(orderInput: $orderInput) {\n      id\n      userId\n      products {\n        id\n        title\n      }\n      status\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/order.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "($paymentInput: String!)", "content": "{\n    charge(paymentInput: $paymentInput) {\n      status\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/order.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "($addressInput: String!)", "content": "{\n    updateAddress(addressInput: $addressInput) {\n      id\n      name\n      address {\n        id\n        name\n        info\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/card.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "($cardId: String!)", "content": "{\n    deletePaymentCard(cardId: $cardId) {\n      id\n      name\n      address {\n        id\n        name\n        info\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/card.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "($meInput: String!)", "content": "{\n    updateMe(meInput: $meInput) {\n      id\n      name\n      email\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/me.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "applyCoupon($code: String!)", "content": "{\n    applyCoupon(code: $code) {\n      id\n      code\n      discountInPercent\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/coupon.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "createCoupon($coupon: AddCouponInput!)", "content": "{\n    createCoupon(coupon: $coupon) {\n      id\n      title\n      code\n      number_of_used_coupon\n      number_of_coupon\n      expiration_date\n      creation_date\n      status\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CampaingForm/CampaingForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "createCategory($category: AddCategoryInput!)", "content": "{\n    createCategory(category: $category) {\n      id\n      name\n      type\n      icon\n      # creation_date\n      slug\n      # number_of_product\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CategoryForm/CategoryForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "createProduct($product: AddProductInput!)", "content": "{\n    createProduct(product: $product) {\n      id\n      name\n      image\n      slug\n      type\n      price\n      unit\n      description\n      salePrice\n      discountInPercent\n      # per_unit\n      quantity\n      # creation_date\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/ProductForm/ProductForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "createStaff($staff: AddStaffInput!)", "content": "{\n    createStaff(staff: $staff) {\n      id\n      first_name\n      last_name\n      name\n      email\n      contact_number\n      creation_date\n      role\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/StaffMemberForm/StaffMemberForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "applyCoupon($code: String!)", "content": "{\n    applyCoupon(code: $code) {\n      id\n      code\n      discountInPercent\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/features/carts/cart.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "applyCoupon($code: String!)", "content": "{\n    applyCoupon(code: $code) {\n      id\n      code\n      discountInPercent\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/features/carts/fixed-cart.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "tryReconnectNow", "content": "{\n    tryReconnect @client\n  }", "metadata": {"commit_hash": "84310c5144bbd0fa4d5e6c70f0c0bfa36e63fb92", "file": "example/src/client.js", "repo": "D1plo1d_graphql-things"}}, {"type": "mutation", "name": "CreateProduct($product: _inputCreateProduct)", "content": "{\n              product: createProduct(input: $product) {\n                id\n                description\n                price,\n                meta\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}}, {"type": "mutation", "name": "UpdateProducts($id: ID, $product: _inputUpdateProduct)", "content": "{\n              product: updateProduct(\n                where: { id: { eq: $id } }\n                input: $product\n              ) {\n               id\n               description\n               price\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}}, {"type": "mutation", "name": "DeleteProducts($id: ID)", "content": "{\n              product: deleteProduct(where: { id: { eq: $id } }) {\n                id\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}}, {"type": "mutation", "name": "CreateProduct(\n              $order: _inputCreateOrder\n              $product: _inputCreateProduct\n            )", "content": "{\n              product: createProduct(input: $product) {\n                id\n                description\n                price\n              }\n              order: createOrder(input: $order) {\n                id\n                description\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}}, {"type": "mutation", "name": "CreateOrderProduct(\n              $orderproduct: _inputCreateOrderproduct\n            )", "content": "{\n              orderproduct: createOrderproduct(input: $orderproduct) {\n                productId\n                orderId\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}}, {"type": "mutation", "name": "OrderProduct($productId: ID, $orderId: ID)", "content": "{\n              deleteOrderproduct(\n                where: {\n                  productId: { eq: $productId }\n                  orderId: { eq: $orderId }\n                }\n              ) {\n                productId\n                orderId\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}}, {"type": "mutation", "name": "restartSite($siteID: ID!)", "content": "{\n\t\trestartSite(id: $siteID) {\n\t\t\tid\n\t\t\tstatus\n\t\t}\n\t}", "metadata": {"commit_hash": "ee3209f61091bab71247ad0db5d00ee28d6723b6", "file": "src/renderer/localClient/mutations.ts", "repo": "getflywheel_local-addon-instant-reload"}}, {"type": "mutation", "name": "($rec_file: Upload!)", "content": "{\n    upload(rec_file: $rec_file) {\n      success\n      message\n      match_id\n    }\n  }", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Upload.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "mutation", "name": "socialMediaLoginGoogle($input: String!)", "content": "{\n    socialMediaLoginGoogle(input: $input) {\n      token\n      user {\n        id\n        userId\n        fullName\n        email\n        bio\n        photo\n        socialIdtoken\n        totalLikes\n      }\n      errors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "setVote($input: VoteInputType!)", "content": "{\n    setVote(input: $input)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "addPost($input: PostInputType!)", "content": "{\n    addPost(input: $input) {\n      id\n      postId\n      slug\n      content\n      cover\n      likes\n      comments\n      user {\n        id\n        fullName\n        photo\n        totalLikes\n      }\n      tags {\n        id\n        tagName\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "addComment($input: CommentInput!)", "content": "{\n    addComment(input: $input) {\n      id\n      commentId\n      message\n      isReply\n      cover\n      likes\n      user {\n        id\n        fullName\n        photo\n        totalLikes\n        createdAt\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "deletePost($post: String!)", "content": "{\n    deletePost(post: $post)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "updateUserPushToken($token: String!)", "content": "{\n    updateUserPushToken(token: $token)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "updateProfileBasic($name: String!, $bio: String)", "content": "{\n    updateProfileBasic(name: $name, bio: $bio)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "isNameDuplicate($name: String!)", "content": "{\n    isNameDuplicate(name: $name)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "addCommunity($input: CommunityInputType!)", "content": "{\n    addCommunity(input: $input) {\n      id\n      name\n      communityId\n      description\n      logo\n      slug\n      cover\n      type\n      category {\n        id\n        name\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "joinCommunity($input: String!)", "content": "{\n    joinCommunity(input: $input)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "leaveCommunity($input: String!)", "content": "{\n    leaveCommunity(input: $input)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "updateCover($input: String!, $cover: String!)", "content": "{\n    updateCover(input: $input, cover: $cover)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "updateLogo($input: String!, $cover: String!)", "content": "{\n    updateLogo(input: $input, cover: $cover)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "updateDescription($desc: String!, $community: String!)", "content": "{\n    updateDescription(desc: $desc, community: $community)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "sendResetAccountPasswordEmail($input: SendResetAccountPasswordEmailInput!)", "content": "{\n    sendResetAccountPasswordEmail(input: $input) {\n      email\n    }\n  }", "metadata": {"commit_hash": "9e343dc90ff483f0c7273a9fa6ad2a30c5aff1a8", "file": "client/components/ForgotPassword.js", "repo": "reactioncommerce_reaction-identity"}}, {"type": "mutation", "name": "createArtist(\n    $artist: ArtistInput!\n  )", "content": "{\n    createArtist(\n      artist: $artist\n    ) {\n      id\n      name\n      members_number\n      stage_map\n      tec_rider\n      kit\n      avatar_image {\n        mimified\n        thumbnail\n      }\n      about\n      country\n      state\n      city\n      songs {\n        id\n        title\n        url\n      }\n      musical_styles {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/mutations/artist.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "updateArtist(\n    $artist_id: ID!\n    $artist: ArtistInput!\n  )", "content": "{\n    updateArtist(\n      artist_id: $artist_id\n      artist: $artist\n    ) {\n      id\n      stage_map\n      tec_rider\n      kit\n      name\n      members_number\n      avatar_image {\n        mimified\n        thumbnail\n      }\n      songs {\n        id\n        url\n        title\n      }\n      about\n      country\n      state\n      city\n      musical_styles {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/mutations/artist.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "createSong($song: SongInput!)", "content": "{\n    createSong(song: $song) {\n      id\n      url\n      title\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/handle-artist/songs.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "($user: ID!, $artist: ID!)", "content": "{\n    followArtist(user: $user, artist: $artist) {\n      id\n      follows {\n        user {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/artist/artists.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "($user: ID!, $artist: ID!)", "content": "{\n    unfollowArtist(user: $user, artist: $artist) {\n      id\n      follows {\n        user {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/artist/artists.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "deleteSong(\n          $song_id: ID!\n        )", "content": "{\n          deleteSong(\n            song_id: $song_id\n          ) {\n            id\n            url\n            title\n            image {\n              mimified\n            }\n          }\n        }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/artist/ArtistController.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "updateSong(\n          $song_id: ID!\n          $song: SongInput!\n        )", "content": "{\n          updateSong(\n            song_id: $song_id\n            song: $song\n          ) {\n            id\n            url\n            title\n            image {\n              mimified\n            }\n          }\n        }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/artist/ArtistController.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "($productor: ProductorInput!)", "content": "{\n    createProductor(productor: $productor) {\n      id\n      name\n      photo\n      musical_styles {\n        id\n        name\n      }\n      location {\n        id\n        state\n        city\n        district\n        country\n        zipcode\n        address\n      }\n      description\n      status\n      cpf\n      cnpj\n      main_phone\n      secondary_phone\n      whatsapp\n      telegram\n      contact_email\n      facebook\n      twitter\n      instagram\n      youtube\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-productor/productor.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "($productor_id: ID!, $productor: ProductorInput!)", "content": "{\n    updateProductor(productor_id: $productor_id, productor: $productor) {\n      id\n      name\n      photo\n      musical_styles {\n        id\n        name\n      }\n      location {\n        id\n        state\n        city\n        district\n        country\n        zipcode\n        address\n      }\n      description\n      status\n      cpf\n      cnpj\n      main_phone\n      secondary_phone\n      whatsapp\n      telegram\n      contact_email\n      facebook\n      twitter\n      instagram\n      youtube\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-productor/productor.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "($location: LocationInput!)", "content": "{\n    createLocation(location: $location) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-productor/productor.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "($id: ID!, $location: LocationInput!)", "content": "{\n    updateLocation(id: $id, location: $location) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-productor/productor.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "($event: EventInput!)", "content": "{\n    createEvent(event: $event) {\n      id\n      name\n      about\n      cover {\n        original\n        thumbnail\n        mimified\n      }\n      photo {\n        original\n        thumbnail\n        mimified\n      }\n      site\n      oportunities\n      event_date\n      end_event_date\n      subscribe_closing_date\n      has_accommodation\n      has_food\n      has_local_transportation\n      has_city_transportation\n      has_money_paid\n      has_interstate_transportation\n      has_international_transportation\n      location {\n        id\n        address\n        number\n        complement\n        city\n        state\n        country\n        zipcode\n      }\n      approved_artists {\n        id\n        user {\n          id\n        }\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n        about\n      }\n      subscribers {\n        id\n        user {\n          id\n        }\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n        about\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-event/event.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "($location: LocationInput!)", "content": "{\n    createLocation(location: $location) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-event/event.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "subscribe($id: String!, $artistID: String!)", "content": "{\n    subscribeEvent(id: $id, artistID: $artistID) {\n      id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n        mimified\n      }\n      photo {\n        mimified\n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event/event.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "unsubscribe($id: String!, $artistID: String!)", "content": "{\n    unsubscribeEvent(id: $id, artistID: $artistID) {\n      id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n        mimified\n      }\n      photo {\n        mimified\n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event/event.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "subscribe($id: String!, $artistID: String!)", "content": "{\n    subscribeEvent(id: $id, artistID: $artistID) {\n       id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers @defer {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists @defer {\n        id\n      }\n      cover @defer {\n       mimified\n      }\n      photo {\n       mimified\n      }\n      productor @defer {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/events/events.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "unsubscribe($id: String!, $artistID: String!)", "content": "{\n    unsubscribeEvent(id: $id, artistID: $artistID) {\n       id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n       mimified \n      }\n      photo {\n       mimified \n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/events/events.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "reproveArtist(\n  $event_id: String!\n  $artist_id: String!\n)", "content": "{\n  reproveArtist(\n    event_id: $event_id\n    artist_id: $artist_id\n  ){\n    ${eventType}\n  }\n}", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event-curatorship/eventCuratorship.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "aproveArtist(\n    $event_id: String!\n    $artist_id: String!\n  )", "content": "{\n    aproveArtist(\n      event_id: $event_id\n      artist_id: $artist_id\n    )\n    {\n      ${eventType}\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event-curatorship/eventCuratorship.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "resetSubscriptionEvent(\n    $event_id: String!\n    $artist_id: String!\n  )", "content": "{\n    resetSubscriptionEvent(\n      event_id: $event_id\n      artist_id: $artist_id\n    )\n    {\n      ${eventType}\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event-curatorship/eventCuratorship.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "createUser(\n    $user: UserInput!\n  )", "content": "{\n    createUser(\n      user: $user\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/components/modals/register/mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "subscribe($id: String!, $artistID: String!)", "content": "{\n    subscribeEvent(id: $id, artistID: $artistID) {\n      id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n        mimified\n      }\n      photo {\n        mimified\n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/components/organisms/subscribe-button/subscribeButton.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "unsubscribe($id: String!, $artistID: String!)", "content": "{\n    unsubscribeEvent(id: $id, artistID: $artistID) {\n      id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n        mimified\n      }\n      photo {\n        mimified\n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/components/organisms/subscribe-button/subscribeButton.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "Authenticate($address: EthereumAddress!, $signature: Signature!)", "content": "{\n    authenticate(request: { address: $address, signature: $signature }) {\n      accessToken\n      refreshToken\n    }\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/authenticate.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}}, {"type": "mutation", "name": "CreateProfile", "content": "{\n    createProfile(\n      request: {\n        handle: \"jptestdev\"\n        profilePictureUri: null\n        followNFTURI: null\n        followModule: null\n      }\n    ) {\n      ... on RelayerResult {\n        txHash\n      }\n      ... on RelayError {\n        reason\n      }\n      __typename\n    }\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/createProfile.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}}, {"type": "mutation", "name": "CreateMirrorTypedData(\n    $profileId: ProfileId!\n    $publicationId: InternalPublicationId!\n  )", "content": "{\n    createMirrorTypedData(\n      request: {\n        profileId: $profileId\n        publicationId: $publicationId\n        referenceModule: { followerOnlyReferenceModule: false }\n      }\n    ) {\n      id\n      expiresAt\n      typedData {\n        types {\n          MirrorWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          profileIdPointed\n          pubIdPointed\n          referenceModule\n          referenceModuleData\n          referenceModuleInitData\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/mirror.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}}, {"type": "mutation", "name": "Refresh($refreshToken: Jwt!)", "content": "{\n    refresh(request: { refreshToken: $refreshToken }) {\n      accessToken\n      refreshToken\n    }\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/refresh.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}}, {"type": "mutation", "name": "getBackupCredentials($providerID: String!)", "content": "{\n\t\t\t  getBackupCredentials(provider_id: $providerID) {\n\t\t\t    config\n\t\t\t  }\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}}, {"type": "mutation", "name": "createBackupSite($siteName: String!, $siteUrl: String!)", "content": "{\n\t\t\t\tcreateBackupSite(name: $siteName, url: $siteUrl) {\n\t\t\t\t\tid\n\t\t\t\t\tuuid\n\t\t\t\t\tpassword\n\t\t\t  }\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}}, {"type": "mutation", "name": "createBackupRepo(\n\t\t\t\t$siteID: Int!,\n\t\t\t\t$providerID: String!,\n\t\t\t\t$repoID: String!\n\t\t\t)", "content": "{\n\t\t\t\tcreateBackupRepo(\n\t\t\t\t\tsite_id: $siteID,\n\t\t\t\t\tprovider_id: $providerID,\n\t\t\t\t\thash: $repoID\n\t\t\t\t) {\n\t\t\t\t\tid\n\t\t\t\t\tsite_id\n\t\t\t\t\tprovider_id\n\t\t\t\t\thash\n\t\t\t\t}\n\t  \t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}}, {"type": "mutation", "name": "deleteBackupRepoRecord($backupSiteID: Int!, $backupRepoID: Int!)", "content": "{\n\t\t\t\tdeleteBackupRepoRecord(\n\t\t\t\t\tsite_id: $backupSiteID,\n\t\t\t\t\tid: $backupRepoID,\n\t\t\t\t) {\n\t\t\t\t\tsuccess\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}}, {"type": "mutation", "name": "createBackupSnapshot($repoID: Int!, $metaData: Mixed)", "content": "{\n\t\t\t\tcreateBackupSnapshot(repo_id: $repoID, config: $metaData) {\n\t\t\t\t\tid\n\t\t\t\t\trepo_id\n\t\t\t\t\thash\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}}, {"type": "mutation", "name": "updateBackupSnapshot($snapshotID: Int!, $resticSnapshotHash: String, $status: String!, $metaData: Mixed)", "content": "{\n\t\t\t\tupdateBackupSnapshot(id: $snapshotID, hash: $resticSnapshotHash, status: $status, config: $metaData) {\n\t\t\t\t\tid\n\t\t\t\t\trepo_id\n\t\t\t\t\thash\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}}, {"type": "mutation", "name": "deleteBackupSnapshotRecord($snapshotID: Int!)", "content": "{\n\t\t\t\tdeleteBackupSnapshotRecord(id: $snapshotID) {\n\t\t\t\t\tsuccess\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}}, {"type": "mutation", "name": "InsertUsers($uuid: String)", "content": "{\n            insert_user(objects: { uuid: $uuid }) {\n              returning {\n                uuid\n              }\n            }\n          }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "functions/src/index.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "deleteUser($uuid: String!)", "content": "{\n    delete_user(where: { uuid: { _eq: $uuid } }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/mutation.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "insertShiftDate($shiftDate: [shiftDate_insert_input!]!)", "content": "{\n    insert_shiftDate(objects: $shiftDate) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/mutation.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "insertShift($shift: [shift_insert_input!]!)", "content": "{\n    insert_shift(objects: $shift) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/mutation.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "updateShift($shift: [shift_insert_input!]!, $shiftId: Int!)", "content": "{\n    delete_shift(where: { id: { _eq: $shiftId } }) {\n      affected_rows\n    }\n    insert_shift(objects: $shift) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/mutation.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "deleteShift($shiftId: Int!)", "content": "{\n    delete_shift(where: { id: { _eq: $shiftId } }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/mutation.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "deleteShiftDate($shiftDateId: Int!)", "content": "{\n    delete_shiftDate(where: { id: { _eq: $shiftDateId } }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/mutation.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "upsertWorkingTimes(\n    $workingTimes: [workingTime_insert_input!]!\n    $employees: [employee_insert_input!]!\n    $deleteEmployeeIds: [Int]!\n    $deleteWorkingTimeIds: [Int]!\n  )", "content": "{\n    insert_workingTime(\n      objects: $workingTimes\n      on_conflict: {\n        constraint: workingTime_pkey\n        update_columns: [timeName, color, startHour, startMinute, endHour, endMinute, isNextDayoff, maxEmployee, minEmployee]\n      }\n    ) {\n      returning {\n        color\n        isNextDayoff\n        maxEmployee\n        minEmployee\n        timeName\n      }\n    }\n    insert_employee(objects: $employees, on_conflict: { constraint: employee_pkey, update_columns: [userId, name, canWorkingIds] }) {\n      returning {\n        name\n        canWorkingIds\n      }\n    }\n    delete_workingTime(where: { id: { _in: $deleteWorkingTimeIds } }) {\n      affected_rows\n    }\n    delete_employee(where: { id: { _in: $deleteEmployeeIds } }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/mutation.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "addUser($name: String, $username: String, $email: String, $password: String, $agreedToTOS: Boolean)", "content": "{\n    addUser (\n      name: $name,\n      username: $username,\n      email: $email, \n      password: $password,\n      agreedToTOS: $agreedToTOS\n    ) {\n      _id\n      email\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "addUserRole($role: String!)", "content": "{\n    addUserRole (role: $role) \n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "editUser($name: String, $username: String, $email: String, $image: String, $userId: String, $carrierType: String, $neighborhood: String, $vehicalTypeId: String, $brand: String, $color: String, $model: String, $plateNumber: String, $valuePerKm: Int)", "content": "{\n    editUser (\n      name: $name,\n      username: $username,\n      email: $email, \n      image: $image,\n      userId: $userId,\n      carrierType: $carrierType,\n      neighborhood: $neighborhood,\n      vehicalTypeId: $vehicalTypeId,\n      brand: $brand,\n      color: $color,\n      model: $model,\n      plateNumber: $plateNumber,\n      valuePerKm: $valuePerKm\n    ) {\n      _id\n      email\n      profile{\n        name \n        carrierType\n        neighborhood\n        vehical {\n          vehicalTypeId\n          brand\n          color\n          model\n          plateNumber\n          valuePerKm\n        }\n      }\n      username\n      roles\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "removeUser($userId: String)", "content": "{\n    removeUser(userId: $userId)\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "addPromotion($discount: Int)", "content": "{\n    addPromotion(discount: $discount) {\n      _id,\n      discount\n      code\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "removePromotion($promotionId: String)", "content": "{\n    removePromotion(promotionId: $promotionId)\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "addNotification($title: String, $detail: String, $role: String)", "content": "{\n    addNotification(title: $title, detail: $detail, role: $role) {\n      _id\n      title\n      type\n      detail\n      role\n      userId\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "addShipment($origin: String, $destination: String, $distance: Float, $description: String, $fromDate: Date, $toDate: Date, $dimensions: dimensionInput, $weight: String)", "content": "{\n    addShipment(origin: $origin, destination: $destination, distance: $distance, description: $description, fromDate: $fromDate, toDate: $toDate, dimensions: $dimensions, weight: $weight) {\n      _id\n      origin {\n        address \n        location {\n          lat\n          lng\n        }\n      }\n      destination {\n        address \n        location {\n          lat\n          lng\n        }\n      }\n      distance\n      description\n      fromDate\n      toDate\n      dimensions {\n        width\n        height\n        length\n      }\n      weight\n      userId\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "updateCarrierStatus($status: Boolean)", "content": "{\n    updateCarrierStatus(status: $status) \n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "addFreightRequestAmount($shipmentId: String, $amount: Int)", "content": "{\n    addFreightRequestAmount(shipmentId: $shipmentId, amount: $amount) \n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "createCodeLevelSubmission($submissionInput: CreateCodeLevelSubmissionInput!)", "content": "{\n          createCodeLevelSubmission(submissionInput: $submissionInput) {\n            submission {\n              id\n              html\n              css\n              js\n            }\n          }\n        }", "metadata": {"commit_hash": "ac847cb1bcda5dce599e5cf206cfb8928e850732", "file": "services/api/tests/service/code-level.spec.ts", "repo": "a11yphant_a11yphant"}}, {"type": "mutation", "name": "requestCodeLevelCheck($requestCheckInput: RequestCodeLevelCheckInput!)", "content": "{\n          requestCodeLevelCheck(requestCheckInput: $requestCheckInput) {\n            result {\n              id\n            }\n          }\n        }", "metadata": {"commit_hash": "ac847cb1bcda5dce599e5cf206cfb8928e850732", "file": "services/api/tests/service/code-level.spec.ts", "repo": "a11yphant_a11yphant"}}, {"type": "mutation", "name": "SubmitNewsItem($title: String!, $url: String)", "content": "{\n    submitNewsItem(title: $title, url: $url) {\n      id\n      ...NewsFeed\n    }\n  }\n  ${newsFeedNewsItemFragment}", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "src/data/mutations/submit-news-item-mutation.ts", "repo": "Superdev0103_react-graph-demo"}}, {"type": "mutation", "name": "HideNewsItem($id: Int!)", "content": "{\n    hideNewsItem(id: $id) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "src/data/mutations/hide-news-item-mutation.ts", "repo": "Superdev0103_react-graph-demo"}}, {"type": "mutation", "name": "UpvoteNewsItem($id: Int!)", "content": "{\n    upvoteNewsItem(id: $id) {\n      id\n      upvoteCount\n      upvoted\n    }\n  }", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "src/data/mutations/upvote-news-item-mutation.ts", "repo": "Superdev0103_react-graph-demo"}}, {"type": "mutation", "name": "CreateStop($name: String!, $latitude: Float!, $longitude: Float!)", "content": "{\n    StopMutation {\n      addStop(station: { name: $name, latitude: $latitude, longitude: $longitude }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "UpdateStop($id: Int!, $name: String!, $latitude: Float!, $longitude: Float!)", "content": "{\n    StopMutation {\n      updateStop(station: { id: $id, name: $name, latitude: $latitude, longitude: $longitude }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "DeleteStop($id: Int!)", "content": "{\n    StopMutation {\n      deleteStop(stationId: $id) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "AddOrder($toStationId: Int!, $priority: String!, $carId: Int!, $arrive: DateTime)", "content": "{\n    OrderMutation {\n      addOrder(\n        order: { carId: $carId, toStationId: $toStationId, priority: $priority, arrive: $arrive }\n      ) {\n        car {\n          name\n        }\n        priority\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "UpdateOrder(\n    $car: Int!\n    $from: Int\n    $id: Int!\n    $status: String!\n    $priority: String!\n    $to: Int!\n    $arrive: DateTime\n  )", "content": "{\n    OrderMutation {\n      updateOrder(\n        order: {\n          carId: $car\n          fromStationId: $from\n          id: $id\n          status: $status\n          priority: $priority\n          toStationId: $to\n          arrive: $arrive\n        }\n      ) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "DeleteOrder($id: Int!)", "content": "{\n    OrderMutation {\n      deleteOrder(orderId: $id) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "UpdateCar(\n    $id: Int!\n    $name: String!\n    $status: String!\n    $companyName: String\n    $hwId: String\n    $carAdminPhone: String\n    $routeId: Int\n    $underTest: Boolean!\n  )", "content": "{\n    CarMutation {\n      updateCar(\n        car: {\n          id: $id\n          name: $name\n          requireNewToken: false\n          status: $status\n          companyName: $companyName\n          button: NORMAL\n          hwId: $hwId\n          underTest: $underTest\n          routeId: $routeId\n          carAdminPhone: $carAdminPhone\n        }\n      ) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "AddCar(\n    $carAdminPhone: String\n    $companyName: String\n    $hwId: String\n    $name: String\n    $routeId: Int\n    $underTest: Boolean!\n  )", "content": "{\n    CarMutation {\n      addCar(\n        car: {\n          carAdminPhone: $carAdminPhone\n          companyName: $companyName\n          hwId: $hwId\n          name: $name\n          routeId: $routeId\n          underTest: $underTest\n        }\n      ) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "DeleteCar($id: Int!)", "content": "{\n    CarMutation {\n      deleteCar(carId: $id) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "AddRoute($color: String, $name: String, $stops: [RouteStopInput])", "content": "{\n    RouteMutation {\n      addRoute(route: { color: $color, name: $name, stops: $stops }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "UpdateRoute($id: Int!, $color: String, $name: String, $stops: [RouteStopUpdateInput])", "content": "{\n    RouteMutation {\n      updateRoute(route: { id: $id, color: $color, name: $name, stops: $stops }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "DeleteRoute($id: Int!)", "content": "{\n    RouteMutation {\n      deleteRoute(routeId: $id) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "productVariantUpdate($input: ProductVariantInput!)", "content": "{\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }", "metadata": {"commit_hash": "431e234a68b01d0d05d27ee18a24c833959a86e5", "file": "pages/edit-products.js", "repo": "IncredibleMaster_shopify-webhook"}}, {"type": "mutation", "name": "CreateUserMutation(\n    $email: String!\n    $password: String!\n    $name: String!\n  )", "content": "{\n    signup(email: $email, password: $password, name: $name) {\n      token\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "868e58e4a19847fd9104e13922229edb96e4dda7", "file": "packages/components/signup-form/signup-form.js", "repo": "dferber90_lovely-webapp"}}, {"type": "mutation", "name": "SubscribeMutation($email: String!)", "content": "{\n    subscribe(email: $email) {\n      email\n    }\n  }", "metadata": {"commit_hash": "868e58e4a19847fd9104e13922229edb96e4dda7", "file": "packages/components/newsletter-subscription-box/newsletter-subscription-box.js", "repo": "dferber90_lovely-webapp"}}, {"type": "mutation", "name": "AuthenticateUserMutation($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "868e58e4a19847fd9104e13922229edb96e4dda7", "file": "packages/components/login-form/login-form.js", "repo": "dferber90_lovely-webapp"}}, {"type": "mutation", "name": "addPost($url: String!, $description: String!)", "content": "{\n    post(url: $url, description: $description) {\n      id\n      description\n    }\n  }", "metadata": {"commit_hash": "868e58e4a19847fd9104e13922229edb96e4dda7", "file": "packages/components/add-post-form/add-post-form.js", "repo": "dferber90_lovely-webapp"}}, {"type": "mutation", "name": "addComment($name: String!, $message: String!)", "content": "{\n    createComment(data: { name: $name, message: $message }) {\n      name\n    }\n  }", "metadata": {"commit_hash": "af4fa7c060cd40c673ed1fc373f216b91cb888d1", "file": "src/pages/guestbook.js", "repo": "netlify_netlify-dev-gatsby-fauna-demo"}}, {"type": "mutation", "name": "($id: ID!, $shipped: Boolean!)", "content": "{\n    shipOrder(id: $id, shipped: $shipped) {\n      id\n      shipped\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REPO/APRESS/pro-react-16/08_-_SportsStore_-_Auth_and_Deployment/sportsstore/src/admin/clientMutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($product: productStore)", "content": "{\n    storeProduct(product: $product) {\n      id\n      name\n      category\n      description\n      price\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REPO/APRESS/pro-react-16/08_-_SportsStore_-_Auth_and_Deployment/sportsstore/src/admin/clientMutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($product: productUpdate)", "content": "{\n    updateProduct(product: $product) {\n      id\n      name\n      category\n      description\n      price\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REPO/APRESS/pro-react-16/08_-_SportsStore_-_Auth_and_Deployment/sportsstore/src/admin/clientMutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteProduct(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REPO/APRESS/pro-react-16/08_-_SportsStore_-_Auth_and_Deployment/sportsstore/src/admin/clientMutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($id: ID!, $shipped: Boolean!)", "content": "{\n    shipOrder(id: $id, shipped: $shipped) {\n      id\n      shipped\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REPO/APRESS/pro-react-16/07_-_SportsStore_-_Admin/sportsstore/src/admin/clientMutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($product: productStore)", "content": "{\n    storeProduct(product: $product) {\n      id\n      name\n      category\n      description\n      price\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REPO/APRESS/pro-react-16/07_-_SportsStore_-_Admin/sportsstore/src/admin/clientMutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($product: productUpdate)", "content": "{\n    updateProduct(product: $product) {\n      id\n      name\n      category\n      description\n      price\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REPO/APRESS/pro-react-16/07_-_SportsStore_-_Admin/sportsstore/src/admin/clientMutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteProduct(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REPO/APRESS/pro-react-16/07_-_SportsStore_-_Admin/sportsstore/src/admin/clientMutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_RESOURCES/awesome-git-user/full-stack-apollo-graphql-tutorial-quakehunter/client/src/pages/login.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createPerson(\n    $email: String!,\n    $name: String!,\n    $picture: String,\n    $headline: String,\n    $currentPosition: String\n  )", "content": "{\n    createPerson(\n      email: $email,\n      name: $name,\n      picture: $picture,\n      headline: $headline\n      currentPosition: $currentPosition\n      ) {\n      ${personFields}\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/persons.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updatePerson(\n    $id: ID!,\n    $email: String,\n    $name: String,\n    $picture: String,\n    $headline: String,\n    $currentPosition: String\n  )", "content": "{\n    updatePerson(\n      id: $id,\n      email: $email,\n      name: $name,\n      picture: $picture,\n      headline: $headline\n      currentPosition: $currentPosition\n      ) {\n      ${personFields}\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/persons.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTag($name: String!, $description: String!)", "content": "{\n    createTag(name: $name, description: $description) {\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setTagOn(\n    $tagName: String!\n    $on: String!\n    $targetType: String!\n    $targetId: ID!\n  )", "content": "{\n    setTagOn(\n      tagName: $tagName\n      on: $on\n      targetType: $targetType\n      targetId: $targetId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setTagParent($tagName: String!, $parentName: String)", "content": "{\n    setTagParent(tagName: $tagName, parentName: $parentName) {\n      tagName\n      parentName\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateTagging($id: ID!, $level: Int, $description: String)", "content": "{\n    updateTagging(id: $id, level: $level, description: $description) {\n      id\n      level\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "usurpUser($input: UsurpUserInputType!)", "content": "{\n    usurpUser(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/argos/src/review/routes/admin/Admin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateGithub($input: CreateGithubInput!, $condition: ModelGithubConditionInput)", "content": "{\n    createGithub(input: $input, condition: $condition) {\n      id\n      datetime\n      repos {\n        id\n        name\n        url\n        stars\n        forks\n      }\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/a-whole-bunch-o-gatsby-templates/lekoarts-stats/.github/actions/pull-push-data/graphql.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateTwitter($input: CreateTwitterInput!, $condition: ModelTwitterConditionInput)", "content": "{\n    createTwitter(input: $input, condition: $condition) {\n      id\n      datetime\n      followers\n      tweets\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/a-whole-bunch-o-gatsby-templates/lekoarts-stats/.github/actions/pull-push-data/graphql.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($input: CreateContributorInput!)", "content": "{\n    createContributor(input: $input) {\n      email\n      github {\n        username\n        contributionCount\n        pullRequests {\n          id\n        }\n      }\n      shopify {\n        id\n        codes {\n          code\n          used\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/a-whole-bunch-o-gatsby-templates/store.gatsbyjs.org/src/components/ContributorArea/ContentForContributorWithNoAccount.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($user: String!)", "content": "{\n            updateContributorTags(githubUsername: $user) {\n              email\n              github {\n                username\n                contributionCount\n                pullRequests {\n                  id\n                }\n              }\n              shopify {\n                id\n                codes {\n                  code\n                  used\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/a-whole-bunch-o-gatsby-templates/store.gatsbyjs.org/src/components/Layout/Layout.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTweet(\n    $tweet: String,\n    $author: String,\n    $createdAt: DateTime\n  )", "content": "{\n    createTweet(\n      tweet: $tweet,\n      author: $author,\n      createdAt: $createdAt\n\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/React_Notes_V3/React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteTweet($_id: String!)", "content": "{\n    deleteTweet(\n      _id: $_id\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/React_Notes_V3/React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateTweet(\n    $_id: String!,\n    $tweet: String!\n  )", "content": "{\n    updateTweet(\n      _id: $_id,\n      tweet: $tweet\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/React_Notes_V3/React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignUpMutation($email: String!, $password: String!)", "content": "{\n    signUp(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/api-routes-apollo-server-and-client-auth/pages/signup.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignInMutation($email: String!, $password: String!)", "content": "{\n    signIn(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/api-routes-apollo-server-and-client-auth/pages/signin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignOutMutation", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/api-routes-apollo-server-and-client-auth/pages/signout.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/with-apollo-and-redux/components/Submit.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "votePost($id: String!)", "content": "{\n    votePost(id: $id) {\n      __typename\n      id\n      votes\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/with-apollo-and-redux/components/PostUpvoter.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "insertItem($item: items_insert_input!)", "content": "{\n    insert_items_one(object: $item) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/with-nhost-auth-realtime-graphql/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteItem($item_id: uuid!)", "content": "{\n    delete_items_by_pk(id: $item_id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/with-nhost-auth-realtime-graphql/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/with-apollo/components/Submit.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "votePost($id: String!)", "content": "{\n    votePost(id: $id) {\n      id\n      votes\n      __typename\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/with-apollo/components/PostUpvoter.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignUpMutation($email: String!, $password: String!)", "content": "{\n    signUp(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/api-routes-apollo-server-and-client-auth/pages/signup.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignInMutation($email: String!, $password: String!)", "content": "{\n    signIn(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/api-routes-apollo-server-and-client-auth/pages/signin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignOutMutation", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/api-routes-apollo-server-and-client-auth/pages/signout.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo-and-redux/components/Submit.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "votePost($id: String!)", "content": "{\n    votePost(id: $id) {\n      __typename\n      id\n      votes\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo-and-redux/components/PostUpvoter.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "insertItem($item: items_insert_input!)", "content": "{\n    insert_items_one(object: $item) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-nhost-auth-realtime-graphql/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteItem($item_id: uuid!)", "content": "{\n    delete_items_by_pk(id: $item_id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-nhost-auth-realtime-graphql/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo/components/Submit.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "votePost($id: String!)", "content": "{\n    votePost(id: $id) {\n      id\n      votes\n      __typename\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo/components/PostUpvoter.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTweet(\n    $tweet: String,\n    $author: String,\n    $createdAt: DateTime\n  )", "content": "{\n    createTweet(\n      tweet: $tweet,\n      author: $author,\n      createdAt: $createdAt\n\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/React-Cookbook/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteTweet($_id: String!)", "content": "{\n    deleteTweet(\n      _id: $_id\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/React-Cookbook/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateTweet(\n    $_id: String!,\n    $tweet: String!\n  )", "content": "{\n    updateTweet(\n      _id: $_id,\n      tweet: $tweet\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/React-Cookbook/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "saveUserCommunityPermissions(\n    $input: SaveUserCommunityPermissionsInput!\n  )", "content": "{\n    saveUserCommunityPermissions(input: $input) {\n      ...userInfo\n      ...userCommunities\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunitiesFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/admin/src/api/mutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "uploadImage($input: UploadImageInput!)", "content": "{\n    uploadImage(input: $input)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/uploadImage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "markDirectMessageNotificationsSeen", "content": "{\n    markDirectMessageNotificationsSeen\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/notification/markDirectMessageNotificationsSeen.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "markSingleNotificationSeen($id: ID!)", "content": "{\n    markSingleNotificationSeen(id: $id)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/notification/markSingleNotificationSeen.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "markAllNotificationsSeen", "content": "{\n    markAllNotificationsSeen\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/notification/markNotificationsSeen.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "approvePendingCommunityMember(\n    $input: ApprovePendingCommunityMemberInput!\n  )", "content": "{\n    approvePendingCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/approvePendingCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addCommunityModerator($input: AddCommunityModeratorInput!)", "content": "{\n    addCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityModerator.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "removeCommunityMember($input: RemoveCommunityMemberInput!)", "content": "{\n    removeCommunityMember(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/removeCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "blockPendingCommunityMember(\n    $input: BlockPendingCommunityMemberInput!\n  )", "content": "{\n    blockPendingCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/blockPendingCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addCommunityMemberWithToken(\n    $input: AddCommunityMemberWithTokenInput!\n  )", "content": "{\n    addCommunityMemberWithToken(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityMemberWithToken.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "removeCommunityModerator($input: RemoveCommunityModeratorInput!)", "content": "{\n    removeCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/removeCommunityModerator.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addPendingCommunityMember($input: AddPendingCommunityMemberInput!)", "content": "{\n    addPendingCommunityMember(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/addPendingCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addCommunityMember($input: AddCommunityMemberInput!)", "content": "{\n    addCommunityMember(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "blockCommunityMember($input: BlockCommunityMemberInput!)", "content": "{\n    blockCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/blockCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "removePendingCommunityMember(\n    $input: RemovePendingCommunityMemberInput!\n  )", "content": "{\n    removePendingCommunityMember(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/removePendingCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addCommunityMembers($input: AddCommunityMembersInput!)", "content": "{\n    addCommunityMembers(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityMembers.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "unblockCommunityMember($input: UnblockCommunityMemberInput!)", "content": "{\n    unblockCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/unblockCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setThreadLock($threadId: ID!, $value: Boolean!)", "content": "{\n    setThreadLock(threadId: $threadId, value: $value) {\n      id\n      isLocked\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/lockThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "toggleThreadNotifications($threadId: ID!)", "content": "{\n    toggleThreadNotifications(threadId: $threadId) {\n      id\n      receiveNotifications\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/toggleThreadNotifications.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "editThread($input: EditThreadInput!)", "content": "{\n    editThread(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/editThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addThreadReaction($input: AddThreadReactionInput!)", "content": "{\n    addThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/addThreadReaction.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteThread($threadId: ID!)", "content": "{\n    deleteThread(threadId: $threadId)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/deleteThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "publishThread($thread: ThreadInput!)", "content": "{\n    publishThread(thread: $thread) {\n      ...threadInfo\n      channel {\n        id\n        slug\n        community {\n          id\n          slug\n        }\n      }\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/publishThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "moveThread($threadId: ID!, $channelId: ID!)", "content": "{\n    moveThread(threadId: $threadId, channelId: $channelId) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/moveThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "removeThreadReaction($input: RemoveThreadReactionInput!)", "content": "{\n    removeThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/removeThreadReaction.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "disableChannelTokenJoin($input: DisableChannelTokenJoinInput!)", "content": "{\n    disableChannelTokenJoin(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/disableChannelTokenJoin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteChannel($channelId: ID!)", "content": "{\n    deleteChannel(channelId: $channelId)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/deleteChannel.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "toggleChannelNotifications($channelId: ID!)", "content": "{\n    toggleChannelNotifications(channelId: $channelId) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/toggleChannelNotifications.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateSlackSettings($input: UpdateSlackSettingsInput!)", "content": "{\n    updateSlackSettings(input: $input) {\n      ...channelInfo\n      slackSettings {\n        botLinks {\n          eventType\n          slackChannelId\n        }\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/updateSlackSettings.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "archiveChannel($input: ArchiveChannelInput!)", "content": "{\n    archiveChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/archiveChannel.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "resetChannelJoinToken($input: ResetChannelJoinTokenInput!)", "content": "{\n    resetChannelJoinToken(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/resetChannelJoinToken.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createChannel($input: CreateChannelInput!)", "content": "{\n    createChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/createChannel.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "togglePendingUser($input: TogglePendingUserInput!)", "content": "{\n    togglePendingUser(input: $input) {\n      ...channelInfo\n      pendingUsers {\n        ...userInfo\n      }\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${channelInfoFragment}\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/toggleChannelPendingUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "joinChannelWithToken($input: JoinChannelWithTokenInput!)", "content": "{\n    joinChannelWithToken(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/joinChannelWithToken.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "unblockUser($input: UnblockUserInput!)", "content": "{\n    unblockUser(input: $input) {\n      ...channelInfo\n      pendingUsers {\n        ...userInfo\n      }\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${channelInfoFragment}\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/unblockChannelBlockedUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateChannelSlackBotLinks($input: UpdateChannelSlackBotLinksInput)", "content": "{\n    updateChannelSlackBotLinks(input: $input) {\n      ...channelInfo\n      slackSettings {\n        botLinks {\n          threadCreated\n        }\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/updateChannelSlackBotLinks.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "enableChannelTokenJoin($input: EnableChannelTokenJoinInput!)", "content": "{\n    enableChannelTokenJoin(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/enableChannelTokenJoin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "toggleChannelSubscription($channelId: ID!)", "content": "{\n    toggleChannelSubscription(channelId: $channelId) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/toggleChannelSubscription.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "editChannel($input: EditChannelInput!)", "content": "{\n    editChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/editChannel.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "restoreChannel($input: RestoreChannelInput!)", "content": "{\n    restoreChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/restoreChannel.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "sendSlackInvites($input: SendSlackInvitesInput!)", "content": "{\n    sendSlackInvites(input: $input) {\n      ...communityInfo\n      slackSettings {\n        teamName\n        isConnected\n        hasSentInvites\n        memberCount\n        invitesSentAt\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/sendSlackInvites.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "saveBrandedLoginSettings($input: SaveBrandedLoginSettingsInput!)", "content": "{\n    saveBrandedLoginSettings(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/saveBrandedLoginSettings.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "enableCommunityWatercooler(\n    $input: EnableCommunityWatercoolerInput!\n  )", "content": "{\n    enableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/enableCommunityWatercooler.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "resetCommunityJoinToken($input: ResetCommunityJoinTokenInput!)", "content": "{\n    resetCommunityJoinToken(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/resetCommunityJoinToken.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateAdministratorEmail($input: UpdateAdministratorEmailInput!)", "content": "{\n    updateAdministratorEmail(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/updateAdministratorEmail.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setCommunityLastSeen($input: SetCommunityLastSeenInput!)", "content": "{\n    setCommunityLastSeen(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/setCommunityLastSeen.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "enableCommunityTokenJoin($input: EnableCommunityTokenJoinInput!)", "content": "{\n    enableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/enableCommunityTokenJoin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "disableCommunityTokenJoin($input: DisableCommunityTokenJoinInput!)", "content": "{\n    disableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/disableCommunityTokenJoin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "pinThread($threadId: ID!, $communityId: ID!, $value: String)", "content": "{\n    pinThread(threadId: $threadId, communityId: $communityId, value: $value) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/pinCommunityThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "sendEmailInvites($input: EmailInvitesInput!)", "content": "{\n    sendEmailInvites(input: $input)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/sendCommunityEmailInvites.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createCommunity($input: CreateCommunityInput!)", "content": "{\n    createCommunity(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/createCommunity.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "disableBrandedLogin($input: DisableBrandedLoginInput!)", "content": "{\n    disableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/disableBrandedLogin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "toggleCommunityNoindex($communityId: ID!)", "content": "{\n    toggleCommunityNoindex(communityId: $communityId) {\n      id\n      slug\n      noindex\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/toggleCommunityNoindex.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteCommunity($communityId: ID!)", "content": "{\n    deleteCommunity(communityId: $communityId)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/deleteCommunity.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "editCommunity($input: EditCommunityInput!)", "content": "{\n    editCommunity(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/editCommunity.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "enableBrandedLogin($input: EnableBrandedLoginInput!)", "content": "{\n    enableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/enableBrandedLogin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "disableCommunityWatercooler(\n    $input: DisableCommunityWatercoolerInput!\n  )", "content": "{\n    disableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/disableCommunityWatercooler.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "toggleCommunityRedirect($communityId: ID!)", "content": "{\n    toggleCommunityRedirect(communityId: $communityId) {\n      id\n      slug\n      redirect\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/toggleCommunityRedirect.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "banUser($input: BanUserInput!)", "content": "{\n    banUser(input: $input)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/user/banUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "toggleNotificationSettings($input: ToggleNotificationSettingsInput)", "content": "{\n    toggleNotificationSettings(input: $input) {\n      ...userInfo\n      ...userSettings\n    }\n  }\n  ${userInfoFragment}\n  ${userSettingsFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/user/toggleUserNotificationSettings.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateUserEmail($email: LowercaseString!)", "content": "{\n    updateUserEmail(email: $email) {\n      ...userInfo\n      email\n      pendingEmail\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/user/updateUserEmail.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteCurrentUser", "content": "{\n    deleteCurrentUser\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/user/deleteCurrentUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "editUser($input: EditUserInput!)", "content": "{\n    editUser(input: $input) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/user/editUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "reportUser($input: ReportUserInput!)", "content": "{\n    reportUser(input: $input)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/user/reportUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setLastSeen($id: ID!)", "content": "{\n    setLastSeen(id: $id) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/directMessageThread/setDMThreadLastSeen.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createDirectMessageThread($input: DirectMessageThreadInput!)", "content": "{\n    createDirectMessageThread(input: $input) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/directMessageThread/createDirectMessageThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "editMessage($input: EditMessageInput!)", "content": "{\n    editMessage(input: $input) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/message/editMessage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteMessage($id: ID!)", "content": "{\n    deleteMessage(id: $id)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/message/deleteMessage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "sendMessage($message: MessageInput!)", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/message/sendMessage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "sendDirectMessage($message: MessageInput!)", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/message/sendDirectMessage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "toggleReaction($reaction: ReactionInput!)", "content": "{\n    toggleReaction(reaction: $reaction) {\n      ...messageInfo\n      __typename\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/reaction/toggleReaction.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "subscribeToWebPush($subscription: WebPushSubscription!)", "content": "{\n    subscribeWebPush(subscription: $subscription)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreatePortfolio(\n    $title: String\n    $company: String\n    $companyWebsite: String\n    $location: String\n    $jobTitle: String\n    $description: String\n    $startDate: String\n    $endDate: String\n  )", "content": "{\n    createPortfolio(\n      input: {\n        title: $title\n        company: $company\n        companyWebsite: $companyWebsite\n        location: $location\n        jobTitle: $jobTitle\n        description: $description\n        startDate: $startDate\n        endDate: $endDate\n      }\n    ) {\n      _id\n      title\n      company\n      companyWebsite\n      location\n      jobTitle\n      description\n      startDate\n      endDate\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdatePortfolio(\n    $id: ID\n    $title: String\n    $company: String\n    $companyWebsite: String\n    $location: String\n    $jobTitle: String\n    $description: String\n    $startDate: String\n    $endDate: String\n  )", "content": "{\n    updatePortfolio(\n      id: $id\n      input: {\n        title: $title\n        company: $company\n        companyWebsite: $companyWebsite\n        location: $location\n        jobTitle: $jobTitle\n        description: $description\n        startDate: $startDate\n        endDate: $endDate\n      }\n    ) {\n      _id\n      title\n      company\n      companyWebsite\n      location\n      jobTitle\n      description\n      startDate\n      endDate\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "DeletePortfolio($id: ID)", "content": "{\n    deletePortfolio(id: $id)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignUp(\n    $avatar: String\n    $username: String!\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n  )", "content": "{\n    signUp(\n      input: {\n        avatar: $avatar\n        username: $username\n        email: $email\n        password: $password\n        passwordConfirmation: $passwordConfirmation\n      }\n    )\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignIn($email: String!, $password: String!)", "content": "{\n    signIn(input: { email: $email, password: $password }) {\n      _id\n      username\n      role\n      avatar\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateTopic(\n    $title: String\n    $content: String\n    $forumCategory: String\n  )", "content": "{\n    createTopic(input:{\n      title: $title,\n      content: $content\n      forumCategory: $forumCategory\n    }){\n      ${topicResponse}\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreatePost(\n    $content: String\n    $topic: String\n    $parent: String\n  )", "content": "{\n    createPost(input: {\n      content: $content\n      topic: $topic\n      parent: $parent\n    }) {\n      ${postResponse}\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n    createPost(input: $input) {\n      id\n      title\n      body\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/serverless-components-gql/client/src/components/AddPost.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "AuthenticateUserMutation ($email: String!, $password: String!)", "content": "{ \n    authenticateUser(email: $email, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-email-and-apollo/src/components/LoginUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreatePostMutation ($description: String!, $imageUrl: String!, $authorId: ID!)", "content": "{\n    createPost(description: $description, imageUrl: $imageUrl, authorId: $authorId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-email-and-apollo/src/components/CreatePost.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignupUserMutation ($email: String!, $password: String!, $name: String)", "content": "{\n    signupUser(email: $email, password: $password, name: $name) {\n      id\n      token\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-email-and-apollo/src/components/CreateUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createLocationAndTraveller($name: String!, $latitude: Float!, $longitude: Float!)", "content": "{\n        createLocation(latitude: $latitude, longitude: $longitude, traveller: {\n            name: $name\n        }) {\n            id\n            latitude\n            longitude\n            traveller {\n                id\n                name\n            }\n        }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/WorldChat.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateLocation($locationId: ID!, $latitude: Float!, $longitude: Float!)", "content": "{\n    updateLocation(id: $locationId, latitude: $latitude, longitude: $longitude) {\n      traveller {\n        id\n        name\n      }\n      id\n      latitude\n      longitude\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/WorldChat.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createMessage($text: String!, $sentById: ID!)", "content": "{\n    createMessage(text: $text, sentById: $sentById) {\n      id\n      text\n      createdAt\n      sentBy {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/Chat.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreatePost ($description: String!, $imageUrl: String!, $authorId: ID!)", "content": "{\n    createPost(description: $description, imageUrl: $imageUrl, authorId: $authorId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-facebook-and-apollo/src/components/CreatePost.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "AuthenticateUserMutation($facebookToken: String!)", "content": "{\n    authenticateUser(facebookToken: $facebookToken) {\n      token\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-facebook-and-apollo/src/components/App.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreatePostMutation($description: String!, $imageUrl: String!)", "content": "{\n    createPost(description: $description, imageUrl: $imageUrl) {\n      id\n      description\n      imageUrl\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/quickstart-with-apollo/src/components/CreatePage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "DeletePostMutation($id: ID!)", "content": "{\n    deletePost(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/quickstart-with-apollo/src/components/DetailPage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addPost($description: String!, $imageUrl: String!)", "content": "{\n    createPost(description: $description, imageUrl: $imageUrl) {\n      id\n      description\n      imageUrl\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-instagram/src/components/CreatePage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deletePost($id: ID!)", "content": "{\n    deletePost(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-instagram/src/components/Post.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createResolution($name: String!)", "content": "{\n    createResolution(name: $name) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/graphql-list/imports/ui/ResolutionForm.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createGoal($name: String!, $resolutionId: String!)", "content": "{\n    createGoal(name: $name, resolutionId: $resolutionId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/graphql-list/imports/ui/GoalForm.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "toggleGoal($id: String!)", "content": "{\n    toggleGoal(_id: $id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/graphql-list/imports/ui/resolutions/Goal.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UploadImage($input: ImageInput!)", "content": "{\n    uploadImage(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/cloudinary-upload-prisma2/client/src/Uploader.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "AddMessage($body: String!, $title: String!, $author: String!)", "content": "{\n    addMessage(body: $body, title: $title, author: $author) {\n      author\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql-starter/client/src/AddMessage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateRef($input: UpdateRefInput!)", "content": "{\n    updateRef(input: $input) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n  }\n  ${fragments.branch}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteRef($deleteRefInput: DeleteRefInput!)", "content": "{\n    ${deleteRefMutationPart}\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "closePullRequestAndDeleteBranch($closePullRequestInput: ClosePullRequestInput!)", "content": "{\n    ${closePullRequestMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "closePullRequestAndDeleteBranch(\n    $closePullRequestInput: ClosePullRequestInput!\n    $deleteRefInput: DeleteRefInput!\n  )", "content": "{\n    ${closePullRequestMutationPart}\n    ${deleteRefMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createPullRequest($createPullRequestInput: CreatePullRequestInput!)", "content": "{\n    ${createPullRequestMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createBranch($createRefInput: CreateRefInput!)", "content": "{\n    createRef(input: $createRefInput) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n  }\n  ${fragments.branch}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createBranchAndPullRequest(\n    $createRefInput: CreateRefInput!\n    $createPullRequestInput: CreatePullRequestInput!\n  )", "content": "{\n    createRef(input: $createRefInput) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n    ${createPullRequestMutationPart}\n  }\n  ${fragments.branch}\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "reopenPullRequest($reopenPullRequestInput: ReopenPullRequestInput!)", "content": "{\n    reopenPullRequest(input: $reopenPullRequestInput) {\n      clientMutationId\n      pullRequest {\n        ...PullRequestParts\n      }\n    }\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateUser($data: UserInput!)", "content": "{\n      createUser(data: $data) {\n        name\n        email\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/whoswho/src/api/graphql/queries/User.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setName", "content": "{\n          name\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/ObservableQuery.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate($listId: ID!)", "content": "{\n          makeListPrivate(id: $listId)\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(input: { id: \"5\" }) {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\") {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n        makeListPrivate(id: \"5\") {\n          id\n          isPrivate\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName($id: ID!)", "content": "{\n          changeAuthorName(newName: \"Jack Smith\", id: $id) {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "upVote($id: ID!)", "content": "{\n          upvote(id: $id) {\n            success\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo($text: String)", "content": "{\n        createTodo(text: $text) {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n      submitComment(\n        repoFullName: $repoFullName\n        commentContent: $commentContent\n      ) {\n        postedBy {\n          login\n          html_url\n        }\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setCompleted", "content": "{\n        setCompleted(todoId: \"3\") {\n          id\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "upload($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          name\n          # missing field: description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Reset", "content": "{\n        reset {\n          echo\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($a: Int!, $b: Int, $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($a: Int = 1, $b: String = \"cheese\", $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($a: Int!, $b: Int, $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Int!)", "content": "{\n            mut(inline: 5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Float!)", "content": "{\n            mut(inline: 5.5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: String!)", "content": "{\n            mut(inline: \"abc\", variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Array!)", "content": "{\n            mut(inline: [1, 2], variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Object!)", "content": "{\n            mut(inline: { a: 1 }, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Boolean!)", "content": "{\n            mut(inline: true, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "some_mutation($nil: ID, $in: Object)", "content": "{\n        some_mutation(\n          input: {\n            id: \"5\"\n            arr: [1, { a: \"b\" }]\n            obj: { a: \"b\" }\n            num: 5.5\n            nil: $nil\n            bo: true\n          }\n        ) {\n          id\n        }\n        some_mutation_with_variables(input: $in) {\n          id\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Directive", "content": "{\n        mutate {\n          field {\n            subField {\n              hello @live\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "nameOfMutation", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "complexStuff(\n          $test: Input =", "content": "{ key1: [\"value\", \"value2\"], key2: { key3: 4 } }\n        ) {\n          complexStuff(test: $test) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setName", "content": "{\n          name\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/ObservableQuery.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateName($id: ID!, $firstName: String!)", "content": "{\n    updateName(id: $id, firstName: $firstName) {\n      __typename\n      id\n      firstName\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/fetchPolicies.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate($listId: ID!)", "content": "{\n          makeListPrivate(id: $listId)\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(input: { id: \"5\" }) {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\") {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n        makeListPrivate(id: \"5\") {\n          id\n          isPrivate\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName($id: ID!)", "content": "{\n          changeAuthorName(newName: \"Jack Smith\", id: $id) {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\") {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "upVote($id: ID!)", "content": "{\n          upvote(id: $id) {\n            success\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          __typename\n          id\n          todos {\n            id\n            text\n            completed\n            __typename\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo($text: String)", "content": "{\n        createTodo(text: $text) {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n      submitComment(\n        repoFullName: $repoFullName\n        commentContent: $commentContent\n      ) {\n        postedBy {\n          login\n          html_url\n        }\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setCompleted", "content": "{\n        setCompleted(todoId: \"3\") {\n          id\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "upload($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          name\n          # missing field: description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Reset", "content": "{\n        reset {\n          echo\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($a: Int!, $b: Int, $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($a: Int = 1, $b: String = \"cheese\", $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($a: Int!, $b: Int, $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Int!)", "content": "{\n            mut(inline: 5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Float!)", "content": "{\n            mut(inline: 5.5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: String!)", "content": "{\n            mut(inline: \"abc\", variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Array!)", "content": "{\n            mut(inline: [1, 2], variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Object!)", "content": "{\n            mut(inline: { a: 1 }, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "mut($in: Boolean!)", "content": "{\n            mut(inline: true, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "some_mutation($nil: ID, $in: Object)", "content": "{\n        some_mutation(\n          input: {\n            id: \"5\"\n            arr: [1, { a: \"b\" }]\n            obj: { a: \"b\" }\n            num: 5.5\n            nil: $nil\n            bo: true\n          }\n        ) {\n          id\n        }\n        some_mutation_with_variables(input: $in) {\n          id\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Directive", "content": "{\n        mutate {\n          field {\n            subField {\n              hello @live\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "nameOfMutation", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "complexStuff(\n          $test: Input =", "content": "{ key1: [\"value\", \"value2\"], key2: { key3: 4 } }\n        ) {\n          complexStuff(test: $test) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/SidePane/Menu/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdateUser($email: String, $password: String, $firstName: String, $lastName: String)", "content": "{\n    updateUser(email: $email, password: $password, firstName: $firstName, lastName: $lastName) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/Profile/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateMessage($id: String, $message: String)", "content": "{\n    createMessage(id: $id, message: $message) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/Find/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateMessage($id: String, $message: String)", "content": "{\n    createMessage(id: $id, message: $message) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/Messages/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/LandingPage/Form/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/LandingPage/Form/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Signup($firstName: String! $lastName: String! $email: String! $password: String!)", "content": "{\n    signup(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/LandingPage/Form/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addUser($email: String!, $password: String!)", "content": "{\n    addUser(email: $email, password: $password) {\n      email\n      password\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_RESOURCES/awesome-git-user/v8-bears-team-06/client/components/SignUpBox.jsx", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "AddMessage($id: ID! $post: String!)", "content": "{\n    createPost(id: $id post: $post) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/DashboardView/TextInput.tsx", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createConversation(\n    $name: String\n    $participantIds: [ID!]!\n    $text: String\n  )", "content": "{\n    createConversation(\n      name: $name\n      participantIds: $participantIds\n      text: $text\n    ) {\n      id\n      name\n      participants {\n        id\n        username\n      }\n      texts {\n        id\n        text\n        createdAt\n        author {\n          id\n          username\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "27327705aff1ce63cab00c125c8b4f760df39789", "file": "client/graphql/mutations/createConversation.js", "repo": "greatWall627_chatting-pro"}}, {"type": "mutation", "name": "signup($username: String!)", "content": "{\n    signup(username: $username) {\n      token\n      user {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "27327705aff1ce63cab00c125c8b4f760df39789", "file": "client/graphql/mutations/signup.js", "repo": "greatWall627_chatting-pro"}}, {"type": "mutation", "name": "sendTextMessage($conversationId: ID!, $text: String!)", "content": "{\n    sendTextMessage(conversationId: $conversationId, text: $text) {\n      id\n      text\n    }\n  }", "metadata": {"commit_hash": "27327705aff1ce63cab00c125c8b4f760df39789", "file": "client/graphql/mutations/sendTextMessage.js", "repo": "greatWall627_chatting-pro"}}, {"type": "mutation", "name": "createInvite($invite: InviteInput!)", "content": "{\n          createInvite(invite: $invite) {\n            hash\n          }\n        }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/Home.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "sendReply($contactId: String!, $message: String!)", "content": "{\n        sendReply(id: $contactId, message: $message) {\n          id\n          messages {\n            text\n            isFromContact\n          }\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminReplySender.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "createOptOut($optOut: OptOutInput!, $campaignContactId: String!)", "content": "{\n        createOptOut(optOut: $optOut, campaignContactId: $campaignContactId) {\n          id\n          optOut {\n            id\n            createdAt\n          }\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AssignmentTexterContact.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "editCampaignContactMessageStatus($messageStatus: String!, $campaignContactId: String!)", "content": "{\n        editCampaignContactMessageStatus(messageStatus:$messageStatus, campaignContactId: $campaignContactId) {\n          id\n          messageStatus\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AssignmentTexterContact.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "deleteQuestionResponses($interactionStepIds:[String], $campaignContactId: String!)", "content": "{\n        deleteQuestionResponses(interactionStepIds: $interactionStepIds, campaignContactId: $campaignContactId) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AssignmentTexterContact.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "updateQuestionResponses($questionResponses:[QuestionResponseInput], $campaignContactId: String!)", "content": "{\n        updateQuestionResponses(questionResponses: $questionResponses, campaignContactId: $campaignContactId) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AssignmentTexterContact.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "sendMessage($message: MessageInput!, $campaignContactId: String!)", "content": "{\n        sendMessage(message: $message, campaignContactId: $campaignContactId) {\n          id\n          messageStatus\n          messages {\n            id\n            createdAt\n            text\n            isFromContact\n          }\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AssignmentTexterContact.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "bulkSendMessages($assignmentId: Int!)", "content": "{\n        bulkSendMessages(assignmentId: $assignmentId) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AssignmentTexterContact.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "joinOrganization($organizationUuid: String!)", "content": "{\n        joinOrganization(organizationUuid: $organizationUuid) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/JoinTeam.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "assignUserToCampaign($organizationUuid: String!, $campaignId: String!)", "content": "{\n        assignUserToCampaign(organizationUuid: $organizationUuid, campaignId: $campaignId) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/JoinTeam.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "createBlankCampaign($campaign: CampaignInput!)", "content": "{\n        createCampaign(campaign: $campaign) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "editQuestionResponse($questionResponse: QuestionResponseInput!)", "content": "{\n        editQuestionResponse(questionResponse: $questionResponse) {\n          id\n          value\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AssignmentTexterSurveyDropdown.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "archiveCampaign($campaignId: String!)", "content": "{\n      archiveCampaign(id: $campaignId) {\n        id\n        isArchived\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignStats.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "unarchiveCampaign($campaignId: String!)", "content": "{\n      unarchiveCampaign(id: $campaignId) {\n        id\n        isArchived\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignStats.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "exportCampaign($campaignId: String!)", "content": "{\n      exportCampaign(id: $campaignId) {\n        id\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignStats.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "copyCampaign($campaignId: String!)", "content": "{\n      copyCampaign(id: $campaignId){\n       id\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignStats.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "userAgreeTerms($userId: String!)", "content": "{\n          userAgreeTerms(userId: $userId) {\n            id\n            terms\n          }\n        }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/Terms.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "editUser($organizationId: String!, $userId: Int!, $userData: UserInput)", "content": "{\n          editUser(organizationId: $organizationId, userId: $userId, userData: $userData) {\n            id,\n            firstName,\n            lastName,\n            cell,\n            email\n          }\n        }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/UserEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "archiveCampaign($campaignId: String!)", "content": "{\n          archiveCampaign(id: $campaignId) {\n            ${campaignInfoFragment}\n          }\n        }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "unarchiveCampaign($campaignId: String!)", "content": "{\n        unarchiveCampaign(id: $campaignId) {\n          ${campaignInfoFragment}\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "startCampaign($campaignId: String!)", "content": "{\n        startCampaign(id: $campaignId) {\n          ${campaignInfoFragment}\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "editCampaign($campaignId: String!, $campaign: CampaignInput!)", "content": "{\n        editCampaign(id: $campaignId, campaign: $campaign) {\n          ${campaignInfoFragment}\n        }\n      },", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "deleteJob($campaignId: String!, $id: String!)", "content": "{\n        deleteJob(campaignId: $campaignId, id: $id) {\n          id\n        }\n      },", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "editOrganizationRoles($organizationId: String!, $userId: String!, $roles: [String])", "content": "{\n        editOrganizationRoles(organizationId: $organizationId, userId: $userId, roles: $roles) {\n          ${organizationFragment}\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminPersonList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "findNewCampaignContact($assignmentId: String!, $numberContacts: Int!)", "content": "{\n        findNewCampaignContact(assignmentId: $assignmentId, numberContacts: $numberContacts) {\n          found\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/TexterTodo.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "updateTextingHours($textingHoursStart: Int!, $textingHoursEnd: Int!, $organizationId: String!)", "content": "{\n        updateTextingHours(textingHoursStart: $textingHoursStart, textingHoursEnd: $textingHoursEnd, organizationId: $organizationId) {\n          id\n          textingHoursEnforced\n          textingHoursStart\n          textingHoursEnd\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/Settings.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "updateTextingHoursEnforcement($textingHoursEnforced: Boolean!, $organizationId: String!)", "content": "{\n        updateTextingHoursEnforcement(textingHoursEnforced: $textingHoursEnforced, organizationId: $organizationId) {\n          id\n          textingHoursEnforced\n          textingHoursStart\n          textingHoursEnd\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/Settings.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "archiveCampaign($campaignId: String!)", "content": "{\n          archiveCampaign(id: $campaignId) {\n            ${campaignInfoFragment}\n          }\n        }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/CampaignList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "unarchiveCampaign($campaignId: String!)", "content": "{\n        unarchiveCampaign(id: $campaignId) {\n          ${campaignInfoFragment}\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/CampaignList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "reassignCampaignContacts(\n        $organizationId: String!\n        $campaignIdsContactIds: [CampaignIdContactId]!\n        $newTexterUserId: String!\n      )", "content": "{\n        reassignCampaignContacts(\n          organizationId: $organizationId\n          campaignIdsContactIds: $campaignIdsContactIds\n          newTexterUserId: $newTexterUserId\n        ) {\n          campaignId\n          assignmentId\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminIncomingMessageList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "createOrganization($name: String!, $userId: String!, $inviteId: String!)", "content": "{\n        createOrganization(name: $name, userId: $userId, inviteId: $inviteId) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/CreateOrganization.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "createCannedResponse($cannedResponse: CannedResponseInput!)", "content": "{\n        createCannedResponse(cannedResponse: $cannedResponse) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/components/ScriptList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "toggleSnackBar", "content": "{\n    toggleSnackBar(msg: $msg, type: $type) @client\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/Material/SuccessMessage.js", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "DeleteAccountMutation($id: ID!)", "content": "{\n        deleteAccount(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "LoginMutation($email: String!, $password: String!)", "content": "{\n        login(email: $email, password: $password) {\n            email\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "LogoutMutation", "content": "{\n        logout\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "SignupMutation($name: String!, $email: String!, $password: String!, $confirmPassword: String!)", "content": "{\n        signup(name: $name, email: $email, password: $password, confirmPassword: $confirmPassword) {\n            email\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "RequestResetPasswordMutation($email: String!)", "content": "{\n        requestPasswordReset(email: $email)\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "ResetPasswordMutation($resetToken: String!, $password: String!, $confirmPassword: String!)", "content": "{\n        resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\n            email\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "CompleteOnboardingMutation", "content": "{\n        completeOnboarding\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "UPDATE_USER_MUTATION (\n    $id: ID!\n    $name: String!\n    $status: String!\n    $role: String!\n  )", "content": "{\n    updateUser(\n      id: $id\n      name: $name\n      status: $status\n      role: $role\n    ) {\n      id\n      name\n      email\n      status\n      role\n    }\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/User/UserMutation.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "DELETE_USER_MUTATION($id: ID!)", "content": "{\n    deleteAccount(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/User/UserMutation.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "createCategory(\n    $name: String!\n    $parent: String!\n    $slug: String!\n  )", "content": "{\n    createCategory(\n      name: $name\n      parent: $parent\n      slug: $slug\n    ) {\n      id\n      name\n      parent\n      # creation_date\n      slug\n      # number_of_product\n    }\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/Category/CategoryMutation.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "UPDATE_CATEGORY_MUTATION (\n    $id: ID!\n    $name: String\n    $slug: String\n    $parent: String\n  )", "content": "{\n    updateCategory(\n      id: $id\n      name: $name\n      slug: $slug\n      parent: $parent\n    ) {\n      id\n      name\n      slug\n      parent\n    }\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/Category/CategoryMutation.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "DELETE_CATEGORY_MUTATION($id: ID!)", "content": "{\n    deleteCategory(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/Category/CategoryMutation.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "createProduct(\n    $name: String!\n    $description: String!\n    $price: Int!\n    $discount: Int!\n    $salePrice: Int!\n    $sku: String!\n    $unit: String!\n    $categoryId: ID!\n    $images: [ProductImageCreateWithoutProductInput!]!\n\n  )", "content": "{\n    createProduct(\n      name: $name\n      description: $description\n      price: $price\n      discount: $discount\n      salePrice: $salePrice\n      sku: $sku\n      unit: $unit\n      categoryId: $categoryId\n      images: $images\n    ) {\n      id\n      name\n      description\n      price\n      discount\n      salePrice\n      sku\n      unit\n      Category {\n        name\n        parent\n      }\n      ProductImages {\n        image\n      }\n    }\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/Product/ProductMutation.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "UPDATE_PRODUCT_MUTATION (\n    $id: ID!\n    $name: String!\n    $description: String!\n    $price: Int!\n    $discount: Int!\n    $salePrice: Int!\n    $sku: String!\n    $unit: String!\n    $categoryId: ID!\n    $images: [ProductImageCreateWithoutProductInput!]!\n    $alreadyUploadedImages: [ProductImageCreateWithoutProductInput!]!\n  )", "content": "{\n    updateProduct(\n      id: $id\n      name: $name\n      description: $description\n      discount: $discount\n      salePrice: $salePrice\n      sku: $sku\n      price: $price\n      unit: $unit\n      categoryId: $categoryId\n      images: $images\n      alreadyUploadedImages: $alreadyUploadedImages\n    ) {\n      id\n      name\n      description\n      price\n      discount\n      salePrice\n      sku\n      unit\n      Category {\n        name\n        parent\n      }\n      ProductImages {\n        id\n        image\n      }\n    }\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/Product/ProductMutation.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "login ($username: String!, $password: String!)", "content": "{\n      login (username: $username, password: $password) {\n        user {\n          id\n          username\n        }\n        tokens {\n          accessToken\n          accessTokenExpiration\n          refreshToken\n        }\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/UserHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "logout", "content": "{\n      logout {\n        result\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/UserHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "verifyEmail ($username: String!, $code: String!)", "content": "{\n      verifyEmail (username: $username, code: $code) {\n        result\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/UserHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "sendResetPasswordEmail ($username: String!)", "content": "{\n      sendResetPasswordEmail(username: $username) {\n        result\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/UserHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "resetPassword ($username: String!, $password: String!, $code: String!)", "content": "{\n      resetPassword(username: $username, password: $password, code: $code) {\n        result\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/UserHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "completeSocialAuthentication ($provider: String!, $code: String!, $username: String)", "content": "{\n      completeSocialAuthentication(provider: $provider, code: $code, username: $username) {\n        user {\n          id\n          username\n        }\n        tokens {\n          accessToken\n          refreshToken\n        }\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/UserHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($marketId: ID!)", "content": "{\n      createMarketFollow (input: { market: $marketId }) {\n        marketFollow {\n          id\n          market {\n            symbol\n            price\n            priceClose\n            numberOfFollowers\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/MarketHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($followId: ID!)", "content": "{\n      deleteMarketFollow (input: {id: $followId}) {\n        result\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/MarketHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "CreateUser ($email: String!, $username: String!, $password: String!)", "content": "{\n    createUser(input: { email: $email, username: $username, password: $password }) {\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/pages/register.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($username: String!, $fullName: String!, $email: String!, $website: String!)", "content": "{\n    updateUser (input: { username: $username, fullName: $fullName, email: $email, website: $website }) {\n      user {\n        username\n        fullName\n        email\n        website\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/pages/settings.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($username: String!, $password: String!)", "content": "{\n    updateUser (input: { username: $username, password: $password }) {\n      user {\n        username\n        fullName\n        email\n        website\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/users/ChangePasswordDialog.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($commentId: ID!)", "content": "{\n    deleteComment (input: { id: $commentId }) {\n      result\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/ConfirmCommentDeleteDialog.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($slug: String!)", "content": "{\n    deletePost (input: { slug: $slug }) {\n      result\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/ConfirmPostDeleteDialog.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($postId: ID!, $value: PostVoteValueEnum!)", "content": "{\n    createPostVote (input: { post: $postId, value: $value }) {\n      postVote {\n        value\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/PostVotes.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($voteId: ID!)", "content": "{\n    deletePostVote (input: { id: $voteId }) {\n      result\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/PostVotes.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($marketId: ID!, $title: String!, $body: String!, $smImageUrl: String, $lgImageUrl: String)", "content": "{\n    createPost (input: { market: $marketId, title: $title, body: $body, smImageUrl: $smImageUrl, lgImageUrl: $lgImageUrl }) {\n      post {\n        id\n        slug\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/PostForm.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($slug: String!, $title: String!, $body: String!, $smImageUrl: String, $lgImageUrl: String)", "content": "{\n    updatePost (input: { slug: $slug, title: $title, body: $body, smImageUrl: $smImageUrl, lgImageUrl: $lgImageUrl }) {\n      post {\n        slug\n        title\n        body\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/PostForm.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($postId: ID!)", "content": "{\n    createPostVote (input: { post: $postId, value: POSITIVE_1 }) {\n      postVote {\n        id\n        value\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/PostForm.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($postId: ID!, $body: String!)", "content": "{\n    createComment (input: { post: $postId, body: $body }) {\n      comment {\n        ...CommentForm\n      }\n    }\n  }\n  ${CommentForm.fragments.comment}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/comments/CommentForm.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($commentId: ID!, $body: String!)", "content": "{\n    updateComment (input: { id: $commentId, body: $body }) {\n      comment {\n        ...CommentForm\n      }\n    }\n  }\n  ${CommentForm.fragments.comment}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/comments/CommentForm.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($commentId: ID!)", "content": "{\n    createCommentVote (input: { comment: $commentId, value: POSITIVE_1 }) {\n      commentVote {\n        id\n        value\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/comments/CommentForm.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($commentId: ID!, $value: CommentVoteValueEnum!)", "content": "{\n    createCommentVote (input: { comment: $commentId, value: $value }) {\n      commentVote {\n        value\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/comments/CommentListItem.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "($voteId: ID!)", "content": "{\n    deleteCommentVote (input: { id: $voteId }) {\n      result\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/comments/CommentListItem.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "AddSongMutation($title: String!, $events: [EventInput]!)", "content": "{\n\taddSong(title: $title, events: $events) {\n\t\tid\n\t\ttitle\n\t\tevents{\n\t\t\tactiveNotes\n\t\t\tduration\n\t\t}\n\t}\n}", "metadata": {"commit_hash": "df111640a137171512c3e8b4c934814a270395d4", "file": "codingChallenges/piano/src/components/saveSong.js", "repo": "hacknlove_onGet"}}, {"type": "mutation", "name": "createUser", "content": "{\n      createUser(\n        email: \"${email}\"\n      ) {\n        id\n        email\n        emailVerified\n      }\n    }", "metadata": {"commit_hash": "1b0cf980a081ac78ce310ad7edeef6d7fb8d29bb", "file": "src/components/Subscription.js", "repo": "rabbotio_minemark"}}, {"type": "mutation", "name": "setLocalValue($", "content": "{params}) {\n        setLocalValue(namespace: \"${_namespace}\", ${values}) @client\n      }", "metadata": {"commit_hash": "1a30a86a717a257517f10300b7d285371736844c", "file": "src/index.js", "repo": "sergioramos_react-apollo-local-values"}}, {"type": "mutation", "name": "login($input: LoginCredentialsInput!)", "content": "{\n      login(input: $input) {\n        ...sessionFields\n      }\n    }\n    ${SESSION_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "sendVerificationEmail($username: String!)", "content": "{\n      sendVerificationEmail(username: $username)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "verifyAccount($username: String!, $code: String!)", "content": "{\n      verifyAccount(username: $username, code: $code) {\n        ...sessionFields\n      }\n    }\n    ${SESSION_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "requestResetPassword($username: String!)", "content": "{\n      requestResetPassword(username: $username)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "resetPassword($username: String!, $code: String!)", "content": "{\n      resetPassword(username: $username, code: $code) {\n        ...sessionFields\n      }\n    }\n    ${SESSION_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "updateProfile($input: ProfileUpdateInput!)", "content": "{\n      updateProfile(input: $input) {\n        ...currentUserFields\n      }\n    }\n    ${USER_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "upateMyCompany($input: MyCompanyUpdateInput!)", "content": "{\n      upateMyCompany(input: $input) {\n        ...companyFields\n      }\n    }\n    ${COMPANY_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "logout", "content": "{\n      logout\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "userSetDeviceToken($input: UserDeviceTokenInput!)", "content": "{\n      userSetDeviceToken(input: $input)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "changeScoreDisplay($input: UserProfileScoreDisplay!)", "content": "{\n      userDisplayScoreUpdate(input: $input) {\n        profileScoreDisplay\n      }\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "changeUserIdeaIntro($input: UserProfileIdeaIntro!)", "content": "{\n      userIdeaIntroUpdate(input: $input) {\n        profileIdeaIntro\n      }\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "updateRewardActive($input: UserProfileRewardActive!)", "content": "{\n      userProfileRewardUpdate(input: $input) {\n        profileRewardActive\n      }\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "issueCreate($input: IssueCreateInput!)", "content": "{\n      issueCreate(input: $input) {\n        ...issueFullFields\n      }\n    }\n    ${ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "issueUpdate($id: ID!, $input: IssueUpdateInput!)", "content": "{\n      issueUpdate(id: $id, input: $input) {\n        ...issueFullFields\n      }\n    }\n    ${ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "issueChangeStatus($input: IssueChangeStatusInput!)", "content": "{\n      issueChangeStatus(input: $input) {\n        ...issueFullFields\n      }\n    }\n    ${ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "issueDelete($id: ID!)", "content": "{\n      issueDelete(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "projectEvaluateIdea($input: ProjectEvaluationRecordInput!)", "content": "{\n      projectEvaluateIdea(input: $input) {\n        ...projectEvaluationRecordFields\n      }\n    }\n    ${PROJECT_EVALUATION_RECORD}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/project.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "userCreate($input: UserCreateInput!)", "content": "{\n      userCreate(input: $input) {\n        ...userFullFields\n      }\n    }\n    ${USER_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "userUpdate($id: ID!, $input: UserUpdateInput!)", "content": "{\n      userUpdate(id: $id, input: $input) {\n        ...userFullFields\n      }\n    }\n    ${USER_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "userUpdate($id: ID!)", "content": "{\n      userDelete(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "userResetPassword($id: ID!)", "content": "{\n      userResetPassword(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "userInvite($input: UserInviteInput!)", "content": "{\n      userInvite(input: $input){\n        ...userFullFields\n      }\n    }\n    ${USER_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "userRegister($input: UserRegisterInput!)", "content": "{\n      userRegister(input: $input) {\n        ...userFullFields\n      }\n    }\n    ${USER_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaContentCreate($input: IdeaContentCreateInput!)", "content": "{\n      ideaContentCreate(input: $input) {\n        ...ideaContentFullFields\n      }\n    }\n    ${IDEA_CONTENT_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaContent.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaContentUpdate($id: ID!, $input: IdeaContentUpdateInput!)", "content": "{\n      ideaContentUpdate(id: $id, input: $input) {\n        ...ideaContentFullFields\n      }\n    }\n    ${IDEA_CONTENT_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaContent.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "shareProjectByLinkId($id: ID!)", "content": "{\n      shareProjectByLinkId(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/project_sharelink.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "milestoneCreate($input: MilestoneCreateInput!)", "content": "{\n      milestoneCreate(input: $input) {\n        ...milestoneFullFields\n      }\n    }\n    ${MILESTONE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/milestone.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "milestoneUpdateOrDeleteMany($input: [MilestoneUpdateInput!])", "content": "{\n      milestoneUpdateOrDeleteMany(input: $input) {\n        ...milestoneFullFields\n      }\n    }\n    ${MILESTONE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/milestone.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "milestoneReward($input: MilestoneRewardInput!)", "content": "{\n      milestoneReward(input: $input)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/milestone.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaCreate($input: IdeaCreateInput!)", "content": "{\n      ideaCreate(input: $input) {\n        ...ideaFullFields\n      }\n    }\n    ${IDEA_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/idea.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaUpdate($id: ID!, $input: IdeaUpdateInput!)", "content": "{\n      ideaUpdate(id: $id, input: $input) {\n        ...ideaFullFields\n      }\n    }\n    ${IDEA_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/idea.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaChangeStatus($input: IdeaChangeStatusInput!)", "content": "{\n      ideaChangeStatus(input: $input) {\n        ...ideaFullFields\n      }\n    }\n    ${IDEA_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/idea.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaDelete($id: ID!)", "content": "{\n      ideaDelete(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/idea.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaViewed($input: IdeaViewedByUser!)", "content": "{\n      ideaViewed(input: $input)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/idea.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "increaseUserExperience($input: ExperienceUpdateInput!)", "content": "{\n      increaseUserExperience(input: $input) {\n        ...experienceFields\n      }\n    }\n    ${EXPERIENCE_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/experience.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaIssueCreate($input: IdeaIssueCreateInput!)", "content": "{\n      ideaIssueCreate(input: $input) {\n        ...ideaIssueFullFields\n      }\n    }\n    ${IDEA_ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaIssueUpdate($id: ID!, $input: IdeaIssueUpdateInput!)", "content": "{\n      ideaIssueUpdate(id: $id, input: $input) {\n        ...ideaIssueFullFields\n      }\n    }\n    ${IDEA_ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaIssueChangeStatus($input: IdeaIssueChangeStatusInput!)", "content": "{\n      ideaIssueChangeStatus(input: $input) {\n        ...ideaIssueFullFields\n      }\n    }\n    ${IDEA_ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "ideaIssueDelete($id: ID!)", "content": "{\n      ideaIssueDelete(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "AddDevice($mac: String!, $name: String!, $ownerId: String!, $followerIds: [String])", "content": "{\n    addDevice(mac: $mac, name: $name, ownerId: $ownerId, followerIds: $followerIds) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "UpdateDevice($deviceId: ID!, $mac: String!, $name: String!, $ownerId: String!, $followerIds: [String])", "content": "{\n    updateDevice(deviceId: $deviceId, mac: $mac, name: $name, ownerId: $ownerId, followerIds: $followerIds) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "AddDice($did: String!, $name: String!, $userId: String!, $actionIds: [String]!, $coverImg: String)", "content": "{\n    addDice(did: $did, name: $name, userId: $userId, actionIds: $actionIds, coverImg: $coverImg) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "UpdateDice($diceId: ID!, $did: String!, $name: String!, $userId: String!, $actionIds: [String]!, $coverImg: String)", "content": "{\n    updateDice(diceId: $diceId, did: $did, name: $name, userId: $userId, actionIds: $actionIds, coverImg: $coverImg) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "AddAction($name: String!, $action: String!, $equation: String!)", "content": "{\n    addAction(name: $name, action: $action, equation: $equation) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "UpdateAction($actionId: ID!, $name: String!, $action: String!, $equation: String!)", "content": "{\n    updateAction(actionId: $actionId, name: $name, action: $action, equation: $equation) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "AddRoll($device: String!, $dice: String!)", "content": "{\n    addRoll(device: $device, dice: $dice) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "AddTodo($title:String!, $userId: ID!, $completed:Boolean!)", "content": "{\n    newTodo:createTodo(title:$title, user_id: $userId, completed: $completed) {\n      id\n      title\n      completed\n    }\n  }", "metadata": {"commit_hash": "995581d75a63cff91e36e944c688f87e62e5eef9", "file": "src/apollo/todos.js", "repo": "michey85_apollo-qql-todos"}}, {"type": "mutation", "name": "UpdateTodo($id:ID!, $completed:Boolean)", "content": "{\n    updateTodo(id: $id, completed:$completed) {\n      id\n      title\n      completed\n    }\n  }", "metadata": {"commit_hash": "995581d75a63cff91e36e944c688f87e62e5eef9", "file": "src/apollo/todos.js", "repo": "michey85_apollo-qql-todos"}}, {"type": "mutation", "name": "DeleteTodo($id:ID!)", "content": "{\n    removeTodo(id:$id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "995581d75a63cff91e36e944c688f87e62e5eef9", "file": "src/apollo/todos.js", "repo": "michey85_apollo-qql-todos"}}, {"type": "mutation", "name": "archiveService($name: String!)", "content": "{\n          archiveService(name: $name) {\n            archived\n          }\n        }", "metadata": {"commit_hash": "36da03c2d0c5ebd623bdb271c9114b6dbed32459", "file": "lib/plugins/platform/platform.js", "repo": "alibaba-archive_serverless"}}, {"type": "mutation", "name": "publishService($service: ServicePublishInputType!)", "content": "{\n            publishService(service: $service) {\n              name\n            }\n          }", "metadata": {"commit_hash": "36da03c2d0c5ebd623bdb271c9114b6dbed32459", "file": "lib/plugins/platform/platform.js", "repo": "alibaba-archive_serverless"}}, {"type": "mutation", "name": "AddListOwner(\n    $listId: ID!\n    $companyId: ID!\n    $userEmails: [String!]\n    $teamIds: [ID!]\n  )", "content": "{\n    addListOwner(\n      listId: $listId\n      companyId: $companyId\n      userEmails: $userEmails\n      teamIds: $teamIds\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddListOwner.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "AddTeamMember(\n    $email: String!\n    $fullName: String!\n    $role: ID!\n    $team: String!\n    $companyId: ID!\n  )", "content": "{\n    addTeamMember(\n      email: $email\n      fullName: $fullName\n      role: $role\n      team: $team\n      companyId: $companyId\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n      user {\n        id\n        fullName\n        profileUrl\n        roles {\n          id\n          name\n          companyId\n        }\n        teams {\n          id\n          name\n          companyId\n        }\n        companies {\n          id\n          name\n          logoUrl\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddTeamMember.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "CreateAssociatedCompany(\n    $companyId: ID!\n    $ownerEmail: String!\n    $newCompanyName: String!\n    $isParent: Boolean\n    $isBroker: Boolean\n  )", "content": "{\n    createAssociatedCompany(\n      companyId: $companyId\n      ownerEmail: $ownerEmail\n      newCompanyName: $newCompanyName\n      isParent: $isParent\n      isBroker: $isBroker\n    ) {\n      company {\n        id\n        name\n        logoUrl\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/CreateAssociatedCompany.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "CreatePrivateTaskMessage($taskId: ID!, $message: String!)", "content": "{\n    createTaskMessages(taskId: $taskId, message: $message, isPublic: false) {\n      success\n      message {\n        id\n        message\n        createdAt\n        user {\n          fullName\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/CreatePrivateTaskMessage.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "AddTaskOwners(\n    $taskID: ID!\n    $userOwners: [String!]\n    $userReviewers: [String!]\n    $teamOwners: [ID!]\n    $teamReviewers: [ID!]\n  )", "content": "{\n    addTaskOwners(\n      taskID: $taskID\n      userOwners: $userOwners\n      userReviewers: $userReviewers\n      teamOwners: $teamOwners\n      teamReviewers: $teamReviewers\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n      task {\n        id\n        name\n        priority\n        status\n        dueDate\n        updatedAt\n        userOwners {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamOwners {\n          id\n          name\n        }\n        userReviewers {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamReviewers {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddTaskOwners.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "RemoveCompanyMember($companyId: ID!, $userId: ID, $userIds: [ID!])", "content": "{\n    removeCompanyMember(\n      companyId: $companyId\n      userId: $userId\n      userIds: $userIds\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n      user {\n        id\n        fullName\n        profileUrl\n        roles {\n          id\n          name\n          companyId\n        }\n        teams {\n          id\n          name\n          companyId\n        }\n        companies {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/RemoveCompanyMember.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "UpdateCompany(\n    $id: ID!\n    $name: String!\n    $parentId: ID\n    $brokerId: ID\n    $deleteParentId: ID\n    $deleteBrokerId: ID\n    $autoPdf: Boolean!\n    $autoWatermark: Boolean!\n    $previewOnly: Boolean!\n  )", "content": "{\n    updateCompanySettings(\n      id: $id\n      name: $name\n      parentId: $parentId\n      brokerId: $brokerId\n      automaticPdf: $autoPdf\n      dynamicWatermarking: $autoWatermark\n      previewOnly: $previewOnly\n      deleteParentId: $deleteParentId\n      deleteBrokerId: $deleteBrokerId\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n      company {\n        id\n        name\n        logoUrl\n        parents {\n          id\n          name\n          logoUrl\n        }\n        brokers {\n          id\n          name\n          logoUrl\n        }\n        totalUsers\n        totalStorage\n        subscription {\n          id\n          maxUsers\n          maxStorage\n        }\n        autoPdf\n        autoWatermark\n        previewOnly\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/UpdateCompany.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "UpdateUserPassword($password: String!, $oldPassword: String!)", "content": "{\n    updateUserPassword(password: $password, oldPassword: $oldPassword) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/UpdateUserPassword.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "UpdateTask(\n    $id: ID!\n    $name: String\n    $description: String\n    $priority: String\n    $status: String\n    $dueDate: String\n  )", "content": "{\n    updateTask(\n      id: $id\n      name: $name\n      description: $description\n      priority: $priority\n      status: $status\n      dueDate: $dueDate\n    ) {\n      success\n      errors {\n        path\n        message\n      }\n      task {\n        id\n        name\n        priority\n        status\n        dueDate\n        updatedAt\n        userOwners {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamOwners {\n          id\n          name\n        }\n        userReviewers {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamReviewers {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/UpdateTask.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "SignUpUser(\n    $fullName: String!\n    $email: String!\n    $password: String!\n    $companyName: String!\n    $socialLogin: Boolean!\n    $provider: String!\n    $tokenID: String!\n    $uuID: String!\n  )", "content": "{\n    signUpUser(\n      fullName: $fullName\n      email: $email\n      password: $password\n      companyName: $companyName\n      socialLogin: $socialLogin\n      provider: $provider\n      tokenID: $tokenID\n      uuID: $uuID\n    ) {\n      user {\n        id\n        email\n        fullName\n        displayName\n        profileUrl\n        lastViewedCompanyId\n        ownedCompanies {\n          id\n          name\n        }\n        companies {\n          id\n          name\n          logoUrl\n        }\n        teams {\n          id\n          companyId\n          name\n        }\n        roles {\n          id\n          name\n          companyId\n        }\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/SignUpUser.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "CreateList(\n    $name: String!\n    $description: String\n    $requesterId: ID!\n    $responderId: ID!\n    $tasks: [TaskAttributes!]\n  )", "content": "{\n    createList(\n      name: $name\n      description: $description\n      requesterId: $requesterId\n      responderId: $responderId\n      tasks: $tasks\n    ) {\n      list {\n        id\n        name\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/CreateList.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "RemoveTeamMember($teamId: ID!, $userId: ID!, $userIds: [ID!])", "content": "{\n    removeTeamMember(teamId: $teamId, userId: $userId, userIds: $userIds) {\n      user {\n        id\n        fullName\n        profileUrl\n        roles {\n          id\n          name\n          companyId\n        }\n        teams {\n          id\n          name\n          companyId\n        }\n        companies {\n          id\n          name\n        }\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/RemoveTeamMember.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "SignInUser(\n    $email: String!\n    $password: String!\n    $socialLogin: Boolean!\n    $provider: String!\n    $tokenID: String!\n    $uuID: String!\n  )", "content": "{\n    signInUser(\n      email: $email\n      password: $password\n      socialLogin: $socialLogin\n      provider: $provider\n      tokenID: $tokenID\n      uuID: $uuID\n    ) {\n      currentUser {\n        id\n        user {\n          id\n          fullName\n          email\n        }\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/SignInUser.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "UpdateTeamMember(\n    $id: ID!\n    $fullName: String!\n    $companyId: ID!\n    $role: ID!\n  )", "content": "{\n    updateTeamMember(\n      id: $id\n      fullName: $fullName\n      companyId: $companyId\n      role: $role\n    ) {\n      success\n      errors {\n        path\n        message\n      }\n      user {\n        id\n        fullName\n        profileUrl\n        roles {\n          id\n          name\n          companyId\n        }\n        teams {\n          id\n          name\n          companyId\n        }\n        companies {\n          id\n          name\n          logoUrl\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/UpdateTeamMember.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "UpdateUserData(\n    $email: String!\n    $fullName: String!\n    $displayName: String!\n    $lastViewedCompanyId: ID\n  )", "content": "{\n    updateUserData(\n      email: $email\n      fullName: $fullName\n      displayName: $displayName\n      lastViewedCompanyId: $lastViewedCompanyId\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/UpdateUserData.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "CreateCompany($name: String!)", "content": "{\n    createCompany(name: $name) {\n      company {\n        name\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/CreateCompany.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "SignOutUser", "content": "{\n    signOutUser {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/SignOutUser.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "CreateTask($listId: ID!, $tasks: [TaskAttributes!]!)", "content": "{\n    createTask(listId: $listId, tasks: $tasks) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/CreateTask.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "SendPasswordResetInstructions($email: String!)", "content": "{\n    sendResetPasswordInstructions(email: $email) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/SendPasswordResetInstructions.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "CreatePublicTaskMessage($taskId: ID!, $message: String!)", "content": "{\n    createTaskMessages(taskId: $taskId, message: $message, isPublic: true) {\n      success\n      message {\n        id\n        message\n        createdAt\n        user {\n          fullName\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/CreatePublicTaskMessage.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "deleteTasks($taskIds: [ID!]!)", "content": "{\n    deleteTasks(taskIds: $taskIds) {\n      success\n      taskIds\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/DeleteTasks.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "InviteNewCompanyToList(\n    $listId: ID!\n    $companyId: ID!\n    $ownerEmail: String!\n    $newCompanyName: String!\n    $isRequest: Boolean\n    $isShare: Boolean\n  )", "content": "{\n    inviteNewCompanyToList(\n      listId: $listId\n      companyId: $companyId\n      ownerEmail: $ownerEmail\n      newCompanyName: $newCompanyName\n      isRequest: $isRequest\n      isShare: $isShare\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/InviteNewCompanyToList.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "fulfillmentCreateV2(\n    $fulfillment: FulfillmentV2Input!\n    $message: String\n  )", "content": "{\n    fulfillmentCreateV2(fulfillment: $fulfillment, message: $message) {\n      fulfillment {\n        id\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "98287cd96d6225661e727dfb2826ed53207adfba", "file": "src/components/NewFulfillmentOrder/FulfillmentOrderList.jsx", "repo": "Shopify_fulfillment-order-sample-app"}}, {"type": "mutation", "name": "remove$", "content": "{resource}($id: ID!) {\n                    remove${resource}(id: $id)\n                }", "metadata": {"commit_hash": "5600c52c7b14bf174f7f8e176a9a3ff5efba88e1", "file": "src/dataProvider/graphql.js", "repo": "BestCryptoKnight_react-admin-with-material-ui-next"}}, {"type": "mutation", "name": "StartSubmission($articleType: String!)", "content": "{\n            startSubmission(articleType: $articleType) {\n                id,\n                status\n            }\n        }", "metadata": {"commit_hash": "487cab4ea901e2a4a58132c10f674fdf83dd3970", "file": "tests/test.utils.ts", "repo": "libero_reviewer-submission"}}, {"type": "mutation", "name": "AddComment($text: String!, $user_id: ID!, $post_id: ID!)", "content": "{\n    addComment(input: { text: $text, user_id: $user_id, post_id: $post_id }) {\n      comment {\n        ...PostsShowComment\n        errors\n      }\n    }\n  }\n  ${fragments.postsShowComment}", "metadata": {"commit_hash": "cb25eb8de39ae51657d9deaf5b1e712f229dc361", "file": "src/mutations/add-comment.ts", "repo": "skovy_graphql-blog-client"}}, {"type": "mutation", "name": "AddPost($title: String!, $text: String!, $user_id: ID!)", "content": "{\n    addPost(input: { title: $title, text: $text, user_id: $user_id }) {\n      post {\n        ...PostsShowPost\n      }\n    }\n  }\n  ${fragments.postsShowPost}", "metadata": {"commit_hash": "cb25eb8de39ae51657d9deaf5b1e712f229dc361", "file": "src/mutations/add-post.ts", "repo": "skovy_graphql-blog-client"}}, {"type": "mutation", "name": "($data: CreateUserInput!)", "content": "{\n    createUser(data: $data) {\n      token\n      user {\n        id\n        name\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "0898364e6e0b73a78d0deb77ffed3cdafc782d09", "file": "template/tests/utils/operations.js", "repo": "tylim88_Create-Prisma-App"}}, {"type": "mutation", "name": "($data: LoginUserInput!)", "content": "{\n    login(data: $data) {\n      token\n    }\n  }", "metadata": {"commit_hash": "0898364e6e0b73a78d0deb77ffed3cdafc782d09", "file": "template/tests/utils/operations.js", "repo": "tylim88_Create-Prisma-App"}}, {"type": "mutation", "name": "SignInUserMutation ($username: String!, $password: String!)", "content": "{\n    signInUser(input: {username: $username, password: $password}) {\n      token\n      user {\n        fullname\n      }\n    }\n  }", "metadata": {"commit_hash": "01a4dae6e1f33a3c2311888f9c771e0a3adc60e6", "file": "src/graphql/mutations/signInUser.js", "repo": "dm-drogeriemarkt_lisa"}}, {"type": "mutation", "name": "($id: ID!, $input: UserUpdateInput!)", "content": "{\n            updateUser(id: $id, input: $input) {\n              id\n              name\n              email\n              object\n              groups {\n                id\n                name\n              }\n              created_at\n              updated_at\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "($input: UserCreateInput!)", "content": "{\n            createUser(input: $input) {\n              id\n              name\n              email\n              object\n              created_at\n              updated_at\n              groups {\n                id\n                name\n              }\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "($id: ID!, $input: ServerUpdateInput!)", "content": "{\n            updateServer(id: $id, input: $input) {\n              id\n              hostname\n              ipv4\n              ipv6\n              created_at\n              updated_at\n              groups {\n                id\n                name\n              }\n              users {\n                id\n                name\n              }\n              users_count\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "($input: ServerCreateInput!)", "content": "{\n            createServer(input: $input) {\n              id\n              hostname\n              ipv4\n              ipv6\n              created_at\n              updated_at\n              groups {\n                id\n                name\n              }\n              users {\n                id\n                name\n              }\n              users_count\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "($id: ID!, $input: GroupUpdateInput!)", "content": "{\n            updateGroup(id: $id, input: $input) {\n              id\n              name\n              object\n              created_at\n              updated_at\n              users {\n                id\n              }\n              users_count\n              servers {\n                id\n              }\n              servers_count\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "($input: GroupCreateInput!)", "content": "{\n            createGroup(input: $input) {\n              id\n              name\n              object\n              created_at\n              updated_at\n              users {\n                id\n              }\n              users_count\n              servers {\n                id\n              }\n              servers_count\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "createBar($description: String!, $fooId: ID!)", "content": "{\n      createBar(input: { description: $description, fooId: $fooId }) {\n        id\n        description\n        foo {\n          id\n          title\n        }\n      }\n    }", "metadata": {"commit_hash": "6b993cd98a26df4b84cfb4ff8cd1e1fa979ff385", "file": "examples/apollo-client/test/relations.spec.ts", "repo": "aerogear_graphql-testx"}}, {"type": "mutation", "name": "($packageId : ID! $payload : EventDefinitionInput!)", "content": "{\n    addEventDefinitionToPackage(\n      packageID: $packageId\n      in: $payload  \n    ){\n      id\n    }}", "metadata": {"commit_hash": "e6d9b79197464112cbebeee76cf596345acc67b3", "file": "modules/app-connector/src/server/compass/api.ts", "repo": "kyma-incubator_varkes"}}, {"type": "mutation", "name": "($appId : ID! $payload : PackageCreateInput!)", "content": "{\n    addPackage(\n      applicationID: $appId\n      in: $payload  \n    ){\n      id\n    }}", "metadata": {"commit_hash": "e6d9b79197464112cbebeee76cf596345acc67b3", "file": "modules/app-connector/src/server/compass/api.ts", "repo": "kyma-incubator_varkes"}}, {"type": "mutation", "name": "($packageId : ID! $payload : APIDefinitionInput!)", "content": "{\n    addAPIDefinitionToPackage(\n      packageID: $packageId\n      in: $payload  \n    ){\n      id\n    }}", "metadata": {"commit_hash": "e6d9b79197464112cbebeee76cf596345acc67b3", "file": "modules/app-connector/src/server/compass/api.ts", "repo": "kyma-incubator_varkes"}}, {"type": "mutation", "name": "($apiId : ID!)", "content": "{\n    deleteAPIDefinition(\n      id: $apiId\n    ) {\n      id\n    }}", "metadata": {"commit_hash": "e6d9b79197464112cbebeee76cf596345acc67b3", "file": "modules/app-connector/src/server/compass/api.ts", "repo": "kyma-incubator_varkes"}}, {"type": "mutation", "name": "($apiId : ID!)", "content": "{\n    deleteEventDefinition(\n      id: $apiId\n    ) {\n      id\n    }}", "metadata": {"commit_hash": "e6d9b79197464112cbebeee76cf596345acc67b3", "file": "modules/app-connector/src/server/compass/api.ts", "repo": "kyma-incubator_varkes"}}, {"type": "mutation", "name": "($csr: String!)", "content": "{\n      result: signCertificateSigningRequest(csr: $csr) {\n        certificateChain\n        caCertificate\n        clientCertificate\n      }\n    }", "metadata": {"commit_hash": "e6d9b79197464112cbebeee76cf596345acc67b3", "file": "modules/app-connector/src/server/compass/connector.ts", "repo": "kyma-incubator_varkes"}}, {"type": "mutation", "name": "createNotificationCreative(\n    $input: CreateNotificationCreativeInput!\n  )", "content": "{\n    createNotificationCreative(createNotificationCreativeInput: $input) {\n      id\n      payloadNotification {\n        body\n        title\n        targetUrl\n      }\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/creative.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "mutation", "name": "updateNotificationCreative(\n    $input: UpdateNotificationCreativeInput!\n  )", "content": "{\n    updateNotificationCreative(updateNotificationCreativeInput: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/creative.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "mutation", "name": "createAdSet($createAdSetInput: CreateAdSetInput!)", "content": "{\n    createAdSet(createAdSetInput: $createAdSetInput) {\n      ...AdSet\n    }\n  }\n  ${AdSetFragmentDoc}", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/ad-set.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "mutation", "name": "updateAdSet($updateAdSetInput: UpdateAdSetInput!)", "content": "{\n    updateAdSet(updateAdSetInput: $updateAdSetInput) {\n      ...AdSet\n    }\n  }\n  ${AdSetFragmentDoc}", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/ad-set.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "mutation", "name": "createAd($createAdInput: CreateAdInput!)", "content": "{\n    createAd(createAdInput: $createAdInput) {\n      ...Ad\n    }\n  }\n  ${AdFragmentDoc}", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/ad-set.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "mutation", "name": "updateAd($updateAdInput: UpdateAdInput!)", "content": "{\n    updateCreativeInstanceState(updateAdInput: $updateAdInput) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/ad-set.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "mutation", "name": "updateAdvertiser($updateAdvertiserInput: UpdateAdvertiserInput!)", "content": "{\n    updateAdvertiser(updateAdvertiserInput: $updateAdvertiserInput) {\n      id\n      publicKey\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/advertiser.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "mutation", "name": "CreateCampaign($input: CreateCampaignInput!)", "content": "{\n    createCampaign(createCampaignInput: $input) {\n      id\n      paymentType\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/campaign.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "mutation", "name": "UpdateCampaign($input: UpdateCampaignInput!)", "content": "{\n    updateCampaign(updateCampaignInput: $input) {\n      id\n      paymentType\n      stripePaymentId\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/campaign.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "mutation", "name": "createTweet(\n    $tweet: String,\n    $author: String,\n    $createdAt: DateTime\n  )", "content": "{\n    createTweet(\n      tweet: $tweet,\n      author: $author,\n      createdAt: $createdAt\n\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "deleteTweet($_id: String!)", "content": "{\n    deleteTweet(\n      _id: $_id\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "updateTweet(\n    $_id: String!,\n    $tweet: String!\n  )", "content": "{\n    updateTweet(\n      _id: $_id,\n      tweet: $tweet\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "saveUserCommunityPermissions(\n    $input: SaveUserCommunityPermissionsInput!\n  )", "content": "{\n    saveUserCommunityPermissions(input: $input) {\n      ...userInfo\n      ...userCommunities\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunitiesFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/admin/src/api/mutations.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "uploadImage($input: UploadImageInput!)", "content": "{\n    uploadImage(input: $input)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/uploadImage.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "markDirectMessageNotificationsSeen", "content": "{\n    markDirectMessageNotificationsSeen\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/notification/markDirectMessageNotificationsSeen.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "markSingleNotificationSeen($id: ID!)", "content": "{\n    markSingleNotificationSeen(id: $id)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/notification/markSingleNotificationSeen.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "markAllNotificationsSeen", "content": "{\n    markAllNotificationsSeen\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/notification/markNotificationsSeen.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "approvePendingCommunityMember(\n    $input: ApprovePendingCommunityMemberInput!\n  )", "content": "{\n    approvePendingCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/approvePendingCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "addCommunityModerator($input: AddCommunityModeratorInput!)", "content": "{\n    addCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityModerator.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "removeCommunityMember($input: RemoveCommunityMemberInput!)", "content": "{\n    removeCommunityMember(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/removeCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "blockPendingCommunityMember(\n    $input: BlockPendingCommunityMemberInput!\n  )", "content": "{\n    blockPendingCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/blockPendingCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "addCommunityMemberWithToken(\n    $input: AddCommunityMemberWithTokenInput!\n  )", "content": "{\n    addCommunityMemberWithToken(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityMemberWithToken.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "removeCommunityModerator($input: RemoveCommunityModeratorInput!)", "content": "{\n    removeCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/removeCommunityModerator.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "addPendingCommunityMember($input: AddPendingCommunityMemberInput!)", "content": "{\n    addPendingCommunityMember(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/addPendingCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "addCommunityMember($input: AddCommunityMemberInput!)", "content": "{\n    addCommunityMember(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "blockCommunityMember($input: BlockCommunityMemberInput!)", "content": "{\n    blockCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/blockCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "removePendingCommunityMember(\n    $input: RemovePendingCommunityMemberInput!\n  )", "content": "{\n    removePendingCommunityMember(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/removePendingCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "addCommunityMembers($input: AddCommunityMembersInput!)", "content": "{\n    addCommunityMembers(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityMembers.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "unblockCommunityMember($input: UnblockCommunityMemberInput!)", "content": "{\n    unblockCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/unblockCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "setThreadLock($threadId: ID!, $value: Boolean!)", "content": "{\n    setThreadLock(threadId: $threadId, value: $value) {\n      id\n      isLocked\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/lockThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "toggleThreadNotifications($threadId: ID!)", "content": "{\n    toggleThreadNotifications(threadId: $threadId) {\n      id\n      receiveNotifications\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/toggleThreadNotifications.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "editThread($input: EditThreadInput!)", "content": "{\n    editThread(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/editThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "addThreadReaction($input: AddThreadReactionInput!)", "content": "{\n    addThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/addThreadReaction.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "deleteThread($threadId: ID!)", "content": "{\n    deleteThread(threadId: $threadId)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/deleteThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "publishThread($thread: ThreadInput!)", "content": "{\n    publishThread(thread: $thread) {\n      ...threadInfo\n      channel {\n        id\n        slug\n        community {\n          id\n          slug\n        }\n      }\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/publishThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "moveThread($threadId: ID!, $channelId: ID!)", "content": "{\n    moveThread(threadId: $threadId, channelId: $channelId) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/moveThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "removeThreadReaction($input: RemoveThreadReactionInput!)", "content": "{\n    removeThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/removeThreadReaction.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "disableChannelTokenJoin($input: DisableChannelTokenJoinInput!)", "content": "{\n    disableChannelTokenJoin(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/disableChannelTokenJoin.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "deleteChannel($channelId: ID!)", "content": "{\n    deleteChannel(channelId: $channelId)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/deleteChannel.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "toggleChannelNotifications($channelId: ID!)", "content": "{\n    toggleChannelNotifications(channelId: $channelId) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/toggleChannelNotifications.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "updateSlackSettings($input: UpdateSlackSettingsInput!)", "content": "{\n    updateSlackSettings(input: $input) {\n      ...channelInfo\n      slackSettings {\n        botLinks {\n          eventType\n          slackChannelId\n        }\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/updateSlackSettings.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "archiveChannel($input: ArchiveChannelInput!)", "content": "{\n    archiveChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/archiveChannel.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "resetChannelJoinToken($input: ResetChannelJoinTokenInput!)", "content": "{\n    resetChannelJoinToken(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/resetChannelJoinToken.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "createChannel($input: CreateChannelInput!)", "content": "{\n    createChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/createChannel.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "togglePendingUser($input: TogglePendingUserInput!)", "content": "{\n    togglePendingUser(input: $input) {\n      ...channelInfo\n      pendingUsers {\n        ...userInfo\n      }\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${channelInfoFragment}\n  ${userInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/toggleChannelPendingUser.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "joinChannelWithToken($input: JoinChannelWithTokenInput!)", "content": "{\n    joinChannelWithToken(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/joinChannelWithToken.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "unblockUser($input: UnblockUserInput!)", "content": "{\n    unblockUser(input: $input) {\n      ...channelInfo\n      pendingUsers {\n        ...userInfo\n      }\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${channelInfoFragment}\n  ${userInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/unblockChannelBlockedUser.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "updateChannelSlackBotLinks($input: UpdateChannelSlackBotLinksInput)", "content": "{\n    updateChannelSlackBotLinks(input: $input) {\n      ...channelInfo\n      slackSettings {\n        botLinks {\n          threadCreated\n        }\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/updateChannelSlackBotLinks.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "enableChannelTokenJoin($input: EnableChannelTokenJoinInput!)", "content": "{\n    enableChannelTokenJoin(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/enableChannelTokenJoin.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "toggleChannelSubscription($channelId: ID!)", "content": "{\n    toggleChannelSubscription(channelId: $channelId) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/toggleChannelSubscription.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "editChannel($input: EditChannelInput!)", "content": "{\n    editChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/editChannel.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "restoreChannel($input: RestoreChannelInput!)", "content": "{\n    restoreChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/restoreChannel.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "sendSlackInvites($input: SendSlackInvitesInput!)", "content": "{\n    sendSlackInvites(input: $input) {\n      ...communityInfo\n      slackSettings {\n        teamName\n        isConnected\n        hasSentInvites\n        memberCount\n        invitesSentAt\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/sendSlackInvites.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "saveBrandedLoginSettings($input: SaveBrandedLoginSettingsInput!)", "content": "{\n    saveBrandedLoginSettings(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/saveBrandedLoginSettings.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "enableCommunityWatercooler(\n    $input: EnableCommunityWatercoolerInput!\n  )", "content": "{\n    enableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/enableCommunityWatercooler.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "resetCommunityJoinToken($input: ResetCommunityJoinTokenInput!)", "content": "{\n    resetCommunityJoinToken(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/resetCommunityJoinToken.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "updateAdministratorEmail($input: UpdateAdministratorEmailInput!)", "content": "{\n    updateAdministratorEmail(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/updateAdministratorEmail.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "setCommunityLastSeen($input: SetCommunityLastSeenInput!)", "content": "{\n    setCommunityLastSeen(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/setCommunityLastSeen.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "enableCommunityTokenJoin($input: EnableCommunityTokenJoinInput!)", "content": "{\n    enableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/enableCommunityTokenJoin.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "disableCommunityTokenJoin($input: DisableCommunityTokenJoinInput!)", "content": "{\n    disableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/disableCommunityTokenJoin.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "pinThread($threadId: ID!, $communityId: ID!, $value: String)", "content": "{\n    pinThread(threadId: $threadId, communityId: $communityId, value: $value) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/pinCommunityThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "sendEmailInvites($input: EmailInvitesInput!)", "content": "{\n    sendEmailInvites(input: $input)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/sendCommunityEmailInvites.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "createCommunity($input: CreateCommunityInput!)", "content": "{\n    createCommunity(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/createCommunity.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "disableBrandedLogin($input: DisableBrandedLoginInput!)", "content": "{\n    disableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/disableBrandedLogin.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "toggleCommunityNoindex($communityId: ID!)", "content": "{\n    toggleCommunityNoindex(communityId: $communityId) {\n      id\n      slug\n      noindex\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/toggleCommunityNoindex.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "deleteCommunity($communityId: ID!)", "content": "{\n    deleteCommunity(communityId: $communityId)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/deleteCommunity.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "editCommunity($input: EditCommunityInput!)", "content": "{\n    editCommunity(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/editCommunity.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "enableBrandedLogin($input: EnableBrandedLoginInput!)", "content": "{\n    enableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/enableBrandedLogin.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "disableCommunityWatercooler(\n    $input: DisableCommunityWatercoolerInput!\n  )", "content": "{\n    disableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/disableCommunityWatercooler.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "toggleCommunityRedirect($communityId: ID!)", "content": "{\n    toggleCommunityRedirect(communityId: $communityId) {\n      id\n      slug\n      redirect\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/toggleCommunityRedirect.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "banUser($input: BanUserInput!)", "content": "{\n    banUser(input: $input)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/user/banUser.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "toggleNotificationSettings($input: ToggleNotificationSettingsInput)", "content": "{\n    toggleNotificationSettings(input: $input) {\n      ...userInfo\n      ...userSettings\n    }\n  }\n  ${userInfoFragment}\n  ${userSettingsFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/user/toggleUserNotificationSettings.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "updateUserEmail($email: LowercaseString!)", "content": "{\n    updateUserEmail(email: $email) {\n      ...userInfo\n      email\n      pendingEmail\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/user/updateUserEmail.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "deleteCurrentUser", "content": "{\n    deleteCurrentUser\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/user/deleteCurrentUser.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "editUser($input: EditUserInput!)", "content": "{\n    editUser(input: $input) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/user/editUser.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "reportUser($input: ReportUserInput!)", "content": "{\n    reportUser(input: $input)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/user/reportUser.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "setLastSeen($id: ID!)", "content": "{\n    setLastSeen(id: $id) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/directMessageThread/setDMThreadLastSeen.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "createDirectMessageThread($input: DirectMessageThreadInput!)", "content": "{\n    createDirectMessageThread(input: $input) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/directMessageThread/createDirectMessageThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "editMessage($input: EditMessageInput!)", "content": "{\n    editMessage(input: $input) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/message/editMessage.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "deleteMessage($id: ID!)", "content": "{\n    deleteMessage(id: $id)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/message/deleteMessage.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "sendMessage($message: MessageInput!)", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/message/sendMessage.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "sendDirectMessage($message: MessageInput!)", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/message/sendDirectMessage.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "toggleReaction($reaction: ReactionInput!)", "content": "{\n    toggleReaction(reaction: $reaction) {\n      ...messageInfo\n      __typename\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/reaction/toggleReaction.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "subscribeToWebPush($subscription: WebPushSubscription!)", "content": "{\n    subscribeWebPush(subscription: $subscription)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CREATE_ORDER_MUTATION($token: String!)", "content": "{\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/Checkout.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  )", "content": "{\n    createUser(data: { email: $email, name: $name, password: $password }) {\n      id\n      email\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/SignUp.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CREATE_PRODUCT_MUTATION(\n    # Which variables are getting passed in? And What types are they\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  )", "content": "{\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/CreateProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "DELETE_PRODUCT_MUTATION($id: ID!)", "content": "{\n    deleteProduct(id: $id) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/DeleteProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "SIGNIN_MUTATION($email: String!, $password: String!)", "content": "{\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/SignIn.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  )", "content": "{\n    updateProduct(\n      id: $id\n      data: { name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/UpdateProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "REMOVE_FROM_CART_MUTATION($id: ID!)", "content": "{\n    deleteCartItem(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/RemoveFromCart.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "RESET_MUTATION(\n    $email: String!\n    $password: String!\n    $token: String!\n  )", "content": "{\n    redeemUserPasswordResetToken(\n      email: $email\n      token: $token\n      password: $password\n    ) {\n      code\n      message\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/Reset.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "ADD_TO_CART_MUTATION($id: ID!)", "content": "{\n    addToCart(productId: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/AddToCart.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "REQUEST_RESET_MUTATION($email: String!)", "content": "{\n    sendUserPasswordResetLink(email: $email) {\n      code\n      message\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/RequestReset.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  )", "content": "{\n    createUser(data: { email: $email, name: $name, password: $password }) {\n      id\n      email\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/40/SignUp.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "REMOVE_FROM_CART_MUTATION($id: ID!)", "content": "{\n    deleteCartItem(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/50/RemoveFromCart.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CREATE_PRODUCT_MUTATION(\n    # Which variables are getting passed in? And What types are they\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  )", "content": "{\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/26/CreateProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "SIGNIN_MUTATION($email: String!, $password: String!)", "content": "{\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/38/SignIn.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "REQUEST_RESET_MUTATION($email: String!)", "content": "{\n    sendUserPasswordResetLink(email: $email) {\n      code\n      message\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/41/RequestReset.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CREATE_ORDER_MUTATION($token: String!)", "content": "{\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/59/Checkout.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "RESET_MUTATION(\n    $email: String!\n    $password: String!\n    $token: String!\n  )", "content": "{\n    redeemUserPasswordResetToken(\n      email: $email\n      token: $token\n      password: $password\n    ) {\n      code\n      message\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/42/components/Reset.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "DELETE_PRODUCT_MUTATION($id: ID!)", "content": "{\n    deleteProduct(id: $id) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/32/DeleteProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  )", "content": "{\n    updateProduct(\n      id: $id\n      data: { name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/29/UpdateProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "DELETE_PRODUCT_MUTATION($id: ID!)", "content": "{\n    deleteProduct(id: $id) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/31/DeleteProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CREATE_ORDER_MUTATION($token: String!)", "content": "{\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/57/frontend/Checkout.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "REMOVE_FROM_CART_MUTATION($id: ID!)", "content": "{\n    deleteCartItem(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/51/RemoveFromCart.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "ADD_TO_CART_MUTATION($id: ID!)", "content": "{\n    addToCart(productId: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/48/AddToCart.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CREATE_PRODUCT_MUTATION(\n    # Which variables are getting passed in? And What types are they\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  )", "content": "{\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/25/CreateProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "updateProfile($profile: ProfileInput, $authToken: String!)", "content": "{\n    UpdateProfile(input: { profile: $profile, auth_token: $authToken }) {\n      user {\n        ...authUserData\n      }\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/UserProfileContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "createProject($authToken: String!, $project: ProjectInput)", "content": "{\n  CreateProject(input: { auth_token: $authToken, project: $project }) {\n    project {\n      title\n    }\n  }\n}", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/CreateProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "signInUser($email: String!, $password: String!)", "content": "{\n    SignIn(input: { email: $email, password: $password }) {\n      user {\n        ...authUserData\n      }\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/LoginContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "signUpUser($userSignup: UserSignupInput)", "content": "{\n    SignUp(input: { user_signup: $userSignup }) {\n        user {\n          ...authUserData\n        }\n      }\n    }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/SignupContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "createPostComment($authToken: String!,\n    $comment: CommentInput, $id: ID!)", "content": "{\n      CreatePostComment(input: {\n        auth_token: $authToken,\n        comment: $comment,\n        post_id: $id\n      }) {\n        post_comment {\n          body\n        }\n      }\n    }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/PostContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "upvoteComment($authToken: String!, $id: ID!)", "content": "{\n    VotePostComment(input: { auth_token: $authToken, post_comment_id: $id }) {\n      total_votes\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/PostContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "createFeedback($authToken:String!, $feedback: FeedbackInput)", "content": "{\n    CreateFeedback(input:{ feedback: $feedback, auth_token: $authToken }) {\n      __typename\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/FeedbackContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "submitInquiry($inquiry: InquiryInput)", "content": "{\n    CreateInquiry(input: { inquiry: $inquiry }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ContactContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "createTutorialComment($authToken: String!,\n    $comment: CommentInput, $id: ID!\n  )", "content": "{\n    CreateTutorialComment(input: {\n      auth_token: $authToken,\n      comment: $comment,\n      tutorial_id: $id\n    }) {\n      tutorial_comment {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/TutorialContainer/gql.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "upvoteComment($authToken: String!, $id: ID!)", "content": "{\n    VoteTutorialComment(input: { auth_token: $authToken, tutorial_comment_id: $id }) {\n      total_votes\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/TutorialContainer/gql.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "createProjectComment($authToken: String!,\n    $comment: CommentInput, $id: ID!)", "content": "{\n      CreateProjectComment(input: {\n        auth_token: $authToken,\n        comment: $comment,\n        project_id: $id\n      }) {\n        project_comment {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "upvoteComment($authToken: String!, $id: ID!)", "content": "{\n    VoteProjectComment(input: { auth_token: $authToken, project_comment_id: $id }) {\n      total_votes\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "createPost($authToken: String!, $post: PostInput)", "content": "{\n    CreatePost(input: { auth_token: $authToken, post: $post }) {\n      post {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/CreatePostContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "toggleFavTask($state: Boolean!, $taskId: ID!)", "content": "{\n        toggleFavTask(state: $state, taskId: $taskId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlToggleFavTask.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "editTaskList($moduleId: ID!, $listId: ID!, $name: String!)", "content": "{\n        editTaskList(moduleId: $moduleId, listId: $listId, name: $name)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditTaskList.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "saveModulesOrder($moduleIds: [String]!, $projectId: ID!)", "content": "{\n        saveModulesOrder(moduleIds: $moduleIds, projectId: $projectId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlSaveModulesOrder.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "changePassword($oldPassword: String!, $newPassword: String!)", "content": "{\n        changePassword(oldPassword: $oldPassword, newPassword: $newPassword) {\n            ... on AuthUserError {\n                message\n            }\n            ... on OldPasswordError {\n                message\n            }\n\n            ... on Error {\n                message\n            }\n            ... on ChangePassword {\n                _id\n                password\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlChangePassword.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "setNotificationAsRead($ids: [ID])", "content": "{\n        setNotificationAsRead(ids: $ids)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlSetNotificationAsRead.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "deleteProject($projectId: ID!, $teamId: ID!)", "content": "{\n        deleteProject(projectId: $projectId, teamId: $teamId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteProject.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "addDeadlineToTask($taskId: ID!, $date: String)", "content": "{\n        addDeadlineToTask(taskId: $taskId, date: $date)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlAddDeadlineToTask.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "addTaskList($moduleId: ID!, $name: String!)", "content": "{\n        addTaskList(moduleId: $moduleId, name: $name) {\n            _id\n            name\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlAddTaskList.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "updateMemberRole($projectId: ID!, $userId: ID!, $roleId: ID!)", "content": "{\n        updateMemberRole(\n            projectId: $projectId\n            userId: $userId\n            roleId: $roleId\n        ) {\n            _id\n            name\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlUpdateMemberRole.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "saveTaskListsOrder($moduleId: ID!, $taskLists: [TaskListsInput]!)", "content": "{\n        saveTaskListsOrder(moduleId: $moduleId, taskLists: $taskLists)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlSaveTaskListsOrder.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "deleteTag($tagId: ID!)", "content": "{\n        deleteTag(tagId: $tagId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteTag.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "editUser($userId: ID!, $input: EditUserInput!)", "content": "{\n        editUser(userId: $userId, input: $input) {\n            _id\n            name\n            last_name\n            email\n            occupation\n            birthday\n            avatar\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditUser.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "removeInvitation($invitationId: ID!)", "content": "{\n        removeInvitation(invitationId: $invitationId) {\n            _id\n            email\n            created_at\n            status\n            projectId\n            teamId\n            updated_at\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlRemoveInvitation.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "register($email: String!, $password: String!, $token: String)", "content": "{\n        register(input: { email: $email, password: $password, token: $token }) {\n            ... on Error {\n                message\n            }\n            ... on User {\n                _id\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlRegister.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "registerUserByInvitation(\n        $email: String!\n        $projectId: ID!\n        $teamId: ID!\n    )", "content": "{\n        registerUserByInvitation(\n            email: $email\n            projectId: $projectId\n            teamId: $teamId\n        ) {\n            ... on Member {\n                user\n                role\n                team\n            }\n            ... on Invitation {\n                _id\n                email\n                created_at\n                status\n                projectId\n                teamId\n                updated_at\n            }\n\n            ... on InvalidUser {\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlRegisterUserByInvitationMutation.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "updateAvatar($imgStr: String!, $fileName: String!)", "content": "{\n        updateAvatar(imgStr: $imgStr, fileName: $fileName)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlUpdateAvatar.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "updateTask($taskId: ID!, $input: EditTaskInput!, $url: String)", "content": "{\n        editTask(taskId: $taskId, input: $input, url: $url) {\n            _id\n            name\n            owner {\n                _id\n                avatar\n                name\n                last_name\n            }\n            assigned {\n                _id\n                name\n                last_name\n                avatar\n            }\n            collaborators {\n                _id\n                avatar\n                name\n                last_name\n            }\n            deadline\n            done\n            description\n            descriptionJson\n            created_at\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlUpdateTask.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "deleteTeam($teamId: ID!)", "content": "{\n        deleteTeam(teamId: $teamId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteTeam.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "createProject($input: ProjectInput!)", "content": "{\n        createProject(input: $input) {\n            _id\n            name\n            description\n            image\n            color\n            privacy\n            status\n            created_at\n            owner {\n                _id\n                name\n                last_name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlCreateProject.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "createTopic($input: TopicInput!)", "content": "{\n        createTopic(input: $input) {\n            _id\n            name\n            created_at\n            owner {\n                name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlCreateTopic.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "deleteFile($fileId: ID!)", "content": "{\n        deleteFile(fileId: $fileId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteFile.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "updateModuleStatus($moduleId: ID!, $input: EditModuleInput!)", "content": "{\n        editModule(moduleId: $moduleId, input: $input) {\n            _id\n            name\n            status\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlUpdateModuleStatus.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "addCollaborator($taskId: ID!, $userId: ID!)", "content": "{\n        addCollaborator(taskId: $taskId, userId: $userId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlAddCollaborator.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "removeMemberFromTeam($teamId: ID!, $userId: ID!)", "content": "{\n        removeMemberFromTeam(teamId: $teamId, userId: $userId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlRemoveMemberFromTeam.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "handleTaskStatus($taskId: ID!, $input: EditTaskInput!)", "content": "{\n        editTask(taskId: $taskId, input: $input) {\n            _id\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlHandleTaskStatus.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "createTeam($input: TeamInput!)", "content": "{\n        createTeam(input: $input) {\n            _id\n            name\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlCreateTeam.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "deleteComment($commentId: ID!, $taskId: ID, $topicId: ID)", "content": "{\n        deleteComment(commentId: $commentId, taskId: $taskId, topicId: $topicId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteComment.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "updateModuleName($moduleId: ID!, $input: EditModuleInput!)", "content": "{\n        editModule(moduleId: $moduleId, input: $input) {\n            _id\n            name\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlUpdateModuleName.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "createTag($input: TagInput!)", "content": "{\n        createTag(input: $input) {\n            _id\n            name\n            color\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlcreateTag.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "hideNotification($id: ID!)", "content": "{\n        hideNotification(id: $id)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlHideNotification.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "deleteModule($moduleId: ID!)", "content": "{\n        deleteModule(moduleId: $moduleId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteModule.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "editComment($input: EditCommentInput!)", "content": "{\n        editComment(input: $input) {\n            _id\n            comments {\n                _id\n                comment\n                commentJson\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditComment.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "editProject($projectId: ID!, $input: EditProjectInput!)", "content": "{\n        editProject(projectId: $projectId, input: $input) {\n            _id\n            name\n            description\n            image\n            color\n            privacy\n            status\n            created_at\n            updated_at\n            owner {\n                _id\n                name\n                last_name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditProject.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "deleteTask($taskId: ID!, $listId: ID!, $moduleId: ID!)", "content": "{\n        deleteTask(taskId: $taskId, listId: $listId, moduleId: $moduleId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteTask.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "removeCollaborator($taskId: ID!, $userId: ID!)", "content": "{\n        removeCollaborator(taskId: $taskId, userId: $userId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlRemoveCollaborator.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "removeTaskList($moduleId: ID!, $listId: ID!)", "content": "{\n        removeTaskList(moduleId: $moduleId, listId: $listId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlRemoveTaskList.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "removeMember($projectId: ID!, $userId: ID!)", "content": "{\n        removeMember(projectId: $projectId, userId: $userId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlRemoveMember.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "createModule($input: ModuleInput!)", "content": "{\n        createModule(input: $input) {\n            _id\n            name\n            project {\n                _id\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlCreateModule.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "assignTask($taskId: ID!, $userId: ID, $url: String)", "content": "{\n        assignTask(taskId: $taskId, userId: $userId, url: $url)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlAssignTask.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "editTeam($teamId: ID!, $input: EditTeamInput!)", "content": "{\n        editTeam(teamId: $teamId, input: $input) {\n            name\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditTeam.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "createComment($input: CommentInput!)", "content": "{\n        createComment(input: $input) {\n            _id\n            count\n            comments {\n                _id\n                comment\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlCreateComment.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "logout", "content": "{\n        logout\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlLogout.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "createTask($input: TaskInput!, $moduleId: ID!, $listId: ID!)", "content": "{\n        createTask(input: $input, moduleId: $moduleId, listId: $listId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlCreateTask.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "ProfileMutation($firstName: String!, $lastName: String!, $position: String!)", "content": "{\n                insert_profiles(objects: {firstName: $firstName, lastName: $lastName, position: $position}) {\n                    affected_rows\n                    returning {\n                        firstName\n                        id\n                        lastName,\n                        position\n                    }\n                }\n            }", "metadata": {"commit_hash": "049b0e0fd2a3ca39f6f831f29a67a22151380416", "file": "sveltekit-app/src/routes/graphql/profiles/index.ts", "repo": "crewnew-git_sveltekit-hasura-docker"}}, {"type": "mutation", "name": "DeleteProfile($id: Int!)", "content": "{\n                delete_profiles(where: {id: {_eq: $id}}) {\n                    affected_rows\n                    returning {\n                        firstName\n                        id\n                        lastName\n                        position\n                    }\n                }\n            }", "metadata": {"commit_hash": "049b0e0fd2a3ca39f6f831f29a67a22151380416", "file": "sveltekit-app/src/routes/graphql/profiles/index.ts", "repo": "crewnew-git_sveltekit-hasura-docker"}}, {"type": "mutation", "name": "UpdtaeProfile($id: Int!, $firstName: String!, $lastName: String!, $position: String!)", "content": "{\n                update_profiles(where: {id: {_eq: $id}}, _set: {firstName: $firstName, lastName: $lastName, position: $position}) {\n                    affected_rows\n                    returning {\n                        firstName\n                        id\n                        lastName\n                        position\n                    }\n                }\n            }", "metadata": {"commit_hash": "049b0e0fd2a3ca39f6f831f29a67a22151380416", "file": "sveltekit-app/src/routes/graphql/profiles/index.ts", "repo": "crewnew-git_sveltekit-hasura-docker"}}, {"type": "mutation", "name": "ProfileMutation($firstName: String!, $lastName: String!, $position: String!)", "content": "{\n                insert_profiles(objects: {firstName: $firstName, lastName: $lastName, position: $position}) {\n                    affected_rows\n                    returning {\n                        firstName\n                        id\n                        lastName\n                        position\n                    }\n                }\n            }", "metadata": {"commit_hash": "049b0e0fd2a3ca39f6f831f29a67a22151380416", "file": "sveltekit-apollo/src/routes/api/graphql/index.ts", "repo": "crewnew-git_sveltekit-hasura-docker"}}, {"type": "mutation", "name": "SignUp($username: String!, $password: String!)", "content": "{\n    signUp(auth:{\n      username: $username\n      password: $password\n    }) {\n      userId\n      username\n      token\n    }\n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlMutations.js", "repo": "hashicorp_learn-terraform-preview-environment"}}, {"type": "mutation", "name": "LogIn($username: String!, $password: String!)", "content": "{\n    login(auth:{\n      username: $username\n      password: $password\n    }) {\n      userId\n      username\n      token\n    }\n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlMutations.js", "repo": "hashicorp_learn-terraform-preview-environment"}}, {"type": "mutation", "name": "SignOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlMutations.js", "repo": "hashicorp_learn-terraform-preview-environment"}}, {"type": "mutation", "name": "SubmitPayment($name: String!, $cardType: String!, $cardNumber: String!, $expiryDate: String!, $cvc: Int!, $amount: Float!)", "content": "{\n    pay(details: {\n      name: $name,\n      type: $cardType,\n      number: $cardNumber,\n      expiry: $expiryDate,\n      cv2: $cvc,\n      amount: $amount,\n    }) {\n      id,\n      card_plaintext,\n      card_ciphertext,\n      message\n    } \n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlMutations.js", "repo": "hashicorp_learn-terraform-preview-environment"}}, {"type": "mutation", "name": "CreateOrder($orderItems: [OrderItemInput!])", "content": "{\n    order(items: $orderItems) {\n      id,\n      items {\n        coffee { id, name, price }\n        quantity\n      }\n    } \n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlMutations.js", "repo": "hashicorp_learn-terraform-preview-environment"}}, {"type": "mutation", "name": "updateVotes($id: Int!)", "content": "{\n    update_characters(where: {id: {_eq: $id}},\n      _inc: {votes: 1}) {\n        affected_rows\n    }\n  }", "metadata": {"commit_hash": "5bafb503f63b1dfc180e77f02d16b96d6503eb11", "file": "src/constants/graphql.js", "repo": "malgamves_GameOfCharts"}}, {"type": "mutation", "name": "createNewChall($input: NewChallInput!)", "content": "{\n            createChall(input: $input) {\n                id\n                name\n                domain\n                key\n            }\n    }", "metadata": {"commit_hash": "1ea75a71b5e675d6bf21b83ae4776b12501c6bb3", "file": "Web/Graph_Hack/includes/client/src/components/CreateChall.js", "repo": "anirudhvs_pragyan-ctf-22"}}, {"type": "mutation", "name": "CreateAwardApplicationMutation(\n    $input: CreateAwardApplicationInput!\n  )", "content": "{\n    createAwardApplication(input: $input) {\n      awardApplication {\n        ...AwardApplication\n      }\n    }\n  }\n  ${AwardApplication}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateAwardApplicationMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "DeleteFavoriteChatRoomMutation(\n    $input: DeleteFavoriteChatRoomInput!\n  )", "content": "{\n    deleteFavoriteChatroom(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/DeleteFavoriteChatRoomMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateLastReadDmMutation($input: UpdateLastReadDmInput!)", "content": "{\n    updateLastReadDm(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateLastReadDmMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateAwardApplicationMutation($input: UpdateAwardApplicationInput!)", "content": "{\n    updateAwardApplication(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateAwardApplicationMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "CreateChatmessageMutation($input: CreateChatMessageInput!)", "content": "{\n    createChatmessage(input: $input) {\n      chatmessage {\n        id\n        created\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateChatmessageMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "LoginFormMutation($input: UserLoginInput!)", "content": "{\n    login(input: $input) {\n      user {\n        rowid\n        nickname\n        lastReadDm {\n          id\n        }\n        favoritechatroomSet {\n          edges {\n            node {\n              chatroom {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/LoginFormMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "DeleteBookmarkMutation($input: DeleteBookmarkInput!)", "content": "{\n    deleteBookmark(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/DeleteBookmarkMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "CreateQuestionMutation($input: CreateQuestionInput!)", "content": "{\n    createQuestion(input: $input) {\n      dialogue {\n        id\n        created\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateQuestionMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "LogoutMutation($input: UserLogoutInput!)", "content": "{\n    logout(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/LogoutMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateStarMutation($input: UpdateStarInput!)", "content": "{\n    updateStar(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateStarMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateAnswerMutation($input: UpdateAnswerInput!)", "content": "{\n    updateAnswer(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateAnswerMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateUserMutation($input: UpdateUserInput!)", "content": "{\n    updateUser(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateUserMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "ScheduleAddFormMutation($input: CreateScheduleInput!)", "content": "{\n    createSchedule(input: $input) {\n      schedule {\n        ...ScheduleFragment_schedule\n      }\n    }\n  }\n  ${ScheduleFragment}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/ScheduleAddFormMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateCommentMutation($input: UpdateCommentInput!)", "content": "{\n    updateComment(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateCommentMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "PuzzleAddFormMutation($input: CreatePuzzleInput!)", "content": "{\n    createPuzzle(input: $input) {\n      puzzle {\n        id\n        rowid\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/PuzzleAddFormMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateCurrentAwardMutation($input: UpdateCurrentAwardInput!)", "content": "{\n    updateCurrentAward(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateCurrentAwardMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateChatroomMutation($input: UpdateChatRoomInput!)", "content": "{\n    updateChatroom(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateChatroomMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "CreateChatRoomMutation($input: CreateChatRoomInput!)", "content": "{\n    createChatroom(input: $input) {\n      chatroom {\n        id\n        description\n        created\n        user {\n          rowid\n          nickname\n          currentAward {\n            id\n            created\n            award {\n              id\n              name\n              description\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateChatRoomMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "RegisterFormMutation($input: UserRegisterInput!)", "content": "{\n    register(input: $input) {\n      user {\n        rowid\n        nickname\n        favoritechatroomSet {\n          edges {\n            node {\n              chatroom {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/RegisterFormMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "CreateHintMutation($input: CreateHintInput!)", "content": "{\n    createHint(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateHintMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateQuestionMutation($input: UpdateQuestionInput!)", "content": "{\n    updateQuestion(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateQuestionMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "CreateDirectmessageMutation($input: CreateDirectMessageInput!)", "content": "{\n    createDirectmessage(input: $input) {\n      directmessage {\n        id\n        created\n        receiver {\n          ...UserLabel_user\n        }\n      }\n    }\n  }\n  ${UserLabel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateDirectmessageMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "CreateFavoriteChatRoomMutation(\n    $input: CreateFavoriteChatRoomInput!\n  )", "content": "{\n    createFavoriteChatroom(input: $input) {\n      favchatroom {\n        chatroom {\n          ...ChatRoom\n        }\n      }\n    }\n  }\n  ${ChatRoom}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateFavoriteChatRoomMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "CreateBookmarkMutation($input: CreateBookmarkInput!)", "content": "{\n    createBookmark(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateBookmarkMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateBookmarkMutation($input: UpdateBookmarkInput!)", "content": "{\n    updateBookmark(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateBookmarkMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdatePuzzleMutation($input: UpdatePuzzleInput!)", "content": "{\n    updatePuzzle(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdatePuzzleMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateHintMutation($input: UpdateHintInput!)", "content": "{\n    updateHint(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateHintMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "commit(\n    $repoId: ID!\n    $parentId: ID\n    $message: String!\n    $document: DocumentInput!\n    $isTemplate: Boolean\n  )", "content": "{\n    commit(\n      repoId: $repoId\n      parentId: $parentId\n      message: $message\n      document: $document\n      isTemplate: $isTemplate\n    ) {\n      ...CommitWithDocument\n      repo {\n        ...EditPageRepo\n      }\n    }\n  }\n  ${fragments.CommitWithDocument}\n  ${fragments.EditPageRepo}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "pages/repo/edit.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "unpublish($repoId: ID!)", "content": "{\n    unpublish(repoId: $repoId)\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Publication/Current.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "publish(\n    $repoId: ID!\n    $commitId: ID!\n    $prepublication: Boolean!\n    $scheduledAt: DateTime\n    $updateMailchimp: Boolean!\n    $ignoreUnresolvedRepoIds: Boolean\n    $notifySubscribers: Boolean\n  )", "content": "{\n    publish(\n      repoId: $repoId\n      commitId: $commitId\n      prepublication: $prepublication\n      scheduledAt: $scheduledAt\n      updateMailchimp: $updateMailchimp\n      ignoreUnresolvedRepoIds: $ignoreUnresolvedRepoIds\n      notifySubscribers: $notifySubscribers\n    ) {\n      unresolvedRepoIds\n      publication {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Publication/PublicationForm.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "RepoMemoPublish($repoId: ID!, $parentId: ID, $text: String!)", "content": "{\n    memo: publishMemo(repoId: $repoId, parentId: $parentId, text: $text) {\n      ...RepoMemo\n    }\n  }\n  ${MemoFragment}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/modules/memo/graphql.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "RepoMemoEdit($id: ID!, $text: String!)", "content": "{\n    memo: editMemo(id: $id, text: $text) {\n      ...RepoMemo\n    }\n  }\n  ${MemoFragment}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/modules/memo/graphql.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "RepoMemoEdit($id: ID!)", "content": "{\n    memo: unpublishMemo(id: $id) {\n      ...RepoMemo\n    }\n  }\n  ${MemoFragment}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/modules/memo/graphql.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "repoArchive($repoId: ID!)", "content": "{\n    archive(repoIds: [$repoId]) {\n      nodes {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Repo/Archive.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "editRepoMeta($repoId: ID!, $publishDate: DateTime)", "content": "{\n    editRepoMeta(repoId: $repoId, publishDate: $publishDate) {\n      ...EditPageRepo\n    }\n  }\n  ${EditPageRepo}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Repo/EditMetaDate.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "placeMilestone(\n    $repoId: ID!\n    $commitId: ID!\n    $name: String!\n    $message: String!\n  )", "content": "{\n    placeMilestone(\n      repoId: $repoId\n      commitId: $commitId\n      name: $name\n      message: $message\n    ) {\n      ...MilestoneWithCommit\n    }\n  }\n  ${fragments.MilestoneWithCommit}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/VersionControl/Checklist.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "removeMilestone($repoId: ID!, $name: String!)", "content": "{\n    removeMilestone(repoId: $repoId, name: $name)\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/VersionControl/Checklist.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "uncommittedChanges($repoId: ID!, $action: Action!)", "content": "{\n    uncommittedChanges(repoId: $repoId, action: $action)\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/VersionControl/UncommittedChanges.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "signIn(\n    $email: String!\n    $context: String\n    $consents: [String!]\n    $tokenType: SignInTokenType\n  )", "content": "{\n    signIn(\n      email: $email\n      context: $context\n      consents: $consents\n      tokenType: $tokenType\n    ) {\n      phrase\n      tokenType\n      alternativeFirstFactors\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Auth/SignIn.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "signOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Auth/SignOut.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "register($input: RegisterInput!)", "content": "{\n        register(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "f65a95864c015e1317aa524d794791075b9d1a4e", "file": "packages/lambda-user-confirmed/src/services/gql-api.ts", "repo": "ziggy6792_cdk-monorepo-example-backend"}}, {"type": "mutation", "name": "createUserFeedback($email: String!, $feedback: String!)", "content": "{\n    createUserFeedback(\n      input: { data: { UserEmail: $email, Feedback: $feedback } }\n    ) {\n      userFeedback {\n        UserEmail\n        Feedback\n      }\n    }\n  }", "metadata": {"commit_hash": "7d4fb9ff93d346028d5d0c71c4512b2f7edf82bb", "file": "react-frontend/src/queries/feedback/feedback.js", "repo": "bcgov_digital.gov.bc.ca"}}, {"type": "mutation", "name": "($beneficiaryTypeAhead: Boolean)", "content": "{\n        updateOrgSetting: UpdateOrgSetting(\n          beneficiaryTypeAhead: $beneficiaryTypeAhead\n        ) {\n          id\n          name\n          settings {\n            beneficiaryTypeAhead\n          }\n        }\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/organisation/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $name: String!\n        $email: String!\n        $password: String!\n        $org: String!\n      )", "content": "{\n        signup: AddOrg(\n          name: $name\n          org: $org\n          email: $email\n          password: $password\n        ) {\n          id\n        }\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/organisation/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $name: String\n        $email: String\n        $password: String\n        $invite: String!\n      )", "content": "{\n        acceptInvite: AcceptInvite(\n          name: $name\n          invite: $invite\n          email: $email\n          password: $password\n        )\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/organisation/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($userID: String!)", "content": "{\n        removeOrgUser: RemoveUser(userID: $userID) {\n          id\n        }\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/organisation/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($id: String!)", "content": "{\n        setOrganisation: SetActiveOrganisation(orgID: $id)\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/organisation/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $questionnaireID: ID!\n        $questionID: ID!\n        $question: String\n        $description: String\n        $labels: [LabelInput]\n        $short: String\n        $leftValue: Int\n        $rightValue: Int\n        $noteRequired: Boolean\n        $notePrompt: String\n        $noteDeactivated: Boolean\n      )", "content": "{\n        editLikertQuestion: EditLikertQuestion(\n          outcomeSetID: $questionnaireID\n          questionID: $questionID\n          question: $question\n          description: $description\n          labels: $labels\n          short: $short\n          minValue: $leftValue\n          maxValue: $rightValue\n          noteRequired: $noteRequired\n          notePrompt: $notePrompt\n          noteDeactivated: $noteDeactivated\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/questions/editLikertQuestion.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $outcomeSetID: ID!\n        $question: String!\n        $description: String\n        $minValue: Int\n        $maxValue: Int!\n        $labels: [LabelInput]\n        $categoryID: String\n        $short: String\n        $noteRequired: Boolean\n        $notePrompt: String\n        $noteDeactivated: Boolean\n      )", "content": "{\n        addLikertQuestion: AddLikertQuestion(\n          outcomeSetID: $outcomeSetID\n          question: $question\n          description: $description\n          minValue: $minValue\n          maxValue: $maxValue\n          labels: $labels\n          categoryID: $categoryID\n          short: $short\n          noteRequired: $noteRequired\n          notePrompt: $notePrompt\n          noteDeactivated: $noteDeactivated\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${osFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/questions/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($outcomeSetID: String!, $questionID: String!)", "content": "{\n        deleteQuestion: DeleteQuestion(\n          outcomeSetID: $outcomeSetID\n          questionID: $questionID\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${osFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/questions/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($outcomeSetID: String!, $questionID: String!, $newIndex: Int!)", "content": "{\n        moveQuestion: MoveQuestion(\n          outcomeSetID: $outcomeSetID\n          questionID: $questionID\n          newIndex: $newIndex\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${osFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/questions/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($name: String!, $description: String)", "content": "{\n      newQuestionSet: AddOutcomeSet(name: $name, description: $description) {\n        ...defaultOutcomeSet\n      }\n    }\n    ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/outcomeSets/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $id: ID!\n        $name: String!\n        $description: String\n        $instructions: String\n        $noteRequired: Boolean\n        $notePrompt: String\n        $noteDeactivated: Boolean\n      )", "content": "{\n        editQuestionSet: EditOutcomeSet(\n          outcomeSetID: $id\n          name: $name\n          description: $description\n          instructions: $instructions\n          noteRequired: $noteRequired\n          notePrompt: $notePrompt\n          noteDeactivated: $noteDeactivated\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/outcomeSets/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n        deleteQuestionSet: DeleteOutcomeSet(outcomeSetID: $id)\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/outcomeSets/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($id: String!)", "content": "{\n        importQuestionnaire: ImportOutcomeSet(source: \"softoutcomes\", id: $id) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/catalogue/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($beneficiaryID: String!, $summonID: String!)", "content": "{\n        newMeetingFromSummon: NewMeetingFromSummon(\n          beneficiaryID: $beneficiaryID\n          summonID: $summonID\n        )\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/summon/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($outcomeSetID: String!, $tags: [String])", "content": "{\n    generateSummon: NewMeetingSummon(outcomeSetID:$outcomeSetID, daysToComplete: ${defaultRemoteMeetingLimit}, tags: $tags)\n  }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/summon/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($sequenceID: String!, $tags: [String])", "content": "{\n    summon: NewSequenceSummon(sequenceID:$sequenceID, daysToComplete: ${defaultRemoteMeetingLimit}, tags: $tags)\n  }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/summon/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $unsubscribed: Boolean\n        $name: String\n        $language: String\n        $notifyOnRemote: Boolean\n      )", "content": "{\n        updateSelf: UpdateSelf(\n          unsubscribed: $unsubscribed\n          name: $name\n          language: $language\n          notifyOnRemote: $notifyOnRemote\n        ) {\n          ...defaultSelf\n        }\n      }\n      ${selfFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/user/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($userID: String!)", "content": "{\n        unsubscribe: Unsubscribe(userID: $userID)\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/user/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "EditBeneficiaryTags($benID: String!, $tags: [String])", "content": "{\n        editBeneficiaryTags: EditBeneficiaryTags(id: $benID, tags: $tags) {\n          ...defaultBeneficiary\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/beneficiaries/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $outcomeSetID: ID!\n        $aggregation: Aggregation!\n        $name: String!\n        $description: String\n      )", "content": "{\n        addCategory: AddCategory(\n          aggregation: $aggregation\n          outcomeSetID: $outcomeSetID\n          name: $name\n          description: $description\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${osFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/categories/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $outcomeSetID: ID!\n        $categoryID: String!\n        $aggregation: Aggregation!\n        $name: String!\n        $description: String\n      )", "content": "{\n        editCategory: EditCategory(\n          aggregation: $aggregation\n          categoryID: $categoryID\n          outcomeSetID: $outcomeSetID\n          name: $name\n          description: $description\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${osFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/categories/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($outcomeSetID: String!, $categoryID: String!)", "content": "{\n        deleteCategory: DeleteCategory(\n          outcomeSetID: $outcomeSetID\n          categoryID: $categoryID\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${osFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/categories/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($outcomeSetID: ID!, $questionID: ID!, $categoryID: ID)", "content": "{\n        setCategory: SetCategory(\n          outcomeSetID: $outcomeSetID\n          questionID: $questionID\n          categoryID: $categoryID\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${osFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/categories/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $beneficiaryID: String!\n        $outcomeSetID: String!\n        $conducted: String\n        $tags: [String]\n      )", "content": "{\n        newMeeting: AddMeeting(\n          beneficiaryID: $beneficiaryID\n          outcomeSetID: $outcomeSetID\n          conducted: $conducted\n          tags: $tags\n        ) {\n          ...defaultMeeting\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $beneficiaryID: String!\n        $outcomeSetID: String!\n        $daysToComplete: Int!\n        $tags: [String]\n      )", "content": "{\n        newRemoteMeeting: AddRemoteMeeting(\n          beneficiaryID: $beneficiaryID\n          outcomeSetID: $outcomeSetID\n          daysToComplete: $daysToComplete\n          tags: $tags\n        ) {\n          JTI\n        }\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $meetingID: String!\n        $questionID: String!\n        $value: Int!\n        $notes: String\n      )", "content": "{\n        addLikertAnswer: AddLikertAnswer(\n          meetingID: $meetingID\n          questionID: $questionID\n          value: $value\n          allowOverwrite: true\n          notes: $notes\n        ) {\n          ...meetingWithOutcomeSetAndAggregates\n        }\n      }\n      ${fragmentWithOutcomeSetAndAggregates}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($meetingID: String!)", "content": "{\n        completeMeeting: CompleteMeeting(meetingID: $meetingID) {\n          ...meetingWithOutcomeSetAndAggregates\n        }\n      }\n      ${fragmentWithOutcomeSetAndAggregates}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($meetingID: String!, $notes: String)", "content": "{\n        setNotes: SetMeetingNotes(meetingID: $meetingID, notes: $notes) {\n          ...meetingWithOutcomeSetAndAggregates\n        }\n      }\n      ${fragmentWithOutcomeSetAndAggregates}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "DeleteMeeting($meetingID: String!)", "content": "{\n        DeleteMeeting(meetingID: $meetingID)\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "EditMeetingTags($meetingID: String!, $tags: [String])", "content": "{\n        editMeetingTags: EditMeetingTags(meetingID: $meetingID, tags: $tags) {\n          ...meetingWithOutcomeSetAndAggregates\n        }\n      }\n      ${fragmentWithOutcomeSetAndAggregates}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "EditMeetingDate($meetingID: String!, $conducted: String!)", "content": "{\n        editMeetingDate: EditMeetingDate(\n          meetingID: $meetingID\n          conducted: $conducted\n        ) {\n          ...meetingWithOutcomeSetAndAggregates\n        }\n      }\n      ${fragmentWithOutcomeSetAndAggregates}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "EditMeetingBeneficiary(\n        $meetingID: String!\n        $newBeneficiaryID: String!\n      )", "content": "{\n        editMeetingBeneficiary: EditMeetingBeneficiary(\n          meetingID: $meetingID\n          newBeneficiaryID: $newBeneficiaryID\n        ) {\n          ...meetingWithOutcomeSetAndAggregates\n        }\n      }\n      ${fragmentWithOutcomeSetAndAggregates}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $name: String!\n        $description: String\n        $destination: String\n        $questionnaires: [String]!\n      )", "content": "{\n        newSequence: NewSequence(\n          name: $name\n          description: $description\n          destination: $destination\n          questionnaires: $questionnaires\n        ) {\n          ...defaultSequence\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/sequence/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $beneficiaryID: String!\n        $sequenceID: String!\n        $conducted: String\n        $tags: [String]\n      )", "content": "{\n        startSequence: StartSequence(\n          beneficiaryID: $beneficiaryID\n          sequenceID: $sequenceID\n          conducted: $conducted\n          tags: $tags\n        ) {\n          meetings {\n            id\n          }\n          destination\n        }\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/sequence/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $beneficiaryID: String!\n        $sequenceID: String!\n        $daysToComplete: Int!\n        $tags: [String]\n      )", "content": "{\n        startRemoteSequence: StartRemoteSequence(\n          beneficiaryID: $beneficiaryID\n          sequenceID: $sequenceID\n          daysToComplete: $daysToComplete\n          tags: $tags\n        )\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/sequence/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($id: String!)", "content": "{\n        deleteSequence: DeleteSequence(id: $id)\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/sequence/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "(\n        $id: String!\n        $name: String!\n        $description: String\n        $destination: String\n        $questionnaires: [String]!\n      )", "content": "{\n        editSequence: EditSequence(\n          id: $id\n          name: $name\n          description: $description\n          destination: $destination\n          questionnaires: $questionnaires\n        ) {\n          ...defaultSequence\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/sequence/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($topic: String!, $description: String!, $level: EnumReportLevel, $targetURL: String!)", "content": "{\n        createReport(record: {\n            topic: $topic,\n            description: $description,\n            level: $level,\n            targetURL: $targetURL\n        }) {\n            recordId\n        }\n    }", "metadata": {"commit_hash": "69435c083093dc503080b01e26d8c039549d3d77", "file": "legacy/containers/ReportPage.js", "repo": "zapkub_cu-vivid-museum-wiki"}}, {"type": "mutation", "name": "MUTATION_ADD_TO_CART($variantId: String!, $quantity: Int!, $note: String)", "content": "{\n    addToCart(variantId: $variantId, quantity: $quantity, note: $note) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/checkout/mutations/MUTATION_ADD_TO_CART.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_UPDATE_QUANTITY($itemId: String!, $quantity: Int!)", "content": "{\n    updateCartQuantity(itemId: $itemId, quantity: $quantity) {\n        success\n        message\n        data\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/checkout/mutations/MUTATION_UPDATE_CART_ITEM.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_REMOVE_FROM_CART($itemId: String!)", "content": "{\n        removeFromCart(itemId: $itemId) {\n            success\n            message\n            data\n        }\n    }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/checkout/mutations/MUTATION_REMOVE_FROM_CART.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_SIGNIN_EMAIL($email: String!, $password: String!)", "content": "{\n    signinEmail(email: $email, password: $password) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/user/mutations/MUTATION_SIGNIN_EMAIL.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_SIGNUP_CUSTOMER($email: String!, $password: String!)", "content": "{\n    signupCustomer(email: $email, password: $password) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/user/mutations/MUTATION_SIGNUP_EMAIL.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_SIGNOUT", "content": "{\n    signout {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/user/mutations/MUTATION_SIGNOUT.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_CHECKOUT_ADDRESS($shippingAddress: ShippingAddressInput)", "content": "{\n    populateCheckout(shippingAddress: $shippingAddress) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/address/mutations/MUTATION_CHECKOUT_ADDRESS.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "CreateLapTime(\n      $input: CreateLapTimeInput!\n      $condition: ModelLapTimeConditionInput\n    )", "content": "{\n      createLapTime(input: $input, condition: $condition) {\n        id\n        raceId\n        playerId\n        player {\n          id\n          claims {\n            items {\n              id\n              uuid\n              username\n            }\n          }\n          car {\n            id\n            color\n          }\n        }\n        timeInMilliSec\n        type\n        createdAt\n        updatedAt\n      }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceDataReceiver/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}}, {"type": "mutation", "name": "CreateCar(\n      $input: CreateCarInput!\n      $condition: ModelCarConditionInput\n    )", "content": "{\n    createCar(input: $input, condition: $condition) {\n      id\n    }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}}, {"type": "mutation", "name": "CreateOverview(\n      $input: CreateOverviewInput!\n      $condition: ModelOverviewConditionInput\n    )", "content": "{\n      createOverview(input: $input, condition: $condition) {\n        id\n    }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}}, {"type": "mutation", "name": "CreateRace(\n      $input: CreateRaceInput!\n      $condition: ModelRaceConditionInput\n    )", "content": "{\n      createRace(input: $input, condition: $condition) {\n        id\n    }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}}, {"type": "mutation", "name": "CreatePlayer(\n      $input: CreatePlayerInput!\n      $condition: ModelPlayerConditionInput\n    )", "content": "{\n      createPlayer(input: $input, condition: $condition) {\n        id\n    }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}}, {"type": "mutation", "name": "UpdateOverview(\n      $input: UpdateOverviewInput!\n      $condition: ModelOverviewConditionInput\n    )", "content": "{\n      updateOverview(input: $input, condition: $condition) {\n        id\n      }\n    }", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}}, {"type": "mutation", "name": "UpdateRace(\n      $input: UpdateRaceInput!\n      $condition: ModelRaceConditionInput\n    )", "content": "{\n      updateRace(input: $input, condition: $condition) {\n        id\n      }\n    }", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}}, {"type": "mutation", "name": "SubmitMarriageIntentionCertificateOrder(\n    $email: String!\n    $dayPhoneUnformattedStr: String!\n    $appointmentDate: String!\n    $partnerA_firstName: String!\n    $partnerA_lastName: String!\n    $partnerA_middleName: String!\n    $partnerA_suffix: String!\n    $partnerA_surName: String!\n    $partnerA_dob: String!\n    $partnerA_age: String!\n    $partnerA_occupation: String!\n    $partnerA_sex: String!\n    $partnerA_bloodRelation: String!\n    $partnerA_bloodRelationDesc: String!\n    $partnerA_parentsMarriedAtBirth: String!\n    $partnerA_parentA_Name: String!\n    $partnerA_parentB_Name: String!\n    $partnerA_parentA_Surname: String!\n    $partnerA_parentB_Surname: String!\n    $partnerA_birthCity: String!\n    $partnerA_birthState: String!\n    $partnerA_birthCountry: String!\n    $partnerA_birthHospital: String!\n    $partnerA_partnershipType: String!\n    $partnerA_partnershipTypeDissolved: String!\n    $partnerA_partnershipState: String!\n    $partnerA_residenceAddress: String!\n    $partnerA_residenceCity: String!\n    $partnerA_residenceState: String!\n    $partnerA_residenceCountry: String!\n    $partnerA_residenceZip: String!\n    $partnerA_marriageNumb: String!\n    $partnerA_lastMarriageStatus: String!\n    $partnerB_firstName: String!\n    $partnerB_lastName: String!\n    $partnerB_middleName: String!\n    $partnerB_suffix: String!\n    $partnerB_surName: String!\n    $partnerB_dob: String!\n    $partnerB_age: String!\n    $partnerB_occupation: String!\n    $partnerB_sex: String!\n    $partnerB_bloodRelation: String!\n    $partnerB_bloodRelationDesc: String!\n    $partnerB_parentsMarriedAtBirth: String!\n    $partnerB_parentA_Name: String!\n    $partnerB_parentB_Name: String!\n    $partnerB_parentA_Surname: String!\n    $partnerB_parentB_Surname: String!\n    $partnerB_birthCity: String!\n    $partnerB_birthState: String!\n    $partnerB_birthCountry: String!\n    $partnerB_birthHospital: String!\n    $partnerB_partnershipType: String!\n    $partnerB_partnershipTypeDissolved: String!\n    $partnerB_partnershipState: String!\n    $partnerB_residenceAddress: String!\n    $partnerB_residenceCity: String!\n    $partnerB_residenceState: String!\n    $partnerB_residenceZip: String!\n    $partnerB_residenceCountry: String!\n    $partnerB_marriageNumb: String!\n    $partnerB_lastMarriageStatus: String!\n  )", "content": "{\n    submitMarriageIntentionCertificateOrder(\n      Email: $email\n      DayPhone: $dayPhoneUnformattedStr\n      AppointmentDate: $appointmentDate\n      AApplicantFName: $partnerA_firstName\n      AApplicantLName: $partnerA_lastName\n      AApplicantMiddleName: $partnerA_middleName\n      AApplicantSuffix: $partnerA_suffix\n      APostmarriageSurname: $partnerA_surName\n      ADOB: $partnerA_dob\n      ACurrentAge: $partnerA_age\n      AOccupation: $partnerA_occupation\n      AMotherName: $partnerA_parentA_Name\n      AMotherSurname: $partnerA_parentA_Surname\n      AFatherName: $partnerA_parentB_Name\n      AFatherSurname: $partnerA_parentB_Surname\n      AStreetAddress: $partnerA_residenceAddress\n      ACity: $partnerA_residenceCity\n      AState: $partnerA_residenceState\n      AZIPCode: $partnerA_residenceZip\n      AResidenceCountry: $partnerA_residenceCountry\n      AMarriageNumber: $partnerA_marriageNumb\n      AStatofLastMarriage: $partnerA_lastMarriageStatus\n      APartnershipStatus: $partnerA_partnershipType\n      ADissolutionStatus: $partnerA_partnershipTypeDissolved\n      APartnershipState: $partnerA_partnershipState\n      AParentsMarried: $partnerA_parentsMarriedAtBirth\n      ABloodRelative: $partnerA_bloodRelation\n      ABloodDescr: $partnerA_bloodRelationDesc\n      ABirthplace: $partnerA_birthCity\n      ABirthState: $partnerA_birthState\n      ABirthCountry: $partnerA_birthCountry\n      ASexNum: $partnerA_sex\n      ASex: $partnerA_sex\n      ABirthHospital: $partnerA_birthHospital\n      BApplicantFName: $partnerB_firstName\n      BApplicantLName: $partnerB_lastName\n      BApplicantMiddleName: $partnerB_middleName\n      BApplicantSuffix: $partnerB_suffix\n      BPostmarriageSurname: $partnerB_surName\n      BDOB: $partnerB_dob\n      BCurrentAge: $partnerB_age\n      BOccupation: $partnerB_occupation\n      BMotherName: $partnerB_parentA_Name\n      BMotherSurname: $partnerB_parentA_Surname\n      BFatherName: $partnerB_parentB_Name\n      BFatherSurname: $partnerB_parentB_Surname\n      BStreetAddress: $partnerB_residenceAddress\n      BCity: $partnerB_residenceCity\n      BState: $partnerB_residenceState\n      BZIPCode: $partnerB_residenceZip\n      BResidenceCountry: $partnerB_residenceCountry\n      BMarriageNumber: $partnerB_marriageNumb\n      BStatofLastMarriage: $partnerB_lastMarriageStatus\n      BPartnershipStatus: $partnerB_partnershipType\n      BDissolutionStatus: $partnerB_partnershipTypeDissolved\n      BPartnershipState: $partnerB_partnershipState\n      BParentsMarried: $partnerB_parentsMarriedAtBirth\n      BBloodRelative: $partnerB_bloodRelation\n      BBloodDescr: $partnerB_bloodRelationDesc\n      BBirthplace: $partnerB_birthCity\n      BBirthState: $partnerB_birthState\n      BBirthCountry: $partnerB_birthCountry\n      BSexNum: $partnerB_sex\n      BSex: $partnerB_sex\n      BBirthHospital: $partnerB_birthHospital\n    ) {\n      order {\n        id\n      }\n      error {\n        message\n        cause\n      }\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/submit-marriage-intention-certificate-order.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "DeleteBirthCertificateUploadedFile(\n    $attachmentKey: String!\n    $uploadSessionId: String!\n  )", "content": "{\n    deleteUpload(\n      type: BC\n      attachmentKey: $attachmentKey\n      uploadSessionID: $uploadSessionId\n    ) {\n      message\n      success\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/delete-birth-certificate-uploaded-file.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "SubmitDeathCertificateOrder(\n    $contactName: String!\n    $contactEmail: String!\n    $confirmContactEmail: String!\n    $contactPhone: String!\n    $shippingName: String!\n    $shippingCompanyName: String!\n    $shippingAddress1: String!\n    $shippingAddress2: String!\n    $shippingCity: String!\n    $shippingState: String!\n    $shippingZip: String!\n    $cardToken: String!\n    $cardLast4: String!\n    $cardholderName: String!\n    $billingAddress1: String!\n    $billingAddress2: String!\n    $billingCity: String!\n    $billingState: String!\n    $billingZip: String!\n    $items: [DeathCertificateOrderItemInput!]!\n    $idempotencyKey: String!\n  )", "content": "{\n    submitDeathCertificateOrder(\n      contactName: $contactName\n      contactEmail: $contactEmail\n      confirmContactEmail: $confirmContactEmail\n      contactPhone: $contactPhone\n      shippingName: $shippingName\n      shippingCompanyName: $shippingCompanyName\n      shippingAddress1: $shippingAddress1\n      shippingAddress2: $shippingAddress2\n      shippingCity: $shippingCity\n      shippingState: $shippingState\n      shippingZip: $shippingZip\n      cardToken: $cardToken\n      cardLast4: $cardLast4\n      cardholderName: $cardholderName\n      billingAddress1: $billingAddress1\n      billingAddress2: $billingAddress2\n      billingCity: $billingCity\n      billingState: $billingState\n      billingZip: $billingZip\n      items: $items\n      idempotencyKey: $idempotencyKey\n    ) {\n      order {\n        id\n      }\n      error {\n        message\n        cause\n      }\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/submit-death-certificate-order.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "SubmitMarriageCertificateOrder(\n    $contactName: String!\n    $contactEmail: String!\n    $confirmContactEmail: String!\n    $contactPhone: String!\n    $shippingName: String!\n    $shippingCompanyName: String!\n    $shippingAddress1: String!\n    $shippingAddress2: String!\n    $shippingCity: String!\n    $shippingState: String!\n    $shippingZip: String!\n    $cardToken: String!\n    $cardLast4: String!\n    $cardholderName: String!\n    $billingAddress1: String!\n    $billingAddress2: String!\n    $billingCity: String!\n    $billingState: String!\n    $billingZip: String!\n    $item: MarriageCertificateOrderItemInput!\n    $idempotencyKey: String!\n  )", "content": "{\n    submitMarriageCertificateOrder(\n      contactName: $contactName\n      contactEmail: $contactEmail\n      confirmContactEmail: $confirmContactEmail\n      contactPhone: $contactPhone\n      shippingName: $shippingName\n      shippingCompanyName: $shippingCompanyName\n      shippingAddress1: $shippingAddress1\n      shippingAddress2: $shippingAddress2\n      shippingCity: $shippingCity\n      shippingState: $shippingState\n      shippingZip: $shippingZip\n      cardToken: $cardToken\n      cardLast4: $cardLast4\n      cardholderName: $cardholderName\n      billingAddress1: $billingAddress1\n      billingAddress2: $billingAddress2\n      billingCity: $billingCity\n      billingState: $billingState\n      billingZip: $billingZip\n      item: $item\n      idempotencyKey: $idempotencyKey\n    ) {\n      order {\n        id\n      }\n      error {\n        message\n        cause\n      }\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/submit-marriage-certificate-order.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "DeleteMarriageCertificateUploadedFile(\n    $attachmentKey: String!\n    $uploadSessionId: String!\n  )", "content": "{\n    deleteUpload(\n      type: MC\n      attachmentKey: $attachmentKey\n      uploadSessionID: $uploadSessionId\n    ) {\n      message\n      success\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/delete-marriage-certificate-uploaded-file.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "SubmitBirthCertificateOrder(\n    $contactName: String!\n    $contactEmail: String!\n    $confirmContactEmail: String!\n    $contactPhone: String!\n    $shippingName: String!\n    $shippingCompanyName: String!\n    $shippingAddress1: String!\n    $shippingAddress2: String!\n    $shippingCity: String!\n    $shippingState: String!\n    $shippingZip: String!\n    $cardToken: String!\n    $cardLast4: String!\n    $cardholderName: String!\n    $billingAddress1: String!\n    $billingAddress2: String!\n    $billingCity: String!\n    $billingState: String!\n    $billingZip: String!\n    $item: BirthCertificateOrderItemInput!\n    $idempotencyKey: String!\n  )", "content": "{\n    submitBirthCertificateOrder(\n      contactName: $contactName\n      contactEmail: $contactEmail\n      confirmContactEmail: $confirmContactEmail\n      contactPhone: $contactPhone\n      shippingName: $shippingName\n      shippingCompanyName: $shippingCompanyName\n      shippingAddress1: $shippingAddress1\n      shippingAddress2: $shippingAddress2\n      shippingCity: $shippingCity\n      shippingState: $shippingState\n      shippingZip: $shippingZip\n      cardToken: $cardToken\n      cardLast4: $cardLast4\n      cardholderName: $cardholderName\n      billingAddress1: $billingAddress1\n      billingAddress2: $billingAddress2\n      billingCity: $billingCity\n      billingState: $billingState\n      billingZip: $billingZip\n      item: $item\n      idempotencyKey: $idempotencyKey\n    ) {\n      order {\n        id\n      }\n      error {\n        message\n        cause\n      }\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/submit-birth-certificate-order.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "ResetPassword(\n    $newPassword: String!\n    $confirmPassword: String!\n    $token: String!\n  )", "content": "{\n    resetPassword(\n      newPassword: $newPassword\n      confirmPassword: $confirmPassword\n      token: $token\n    ) {\n      caseId\n      status\n      error\n      messages\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/access-boston/src/client/graphql/reset-password.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "AddMfaDevice(\n    $phoneNumber: String\n    $email: String\n    $type: VerificationType!\n  )", "content": "{\n    addMfaDevice(phoneNumber: $phoneNumber, email: $email, type: $type) {\n      sessionId\n      error\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/access-boston/src/client/graphql/add-mfa-device.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "ChangePassword(\n    $currentPassword: String!\n    $newPassword: String!\n    $confirmPassword: String!\n  )", "content": "{\n    changePassword(\n      currentPassword: $currentPassword\n      newPassword: $newPassword\n      confirmPassword: $confirmPassword\n    ) {\n      caseId\n      status\n      error\n      messages\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/access-boston/src/client/graphql/change-password.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "VerifyMfaDevice($sessionId: String!, $pairingCode: String!)", "content": "{\n    verifyMfaDevice(sessionId: $sessionId, pairingCode: $pairingCode) {\n      success\n      error\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/access-boston/src/client/graphql/verify-mfa-device.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "CreateProvider(\n    $firstName: String!\n    $lastName: String\n    $neighborhood: String\n    $city: String!\n    $state: String!\n    $country: String!\n    $email: String!\n    $facility: String\n    $role: String!\n    $requests: [String!]!\n    $description: String!\n    $latitude: Float!\n    $longitude: Float!\n    $address: String!\n  )", "content": "{\n    createProvider(\n      input: {\n        firstName: $firstName\n        lastName: $lastName\n        neighborhood: $neighborhood\n        city: $city\n        state: $state\n        country: $country\n        email: $email\n        facility: $facility\n        role: $role\n        requests: $requests\n        description: $description\n        latitude: $latitude\n        longitude: $longitude\n        address: $address\n      }\n    ) {\n      errors\n      editLink\n      provider {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "5e9ad0842300f9fd2c1d60fa00bf0311375e29bd", "file": "app/javascript/packs/queries/createProvider.js", "repo": "feedadoc_feedadoc"}}, {"type": "mutation", "name": "UpdateProvider(\n    $token: String!\n    $firstName: String!\n    $lastName: String\n    $neighborhood: String\n    $city: String!\n    $state: String!\n    $email: String!\n    $country: String!\n    $facility: String\n    $role: String!\n    $requests: [String!]!\n    $description: String!\n    $latitude: Float!\n    $longitude: Float!\n    $address: String!\n    $active: Boolean!\n  )", "content": "{\n    updateProvider(\n      input: {\n        token: $token\n        firstName: $firstName\n        lastName: $lastName\n        neighborhood: $neighborhood\n        city: $city\n        state: $state\n        country: $country\n        email: $email\n        facility: $facility\n        address: $address\n        role: $role\n        requests: $requests\n        description: $description\n        active: $active\n        latitude: $latitude\n        longitude: $longitude\n      }\n    ) {\n      errors\n      provider {\n        id\n        firstName\n        lastName\n        neighborhood\n        city\n        state\n        facility\n        email\n        role\n        description\n        requests {\n          type\n          satisfied\n        }\n        active\n      }\n    }\n  }", "metadata": {"commit_hash": "5e9ad0842300f9fd2c1d60fa00bf0311375e29bd", "file": "app/javascript/packs/hooks/useTokenEntity.js", "repo": "feedadoc_feedadoc"}}, {"type": "mutation", "name": "CreateVolunteer(\n    $firstName: String!\n    $lastName: String\n    $neighborhood: String\n    $city: String!\n    $state: String!\n    $country: String!\n    $latitude: Float!\n    $longitude: Float!\n    $address: String!\n    $email: String!\n    $providerId: ID!\n    $requests: [String!]!\n    $description: String\n    $availabilities: [String!]!\n    $phone: String\n    $social: String\n    $over18: Boolean!\n  )", "content": "{\n    createVolunteer(\n      input: {\n        firstName: $firstName\n        lastName: $lastName\n        neighborhood: $neighborhood\n        city: $city\n        state: $state\n        country: $country\n        latitude: $latitude\n        longitude: $longitude\n        address: $address\n        email: $email\n        providerId: $providerId\n        requests: $requests\n        description: $description\n        availabilities: $availabilities\n        phone: $phone\n        social: $social\n        over18: $over18\n      }\n    ) {\n      errors\n      volunteer {\n        id\n        firstName\n        responses {\n          provider {\n            id\n          }\n          requests\n          availabilities\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5e9ad0842300f9fd2c1d60fa00bf0311375e29bd", "file": "app/javascript/packs/pages/volunteer_signup/VolunteerStepper.jsx", "repo": "feedadoc_feedadoc"}}, {"type": "mutation", "name": "AddOrder($name: String!)", "content": "{\n    createOrder(name: $name) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next/pages/index.js", "repo": "department-stockholm_apollo-component"}}, {"type": "mutation", "name": "DeletePost($id: ID!)", "content": "{\n    deletePost(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next-cms/pages/posts/index.js", "repo": "department-stockholm_apollo-component"}}, {"type": "mutation", "name": "CreatePost($title: String!, $excerpt: String!)", "content": "{\n    createPost(title: $title, excerpt: $excerpt) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next-cms/pages/posts/new.js", "repo": "department-stockholm_apollo-component"}}, {"type": "mutation", "name": "DeletePost($id: ID!)", "content": "{\n    deletePost(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next-cms/pages/posts/edit.js", "repo": "department-stockholm_apollo-component"}}, {"type": "mutation", "name": "UpdatePost($id: ID!, $title: String!, $excerpt: String)", "content": "{\n    # $title\n    updatePost(id: $id, title: $title, excerpt: $excerpt) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next-cms/pages/posts/edit.js", "repo": "department-stockholm_apollo-component"}}, {"type": "mutation", "name": "saveUserCommunityPermissions(\n    $input: SaveUserCommunityPermissionsInput!\n  )", "content": "{\n    saveUserCommunityPermissions(input: $input) {\n      ...userInfo\n      ...userCommunities\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunitiesFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "admin/src/api/mutations.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "uploadImage($input: UploadImageInput!)", "content": "{\n    uploadImage(input: $input)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/uploadImage.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "markDirectMessageNotificationsSeen", "content": "{\n    markDirectMessageNotificationsSeen\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/notification/markDirectMessageNotificationsSeen.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "markSingleNotificationSeen($id: ID!)", "content": "{\n    markSingleNotificationSeen(id: $id)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/notification/markSingleNotificationSeen.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "markAllNotificationsSeen", "content": "{\n    markAllNotificationsSeen\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/notification/markNotificationsSeen.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "approvePendingCommunityMember(\n    $input: ApprovePendingCommunityMemberInput!\n  )", "content": "{\n    approvePendingCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/approvePendingCommunityMember.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "addCommunityModerator($input: AddCommunityModeratorInput!)", "content": "{\n    addCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/addCommunityModerator.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "removeCommunityMember($input: RemoveCommunityMemberInput!)", "content": "{\n    removeCommunityMember(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/removeCommunityMember.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "blockPendingCommunityMember(\n    $input: BlockPendingCommunityMemberInput!\n  )", "content": "{\n    blockPendingCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/blockPendingCommunityMember.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "addCommunityMemberWithToken(\n    $input: AddCommunityMemberWithTokenInput!\n  )", "content": "{\n    addCommunityMemberWithToken(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/addCommunityMemberWithToken.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "removeCommunityModerator($input: RemoveCommunityModeratorInput!)", "content": "{\n    removeCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/removeCommunityModerator.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "addPendingCommunityMember($input: AddPendingCommunityMemberInput!)", "content": "{\n    addPendingCommunityMember(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/addPendingCommunityMember.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "addCommunityMember($input: AddCommunityMemberInput!)", "content": "{\n    addCommunityMember(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/addCommunityMember.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "blockCommunityMember($input: BlockCommunityMemberInput!)", "content": "{\n    blockCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/blockCommunityMember.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "removePendingCommunityMember(\n    $input: RemovePendingCommunityMemberInput!\n  )", "content": "{\n    removePendingCommunityMember(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/removePendingCommunityMember.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "addCommunityMembers($input: AddCommunityMembersInput!)", "content": "{\n    addCommunityMembers(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/addCommunityMembers.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "unblockCommunityMember($input: UnblockCommunityMemberInput!)", "content": "{\n    unblockCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/unblockCommunityMember.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "setThreadLock($threadId: ID!, $value: Boolean!)", "content": "{\n    setThreadLock(threadId: $threadId, value: $value) {\n      id\n      isLocked\n    }\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/lockThread.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "toggleThreadNotifications($threadId: ID!)", "content": "{\n    toggleThreadNotifications(threadId: $threadId) {\n      id\n      receiveNotifications\n    }\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/toggleThreadNotifications.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "editThread($input: EditThreadInput!)", "content": "{\n    editThread(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/editThread.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "addThreadReaction($input: AddThreadReactionInput!)", "content": "{\n    addThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/addThreadReaction.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "deleteThread($threadId: ID!)", "content": "{\n    deleteThread(threadId: $threadId)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/deleteThread.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "publishThread($thread: ThreadInput!)", "content": "{\n    publishThread(thread: $thread) {\n      ...threadInfo\n      channel {\n        id\n        slug\n        community {\n          id\n          slug\n        }\n      }\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/publishThread.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "moveThread($threadId: ID!, $channelId: ID!)", "content": "{\n    moveThread(threadId: $threadId, channelId: $channelId) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/moveThread.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "removeThreadReaction($input: RemoveThreadReactionInput!)", "content": "{\n    removeThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/removeThreadReaction.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "disableChannelTokenJoin($input: DisableChannelTokenJoinInput!)", "content": "{\n    disableChannelTokenJoin(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/disableChannelTokenJoin.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "deleteChannel($channelId: ID!)", "content": "{\n    deleteChannel(channelId: $channelId)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/deleteChannel.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "toggleChannelNotifications($channelId: ID!)", "content": "{\n    toggleChannelNotifications(channelId: $channelId) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/toggleChannelNotifications.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "updateSlackSettings($input: UpdateSlackSettingsInput!)", "content": "{\n    updateSlackSettings(input: $input) {\n      ...channelInfo\n      slackSettings {\n        botLinks {\n          eventType\n          slackChannelId\n        }\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/updateSlackSettings.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "archiveChannel($input: ArchiveChannelInput!)", "content": "{\n    archiveChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/archiveChannel.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "resetChannelJoinToken($input: ResetChannelJoinTokenInput!)", "content": "{\n    resetChannelJoinToken(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/resetChannelJoinToken.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "createChannel($input: CreateChannelInput!)", "content": "{\n    createChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/createChannel.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "togglePendingUser($input: TogglePendingUserInput!)", "content": "{\n    togglePendingUser(input: $input) {\n      ...channelInfo\n      pendingUsers {\n        ...userInfo\n      }\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${channelInfoFragment}\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/toggleChannelPendingUser.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "joinChannelWithToken($input: JoinChannelWithTokenInput!)", "content": "{\n    joinChannelWithToken(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/joinChannelWithToken.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "unblockUser($input: UnblockUserInput!)", "content": "{\n    unblockUser(input: $input) {\n      ...channelInfo\n      pendingUsers {\n        ...userInfo\n      }\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${channelInfoFragment}\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/unblockChannelBlockedUser.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "updateChannelSlackBotLinks($input: UpdateChannelSlackBotLinksInput)", "content": "{\n    updateChannelSlackBotLinks(input: $input) {\n      ...channelInfo\n      slackSettings {\n        botLinks {\n          threadCreated\n        }\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/updateChannelSlackBotLinks.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "enableChannelTokenJoin($input: EnableChannelTokenJoinInput!)", "content": "{\n    enableChannelTokenJoin(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/enableChannelTokenJoin.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "toggleChannelSubscription($channelId: ID!)", "content": "{\n    toggleChannelSubscription(channelId: $channelId) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/toggleChannelSubscription.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "editChannel($input: EditChannelInput!)", "content": "{\n    editChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/editChannel.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "restoreChannel($input: RestoreChannelInput!)", "content": "{\n    restoreChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/restoreChannel.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "sendSlackInvites($input: SendSlackInvitesInput!)", "content": "{\n    sendSlackInvites(input: $input) {\n      ...communityInfo\n      slackSettings {\n        teamName\n        isConnected\n        hasSentInvites\n        memberCount\n        invitesSentAt\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/sendSlackInvites.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "saveBrandedLoginSettings($input: SaveBrandedLoginSettingsInput!)", "content": "{\n    saveBrandedLoginSettings(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/saveBrandedLoginSettings.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "enableCommunityWatercooler(\n    $input: EnableCommunityWatercoolerInput!\n  )", "content": "{\n    enableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/enableCommunityWatercooler.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "resetCommunityJoinToken($input: ResetCommunityJoinTokenInput!)", "content": "{\n    resetCommunityJoinToken(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/resetCommunityJoinToken.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "updateAdministratorEmail($input: UpdateAdministratorEmailInput!)", "content": "{\n    updateAdministratorEmail(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/updateAdministratorEmail.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "setCommunityLastSeen($input: SetCommunityLastSeenInput!)", "content": "{\n    setCommunityLastSeen(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/setCommunityLastSeen.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "enableCommunityTokenJoin($input: EnableCommunityTokenJoinInput!)", "content": "{\n    enableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/enableCommunityTokenJoin.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "disableCommunityTokenJoin($input: DisableCommunityTokenJoinInput!)", "content": "{\n    disableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/disableCommunityTokenJoin.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "pinThread($threadId: ID!, $communityId: ID!, $value: String)", "content": "{\n    pinThread(threadId: $threadId, communityId: $communityId, value: $value) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/pinCommunityThread.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "sendEmailInvites($input: EmailInvitesInput!)", "content": "{\n    sendEmailInvites(input: $input)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/sendCommunityEmailInvites.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "createCommunity($input: CreateCommunityInput!)", "content": "{\n    createCommunity(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/createCommunity.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "disableBrandedLogin($input: DisableBrandedLoginInput!)", "content": "{\n    disableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/disableBrandedLogin.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "deleteCommunity($communityId: ID!)", "content": "{\n    deleteCommunity(communityId: $communityId)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/deleteCommunity.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "editCommunity($input: EditCommunityInput!)", "content": "{\n    editCommunity(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/editCommunity.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "enableBrandedLogin($input: EnableBrandedLoginInput!)", "content": "{\n    enableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/enableBrandedLogin.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "disableCommunityWatercooler(\n    $input: DisableCommunityWatercoolerInput!\n  )", "content": "{\n    disableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/disableCommunityWatercooler.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "banUser($input: BanUserInput!)", "content": "{\n    banUser(input: $input)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/banUser.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "toggleNotificationSettings($input: ToggleNotificationSettingsInput)", "content": "{\n    toggleNotificationSettings(input: $input) {\n      ...userInfo\n      ...userSettings\n    }\n  }\n  ${userInfoFragment}\n  ${userSettingsFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/toggleUserNotificationSettings.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "updateUserEmail($email: LowercaseString!)", "content": "{\n    updateUserEmail(email: $email) {\n      ...userInfo\n      email\n      pendingEmail\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/updateUserEmail.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "deleteCurrentUser", "content": "{\n    deleteCurrentUser\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/deleteCurrentUser.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "editUser($input: EditUserInput!)", "content": "{\n    editUser(input: $input) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/editUser.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "reportUser($input: ReportUserInput!)", "content": "{\n    reportUser(input: $input)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/reportUser.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "setLastSeen($id: ID!)", "content": "{\n    setLastSeen(id: $id) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/directMessageThread/setDMThreadLastSeen.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "createDirectMessageThread($input: DirectMessageThreadInput!)", "content": "{\n    createDirectMessageThread(input: $input) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/directMessageThread/createDirectMessageThread.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "editMessage($input: EditMessageInput!)", "content": "{\n    editMessage(input: $input) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/message/editMessage.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "deleteMessage($id: ID!)", "content": "{\n    deleteMessage(id: $id)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/message/deleteMessage.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "sendMessage($message: MessageInput!)", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/message/sendMessage.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "sendDirectMessage($message: MessageInput!)", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/message/sendDirectMessage.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "toggleReaction($reaction: ReactionInput!)", "content": "{\n    toggleReaction(reaction: $reaction) {\n      ...messageInfo\n      __typename\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/reaction/toggleReaction.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "subscribeToWebPush($subscription: WebPushSubscription!)", "content": "{\n    subscribeWebPush(subscription: $subscription)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/subscriptions/index.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "($sessionId: ID!, $name:String!, $race:String!, $class:String!)", "content": "{\n  signin(sessionId: $sessionId, name:$name, race:$race, class:$class)\n}", "metadata": {"commit_hash": "5097e0490a6c7778b553886ef30b6dda701d2584", "file": "pusher-mud-frontend/src/App.js", "repo": "sazzer_pusher-mud"}}, {"type": "mutation", "name": "connectPlayer($id: ID!)", "content": "{\n      connect(id: $id) ${presenceResult}\n    }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "presencedemo/src/graphql/operations.js", "repo": "aws-samples_aws-appsync-presence-api"}}, {"type": "mutation", "name": "disconnectPlayer($id: ID!)", "content": "{\n      disconnect(id: $id) ${presenceResult}\n    }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "presencedemo/src/graphql/operations.js", "repo": "aws-samples_aws-appsync-presence-api"}}, {"type": "mutation", "name": "disconnected($id: ID!)", "content": "{\n    disconnected(id: $id) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "src/functions/on_disconnect/on_disconnect.js", "repo": "aws-samples_aws-appsync-presence-api"}}, {"type": "mutation", "name": "connectPlayer($id: ID!)", "content": "{\n    connect(id: $id) ${presenceResult}\n  }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "test/integration/apiclient.ts", "repo": "aws-samples_aws-appsync-presence-api"}}, {"type": "mutation", "name": "disconnectPlayer($id: ID!)", "content": "{\n    disconnect(id: $id) ${presenceResult}\n  }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "test/integration/apiclient.ts", "repo": "aws-samples_aws-appsync-presence-api"}}, {"type": "mutation", "name": "RefreshToken", "content": "{\n    refreshToken\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/utils/refreshToken.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "($hash: String!)", "content": "{\n    retrieveEther(filter: { hash: $hash })\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/state/wallet/hooks.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "($cardIndex: Int!)", "content": "{\n    removeCardFromDeck(input: { deckSlug: \"showcase\", cardIndex: $cardIndex }) {\n      error {\n        code\n        message\n        path\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/state/deck/hooks.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "($cardSlug: String!, $cardIndex: Int!)", "content": "{\n    addCardToDeck(input: { deckSlug: \"showcase\", cardSlug: $cardSlug, cardIndex: $cardIndex }) {\n      error {\n        code\n        message\n        path\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/state/deck/hooks.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "($tokenId: String!)", "content": "{\n    openPack(filter: { tokenId: $tokenId }) {\n      cards {\n        serialNumber\n        cardModel {\n          videoUrl\n          pictureUrl(derivative: \"width=1024\")\n          scarcity {\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/state/packOpening/hooks.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "SearchUser($slug: String!)", "content": "{\n    searchUser(slug: $slug) {\n      id\n      username\n      slug\n      cScore\n      rank\n      profile {\n        pictureUrl(derivative: \"width=320\")\n        fallbackUrl(derivative: \"width=320\")\n        certified\n        twitterUsername\n        instagramUsername\n        discordMember {\n          username\n          discriminator\n        }\n      }\n      starknetWallet {\n        address\n        publicKey\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/state/user/hooks.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "($instagramUsername: String!, $twitterUsername: String!)", "content": "{\n    setSocialLinks(input: { instagramUsername: $instagramUsername, twitterUsername: $twitterUsername }) {\n      twitterUsername\n      instagramUsername\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/state/user/hooks.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "($avatarId: Int!)", "content": "{\n    setAvatar(avatarId: $avatarId) {\n      pictureUrl\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/state/user/hooks.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "RevokeSession($payload: String)", "content": "{\n    revokeRefreshToken(payload: $payload)\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "PrepareSignUp($email: String!, $username: String!, $recaptchaTokenV2: String!)", "content": "{\n    prepareSignUp(input: { email: $email, username: $username, recaptchaTokenV2: $recaptchaTokenV2 })\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "SignIn($email: String!, $password: String!)", "content": "{\n    signIn(input: { email: $email, password: $password }) {\n      accessToken\n      twoFactorAuthToken\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "SignUp(\n    $email: String!\n    $username: String!\n    $password: String!\n    $walletPublicKey: String!\n    $walletAddress: String!\n    $rulesPrivateKey: RulesPrivateKeyAttributes!\n    $emailVerificationCode: String!\n    $acceptCommercialEmails: Boolean!\n    $newcomer: Boolean!\n    $referentSlug: String\n  )", "content": "{\n    signUp(\n      input: {\n        email: $email\n        username: $username\n        password: $password\n        walletPublicKey: $walletPublicKey\n        walletAddress: $walletAddress\n        rulesPrivateKey: $rulesPrivateKey\n        emailVerificationCode: $emailVerificationCode\n        acceptCommercialEmails: $acceptCommercialEmails\n        newcomer: $newcomer\n        referentSlug: $referentSlug\n      }\n    ) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "RequestPasswordUpdate($email: String!, $recaptchaTokenV2: String!)", "content": "{\n    requestPasswordUpdate(input: { email: $email, recaptchaTokenV2: $recaptchaTokenV2 })\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "RequestTwoFactorAuthSecretRemoval($email: String!, $recaptchaTokenV2: String!)", "content": "{\n    requestTwoFactorAuthSecretRemoval(input: { email: $email, recaptchaTokenV2: $recaptchaTokenV2 })\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "UpdatePassword(\n    $email: String!\n    $newPassword: String!\n    $walletPublicKey: String!\n    $rulesPrivateKey: RulesPrivateKeyAttributes!\n    $token: String!\n  )", "content": "{\n    updatePassword(\n      input: {\n        email: $email\n        newPassword: $newPassword\n        walletPublicKey: $walletPublicKey\n        rulesPrivateKey: $rulesPrivateKey\n        token: $token\n      }\n    ) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "RemoveTwoFactorAuthSecret($email: String!, $token: String!)", "content": "{\n    removeTwoFactorAuthSecret(input: { email: $email, token: $token }) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "SetTwoFactorAuthSecret($secret: String!, $code: String!)", "content": "{\n    setTwoFactorAuthSecret(input: { secret: $secret, code: $code })\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "TwoFactorAuthSignIn($token: String!, $code: String!)", "content": "{\n    twoFactorAuthSignIn(input: { token: $token, code: $code }) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "ListCards($cardListings: [CardListingParametersInput!]!, $fullPublicKey: String!)", "content": "{\n    listCards(input: { cardListings: $cardListings, fullPublicKey: $fullPublicKey }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/CardListings.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "ConnectDiscordAccount($code: String!, $redirectPath: String!)", "content": "{\n    connectDiscordAccount(input: { code: $code, redirectPath: $redirectPath }) {\n      id\n      username\n      discriminator\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Discord.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "DisconnectDiscordAccount", "content": "{\n    disconnectDiscordAccount {\n      discordId\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Discord.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "RefreshDiscordRoles", "content": "{\n    refreshDiscordRoles\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Discord.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "SetDiscordAccountVisibility($visible: Boolean!)", "content": "{\n    setDiscordAccountVisibility(visible: $visible) {\n      visible\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Discord.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "($liveRewardId: ID!, $userId: ID!)", "content": "{\n    claimLiveReward(input: { liveRewardId: $liveRewardId, userId: $userId }) {\n      user {\n        username\n      }\n      card {\n        serialNumber\n        cardModel {\n          pictureUrl(derivative: \"width=256\")\n          season\n          scarcity {\n            name\n          }\n          artistName\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/components/LiveRewardModal/Claim.tsx", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "(\n    $unsavedSquareCardID: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    updateUnsavedSquareCardIDs(\n      unsavedSquareCardID: $unsavedSquareCardID\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      unsavedSquareCardIDs\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateUnsavedSquareCardIDsMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $password: String!\n    $confirmPassword: String!\n  )", "content": "{\n    registerClient(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/registerClientMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    confirmAppointment(_id: $_id) {\n      createdAt\n      esthetician\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      treatments {\n        name\n        price\n        duration\n      }\n      addOns {\n        name\n        price\n        duration\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/confirmAppointmentMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $morningCleanser: [MyRoutineFieldsInputType]\n    $morningToner: [MyRoutineFieldsInputType]\n    $morningSerum: [MyRoutineFieldsInputType]\n    $morningMoisturizer: [MyRoutineFieldsInputType]\n    $morningSPF: [MyRoutineFieldsInputType]\n    $morningRX: [MyRoutineFieldsInputType]\n    $morningEyeCream: [MyRoutineFieldsInputType]\n    $eveningOilCleanser: [MyRoutineFieldsInputType]\n    $eveningCleanser: [MyRoutineFieldsInputType]\n    $eveningExfoliator: [MyRoutineFieldsInputType]\n    $eveningTreatmentMask: [MyRoutineFieldsInputType]\n    $eveningToner: [MyRoutineFieldsInputType]\n    $eveningSerum: [MyRoutineFieldsInputType]\n    $eveningMoisturizer: [MyRoutineFieldsInputType]\n    $eveningNightMask: [MyRoutineFieldsInputType]\n    $eveningOil: [MyRoutineFieldsInputType]\n    $eveningSpotTreatment: [MyRoutineFieldsInputType]\n    $eveningRX: [MyRoutineFieldsInputType]\n    $eveningEyeCream: [MyRoutineFieldsInputType]\n  )", "content": "{\n    updateMyRoutine(\n      morningCleanser: $morningCleanser\n      morningToner: $morningToner\n      morningSerum: $morningSerum\n      morningMoisturizer: $morningMoisturizer\n      morningSPF: $morningSPF\n      morningRX: $morningRX\n      morningEyeCream: $morningEyeCream\n      eveningOilCleanser: $eveningOilCleanser\n      eveningCleanser: $eveningCleanser\n      eveningExfoliator: $eveningExfoliator\n      eveningTreatmentMask: $eveningTreatmentMask\n      eveningToner: $eveningToner\n      eveningSerum: $eveningSerum\n      eveningMoisturizer: $eveningMoisturizer\n      eveningNightMask: $eveningNightMask\n      eveningOil: $eveningOil\n      eveningSpotTreatment: $eveningSpotTreatment\n      eveningRX: $eveningRX\n      eveningEyeCream: $eveningEyeCream\n    ) {\n      morningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSPF {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOilCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningExfoliator {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningTreatmentMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningNightMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOil {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSpotTreatment {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateMyRoutineMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deletePersonalEvent(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/deletePersonalEventMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $firstName: String\n    $lastName: String\n    $email: String\n    $phoneNumber: String\n    $password: String\n  )", "content": "{\n    updateClientInformation(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      password: $password\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateClientInformationMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $title: String!\n    $notes: String\n    $staff: String!\n    $date: String!\n    $startTime: String!\n    $endTime: String!\n    $duration: Int!\n    $allDay: Boolean\n    $blockTime: Boolean\n  )", "content": "{\n    addPersonalEvent(\n      title: $title\n      notes: $notes\n      staff: $staff\n      date: $date\n      startTime: $startTime\n      endTime: $endTime\n      duration: $duration\n      allDay: $allDay\n      blockTime: $blockTime\n    ) {\n      title\n      notes\n      staff\n      date\n      startTime\n      endTime\n      duration\n      allDay\n      blockTime\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/addPersonalEventMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "($id: ID, $profilePicture: String)", "content": "{\n    updateClientProfilePicture(id: $id, profilePicture: $profilePicture) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      profilePicture\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateClientProfilePictureMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $unsavedSquareCardID: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    removeOneUnsavedSquareCardIDs(\n      unsavedSquareCardID: $unsavedSquareCardID\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      unsavedSquareCardIDs\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/removeOneUnsavedSquareCardIDsMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deleteClient(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/deleteClientMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deleteAppointment(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/deleteAppointmentMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $_id: ID\n    $title: String\n    $notes: String\n    $date: String\n    $staff: String\n    $startTime: String\n    $endTime: String\n    $duration: Int\n    $allDay: Boolean\n    $blockTime: Boolean\n  )", "content": "{\n    updatePersonalEvent(\n      _id: $_id\n      title: $title\n      notes: $notes\n      date: $date\n      staff: $staff\n      startTime: $startTime\n      endTime: $endTime\n      duration: $duration\n      allDay: $allDay\n      blockTime: $blockTime\n    ) {\n      _id\n      title\n      notes\n      date\n      staff\n      startTime\n      endTime\n      duration\n      allDay\n      blockTime\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updatePersonalEventMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "($id: ID, $profilePicture: String)", "content": "{\n    updateAdminProfilePicture(id: $id, profilePicture: $profilePicture) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      profilePicture\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateAdminProfilePictureMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $squareCustomerId: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    updateClientSquareID(\n      squareCustomerId: $squareCustomerId\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateClientSquareIDMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $date: String!\n    $surgeryLast3Months: Boolean!\n    $surgeryLast3MonthsNotes: String\n    $anyHealthProblems: Boolean!\n    $anyHealthProblemsNotes: String\n    $listAnyMedications: String\n    $chemPeelsLastMonth: Boolean!\n    $waxingOnFaceLast5Days: Boolean!\n    $accutaneOrPrescription: Boolean!\n    $accutaneOrPrescriptionNotes: String\n    $anyProductsContainingSalicyclicAcid: Boolean\n    $anyProductsContainingGlycolicAcid: Boolean\n    $anyProductsContainingLacticAcid: Boolean\n    $anyProductsContainingExfoliatingScrubs: Boolean\n    $anyProductsContainingVitaminA: Boolean\n    $fillersOrBotox: Boolean!\n    $fillersOrBotoxNotes: String\n    $listKnownAllergies: String\n    $skinFlakyOrItch: Boolean\n    $everDiagnosedWithRosacea: Boolean\n    $pregnantOrNursing: Boolean\n    $ultimateSkinCareGoals: String\n    $anythingElseWeShouldKnow: String\n    $consentFormSignature: String!\n  )", "content": "{\n    updateConsentForm(\n      date: $date\n      surgeryLast3Months: $surgeryLast3Months\n      surgeryLast3MonthsNotes: $surgeryLast3MonthsNotes\n      anyHealthProblems: $anyHealthProblems\n      anyHealthProblemsNotes: $anyHealthProblemsNotes\n      listAnyMedications: $listAnyMedications\n      chemPeelsLastMonth: $chemPeelsLastMonth\n      waxingOnFaceLast5Days: $waxingOnFaceLast5Days\n      accutaneOrPrescription: $accutaneOrPrescription\n      accutaneOrPrescriptionNotes: $accutaneOrPrescriptionNotes\n      anyProductsContainingSalicyclicAcid: $anyProductsContainingSalicyclicAcid\n      anyProductsContainingGlycolicAcid: $anyProductsContainingGlycolicAcid\n      anyProductsContainingLacticAcid: $anyProductsContainingLacticAcid\n      anyProductsContainingExfoliatingScrubs: $anyProductsContainingExfoliatingScrubs\n      anyProductsContainingVitaminA: $anyProductsContainingVitaminA\n      fillersOrBotox: $fillersOrBotox\n      fillersOrBotoxNotes: $fillersOrBotoxNotes\n      listKnownAllergies: $listKnownAllergies\n      skinFlakyOrItch: $skinFlakyOrItch\n      everDiagnosedWithRosacea: $everDiagnosedWithRosacea\n      pregnantOrNursing: $pregnantOrNursing\n      ultimateSkinCareGoals: $ultimateSkinCareGoals\n      anythingElseWeShouldKnow: $anythingElseWeShouldKnow\n      consentFormSignature: $consentFormSignature\n    ) {\n      date\n      surgeryLast3Months\n      surgeryLast3MonthsNotes\n      anyHealthProblems\n      anyHealthProblemsNotes\n      listAnyMedications\n      chemPeelsLastMonth\n      waxingOnFaceLast5Days\n      accutaneOrPrescription\n      accutaneOrPrescriptionNotes\n      anyProductsContainingSalicyclicAcid\n      anyProductsContainingGlycolicAcid\n      anyProductsContainingLacticAcid\n      anyProductsContainingExfoliatingScrubs\n      anyProductsContainingVitaminA\n      fillersOrBotox\n      fillersOrBotoxNotes\n      listKnownAllergies\n      skinFlakyOrItch\n      everDiagnosedWithRosacea\n      pregnantOrNursing\n      ultimateSkinCareGoals\n      anythingElseWeShouldKnow\n      consentFormSignature\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateConsentFormMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "($password: String)", "content": "{\n    updateAdminPassword(password: $password) {\n      _id\n      permanentPasswordSet\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateAdminPasswordMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String\n  )", "content": "{\n    addClient(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/addClientMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deleteEmployee(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/deleteEmployeeMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $employeeRole: [String]\n  )", "content": "{\n    addEmployee(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      employeeRole: $employeeRole\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n      employeeRole\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/addEmployeeMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "(\n    $morningCleanserID: ID\n    $morningTonerID: ID\n    $morningSerumID: ID\n    $morningMoisturizerID: ID\n    $morningSPFID: ID\n    $morningRXID: ID\n    $morningEyeCreamID: ID\n    $eveningOilCleanserID: ID\n    $eveningCleanserID: ID\n    $eveningExfoliatorID: ID\n    $eveningTreatmentMaskID: ID\n    $eveningTonerID: ID\n    $eveningSerumID: ID\n    $eveningMoisturizerID: ID\n    $eveningNightMaskID: ID\n    $eveningOilID: ID\n    $eveningSpotTreatmentID: ID\n    $eveningRXID: ID\n    $eveningEyeCreamID: ID\n  )", "content": "{\n    deleteMyRoutineItem(\n      morningCleanserID: $morningCleanserID\n      morningTonerID: $morningTonerID\n      morningSerumID: $morningSerumID\n      morningMoisturizerID: $morningMoisturizerID\n      morningSPFID: $morningSPFID\n      morningRXID: $morningRXID\n      morningEyeCreamID: $morningEyeCreamID\n      eveningOilCleanserID: $eveningOilCleanserID\n      eveningCleanserID: $eveningCleanserID\n      eveningExfoliatorID: $eveningExfoliatorID\n      eveningTreatmentMaskID: $eveningTreatmentMaskID\n      eveningTonerID: $eveningTonerID\n      eveningSerumID: $eveningSerumID\n      eveningMoisturizerID: $eveningMoisturizerID\n      eveningNightMaskID: $eveningNightMaskID\n      eveningOilID: $eveningOilID\n      eveningSpotTreatmentID: $eveningSpotTreatmentID\n      eveningRXID: $eveningRXID\n      eveningEyeCreamID: $eveningEyeCreamID\n    ) {\n      morningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSPF {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOilCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningExfoliator {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningTreatmentMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningNightMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOil {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSpotTreatment {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/deleteMyRoutineItemMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "addAppointmentMutation(\n    $date: String!\n    $startTime: String!\n    $morningOrEvening: String!\n    $endTime: String!\n    $duration: Int!\n    $price: Int!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $esthetician: String!\n    $squareCustomerId: String\n    $unsavedSquareCardIDs: String\n    $bookedWithCardSquareID: String\n    $treatments: [TreatmentInput]\n    $addOns: [AddOnInput]\n    $notes: String\n  )", "content": "{\n    addAppointment(\n      date: $date\n      startTime: $startTime\n      morningOrEvening: $morningOrEvening\n      endTime: $endTime\n      duration: $duration\n      price: $price\n      esthetician: $esthetician\n      client: {\n        firstName: $firstName\n        lastName: $lastName\n        email: $email\n        phoneNumber: $phoneNumber\n        squareCustomerId: $squareCustomerId\n        unsavedSquareCardIDs: $unsavedSquareCardIDs\n      }\n      treatments: $treatments\n      addOns: $addOns\n      bookedWithCardSquareID: $bookedWithCardSquareID\n      notes: $notes\n    ) {\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      createdAt\n      esthetician\n      client {\n        firstName\n        lastName\n        email\n        phoneNumber\n        squareCustomerId\n        unsavedSquareCardIDs\n      }\n      treatments {\n        name\n        price\n        duration\n      }\n      addOns {\n        name\n        price\n        duration\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/addAppointmentMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "AddEvent(\n        $description: String!\n        $name: String!\n        $startDate: DateTime!\n        $endDate: DateTime!\n        $isPrivate: Boolean!\n        $eventType: String!\n        $teamID: String!\n        $address: String!\n    )", "content": "{\n        addEvent(\n            description: $description\n            name: $name\n            startDate: $startDate\n            endDate: $endDate\n            isPrivate: $isPrivate\n            eventType: $eventType\n            teamID: $teamID\n            address: $address\n        )\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "EditEvent(\n        $description: String!\n        $name: String!\n        $startDate: DateTime!\n        $endDate: DateTime!\n        $isPrivate: Boolean!\n        $eventType: String!\n        $teamID: String!\n        $eventID: String!\n    )", "content": "{\n        editEvent(\n            description: $description\n            name: $name\n            startDate: $startDate\n            endDate: $endDate\n            isPrivate: false\n            eventType: $eventType\n            teamID: $teamID\n            eventID: $eventID\n        )\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "SetGoing($isGoing: Float!, $eventID: String!)", "content": "{\n        setGoing(isGoing: $isGoing, eventID: $eventID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AddPost($imgUrls: [String!], $isPrivate: Boolean, $content: String!, $teamID: String!)", "content": "{\n        addPost(content: $content, imgUrls: $imgUrls, isPrivate: $isPrivate, teamID: $teamID) {\n            content\n            _id\n            isPined\n            imgUrls\n            numberOfLikes\n            lastModifyDate\n            user {\n                name\n                avatarUrl\n            }\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "addPostComment($teamID: String!, $content: String!, $postID: String!)", "content": "{\n        addPostComment(content: $content, teamID: $teamID, postID: $postID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "DeletePost($postID: String!, $teamID: String!)", "content": "{\n        deletePost(postID: $postID, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "EditPost($postID: String!, $content: String!, $teamID: String!)", "content": "{\n        editPost(content: $content, postID: $postID, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "LikePost($postID: String!)", "content": "{\n        likePost(postID: $postID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "PinPost($isPined: Boolean!, $postID: String!, $teamID: String!)", "content": "{\n        pinPost(isPined: $isPined, postID: $postID, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "SetPostPrivate($isPrivate: Boolean!, $postID: String!, $teamID: String!)", "content": "{\n        setPostPrivate(isPrivate: $isPrivate, postID: $postID, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AddCoach($teamID: String!, $userID: String!)", "content": "{\n        addCoach(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AddCoaches($teamID: String!, $userIDs: [String!]!)", "content": "{\n        addCoaches(teamID: $teamID, userIDs: $userIDs)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AddMember($teamID: String!, $userID: String!)", "content": "{\n        addMember(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "AddMembers($teamID: String!, $userIDs: [String!]!)", "content": "{\n        addMembers(teamID: $teamID, userIDs: $userIDs)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UploadAvatar($url: String!)", "content": "{\n        uploadAvatar(avatarUrl: $url)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "ApplyTeam($teamID: String!)", "content": "{\n        applyTeam(teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "NewTeam($sport: String!, $name: String!)", "content": "{\n        newTeam(sport: $sport, name: $name)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "QuitTeamAsCoach($teamID: String!)", "content": "{\n        quitTeamAsCoach(teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "QuitTeamAsMember($teamID: String!)", "content": "{\n        quitTeamAsMember(teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "RejectMembers($teamID: String!, $userIDs: [String!]!)", "content": "{\n        rejectMembers(teamID: $teamID, userIDs: $userIDs)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "RemoveCoach($teamID: String!, $userID: String!)", "content": "{\n        removeCoach(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "RemoveMember($teamID: String!, $userID: String!)", "content": "{\n        removeMember(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "RemoveMembers($teamID: String!, $userIDs: [String!]!)", "content": "{\n        removeMembers(teamID: $teamID, userIDs: $userIDs)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UpdateDescription($teamID: String!, $description: String!)", "content": "{\n        updateDescription(teamID: $teamID, description: $description)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UpdateTeam($sport: String!, $teamID: String!, $name: String!, $description: String!)", "content": "{\n        updateTeam(sport: $sport, teamID: $teamID, name: $name, description: $description)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "EditProfile(\n        $firstName: String!\n        $lastName: String!\n        $email: String!\n        $address: String!\n        $phone: String!\n        $introduction: String!\n        $sport: String!\n    )", "content": "{\n        editProfile(\n            input: {\n                firstName: $firstName\n                lastName: $lastName\n                email: $email\n                address: $address\n                phone: $phone\n                introduction: $introduction\n                sport: $sport\n            }\n        )\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "Login($email: String!, $password: String!)", "content": "{\n        login(email: $email, password: $password) {\n            user {\n                _id\n                name\n                avatarUrl\n                bannerUrls\n                introduction\n            }\n            accessToken\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "Logout", "content": "{\n        logout\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "Register($email: String!, $password: String!, $firstName: String!, $lastName: String!)", "content": "{\n        register(input: { email: $email, password: $password, firstName: $firstName, lastName: $lastName })\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "uploadTeamImage($url: String!, $teamID: String!)", "content": "{\n        uploadTeamImage(imgUrl: $url, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UploadBanner($url: String!)", "content": "{\n        uploadBanner(bannerUrl: $url)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UploadIntro($intro: String!)", "content": "{\n        uploadIntro(intro: $intro)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "UPDATE_CLIENT($id: ID!, $name: String!, $email: String!)", "content": "{\n    updateClient(input: { id: $id, name: $name, email: $email }) {\n      id\n      name\n      email\n    }\n  }", "metadata": {"commit_hash": "182740b7e289d56a59af3397d0a28153e8f3f2ab", "file": "clientServerExampleWithGraphQL/packages/web/src/components/ClientEdit.js", "repo": "AlbertoVictorRebello_hiringCoders2022"}}, {"type": "mutation", "name": "changeName($newName: String!)", "content": "{\n  changeName(newName: $newName)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "changePassword($oldPassword: String!, $newPassword: String!)", "content": "{\n  changePassword(oldPassword: $oldPassword, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "clearProfilePicture", "content": "{\n  clearProfilePicture\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "linkTelegram($id: String!, $first_name: String, $last_name: String, $username: String, $photo_url: String, $auth_date: String!, $hash: String!)", "content": "{\n  linkTelegram(\n    id: $id\n    first_name: $first_name\n    last_name: $last_name\n    username: $username\n    photo_url: $photo_url\n    auth_date: $auth_date\n    hash: $hash\n  )\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n  login(username: $username, password: $password)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "logout", "content": "{\n  logout\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "revokeSession($id: ID!)", "content": "{\n  revokeSession(id: $id)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "setDarkMode($enabled: Boolean!)", "content": "{\n  setDarkMode(enabled: $enabled)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "unlinkTelegram", "content": "{\n  unlinkTelegram\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "($projectData: String!)", "content": "{\n    addNewProject(projectData: $projectData)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "app/src/gql/AddWebProjectMutation.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($projectData: String!, $secureKey: String!, $secureUser: String!)", "content": "{\n    saveProject(\n      projectData: $projectData\n      secureKey: $secureKey\n      secureUser: $secureUser\n    )\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "app/src/gql/SaveProject.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($key: String!)", "content": "{\n    removeSecureKey(key: $key)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/SecureKeysQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($key: String!)", "content": "{\n    removeApiKey(key: $key)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/SecureKeysQuery.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($postId: String!)", "content": "{\n    addLike(postId: $postId)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/AddLikeMutation.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($postId: String!, $comment: String!)", "content": "{\n    addComment(postId: $postId, comment: $comment) {\n      id\n      user {\n        id\n        userName\n        lastName\n        firstName\n        type\n        profilePicture {\n          width\n          height\n          preview\n          url\n        }\n      }\n      comment\n    }\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/AddLikeMutation.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($userId: String!)", "content": "{\n    followMutation(userId: $userId)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/FollowMutation.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($key: String!)", "content": "{\n    addSecureKey(key: $key)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/AddNewSecureKey.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "($key: String!)", "content": "{\n    addApiKey(key: $key)\n  }", "metadata": {"commit_hash": "77a21fa08faac9efa9ea283ea900d848fd3a2f99", "file": "web/src/gql/AddNewSecureKey.ts", "repo": "lazzy07_material_designer_complete"}}, {"type": "mutation", "name": "removeProject($projectId: ID!)", "content": "{\n    removeProject(projectId: $projectId) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "addProject(\n    $name: String!\n    $description: String!\n    $avatar: String\n    $image: String\n    $website: String\n    $github: String\n    $twitter: String\n    $isRepresentative: Boolean\n    $categories: any\n  )", "content": "{\n    addProject(\n      name: $name\n      description: $description\n      avatar: $avatar\n      image: $image\n      website: $website\n      github: $github\n      twitter: $twitter\n      isRepresentative: $isRepresentative\n      categories: $categories\n    ) @client {\n      id\n      name\n      description\n      avatar\n      image\n      website\n      github\n      twitter\n      isRepresentative\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "editProject(\n    $projectId: String!\n    $name: String!\n    $description: String!\n    $avatar: String\n    $image: String\n    $website: String\n    $github: String\n    $twitter: String\n    $isRepresentative: Boolean\n    $categories: any\n  )", "content": "{\n    editProject(\n      projectId: $projectId\n      name: $name\n      description: $description\n      avatar: $avatar\n      image: $image\n      website: $website\n      github: $github\n      twitter: $twitter\n      isRepresentative: $isRepresentative\n      categories: $categories\n    ) @client {\n      id\n      name\n      description\n      avatar\n      image\n      categories\n      currentChallenge {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "transferOwnership($projectId: String!, $newOwnerAddress: String!)", "content": "{\n    transferOwnership(projectId: $projectId, newOwnerAddress: $newOwnerAddress)\n      @client {\n      id\n      name\n      description\n      avatar\n      image\n      website\n      github\n      twitter\n      isRepresentative\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "delegateOwnership($projectId: String!, $delegateAddress: String!)", "content": "{\n    delegateOwnership(projectId: $projectId, delegateAddress: $delegateAddress)\n      @client {\n      id\n      name\n      description\n      avatar\n      image\n      website\n      github\n      twitter\n      isRepresentative\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "challengeProject(\n    $challengingProjectAddress: String!\n    $challengedProjectAddress: String!\n    $description: String!\n  )", "content": "{\n    challengeProject(\n      challengingProjectAddress: $challengingProjectAddress\n      challengedProjectAddress: $challengedProjectAddress\n      details: { description: $description }\n    ) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "resolveChallenge($challengeId: ID!)", "content": "{\n    resolveChallenge(challengeId: $challengeId) @client {\n      id\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "daiBalance($account: ID!)", "content": "{\n    daiBalance(account: $account) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "voteChallenge(\n    $challengeId: ID!\n    $voteChoice: [String]\n    $voters: [String]\n  )", "content": "{\n    voteChallenge(\n      challengeId: $challengeId\n      voteChoice: $voteChoice\n      voters: $voters\n    ) @client {\n      id\n      description\n      votes {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "uploadImage($image: File!)", "content": "{\n    uploadImage(image: $image) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/components/UploadImage/index.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "uploadImage($image: File!)", "content": "{\n            uploadImage(image: $image) @client\n          }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/__tests__/index.test.ts", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "uploadImage($image: File!)", "content": "{\n            uploadImage(image: $image) @client\n          }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/__tests__/index.test.ts", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "addProject(\n            $name: String\n            $description: String\n            $avatar: String\n            $image: String\n            $website: String\n            $github: String\n            $twitter: String\n            $isRepresentative: Boolean\n            $categories: [Category]\n          )", "content": "{\n            addProject(\n              name: $name\n              description: $description\n              avatar: $avatar\n              image: $image\n              website: $website\n              github: $github\n              twitter: $twitter\n              isRepresentative: $isRepresentative\n              categories: $categories\n            ) @client\n          }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/__tests__/index.test.ts", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "addTask($name: String!)", "content": "{\n    addTask(name: $name) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}}, {"type": "mutation", "name": "removeTask($id: String!)", "content": "{\n    removeTask(id: $id) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}}, {"type": "mutation", "name": "updateTask($id: String!, $name: String!)", "content": "{\n    updateTask(id: $id, name: $name) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n  updatePost(id: $id, votes: $votes) {\n    id\n    __typename\n    votes\n  }\n}", "metadata": {"commit_hash": "2cb6104a6382ad53e1ae5e927e022810346bd737", "file": "modules/app/actions.js", "repo": "zachariahtimothy_with-cerebral-and-apollo-auth"}}, {"type": "mutation", "name": "login($userName: String!, $password: String!)", "content": "{\n    login(userName: $userName, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "d15ccdc10e75dbf6861449824dd78bb83d31e4ef", "file": "client/src/apollo/mutations/login.tsx", "repo": "metin1_bikersCamp"}}, {"type": "mutation", "name": "($repoId: ID!)", "content": "{\n\t\taddStar(input: { starrableId: $repoId }) {\n\t\t\tstarrable {\n\t\t\t\tstargazers {\n\t\t\t\t\ttotalCount\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "c48d3ae3258de432ad57c54808b16737c5523f1c", "file": "src/components/RepoSearch.tsx", "repo": "hesbon-osoro_repository-search"}}, {"type": "mutation", "name": "insert_todo ($objects: [todo_insert_input!]!)", "content": "{\n    insert_todo(objects: $objects) {\n      affected_rows\n      returning {\n        id\n        task\n        completed\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "update_todo ($todoId: Int, $set: todo_set_input!)", "content": "{\n    update_todo(where: {id: {_eq: $todoId}} _set: $set) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "delete_todo ($todoId: Int)", "content": "{\n    delete_todo(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($name:String)", "content": "{\n              insert_user (\n                objects: {\n                  name: $name\n                }\n              ) {\n                returning {\n                  id\n                }\n              }\n            }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/utils.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($name:String, $id: Int!)", "content": "{\n              insert_user (\n                objects: {\n                  name: $name\n                  id: $id\n                }\n              ) {\n                returning {\n                  id\n                }\n              }\n            }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/utils.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($user_id: Int, $board_id: uuid!)", "content": "{\n      update_board (\n        _set: {\n          user_2_id: $user_id\n        },\n        where: {\n          _and: {\n            id: {\n              _eq: $board_id\n            },\n            user_2_id: {\n              _is_null: true\n            },\n            user_1_id: {\n              _neq: $user_id\n            }\n          }\n        }\n      ) {\n        affected_rows\n        returning {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/utils.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($user_id: Int)", "content": "{\n    insert_board (\n      objects: [{\n        user_1_id: $user_id,\n        turn: \"x\",\n      }]\n    ) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/components/Boards/BoardsList.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "(\n    $board_id: String!,\n    $position: Int!,\n    $user_id: Int!\n  )", "content": "{\n    make_move (\n      board_id: $board_id,\n      position: $position,\n      user_id: $user_id\n    ) {\n      success\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/components/Game/TicTacToe.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_author($name: String!)", "content": "{\n    insert_author(objects: { name: $name }) {\n      returning {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/gatsby-postgres-graphql/src/components/AddAuthor.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($username: String!)", "content": "{\n    insert_user (\n      objects: [{\n        username: $username\n      }]\n    ) {\n      returning {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/LandingPage.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_message ($message: message_insert_input! )", "content": "{\n    insert_message (\n      objects: [$message]\n    ) {\n      returning {\n        id\n        timestamp\n        text\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Textbox.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($userId: Int)", "content": "{\n    update_user (\n      _set: {\n        last_typed: \"now()\"\n      }\n      where: {\n        id: {\n          _eq: $userId\n        }\n      }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Textbox.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($userId:Int!)", "content": "{\n    update_user (\n      _set: {\n        last_seen: \"now()\"\n      }\n      where: {\n        id: {\n          _eq: $userId\n        }\n      }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Chat.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_playlist($name: String!)", "content": "{\n\t  insert_playlist(objects: [{\n\t    name: $name\n\t  }]) {\n\t    affected_rows\n\t  }\n\t}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/gatsby-contentful-auth0/app/src/components/Playlist.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_todos($text: String!)", "content": "{\n    insert_todos(objects: [{text: $text}]) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n      }\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "update_todos($todoId: Int!, $done: Boolean)", "content": "{\n    update_todos(_set: {is_completed: $done}, where: {id: {_eq: $todoId}}) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n      }\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "update_todos($done: Boolean)", "content": "{\n    update_todos(_set: {is_completed: $done}, where: {id: {_gt: 0}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "delete_todos($todoId: Int!)", "content": "{\n    delete_todos(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "delete_todos", "content": "{\n    delete_todos(where: {is_completed: {_eq: true}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($userId: String!, $timestamp: timestamptz!)", "content": "{\n              update_users(\n                where: { auth0_id: { _eq: $userId } }\n                _set: { auth0_id: $userId, last_seen: $timestamp }\n              ) {\n                affected_rows\n              }\n            }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Home/Home.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_todos($objects: [todos_insert_input!]!)", "content": "{\n    insert_todos(objects: $objects) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n        created_at\n        is_public\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "update_todos($todoId: Int, $set: todos_set_input!)", "content": "{\n    update_todos(where: { id: { _eq: $todoId } }, _set: $set) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "delete_todos($todoId: Int)", "content": "{\n    delete_todos(where: { id: { _eq: $todoId } }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_vehicle_location ($objects: [vehicle_location_insert_input!]! )", "content": "{\n        insert_vehicle_location (objects: $objects){\n          returning {\n            id\n          }\n        }\n      }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "insert_vehicle ($objects: [vehicle_insert_input!]! )", "content": "{\n        insert_vehicle (objects: $objects){\n          returning {\n            id\n          }\n        }\n      }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "SettingsFormMutation($name: String, $picture: String, $userId: Int)", "content": "{\n    update_users(_set: {name: $name, picture: $picture}, where: {id: {_eq: $userId}}) {\n      affected_rows\n      returning {\n        id\n        name\n        picture\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/SettingsScreen/SettingsForm.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "CompleteGroupButtonMutation(\n    $userIds: [chat_users_insert_input!]!\n    $groupName: String!\n    $groupPicture: String\n    $ownerId: Int\n  )", "content": "{\n    insert_chat(objects: [{name: $groupName, picture: $groupPicture, owner_id: $ownerId, users:{data: $userIds}}]) {\n      returning {\n        ...chat\n      }\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/GroupDetailsScreen/CompleteGroupButton.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "GroupDetailsScreenUpdateMutation($name: String, $picture: String, $chatId: Int!)", "content": "{\n    update_chat(_set: {name: $name, picture: $picture}, where: {id: {_eq: $chatId}}) {\n      affected_rows\n      returning {\n        ...chat\n      }\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/GroupDetailsScreen/index.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "MessageBoxMutation($chatId: Int!, $content: String!, $sender_id: Int!)", "content": "{\n    insert_message(objects: [{chat_id: $chatId, content: $content, sender_id: $sender_id}]) {\n      affected_rows\n      returning {\n        id\n        content\n        created_at\n        sender_id\n        chat_id\n        chat {\n          id\n        }\n        sender {\n          id\n          name\n        }\n        recipients {\n          user {\n            id\n          }\n          message {\n            id\n            chat {\n              id\n            }\n          }\n          received_at\n          read_at\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/MessageBox.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "deleteChat($chatId: Int!)", "content": "{\n    delete_chat_users(where:{chat_id:{_eq: $chatId}}) {\n      affected_rows\n    }\n    delete_message(where:{chat_id:{_eq: $chatId}}) {\n      affected_rows\n    }\n    delete_chat(where:{id: {_eq: $chatId}}) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/ChatNavbar.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "NewChatScreenMutation($userId: Int!,$currentUserId: Int!)", "content": "{\n    insert_chat(objects: [{\n      owner_id: null,\n      users: {\n        data: [\n          {user_id: $userId},\n          {user_id: $currentUserId}\n        ]\n      }\n    \n    }]) {\n      affected_rows\n      returning {\n        ...chat\n      }\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/NewChatScreen/index.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "addUser($username: String!, $password: String!, $email: String!)", "content": "{\n    addUser(username: $username, password: $password, email: $email) {\n      token\n      user {\n        username\n        _id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "saveMedia($input: SavedMediaInput)", "content": "{\n    saveMedia(input: $input) {\n      username\n      _id\n      mediaCount\n      savedMedias {\n        title\n        plot\n        imdbID\n        poster\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "removeMedia($imdbID: String!)", "content": "{\n    removeMedia(imdbID: $imdbID) {\n      _id\n      username\n      mediaCount\n      savedMedias {\n        title\n        plot\n        imdbID\n        poster\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "addReview($reviewBody: String!, $imdbID: String!)", "content": "{\n    addReview(reviewBody: $reviewBody, imdbID: $imdbID) {\n      imdbID\n      reviewBody\n      createdAt\n      username\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}}, {"type": "mutation", "name": "Login($username: String!, $password: String!)", "content": "{\n    login(username: $username, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/pages/login.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "mutation", "name": "Mutation($name: String!, $username: String!, $password: String!)", "content": "{\n    signup(name: $name, username: $username, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/pages/register.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "mutation", "name": "Create_expense($data: ExpenseInfo!)", "content": "{\n    create_expense(data: $data) {\n      status\n      msg\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/components/Transactions/AddTransactionModal.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "mutation", "name": "Create_expense($data: tagInfo!)", "content": "{\n    create_tag(data: $data) {\n      status\n      msg\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/components/Transactions/AddNewTag.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "mutation", "name": "EditMe($name: String!, $img: Upload)", "content": "{\n    editMe(name: $name, img: $img) {\n      status\n      msg\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/components/account/account-profile-details.js", "repo": "FrontPhoenix_phoenix-finance"}}, {"type": "mutation", "name": "AddOrRemoveFromLocalBag($productID: ID!, $variantID: ID!)", "content": "{\n    addOrRemoveFromLocalBag(productID: $productID, variantID: $variantID) @client {\n      productID\n      variantID\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/queries/clientQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "CheckItemsAvailability($items: [ID!]!)", "content": "{\n    checkItemsAvailability(items: $items)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "SubmitOrder($input: SubmitOrderInput!)", "content": "{\n    submitOrder(input: $input) {\n      id\n      ...OrderFragment_Order\n    }\n  }\n  ${OrderFragment_Order}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ProductVariantCreateDraftOrder($input: CreateDraftedOrderInput!)", "content": "{\n    createDraftedOrder(input: $input) {\n      id\n      ...OrderFragment_Order\n    }\n  }\n  ${OrderFragment_Order}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "AddToBag($id: ID!)", "content": "{\n    addToBag(item: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "deleteBagItem($itemID: ID!)", "content": "{\n    deleteBagItem(itemID: $itemID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "UpdateProductReservationFeedback(\n    $reservationFeedbackID: ID!\n    $productReservationID: ID!\n    $input: ProductVariantFeedbackUpdateInput!\n    $responses: JSON\n  )", "content": "{\n    updateProductReservationFeedback(\n      reservationFeedbackID: $reservationFeedbackID\n      productReservationID: $productReservationID\n      input: $input\n      responses: $responses\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ReservationFeedback/mutations.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "SubmitFitPic($image: Upload!, $options: FitPicSubmissionOptionsInput)", "content": "{\n    submitFitPic(image: $image, options: $options)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/FitPic/FitPicConfirmation.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "addMeasurements(\n    $shoeSize: Int\n    $pantLength: Int\n    $topSizes: CustomerDetailCreatetopSizesInput\n    $waistSizes: CustomerDetailCreatewaistSizesInput\n  )", "content": "{\n    addCustomerDetails(\n      details: { pantLength: $pantLength, shoeSize: $shoeSize, topSizes: $topSizes, waistSizes: $waistSizes }\n      event: CompletedWaitlistForm\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/GetMeasurementsPane/GetMeasurementsPane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "startSMSVerification($phoneNumber: String!)", "content": "{\n    startSMSVerification(phoneNumber: $phoneNumber)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/SendCodePane/SendCodePane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "SignUp(\n    $email: String!\n    $password: String!\n    $firstName: String!\n    $lastName: String!\n    $zipCode: String!\n    $discoveryReference: String\n  )", "content": "{\n    signup(\n      email: $email\n      password: $password\n      firstName: $firstName\n      lastName: $lastName\n      details: { shippingAddress: { create: { zipCode: $zipCode } }, discoveryReference: $discoveryReference }\n    ) {\n      user {\n        id\n        email\n        firstName\n        lastName\n        beamsToken\n        roles\n        createdAt\n      }\n      customer {\n        id\n        status\n        detail {\n          id\n          shippingAddress {\n            id\n            state\n          }\n        }\n        bagItems {\n          id\n        }\n      }\n      token\n      refreshToken\n      expiresIn\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/CreateAccountPane/CreateAccountPane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "checkSMSVerification($code: String!)", "content": "{\n    checkSMSVerification(code: $code)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/VerifyCodePane/VerifyCodePane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "triage", "content": "{\n    triageCustomer\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/TriagePane/TriagePane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "CheckCoupon($couponID: String!)", "content": "{\n    checkCoupon(couponID: $couponID) {\n      id\n      amount\n      percentage\n      type\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ApplyPromoCode/ApplyPromoCodePane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ApplePayCheckout(\n    $planID: String!\n    $token: StripeToken!\n    $tokenType: String\n    $couponID: String\n    $shipping: JSON\n  )", "content": "{\n    applePayCheckout(planID: $planID, token: $token, tokenType: $tokenType, couponID: $couponID, shipping: $shipping)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ChoosePlanPane/ChoosePlanPane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ChangeCustomerPlan($planID: String!)", "content": "{\n    changeCustomerPlan(planID: $planID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ChoosePlanPane/ChoosePlanPane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "AddProductRequest($reason: String!, $url: String!)", "content": "{\n    addProductRequest(reason: $reason, url: $url) {\n      id\n      sku\n      brand\n      description\n      images\n      name\n      price\n      priceCurrency\n      productID\n      url\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ProductRequest/ProductRequest.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ReserveItems($options: ReserveItemsOptions, $shippingCode: ShippingCode)", "content": "{\n    reserveItems(options: $options, shippingCode: $shippingCode) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Reservation/Reservation.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ReturnItems($items: [ID!]!, $returnReasons: [ReturnReasonInput!])", "content": "{\n    returnItems(items: $items, returnReasons: $returnReasons) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/ReturnYourBag.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "CancelReturn", "content": "{\n    cancelReturn {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/Components/BagReturnFlowSubtitle.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "CancelReturn($bagItemId: ID!)", "content": "{\n    cancelReturn(bagItemId: $bagItemId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/Components/BagItem/BagItemCTAs.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "AddViewedProduct($item: ID!)", "content": "{\n    addViewedProduct(item: $item) {\n      id\n      viewCount\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Product.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "upsertCartItem($productVariantId: ID!, $addToCart: Boolean!)", "content": "{\n    upsertCartItem(productVariantId: $productVariantId, addToCart: $addToCart) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Product.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "UpsertRestockNotification($variantID: ID!, $shouldNotify: Boolean!)", "content": "{\n    upsertRestockNotification(variantID: $variantID, shouldNotify: $shouldNotify) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Product.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "setStylePreferences($styles: [String!], $patterns: [String!], $colors: [String!], $brands: [String!])", "content": "{\n    addCustomerDetails(\n      details: {\n        stylePreferences: {\n          create: {\n            styles: { set: $styles }\n            patterns: { set: $patterns }\n            colors: { set: $colors }\n            brands: { set: $brands }\n          }\n        }\n      }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/EditStylePreferences/EditStylePreferences.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "applePayUpdatePaymentMethod($planID: String!, $token: StripeToken!, $tokenType: String)", "content": "{\n    applePayUpdatePaymentMethod(planID: $planID, token: $token, tokenType: $tokenType)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/PaymentAndShipping/PaymentAndShipping.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "updatePaymentAndShipping($shippingAddress: AddressInput!, $phoneNumber: String!)", "content": "{\n    updatePaymentAndShipping(shippingAddress: $shippingAddress, phoneNumber: $phoneNumber)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/PaymentAndShipping/EditPaymentAndShipping.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "updateShippingAddress(\n    $name: String!\n    $city: String!\n    $zipCode: String!\n    $state: String!\n    $address1: String!\n    $address2: String\n  )", "content": "{\n    addCustomerDetails(\n      details: {\n        shippingAddress: {\n          create: {\n            name: $name\n            city: $city\n            zipCode: $zipCode\n            state: $state\n            address1: $address1\n            address2: $address2\n          }\n        }\n      }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/EditShippingAddress/EditShippingAddress.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "updateUserPushNotificationStatus($newStatus: Boolean!)", "content": "{\n    updateUserPushNotificationStatus(newStatus: $newStatus) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/Components/NotificationToggle.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ResetPassword($email: String!)", "content": "{\n    resetPassword(email: $email) {\n      message\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/SignIn/ResetPassword.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "LogIn($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      customer {\n        id\n        status\n        admissions {\n          id\n          admissable\n        }\n        bagItems {\n          id\n        }\n        detail {\n          id\n          shippingAddress {\n            id\n            state\n          }\n        }\n      }\n      user {\n        id\n        createdAt\n        email\n        firstName\n        lastName\n        beamsToken\n        roles\n      }\n      token\n      refreshToken\n      expiresIn\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/SignIn/LogIn.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "PauseSubscription($subscriptionID: String!, $pauseType: PauseType, $reasonID: ID)", "content": "{\n    pauseSubscription(subscriptionID: $subscriptionID, pauseType: $pauseType, reasonID: $reasonID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Components/Pause/PauseModal.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ResumeSubscription($subscriptionID: String!)", "content": "{\n    resumeSubscription(subscriptionID: $subscriptionID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Components/Pause/PauseButtons.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "RemoveScheduledPause($subscriptionID: String!)", "content": "{\n    removeScheduledPause(subscriptionID: $subscriptionID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Components/Pause/PauseButtons.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "(\n    $unsavedSquareCardID: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    updateUnsavedSquareCardIDs(\n      unsavedSquareCardID: $unsavedSquareCardID\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      unsavedSquareCardIDs\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateUnsavedSquareCardIDsMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $password: String!\n    $confirmPassword: String!\n  )", "content": "{\n    registerClient(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/registerClientMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    confirmAppointment(_id: $_id) {\n      createdAt\n      esthetician\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      treatments {\n        name\n        price\n        duration\n      }\n      addOns {\n        name\n        price\n        duration\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/confirmAppointmentMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $morningCleanser: [MyRoutineFieldsInputType]\n    $morningToner: [MyRoutineFieldsInputType]\n    $morningSerum: [MyRoutineFieldsInputType]\n    $morningMoisturizer: [MyRoutineFieldsInputType]\n    $morningSPF: [MyRoutineFieldsInputType]\n    $morningRX: [MyRoutineFieldsInputType]\n    $morningEyeCream: [MyRoutineFieldsInputType]\n    $eveningOilCleanser: [MyRoutineFieldsInputType]\n    $eveningCleanser: [MyRoutineFieldsInputType]\n    $eveningExfoliator: [MyRoutineFieldsInputType]\n    $eveningTreatmentMask: [MyRoutineFieldsInputType]\n    $eveningToner: [MyRoutineFieldsInputType]\n    $eveningSerum: [MyRoutineFieldsInputType]\n    $eveningMoisturizer: [MyRoutineFieldsInputType]\n    $eveningNightMask: [MyRoutineFieldsInputType]\n    $eveningOil: [MyRoutineFieldsInputType]\n    $eveningSpotTreatment: [MyRoutineFieldsInputType]\n    $eveningRX: [MyRoutineFieldsInputType]\n    $eveningEyeCream: [MyRoutineFieldsInputType]\n  )", "content": "{\n    updateMyRoutine(\n      morningCleanser: $morningCleanser\n      morningToner: $morningToner\n      morningSerum: $morningSerum\n      morningMoisturizer: $morningMoisturizer\n      morningSPF: $morningSPF\n      morningRX: $morningRX\n      morningEyeCream: $morningEyeCream\n      eveningOilCleanser: $eveningOilCleanser\n      eveningCleanser: $eveningCleanser\n      eveningExfoliator: $eveningExfoliator\n      eveningTreatmentMask: $eveningTreatmentMask\n      eveningToner: $eveningToner\n      eveningSerum: $eveningSerum\n      eveningMoisturizer: $eveningMoisturizer\n      eveningNightMask: $eveningNightMask\n      eveningOil: $eveningOil\n      eveningSpotTreatment: $eveningSpotTreatment\n      eveningRX: $eveningRX\n      eveningEyeCream: $eveningEyeCream\n    ) {\n      morningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSPF {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOilCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningExfoliator {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningTreatmentMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningNightMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOil {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSpotTreatment {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateMyRoutineMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deletePersonalEvent(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/deletePersonalEventMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $firstName: String\n    $lastName: String\n    $email: String\n    $phoneNumber: String\n    $password: String\n  )", "content": "{\n    updateClientInformation(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      password: $password\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateClientInformationMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $title: String!\n    $notes: String\n    $staff: String!\n    $date: String!\n    $startTime: String!\n    $endTime: String!\n    $duration: Int!\n    $allDay: Boolean\n    $blockTime: Boolean\n  )", "content": "{\n    addPersonalEvent(\n      title: $title\n      notes: $notes\n      staff: $staff\n      date: $date\n      startTime: $startTime\n      endTime: $endTime\n      duration: $duration\n      allDay: $allDay\n      blockTime: $blockTime\n    ) {\n      title\n      notes\n      staff\n      date\n      startTime\n      endTime\n      duration\n      allDay\n      blockTime\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addPersonalEventMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($id: ID, $profilePicture: String)", "content": "{\n    updateClientProfilePicture(id: $id, profilePicture: $profilePicture) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      profilePicture\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateClientProfilePictureMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $unsavedSquareCardID: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    removeOneUnsavedSquareCardIDs(\n      unsavedSquareCardID: $unsavedSquareCardID\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      unsavedSquareCardIDs\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/removeOneUnsavedSquareCardIDsMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deleteClient(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/deleteClientMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deleteAppointment(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/deleteAppointmentMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $_id: ID\n    $title: String\n    $notes: String\n    $date: String\n    $staff: String\n    $startTime: String\n    $endTime: String\n    $duration: Int\n    $allDay: Boolean\n    $blockTime: Boolean\n  )", "content": "{\n    updatePersonalEvent(\n      _id: $_id\n      title: $title\n      notes: $notes\n      date: $date\n      staff: $staff\n      startTime: $startTime\n      endTime: $endTime\n      duration: $duration\n      allDay: $allDay\n      blockTime: $blockTime\n    ) {\n      _id\n      title\n      notes\n      date\n      staff\n      startTime\n      endTime\n      duration\n      allDay\n      blockTime\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updatePersonalEventMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($id: ID, $profilePicture: String)", "content": "{\n    updateAdminProfilePicture(id: $id, profilePicture: $profilePicture) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      profilePicture\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateAdminProfilePictureMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $squareCustomerId: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    updateClientSquareID(\n      squareCustomerId: $squareCustomerId\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateClientSquareIDMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $date: String!\n    $surgeryLast3Months: Boolean!\n    $surgeryLast3MonthsNotes: String\n    $anyHealthProblems: Boolean!\n    $anyHealthProblemsNotes: String\n    $listAnyMedications: String\n    $chemPeelsLastMonth: Boolean!\n    $waxingOnFaceLast5Days: Boolean!\n    $accutaneOrPrescription: Boolean!\n    $accutaneOrPrescriptionNotes: String\n    $anyProductsContainingSalicyclicAcid: Boolean\n    $anyProductsContainingGlycolicAcid: Boolean\n    $anyProductsContainingLacticAcid: Boolean\n    $anyProductsContainingExfoliatingScrubs: Boolean\n    $anyProductsContainingVitaminA: Boolean\n    $fillersOrBotox: Boolean!\n    $fillersOrBotoxNotes: String\n    $listKnownAllergies: String\n    $skinFlakyOrItch: Boolean\n    $everDiagnosedWithRosacea: Boolean\n    $pregnantOrNursing: Boolean\n    $ultimateSkinCareGoals: String\n    $anythingElseWeShouldKnow: String\n    $consentFormSignature: String!\n  )", "content": "{\n    updateConsentForm(\n      date: $date\n      surgeryLast3Months: $surgeryLast3Months\n      surgeryLast3MonthsNotes: $surgeryLast3MonthsNotes\n      anyHealthProblems: $anyHealthProblems\n      anyHealthProblemsNotes: $anyHealthProblemsNotes\n      listAnyMedications: $listAnyMedications\n      chemPeelsLastMonth: $chemPeelsLastMonth\n      waxingOnFaceLast5Days: $waxingOnFaceLast5Days\n      accutaneOrPrescription: $accutaneOrPrescription\n      accutaneOrPrescriptionNotes: $accutaneOrPrescriptionNotes\n      anyProductsContainingSalicyclicAcid: $anyProductsContainingSalicyclicAcid\n      anyProductsContainingGlycolicAcid: $anyProductsContainingGlycolicAcid\n      anyProductsContainingLacticAcid: $anyProductsContainingLacticAcid\n      anyProductsContainingExfoliatingScrubs: $anyProductsContainingExfoliatingScrubs\n      anyProductsContainingVitaminA: $anyProductsContainingVitaminA\n      fillersOrBotox: $fillersOrBotox\n      fillersOrBotoxNotes: $fillersOrBotoxNotes\n      listKnownAllergies: $listKnownAllergies\n      skinFlakyOrItch: $skinFlakyOrItch\n      everDiagnosedWithRosacea: $everDiagnosedWithRosacea\n      pregnantOrNursing: $pregnantOrNursing\n      ultimateSkinCareGoals: $ultimateSkinCareGoals\n      anythingElseWeShouldKnow: $anythingElseWeShouldKnow\n      consentFormSignature: $consentFormSignature\n    ) {\n      date\n      surgeryLast3Months\n      surgeryLast3MonthsNotes\n      anyHealthProblems\n      anyHealthProblemsNotes\n      listAnyMedications\n      chemPeelsLastMonth\n      waxingOnFaceLast5Days\n      accutaneOrPrescription\n      accutaneOrPrescriptionNotes\n      anyProductsContainingSalicyclicAcid\n      anyProductsContainingGlycolicAcid\n      anyProductsContainingLacticAcid\n      anyProductsContainingExfoliatingScrubs\n      anyProductsContainingVitaminA\n      fillersOrBotox\n      fillersOrBotoxNotes\n      listKnownAllergies\n      skinFlakyOrItch\n      everDiagnosedWithRosacea\n      pregnantOrNursing\n      ultimateSkinCareGoals\n      anythingElseWeShouldKnow\n      consentFormSignature\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateConsentFormMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($password: String)", "content": "{\n    updateAdminPassword(password: $password) {\n      _id\n      permanentPasswordSet\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateAdminPasswordMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String\n  )", "content": "{\n    addClient(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addClientMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deleteEmployee(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/deleteEmployeeMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $employeeRole: [String]\n  )", "content": "{\n    addEmployee(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      employeeRole: $employeeRole\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n      employeeRole\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addEmployeeMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "(\n    $morningCleanserID: ID\n    $morningTonerID: ID\n    $morningSerumID: ID\n    $morningMoisturizerID: ID\n    $morningSPFID: ID\n    $morningRXID: ID\n    $morningEyeCreamID: ID\n    $eveningOilCleanserID: ID\n    $eveningCleanserID: ID\n    $eveningExfoliatorID: ID\n    $eveningTreatmentMaskID: ID\n    $eveningTonerID: ID\n    $eveningSerumID: ID\n    $eveningMoisturizerID: ID\n    $eveningNightMaskID: ID\n    $eveningOilID: ID\n    $eveningSpotTreatmentID: ID\n    $eveningRXID: ID\n    $eveningEyeCreamID: ID\n  )", "content": "{\n    deleteMyRoutineItem(\n      morningCleanserID: $morningCleanserID\n      morningTonerID: $morningTonerID\n      morningSerumID: $morningSerumID\n      morningMoisturizerID: $morningMoisturizerID\n      morningSPFID: $morningSPFID\n      morningRXID: $morningRXID\n      morningEyeCreamID: $morningEyeCreamID\n      eveningOilCleanserID: $eveningOilCleanserID\n      eveningCleanserID: $eveningCleanserID\n      eveningExfoliatorID: $eveningExfoliatorID\n      eveningTreatmentMaskID: $eveningTreatmentMaskID\n      eveningTonerID: $eveningTonerID\n      eveningSerumID: $eveningSerumID\n      eveningMoisturizerID: $eveningMoisturizerID\n      eveningNightMaskID: $eveningNightMaskID\n      eveningOilID: $eveningOilID\n      eveningSpotTreatmentID: $eveningSpotTreatmentID\n      eveningRXID: $eveningRXID\n      eveningEyeCreamID: $eveningEyeCreamID\n    ) {\n      morningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSPF {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOilCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningExfoliator {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningTreatmentMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningNightMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOil {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSpotTreatment {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/deleteMyRoutineItemMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "addAppointmentMutation(\n    $date: String!\n    $startTime: String!\n    $morningOrEvening: String!\n    $endTime: String!\n    $duration: Int!\n    $price: Int!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $esthetician: String!\n    $squareCustomerId: String\n    $unsavedSquareCardIDs: String\n    $bookedWithCardSquareID: String\n    $treatments: [TreatmentInput]\n    $addOns: [AddOnInput]\n    $notes: String\n  )", "content": "{\n    addAppointment(\n      date: $date\n      startTime: $startTime\n      morningOrEvening: $morningOrEvening\n      endTime: $endTime\n      duration: $duration\n      price: $price\n      esthetician: $esthetician\n      client: {\n        firstName: $firstName\n        lastName: $lastName\n        email: $email\n        phoneNumber: $phoneNumber\n        squareCustomerId: $squareCustomerId\n        unsavedSquareCardIDs: $unsavedSquareCardIDs\n      }\n      treatments: $treatments\n      addOns: $addOns\n      bookedWithCardSquareID: $bookedWithCardSquareID\n      notes: $notes\n    ) {\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      createdAt\n      esthetician\n      client {\n        firstName\n        lastName\n        email\n        phoneNumber\n        squareCustomerId\n        unsavedSquareCardIDs\n      }\n      treatments {\n        name\n        price\n        duration\n      }\n      addOns {\n        name\n        price\n        duration\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addAppointmentMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "getQuestions", "content": "{\n    questions \n      @rest(\n          type: \"Question\" \n          path: \"/voc\" \n          method: \"GET\"\n      ) {\n      id\n      title\n      createdAt\n      username\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/voc/ApolloVoc.js", "repo": "ymkmoon_toyseven-react"}}, {"type": "mutation", "name": "submitQuestion($body: PublishablePostInput!)", "content": "{\n    question(body: $body) \n      @rest(\n          type: \"Question\" \n          path: \"/voc/question\" \n          method: \"POST\"\n          bodyKey: \"body\"\n      ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/voc/ApolloVocQuestion.js", "repo": "ymkmoon_toyseven-react"}}, {"type": "mutation", "name": "AddGenre($genreInput: GenreInput)", "content": "{\n    addGenre(genreInput: $genreInput) {\n      action\n      animation\n      comedy\n      crime\n      documentation\n      drama\n      european\n      family\n      fantasy\n      history\n      horror\n      music\n      romance\n      scifi\n      thriller\n      war\n      western\n    }\n  }", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "mutation", "name": "RegisterUser($registerInput: RegisterInput)", "content": "{\n    registerUser(registerInput: $registerInput) {\n      id\n      name\n      username\n      email\n      password\n    }\n  }", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "mutation", "name": "LoginUser($loginInput: LoginInput)", "content": "{\n    loginUser(LoginInput: $loginInput) {\n      name\n      username\n      email\n      hulu\n      netflix\n      prime\n      disney\n      hbo\n      watched\n    }\n  }", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "mutation", "name": "UpdateUser($updateUserInput: UpdateUserInput)", "content": "{\n    updateUser(updateUserInput: $updateUserInput) {\n      id\n      name\n      username\n      password\n      email\n      hulu\n      netflix\n      prime\n      disney\n      hbo\n    }\n  }", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "mutation", "name": "AddWatched($addWatched: AddWatched)", "content": "{\n  addWatched(addWatched: $addWatched) {\n    id,\n    username,\n    watched\n  }\n}", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}}, {"type": "mutation", "name": "insertEmail($object: user_email_insert_input!)", "content": "{\n    insert_user_email_one(object: $object) {\n      id\n    }\n  }", "metadata": {"commit_hash": "704b2998e1b2fbb8ffc6c509c84d75aeaf37eafe", "file": "webapp/src/gql/myvoteeos.js", "repo": "eoscostarica_MyvoteEOS-proxy"}}, {"type": "mutation", "name": "GoogleMutation($googleToken: String!)", "content": "{\n          google(token: $googleToken) {\n            _id\n            firstName\n            lastName\n            image\n            email\n            wishListIds\n            wishLists {\n              _id\n              link\n              description\n              categoryIds\n              categories {\n                name\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "mutation", "name": "saveList(\n          $link: String!\n          $categories: [String!]!\n          $userId: String!\n          $description: String!\n        )", "content": "{\n          wishListCreateOne(\n            link: $link\n            categoryIds: $categories\n            userId: $userId\n            description: $description\n          ) {\n            isPublished\n            message\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "mutation", "name": "deleteList($wishListId: String!, $userId: String!)", "content": "{\n          deleteListFromUser(wishListId: $wishListId, userId: $userId) {\n            success\n            message\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n            vote(repoFullName: $repoFullName, type: $type) {\n              score\n              id\n              vote {\n                vote_value\n              }\n            }\n          }", "metadata": {"commit_hash": "7329a93316e283725f01eb3a8905af1f84aae288", "file": "client/Feed.ts", "repo": "it-efrem_Apollo-Angular"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n            submitRepository(repoFullName: $repoFullName) {\n              createdAt\n            }\n          }", "metadata": {"commit_hash": "7329a93316e283725f01eb3a8905af1f84aae288", "file": "client/NewEntry.ts", "repo": "it-efrem_Apollo-Angular"}}, {"type": "mutation", "name": "($signature: String, $password: String)", "content": "{\n    validateFormCredentials(signature: $signature, password: $password)\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "pages/login.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "($signature: String, $password: String)", "content": "{\n    login(signature: $signature, password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "pages/login.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "(\n    $email: String\n    $fullName: String\n    $username: String\n    $dateOfBirth: DateTime\n    $gender: String\n    $password: String\n    $musicInterests: [Int]\n    $gamesInterests: [Int]\n  )", "content": "{\n    createUserAccount(\n      email: $email\n      gender: $gender\n      musicInterests: $musicInterests\n      gamesInterests: $gamesInterests\n      fullName: $fullName\n      username: $username\n      dateOfBirth: $dateOfBirth\n      password: $password\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "pages/register.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "(\n    $fullName: String\n    $username: String\n    $password: String\n    $email: String\n    $gender: String\n  )", "content": "{\n    validateFormCredentials(\n      fullName: $fullName\n      username: $username\n      password: $password\n      email: $email\n      gender: $gender\n    )\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "pages/register.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    logout(id: $id) {\n      success\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "actions/userActions.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "($id: ID, $connectionId: ID)", "content": "{\n    success\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "actions/userActions.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "($query: String)", "content": "{\n    textSearch(query: $query, length: 5) {\n      fullName\n      username\n      profilePicture\n      id\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "components/Navigation/TopBar.js", "repo": "Nemanja02_Lobbia"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n    token\n    user {\n        _id\n        username\n    }\n    }\n}", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "addUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n    token\n    user {\n        _id\n        username\n        email\n        password\n    }\n    }\n}", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "updateprofile($name: String, $jobTitle: String, $company: String, $currentProject: String)", "content": "{\n        updateprofile(name: $name, jobTitle: $jobTitle, company: $company, currentProject: $currentProject) {\n            _id\n            username\n            name\n            jobTitle\n            company\n            currentProject\n            bugsFixed\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "addBug($bugName: String, $productName: String, $severity: String, $description: String, $reproduction: String)", "content": "{\n        addBug(bugName: $bugName, productName: $productName, severity: $severity, description: $description, reproduction: $reproduction) {\n            _id\n            bugName\n            productName\n            date\n            severity\n            description\n            reproduction\n            status\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "updateBug($bugId: ID!, $description: String!, $reproduction: String!)", "content": "{\n        updateBug(BugId: $bugId, description: $description, reproduction: $reproduction) {\n            _id\n            bugName\n            productName\n            date\n            severity\n            description\n            reproduction\n            status\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "BugFixed($bugId: ID!)", "content": "{\n        BugFixed(BugId: $bugId) {\n            _id\n            bugName\n            productName\n            date\n            severity\n            description\n            reproduction\n            status\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "deleteBUG($bugId: ID!)", "content": "{\n    deleteBug(BugId: $bugId) {\n      _id\n      username\n      bugs {\n        _id\n        bugName\n      }\n    }\n  }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "SendForgotPasswordEmailMutation($email: String!)", "content": "{\n    sendForgotPasswordEmail(email: $email)\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/ForgotPasswordController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "RegisterMutation($email: String!, $password: String!)", "content": "{\n    register(email: $email, password: $password) {\n      path\n      message\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/RegisterController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "UpdateListingMutation(\n    $listingId: String!\n    $input: UpdateListingInput!\n  )", "content": "{\n    updateListing(listingId: $listingId, input: $input)\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/UpdateListing/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "CreateMessageMutation($message: MessageInput!)", "content": "{\n    createMessage(message: $message)\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/CreateMessage/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "CreateListingMutation(\n    $picture: Upload,\n    $name: String!\n    $category: String!\n    $description: String!\n    $price: Int!\n    $beds: Int!\n    $guests: Int!\n    $latitude: Float!\n    $longitude: Float!\n    $amenities: [String!]!\n  )", "content": "{\n    createListing(\n      input: {\n        picture: $picture\n        name: $name\n        category: $category\n        description: $description\n        price: $price\n        beds: $beds\n        guests: $guests\n        latitude: $latitude\n        longitude: $longitude\n        amenities: $amenities\n      }\n    )\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/CreateListing/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "LoginMutation($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      errors {\n        path\n        message\n      }\n      sessionId\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/LoginController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "LogoutMutation", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/LogoutController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "ForgotPasswordChangeMutation($newPassword: String!, $key: String!)", "content": "{\n    forgotPasswordChange(newPassword: $newPassword, key: $key) {\n      path\n      message\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/ChangePasswordController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "UPDATE_ROLE_BY_BOT(\n    $platform: String!\n    $guildPlatformId: String!\n    $guildName: String!\n    $guildDescription: String\n    $guildIconUrl: String!\n    $roleName: String!\n    $rolePlatformId: String!\n    $roleDescription: String\n    $balance: String!\n    $chainId: String!\n    $contractAddress: String!\n    $purchaseUrl: String!\n  )", "content": "{\n    updateRoleByBot(\n      platform: $platform\n      guildPlatformId: $guildPlatformId\n      guildName: $guildName\n      guildDescription: $guildDescription\n      guildIconUrl: $guildIconUrl\n      roleName: $roleName\n      rolePlatformId: $rolePlatformId\n      roleDescription: $roleDescription\n      balance: $balance\n      chainId: $chainId\n      contractAddress: $contractAddress\n      purchaseUrl: $purchaseUrl\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "bot/src/graphql-operations/mutations.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "mergeWithUser($id: String!)", "content": "{\n    mergeWithUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/pages/LoginPage/LoginPage.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "UpdateGameMutation($id: String!, $input: UpdateGameInput!)", "content": "{\n    updateGame(id: $id, input: $input) {\n      id\n      createdAt\n      updatedAt\n      playedAt\n      mintedAt\n      moves\n      movesHash\n      black\n      white\n      userAddress\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/EditGameCell/EditGameCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "CreateUserMutation($input: CreateUserInput!)", "content": "{\n    createUser(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/NewUser/NewUser.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "UpdateUserMutation($id: String!, $input: UpdateUserInput!)", "content": "{\n    updateUser(id: $id, input: $input) {\n      address\n      authDetailId\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/EditUserCell/EditUserCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "CreateGameMutation($input: CreateGameInput!)", "content": "{\n    createGame(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/NewGame/NewGame.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "DeleteUserMutation($id: String!)", "content": "{\n    deleteUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/Users/Users.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "MintGameMutation($id: String!)", "content": "{\n    mintGame(id: $id) {\n      transactionHash\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/Game/Game.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "renameList($name: String!, $url: String!, $listId: Int!)", "content": "{\n    renameList(name: $name, url: $url, listId: $listId) {\n      message\n      success\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/renamelist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "addToList($listId: Int!, $productId: Int!, $quantity: Int!, $productAttributeId: Int!, $url: String!)", "content": "{\n    addToList(\n      listId: $listId\n      productId: $productId\n      quantity: $quantity\n      productAttributeId: $productAttributeId\n      url: $url\n    ) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/addtolist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "shareList($listId: Int!, $userId: Int!)", "content": "{\n    shareList(listId: $listId, userId: $userId) {\n      url\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/sharelist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "removeFromList($listId: Int!, $productId: Int!, $productAttributeId: Int!, $url: String!)", "content": "{\n    removeFromList(listId: $listId, productId: $productId, productAttributeId: $productAttributeId, url: $url) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/removeFromList.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "createList($name: String!, $url: String!)", "content": "{\n    createList(name: $name, url: $url) {\n      message\n      datas {\n        name\n        id_wishlist\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/createlist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "deleteList($listId: Int!, $url: String!)", "content": "{\n    deleteList(listId: $listId, url: $url) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/deletelist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "mutation", "name": "addProfile($username: String!, $email: String!, $password: String!)", "content": "{\n  addProfile(username: $username, email: $email, password: $password) {\n    token\n    profile {\n      _id\n      username\n      kitchen {\n        _id\n        name\n        quantity\n        uom\n        refrigerated\n        expires\n        purchaseDate\n      }\n      friends {\n        friends {\n          _id\n          username\n        }\n        recipes {\n          _id\n          name\n          instructions\n          minutes\n          ingredients {\n            _id\n            name\n            quantity\n            uom\n            refrigerated\n            expires\n            purchaseDate\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n  login(email: $email, password: $password) {\n    token\n    profile {\n      _id\n      username\n      email\n      kitchen {\n        _id\n        name\n        quantity\n        uom\n        refrigerated\n        expires\n        purchaseDate\n      }\n      friends {\n        _id\n        username\n      }\n      recipes {\n        _id\n        name\n        instructions\n        minutes\n        ingredients {\n          _id\n          name\n          quantity\n          uom\n          refrigerated\n          expires\n          purchaseDate\n        }\n        reactions {\n          _id\n          reactionBody\n          username\n          createdAt\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "Mutation($profileId: ID!, $friend: String!)", "content": "{\n  addFriend(profileId: $profileId, friend: $friend) {\n    _id\n    username\n    email\n    password\n    kitchen {\n      _id\n      name\n      quantity\n      uom\n      refrigerated\n      expires\n      purchaseDate\n    }\n    friends {\n      _id\n      username\n      email\n    }\n    recipes {\n      _id\n      name\n      instructions\n      minutes\n      ingredients {\n        _id\n        name\n        quantity\n        uom\n        refrigerated\n        expires\n        purchaseDate\n      }\n      reactions {\n        _id\n        reactionBody\n        username\n        createdAt\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "addProduct($profileId: String!, $productId: ID!)", "content": "{\n    addProduct(profileId: $profileId, product: $product) {\n      profile {\n        _id\n        username\n        kitchen\n        friends\n        recipes\n      }\n    }\n  }", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "removeProduct($profileId: String!, $productId: ID!)", "content": "{\n    removeProduct(profileId: $profileId, product: $product) {\n      profile {\n        _id\n        username\n        kitchen\n        friends\n        recipes\n      }\n    }\n  }", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "Mutation($product: ProductInput)", "content": "{\n  addProduct(product: $product) {\n    _id\n    name\n    quantity\n    uom\n    refrigerated\n    expires\n    purchaseDate\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "Mutation($recipe: RecipeInput)", "content": "{\n  addRecipe(recipe: $recipe) {\n    _id\n    name\n    instructions\n    minutes\n    reactions {\n      _id\n      reactionBody\n      username\n      createdAt\n    }\n    ingredients {\n      _id\n \n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "addFavRecipe($profileId: String!, $recipeId: ID!)", "content": "{\n    profile {\n      _id\n      username\n      kitchen\n      friends\n      recipes\n    }\n  }", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "UpdateProfile($profile: ProfileInput)", "content": "{\n    updateProfile(profile: $profile)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/updateProfile.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "CreateProfile($username: String)", "content": "{\n    createProfile(username: $username) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/createProfileMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "BlockContact($username: String, $timestamp: Float)", "content": "{\n    blockContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/blockContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "RemoveContact($username: String, $timestamp: Float)", "content": "{\n    removeContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/removeContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "UnblockContact($username: String, $timestamp: Float)", "content": "{\n    unblockContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/unblockContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "AddContact($username: String, $timestamp: Float)", "content": "{\n    addContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/addContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "DeleteProfile($username: String)", "content": "{\n    createPublicProfile(username: $username)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/deleteProfileMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "InitializeP2PDNA($requirements: Requirements)", "content": "{\n    initializeP2PDNA(requirements: $requirements) {\n      Boolean\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/initializeP2PDNA.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "FetchRequestAndJoinP2PComm", "content": "{\n    fetchRequestAndJoinP2PComm {\n        id\n        members {\n          me {\n            id\n            username\n          }\n          conversant {\n            id\n            username\n          }\n        }\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/requests/mutations/fetchRequestAndJoinP2PCommMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "RequestToChat($sender: ID, $recipient: ID)", "content": "{\n    requestToChat(sender: $sender, recipient: $recipient)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/requests/mutations/requestToChatMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "AcceptRequest($sender: ID)", "content": "{\n    acceptRequest(sender: $sender)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/requests/mutations/acceptRequestMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "InitializeP2PDNA($properties: Properties)", "content": "{\n    initializeP2PDNA(properties: $properties) {\n      id\n      creator\n      conversant\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/p2pcomm/mutations/initializeP2PDNAMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "SendMessage(\n    $author: ID\n    $recipient: ID\n    $message: String\n    $properties: Properties\n  )", "content": "{\n    sendMessage(\n      author: $author\n      recipient: $recipient\n      message: $message\n      properties: $properties\n    ) {\n      author\n      recipient\n      timestamp\n      payload\n      address\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/messages/mutations/sendMessageMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "DeleteMessages($instanceId: ID, $addresses: [ID])", "content": "{\n    deleteMessages(instanceId: $instanceId, addresses: $addresses)\n    Boolean\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/messages/mutations/deleteMessages.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "UpdateMessage($instanceId: ID, $id: ID, $message: String)", "content": "{\n    updateMessage(instanceId: $instanceId, id: $id, message: $message)\n    Boolean\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/messages/mutations/updateMessage.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "addUser($firstName: String!, $email: String!, $password: String!)", "content": "{\n    addUser(firstName: $firstName, email: $email, password: $password) {\n      token\n      user {\n          _id\n          firstName\n          email\n          \n      }\n    }\n  }", "metadata": {"commit_hash": "f843b88d9cd8c38fc94a84297a63e19a2c383a57", "file": "client/src/utils/mutations.js", "repo": "ottercreektourism_kernel"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n      login(email: $email, password: $password) {\n          token\n          user {\n              _id\n          }\n      }\n  }", "metadata": {"commit_hash": "f843b88d9cd8c38fc94a84297a63e19a2c383a57", "file": "client/src/utils/mutations.js", "repo": "ottercreektourism_kernel"}}, {"type": "mutation", "name": "addKernel($input: kernelInput!)", "content": "{\n      addKernel(input: $input) {\n        \n              _id\n          \n      }\n  }", "metadata": {"commit_hash": "f843b88d9cd8c38fc94a84297a63e19a2c383a57", "file": "client/src/utils/mutations.js", "repo": "ottercreektourism_kernel"}}, {"type": "mutation", "name": "(\n    $name: String!\n    $duration: Int!\n    $portions: Int!\n    $img: String!\n    $description: String!\n    $ingredients: JSON!\n    $steps: JSON!\n    $category: ID!\n    $author: ID!\n  )", "content": "{\n    createRecipe(\n      data: {\n        name: $name\n        duration: $duration\n        portions: $portions\n        img: $img\n        description: $description\n        ingredients: $ingredients\n        steps: $steps\n        category: $category\n        author: $author\n      }\n    ) {\n      data {\n        id\n        attributes {\n          name\n          category {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "mutation", "name": "(\n    $id: ID!\n    $name: String!\n    $duration: Int!\n    $portions: Int!\n    $img: String!\n    $description: String!\n    $ingredients: JSON!\n    $steps: JSON!\n    $category: ID!\n    $author: ID!\n  )", "content": "{\n    updateRecipe(\n      id: $id\n      data: {\n        name: $name\n        duration: $duration\n        portions: $portions\n        img: $img\n        description: $description\n        ingredients: $ingredients\n        steps: $steps\n        category: $category\n        author: $author\n      }\n    ) {\n      data {\n        id\n        attributes {\n          name\n          category {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteRecipe(id: $id) {\n      data {\n        id\n        attributes {\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "mutation", "name": "($id: ID!, $likes: Long!, $idUser: ID!, $favorites: [ID!])", "content": "{\n    updateRecipe(id: $id, data: { likes: $likes }) {\n      data {\n        id\n        attributes {\n          likes\n        }\n      }\n    }\n    updateUsersPermissionsUser(id: $idUser, data: { favorites: $favorites }) {\n      data {\n        id\n        attributes {\n          favorites {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "mutation", "name": "profile($data: UserProfileInput!)", "content": "{\n    profile(data: $data) {\n      user {\n        firstname\n        lastname\n        email\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/profile/profile.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      user {\n        firstname\n        email\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/login/login.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "changePassword($data: UserChangePasswordInput!)", "content": "{\n    changePassword(data: $data) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/change-password/change-password.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "signup($data: UserSignupInput!)", "content": "{\n    signup(data: $data) {\n      user {\n        firstname\n        lastname\n        email\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/signup/signup.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "updateRole($data: RoleUpdateInput!, $where: RoleWhereUniqueInput!)", "content": "{\n    updateRole(data: $data, where: $where) {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/update/role-update.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "createRole($data: RoleCreateInput!)", "content": "{\n    createRole(data: $data) {\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/create/role-create.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteRole($where: RoleWhereUniqueInput!)", "content": "{\n    deleteRole(where: $where) {\n      name\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteManyRoles($where: RoleWhereInput!)", "content": "{\n    deleteManyRoles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "changeFile($file: Upload!, $where: FileWhereUniqueInput!)", "content": "{\n  changeFile(file: $file, where: $where) {\n    filename\n  }\n}", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/change/file-change.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n  uploadFiles(files: $files) {\n    filename\n  }\n}", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/upload/file-upload.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteFile($where: FileWhereUniqueInput!)", "content": "{\n    deleteFile(where: $where) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteManyFiles($where: FileWhereInput!)", "content": "{\n    deleteManyFiles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "updateUser($data: UserUpdateInput!, $where: UserWhereUniqueInput!)", "content": "{\n    updateUser(data: $data, where: $where) {\n      id\n      firstname\n      email\n      lastname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "createUser($data: UserCreateInput!)", "content": "{\n    createUser(data: $data) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/create/user-create.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteUser($where: UserWhereUniqueInput!)", "content": "{\n    deleteUser(where: $where) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteManyUsers($where: UserWhereInput!)", "content": "{\n    deleteManyUsers(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "CreateBook($title: String!, $authorId: ID!)", "content": "{\n      createBook(title: $title, authorId: $authorId) {\n        msg\n        status\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/CreateBooks.js", "repo": "FrontPhoenix_graphql-sample"}}, {"type": "mutation", "name": "CreateAuthor($name: String!)", "content": "{\n      createAuthor(name: $name) {\n        msg\n        status\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/CreateAuthor.js", "repo": "FrontPhoenix_graphql-sample"}}]