[{"type": "query", "name": "getFeed($cursor: String)", "content": "{\n    greeting {\n      text\n      id\n    }\n    documents: search(\n      filters: [\n        { key: \"template\", not: true, value: \"section\" }\n        { key: \"template\", not: true, value: \"format\" }\n        { key: \"template\", not: true, value: \"front\" }\n      ]\n      filter: { feed: true }\n      sort: { key: publishedAt, direction: DESC }\n      first: 30\n      after: $cursor\n    ) {\n      totalCount\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      nodes {\n        entity {\n          ...FeedDocument\n        }\n      }\n    }\n  }\n  ${documentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Feed/index.js", "repo": "republik_plattform"}}, {"type": "query", "name": "GetActiveAppContext", "content": "{\n  activeAppContext {\n    user {\n      ...ActiveUserFragment\n    }\n    mergedTeams {\n      id\n      name\n      photoURL\n    }\n    mergedAccessLevels {\n      id\n      name\n    }\n    hasTeams\n    hasUser\n  }\n}\n\n${userFragment}", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/api/queries/get-active-context.js", "repo": "endeavorb2b_websites"}}, {"type": "mutation", "name": "(\n      $title: String!,\n      $imageUrl:String!,\n      $categories: [String]!,\n      $variables: [String]!,\n      $description: String!,\n      $userId:ID!\n    )", "content": "{\n      addPost(\n        title:$title\n        imageUrl:$imageUrl\n        categories:$categories\n        variables:$variables\n        description:$description\n        userId:$userId\n      ){\n        _id\n        title\n        imageUrl\n        categories\n        variables\n        description\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "SearchProjects($last: Int, $IDs: [ID!], $name: String, $conformsTo: [ID!], $primaryAccountable: [ID!])", "content": "{\n    economicResources(\n      last: $last\n      filter: { id: $IDs, name: $name, conformsTo: $conformsTo, primaryAccountable: $primaryAccountable }\n    ) {\n      edges {\n        node {\n          id\n          name\n          metadata\n          conformsTo {\n            id\n            name\n          }\n          primaryAccountable {\n            id\n            name\n          }\n          images {\n            hash\n            name\n            mimeType\n            bin\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/SearchProjects.tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "query", "name": "fetchNotesFromBalance(\n            $assetAddress: String!\n            $equalTo: Int\n            $greaterThan: Int\n            $lessThan: Int\n            $numberOfNotes: Int\n            $domain: String!\n            $currentAddress: String!\n        )", "content": "{\n            fetchNotesFromBalance(\n                assetAddress: $assetAddress\n                equalTo: $equalTo\n                greaterThan: $greaterThan\n                lessThan: $lessThan\n                numberOfNotes: $numberOfNotes\n                domain: $domain\n                currentAddress: $currentAddress\n            ) {\n                notes {\n                    ${requestedFields}\n                }\n                error {\n                    type\n                    key\n                    message\n                    response\n                }\n            }\n        }", "metadata": {"commit_hash": "a47d3d9ea38cd1363ede730998145da663df6091", "file": "packages/extension/src/background/services/GraphQLService/Queries/fetchNotesFromBalanceQuery.js", "repo": "AztecProtocol_aztec-v1"}}, {"type": "query", "name": "Highlight($limit: Int)", "content": "{\n    highlight(limit: $limit) {\n      topics {\n        _id\n        title\n        content\n        slug\n        user {\n          username\n          avatar\n        }\n        createdAt\n      }\n      portfolios {\n        _id\n        title\n        description\n        jobTitle\n        startDate\n        endDate\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n      book {\n        title\n        author {\n          name\n        }\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "deleteBackupRepoRecord($backupSiteID: Int!, $backupRepoID: Int!)", "content": "{\n\t\t\t\tdeleteBackupRepoRecord(\n\t\t\t\t\tsite_id: $backupSiteID,\n\t\t\t\t\tid: $backupRepoID,\n\t\t\t\t) {\n\t\t\t\t\tsuccess\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}}, {"type": "mutation", "name": "SaveOrderConfiguration($configurationInput:OrderConfigurationInput!)", "content": "{\n  saveOrderConfiguration(configurationInput:$configurationInput){\n    _id\n    order_id_prefix\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "", "content": "{\n    UserQuery {\n      me {\n        email\n        roles\n        userName\n        tenants {\n          nodes {\n            name\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/queries.js", "repo": "bringauto_fleet"}}, {"type": "query", "name": "getChat($id: ID!)", "content": "{\n      chat(id: $id) {\n        id\n        name\n        members {\n          ...user\n        }\n        messages {\n          ...message\n        }\n      }\n    }\n    ${{ ...fragments }}", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/resultCacheCleaning.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "ViewFromId($viewId: ID!)", "content": "{\n        view(id: $viewId) {\n            view_id\n            view_type\n            project {\n                name\n            }\n            path\n            spec {\n                ... on QuerySpec {\n                    query_text\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/jasmine-view.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "query", "name": "books($order: string)", "content": "{\n        books(skip: 0, limit: 2, order: $order)\n          @connection(key: \"abc\", filter: [\"order\"]) {\n          name\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($id: ID!, $input: GroupUpdateInput!)", "content": "{\n            updateGroup(id: $id, input: $input) {\n              id\n              name\n              object\n              created_at\n              updated_at\n              users {\n                id\n              }\n              users_count\n              servers {\n                id\n              }\n              servers_count\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "AddInstrument($exchangeId: String!, $instrumentType: String!, $name: String!, $positionLimit: Int!, $tickSize: Int!, $bondFixedPrice: Int!, $bondVolatility: Int!)", "content": "{\n  addInstrument(\n    exchangeId: $exchangeId\n    instrument: {instrumentType: $instrumentType, name: $name, positionLimit: $positionLimit, tickSizeMin: $tickSize, bondFixedPrice: $bondFixedPrice, bondVolatility: $bondVolatility}\n  ) {\n    id\n    name\n    tickSizeMin\n    positionLimit\n    bondFixedPrice\n    bondVolatility\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "query", "name": "Two", "content": "{\n          two\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "post($id: ID!)", "content": "{\n    post(id: $id) {\n      viewerHasFavorited\n      viewerHasStarred\n      favoritedCount\n      starredCount\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/ArticleViwer/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "SignInMutation($email: String!, $password: String!)", "content": "{\n    signIn(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/api-routes-apollo-server-and-client-auth/pages/signin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n          getUserType(id: \"${this.currentUserId}\")\n        }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/chatlist/feature/src/lib/chatlist.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "oAuthClients($namespace: String!)", "content": "{\n    oAuth2Clients(namespace: $namespace) {\n      name\n      error {\n        code\n        description\n      }\n      spec {\n        secretName\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "people", "content": "{\n            allPeople(first: 1) {\n              people {\n                name\n              }\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "repoWithCommit($repoId: ID!, $commitId: ID!)", "content": "{\n    repo(id: $repoId) {\n      id\n      isArchived\n      meta {\n        publishDate\n      }\n      latestPublications {\n        date\n        name\n        live\n        prepublication\n        scheduledAt\n      }\n      commit(id: $commitId) {\n        id\n        message\n        date\n        author {\n          email\n          name\n        }\n        document {\n          id\n          type\n          repoId\n          content\n          meta {\n            slug\n            emailSubject\n            template\n            title\n            description\n            image\n            facebookTitle\n            facebookDescription\n            facebookImage\n            twitterTitle\n            twitterDescription\n            twitterImage\n            shareText\n            format {\n              id\n              repoId\n              meta {\n                path\n                title\n                color\n                kind\n                externalBaseUrl\n              }\n            }\n            section {\n              id\n              repoId\n              meta {\n                path\n                title\n                color\n                kind\n              }\n            }\n            series {\n              title\n              description\n              logo\n              logoDark\n              overview {\n                id\n                repoId\n                meta {\n                  path\n                }\n              }\n              episodes {\n                title\n                publishDate\n                label\n                lead\n                image\n                document {\n                  id\n                  repoId\n                  meta {\n                    path\n                  }\n                }\n              }\n            }\n            audioSource {\n              mp3\n              kind\n            }\n          }\n          documentSubscribedBy: subscribedBy(\n            filters: [Document]\n            includeParents: true\n            onlyEligibles: true\n            uniqueUsers: true\n          ) {\n            totalCount\n          }\n          readAloudSubscribedBy: subscribedBy(\n            filters: [ReadAloud]\n            includeParents: true\n            onlyEligibles: true\n            uniqueUsers: true\n          ) {\n            totalCount\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Publication/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "closePullRequestAndDeleteBranch(\n    $closePullRequestInput: ClosePullRequestInput!\n    $deleteRefInput: DeleteRefInput!\n  )", "content": "{\n    ${closePullRequestMutationPart}\n    ${deleteRefMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "query", "name": "GetNAICSIndustry($naicsId: Int!)", "content": "{\n    datum: namibiaNaics(naicsId: $naicsId) {\n      id\n      naicsId\n      name\n      code\n      complexityReport\n      factors {\n        edges {\n          node {\n            aRelativeDemand\n            aResiliency\n            aEmploymentGroupsInterest\n            aFdi\n            aExportPropensity\n            fPortPropensity\n            fExistingPresence\n            fRemoteness\n            fScarceFactors\n            fInputAvailability\n            attractiveness\n            feasibility\n            shareFemale\n            shareYouth\n            shareLskill\n            id\n            rca\n          }\n        }\n      }\n      proximity {\n        edges {\n          node {\n            partnerId\n            proximity\n            rank\n            id\n            factors {\n              edges {\n                node {\n                  rca\n                }\n              }\n            }\n          }\n        }\n      }\n      relativeDemand {\n        edges {\n          node {\n            locationCode\n            countryDemandAvg\n            countryDemandPcAvg\n            id\n          }\n        }\n      }\n      occupation {\n        edges {\n          node {\n            occupation\n            isAvailable\n            rank\n            pctShare\n            id\n          }\n        }\n      }\n    }\n    scatterPlotData: namibiaNaicsList(complexityReport: true) {\n      naicsId\n      name\n      code\n      id\n      factors {\n        edges {\n          node {\n            attractiveness\n            feasibility\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "caa856ce162d7acc90e14e7eb883e81840218fd2", "file": "src/pages/namibiaTool/QueryNAICS.tsx", "repo": "cid-harvard_growth-lab-app-front-end"}}, {"type": "query", "name": "proyecto($id: String!)", "content": "{\n      proyecto(id: $id) {\n        id\n        codigo\n        nombre\n        inicia\n        finaliza\n        area {\n          id\n          nombre\n        }\n        eje {\n          id\n          nombre\n        }\n        linea {\n          id\n          nombre\n        }\n        tipo {\n          id\n          nombre\n        }\n        alcance {\n          id\n          nombre\n          valor\n        }\n        estado\n        integrantes {\n          id\n          proyecto {\n            id\n            codigo\n          }\n          usuario {\n            id\n            firstname\n            lastname\n            fullname\n            email\n            username\n            employeeNumber\n            roles {\n              id\n              name\n            }\n          }\n          jefeProyecto\n          pagos {\n            id\n            integrante {\n              id\n              usuario {\n                id\n                fullname\n                employeeNumber\n              }\n            }\n            mes {\n              id\n              nombre\n            }\n            anno {\n              id\n              numero\n            }\n            horas\n            presencia\n            incidencia\n            relevancia\n            complejidad\n            gestion\n            vinculacion\n            calidad\n            significacion\n            cumplimiento\n            calculo\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createPost($authToken: String!, $post: PostInput)", "content": "{\n    CreatePost(input: { auth_token: $authToken, post: $post }) {\n      post {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/CreatePostContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "SavePaypalConfiguration($configurationInput:PaypalConfigurationInput!)", "content": "{\n  savePaypalConfiguration(configurationInput:$configurationInput){\n    _id\n    clientId\n    clientSecret\n    sandbox\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Paypal/Paypal.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "", "content": "{\n          jobs {\n            name\n            result\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteUserAccountByEmailAddress(\n\t\t$emailAddress: String!\n\t\t$externalReferenceCode: String!\n\t)", "content": "{\n\t\tdeleteAccountUserAccountByExternalReferenceCodeByEmailAddress(\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/user-accounts/mutations/useDeleteUserAccountByEmailAddress.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "ReferendumPostAndComments($id: Int!)", "content": "{\n  posts(where: {onchain_link: {onchain_referendum_id: {_eq: $id}}}) {\n    ...referendumPost\n  }\n}\n    ${ReferendumPostFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "GetDashboardSales($startingDate: String, $endingDate: String)", "content": "{\n  getDashboardSales(starting_date: $startingDate, ending_date: $endingDate){\n    orders{\n      day\n      amount\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "", "content": "{\n        createAuthor(firstName: \"John\", lastName: \"Smith\") {\n          firstName\n          lastName\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getDatasetStorageLocation($locationUri: String!)", "content": "{\n      getDatasetStorageLocation(locationUri: $locationUri) {\n        dataset {\n          datasetUri\n          name\n          userRoleForDataset\n          region\n          SamlAdminGroupName\n          S3BucketName\n          AwsAccountId\n          owner\n          organization {\n            label\n          }\n          environment {\n            label\n            region\n            subscriptionsEnabled\n            subscriptionsProducersTopicImported\n            subscriptionsConsumersTopicImported\n            subscriptionsConsumersTopicName\n            subscriptionsProducersTopicName\n          }\n        }\n        owner\n        description\n        created\n        tags\n        locationUri\n        AwsAccountId\n        label\n        name\n        S3Prefix\n        terms {\n          count\n          nodes {\n            nodeUri\n            path\n            label\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/getDatasetStorageLocation.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "rematchPayments", "content": "{\n    rematchPayments\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "subscription", "name": "", "content": "{\n    online_users(order_by: { name: asc }) {\n      name\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "react-apollo-todo/src/components/OnlineUsers/OnlineUsers.js", "repo": "hasura_sample-apps"}}, {"type": "query", "name": "getUser($username: String!)", "content": "{\n    getUser(username: $username) {\n      followers\n      followings\n      bio\n      user {\n        id\n        fullname\n        username\n        email\n        social\n        image\n        isOnline\n        owner\n        communitiesOwned {\n          id\n          url\n        }\n        communitiesFollowed {\n          id\n          url\n          author {\n            id\n          }\n          image\n          name\n          members {\n            id\n          }\n          notifications {\n            id\n          }\n        }\n        role {\n          id\n          roleSettings\n          title\n          color\n        }\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/User.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "query", "name": "", "content": "{\n              a\n              b\n              c\n            }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/ApolloClient.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "integrante($id: String!)", "content": "{\n    integrante(id: $id) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        fullname\n      }\n      proyecto {\n        id\n        nombre\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+profesor/integrante/details/integrante-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "reviewerPost($reviewerId: Int!)", "content": "{\n          primaryReviewerId @client @export(as: \"reviewerId\")\n          secondaryReviewerId @client @export(as: \"reviewerId\")\n          post(reviewerId: $reviewerId) {\n            title\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/export.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "AllPeople($search: String!)", "content": "{\n          people(search: $search) {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getComposerCommunitiesAndChannels", "content": "{\n    user: currentUser {\n      ...userInfo\n      communityConnection {\n        edges {\n          node {\n            id\n            name\n            slug\n            profilePhoto\n            communityPermissions {\n              isMember\n              isBlocked\n              isOwner\n              isModerator\n              reputation\n            }\n          }\n        }\n      }\n      channelConnection {\n        edges {\n          node {\n            id\n            name\n            slug\n            isDefault\n            isPrivate\n            isArchived\n            community {\n              id\n            }\n            channelPermissions {\n              isMember\n              isPending\n              isBlocked\n              isOwner\n              isModerator\n            }\n          }\n        }\n      }\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/composer/getComposerCommunitiesAndChannels.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CreateMessage($id: String, $message: String)", "content": "{\n    createMessage(id: $id, message: $message) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/Messages/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "LikePost($postID: String!)", "content": "{\n        likePost(postID: $postID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "($tokenId: String!, $usersStarknetAddresses: [String!]!)", "content": "{\n    cardByTokenId(tokenId: $tokenId) {\n      serialNumber\n      cardModel {\n        pictureUrl(derivative: \"width=128\")\n        season\n        slug\n        artistName\n      }\n    }\n    ${USERS_QUERY_CONTENT}\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/state/transactions/hooks.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "Directive", "content": "{\n        mutate {\n          field {\n            subField {\n              hello @live\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "sellingPlanGroups($productId: ID!)", "content": "{\n        sellingPlanGroups(first: 10) {\n            edges {\n                node {\n                    id\n                    name\n                    appliesToProduct(productId: $productId)\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "admin-extension/AddSellingPlan.tsx", "repo": "mr-perseus_permaculture"}}, {"type": "query", "name": "Simple", "content": "{\n        field @storage(if: true)\n        user @client\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getMailboxHtml($id: ID)", "content": "{\n    mailbox(first: 1, filters: { id: $id }) {\n      nodes {\n        ...MailboxHtml\n      }\n    }\n  }\n\n  ${fragments.html}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Mailbox/Mail.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @include(if: true)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getCurrentUserCommunityConnection", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userCommunityConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunityConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/user/getUserCommunityConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "userByIdWithBitcoinAddress($id: ID!)", "content": "{\n    user(id: $id) {\n      ...UserBaseInfo\n      bitcoinAddress\n    }\n  }\n  ${fragments.userBaseInfo}", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/graphql-authentication-and-authorization/__tests__/queries.ts", "repo": "mrdulin_apollo-graphql-tutorial"}}, {"type": "mutation", "name": "updateStatusPetition($petitionId: Int!, $statusPetition: String!, $userToken: String!)", "content": "{\n      updateStatusPetition(petitionId: $petitionId, statusPetition: $statusPetition, userToken: $userToken){\n        petition{\n          status\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/personalRequestsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "UnhideEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\tunhideEventDefinitions(eventDefinitionIds: $eventDefinitionIds) {\n\t\t\tdescription\n\t\t\tdisplayName\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "CreateCoupon($couponInput:CouponInput!)", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Coupon/Coupon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "SendMessage($to: String!, $content: String, $media: [MediaInput])", "content": "{\n    sendMessage(to: $to, content: $content, media: $media) {\n      success\n      error\n      conversation {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SendMessage.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "GET_TREE_BY_ID($id: [ID!])", "content": "{\n        trees(filters: {id: $id}) {\n            list {\n                ...TreeDetails\n            }\n        }\n    }\n    ${TreeDetailsFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "", "content": "{\n    blogPosts {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/gatsby/examples/using-multiple-providers/src/pages/index.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getPartners($eventId: ID!)", "content": "{\n    events {\n      event(findBy: { id: $eventId }) {\n        get {\n          id\n          name\n          slug\n          year\n          partners {\n            id\n            slug\n            level\n            placement\n            companyName\n            companyLogo\n            heroImage\n            website\n            facebook\n            instagram\n            twitter\n            youtube\n            linkedIn\n            github\n            jobListings {\n              slug\n              id\n              title\n              description\n              jobType\n              internship\n              experienceLevel\n              relocationOffered\n              remote\n              role\n              featured\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/wi/2021/jobs.js", "repo": "ThatConference_that-website"}}, {"type": "query", "name": "getProducts($listId: Int!, $url: String!)", "content": "{\n    products(listId: $listId, url: $url) {\n      datas\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/queries/getproducts.js", "repo": "Marikita1007_prestashop_youtube"}}, {"type": "query", "name": "listCountries", "content": "{\n    countries {\n      code\n      name\n      native\n      phone\n      continent {\n        code\n        name\n      }\n      currency\n      languages {\n        code\n        name\n        native\n        rtl\n      }\n      emoji\n    }\n  }", "metadata": {"commit_hash": "5e06f972984b67095119ca2da9edf4b9fc001928", "file": "src/modules/countries/gql/index.ts", "repo": "bjerkio_stact"}}, {"type": "mutation", "name": "updatePostfinancePayment(\n    $id: ID!\n    $message: String!\n  )", "content": "{\n    updatePostfinancePayment(\n      pfpId: $id\n      mitteilung: $message\n    ) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "query", "name": "files", "content": "{\n    files {\n      id\n      filename\n      mimetype\n      path\n      size\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "publishThread($thread: ThreadInput!)", "content": "{\n    publishThread(thread: $thread) {\n      ...threadInfo\n      channel {\n        id\n        slug\n        community {\n          id\n          slug\n        }\n      }\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/publishThread.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "channelNotifications($channelUrl: String!)", "content": "{\n    channelNotifications(channelUrl: $channelUrl) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "subscription", "name": "OnCreateTodo", "content": "{\n              onCreateTodo {\n                id\n                name\n                owner\n              }\n            }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "sub", "content": "{\n        addContestantScore {\n            gameId\n            login\n            name\n            organization\n            score\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "CreateListing(\n    $from: String!\n    $deposit: String\n    $depositManager: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )", "content": "{\n    createListing(\n      from: $from\n      deposit: $deposit\n      depositManager: $depositManager\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "deleteOwnAnimation($animationId: String!)", "content": "{\n    deleteOwnAnimation(input: { animationId: $animationId }) {\n      string\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "people($first: Int)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/loading.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "FetchBids ($id: Int)", "content": "{\n        bids(first: 3, orderBy: createdAt, orderDirection: desc, where: {eventID: $id}) {\n            address\n            eventID\n            stakedAmount\n            createdAt\n        }\n    }", "metadata": {"commit_hash": "6f372b42abec79f8082dd87765e1e0904347a643", "file": "src/state/smartbid/hooks.ts", "repo": "rigelprotocol_SmartswapDappV2"}}, {"type": "mutation", "name": "createUserAccount($username: String!, $roleCode: String!, $email: String!, $fullName: String!, $initials: String!, $password: String!)", "content": "{\n  createUserAccount(\n    input: {roleCode: $roleCode, username: $username, email: $email, fullName: $fullName, initials: $initials, password: $password}\n  ) {\n    id\n    email\n    fullName\n    initials\n    username\n    bio\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    role {\n      code\n      name\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteAPIRule($name: String!, $namespace: String!)", "content": "{\n    deleteAPIRule(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "GET_TREE_BY_ID($id: [ID!])", "content": "{\n        trees(filters: {id: $id}) {\n            totalCount\n            list {\n                id\n                label\n                system\n                behavior\n                permissions_conf {\n                    libraryId\n                    permissionsConf {\n                        permissionTreeAttributes {\n                            id\n                            label\n                            ... on TreeAttribute {\n                                linked_tree {\n                                    id\n                                }\n                            }\n                        }\n                        relation\n                    }\n                }\n                libraries {\n                    library {\n                        id\n                        label\n                        attributes {\n                            id\n                            label\n                            type\n                        }\n                    }\n                    settings {\n                        allowMultiplePositions\n                        allowedAtRoot\n                        allowedChildren\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/getTreeById.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "updateUserMutation($id: ID!, $firstName: String!, $lastName: String!, $gender: String!)", "content": "{\n    updateUser(id: $id, firstName: $firstName, lastName: $lastName, gender: $gender) {\n      id\n      firstName\n      lastName\n      gender\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "mutation", "name": "($sequenceID: String!, $tags: [String])", "content": "{\n    summon: NewSequenceSummon(sequenceID:$sequenceID, daysToComplete: ${defaultRemoteMeetingLimit}, tags: $tags)\n  }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/summon/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "DoSomething", "content": "{\n        doSomething {\n          time\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useMutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "MatchQuery($match_id: Int, $match_uuid: String)", "content": "{\n        match(\n            match_id: $match_id,\n            match_uuid: $match_uuid\n        ) {\n            match_id\n            leaderboard_id\n            name\n            map_type\n            started\n            finished\n            players {\n                profile_id\n                name\n                rating\n                civ\n                slot\n                slot_type\n                color\n                won\n                team\n            }\n        }\n    }", "metadata": {"commit_hash": "c39579d68a7ed2ab1e6ee05fadf5c42013d30f3e", "file": "website/src/components/profile-matches.tsx", "repo": "denniske_aoe2companion"}}, {"type": "mutation", "name": "JoinToRoom($roomId: Float!)", "content": "{\n  joinToRoom(roomId: $roomId) {\n    username\n    firstname\n    lastname\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "Comment($repoName: String!, $start: Int!, $limit: Int!)", "content": "{\n      entry(repoFullName: $repoName) {\n        comments(start: $start, limit: $limit) {\n          text\n          __typename\n        }\n        __typename\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "UpdateNotificationStatus($offerNotification:Boolean!,$orderNotification:Boolean!)", "content": "{\n            updateNotificationStatus(offerNotification:$offerNotification,orderNotification:$orderNotification){\n              _id\n              notificationToken\n              isOrderNotification\n              isOfferNotification\n            }\n          }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "update$", "content": "{MODEL}($id: ID!, $data: ${inputName}) {\n             obj: ${mutationName}(id: $id, data: $data) ${fields}\n         }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "createProduct($id: ID!, $name: String!, $quantity: Int!)", "content": "{\n    createProduct(input: {name: $name, quantity: $quantity}) {\n      ...ProductFields\n    }\n  }\n\n  ${ProductFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/createProduct.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "setIsActiveAccount($id: ID!, $isActive: Boolean!)", "content": "{\n        setIsActiveAccount(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "GetCustomerFitPicItems($fitPicID: ID!)", "content": "{\n    fitPic(where: { id: $fitPicID }) {\n      id\n      image {\n        id\n        url\n      }\n      products {\n        id\n        name\n        brand {\n          id\n          name\n        }\n        images(size: Large) {\n          id\n          url\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/FitPic/ShareFitPicToIG.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "($literal: Boolean, $value: Int = -1)", "content": "{\n              a: field(literal: $literal, value: $value)\n            }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/ApolloClient.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "AddAction($name: String!, $action: String!, $equation: String!)", "content": "{\n    addAction(name: $name, action: $action, equation: $equation) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "CreateCar(\n      $input: CreateCarInput!\n      $condition: ModelCarConditionInput\n    )", "content": "{\n    createCar(input: $input, condition: $condition) {\n      id\n    }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}}, {"type": "mutation", "name": "deleteRole($where: RoleWhereUniqueInput!)", "content": "{\n    deleteRole(where: $where) {\n      name\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "updateVariant($id: ID!, $flagId: ID!, $input: UpdateVariant!)", "content": "{\n        updateVariant(id: $id, flagId: $flagId, input: $input) {\n            id\n            description\n            value\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @include(if: false)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Two", "content": "{\n          two\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GetAllIndustries", "content": "{\n    naceIndustryList: albaniaNaceIndustryList {\n      naceId\n      level\n      code\n      name\n      parentId\n    }\n    factors {\n      naceId\n      avgViability\n      avgAttractiveness\n      rca\n    }\n    script {\n      section\n      subsection\n      text\n    }\n  }", "metadata": {"commit_hash": "caa856ce162d7acc90e14e7eb883e81840218fd2", "file": "src/pages/albaniaTool/index.tsx", "repo": "cid-harvard_growth-lab-app-front-end"}}, {"type": "query", "name": "getProductWithRelatedProducts($slug: String!, $type: String!)", "content": "{\n    product(slug: $slug) {\n      id\n      title\n      weight\n      slug\n      price\n      type\n      image\n      categories {\n        id\n        slug\n        title\n      }\n    }\n    relatedProducts(slug: $slug, type: $type) {\n      id\n      title\n      slug\n      weight\n      price\n      type\n      image\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/query/product.query.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "query", "name": "books($order: string)", "content": "{\n        books(skip: 0, limit: 2, order: $order) {\n          name\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "RiderEarnings($riderEarningsId: String, $offset:Int)", "content": "{\n  riderEarnings(id: $riderEarningsId, offset:$offset) {\n    orderId\n    deliveryFee\n    orderStatus\n    paymentMethod\n    deliveryTime\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/screens/AvailableCash/AvailableCash.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ExecuteRuling(\n    $offerID: ID!\n    $ruling: String!\n    $commission: String!\n    $message: String\n    $refund: String\n    $from: String\n  )", "content": "{\n    executeRuling(\n      offerID: $offerID\n      ruling: $ruling\n      commission: $commission\n      message: $message\n      refund: $refund\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "loadPastTags", "content": "{\n    projectTags {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/CreateProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "query", "name": "discussionFragment($discussionId: ID!)", "content": "{\n    discussion(id: $discussionId) {\n      ...Discussion\n    }\n  }\n  ${DISCUSSION_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "query", "name": "productQuery($title: String!)", "content": "{ \n        category(input: {title: $title}){\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n\n            attributes{\n              id\n              type\n              name\n\n              items{\n                id\n                value\n                displayValue\n              }\n            }\n          \n            prices{\n              amount\n              currency{\n                label\n                symbol\n              }\n            }\n          }\n      }\n    }", "metadata": {"commit_hash": "7d5e42b621e629c96a4c6e0522a8603598a6462a", "file": "src/Data/GraphqlData.js", "repo": "til2to_ecommerce"}}, {"type": "mutation", "name": "($id: ID!, $input: UserUpdateInput!)", "content": "{\n            updateUser(id: $id, input: $input) {\n              id\n              name\n              email\n              object\n              groups {\n                id\n                name\n              }\n              created_at\n              updated_at\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "LinkTerm(\n      $nodeUri: String!\n      $targetUri: String!\n      $targetType: String!\n    )", "content": "{\n      linkTerm(\n        nodeUri: $nodeUri\n        targetUri: $targetUri\n        targetType: $targetType\n      ) {\n        linkUri\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/linkTerm.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "TodoListCell_CheckTodo($id: Int!, $status: String!)", "content": "{\n    updateTodoStatus(id: $id, status: $status) {\n      id\n      __typename\n      status\n    }\n  }", "metadata": {"commit_hash": "1031aa444ebf354ed13eb74c16f02d76b09f3302", "file": "fixtures/example-todo-master/web/src/components/TodoListCell/TodoListCell.js", "repo": "decoupled_redwood-core"}}, {"type": "query", "name": "getCurrentUser", "content": "{\n      currentUser {\n        id,\n        terms\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/Terms.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "AddToCart ($input: CheckoutCreateInput!)", "content": "{\n        checkoutCreate(input: $input) {\n            checkoutUserErrors {\n                message\n                field\n            }\n            checkout {\n                ...ReturnFieldsCheckout\n            }\n        }\n    }\n    ${ReturnFieldsCheckout}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/AddToCart.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "AddItemToOrder($id: ID!, $quantity: Int!)", "content": "{\n    addItemToOrder(productVariantId: $id, quantity: $quantity) {\n      ...ActiveOrder\n    }\n  }\n  ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/templates/ProductDetail.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}}, {"type": "query", "name": "($userId: String!)", "content": "{\n  user(userId: $userId) {\n    id,\n    username,\n    first_name,\n    last_name,\n    userId\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/table-filters/components/user-autocomplete.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "query", "name": "activeTagsFilters", "content": "{\n    activeTagsFilters @client {\n      basic {\n        ${activeTagsFiltersQGL}\n      }\n      provider {\n        ${activeTagsFiltersQGL}\n      }\n      tag {\n        ${activeTagsFiltersQGL}\n      }\n      connectedApplication {\n        ${activeTagsFiltersQGL}\n      }\n      search\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceClassList/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "", "content": "{\n          getAllWorkspaceStatus {\n            ID\n            WorkspaceStatus\n            TagControl\n          }\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/user.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "query", "name": "Traffic", "content": "{\n    messages {\n      title\n      description\n      color\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Messages.js", "repo": "mtvu_nb-resource1"}}, {"type": "mutation", "name": "(\n    $id: ID\n    $type: String\n    $title: String\n    $actions: [ThoughtActionInputType]!\n  )", "content": "{\n    createThoughtItem(id: $id, type: $type, title: $title, actions: $actions) {\n      _id\n      items {\n        _id\n        title\n        completed\n      }\n      type\n      startTime\n      endTime\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "CreateLocation($input: CreateLocationInput!)", "content": "{\n            createLocation(input: $input) {\n              id\n              name\n            }\n          }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/components/create-location/create-location.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "mutation", "name": "ExecuteRulingMutation(\n    $offerID: String!\n    $ruling: String!\n    $commission: String!\n    $message: String\n    $refund: String\n    $from: String\n  )", "content": "{\n    executeRuling(\n      offerID: $offerID\n      amount: $amount\n      ruling: $ruling\n      commission: $commission\n      message: $message\n      refund: $refund\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Simple", "content": "{\n        network\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "snackbar", "content": "{\n    snackBarOpen @client\n    snackMsg @client\n     snackType @client\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/queries/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "query", "name": "meses", "content": "{\n    meses {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/list/mes-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "GetProductById (\n        $id: String!,\n        $storeId: String!,\n        $userId: String!,\n        $currencyCode: String!,\n        $cultureName: String)", "content": "{\n    product(  \n        id: $id,\n        storeId: $storeId,\n        userId: $userId,\n        currencyCode: $currencyCode,\n        cultureName: $cultureName) {  \n       \n        name   \n        id\n        code\n        slug\n        outline\n        imgSrc\n        images { url }\n        description { content id  languageCode  reviewType }\n        availabilityData { isActive isAvailable isBuyable isInStock availableQuantity }\n        price { actual { amount formattedAmount } discountAmount { amount formattedAmount } sale { amount formattedAmount } list { amount formattedAmount } }\n\n  }\n}", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/getProduct/getProductByIdQuery.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "query", "name": "tokens($value: String, $id: String)", "content": "{\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}}, {"type": "query", "name": "", "content": "{\n          a {\n            b\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/diffAgainstStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "statusChanged($id: ID!)", "content": "{\n    onStatus(id: $id) ${presenceResult}\n  }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "test/integration/apiclient.ts", "repo": "aws-samples_aws-appsync-presence-api"}}, {"type": "query", "name": "myQueryName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "resetChannelJoinToken($input: ResetChannelJoinTokenInput!)", "content": "{\n    resetChannelJoinToken(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/resetChannelJoinToken.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "getSubDomainState", "content": "{\n    subDomainState {\n      ...SubDomainStateFields\n    }\n  }\n\n  ${SubDomainStateFields}", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/SubDomainResults/SubDomainResults.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "Simple", "content": "{\n        networkField\n        field @client {\n          ...ClientFragment\n        }\n      }\n\n      fragment ClientFragment on Thing {\n        otherField\n        bar\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateUser($name: String!, $email: String!, $profilePicUrl: String, $id: ID!)", "content": "{\n  createUser(\n    createUserInput: {name: $name, email: $email, profilePicUrl: $profilePicUrl, id: $id}\n  ) {\n    name\n    email\n    profilePicUrl\n    id\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "query", "name": "user", "content": "{\n    user(id: \"1\") {\n      ...usernameFragment\n    }\n  }\n\n  ${usernameFragment}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/presets/near-operation-file/tests/fixtures/issue-6546-queries.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "myMutationName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n          person {\n            name\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createList($name: String!, $url: String!)", "content": "{\n    createList(name: $name, url: $url) {\n      message\n      datas {\n        name\n        id_wishlist\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/mutations/createlist.js", "repo": "Marikita1007_prestashop_youtube"}}, {"type": "query", "name": "", "content": "{\n        getBasketProductCount\n    }", "metadata": {"commit_hash": "d75976ca5a5746fe56fe814655bb3c33e88b042d", "file": "packages/storefront-lwc/src/modules/commerce/headerBasket/headerBasket.js", "repo": "SalesforceCommerceCloud_sfcc-sample-apps"}}, {"type": "mutation", "name": "registerFeedbackResponse($thumbnail: String!, $link: String!)", "content": "{\n    __typename\n    registerFeedbackResponse(input: { thumbnail_: $thumbnail, link_: $link }) {\n      animation {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "LeaveFromRoom($roomId: Float!)", "content": "{\n  leaveFromRoom(roomId: $roomId) {\n    avatarUrl\n    lastname\n    firstname\n    username\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "GetDashboardOrders($startingDate: String, $endingDate: String,$restaurant:String!)", "content": "{\n    getDashboardOrders(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      orders{\n        day\n        count\n      }\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "mut($in: Object!)", "content": "{\n            mut(inline: { a: 1 }, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "", "content": "{\n            listPosts {\n              items {\n                id\n                title\n              }\n            }\n          }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/TransformerOptionsV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "mod($gameId: Int!)", "content": "{\n        joinGame(gameId: $gameId) {\n            gameId\n            login\n            name\n            organization\n            score\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}}, {"type": "query", "name": "Simple", "content": "{\n        networkField {\n          ...ClientFragment\n        }\n      }\n\n      fragment ClientFragment on Thing {\n        otherField\n        bar\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "stats", "content": "{\n    datasets @rest(type: \"Search\", path: \"package_search?rows=0\") {\n      result {\n        count\n      }\n    }\n    orgs @rest(type: \"Search\", path: \"organization_list\") {\n      result\n    }\n    groups @rest(type: \"Search\", path: \"group_list\") {\n      result\n    }\n  }", "metadata": {"commit_hash": "f04b86dda45a53314422c3d42013f04980effa85", "file": "examples/ckan-2021/graphql/queries.ts", "repo": "datopian_portaljs"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n    updatePost(id: $id, votes: $votes) {\n      id\n      __typename\n      votes\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux-saga/components/PostVoteUp.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "createPost(\n        $title: String!\n        $content: String!\n        $user: ID\n        $blog: ID\n    )", "content": "{\n        createPosts(\n            input: [\n                {\n                    title: $title\n                    content: $content\n                    blog: { connect: { where: { id: $blog } } }\n                    author: { connect: { where: { id: $user } } }\n                }\n            ]\n        ) {\n            posts {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "query", "name": "GetClinics", "content": "{\n    states {\n      name\n      id\n      abbreviation\n      resources {\n        id\n        stateId\n        name\n        website\n        service\n        active\n        bipocFocus\n      }\n      misinformationCenters {\n        id\n        stateId\n        name\n        address\n        source\n        city\n        zip\n      }\n      authorizedClinics {\n        id\n        stateId\n        name\n        city\n        zip\n        phone\n        services\n        website\n        address\n        source\n      }\n    }\n  }", "metadata": {"commit_hash": "ffa1b76deaf9ee081b4e54118cd7213d63755e64", "file": "src/Utilities/queries.js", "repo": "Roe-dToAid_roed_to_aid_fe"}}, {"type": "query", "name": "Simple($variable: String!)", "content": "{\n        field(usingVariable: $variable) @client\n        networkField\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "discoverServiceConsumers ($data: DiscoverServiceConsumersInput!)", "content": "{\n        result: discoverServiceConsumers(data: $data) { status createdServiceConsumersTotal }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/resident/gql.js", "repo": "open-condo-software_condo"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @include(if: $neverDefined)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/directives.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "($input: UpdateOrderStatusInput)", "content": "{\n        updateOrderStatus(input: $input) {\n          suggestedPolylines\n          estimatedDuration\n          duration\n          orderId\n          expectedCollectedTime\n          expectedDeliveredTime\n          sender {\n            userId\n            username\n            firstName\n            lastName\n            role\n          }\n          receiver {\n            userId\n            username\n            firstName\n            lastName\n            role\n          }\n          jobs {\n            polylines\n            duration\n            driver {\n              userId\n              username\n              firstName\n              lastName\n              role\n            }\n          }\n          sendAddress\n          sendLatLng {\n            latitude\n            longitude\n          }\n          receiveAddress\n          receiveLatLng {\n            latitude\n            longitude\n          }\n          status\n          comments\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "web/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "query", "name": "GetDatasetETLCredentials($datasetUri: String!)", "content": "{\n      getDatasetETLCredentials(datasetUri: $datasetUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/getDatasetETLCredentials.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "Service($name: String!, $namespace: String!)", "content": "{\n    service(name: $name, namespace: $namespace) {\n      name\n      json\n      labels\n      clusterIP\n      UID\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "Products", "content": "{\n    products {\n      id\n      title\n      price\n      isInCart @client\n    }\n  }", "metadata": {"commit_hash": "5dd0189183c913410137e8fc9b14e96fcac09baf", "file": "client/src/apollo/queries/index.js", "repo": "vctormb_apollo-shopping-cart-caching"}}, {"type": "subscription", "name": "OnCreatePost", "content": "{\n        onCreatePost {\n          id\n          title\n          postOwner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "", "content": "{\n            author {\n              name\n              books {\n                isbn\n                title\n                year\n              }\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "", "content": "{\n    article {\n      id\n      title\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/nextjs-8-serverless/with-apollo-jwt/app/components/ArticleList.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "InsertUsers($uuid: String)", "content": "{\n            insert_user(objects: { uuid: $uuid }) {\n              returning {\n                uuid\n              }\n            }\n          }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "functions/src/index.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "query", "name": "getCommunityChannels($id: ID)", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunityChannelConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changePassword($oldPassword: String!, $newPassword: String!)", "content": "{\n    changePassword(oldPassword: $oldPassword, newPassword: $newPassword) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/password/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "query", "name": "findUpdatedMessages", "content": "{\n        message(\n            distinct_on: [id]\n            limit: 10\n        ) {\n            __typename\n            id\n            createdAt\n            updatedAt\n            message\n        }\n    }", "metadata": {"commit_hash": "95e85cd3b0e3e14c443b2ccc52cb171ab51c6fbf", "file": "examples/simple-example/src/ExamplePage.tsx", "repo": "beepsoft_hasura-bliq"}}, {"type": "subscription", "name": "updatedTodo", "content": "{\n    updatedTodo {\n      id\n      title\n      description\n      version\n      completed\n    }\n  }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "examples/react-native/src/gql/queries.js", "repo": "aerogear_offix"}}, {"type": "mutation", "name": "unassignTask($taskID: UUID!, $userID: UUID!)", "content": "{\n  unassignTask(input: {taskID: $taskID, userID: $userID}) {\n    assigned {\n      id\n      fullName\n    }\n    id\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "($userID: Float!)", "content": "{\n    user(id: $userID) {\n      id\n      username\n      rankID\n      credits\n      vipPoints\n      activityPoints\n      look\n      gender\n      motto\n      accountCreatedAt\n      onlineStatus\n      homeRoomID\n    }\n  }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/find-user-by-id.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "query", "name": "Simple", "content": "{\n        network\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "GetOrganization($id: ID!)", "content": "{\n  organization(id: $id) {\n    ...OrganizationDetails\n    ...OrganizationContacts\n    healthIndicator {\n      id\n      name\n      order\n    }\n    owner {\n      id\n      firstName\n      lastName\n    }\n    subsidiaryOf {\n      organization {\n        id\n        name\n      }\n    }\n    subsidiaries {\n      organization {\n        name\n        id\n      }\n    }\n    emails {\n      id\n      email\n      primary\n      label\n    }\n    phoneNumbers {\n      id\n      e164\n      rawPhoneNumber\n      label\n    }\n    customFields {\n      id\n      name\n      datatype\n      value\n      template {\n        type\n      }\n    }\n  }\n}\n    ${OrganizationDetailsFragmentDoc}\n${OrganizationContactsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "createModule($input: ModuleInput!)", "content": "{\n        createModule(input: $input) {\n            _id\n            name\n            project {\n                _id\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlCreateModule.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "subscription", "name": "OnUpdateMember", "content": "{\n          onUpdateMember {\n            id\n            name\n            createdAt\n            updatedAt\n          }\n        }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/amplify-util-mock/src/__e2e__/subscriptions-with-auth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "Ladders($platform_id: String!, $ladder_ids: [Int])", "content": "{\n  meta_ladders(platform_id: $platform_id, ladder_ids: $ladder_ids) {\n    id\n    platform_id\n    name\n    ranks(limit: 25) {\n      rank\n      rating\n      streak\n      user {\n        id\n        name\n        person {\n          id\n          country\n          name\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Ladders.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "query", "name": "SearchResources($filter: SearchInputFilter)", "content": "{\n      searchResources(filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          objectUri\n          objectType\n          label\n          description\n          tags\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Search/searchResources.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "allReviews", "content": "{\n    allReviews(orderBy: createdAt_DESC) {\n      id\n      slug\n      rating\n      createdAt\n      title\n    }\n  }", "metadata": {"commit_hash": "0e0c08cd4600d3535e4d6651c5ece26b6e42c1f4", "file": "pages/index.js", "repo": "hygraph_example_01_nextjs_apollo"}}, {"type": "mutation", "name": "modifyGame($id: Int!, $win: Boolean!, $activities: [Int!])", "content": "{\n    modifyGame(input: {params: {\n      id: $id\n      win: $win\n      activities: $activities\n      }\n     }\n    )\n    {\n           game {\n             id\n             win\n             level\n           }\n           success\n         }\n  }", "metadata": {"commit_hash": "ce63327cdc13d8d5323b232a3f9891fb949a0f52", "file": "src/Views/BingoView.js", "repo": "Swolify_swolify-fe"}}, {"type": "query", "name": "($commentId: ID!)", "content": "{\n      getCommentConnection(id: $commentId) {\n        id\n        content\n        post {\n          id\n          title\n        }\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthV2TransformerWithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "updatePostfinancePayment($id: ID!, $message: String!)", "content": "{\n    updatePostfinancePayment(pfpId: $id, mitteilung: $message) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/PostfinancePayments/List/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "deleteManyFiles($where: FileWhereInput!)", "content": "{\n    deleteManyFiles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "CancelOrder($_id:String!,$reason:String!)", "content": "{\n    cancelOrder(_id:$_id,reason:$reason){\n        _id\n      orderStatus\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useCancelOrder.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "", "content": "{\n        deletePost(input: { id: \"P5\", type: \"Post\", expectedVersion: 1 }, condition: { rating: { eq: 5 } }) {\n          id\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MutationCondition.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "markSingleNotificationSeen($id: ID!)", "content": "{\n    markSingleNotificationSeen(id: $id)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/notification/markSingleNotificationSeen.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "($id: ID!)", "content": "{\n      getPostSecretFieldIAM(id: $id) {\n        id\n        title\n        secret\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthV2TransformerWithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "RemoveSleepVariable($name: String!, $sleepDate: String!)", "content": "{\n  removeSleepVariable(name: $name, sleepDate: $sleepDate) {\n    date\n    variables {\n      name\n      emoji\n      custom\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "", "content": "{\n        authenticatedUser ${OWN_USER_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "query", "name": "getUser($id: ID!)", "content": "{\n    user(id: $id) {\n      lastLogin\n      firstName\n      lastName\n      email\n      phoneNumber\n      admin\n      department {\n        name\n        devices {\n          id\n          temperature\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/SetRadialGauge.jsx", "repo": "Dr169_Air-condition"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @skip(if: true)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "", "content": "{\n        authorOfBook(isbn: $isbn) {\n          name\n          hobby\n        }\n        publisherOfBook(isbn: $isbn) {\n          name\n          yearOfFounding\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/entityStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    password\n    enable_email\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Configuration/Email/Email.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "createOrganization($input: OrganizationInput!)", "content": "{\n  organization_Create(input: $input) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "query", "name": "Uploads", "content": "{\n    uploadFiles {\n      data {\n        id\n        attributes {\n          url\n          name\n          ext\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Upload.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "($username: String!, $password: String!)", "content": "{\n    tokenAuth(username: $username, password: $password) {\n      token\n      user {\n        id\n        username\n        firstName\n        lastName\n        email\n        avatar\n        bio\n        location\n        website\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "query", "name": "", "content": "{\n        id\n        firstName @include(if: true)\n        lastName @upperCase\n        birthDate @dateFormat(format: \"DD-MM-YYYY\")\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/readFromStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "AddFavourite($id:String!)", "content": "{\n    addFavourite(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/RestaurantComponent/Card/Card.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @skip(if: true) @include(if: false)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "signup(\n    $fullname: String!\n    $username: String!\n    $email: String!\n    $password: String!\n    $bio: String\n  )", "content": "{\n    signup(\n      fullname: $fullname\n      username: $username\n      email: $email\n      password: $password\n      bio: $bio\n    ) {\n      token\n      user {\n        id\n        username\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/User.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "query", "name": "transactions", "content": "{\n    transactions(first: 500, orderBy: timestamp, orderDirection: desc) {\n      id\n      timestamp\n      mints {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        owner\n        sender\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n      burns {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        owner\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/protocol/transactions.ts", "repo": "croco-finance_frontend-v3"}}, {"type": "mutation", "name": "uploadRcbookImage($id: Int, $vehicleRC: String)", "content": "{\n                uploadRcbookImage(id:$id, vehicleRC:$vehicleRC) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/uploadRcbookImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "query", "name": "selectProperty ($where: PropertyWhereInput, $orderBy: String, $first: Int, $skip: Int)", "content": "{\n        objs: allProperties(where: $where, orderBy: $orderBy, first: $first, skip: $skip) {\n            id\n            address\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/scope/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}}, {"type": "query", "name": "Foods($page:Int)", "content": "{\n    foods(page:$page){\n      _id\n      title\n      description\n      stock\n      tag\n      img_url\n      variations{\n        _id\n        title\n        price\n        discounted\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      category{\n          _id\n          title\n      }\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "mut($in: Object!)", "content": "{\n            mut(inline: { a: 1 }, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateTopic(\n    $title: String\n    $content: String\n    $forumCategory: String\n  )", "content": "{\n    createTopic(input:{\n      title: $title,\n      content: $content\n      forumCategory: $forumCategory\n    }){\n      ${topicResponse}\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n      getAllLocation {\n          LocationData {\n              id\n              locationName\n              isActive\n          }\n      }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/routes/site-admin/pricing/addPricing/AddPricing.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "query", "name": "getAllOrganizationEmployeesWithMeta($where: OrganizationEmployeeWhereInput)", "content": "{\n        meta: _allOrganizationEmployeesMeta { count }\n        objs: allOrganizationEmployees(where: $where) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}}, {"type": "query", "name": "", "content": "{\n        onCall {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/cache.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "", "content": "{\n        # comment\n        foo\n        bar\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/queryKeyMaker.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setLastSeen($id: ID!)", "content": "{\n    setLastSeen(id: $id) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/directMessageThread/setDMThreadLastSeen.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "ServiceInstances($namespace: String!, $status: InstanceStatusType)", "content": "{\n    serviceInstances(namespace: $namespace, status: $status) {\n      name\n      bindable\n      servicePlan {\n        bindingCreateParameterSchema\n      }\n      serviceBindings {\n        items {\n          name\n          parameters\n          secret {\n            name\n            data\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "AddCar(\n    $carAdminPhone: String\n    $companyName: String\n    $hwId: String\n    $name: String\n    $routeId: Int\n    $underTest: Boolean!\n  )", "content": "{\n    CarMutation {\n      addCar(\n        car: {\n          carAdminPhone: $carAdminPhone\n          companyName: $companyName\n          hwId: $hwId\n          name: $name\n          routeId: $routeId\n          underTest: $underTest\n        }\n      ) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "query", "name": "Killmails($entity: Entity!, $id: Int!, $page: Int = 1)", "content": "{\n        killmails: killmailsByEntityID(entity: $entity, id: $id, page: $page) {\n            id\n            hash\n            killmailTime\n            totalValue\n            system {\n                id\n                name\n                security\n                constellation {\n                    id\n                    name\n                    region {\n                        id\n                        name\n                    }\n                }\n            }\n            attackers {\n                character {\n                    id\n                    name\n                }\n                alliance {\n                    id\n                    name\n                }\n                corporation {\n                    id\n                    name\n                }\n                ship {\n                    id\n                    name\n                }\n                weapon {\n                    id\n                    name\n                }\n                finalBlow\n            }\n            victim {\n                character {\n                    id\n                    name\n                }\n                alliance {\n                    id\n                    name\n                }\n                corporation {\n                    id\n                    name\n                }\n                ship {\n                    id\n                    name\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "009b5eae048747488ab78334a7cb9f92e1ad888f", "file": "src/util/queries/killmails.js", "repo": "eveisesi_neo-ui"}}, {"type": "query", "name": "", "content": "{ allFilms { films { title } } }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "FinalizeOffer($offerID: String!, $from: String)", "content": "{\n    finalizeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "GetScheduledQuery($scheduledQueryUri: String!)", "content": "{\n      getScheduledQuery(scheduledQueryUri: $scheduledQueryUri) {\n        scheduledQueryUri\n        name\n        label\n        cronexpr\n        description\n        owner\n        created\n        description\n        queries {\n          count\n          page\n          pages\n          nodes {\n            savedQueryUri\n            sqlBody\n            description\n            label\n            name\n            queryOrder\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/getScheduledQuery.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "getOnchainReferenda($startBlock: Int!)", "content": "{\n  referendums(where: {referendumStatus_some: {AND: [{status: \"Started\"}, {blockNumber: {number_gte: $startBlock}}]}}) {\n    ...onchainReferendum\n  }\n}\n    ${OnchainReferendumFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/chain-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "CreateMember($input: CreateMemberInput!)", "content": "{\n      createMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "getAuthors($search: String!)", "content": "{\n    users(search: $search, hasPublicProfile: true) {\n      id\n      slug\n      name\n      email\n      portrait\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "packages/styleguide/src/components/Editor/Forms/AuthorSearch.js", "repo": "republik_plattform"}}, {"type": "query", "name": "", "content": "{\n          a {\n            b\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/diffAgainstStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "GET_TREES($filters: TreesFiltersInput)", "content": "{\n        trees(filters: $filters) {\n            list {\n                id\n                label\n                libraries {\n                    library {\n                        id\n                        label\n                        behavior\n                    }\n                }\n                behavior\n                permissions {\n                    access_tree\n                    edit_children\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/trees/getTreeListQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "($username: String!)", "content": "{\n    insert_user_one(object: { username: $username }) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "streaming-subscriptions-chat/src/components/LandingPage.js", "repo": "hasura_sample-apps"}}, {"type": "query", "name": "", "content": "{\n          types(from: \"A\", to: \"F\") {\n            ... on TypeA { a }\n            ... on TypeB { b(x: 1, y: 2, z: 3) }\n            ... on TypeC { c(see: \"si\") }\n            ... on TypeD { d }\n            ... on TypeE { e(eee: \"ee\") }\n            ... on TypeF { f(g: \"h\") }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SaveNotificationTokenWeb($token:String!)", "content": "{\n  saveNotificationTokenWeb(token:$token){\n    success\n    message\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/context/User.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "selectOrganizationEmployee ($value: String, $organizationId: ID)", "content": "{\n        objs: allOrganizationEmployees(where: {name_contains_i: $value, organization: { id: $organizationId } }) {\n            id\n            name\n            email\n            user {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "$", "content": "{this.queryName()}${this.declareArgumentVariables()} {\n          ${this.queryName()}${this.argumentVariables()} {\n            ${this.scalarFields().map((field) => field.name).join(', ')}\n          }\n        }", "metadata": {"commit_hash": "5c2bcc5ed8229b1da33546fa5871153145a110e6", "file": "src/app/graphql_builder.ts", "repo": "launchscout_graphql-admin"}}, {"type": "query", "name": "", "content": "{\n    me {\n      id\n      name\n      email\n    }\n  }", "metadata": {"commit_hash": "0898364e6e0b73a78d0deb77ffed3cdafc782d09", "file": "template/tests/utils/operations.js", "repo": "tylim88_Create-Prisma-App"}}, {"type": "mutation", "name": "deleteOrganization($name: String!)", "content": "{\n    deleteOrganization(name: $name) {\n      organization {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "PaymentConfigsEdit($_id: String!, $paymentIds: [String])", "content": "{\n    paymentConfigsEdit(_id: $_id, paymentIds: $paymentIds) {\n      ${paymentConfigFields}\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}}, {"type": "query", "name": "supertoken($tokenAddress: String!)", "content": "{\n    superTokenOf: superTokenCreateds(\n      where: { underlyingAddress: $tokenAddress }\n      orderBy: id\n      orderDirection: asc\n    ) {\n      id\n      address\n      underlyingAddress\n      name\n      symbol\n    }\n    superToken: superTokenCreateds(\n      where: { address: $tokenAddress }\n      orderBy: id\n      orderDirection: asc\n    ) {\n      id\n      address\n      underlyingAddress\n      name\n      symbol\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "mutation", "name": "UserLogout", "content": "{\n      user{\n        logout\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "query", "name": "($uuid: String!)", "content": "{\n    rfp(uuid: $uuid) {\n      ...RFP_ATTRIBUTES\n    }\n    getProposalsByRFPId(rfpId: $uuid) {\n      ...PROPOSAL_ATTRIBUTES\n    }\n    msasByRFPId(rfpId: $uuid) {\n      ...MSA_ATTRIBUTES\n    }\n  }\n  ${RFP_ATTRIBUTES}\n  ${PROPOSAL_ATTRIBUTES}\n  ${MSA_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/rfp.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "UpdateBookmarkMutation($input: UpdateBookmarkInput!)", "content": "{\n    updateBookmark(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateBookmarkMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "createProjectLabel($projectID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  createProjectLabel(\n    input: {projectID: $projectID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "($a: Int!)", "content": "{ sum(a: $a, b: $b) }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "subscription", "name": "OnCreateOwnerInvalidClaim", "content": "{\n        onCreateOwnerInvalidClaim(owner: \"${USERNAME2}\") {\n          id\n          description\n          owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "onLoggedIn", "content": "{\n    loggedIn {\n      wallet\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/LoggedInSubscription.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "Reset", "content": "{\n        reset {\n          echo\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdateTeam($id: ID, $input: TeamInput!)", "content": "{\n    updateTeam(id: $id, input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/updateTeam.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(input: { id: \"5\" }) {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "UpdateEventAnalysis(\n\t\t$analysisType: AnalysisType!\n\t\t$channelId: String!\n\t\t$compareToPrevious: Boolean!\n\t\t$eventAnalysisBreakdowns: [EventAnalysisBreakdownInput]\n\t\t$eventAnalysisFilters: [EventAnalysisFilterInput]\n\t\t$eventAnalysisId: String!\n\t\t$eventDefinitionId: String!\n\t\t$name: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$userId: String!\n\t\t$userName: String!\n\t)", "content": "{\n\t\tupdateEventAnalysis(\n\t\t\tanalysisType: $analysisType\n\t\t\tchannelId: $channelId\n\t\t\tcompareToPrevious: $compareToPrevious\n\t\t\teventAnalysisBreakdowns: $eventAnalysisBreakdowns\n\t\t\teventAnalysisFilters: $eventAnalysisFilters\n\t\t\teventAnalysisId: $eventAnalysisId\n\t\t\teventDefinitionId: $eventDefinitionId\n\t\t\tname: $name\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\tuserId: $userId\n\t\t\tuserName: $userName\n\t\t) {\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventAnalysisQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "getAddresses($name: String, $keys: [String])", "content": "{\n    getAddresses(name: $name, keys: $keys)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fieldFragment1\n      }\n\n      fragment fieldFragment1 on Field {\n        bar {\n          baz {\n            ...nestedFragment\n          }\n        }\n      }\n\n      fragment nestedFragment on Field {\n        foo @live\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "findAllPersons", "content": "{\n    findAllPersons {\n      ...PersonFields\n    }\n  }\n\n  ${PersonFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/queries/findAllPersons.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "REMOVE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $deleteChildren: Boolean)", "content": "{\n        treeDeleteElement(treeId: $treeId, nodeId: $nodeId, deleteChildren: $deleteChildren)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/trees/removeTreeElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "($limit: Int, $offset: Int, $order: String, $username: String, $userId: String, $chatbotId: String)", "content": "{\n  counters {\n    rows: users {\n     count(username: $username, userId: $userId, chatbotId: $chatbotId)\n    }\n  }\n  rows: users(limit: $limit, offset: $offset, order: $order, username: $username, userId: $userId, chatbotId: $chatbotId) {\n    id,\n    username,\n    userId,\n    first_name,\n    last_name,\n    username,\n    language,\n    payload,\n    createdAt,\n    email,\n    chatIds {\n      id,\n      transport,\n      chatId\n    }\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/users/pages/users.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "query", "name": "runtimeFriendStatus($did: String!)", "content": "{\n                runtimeFriendStatus(did: $did) { ${PERSPECTIVE_EXPRESSION_FIELDS} }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "query", "name": "getFriendList($userId: ID!)", "content": "{\n\t\tgetFriendList( userId: $userId){\n\t\t\tid\n\t\t\tusername\n\t\t\temail\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/queries.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "query", "name": "Product_NoCache_Query", "content": "{\n    me {\n      id\n      customer {\n        id\n        status\n        user {\n          id\n        }\n      }\n      bag {\n        id\n      }\n      savedItems {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Queries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "getNotifications", "content": "{\n    notifications {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...notificationInfo\n        }\n      }\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/notification/getNotifications.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "($ida: String)", "content": "{\n    oneUser(ida: $ida) {\n      id\n      ida\n      type\n      artist {\n        id\n        members_number\n        about\n        country\n        state\n        city\n        musical_styles {\n          name\n          id\n        }\n        phone\n        email\n        songs {\n          title\n          url\n        }\n        spotify_id\n        id\n        name\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        facebook\n        twitter\n        instagram\n        youtube\n      }\n      productor {\n        id\n        name\n        photo\n        musical_styles {\n          id\n          name\n        }\n        location {\n          id\n          state\n          city\n          district\n          country\n          zipcode\n          address\n        }\n        description\n        status\n        cpf\n        cnpj\n        main_phone\n        secondary_phone\n        whatsapp\n        telegram\n        contact_email\n        facebook\n        twitter\n        instagram\n        youtube\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/components/modals/login/queries.js", "repo": "midianinja_som-web"}}, {"type": "query", "name": "getRoles", "content": "{\n        getRoles {\n            _id\n            name\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetRoles.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "", "content": "{\n        subscriptions {\n          __typename\n          subscriber {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createInvoice($", "content": "{createInvoiceParamDefs}) {\n  createInvoice(${createInvoiceParams})\n}", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "SubscribeMutation($email: String!)", "content": "{\n    subscribe(email: $email) {\n      email\n    }\n  }", "metadata": {"commit_hash": "868e58e4a19847fd9104e13922229edb96e4dda7", "file": "packages/components/newsletter-subscription-box/newsletter-subscription-box.js", "repo": "dferber90_lovely-webapp"}}, {"type": "query", "name": "GetPost($id: ID!)", "content": "{\n    article(id: $id){\n        id,\n        title,\n        description,\n        author{\n          name\n        },\n        categories{\n          name\n        },\n        image{\n            url\n        },\n        created_at,\n        slug,\n        content\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/pages/PostDetail.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "query", "name": "getMinimumCommitmentAge", "content": "{\n    getMinimumCommitmentAge\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "WithdrawOffer($offerID: String!, $from: String)", "content": "{\n    withdrawOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "", "content": "{\n          agenda {\n            taskCount\n            tasks {\n              description\n              ownTime\n              totalTime\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "", "content": "{\n        recordUsage: RecordUsage\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/user/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "saveBrandedLoginSettings($input: SaveBrandedLoginSettingsInput!)", "content": "{\n    saveBrandedLoginSettings(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/saveBrandedLoginSettings.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "($userId: Int)", "content": "{\n    update_user (\n      _set: {\n        last_typed: \"now()\"\n      }\n      where: {\n        id: {\n          _eq: $userId\n        }\n      }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Textbox.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "updateUserEmail($email: LowercaseString!)", "content": "{\n    updateUserEmail(email: $email) {\n      ...userInfo\n      email\n      pendingEmail\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/updateUserEmail.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "GetDashboardSales($startingDate: String, $endingDate: String,$restaurant:String!)", "content": "{\n    getDashboardSales(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      orders{\n        day\n        amount\n      }\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "getAtHomeBagSection", "content": "{\n    me {\n      id\n      returnPendingSection: bagSection(status: ReturnPending) {\n        id\n        status\n        bagItems {\n          id\n          reservationPhysicalProduct {\n            id\n            physicalProduct {\n              id\n              productVariant {\n                id\n                displayLong\n                product {\n                  id\n                  slug\n                  name\n                  brand {\n                    id\n                    name\n                  }\n                  images {\n                    id\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/ReturnYourBagConfirmation.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "createCategory($category: AddCategoryInput!)", "content": "{\n    createCategory(category: $category) {\n      id\n      name\n      type\n      icon\n      # creation_date\n      slug\n      # number_of_product\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CategoryForm/CategoryForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "deleteNetwork($vpcUri: String!)", "content": "{\n      deleteNetwork(vpcUri: $vpcUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Vpc/deleteNetwork.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "moloches($summoner: String!, $createdAt: String!)", "content": "{\n    moloches(where: { summoner: $summoner, createdAt_gt: $createdAt }) {\n      id\n      summoner\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "mutation", "name": "clearProfilePicture", "content": "{\n  clearProfilePicture\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "ProductVariantCreateDraftOrder($input: CreateDraftedOrderInput!)", "content": "{\n    createDraftedOrder(input: $input) {\n      id\n      ...OrderFragment_Order\n    }\n  }\n  ${OrderFragment_Order}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "updateTeamMemberRole($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateTeamMemberRole(\n    input: {teamID: $teamID, userID: $userID, roleCode: $roleCode}\n  ) {\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n    teamID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "getBackupSite ($repoID: String)", "content": "{\n\t\t\t\tbackupSites(uuid: $repoID) {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tuuid\n\t\t\t\t\tpassword\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}}, {"type": "mutation", "name": "closePullRequestAndDeleteBranch($closePullRequestInput: ClosePullRequestInput!)", "content": "{\n    ${closePullRequestMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "attemptUserLogin($organization_name: String!, $email: String!, $password: String!)", "content": "{\n     login(organization_name: $organization_name, email: $email, password: $password) {\n      token\n      user {\n        id\n        first_name\n        last_name\n        email\n        phone_number\n        role\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "query", "name": "GetFirstPublishedProduct", "content": "{\n    products(first: 1, query: \"published_status:published\") {\n      edges {\n        node {\n          id\n          title\n          handle\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "server/handlers/queries/get-first-published-product.js", "repo": "Shopify_product-reviews-sample-app"}}, {"type": "query", "name": "GetFavorites", "content": "{\n        favorites @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Utils/state.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "mutation", "name": "repoArchive($repoId: ID!)", "content": "{\n    archive(repoIds: [$repoId]) {\n      nodes {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Repo/Archive.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getDirectMessageThreadByUserIds($userIds: [ID!])", "content": "{\n    directMessageThreadByUserIds(userIds: $userIds) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getDirectMessageThreadByUserIds.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "leaveFarm($farmId: ID!)", "content": "{\n\t\tleaveFarm(farmId: $farmId)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "toggleCommunityRedirect($communityId: ID!)", "content": "{\n    toggleCommunityRedirect(communityId: $communityId) {\n      id\n      slug\n      redirect\n    }\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/community/toggleCommunityRedirect.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "editTipping($tippingInput:TippingInput!)", "content": "{\n  editTipping(tippingInput:$tippingInput){\n            _id\n            tipVariations\n            enabled\n              }\n            }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Tipping/Tipping.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "Coupons", "content": "{\n    coupons {\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "Namespaces(\n    $showSystemNamespaces: Boolean\n    $withInactiveStatus: Boolean\n  )", "content": "{\n    namespaces(\n      withSystemNamespaces: $showSystemNamespaces\n      withInactiveStatus: $withInactiveStatus\n    ) {\n      name\n      labels\n      status\n      podsCount\n      healthyPodsCount\n      applicationsCount\n      isSystemNamespace\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "health($name: Bytes)", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: $name, subgraphError: allow) {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/application/index.ts", "repo": "21orangehat_upool-listagem"}}, {"type": "query", "name": "userById($id: ID!)", "content": "{\n          userById(id: $id) {\n            userNme\n            userEmail\n          }\n        }", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/client-batching-query/__tests__/index.integration.spec.ts", "repo": "mrdulin_apollo-graphql-tutorial"}}, {"type": "mutation", "name": "copyCampaign($campaignId: String!)", "content": "{\n      copyCampaign(id: $campaignId){\n       id\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignStats.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "b5d33f85de5af7fcb67099022088749c12dc20b9", "file": "admin-ui/src/auth-provider/ra-auth-jwt.ts", "repo": "amplication_blog-server"}}, {"type": "query", "name": "", "content": "{\n        posts {\n          foo\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "UnAssignedOrders", "content": "{\n    unassignedOrders{\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          title\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "tokens($skip: Int)", "content": "{\n    tokens(first: 100, skip: $skip) {\n      tokenAddress\n      symbol\n    }\n  }", "metadata": {"commit_hash": "51995b7c5a268264235aee2f64af86f691ad7a6b", "file": "src/util/queries.js", "repo": "HausDAO_daohaus-web"}}, {"type": "mutation", "name": "signinAsUser ($data: SigninAsUserInput!)", "content": "{\n        result: signinAsUser(data: $data) { user { id } token }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "CreateBookmarkMutation($input: CreateBookmarkInput!)", "content": "{\n    createBookmark(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateBookmarkMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "AddInstrument($exchangeId: String!, $instrumentType: String!, $name: String!, $positionLimit: Int!, $tickSize: Int!, $bondFixedPrice: Int!, $bondVolatility: Int!)", "content": "{\n  addInstrument(\n    exchangeId: $exchangeId\n    instrument: {instrumentType: $instrumentType, name: $name, positionLimit: $positionLimit, tickSizeMin: $tickSize, bondFixedPrice: $bondFixedPrice, bondVolatility: $bondVolatility}\n  ) {\n    id\n    name\n    tickSizeMin\n    positionLimit\n    bondFixedPrice\n    bondVolatility\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "query", "name": "", "content": "{\n        author {\n          firstName\n          lastName\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n      fetchAllUsers{\n        name\n        id\n        email\n      }\n    }", "metadata": {"commit_hash": "ce63327cdc13d8d5323b232a3f9891fb949a0f52", "file": "src/Views/ProfileView.js", "repo": "Swolify_swolify-fe"}}, {"type": "mutation", "name": "resetSubscriptionEvent(\n    $event_id: String!\n    $artist_id: String!\n  )", "content": "{\n    resetSubscriptionEvent(\n      event_id: $event_id\n      artist_id: $artist_id\n    )\n    {\n      ${eventType}\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event-curatorship/eventCuratorship.mutations.js", "repo": "midianinja_som-web"}}, {"type": "query", "name": "getServiceClassPlans($name: String!, $namespace: String!)", "content": "{\n    clusterServiceClass(name: $name) {\n      ${serviceClassGQL}\n      plans {\n        ${plansGQL}\n        relatedClusterServiceClassName\n      }\n    }\n    serviceClass(name: $name, namespace: $namespace) {\n      ${serviceClassGQL}\n      namespace\n      plans {\n        ${plansGQL}\n        namespace\n        relatedServiceClassName\n        assetGroup{\n            assets{\n              type\n            }\n          }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceClassPlansList/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "listRedshiftClusterCopyEnabledTables(\n      $clusterUri: String!\n      $filter: DatasetTableFilter\n    )", "content": "{\n      listRedshiftClusterCopyEnabledTables(\n        clusterUri: $clusterUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        count\n        nodes {\n          datasetUri\n          tableUri\n          name\n          label\n          GlueDatabaseName\n          GlueTableName\n          S3Prefix\n          AwsAccountId\n          RedshiftSchema(clusterUri: $clusterUri)\n          RedshiftCopyDataLocation(clusterUri: $clusterUri)\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/listClusterDatasetTables.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "resetSubscriptionEvent(\n    $event_id: String!\n    $artist_id: String!\n  )", "content": "{\n    resetSubscriptionEvent(\n      event_id: $event_id\n      artist_id: $artist_id\n    )\n    {\n      ${eventType}\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event-curatorship/eventCuratorship.mutations.js", "repo": "midianinja_som-web"}}, {"type": "query", "name": "businessesPaginateQuery(\n    $first: Int\n    $offset: Int\n    $orderBy: [_BusinessOrdering]\n    $filter: _BusinessFilter\n  )", "content": "{\n    Business(first: $first, offset: $offset, orderBy: $orderBy, filter: $filter) {\n      id\n      name\n      address\n      city\n      state\n      avgStars\n    }\n  }", "metadata": {"commit_hash": "02d98e091b43a073bbadd7ae87c456d8f4f737ea", "file": "web-angular/src/app/businesses/businesses.component.ts", "repo": "grand-stack_grand-stack-starter"}}, {"type": "mutation", "name": "UpdateOrder(\n    $car: Int!\n    $from: Int\n    $id: Int!\n    $status: String!\n    $priority: String!\n    $to: Int!\n    $arrive: DateTime\n  )", "content": "{\n    OrderMutation {\n      updateOrder(\n        order: {\n          carId: $car\n          fromStationId: $from\n          id: $id\n          status: $status\n          priority: $priority\n          toStationId: $to\n          arrive: $arrive\n        }\n      ) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "editUser($userId: ID!, $input: EditUserInput!)", "content": "{\n        editUser(userId: $userId, input: $input) {\n            _id\n            name\n            last_name\n            email\n            occupation\n            birthday\n            avatar\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditUser.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "", "content": "{\n        author {\n          firstName\n          lastName\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "LoginSendLoginLink($input: SendAppUserLoginLinkMutationInput!)", "content": "{\n    sendAppUserLoginLink(input: $input)\n  }", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/login.js", "repo": "endeavorb2b_websites"}}, {"type": "query", "name": "GetProductById($getProductByIdId: ID!)", "content": "{\n  getProductById(id: $getProductByIdId) {\n    id\n    name\n    description\n    image\n    price\n    uuid\n    storeId {\n      id\n      name\n      address\n      productIds {\n        id\n        name\n        description\n        image\n        price\n      }\n      options {\n        primaryColor\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "query", "name": "leaderboarders", "content": "{\n        leaderboard {\n            username\n            score\n        }\n    }", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/queries.js", "repo": "Morgoth27_pewpew_spaceman"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.urql.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "", "content": "{\n        author {\n          name {\n            firstName\n            lastName\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: 1) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/queries/loading.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "", "content": "{\n          person {\n            __typename\n            ... on Author {\n              firstName\n              lastName\n            }\n            ... on Jedi {\n              powers\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/diffAgainstStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/hooks/useRegistration.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "car", "content": "{\n          car {\n            id\n            make\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "facebookLogin($token: String)", "content": "{\n    facebookLogin(token: $token) {\n       _id\n      username\n      name\n      email\n      role\n      token\n      vehical {\n        vehicalTypeId\n        brand\n        color\n        model\n        plateNumber\n        valuePerKm\n      }\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/queries.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "MOVE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $parentTo: ID, $order: Int)", "content": "{\n        treeMoveElement(treeId: $treeId, nodeId: $nodeId, parentTo: $parentTo, order: $order) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/treeMoveElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "($userId: String!)", "content": "{\n  user(userId: $userId) {\n    id,\n    username,\n    first_name,\n    last_name,\n    userId\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/table-filters/components/user-autocomplete.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "query", "name": "($literal: Boolean, $value: Int = -1)", "content": "{\n              a: field(literal: $literal, value: $value)\n            }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/ApolloClient.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "people($first: Int)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Mutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getProducts(\n    $type: String\n    $sortByPrice: String\n    $searchText: String\n    $offset: Int\n  )", "content": "{\n    products(\n      type: $type\n      sortByPrice: $sortByPrice\n      searchText: $searchText\n      offset: $offset\n    ) {\n      items {\n        id\n        name\n        description\n        image\n        type\n        price\n        unit\n        salePrice\n        discountInPercent\n      }\n      totalCount\n      hasMore\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/Products/Products.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "query", "name": "TreeDiff($repoId: ID!, $commitId: ID!, $parentCommitId: ID!)", "content": "{\n    repo(id: $repoId) {\n      id\n\n      commit: commit(id: $commitId) {\n        id\n        markdown\n      }\n\n      parentCommit: commit(id: $parentCommitId) {\n        id\n        markdown\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Tree/Diff.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "removeNote($id: ID!)", "content": "{\n  note_Delete(id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "query", "name": "remoteAppGetUsersCustom($where: users_bool_exp!, $limit: Int!, $offset: Int!)", "content": "{\n  users(\n    where: $where\n    limit: $limit\n    offset: $offset\n    order_by: {createdAt: desc}\n  ) {\n    id\n    createdAt\n    displayName\n    phoneNumber\n    avatarUrl\n    email\n    disabled\n    defaultRole\n    roles(order_by: {role: asc}) {\n      role\n    }\n    isAnonymous\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "", "content": "{\n        createPost(input: { id: \"P5\", type: \"Post\", category: \"T1\", content: \"Content #5\", slug: \"content-5\", rating: 4 }) {\n          id\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MutationCondition.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "getAllCategory($currentPage: Int, $searchList: String)", "content": "{\n                getAllCategory(currentPage: $currentPage, searchList: $searchList){\n                 count\n                  categoryData{\n                      id\n                      categoryName\n                      categoryImage\n                      categoryMarkerImage\n                      basePrice\n                      minutePrice\n                      unitPrice\n                      riderFeeValue\n                      driverFeeValue\n                      isActive\n                      currency\n                      capacity\n                      createdAt\n                      updatedAt\n                  }\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/deleteCategory.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "UnhideEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\tunhideEventDefinitions(eventDefinitionIds: $eventDefinitionIds) {\n\t\t\tdescription\n\t\t\tdisplayName\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "($namespace: String, $chatbotId: String)", "content": "{\n  configurations(namespace: $namespace, chatbotId: $chatbotId) {\n    id\n    namespace\n    payload\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/hooks/configuration.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "DeleteVote ($pollId: Int!, $userId: Int!)", "content": "{\n        delete_poll_votes(\n            where: {\n                _and: [\n                    {poll_id: {_eq: $pollId}},\n                    {user_id: {_eq: $userId}}\n                ]\n            }\n        ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/Poll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "FormsMetrics(\n\t\t$assetId: String!\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)", "content": "{\n\t\tform(\n\t\t\tassetId: $assetId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tchannelId: $channelId\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tsubmissionsMetric {\n\t\t\t\t...browserFragment\n\t\t\t\t...deviceFragment\n\n\t\t\t\tpreviousValue\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n\n\t${BROWSER_FRAGMENT}\n\t${DEVICE_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/assets/form/hocs/DevicesCard.js", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "claimedInvitation", "content": "{\n  claimedInvitation {\n    createdAt\n    createdByProfileId\n    claimedAt\n    claimedByProfileId\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "uploadFile($file: File!)", "content": "{\n    uploadFile(file: $file) {\n      Key\n      filename\n      mimetype\n      encoding\n      filesize\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/File.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "query", "name": "primeQuery", "content": "{\n        luke: people_one(id: 1) {\n          name\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$email:String!)", "content": "{\n    resetPassword(password:$password,email:$email){\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/ResetPassword/ResetPassword.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "Register($email: String!, $password: String!, $firstName: String!, $lastName: String!)", "content": "{\n        register(input: { email: $email, password: $password, firstName: $firstName, lastName: $lastName })\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "usersConfigEmailSignatures($signatures: [EmailSignature])", "content": "{\n          usersConfigEmailSignatures(signatures: $signatures) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/ui-settings/src/email/containers/Signature.tsx", "repo": "erxes_erxes-community"}}, {"type": "query", "name": "myCallToActions", "content": "{\n    me {\n      id\n      callToActions {\n        id\n        beginAt\n        endAt\n        acknowledgedAt\n        payload {\n          ... on CallToActionBasicPayload {\n            text\n            linkHref\n            linkLabel\n          }\n\n          ... on CallToActionComponentPayload {\n            customComponent {\n              key\n              args\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/CallToActions/graphql/useCallToActionsQuery.ts", "repo": "republik_plattform"}}, {"type": "query", "name": "neighbourhoodOnlineAgents($perspectiveUUID: String!)", "content": "{\n                neighbourhoodOnlineAgents(perspectiveUUID: $perspectiveUUID) {\n                    did\n                    status {\n                        author\n                        timestamp\n                        data { \n                            links {\n                                author\n                                timestamp\n                                data { source, predicate, target }\n                                proof { valid, invalid, signature, key }\n                            }\n                        }\n                        proof { valid, invalid, signature, key }\n                    }\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @include(if: false)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "signUp($name: String, $lastname: String, $email: String!, $password: String!)", "content": "{\n  signUp(\n    input: {\n      name: $name\n      lastname: $lastname\n      email: $email\n      password: $password\n    }\n  ) {\n    name\n    lastname\n    email\n  }\n}", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/reto02/bookshop-frontend/src/page/Signup.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "query", "name": "_($exchangeAddress: String!)", "content": "{\n    exchangeHistoricalDatas(\n      first: 1\n      where: { exchangeAddress: $exchangeAddress }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      timestamp\n      ethBalance\n      tokenBalance\n    }\n  }", "metadata": {"commit_hash": "8bcfc4591ba8c5fb2d79e2399259bdee980e81bb", "file": "src/v1/apollo/queries.ts", "repo": "Uniswap_api-deprecated"}}, {"type": "query", "name": "GetRocket($id: ID!)", "content": "{\n    rocket(id: $id) {\n      mass {\n        kg\n        lb\n      }\n      name\n    }\n  }", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/stackoverflow/66872082/queries.ts", "repo": "mrdulin_apollo-graphql-tutorial"}}, {"type": "mutation", "name": "addPartner($input: AddPartnerInput!)", "content": "{\n    addPartner(input: $input) {\n      partner {\n        name\n        address\n        role\n        identity\n      }\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/partners.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "getDices", "content": "{\n        dices {\n            _id\n            did,\n            name,\n            userId,\n            actionIds,\n            coverImg,\n            createdAt\n        }\n    }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/queries.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "query", "name": "fetchHan($id: String)", "content": "{\n          people_one(id: $id) {\n            name\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UniswapAddLiquidity(\n    $from: String!\n    $exchange: String!\n    $value: String!\n    $tokens: String!\n    $liquidity: String!\n  )", "content": "{\n    uniswapAddLiquidity(\n      from: $from\n      exchange: $exchange\n      value: $value\n      tokens: $tokens\n      liquidity: $liquidity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "deleteEje($where: EjeWhereUniqueInput!)", "content": "{\n    deleteEje(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "MixedQuery", "content": "{\n          counter @client(always: true)\n          name\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "editMessage($channelUrl: String, $tenant: String)", "content": "{\n    editMessage(channelUrl: $channelUrl, tenant: $tenant) {\n      ...message\n    }\n  }\n  ${MessagesFragment}", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "deleteReaction($id: ID!)", "content": "{\n            deleteReaction(objectType: IDEA, id: $id)\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "clearProfilePicture", "content": "{\n  clearProfilePicture\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "setOwner($name: String, $address: String)", "content": "{\n    setOwner(name: $name, address: $address)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "User($id: String!)", "content": "{\n    user(id: $id) {\n      id\n      about\n      creationTime\n      email\n      karma\n    }\n    me {\n      id\n    }\n  }", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "pages/user.tsx", "repo": "Superdev0103_react-graph-demo"}}, {"type": "mutation", "name": "updateTaskComment($commentID: UUID!, $message: String!)", "content": "{\n    updateTaskComment(input: { commentID: $commentID, message: $message }) {\n      comment {\n        id\n        updatedAt\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskComment.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "($term: String!)", "content": "{\n        search(term: $term) {\n            id\n            name\n            type\n            image\n        }\n    }", "metadata": {"commit_hash": "009b5eae048747488ab78334a7cb9f92e1ad888f", "file": "src/util/queries/search.js", "repo": "eveisesi_neo-ui"}}, {"type": "mutation", "name": "updateSegmentRule($id: ID!, $segmentId: ID!, $input: UpdateSegmentRule!)", "content": "{\n        updateSegmentRule(id: $id, segmentId: $segmentId, input: $input) {\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "query", "name": "", "content": "{\n      cars {\n        make\n        model\n        vin\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/ssr/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "($id: String)", "content": "{\n      author(id: $id) {\n        name\n        id\n        __typename\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/benchmark/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateChapter(\n    $name: String!\n    $description: String\n    $image: ID\n    $processing: Boolean!\n    $quest: ID!\n  )", "content": "{\n    createChapter(\n      data: {\n        Name: $name\n        Description: $description\n        Image: $image\n        processing: $processing\n        quest: $quest\n      }\n    ) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "DEACTIVATE_RECORDS($libraryId: String!, $recordsIds: [String!], $filters: [RecordFilterInput!])", "content": "{\n        deactivateRecords(recordsIds: $recordsIds, filters: $filters, libraryId: $libraryId) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/records/deactivateRecordsMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "Three", "content": "{\n          three\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "membersList($contractAddr: String!, $skip: Int)", "content": "{\n    daoMembers: members(\n      where: { molochAddress: $contractAddr }\n      orderBy: shares\n      orderDirection: desc\n      first: 1000\n      skip: $skip\n    ) {\n      id\n      delegateKey\n      shares\n      loot\n      kicked\n      jailed\n      tokenTribute\n      didRagequit\n      memberAddress\n      exists\n      createdAt\n      isDao {\n        id\n      }\n      isSafeMinion {\n        id\n        minions {\n          minionAddress\n          molochAddress\n          safeMinionVersion\n        }\n      }\n      moloch {\n        id\n        totalShares\n        depositToken {\n          tokenAddress\n          symbol\n          decimals\n        }\n      }\n      highestIndexYesVote {\n        proposalId\n        proposalIndex\n      }\n      tokenBalances {\n        id\n        tokenBalance\n        token {\n          id\n          tokenAddress\n          symbol\n          decimals\n        }\n      }\n      submissions {\n        id\n        proposalIndex\n        yesVotes\n        noVotes\n        processed\n        didPass\n        cancelled\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/member-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "pairDayDatas($pairAddress: Bytes!, $date: Int!)", "content": "{\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      totalSupply\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}}, {"type": "query", "name": "CHECK_LIBRARY_EXISTENCE($id: [ID!])", "content": "{\n        libraries(filters: {id: $id}) {\n            totalCount\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "loadMoreNotifications($after: String)", "content": "{\n    notifications(after: $after) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...notificationInfo\n        }\n      }\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/notification/getNotifications.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "wishListManyLean(\n          $limit: Int\n          $skip: Int\n          $wishListManyLeanFilter: FilterFindManyWishListInput\n        )", "content": "{\n          wishListManyLean(\n            limit: $limit\n            skip: $skip\n            filter: $wishListManyLeanFilter\n          ) {\n            link\n            description\n            _id\n            categoryIds\n            categories {\n              _id\n              name\n            }\n            userByWishListId {\n              _id\n              firstName\n              lastName\n              image\n            }\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/search.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "query", "name": "car($vin: String)", "content": "{\n          car(vin: $vin) {\n            id\n            make\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "privateChannels", "content": "{\n    privateChannels {\n      id\n      url\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "follow($userId: ID!)", "content": "{\n      follow(userId: $userId)\n    }", "metadata": {"commit_hash": "cdc3e383299f4b6e33541d9a79562fcfa59301a7", "file": "aws/Burning-Monk/Testing-Serverless-Apps/ch01-04-e2e-troubleshoot/__tests__/steps/when.js", "repo": "muratkeremozcan_books"}}, {"type": "query", "name": "getVoting($slug: String!)", "content": "{\n    voting(slug: $slug) {\n      id\n      description\n      slug\n      beginDate\n      endDate\n      userSubmitDate\n      userHasSubmitted\n      userIsEligible\n      requireAddress\n      allowEmptyBallots\n      options {\n        id\n        label\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/Voting.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "($message: InputMessage!)", "content": "{\n  message: createMessage(message: $message) {\n    id,\n    chatId\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "lib/sender-factory/store-messages.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "query", "name": "getChannelBlockedUsers($id: ID)", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${userInfoFragment}\n  ${communityInfoFragment}\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/channel/getChannelBlockedUsers.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "", "content": "{\n          me {\n            todos(offset: $offset, limit: $limit) {\n              text\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Restaurant($id:String)", "content": "{\n      restaurant(id:$id)\n      {\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryBounds{\n        coordinates\n      }\n      username\n      password\n      deliveryTime\n      minimumOrder\n      tax\n      isAvailable\n      stripeDetailsSubmitted\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n      owner{\n        _id\n        email\n      }\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/VendorProfile.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "", "content": "{\n          person {\n            __typename\n            ... on Author {\n              firstName\n              lastName\n            }\n            ... on Jedi {\n              powers\n            }\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/diffAgainstStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($id:ID!)", "content": "{\n  request(id:$id){\n   content\n}\n}", "metadata": {"commit_hash": "de9e7fe6dc68a0689416de336fa7ada58d18ff60", "file": "src/components/requestHandler/requestHandler.jsx", "repo": "SIH-20_KisanSeva-SmartIndiaHackathon"}}, {"type": "query", "name": "Weather", "content": "{\n    weather {\n      icon\n      text\n    }\n    sport {\n      icon\n      text\n    }\n    music {\n      icon\n      text\n    }\n  }", "metadata": {"commit_hash": "e7a757ca1e82e3c718266d58c64fa587078177fe", "file": "client/src/components/Subscriber/Subscriber.tsx", "repo": "mihailgaberov_redis-pubsub-visualized"}}, {"type": "mutation", "name": "CreateZone($zone:ZoneInput!)", "content": "{\n  createZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "", "content": "{\n\t\tme {\n\t\t\tfriends {\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/queries.js", "repo": "Moses-Ian_letters"}}, {"type": "query", "name": "getAirflowClusterWebLoginToken($clusterUri: String!)", "content": "{\n      getAirflowClusterWebLoginToken(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/getAirflowUIAccess.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fieldFragment\n      }\n\n      fragment fieldFragment on Field {\n        foo @live\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "IS_ALLOWED(\n        $type: PermissionTypes!\n        $applyTo: ID\n        $actions: [PermissionsActions!]!\n        $target: PermissionTarget\n    )", "content": "{\n        isAllowed(type: $type, actions: $actions, applyTo: $applyTo, target: $target) {\n            name\n            allowed\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/permissions/isAllowedQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "subscription", "name": "subscribeToNewMessages($thread: ID!)", "content": "{\n    messageAdded(thread: $thread) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "refreshTokens($token: String!)", "content": "{\n          refreshTokens(token: $token) {\n            token\n            refreshToken\n            expiresAt\n          }\n        }", "metadata": {"commit_hash": "f03e1a5786db0afe7dcf0191ee25097b4385f90e", "file": "src/core/apiclients/graphql/GraphQLAPIClient.ts", "repo": "orangeloops_public-ol-web-template"}}, {"type": "query", "name": "findPersons($id: ID!, $name: String!)", "content": "{\n    findPersons(fields: {id: $id, name: $name}) {\n      ...PersonFields\n    }\n  }\n\n  ${PersonFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/queries/findPerson.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "query", "name": "($queue: String!, $limit: Int, $offset: Int)", "content": "{\n  counters {\n    rows: tasks {\n     count(queue: $queue)\n    }\n  }\n  rows: tasks(queue: $queue, limit: $limit, offset: $offset) {\n\t\tid,\n    taskId,\n    task,\n    createdAt,\n    priority\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/tasks-queues/views/queues.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "UpdateEmblem($emblem: String!)", "content": "{\n  updateEmblem(emblem: $emblem)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "", "content": "{\n        author {\n          name {\n            firstName\n            lastName\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "LoggedInUserQuery", "content": "{\n    loggedInUser {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/shared/components/Header.js", "repo": "vecnazmaga_place-management"}}, {"type": "subscription", "name": "OnCreateTodo", "content": "{\n        onCreateTodo(owner: \"${USERNAME2}\") {\n          id\n          name\n          description\n          level\n          owner\n          sharedOwners\n          status\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "pairs($skip: Int!)", "content": "{\n    pairs(\n      first: 10\n      skip: $skip\n      orderBy: trackedReserveETH\n      orderDirection: desc\n    ) {\n      id\n      trackedReserveETH\n      token0 {\n        id\n        symbol\n        name\n        decimals\n      }\n      token1 {\n        id\n        symbol\n        name\n        decimals\n      }\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "EthBalance", "content": "{\n    web3 {\n      primaryAccount {\n        id\n        balance {\n          eth\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Balance.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "pools($tokens: [Bytes]!, $id: String)", "content": "{\n    as0: pools(where: { token0_in: $tokens }, subgraphError: allow) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pools(where: { token1_in: $tokens }, subgraphError: allow) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pools(where: { id: $id }, subgraphError: allow) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/search/index.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "AllCosts($groupId: String!, $search: String, $skip: Int)", "content": "{\n    allCosts(groupId: $groupId, search: $search, skip: $skip) {\n      costs {\n        ...Cost\n        ...Payer\n      }\n      count\n    }\n  }\n  ${CostFragmentDoc}\n  ${PayerFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "query", "name": "A", "content": "{ a }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/refetchQueries.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "userPermissions($projectPath: ID!)", "content": "{\n                project(fullPath: $projectPath) {\n                    userPermissions {\n                        pushCode\n                        __typename\n                    }\n                }\n            }", "metadata": {"commit_hash": "796db6472e3ea47ae233043133de6e102d4e3eab", "file": "packages/oc-pages/project_overview/store/modules/project.js", "repo": "onecommons_unfurl-gui"}}, {"type": "mutation", "name": "AddFavourite($id:String!)", "content": "{\n    addFavourite(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/RestaurantComponent/Card/Card.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "subscription", "name": "onCommentAdded($repoFullName: String!)", "content": "{\n          commentAdded(repoFullName: $repoFullName) {\n            id\n            content\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/Query.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "($configUpdateInput: ConfigUpdateInput!)", "content": "{\n        configUpdate(configUpdateInput: $configUpdateInput)\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/update-config.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "query", "name": "", "content": "{\n        getBasketProductCount\n    }", "metadata": {"commit_hash": "d75976ca5a5746fe56fe814655bb3c33e88b042d", "file": "packages/storefront-lwc/src/modules/commerce/headerBasket/headerBasket.js", "repo": "SalesforceCommerceCloud_sfcc-sample-apps"}}, {"type": "mutation", "name": "createOAuth2Client(\n    $namespace: String!\n    $name: String!\n    $params: OAuth2ClientSpecInput!\n  )", "content": "{\n    createOAuth2Client(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "GET_CHAT($chatID: MongoID!  $page: Int)", "content": "{\n    getChat(chatID: $chatID page: $page) {\n      participants\n      messages {\n        content\n        author\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "2c4335dade177e2649f4f38c42838e56b0bbff7f", "file": "frontend/src/GraphQL/Queries.js", "repo": "riggedCoinflip_lol-friendfinder"}}, {"type": "mutation", "name": "toggleFlag($id: ID!, $input: UpdateFlag!)", "content": "{\n    updateFlag(id: $id, input: $input) {\n      id\n      enabled\n    }\n  }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagList/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "createAdminLiferayExperienceCloud(\n\t\t$AdminLiferayExperienceCloud: InputC_AdminLiferayExperienceCloud!\n\t)", "content": "{\n\t\tcreateAdminLiferayExperienceCloud(input: $AdminLiferayExperienceCloud)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_AdminLiferayExperienceCloud\"\n\t\t\t\tpath: \"/c/adminliferayexperienceclouds\"\n\t\t\t) {\n\t\t\temailAddress\n\t\t\tfullName\n\t\t\tgithubUsername\n\t\t\tliferayExperienceCloudEnvironmentId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/liferay-experience-cloud-environments/queries/useCreateAdminLiferayExperienceCloud.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "CreateMyRoom($input: RoomCreateInput!)", "content": "{\n      createMyRoom(input: $input) {\n        id\n        ownerId\n        title\n        description\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "ApplePayCheckout(\n    $planID: String!\n    $token: StripeToken!\n    $tokenType: String\n    $couponID: String\n    $shipping: JSON\n  )", "content": "{\n    applePayCheckout(planID: $planID, token: $token, tokenType: $tokenType, couponID: $couponID, shipping: $shipping)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ChoosePlanPane/ChoosePlanPane.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "cosmosSlashingParameters($network: String!)", "content": "{\n  cosmosSlashingParameters(network: $network) {\n    max_evidence_age\n    signed_blocks_window\n    min_signed_per_window\n    double_sign_unbond_duration\n    downtime_unbond_duration\n    slash_fraction_double_sign\n    slash_fraction_downtime\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "query", "name": "transactions($address: Bytes!)", "content": "{\n    mintsAs0: mints(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    mintsAs1: mints(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs0: swaps(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs1: swaps(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs0: burns(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs1: burns(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/tokens/transactions.ts", "repo": "21orangehat_upool-listagem"}}, {"type": "query", "name": "people", "content": "{\n        name\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @skip(if: false) @include(if: true)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n    getProducts {\n      id\n      name\n      category {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-manager/src/http/graphql/query.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "query", "name": "GetUser", "content": "{\n        user {\n          firstName @client\n          lastName\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteConfigurableItem($id: ID!)", "content": "{\n    deleteConfigurableItem(configurable_item_id: $id) {\n      toolsWithConfigurableItem {\n        id\n        type {\n          id\n        }\n        brand {\n          id\n        }\n        model_number\n        serial_number\n        status\n        tagged\n        owner {\n          ... on Location {\n            id\n          }\n          ... on User {\n            id\n          }\n        }\n        purchased_from {\n          id\n        }\n        date_purchased\n        photo\n        price\n        year\n      }\n      deletedConfigurableItem {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "query", "name": "getChannelById($id: ID)", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/channel/getChannel.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "IMPORT_EXCEL($file: Upload!, $sheets: [SheetInput], $startAt: Int)", "content": "{\n        importExcel(file: $file, sheets: $sheets, startAt: $startAt)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/import/importExcel.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "repoFileUploadBegin($repoId: ID!, $name: String!)", "content": "{\n    repoFileUploadBegin(repoId: $repoId, name: $name) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/Upload.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    confirmAppointment(_id: $_id) {\n      createdAt\n      esthetician\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      treatments {\n        name\n        price\n        duration\n      }\n      addOns {\n        name\n        price\n        duration\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/confirmAppointmentMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "AdjustItemQuantity($id: ID!, $quantity: Int!)", "content": "{\n    adjustItemQuantity(orderItemId: $id, quantity: $quantity) {\n      ...ActiveOrder\n    }\n  }\n  ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/components/ShoppingCart/ShoppingCart.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}}, {"type": "query", "name": "getUserCommunityConnection($id: ID)", "content": "{\n    user(id: $id) {\n      ...userInfo\n      ...userCommunityConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunityConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/user/getUserCommunityConnection.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "notifications", "content": "{\n    notifications {\n      id\n      type\n      createdAt\n      isRead\n      message {\n        id\n        body\n        createdAt\n        author {\n          id\n          username\n        }\n      }\n      receiver {\n        id\n        username\n      }\n      sender {\n        id\n        username\n        isOnline\n      }\n      channel {\n        url\n        id\n      }\n      community {\n        url\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Notification.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "saveList(\n          $link: String!\n          $categories: [String!]!\n          $userId: String!\n          $description: String!\n        )", "content": "{\n          wishListCreateOne(\n            link: $link\n            categoryIds: $categories\n            userId: $userId\n            description: $description\n          ) {\n            isPublished\n            message\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "query", "name": "getUserByUsername($username: LowercaseString)", "content": "{\n    user(username: $username) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/user/getUser.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "CreateCar(\n      $input: CreateCarInput!\n      $condition: ModelCarConditionInput\n    )", "content": "{\n    createCar(input: $input, condition: $condition) {\n      id\n    }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}}, {"type": "mutation", "name": "JoinGame($gameId: Int!)", "content": "{\n    joinGame(gameId: $gameId) {\n      gameId\n      login\n      name\n      organization\n      score\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/mutations.js", "repo": "ralberth_quizshow"}}, {"type": "query", "name": "ForumCpMySubscriptionOrders", "content": "{\n    forumCpMySubscriptionOrders {\n      _id\n      cpUserId\n      createdAt\n      state\n      price\n      multiplier\n      invoiceId\n      contentType\n      unit\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-forum-ui/src/containers/subscriptionProducts/PaymentTest/CpUserOrderList.tsx", "repo": "erxes_erxes-community"}}, {"type": "subscription", "name": "onMessageAdded", "content": "{\n    messageAdded {\n      conversationId\n      roomId\n      message {\n        index\n        address\n        content\n        status\n        hash\n        media {\n          url\n          contentType\n        }\n        timestamp\n      }\n      totalUnread\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/NewMessageSubscription.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "(\n    $_id: ID\n    $firstName: String\n    $lastName: String\n    $email: String\n    $phoneNumber: String\n  )", "content": "{\n    employee(\n      _id: $_id\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n    ) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      employeeRole\n      permanentPasswordSet\n      password\n      tokenCount\n      createdAt\n      profilePicture\n      notifications {\n        _id\n        new\n        type\n        date\n        time\n        allDay\n        associatedClientFirstName\n        associatedClientLastName\n        originalAssociatedStaffFirstName\n        originalAssociatedStaffLastName\n        newAssociatedStaffFirstName\n        newAssociatedStaffLastName\n        createdByFirstName\n        createdByLastName\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/queries/getEmployeeQuery.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "", "content": "{\n    logoutUser\n  }", "metadata": {"commit_hash": "2cc48e5c2fae89fbdd2f9dc37fe1de9c3fc49983", "file": "src/browser/graphql/index.js", "repo": "Undeadlol1_boilerplate"}}, {"type": "mutation", "name": "DeletePostReaction ($postId: Int!, $userId: Int!, $reaction: bpchar!)", "content": "{\n        delete_post_reactions(where: {_and: [{post_id: {_eq: $postId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getDirectMessageThreadByUserIds($userIds: [ID!])", "content": "{\n    directMessageThreadByUserIds(userIds: $userIds) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getDirectMessageThreadByUserIds.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "nameOfMutation", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "SitesMetricQuery(\n\t\t$channelId: String\n\t\t$interval: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t)", "content": "{\n\t\tsite(\n\t\t\tchannelId: $channelId\n\t\t\tinterval: $interval\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t) {\n\t\t\tvisitorsMetric {\n\t\t\t\t...HistogramFragment\n\t\t\t}\n\t\t\tanonymousVisitorsMetric {\n\t\t\t\t...HistogramFragment\n\t\t\t}\n\t\t\tknownVisitorsMetric {\n\t\t\t\t...HistogramFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${METRIC_HISTOGRAM_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/components/metric-card/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "RemoveTablePermission($tableUri: String!, $userName: String!)", "content": "{\n      removeTablePermission(tableUri: $tableUri, userName: $userName)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/removeTablePermission.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "", "content": "{\n      createPostConnection(input: { title: \"Hello, World!\" }) {\n        id\n        title\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/amplify-util-mock/src/__e2e__/multi-auth-model-auth-transformer.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "QueryProposal($id: ID!)", "content": "{\n    proposal(id: $id) {\n      id\n      name\n      note\n      status\n      primaryIntents {\n        id\n        provider {\n          id\n          name\n        }\n        receiver {\n          id\n          name\n        }\n        inputOf {\n          name\n          id\n        }\n        outputOf {\n          id\n          name\n        }\n        hasPointInTime\n        resourceInventoriedAs {\n          id\n          name\n          repo\n          metadata\n          images {\n            hash\n            name\n            mimeType\n            bin\n          }\n          primaryAccountable {\n            id\n            name\n          }\n          onhandQuantity {\n            hasNumericalValue\n            hasUnit {\n              id\n            }\n          }\n        }\n        resourceConformsTo {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "deleteTaskChecklist($taskChecklistID: UUID!)", "content": "{\n    deleteTaskChecklist(input: { taskChecklistID: $taskChecklistID }) {\n      ok\n      taskChecklist {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/deleteTaskChecklist.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "", "content": "{\n        person {\n          currentTask {\n            __typename\n            description\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "synthesizeText($text: String!, $voice: String!)", "content": "{\n    synthesizeText(text: $text, voice: $voice) {\n      url\n    }\n  }", "metadata": {"commit_hash": "3f352fc4b08df4ae6216907473182c93d3a6bb16", "file": "examples/with-next/apollo/queries.ts", "repo": "spokestack_node-spokestack"}}, {"type": "query", "name": "tokenHourDatas($startTime: Int!, $skip: Int!, $address: Bytes!)", "content": "{\n    tokenHourDatas(\n      first: 100\n      skip: $skip\n      where: { token: $address, periodStartUnix_gt: $startTime }\n      orderBy: periodStartUnix\n      orderDirection: asc\n    ) {\n      periodStartUnix\n      high\n      low\n      open\n      close\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/tokens/priceData.ts", "repo": "21orangehat_upool-listagem"}}, {"type": "query", "name": "LoggedInUser", "content": "{\n    loggedInUser {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-facebook-and-apollo/src/components/CreatePost.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "b5d33f85de5af7fcb67099022088749c12dc20b9", "file": "admin-ui/src/auth-provider/ra-auth-jwt.ts", "repo": "amplication_blog-server"}}, {"type": "query", "name": "", "content": "{\n          person {\n            name\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createSong($song: SongInput!)", "content": "{\n    createSong(song: $song) {\n      id\n      url\n      title\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/handle-artist/songs.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "updateDXPCloudProjectId(\n\t\t$dxpCloudEnvironmentId: Long!\n\t\t$DXPCloudEnvironment: InputC_DXPCloudEnvironment!\n\t)", "content": "{\n\t\tupdateDXPCloudEnvironment(\n\t\t\tdxpCloudEnvironmentId: $dxpCloudEnvironmentId\n\t\t\tinput: $DXPCloudEnvironment\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"PUT\"\n\t\t\t\ttype: \"C_DXPCloudEnvironment\"\n\t\t\t\tpath: \"/c/dxpcloudenvironments/{args.dxpCloudEnvironmentId}\"\n\t\t\t) {\n\t\t\tdxpCloudEnvironmentId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "mod($gameId: Int!)", "content": "{\n        joinGame(gameId: $gameId) {\n            gameId\n            login\n            name\n            organization\n            score\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "usurpUser($input: UsurpUserInputType!)", "content": "{\n    usurpUser(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/argos/src/review/routes/admin/Admin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createHistoryTable(\n        $sourceDbName: String!\n        $sourceTableName: String!\n    )", "content": "{\n        delete_view(id: $viewId) {\n            success\n            error\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/schema-settings.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "updateSession($sessionId: ID!, $session: SessionUpdateInput!)", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            type\n            category\n            status\n            title\n            shortDescription\n            longDescription\n            primaryCategory\n            secondaryCategory\n            targetAudience\n            supportingArtifacts {\n              name\n              url\n            }\n            prerequisites\n            agenda\n            takeaways\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Submit/AdditionalInfo.js", "repo": "ThatConference_that-website"}}, {"type": "query", "name": "remount($first: Int)", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/queries/loading.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "ChatRoomQuery($chatroomName: String!)", "content": "{\n    allChatrooms(name: $chatroomName) {\n      edges {\n        node {\n          ...ChatRoom\n        }\n      }\n    }\n  }\n  ${ChatRoom}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/ChatRoomQuery.js", "repo": "heyrict_cindy-realtime"}}, {"type": "query", "name": "runtimeKnownLinkLanguageTemplates", "content": "{\n                runtimeKnownLinkLanguageTemplates\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "query", "name": "allAbout", "content": "{\n    allAbouts {\n      edges {\n        node {\n          aboutMe\n          portrait\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d43fc12efb4e3b698bbd3519f51ff47302077561", "file": "lib/queries.ts", "repo": "simonsisay_portfolio-site"}}, {"type": "query", "name": "Keywords($value: String)", "content": "{\n    keywords(value: $value, minWeight: 0.5, limit: 20) {\n      value\n    }\n  }", "metadata": {"commit_hash": "e77ac0886aca703c8a7b56301c29e5a7d5654943", "file": "src/client/components/TagSearchForm.tsx", "repo": "ynifamily3_korean_unpopular_news"}}, {"type": "query", "name": "UserTransactions($id: ID!, $first: Int, $after: String)", "content": "{\n    marketplace {\n      user(id: $id) {\n        id\n        transactions(first: $first, after: $after) {\n          totalCount\n          nodes {\n            ...basicTransactionFields\n          }\n        }\n      }\n    }\n    web3 {\n      blockNumber\n    }\n  }\n  ${fragments.Transaction.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/UserTransactions.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "userSubmissions($in: LessonUserId)", "content": "{\n    userSubmissions(input: $in) {\n      status\n      mrUrl\n      diff\n      viewCount\n      comment\n      reviewer {\n        username\n        id\n      }\n      challenge {\n        title\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "query", "name": "getStack($environmentUri: String!, $stackUri: String!)", "content": "{\n      getStack(environmentUri: $environmentUri, stackUri: $stackUri) {\n        status\n        stackUri\n        targetUri\n        accountid\n        region\n        stackid\n        link\n        outputs\n        resources\n        error\n        events\n        name\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Stack/getStack.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "friendDelete($input: FriendDeleteInput!)", "content": "{\n          friendDelete(input: $input) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "WithVariables($id: ID!)", "content": "{\n        foo @client {\n          bar(id: $id)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "($_id: ID, $email: String)", "content": "{\n    own_past_appointments(_id: $_id, email: $email) {\n      id\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      treatments {\n        name\n        duration\n        price\n      }\n      addOns {\n        name\n        duration\n        price\n      }\n      client {\n        _id\n        squareCustomerId\n        unsavedSquareCardIDs\n        firstName\n        lastName\n        email\n        phoneNumber\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/queries/getOwnPastAppointmentsQuery.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "deleteManyProyectos($where: ProyectoWhereInput!)", "content": "{\n    deleteManyProyectos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/list/project-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "ForgotPassword($email:String!,$otp:String!)", "content": "{\n    forgotPassword(email:$email,otp:$otp){\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/VerifyForgotOtp/VerifyForgotOtp.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "Auth($wallet: String!)", "content": "{\n    isLoggedIn(wallet: $wallet)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/AuthStatus.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "pools($tokens: [Bytes]!, $id: String)", "content": "{\n    as0: pools(where: { token0_in: $tokens }, subgraphError: allow) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pools(where: { token1_in: $tokens }, subgraphError: allow) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pools(where: { id: $id }, subgraphError: allow) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/search/index.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "mutation", "name": "($id: Int!, $content: InputContent!)", "content": "{\n  editContent(id: $id, content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content-autocomplete/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "query", "name": "getAllStringsByMaxVersionAndLang($lang: String)", "content": "{\n  getAllStringsByMaxVersionAndLang(lang: $lang) {\n    lang\n    key\n    createdBy\n    version\n    value\n    needsUpdate\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "", "content": "{\n      appSubscriptionCreate(\n          name: \"Super Duper Plan\"\n          returnUrl: \"${url}\"\n          test: true\n          lineItems: [\n          {\n            plan: {\n              appUsagePricingDetails: {\n                  cappedAmount: { amount: 10, currencyCode: USD }\n                  terms: \"$1 for 1000 emails\"\n              }\n            }\n          }\n          {\n            plan: {\n              appRecurringPricingDetails: {\n                  price: { amount: 10, currencyCode: USD }\n              }\n            }\n          }\n          ]\n        ) {\n            userErrors {\n              field\n              message\n            }\n            confirmationUrl\n            appSubscription {\n              id\n            }\n        }\n    }", "metadata": {"commit_hash": "3414899e28d9e4abd998986a0605edc76cda35f3", "file": "server/handlers/mutations/get-subscription-url.js", "repo": "KaiSpencer_shopify-standalone-app-nextjs"}}, {"type": "query", "name": "Comment($repoName: String!, $start: Int!, $limit: Int!)", "content": "{\n      entry(repoFullName: $repoName) {\n        comments(start: $start, limit: $limit) {\n          text\n          __typename\n        }\n        __typename\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n        reptiles {\n          tagId\n          scientificName\n          ... on Snake {\n            venomous\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "GetGroup", "content": "{\n    group {\n      ...Group\n      users {\n        ...User\n      }\n      invites {\n        ...Invite\n      }\n    }\n  }\n  ${Group}\n  ${User}\n  ${Invite}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/group/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "query", "name": "", "content": "{\n  getPaymentStatuses\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Categorys", "content": "{\n    categoryGroups {\n      rows {\n        id\n        name\n        children {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/catalog/src/useData.ts", "repo": "atls_serenity"}}, {"type": "query", "name": "Providers(\n    $first: Int\n    $after: String\n    $last: Int\n    $before: String\n    $city: String\n  )", "content": "{\n    providers(\n      first: $first\n      after: $after\n      last: $last\n      before: $before\n      filters: { active: true, activeRequests: true, city: $city }\n      orderBy: { direction: DESC, sort: ID }\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          id\n          firstName\n          role\n          facility\n          neighborhood\n          city\n          state\n          responseCount\n          requests {\n            type\n            satisfied\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5e9ad0842300f9fd2c1d60fa00bf0311375e29bd", "file": "app/javascript/packs/pages/browse_requests/BrowseRequests.jsx", "repo": "feedadoc_feedadoc"}}, {"type": "mutation", "name": "SignMessage($address: ID!, $message: String!)", "content": "{\n    signMessage(address: $address, message: $message)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "($content: InputContent!)", "content": "{\n  createContent(content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/content/hooks/content.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "DeleteFood($id:String!)", "content": "{\n        deleteFood(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "registerProfileDetails(\n    $organisation: String\n    $occupation: String\n    $lastname: String\n    $firstname: String\n    $about: String\n  )", "content": "{\n    __typename\n    registerProfileDetails(\n      input: {\n        organisation_: $organisation\n        occupation_: $occupation\n        lastname_: $lastname\n        firstname_: $firstname\n        about_: $about\n      }\n    ) {\n      profile {\n        about\n        firstname\n        lastname\n        occupation\n        organisation\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "($input: SignInInput)", "content": "{\n        signIn(input: $input) {\n          userId\n          firstName\n          lastName\n          email\n          role\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/driver/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "query", "name": "Account__PaymentDetailQuery($accountId: ID!)", "content": "{\n        account(id: $accountId) {\n          id\n          currentPlan {\n            id\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "uploadRcbookImage($id: Int, $vehicleRC: String)", "content": "{\n                uploadRcbookImage(id:$id, vehicleRC:$vehicleRC) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/uploadRcbookImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "query", "name": "getUser", "content": "{\n        user: authenticatedUser { ${USER_FIELDS} }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "UpdateProfile(\n    $primaryUsername: StringWithDisplay\n    $alternativeName: StringWithDisplay\n    $description: StringWithDisplay\n    $firstName: StringWithDisplay\n    $funTitle: StringWithDisplay\n    $identities: IdentitiesWithDisplay\n    $lastName: StringWithDisplay\n    $location: StringWithDisplay\n    $phoneNumbers: KeyValuesWithDisplay\n    $picture: StringWithDisplay\n    $pronouns: StringWithDisplay\n    $timezone: StringWithDisplay\n    $languages: KeyValuesWithDisplay\n    $tags: KeyValuesWithDisplay\n    $uris: KeyValuesWithDisplay\n    $custom1PrimaryEmail: StringWithDisplay\n    $custom2PrimaryEmail: StringWithDisplay\n    $accessInformationMozilliansorgDisplay: Display\n    $accessInformationLdapDisplay: Display\n    $staffInformationTitleDisplay: Display\n    $staffInformationOfficeLocationDisplay: Display\n    $primaryEmailDisplay: Display\n  )", "content": "{\n    profile(\n      update: {\n        primaryUsername: $primaryUsername\n        alternativeName: $alternativeName\n        description: $description\n        firstName: $firstName\n        funTitle: $funTitle\n        identities: $identities\n        lastName: $lastName\n        location: $location\n        phoneNumbers: $phoneNumbers\n        picture: $picture\n        pronouns: $pronouns\n        timezone: $timezone\n        languages: $languages\n        tags: $tags\n        uris: $uris\n        custom1PrimaryEmail: $custom1PrimaryEmail\n        custom2PrimaryEmail: $custom2PrimaryEmail\n        accessInformationMozilliansorgDisplay: $accessInformationMozilliansorgDisplay\n        accessInformationLdapDisplay: $accessInformationLdapDisplay\n        staffInformationTitleDisplay: $staffInformationTitleDisplay\n        staffInformationOfficeLocationDisplay: $staffInformationOfficeLocationDisplay\n        primaryEmailDisplay: $primaryEmailDisplay\n      }\n    ) {\n      uuid {\n        value\n        metadata {\n          display\n        }\n      }\n      primaryUsername {\n        value\n        metadata {\n          display\n        }\n      }\n      alternativeName {\n        value\n        metadata {\n          display\n        }\n      }\n      description {\n        value\n        metadata {\n          display\n        }\n      }\n      firstName {\n        value\n        metadata {\n          display\n        }\n      }\n      funTitle {\n        value\n        metadata {\n          display\n        }\n      }\n      identities {\n        githubIdV3 {\n          value\n          metadata {\n            display\n          }\n        }\n        bugzillaMozillaOrgId {\n          value\n          metadata {\n            display\n          }\n        }\n        bugzillaMozillaOrgPrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n        custom1PrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n        custom2PrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n      }\n      lastName {\n        value\n        metadata {\n          display\n        }\n      }\n      location {\n        value\n        metadata {\n          display\n        }\n      }\n      phoneNumbers {\n        values\n        metadata {\n          display\n        }\n      }\n      picture {\n        value\n        metadata {\n          display\n        }\n      }\n      primaryEmail {\n        value\n        metadata {\n          display\n        }\n      }\n      pronouns {\n        value\n        metadata {\n          display\n        }\n      }\n      timezone {\n        value\n        metadata {\n          display\n        }\n      }\n      uris {\n        values\n        metadata {\n          display\n        }\n      }\n      languages {\n        values\n        metadata {\n          display\n        }\n      }\n      tags {\n        values\n        metadata {\n          display\n        }\n      }\n      accessInformation {\n        mozilliansorg {\n          values\n          metadata {\n            display\n          }\n        }\n        ldap {\n          values\n          metadata {\n            display\n          }\n        }\n      }\n      staffInformation {\n        staff {\n          value\n          metadata {\n            display\n          }\n        }\n        team {\n          value\n          metadata {\n            display\n          }\n        }\n        title {\n          value\n          metadata {\n            display\n          }\n        }\n        officeLocation {\n          value\n          metadata {\n            display\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "22138104b54eba7aea621a502e3a1d9396d6a92d", "file": "src/queries/profile.js", "repo": "mozilla-iam_dino-park-front-end"}}, {"type": "query", "name": "pairs($id: [Bytes]!)", "content": "{\n    pairs(where: { id_in: $id }, orderDirection: asc) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}}, {"type": "mutation", "name": "UniswapDeployFactory($from: String!)", "content": "{\n    uniswapDeployFactory(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Posts ($userId: ID!, $after: String)", "content": "{\n    posts (first: ${POSTS_PER_PAGE}, after: $after, filter: { user: { value: $userId } }, orderBy: [{ createdAt: DESC }]) {\n      ...PostList\n    }\n  }\n  ${PostList.fragments.postList}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/lists/UserPostList.tsx", "repo": "marian2js_finsharing"}}, {"type": "query", "name": "MessagesListQuery($chatId: Int!)", "content": "{\n    chat(where:{id: {_eq: $chatId}}) {\n      ...chat\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/MessagesList.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($postID: ID!, $userID: ID!)", "content": "{\n    updatePostLike(postId: $postID, userId: $userID) {\n      post {\n        id\n        title\n        likes {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "query", "name": "user($id: String)", "content": "{\n  user(slug: $id) {\n    id\n    accessGrants(withPast: true) {\n      id\n      status\n      createdAt\n      beginBefore\n      voucherCode\n      beginAt\n      endAt\n      revokedAt\n      invalidatedAt\n      granter {\n        id\n        email\n        name\n      }\n      campaign {\n        id\n        title\n        endAt\n      }\n      events {\n        createdAt\n        event\n      }\n    }\n    accessCampaigns(withPast: true) {\n      id\n      title\n      endAt\n      slots {\n        total\n        free\n        used\n      }\n      grants(withRevoked: true, withInvalidated: true) {\n        id\n        status\n        createdAt\n        beginBefore\n        voucherCode\n        beginAt\n        endAt\n        revokedAt\n        invalidatedAt\n        email\n        recipient {\n          id\n          email\n          name\n        }\n        events {\n          createdAt\n          event\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Access.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "SendNotificationUser($notificationTitle:String, $notificationBody: String!)", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Notifications.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "", "content": "{\n      getOverallCategory {\n      count\n        categoryData{\n            id\n            categoryName\n            isActive\n        }\n      }\n    }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/routes/site-admin/pricing/addPricing/AddPricing.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "UpdateListingMutation(\n    $listingId: String!\n    $input: UpdateListingInput!\n  )", "content": "{\n    updateListing(listingId: $listingId, input: $input)\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/UpdateListing/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "MOVE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $parentTo: ID, $order: Int)", "content": "{\n        treeMoveElement(treeId: $treeId, nodeId: $nodeId, parentTo: $parentTo, order: $order) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/treeMoveElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "", "content": "{ ...SomeFragmentName } ${module.exports}", "metadata": {"commit_hash": "b1cd78e068ae27b14a38c22dd8e257ef8de5d1c5", "file": "node_modules/graphql-tag/test/graphql.js", "repo": "jdiebold_foundst-rs"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n    uploadFiles(files: $files) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/upload/file-upload.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "Logout($token: String!)", "content": "{\n    logout(token: $token)\n  }", "metadata": {"commit_hash": "5280d119af49c7634a832864d0ffc7c8e9f36e21", "file": "libs/schemas/src/lib/app/models/auth.model.ts", "repo": "Vrishtrix_fullstack-ts-boilerplate"}}, {"type": "mutation", "name": "CreateWallet($role: String, $name: String)", "content": "{\n    createWallet(role: $role, name: $name) {\n      id\n      role\n      name\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "updateEmployee($input: EmployeeUpdateInput!)", "content": "{\n        updateEmployee(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "($filter: PagedFilter!)", "content": "{\n    pagedCommunities(filter: $filter) {\n      entries {\n        id\n        title\n        logo\n      }\n      pageNumber\n      pageSize\n      totalCount\n      totalPages\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitySetter/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "assignBlogAuthor($blog: ID, $authorEmail: String)", "content": "{\n        updateBlogs(\n            where: { id: $blog }\n            connect: { authors: { where: { email: $authorEmail } } }\n        ) {\n            blogs {\n                authors {\n                    email\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "query", "name": "getAccountSubscriptionUsage(\n\t\t$accountKey: String!\n\t\t$productKey: String!\n\t)", "content": "{\n\t\tgetAccountSubscriptionUsage(\n\t\t\taccountKey: $accountKey\n\t\t\tproductKey: $productKey\n\t\t)\n\t\t\t@rest(\n\t\t\t\ttype: \"R_AccountSubscriptionUsage\"\n\t\t\t\tpath: \"/accounts/{args.accountKey}/product/{args.productKey}/usage\"\n\t\t\t\tmethod: \"GET\"\n\t\t\t) {\n\t\t\tannualSubscriptions {\n\t\t\t\tyear\n\t\t\t\tmaxConcurrentConsumption\n\t\t\t\tmaxConcurrentQuantity\n\t\t\t}\n\t\t\tcurrentConsumption\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/account-subscription-usage/queries/useGetAccountSubscriptionUsage.js", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "Category($slug: String!)", "content": "{\n    categories(filters: { slug: { eq: $slug } }) {\n      data {\n        attributes {\n          slug\n          name\n          articles {\n            data {\n              attributes {\n                slug\n                title\n                content\n                description\n                category {\n                  data {\n                    attributes {\n                      name\n                    }\n                  }\n                }\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8b41f7b35965d1c41490c9c85c5f0f4f81134eca", "file": "queries/category/articles.ts", "repo": "rwietter_rwietter.xyz"}}, {"type": "mutation", "name": "GenerateAirbnbCode($identity: String!, $airbnbUserId: String!)", "content": "{\n    generateAirbnbCode(identity: $identity, airbnbUserId: $airbnbUserId) {\n      success\n      reason\n      code\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GenerateAirbnbCode.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "GetMembershipInfo", "content": "{\n    me {\n      id\n      customer {\n        id\n        status\n        invoices {\n          id\n          dueDate\n        }\n        membership {\n          id\n          subscriptionId\n          pauseRequests(orderBy: createdAt_DESC) {\n            id\n            resumeDate\n            pauseDate\n            pausePending\n          }\n          subscription {\n            id\n            nextBillingAt\n          }\n          plan {\n            id\n            planID\n            price\n            description\n            features {\n              included\n            }\n            itemCount\n            pauseWithItemsPrice\n          }\n        }\n      }\n      user {\n        id\n        firstName\n        lastName\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/MembershipInfo/MembershipInfo.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "getUserByUsername($username: String!)", "content": "{\n                getUserByUsername(username: $username){\n                    username\n                    profilePicture\n    \t\t\t\tflatterCoins\n                }\n            }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @dosomething(if: true)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Vendors", "content": "{\n    vendors{\n      _id\n      email\n      userType\n      restaurants{\n        _id\n        orderId\n        orderPrefix\n        slug\n        name\n        image\n        address\n        location{coordinates}\n        zone{\n          _id\n          title\n        }\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/SuperAdminDashboard.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "($id: String!)", "content": "{\n        importQuestionnaire: ImportOutcomeSet(source: \"softoutcomes\", id: $id) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/catalogue/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "LinkTerm(\n      $nodeUri: String!\n      $targetUri: String!\n      $targetType: String!\n    )", "content": "{\n      linkTerm(\n        nodeUri: $nodeUri\n        targetUri: $targetUri\n        targetType: $targetType\n      ) {\n        linkUri\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/linkTerm.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "($name: String)", "content": "{\n          names(name: $name)\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Market ($symbol: String!)", "content": "{\n    market(symbol: $symbol) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/pages/rss/posts/[symbol].ts", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "DeleteServiceBindingUsage(\n    $serviceBindingUsageName: String!\n    $namespace: String!\n  )", "content": "{\n    deleteServiceBindingUsage(\n      serviceBindingUsageName: $serviceBindingUsageName\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceInstanceDetails/ServiceInstanceBindings/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "resetPassword($email: String!)", "content": "{\n      resetPassword(email: $email) {\n        mailMaybeSent\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/password-reset/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "addToList($listId: Int!, $productId: Int!, $quantity: Int!, $productAttributeId: Int!, $url: String!)", "content": "{\n    addToList(\n      listId: $listId\n      productId: $productId\n      quantity: $quantity\n      productAttributeId: $productAttributeId\n      url: $url\n    ) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/addtolist.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "OnDeleteTask", "content": "{\n        onDeleteTask(filter: {\n          severity: { eq: 10 }\n        }) {\n          id\n          title\n          description\n          priority\n          severity\n          owner\n          readOwners\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "submitAnswer($answerId: ID!, $questionId: ID!, $payload: JSON)", "content": "{\n    submitAnswer(\n      answer: { id: $answerId, questionId: $questionId, payload: $payload }\n    ) {\n      ... on QuestionInterface {\n        id\n        userAnswer {\n          id\n          payload\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/enhancers.js", "repo": "republik_plattform"}}, {"type": "query", "name": "($name: String!)", "content": "{\n    tag(name: $name) {\n      description\n      name\n      taggings {\n        id\n        description\n        on\n        level\n        person: target {\n          ... on Person {\n            id\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($itemCode: ID!, $status: String)", "content": "{\n        addCollection(itemCode: $itemCode, status: $status)\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/details/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "query", "name": "checkCommitment(\n    $label: String\n    $secret: String\n    $commitmentTimerRunning: String\n  )", "content": "{\n    checkCommitment(\n      label: $label\n      secret: $secret\n      commitmentTimerRunning: $commitmentTimerRunning\n    )\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n        login(email: $email, password: $password) {\n          partner {\n            id\n            name\n            firstName\n            lastName\n            street\n            street2\n            city\n            state\n            {\n              id\n            }\n            country\n            {\n              id\n            }\n            email\n            phone\n          }\n        }\n      }", "metadata": {"commit_hash": "74d2a328b7e10495b34cd88c0d88a5e79458a8a3", "file": "custom-api/customQueries.js", "repo": "wnprince_template-odoo"}}, {"type": "mutation", "name": "createCoupon($coupon: AddCouponInput!)", "content": "{\n    createCoupon(coupon: $coupon) {\n      id\n      title\n      code\n      number_of_used_coupon\n      number_of_coupon\n      expiration_date\n      creation_date\n      status\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CampaingForm/CampaingForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "UpvotePost($postId: Int!)", "content": "{\n    upvotePost(postId: $postId) {\n      id\n      title\n      votes\n    }\n  }", "metadata": {"commit_hash": "e65f9275fa83daf8c6816c358e73e3aa7b0c6fc8", "file": "examples/apollo/components/Author.js", "repo": "react-cosmos_react-cosmos-classic"}}, {"type": "query", "name": "author", "content": "{\n          author {\n            name\n            stats {\n              totalPosts\n              postsToday @client\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "eje($id: String!)", "content": "{\n    eje(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/details/eje-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "($manager: String)", "content": "{\n      pools(where: { manager: $manager }) {\n        id\n        name\n        logo\n        chain {\n          logo\n        }\n      }\n    }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/hooks/useManagerPools.tsx", "repo": "KassandraFinance_kassandra-application"}}, {"type": "mutation", "name": "PlaceOrder($orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$address:AddressInput!)", "content": "{\n  placeOrder(orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,address:$address) {\n    _id\n    order_id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    user {\n      _id\n      phone\n      email\n    }\n    rider{\n      _id\n    }\n    payment_status\n    payment_method\n    paid_amount\n    order_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Cart/Cart.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "deleteThread($threadId: ID!)", "content": "{\n    deleteThread(threadId: $threadId)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/deleteThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "logout", "content": "{\n  logout\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "query", "name": "allCities($city: CityInput)", "content": "{\n        allCities(city: $city) {\n        name\n        id\n        }\n    }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-event/registerEvent.queries.js", "repo": "midianinja_som-web"}}, {"type": "query", "name": "areas", "content": "{\n    areas {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/create/project-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pairs", "content": "{\n    pairs(first: 200, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}}, {"type": "query", "name": "GetPayment($id: ID!)", "content": "{\n    payment(id: $id) {\n      ...Payment\n    }\n  }\n  ${PaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "userUpdate($id: ID!, $input: UserUpdateInput!)", "content": "{\n      userUpdate(id: $id, input: $input) {\n        ...userFullFields\n      }\n    }\n    ${USER_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n            __typename\n          }\n          __typename\n        }\n      }\n\n      fragment friendFields on User {\n        firstName\n        lastName\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n    signIn(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/ejemplo03/bookshop-frontend/src/page/Signin.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "query", "name": "", "content": "{\n          a\n          b\n          c\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateQuest(\n    $id: ID!\n    $name: String\n    $description: String\n    $image: ID\n    $music: ID\n  )", "content": "{\n    updateQuest(\n      id: $id\n      data: {\n        Name: $name\n        Description: $description\n        Image: $image\n        Music: $music\n      }\n    ) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Quest.ts", "repo": "h3lpkey_fibber"}}, {"type": "query", "name": "($qid: String!, $ben: String!)", "content": "{\n        exportBenMeetings: exportBenMeetings(qID: $qid, beneficiary: $ben)\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "query", "name": "($postId: ID!)", "content": "{\n      getPostConnection(id: $postId) {\n        id\n        title\n        comments {\n          items {\n            id\n            content\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthV2TransformerWithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "getPaginatedStrings($pagination_key: String, $key: String, $lang: String, $value: String)", "content": "{\n  getPaginatedStrings(\n    pagination_key: $pagination_key\n    key: $key\n    lang: $lang\n    value: $value\n  ) {\n    lang\n    key\n    createdBy\n    version\n    value\n    pagination_key\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: 1) {\n            people {\n              id\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Query.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "contents($transactionHash: String!)", "content": "{\n    contents(where: { transactionHash: $transactionHash }) {\n      id\n      createdAt\n      transactionHash\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/postQueries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n    signIn(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/ejemplo03/bookshop-frontend/src/page/Signin.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "query", "name": "($filter: PagedFilter!)", "content": "{\n    pagedCommunities(filter: $filter) {\n      entries {\n        id\n        title\n        raw\n        logo\n      }\n      pageNumber\n      pageSize\n      totalCount\n      totalPages\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/TagEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "query", "name": "", "content": "{\n        vault(id: \"${params.address}\") {\n          id\n          asset {\n            id\n            name\n            symbol\n          }\n          mints {\n            id\n            nftIds\n          }\n        }\n      }", "metadata": {"commit_hash": "74922f49ceb05f6fc38a0a785d33676c737f67a6", "file": "teams/19-BootstrapNFT/src/BootstrapNFT/src/pages/vault/swap.tsx", "repo": "parity-asia_hackathon-2022-summer"}}, {"type": "query", "name": "privateChannels", "content": "{\n    privateChannels {\n      id\n      url\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "DeleteCommentReaction ($commentId: uuid!, $userId: Int!, $reaction: bpchar!)", "content": "{\n        delete_comment_reactions(where: {_and: [{comment_id: {_eq: $commentId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "ReservationFeedback_Query", "content": "{\n    reservationFeedback {\n      id\n      feedbacks {\n        id\n        isCompleted\n        review\n        rating\n        questions {\n          id\n          options\n          question\n          responses\n          type\n        }\n        variant {\n          id\n          product {\n            id\n            name\n            retailPrice\n            brand {\n              id\n              name\n            }\n            images(size: Thumb) {\n              id\n              url\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ReservationFeedback/ReservationFeedbackModal.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "OrdersByTrading ($tradingId: String)", "content": "{\n        ordersByTrading (tradingId: $tradingId) {\n            orderId\n            tradingId\n            symbol\n            time\n            lastQty\n            orderQty\n            leavesQty\n            lastPrice\n            price\n            avgPrice\n            stopPrice\n            side\n            ordType\n            ordStatus\n            currency\n            homeNotional\n            text\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "mutation", "name": "DestroyInvite($inviteId: String!)", "content": "{\n    destroyInvite(inviteId: $inviteId)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "CreateUser(\n        $input: CreateUserInput!\n        $condition: ModelUserConditionInput\n    )", "content": "{\n        createUser(input: $input, condition: $condition) {\n            id\n            username\n            cognitoId\n            tenantId\n            contact {\n                emailAddress\n            }\n            displayName\n            name\n            roles\n            disabled\n            createdAt\n            updatedAt\n            _version\n            _deleted\n            _lastChangedAt\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/createUser.js", "repo": "platelet-app_platelet"}}, {"type": "mutation", "name": "insertRemoteAppUserRoles($roles: [authUserRoles_insert_input!]!)", "content": "{\n  insertAuthUserRoles(objects: $roles) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "query", "name": "PERSON($id: ID!)", "content": "{\n    person(id: $id) {\n      name\n    }\n  }", "metadata": {"commit_hash": "2968991b0625413c8dc2ab5562bc54bbfd0c8b67", "file": "src/data/gql/persons/queries.js", "repo": "EddiG_ssr-cra-graphql"}}, {"type": "mutation", "name": "deleteUser($where: UserWhereUniqueInput!)", "content": "{\n    deleteUser(where: $where) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "IsUserLoggedIn", "content": "{\n          isUserLoggedIn @client\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "(\n      $longitude: String!\n      $latitude: String!\n      $currentPage: Int\n    )", "content": "{\n      nearbyStore(\n        input: {\n          longitude: $longitude\n          latitude: $latitude\n          currentPage: $currentPage\n        }\n      ) {\n        list {\n          id\n          name\n          imageUrl\n          address\n          longitude\n          latitude\n          distance\n          sales\n          balance\n          status\n        }\n        pagination {\n          pageSize\n          total\n          current\n        }\n      }\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-taro-mall/src/pages/home/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "query", "name": "($tokenId: String!, $usersStarknetAddresses: [String!]!)", "content": "{\n    cardByTokenId(tokenId: $tokenId) {\n      serialNumber\n      cardModel {\n        pictureUrl(derivative: \"width=128\")\n        season\n        slug\n        artistName\n      }\n    }\n    ${USERS_QUERY_CONTENT}\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/state/transactions/hooks.ts", "repo": "ruleslabs_interface"}}, {"type": "subscription", "name": "", "content": "{\n          voted\n        }", "metadata": {"commit_hash": "b5e95b1c628451c69ea63813b6a36aa6f90a9cf6", "file": "frontend/src/app.js", "repo": "widdix_aws-cutting-edge-appsync"}}, {"type": "query", "name": "", "content": "{\n                      categories {\n                        id\n                        name\n                      }\n                    }", "metadata": {"commit_hash": "89dd6d9be2c03695498196ef118e7054874db3fa", "file": "pages/bots/edit/[id].tsx", "repo": "pikokr_uniquebots"}}, {"type": "query", "name": "Simple", "content": "{\n        field @storage(if: true)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n        makeListPrivate(id: \"5\") {\n          id\n          isPrivate\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Services($namespace: String!, $excludedLabels: [String!])", "content": "{\n    services(namespace: $namespace, excludedLabels: $excludedLabels) {\n      name\n      clusterIP\n      creationTimestamp\n      labels\n      ports {\n        port\n        serviceProtocol\n      }\n      json\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "NOOP", "content": "{\n        __typename\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/noopQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "todos", "content": "{\n          todo_list {\n            id\n            title\n            tasks {\n              id\n              text\n              completed\n            }\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/recycled-queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "markSingleNotificationSeen($id: ID!)", "content": "{\n    markSingleNotificationSeen(id: $id)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/notification/markSingleNotificationSeen.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "DeleteVote ($pollId: Int!, $userId: Int!)", "content": "{\n        delete_poll_votes(\n            where: {\n                _and: [\n                    {poll_id: {_eq: $pollId}},\n                    {user_id: {_eq: $userId}}\n                ]\n            }\n        ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/Poll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "MapSptImportServer(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n    $mapName: String!\n  )", "content": "{\n    mapSptImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n      mapName: $mapName\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/mapspt_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "AddRoll($device: String!, $dice: String!)", "content": "{\n    addRoll(device: $device, dice: $dice) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "sendResetPasswordEmail ($username: String!)", "content": "{\n      sendResetPasswordEmail(username: $username) {\n        result\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/UserHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "query", "name": "getSearchResults(\n    $searchQuery: String\n    $after: String\n    $sort: SearchSortInput\n    $filters: [SearchGenericFilterInput!]\n  )", "content": "{\n    search(\n      first: 25\n      after: $after\n      search: $searchQuery\n      sort: $sort\n      filters: $filters\n    ) {\n      totalCount\n      aggregations {\n        key\n        count\n        label\n        buckets {\n          value\n          count\n          label\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n      nodes {\n        entity {\n          __typename\n          ... on Document {\n            ...FeedDocument\n          }\n          ... on Comment {\n            id\n            content\n            text\n            preview(length: 240) {\n              string\n              more\n            }\n            createdAt\n            displayAuthor {\n              id\n              name\n              slug\n              profilePicture\n              credential {\n                id\n                description\n                verified\n              }\n            }\n            published\n            updatedAt\n            tags\n            parentIds\n            discussion {\n              id\n              title\n              path\n              document {\n                id\n                meta {\n                  title\n                  path\n                  template\n                  ownDiscussion {\n                    id\n                    closed\n                  }\n                }\n              }\n            }\n          }\n          ... on User {\n            id\n            slug\n            firstName\n            lastName\n            credentials {\n              verified\n              description\n              isListed\n            }\n            portrait\n          }\n        }\n        highlights {\n          path\n          fragments\n        }\n        score\n      }\n    }\n  }\n  ${documentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Search/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "DELETE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $deleteChildren: Boolean)", "content": "{\n        treeDeleteElement(treeId: $treeId, nodeId: $nodeId, deleteChildren: $deleteChildren)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/treeDeleteElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "GetNAICSIndustry($naicsId: Int!)", "content": "{\n    datum: namibiaNaics(naicsId: $naicsId) {\n      id\n      naicsId\n      name\n      code\n      complexityReport\n      factors {\n        edges {\n          node {\n            aRelativeDemand\n            aResiliency\n            aEmploymentGroupsInterest\n            aFdi\n            aExportPropensity\n            fPortPropensity\n            fExistingPresence\n            fRemoteness\n            fScarceFactors\n            fInputAvailability\n            attractiveness\n            feasibility\n            shareFemale\n            shareYouth\n            shareLskill\n            id\n            rca\n          }\n        }\n      }\n      proximity {\n        edges {\n          node {\n            partnerId\n            proximity\n            rank\n            id\n            factors {\n              edges {\n                node {\n                  rca\n                }\n              }\n            }\n          }\n        }\n      }\n      relativeDemand {\n        edges {\n          node {\n            locationCode\n            countryDemandAvg\n            countryDemandPcAvg\n            id\n          }\n        }\n      }\n      occupation {\n        edges {\n          node {\n            occupation\n            isAvailable\n            rank\n            pctShare\n            id\n          }\n        }\n      }\n    }\n    scatterPlotData: namibiaNaicsList(complexityReport: true) {\n      naicsId\n      name\n      code\n      id\n      factors {\n        edges {\n          node {\n            attractiveness\n            feasibility\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "caa856ce162d7acc90e14e7eb883e81840218fd2", "file": "src/pages/namibiaTool/QueryNAICS.tsx", "repo": "cid-harvard_growth-lab-app-front-end"}}, {"type": "mutation", "name": "($postId: ID!)", "content": "{\n      createCommentConnection(input: { content: \"Comment\", commentConnectionPostId: $postId }) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthModelAuthTransformer.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "getMessageById($id: ID!)", "content": "{\n    message(id: $id) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/message/getMessage.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "($outcomeSetID: String!, $tags: [String])", "content": "{\n    generateSummon: NewMeetingSummon(outcomeSetID:$outcomeSetID, daysToComplete: ${defaultRemoteMeetingLimit}, tags: $tags)\n  }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/summon/index.ts", "repo": "impactasaurus_app"}}, {"type": "query", "name": "area($id: String!)", "content": "{\n      area(id: $id) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "lastScore($_id: ID!, $lastScore: Int!)", "content": "{\n    lastScore(_id: $_id, lastScore: $lastScore) {\n      _id\n      lastScore\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "createProject($authToken: String!, $project: ProjectInput)", "content": "{\n  CreateProject(input: { auth_token: $authToken, project: $project }) {\n    project {\n      title\n    }\n  }\n}", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/CreateProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "cancelBooking($bookingId: ID!)", "content": "{\n        cancelBooking(bookingId: $bookingId) {\n            title\n        }\n    }", "metadata": {"commit_hash": "111a5a0fa557f4231951199e1a6f89c76f1c2c5a", "file": "src/gql/cancelBooking.js", "repo": "stack-guru_fullstack-graphql"}}, {"type": "mutation", "name": "($input: SignUpInput)", "content": "{\n        signUp(input: $input) {\n          userId\n          firstName\n          lastName\n          email\n          role\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/customer/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "query", "name": "forumPostsAndTagsPage($pageSize:Int = 20, $cursor: Int = 0, $search: String = \"\", $tags: [String] = [])", "content": "{\n    ${forumPostsPage}\n    ${forumTags}\n  }", "metadata": {"commit_hash": "e6e1bfc0a0da61eebccb78abd0c86c4564b47636", "file": "src/graphql/forum.js", "repo": "louisryoung_svelte-sapper-graphql"}}, {"type": "query", "name": "GetUser($username: String!)", "content": "{\n        user(username: $username) {\n          id\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/testing/mocking/__tests__/MockedProvider.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "", "content": "{\n      getStatistic(orgId: \"${this.orgId}\") {\n        createdTimeStamps\n        createdDogs {\n          _id\n          dob\n          breed\n          gender\n        }\n        inProcessTimeStamps\n        inProcessDogs {\n          _id\n          dob\n          breed\n          gender\n        }\n        adoptedTimeStamps\n        adoptedDogs {\n          _id\n          dob\n          breed\n          gender\n        }\n        rejectedTimeStamps\n        rejectedDogs {\n          _id\n          dob\n          breed\n          gender\n        }\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/orgprofile/feature/src/lib/orgprofile.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "CreatePost(\n    $content: String\n    $topic: String\n    $parent: String\n  )", "content": "{\n    createPost(input: {\n      content: $content\n      topic: $topic\n      parent: $parent\n    }) {\n      ${postResponse}\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CancelReturn($bagItemId: ID!)", "content": "{\n    cancelReturn(bagItemId: $bagItemId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/Components/BagItem/BagItemCTAs.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "makeListPrivate($listId: ID!)", "content": "{\n          makeListPrivate(id: $listId)\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "IntrospectionQuery", "content": "{\n\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "b2448fceb3ff9bfe3ffbb6e9f553694e6c6aac38", "file": "src/introspection_query.js", "repo": "launchscout_graphql-admin-react"}}, {"type": "query", "name": "people($first: Int)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/client-option.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "blocks($timestampFrom: Int!, $timestampTo: Int!)", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "", "content": "{\n        getTags: tags\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/tags/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "anonymizeUserAnswers($questionnaireId: ID!)", "content": "{\n    anonymizeUserAnswers(questionnaireId: $questionnaireId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "($input: LatLngInput)", "content": "{\n        updateCurrentLocation(input: $input) {\n          latLng {\n            latitude\n            longitude\n          }\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/driver/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "query", "name": "challenge($id: ID!)", "content": "{\n    id\n    description\n    votes {\n      id\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "addIdentity(\n    $email: String\n    $name: String\n    $source: String!\n    $username: String\n  )", "content": "{\n    addIdentity(\n      email: $email\n      name: $name\n      source: $source\n      username: $username\n    ) {\n      uuid\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "UniswapDeployFactory($from: String!)", "content": "{\n    uniswapDeployFactory(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "perspectiveAddLinkExpression($uuid: String!, $link: LinkExpressionInput!, $status: String)", "content": "{\n                perspectiveAddLinkExpression(link: $link, uuid: $uuid, status: $status) {\n                    ${LINK_EXPRESSION_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "query", "name": "SearchCompanies($text: String!, $companyId: ID)", "content": "{\n    searchCompanies(text: $text, companyId: $companyId) {\n      users {\n        id\n        fullName\n        profileUrl\n        companies {\n          id\n          name\n          logoUrl\n        }\n      }\n      companies {\n        id\n        name\n        logoUrl\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/modules/list/CreateListPage/components/CreateListStep/components/CompanyForm.tsx", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n      login(email: $email, password: $password) {\n          token\n          user {\n              _id\n          }\n      }\n  }", "metadata": {"commit_hash": "f843b88d9cd8c38fc94a84297a63e19a2c383a57", "file": "client/src/utils/mutations.js", "repo": "ottercreektourism_kernel"}}, {"type": "query", "name": "getUsers", "content": "{\n        allUsers {\n            _id,\n            email,\n            profile {\n                firstName,\n                lastName,\n                role\n            }\n        }\n    }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/queries.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "(\n      $target: NotificationTargets!\n      $type: NotificationTypes!\n      $accountId: ID!\n      $balance: Float!\n      $date: AWSDateTime!\n      $delta: Float!\n      $description: String!\n      $id: ID!\n    )", "content": "{\n      notifyTransactionCreated(\n        data: {\n          target: $target\n          type: $type\n          accountId: $accountId\n          transaction: {\n            balance: $balance\n            date: $date\n            delta: $delta\n            description: $description\n            id: $id\n          }\n        }\n      ) {\n        transaction {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "e5ea650d524a01b7811e2e8e6daa8b7a6cdcd5ab", "file": "src/shared/infra/appsync/templates/Mutation.notifyTransactionCreated.e2e.ts", "repo": "s4nt14go_white-label"}}, {"type": "query", "name": "GetUser($id: ID!)", "content": "{\n    person(id: $id) {\n      id\n      name\n      email\n      user\n      ethereumAddress\n      primaryLocation {\n        name\n        mappableAddress\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "query", "name": "downloadProject($id: Int!)", "content": "{\n  downloadProject(serviceId:$id){\n    data\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "query", "name": "listAirflowClusterProjects(\n      $clusterUri: String!\n      $filter: AirflowProjectFilter\n    )", "content": "{\n      listAirflowClusterProjects(clusterUri: $clusterUri, filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          projectUri\n          name\n          packageName\n          codeRepositoryName\n          codeRepositoryLink\n          codeRepositoryStatus\n          codePipelineName\n          codePipelineArn\n          codePipelineLink\n          description\n          created\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/listClusterProjects.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_RESOURCES/awesome-git-user/full-stack-apollo-graphql-tutorial-quakehunter/client/src/pages/login.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "OfflineValidators($sessionIndex: Int!)", "content": "{\n    offlineValidators(where: { sessionIndex: { index: $sessionIndex } }) {\n      validatorId\n      # total\n      # own\n      # others\n    }\n  }", "metadata": {"commit_hash": "e5afc027dbb1be260cb6b280eb1f583d97e6b0ef", "file": "front/gatsby/src/util/graphql.ts", "repo": "paritytech_Nomidot"}}, {"type": "mutation", "name": "createPost($body: String!)", "content": "{\n        createPost(body: $body) {\n            id\n            body\n            createdAt\n            username\n            likes {\n                id\n                username\n                createdAt\n            }\n            likeCount\n            comments {\n                id\n                body\n                username\n                createdAt\n            }\n            commentCount\n        }\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/components/PostForm.js", "repo": "rimijoker_Social-Media-App"}}, {"type": "mutation", "name": "SetNetwork($network: String!, $customConfig: ConfigInput)", "content": "{\n    setNetwork(network: $network, customConfig: $customConfig)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SetNetwork.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "", "content": "{\n              dark_forces {\n                __typename\n                name\n                ... on Droid {\n                  model\n                }\n              }\n            }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/roundtrip.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "member($user: String!)", "content": "{\n    member(id: $user) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}}, {"type": "mutation", "name": "lastScore($_id: ID!, $lastScore: Int!)", "content": "{\n    lastScore(_id: $_id, lastScore: $lastScore) {\n      _id\n      lastScore\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "deleteBook($id: ID!)", "content": "{\n        deleteBook(id: $id) {\n            id\n            name\n        }\n    }", "metadata": {"commit_hash": "821bcde594f373c2d28fe847fe7d940be8ad22bb", "file": "graphql-crud/client/src/app/queries.ts", "repo": "thisdot_blog-demos"}}, {"type": "query", "name": "queryB", "content": "{\n        person(id: \"abc\") {\n          __typename\n          id\n          lastName\n          age\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addNotification($title: String, $detail: String, $role: String)", "content": "{\n    addNotification(title: $title, detail: $detail, role: $role) {\n      _id\n      title\n      type\n      detail\n      role\n      userId\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "query", "name": "GET_ATTRIBUTES", "content": "{\n        attributes {\n            list {\n                id\n                label\n                type\n                format\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/attributes/getAttributesQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "isServiceUniqueNameAvailable($displayName: String!)", "content": "{\n  isServiceUniqueNameAvailable(displayName:$displayName){\n    uniqueName\n    free\n    variants\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "query", "name": "", "content": "{\n          jobs {\n            name\n            result\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "PROFILE($username: String!)", "content": "{\n        profile(username: $username) {\n            id\n            username\n            kusama_default_address\n            polkadot_default_address\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/UserProfile/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "IndividualMetrics(\n\t\t$channelId: String!\n\t\t$interval: String!\n\t\t$rangeKey: Int!\n\t)", "content": "{\n\t\tindividualMetric(\n\t\t\tchannelId: $channelId\n\t\t\tinterval: $interval\n\t\t\trangeKey: $rangeKey\n\t\t) {\n\t\t\tanonymousIndividualsMetric {\n\t\t\t\t...trendFragment\n\t\t\t}\n\t\t\tknownIndividualsMetric {\n\t\t\t\t...trendFragment\n\t\t\t}\n\t\t\ttotalIndividualsMetric {\n\t\t\t\t...trendFragment\n\t\t\t}\n\t\t}\n\t}\n\n\tfragment trendFragment on Metric {\n\t\tvalue\n\t\ttrend {\n\t\t\tpercentage\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/IndividualMetricsQuery.js", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "listOrganizationGroups(\n      $filter: GroupFilter\n      $organizationUri: String!\n    )", "content": "{\n      listOrganizationGroups(\n        organizationUri: $organizationUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          groupUri\n          invitedBy\n          created\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/listInvitedGroups.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "me", "content": "{\n    me {\n      id\n      name\n      firstName\n      lastName\n      email\n      roles\n      portrait\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/lib/withMe.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "EditImages($id: ID!, $images: [IFile!])", "content": "{\n    updateEconomicResource(resource: { id: $id, images: $images }) {\n      economicResource {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "pages/project/[id]/edit/images.tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "query", "name": "myQueryName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($title: String!, $banned_formats: [MediaFormat])", "content": "{\n  results: Page {\n      media(search: $title, type: ANIME, isAdult: false, format_not_in: $banned_formats){\n          id\n          genres\n          format\n          seasonYear\n          averageScore\n          coverImage {\n              large\n              color\n          }\n          title {\n              english\n              romaji\n              native\n          }\n      }\n  }\n}", "metadata": {"commit_hash": "36438974dada8e9f41446b3990408967e518fae9", "file": "src/apollo/queries.js", "repo": "vanelk_miru-anime"}}, {"type": "query", "name": "ListDatasetQualityRules(\n      $datasetUri: String!\n      $filter: DatasetQualityRuleFilter\n    )", "content": "{\n      listDatasetQualityRules(datasetUri: $datasetUri, filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          ruleUri\n          name\n          label\n          description\n          created\n          query\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetQualityRule/listDatasetQualityRules.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "($thread: CmsThread, $id: ID!)", "content": "{\n    dislikeComment(thread: $thread, id: $id) {\n      id\n      viewerHasDisliked\n      dislikesCount\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Comments/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "query", "name": "lessonStatus($in: LessonId)", "content": "{\n    lessonStatus(input: $in) {\n      userId\n      lessonId\n      isPassed\n      isTeaching\n      isEnrolled\n      starGiven {\n        id\n        username\n      }\n      starComment\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "query", "name": "($userId: String!)", "content": "{\n  user(userId: $userId) {\n    id,\n    username,\n    first_name,\n    last_name,\n    userId\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/table-filters/components/user-autocomplete.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "CreateBookmarkMutation($input: CreateBookmarkInput!)", "content": "{\n    createBookmark(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateBookmarkMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "query", "name": "UserPortfolios", "content": "{\n    userPortfolios {\n      _id\n      title\n      jobTitle\n      startDate\n      endDate\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateHomePageFooter (\n                $footerLogo1: String\n                $footerLogo2: String\n                $footerLogo3: String\n                $footerLogo4: String\n                $footerTitle1: String\n                $footerContent1: String\n                $footerLink1: String\n                $footerLink2: String\n                $footerLink3: String\n                $footerLink4: String\n                $footerLinkName1: String\n                $footerLinkName2: String\n                $footerLinkName3: String\n                $footerLinkName4: String\n                $footerLinkTitle: String\n                $footerBottom: String\n              )", "content": "{\n                updateHomePageFooter (\n                  footerLogo1: $footerLogo1\n                  footerLogo2: $footerLogo2\n                  footerLogo3: $footerLogo3\n                  footerLogo4: $footerLogo4\n                  footerTitle1: $footerTitle1\n                  footerContent1: $footerContent1\n                  footerLink1: $footerLink1\n                  footerLink2: $footerLink2\n                  footerLink3: $footerLink3\n                  footerLink4: $footerLink4\n                  footerLinkName1: $footerLinkName1\n                  footerLinkName2: $footerLinkName2\n                  footerLinkName3: $footerLinkName3\n                  footerLinkName4: $footerLinkName4\n                  footerLinkTitle: $footerLinkTitle\n                  footerBottom: $footerBottom\n                ) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateHomepageSettingsFooter.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "query", "name": "bindableResources($namespace: String!)", "content": "{\n    bindableResources(namespace: $namespace) {\n      kind\n      displayName\n      resources {\n        name\n        namespace\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceInstanceDetails/ServiceInstanceBindings/BindApplicationModal/queries.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteOrganization($id: ID!)", "content": "{\n  organization_Delete(id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/__generated__/current-user.query.stencil-component.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "createTopic($input: TopicInput!)", "content": "{\n        createTopic(input: $input) {\n            _id\n            name\n            created_at\n            owner {\n                name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlCreateTopic.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "nameOfMutation", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/getFromAST.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "health($name: Bytes)", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: $name, subgraphError: allow) {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/application/index.ts", "repo": "21orangehat_upool-listagem"}}, {"type": "query", "name": "GetUser($id: ID!)", "content": "{\n    person(id: $id) {\n      id\n      name\n      email\n      user\n      ethereumAddress\n      primaryLocation {\n        name\n        mappableAddress\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "query", "name": "GetXp", "content": "{\n  currentUser {\n    id\n    xp\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "updateAnimationTitle($animationId: String!, $title: String!)", "content": "{\n    updateAnimationTitle(\n      input: { animationId_: $animationId, title_: $title }\n    ) {\n      animation {\n        title\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "getCommunityBySlug($slug: LowercaseString)", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunity.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateOrganizationById($id: ID!, $data: OrganizationUpdateInput!)", "content": "{\n        obj: updateOrganization(id: $id, data: $data) ${ORGANIZATION_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}}, {"type": "query", "name": "Simple($variable: String!)", "content": "{\n        field(usingVariable: $variable) @client\n        networkField\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "", "content": "{\n          a\n          b\n          c\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/client.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "($ida: String)", "content": "{\n    oneUser(ida: $ida) {\n      id\n      ida\n      type\n      artist {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/validation-email-token/queries.js", "repo": "midianinja_som-web"}}, {"type": "query", "name": "getCommitById($repoId: ID!, $commitId: ID!)", "content": "{\n    repo(id: $repoId) {\n      ...EditPageRepo\n      commit(id: $commitId) {\n        ...CommitWithDocument\n      }\n    }\n  }\n  ${fragments.EditPageRepo}\n  ${fragments.CommitWithDocument}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Edit/enhancers.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getPaginatedStrings($pagination_key: String, $key: String, $lang: String, $value: String)", "content": "{\n  getPaginatedStrings(\n    pagination_key: $pagination_key\n    key: $key\n    lang: $lang\n    value: $value\n  ) {\n    lang\n    key\n    createdBy\n    version\n    value\n    pagination_key\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "Orders($offset:Int)", "content": "{\n  orders(offset:$offset){\n    _id\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n    }\n    items{\n      _id\n      title\n      food\n      description\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n    }\n    user{\n      _id\n      name\n      phone\n    }\n    rider{\n      _id\n      name\n    }\n    review{\n      _id\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    tipping\n    taxationAmount\n    createdAt\n    completionTime\n    orderDate\n    expectedTime\n    isPickedUp\n    deliveryCharges\n    acceptedAt\n    pickedAt\n    deliveredAt\n    cancelledAt\n    assignedAt\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/Paypal/Paypal.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "GET_ATTRIBUTES_BY_LIB($library: String!)", "content": "{\n        attributes(filters: {libraries: [$library]}) {\n            list {\n                id\n                type\n                format\n                label\n                multiple_values\n                system\n                readonly\n                ... on LinkAttribute {\n                    linked_library {\n                        id\n                    }\n                }\n                ... on TreeAttribute {\n                    linked_tree {\n                        id\n                        label\n                        libraries {\n                            library {\n                                id\n                                label\n                            }\n                        }\n                    }\n                }\n                ... on StandardAttribute {\n                    embedded_fields {\n                        id\n                        format\n                        label\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/attributes/getAttributesByLib.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "($number: Int!, $support: Boolean!)", "content": "{\n    proposals(where: { number: $number }) {\n      votes(where: { support: $support }) {\n        support\n        votingPower\n        voter {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/components/Governance/ModalVotes/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "mutation", "name": "SaveDisclosurePage($id: ID!, $details: DisclosureDetailsInput!)", "content": "{\n        saveDisclosurePage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            disclosure {\n                submitterSignature\n                disclosureConsent\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "CurrentUserNotifications($after: String)", "content": "{\n    currentUser {\n      notifications(after: $after) {\n        nodes {\n          __typename\n          ... on EtherRetrieveNotification {\n            createdAt\n            amount\n          }\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/state/search/hooks.ts", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "getRedirect($path: String!)", "content": "{\n    redirection(path: $path) {\n      id\n      target\n      status\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/StatusError/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "createSegmentRule($segmentId: ID!, $input: NewSegmentRule!)", "content": "{\n        createSegmentRule(segmentId: $segmentId, input: $input) {\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteUserAccountByEmailAddress(\n\t\t$emailAddress: String!\n\t\t$externalReferenceCode: String!\n\t)", "content": "{\n\t\tdeleteAccountUserAccountByExternalReferenceCodeByEmailAddress(\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/user-accounts/mutations/useDeleteUserAccountByEmailAddress.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "RemoveSleepVariable($name: String!, $sleepDate: String!)", "content": "{\n  removeSleepVariable(name: $name, sleepDate: $sleepDate) {\n    date\n    variables {\n      name\n      emoji\n      custom\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "pair($id: String)", "content": "{\n    pair(id: $id) {\n      reserveUSD\n      totalSupply\n    }\n  }", "metadata": {"commit_hash": "bd96647a279c97610800dad2b433464673f9c0c3", "file": "src/api/uniprice.js", "repo": "deusfinance_deus-statistics"}}, {"type": "query", "name": "getAll$", "content": "{MODELS}($where: ${whereName}, $first: Int = ${DEFAULT_PAGE_SIZE}, $skip: Int, $sortBy: [${sortName}!]) {\n             objs: ${queryName}(where: $where, first: $first, skip: $skip, sortBy: $sortBy) ${fields}\n         }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "query", "name": "repoWeek($publishDateRange: RepoPublishDateRange)", "content": "{\n    reposSearch(first: 100, publishDateRange: $publishDateRange) {\n      nodes {\n        ...CalendarRepoFragment\n        currentPhase {\n          key\n          color\n          label\n        }\n      }\n    }\n  }\n  ${repoFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Calendar/graphql.js", "repo": "republik_plattform"}}, {"type": "query", "name": "me", "content": "{\n    me {\n      _id\n      username\n      email\n      highScore\n      lastScore\n      friends {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/queries.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "subscription", "name": "deleteMessage($channelUrl: String, $tenant: String)", "content": "{\n    deleteMessage(channelUrl: $channelUrl, tenant: $tenant) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "AddAffiliate($from: String!, $affiliate: String!)", "content": "{\n    addAffiliate(from: $from, affiliate: $affiliate) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "uploadLicenceBackImage($userId:ID,$licenceBack:String)", "content": "{\n                uploadLicenceBackImage(userId:$userId, licenceBack:$licenceBack) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/uploadLicenceBackImage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateTaskComment($commentID: UUID!, $message: String!)", "content": "{\n    updateTaskComment(input: { commentID: $commentID, message: $message }) {\n      comment {\n        id\n        updatedAt\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskComment.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "", "content": "{\n        account {\n          contact\n          location\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "GetProjectTypes", "content": "{\n    instanceVariables {\n      specs {\n        specProjectDesign {\n          id\n          name\n        }\n        specProjectProduct {\n          id\n          name\n        }\n        specProjectService {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "deleteTaskGroup($taskGroupID: UUID!)", "content": "{\n  deleteTaskGroup(input: {taskGroupID: $taskGroupID}) {\n    ok\n    affectedRows\n    taskGroup {\n      id\n      tasks {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "allLists($first: Int)", "content": "{\n    allLists(first: $first) {\n      id\n      title\n    }\n}", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "mutation", "name": "(\n    $id: ID!\n    $name: String!\n    $duration: Int!\n    $portions: Int!\n    $img: String!\n    $description: String!\n    $ingredients: JSON!\n    $steps: JSON!\n    $category: ID!\n    $author: ID!\n  )", "content": "{\n    updateRecipe(\n      id: $id\n      data: {\n        name: $name\n        duration: $duration\n        portions: $portions\n        img: $img\n        description: $description\n        ingredients: $ingredients\n        steps: $steps\n        category: $category\n        author: $author\n      }\n    ) {\n      data {\n        id\n        attributes {\n          name\n          category {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "query", "name": "uniswap($date: Int!, $date2: Int!)", "content": "{\n    current: uniswap(id: \"1\") {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    oneDay: uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    twoDay: uniswapHistoricalDatas(\n      where: { timestamp_lt: $date2 }\n      first: 1\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    exchanges(first: 200, orderBy: ethBalance, orderDirection: desc) {\n      ethBalance\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}}, {"type": "mutation", "name": "DeleteUser(\n        $input: DeleteUserInput!\n        $condition: ModelUserConditionInput\n    )", "content": "{\n        deleteUser(input: $input, condition: $condition) {\n            id\n            cognitoId\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAdminAddNewUser/src/deleteUser.js", "repo": "platelet-app_platelet"}}, {"type": "query", "name": "($communityId: ID!, $thread: CmsThread!)", "content": "{\n    partialTags(communityId: $communityId, thread: $thread) {\n      id\n      title\n      color\n      thread\n      community {\n        id\n        title\n        logo\n        raw\n      }\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/TagSetter/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "query", "name": "AssignedOrders($id:String)", "content": "{\n    assignedOrders(id:$id){\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          title\n          options{\n            title\n            price\n          }\n        }\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "submitConsent", "content": "{\n    submitConsent(name: \"${PROLITTERIS_OPT_OUT_CONSENT}\") {\n      id\n      ...ProlitterisConsent\n    }\n  }\n  ${userProlitterisConsentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/ProlitterisSettings.js", "repo": "republik_plattform"}}, {"type": "query", "name": "MarketFollows ($userId: ID!)", "content": "{\n    marketFollows (first: 100, filter: { user: { value: $userId } }) {\n      nodes {\n        id\n        market {\n          id\n          ...SideMenuMarketList\n        }\n      }\n    }\n  }\n  ${SideMenuMarketList.fragments.marketList}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/PageLayout/SideMenuWatchlist.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "deleteLinea($where: LineaWhereUniqueInput!)", "content": "{\n    deleteLinea(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/list/linea-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "emailCodeAuth($email: String!, $code: String!)", "content": "{\n    emailCodeAuth(email: $email, code: $code) {\n      status\n      token\n    }\n  }", "metadata": {"commit_hash": "cebe603e320fbfdc9ef167c45f87a7f383790754", "file": "apollo/auth/mutations/emailCodeAuth.js", "repo": "JustShip_justship_web"}}, {"type": "mutation", "name": "AddTeamMember(\n    $email: String!\n    $fullName: String!\n    $role: ID!\n    $team: String!\n    $companyId: ID!\n  )", "content": "{\n    addTeamMember(\n      email: $email\n      fullName: $fullName\n      role: $role\n      team: $team\n      companyId: $companyId\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n      user {\n        id\n        fullName\n        profileUrl\n        roles {\n          id\n          name\n          companyId\n        }\n        teams {\n          id\n          name\n          companyId\n        }\n        companies {\n          id\n          name\n          logoUrl\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddTeamMember.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "query", "name": "", "content": "{\n        author {\n          ...authorDetails\n          ...moreAuthorDetails\n        }\n      }\n\n      fragment authorDetails on Author {\n        firstName\n        lastName\n      }\n\n      fragment moreAuthorDetails on Author {\n        address\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "($filter: PagedFilter!)", "content": "{\n    pagedCommunities(filter: $filter) {\n      entries {\n        id\n        title\n        desc\n        raw\n        logo\n        subscribersCount\n        insertedAt\n        updatedAt\n      }\n      pageNumber\n      pageSize\n      totalCount\n      totalPages\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/Sidebar/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          __typename\n          ...person\n        }\n      }\n\n      fragment person on PeopleConnection {\n        people {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/fragments.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "($commentId: ID!)", "content": "{\n      getCommentConnection(id: $commentId) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthModelAuthTransformer.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "deleteProject($projectId: ID!, $teamId: ID!)", "content": "{\n        deleteProject(projectId: $projectId, teamId: $teamId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteProject.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "Config", "content": "{\n    config\n    configObj {\n      proxyAccountsEnabled\n      relayerEnabled\n      performanceMode\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/_NodeInfo.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Ruledex($season: Int!, $slug: String!)", "content": "{\n    user(slug: $slug) {\n      ruledex(filter: { season: $season }) {\n        ruledexCardModels {\n          cardModel {\n            slug\n            uid\n            scarcity {\n              id\n            }\n            pictureUrl(derivative: \"width=256\")\n          }\n          owned\n          badges {\n            type\n            level\n          }\n        }\n        ruledexScarcities {\n          balance\n          maxBalance\n          scarcityId\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/ruledex.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$is_active:Boolean!)", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone,is_active:$is_active}){\n          _id\n          name\n          phone\n          is_active\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Profile/Profile.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "updateTeamMemberRole($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateTeamMemberRole(\n    input: {teamID: $teamID, userID: $userID, roleCode: $roleCode}\n  ) {\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n    teamID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "SendChatMessage($orderId: ID!, $messageInput: ChatMessageInput!)", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/ChatWithCustomer/useChatScreen.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteNode($id: Int)", "content": "{\n    delete_nodes(where: { id: { _eq: $id } }) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "subscription", "name": "", "content": "{\n          posts {\n            id\n            slug\n            description\n            imgUrl\n            imgAlt\n            author {\n              id\n              name\n            }\n            status\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/gatsby/examples/creating-source-plugins/source-plugin/gatsby-node.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getUserByUsername($username: LowercaseString)", "content": "{\n    user(username: $username) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/user/getUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "LatestDemocracyTreasuryProposalPosts($postType: Int!, $postTopic: Int!, $limit: Int! = 5 )", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            topic: {\n                id: {\n                    _eq: $postTopic\n                }\n            },\n            onchain_link: {\n                onchain_treasury_proposal_id: {\n                    _is_null: false\n                },\n                onchain_motion_id: {\n                    _is_null: true\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_treasury_proposal_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_treasury_proposal_id\n                onchain_treasury_spend_proposal(where: {}) {\n                    id\n                    treasuryStatus(last: 1) {\n                        id\n                        status\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/OnChain/Treasury/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "tokenDayDatas($tokenAddr: String!, $startTime: Int!)", "content": "{\n    tokenDayDatas(\n      first: 1000\n      orderBy: date\n      orderDirection: desc\n      where: { token: $tokenAddr, date_gt: $startTime }\n    ) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "mutation", "name": "deleteUser($updatedUser: UpdatedUser!)", "content": "{\n    updateUser(updatedUser: $updatedUser) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "CreateDirectmessageMutation($input: CreateDirectMessageInput!)", "content": "{\n    createDirectmessage(input: $input) {\n      directmessage {\n        id\n        created\n        receiver {\n          ...UserLabel_user\n        }\n      }\n    }\n  }\n  ${UserLabel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateDirectmessageMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "query", "name": "getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter)", "content": "{\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }", "metadata": {"commit_hash": "74922f49ceb05f6fc38a0a785d33676c737f67a6", "file": "teams/18-Avault/src/avault-shiden-web/src/state/predictions/helpers.ts", "repo": "parity-asia_hackathon-2022-summer"}}, {"type": "query", "name": "Simple", "content": "{\n        field @storage(if: true)\n        user @client\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getCurrentUser", "content": "{\n      currentUser {\n        id,\n        terms\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/Terms.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "query", "name": "GetMovie($movieTitle: String)", "content": "{\n    getMovie(filter: { title: $movieTitle }) {\n      title\n      tagline\n      released\n      actors {\n        name\n      }\n      directors {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo-neo4j-graphql/pages/movie/[title].js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "GetUser($username: String!)", "content": "{\n    user(username: $username) {\n      id\n      __typename\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/testing/mocking/__tests__/MockedProvider.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Otp/Phone/usePhoneOtp.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateOptions($optionInput:CreateOptionInput)", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    options{\n      _id\n      title\n      description\n      price\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "ProposalPostAndComments($id: Int!)", "content": "{\n  posts(where: {onchain_link: {onchain_proposal_id: {_eq: $id}}}) {\n    ...proposalPost\n  }\n}\n    ${ProposalPostFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getAppData @client", "content": "{\n    globalError\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/App.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "createMSA($input: inputMSA!)", "content": "{\n    createMSA(input: $input) {\n      ...MSA_ATTRIBUTES\n    }\n  }\n  ${MSA_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/msa.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "CreateAddons($addonInput:[AddonInput])", "content": "{\n  createAddons(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "ItemImportClient(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    itemImportClient(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_import_client.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "query", "name": "transactions($user: Bytes!)", "content": "{\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}}, {"type": "query", "name": "GetUser($first: Int)", "content": "{\n        user(first: $first) {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/queries/lifecycle.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "($apiId : ID!)", "content": "{\n    deleteEventDefinition(\n      id: $apiId\n    ) {\n      id\n    }}", "metadata": {"commit_hash": "e6d9b79197464112cbebeee76cf596345acc67b3", "file": "modules/app-connector/src/server/compass/api.ts", "repo": "kyma-incubator_varkes"}}, {"type": "mutation", "name": "ProductVariantCreateDraftOrder($input: CreateDraftedOrderInput!)", "content": "{\n    createDraftedOrder(input: $input) {\n      id\n      ...OrderFragment_Order\n    }\n  }\n  ${OrderFragment_Order}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "($handle: String!)", "content": "{\n    shop {\n        productByHandle(handle: $handle) {\n            variants(first: 1) {\n                edges {\n                    node {\n                        availableForSale\n                    }\n                }\n            }\n        }\n    }\n}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/templates/product.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @include(if: \"string\")\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/directives.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "($skip: Float!, $limit: Float!)", "content": "{\n        articles(other: {skip: $skip, take: $limit, order: {id: \"DESC\"}}) {\n            id\n            name\n            description\n            content\n            imageURL\n            user {\n                id\n                username\n                look\n            }\n        }\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/fetch-articles.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "query", "name": "events($user: Bytes!, $pair: Bytes!)", "content": "{\n    mints(where: { to: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n    burns(where: { sender: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          __typename\n          ...person\n        }\n      }\n\n      fragment person on PeopleConnection {\n        people {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/fragments.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "cosmosTransactions($address: String!, $startingPage: Float, $pageSize: Float)", "content": "{\n  cosmosTransactions(address: $address, startingPage: $startingPage, pageSize: $pageSize) {\n    page\n    limit\n    data {\n      hash\n      height\n      log {\n        code\n        message\n        success\n        log\n        msg_index\n      }\n      gaswanted\n      gasused\n      memo\n      fees {\n        amount {\n          denom\n          amount\n        }\n        gas\n      }\n      tags {\n        key\n        value\n      }\n      msgs {\n        type\n        value {\n          ... on MsgSend {\n            amounts {\n              denom\n              amount\n            }\n            to_address\n            from_address\n          }\n          ... on MsgVote {\n            proposal_id\n            voter\n            option\n          }\n          ... on MsgDelegate {\n            amount {\n              denom\n              amount\n            }\n            delegator_address\n            validator_address\n          }\n          ... on MsgSubmitProposal {\n            title\n            description\n            proposal_type\n            proposer\n            initial_deposit {\n              denom\n              amount\n            }\n          }\n          ... on MsgBeginRedelegate {\n            amount {\n              denom\n              amount\n            }\n            delegator_address\n            validator_src_address\n            validator_dst_address\n          }\n          ... on MsgModifyWithdrawAddress {\n            withdraw_address\n            validator_address\n          }\n          ... on MsgBeginRedelegateLegacy {\n            shares_amount\n            delegator_address\n            validator_src_address\n            validator_dst_address\n          }\n          ... on MsgWithdrawDelegationReward {\n            delegator_address\n            validator_address\n          }\n          ... on MsgParameterChangeProposal {\n            content {\n              type\n              value {\n                title\n                description\n              }\n            }\n            proposer\n            initial_deposit {\n              denom\n              amount\n            }\n          }\n          ... on MsgWithdrawValidatorCommission {\n            validator_address\n          }\n        }\n      }\n      timestamp\n      chain\n      events {\n        type\n        attributes {\n          key\n          value\n        }\n      }\n    }\n    moreResultsExist\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "query", "name": "AllDemocracyProposalPosts($postType: Int!, $postTopic: Int!, $limit: Int! = 5 )", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            topic: {\n                id: {\n                    _eq: $postTopic\n                }\n            },\n            onchain_link: {\n                onchain_proposal_id: {\n                    _is_null: false\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_proposal_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_proposal_id\n                onchain_proposal(where: {}) {\n                    id\n                    proposalStatus(last: 1) {\n                        id\n                        status\n                    }\n                    preimage {\n                        id\n                        method\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n    ${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Proposals/ProposalsContainer/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "forumPostsAndTagsPage($pageSize:Int = 20, $cursor: Int = 0, $search: String = \"\", $tags: [String] = [])", "content": "{\n    ${forumPostsPage}\n    ${forumTags}\n  }", "metadata": {"commit_hash": "e6e1bfc0a0da61eebccb78abd0c86c4564b47636", "file": "src/graphql/forum.js", "repo": "louisryoung_svelte-sapper-graphql"}}, {"type": "query", "name": "cosmosTransactions($address: String!, $startingPage: Float, $pageSize: Float)", "content": "{\n  cosmosTransactions(address: $address, startingPage: $startingPage, pageSize: $pageSize) {\n    page\n    limit\n    data {\n      hash\n      height\n      log {\n        code\n        message\n        success\n        log\n        msg_index\n      }\n      gaswanted\n      gasused\n      memo\n      fees {\n        amount {\n          denom\n          amount\n        }\n        gas\n      }\n      tags {\n        key\n        value\n      }\n      msgs {\n        type\n        value {\n          ... on MsgSend {\n            amounts {\n              denom\n              amount\n            }\n            to_address\n            from_address\n          }\n          ... on MsgVote {\n            proposal_id\n            voter\n            option\n          }\n          ... on MsgDelegate {\n            amount {\n              denom\n              amount\n            }\n            delegator_address\n            validator_address\n          }\n          ... on MsgSubmitProposal {\n            title\n            description\n            proposal_type\n            proposer\n            initial_deposit {\n              denom\n              amount\n            }\n          }\n          ... on MsgBeginRedelegate {\n            amount {\n              denom\n              amount\n            }\n            delegator_address\n            validator_src_address\n            validator_dst_address\n          }\n          ... on MsgModifyWithdrawAddress {\n            withdraw_address\n            validator_address\n          }\n          ... on MsgBeginRedelegateLegacy {\n            shares_amount\n            delegator_address\n            validator_src_address\n            validator_dst_address\n          }\n          ... on MsgWithdrawDelegationReward {\n            delegator_address\n            validator_address\n          }\n          ... on MsgParameterChangeProposal {\n            content {\n              type\n              value {\n                title\n                description\n              }\n            }\n            proposer\n            initial_deposit {\n              denom\n              amount\n            }\n          }\n          ... on MsgWithdrawValidatorCommission {\n            validator_address\n          }\n        }\n      }\n      timestamp\n      chain\n      events {\n        type\n        attributes {\n          key\n          value\n        }\n      }\n    }\n    moreResultsExist\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "mutation", "name": "submitManuscript($data: ManuscriptInput!)", "content": "{\n    updateManuscript(data: $data) {\n      acknowledgements\n      authors {\n        affiliations\n        credit\n        email\n        name\n        submittingAuthor\n        WBId\n      }\n      comments\n      communicationHistory {\n        content\n        timestamp\n        user {\n          id\n          username\n        }\n      }\n      dataType\n      decisionLetter\n      disclaimer\n      funding\n      geneExpression {\n        antibodyUsed\n        backboneVector {\n          name\n          WBId\n        }\n        coinjected\n        constructComments\n        constructionDetails\n        detectionMethod\n        dnaSequence {\n          name\n          WBId\n        }\n        expressionPattern {\n          name\n          WBId\n        }\n        fusionType {\n          name\n          WBId\n        }\n        genotype\n        injectionConcentration\n        inSituDetails\n        integratedBy {\n          name\n          WBId\n        }\n        observeExpression {\n          certainly {\n            certainly {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          partially {\n            partially {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          possibly {\n            possibly {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          not {\n            not {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n        }\n        reporter {\n          name\n          WBId\n        }\n        species {\n          name\n          WBId\n        }\n        strain\n        transgeneName\n        transgeneUsed {\n          name\n          WBId\n        }\n        utr {\n          name\n          WBId\n        }\n        variation {\n          name\n          WBId\n        }\n      }\n      id\n      image {\n        name\n        url\n      }\n      imageCaption\n      laboratory {\n        name\n        WBId\n      }\n      methods\n      patternDescription\n      reagents\n      references\n      status {\n        decision {\n          accepted\n          rejected\n          revise\n        }\n        scienceOfficer {\n          approved\n          pending\n        }\n        submission {\n          initial\n          datatypeSelected\n          full\n        }\n      }\n      suggestedReviewer {\n        name\n        WBId\n      }\n      title\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/submitManuscript.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "people", "content": "{\n          allPeople {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/ssr/getDataFromTree.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "MapActiveImportServer(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n    $mapName: String!\n    $activeName: String!\n  )", "content": "{\n    mapActiveImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n      mapName: $mapName\n      activeName: $activeName\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/mapactive_import_server.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "query", "name": "oAuthClients($namespace: String!)", "content": "{\n    oAuth2Clients(namespace: $namespace) {\n      name\n      error {\n        code\n        description\n      }\n      spec {\n        secretName\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "aggSearch", "content": "{\n          searchPosts(aggregates: [{ name: \"Terms\", type: terms, field: secret }]) {\n            aggregateItems {\n              name\n              result {\n                ... on SearchableAggregateBucketResult {\n                  buckets {\n                    doc_count\n                    key\n                  }\n                }\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "mut($in: Array!)", "content": "{\n            mut(inline: [1, 2], variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($id: Int!, $content: InputContent!)", "content": "{\n  editContent(id: $id, content: $content) {\n    id,\n    slug,\n    title,\n    body,\n    language,\n    payload,\n    fields {\n      id,\n      name,\n      value,\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content-autocomplete/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "CreateOrder($orderItems: [OrderItemInput!])", "content": "{\n    order(items: $orderItems) {\n      id,\n      items {\n        coffee { id, name, price }\n        quantity\n      }\n    } \n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlMutations.js", "repo": "hashicorp_learn-terraform-preview-environment"}}, {"type": "query", "name": "GetClientData($id: ID)", "content": "{\n        clientEntity(id: $id) @client(always: true) {\n          id\n          title\n          titleLength @client(always: true)\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($admin: InputAdmin!)", "content": "{\n  createAdmin(admin: $admin) {\n    id,\n    username,\n    first_name,\n    last_name,\n    username,\n    payload,\n    permissions,\n    chatbotIds,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/admins/hooks/admins.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$email:String!)", "content": "{\n    resetPassword(password:$password,email:$email){\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/ForgotPassword/useResetYourPassword.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "", "content": "{ chickens { id inCoop }}", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/readFromStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "", "content": "{\n        testResults {\n          id\n          output {\n            ... on Status {\n              stdout\n            }\n            ... on FAILING {\n              stderr\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/fragmentMatcher.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "signUp($name: String, $lastname: String, $email: String!, $password: String!)", "content": "{\n  signUp(\n    input: {\n      name: $name\n      lastname: $lastname\n      email: $email\n      password: $password\n    }\n  ) {\n    name\n    lastname\n    email\n  }\n}", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/postwork/bedulives-frontend/src/page/Signup.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "query", "name": "tokenHourDatas($startTime: Int!, $skip: Int!, $address: Bytes!)", "content": "{\n    tokenHourDatas(\n      first: 100\n      skip: $skip\n      where: { token: $address, periodStartUnix_gt: $startTime }\n      orderBy: periodStartUnix\n      orderDirection: asc\n    ) {\n      periodStartUnix\n      high\n      low\n      open\n      close\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/tokens/priceData.ts", "repo": "croco-finance_frontend-v3"}}, {"type": "query", "name": "($id: ID)", "content": "{\n    blogPost(where: { id: $id }) {\n      title\n      post\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/a-whole-bunch-o-gatsby-templates/gatsby-1/examples/using-multiple-providers/src/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "ejes", "content": "{\n    ejes {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createSegmentRule($segmentId: ID!, $input: NewSegmentRule!)", "content": "{\n        createSegmentRule(segmentId: $segmentId, input: $input) {\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "subscription", "name": "SubscriptionOrder($id:String!)", "content": "{\n    subscriptionOrder(id:$id){\n        _id\n        orderStatus\n        rider{\n            _id\n        }\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/DispatchRestaurant.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "RemoveTablePermission($tableUri: String!, $userName: String!)", "content": "{\n      removeTablePermission(tableUri: $tableUri, userName: $userName)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/removeTablePermission.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "PairReserves($token0: String!, $token1: String!)", "content": "{\n    pairs(where: { token0: $token0, token1: $token1 }) {\n      reserve0\n      reserve1\n    }\n  }", "metadata": {"commit_hash": "8bcfc4591ba8c5fb2d79e2399259bdee980e81bb", "file": "src/v2/apollo/queries.ts", "repo": "Uniswap_api-deprecated"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n        _id\n        title\n        discount\n        enabled\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "FetchUsers", "content": "{\n    allUsers {\n      id\n      displayName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/EditStory.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "generateNewResetPasswordTokenMutation($email: String!)", "content": "{\n    generateNewResetPasswordToken(email: $email)\n  }", "metadata": {"commit_hash": "281d357865d26cb238f40855bc145a25f5c37f7d", "file": "frontend/src/common/Dialogs/ResetPasswordDialog/constants.js", "repo": "Kichiyaki_gqlgen-nextjs-postgres-starter"}}, {"type": "query", "name": "Simple", "content": "{\n        keep\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        field @storage(if: true)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "AllPeople", "content": "{\n        people {\n          id\n          name\n        }\n        ...PeopleTypes\n      }\n      fragment PeopleTypes on Query {\n        __type(name: \"Person\") {\n          name\n          kind\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/fragmentMatcher.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "increaseUserExperience($input: ExperienceUpdateInput!)", "content": "{\n      increaseUserExperience(input: $input) {\n        ...experienceFields\n      }\n    }\n    ${EXPERIENCE_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/experience.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "doIt$", "content": "{declareArgumentVariables(mutationArgs, args)} {\n    ${mutationName}${argumentVariables(mutationArgs, args)} {\n      ${findMutationType(schema, mutationName).fields.filter(isScalar).map(field => field.name).join(\", \")}\n    }\n  }", "metadata": {"commit_hash": "b2448fceb3ff9bfe3ffbb6e9f553694e6c6aac38", "file": "src/graphql_utils.js", "repo": "launchscout_graphql-admin-react"}}, {"type": "mutation", "name": "sendSlackInvites($input: SendSlackInvitesInput!)", "content": "{\n    sendSlackInvites(input: $input) {\n      ...communityInfo\n      slackSettings {\n        teamName\n        isConnected\n        hasSentInvites\n        memberCount\n        invitesSentAt\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/sendSlackInvites.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "($name: String!)", "content": "{\n    tag(name: $name) {\n      description\n      name\n      taggings {\n        id\n        description\n        on\n        level\n        person: target {\n          ... on Person {\n            id\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteFood(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "query", "name": "", "content": "{\n        records {\n          id\n          __typename\n        }\n        ...QueryFragment\n      }\n\n      fragment QueryFragment on Query {\n        records {\n          name\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "searchPlugin", "content": "{\n        search @pdbPlugin @wrongplugin(query: \"bob\", fields: [\"name\"]) {\n          rows {\n            id\n            score\n          }\n          total_rows\n        }\n      }", "metadata": {"commit_hash": "0984105b45bada32b8c0b0ac70a6847570781221", "file": "src/resolvers/queries/plugin/plugin.spec.ts", "repo": "mattjennings_apollo-link-pouch"}}, {"type": "mutation", "name": "CreateSubmission", "content": "{\n    createSubmission {\n      id\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/createSubmission.js", "repo": "PREreview_PREreview-2"}}, {"type": "query", "name": "($id: Int!)", "content": "{\n    Post(where: { id: { _eq: $id } }) {\n      id\n      caption\n      created_at\n      url\n      User {\n        avatar\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "7907866ee41941a96b937dd6e34724a112ce5298", "file": "src/components/Post.js", "repo": "abhi40308_instagram-clone"}}, {"type": "query", "name": "Report($year: Int!, $month: Int!)", "content": "{\n  report(year: $year, month: $month) {\n    total_matches\n    total_players\n    most_matches {\n      count\n      user {\n        platform_id\n        id\n        name\n        person {\n          id\n          name\n          country\n        }\n      }\n    }\n\t\tpopular_maps {\n      rank\n      map {\n        name\n      }\n      count\n      percent\n    }\n    rankings_1v1: rankings(platform_id: \"de\", ladder_id: 3) {\n      rank\n      user {\n        id\n        platform_id\n        name\n        person {\n          id\n          name\n          country\n        }\n      }\n      rating\n      change\n    }\n    rankings_tg: rankings(platform_id: \"de\", ladder_id: 4) {\n      rank\n      user {\n        id\n        name\n        platform_id\n        person {\n          id\n          name\n          country\n        }\n      }\n      rating\n      change\n    }\n    improvement_1v1: most_improvement(platform_id: \"voobly\", ladder_id: 131) {\n      user {\n        id\n        platform_id\n        name\n        person {\n          name\n        }\n      }\n      min_rate\n      max_rate\n      diff_rate\n      count\n      wins\n      losses\n    }\n    improvement_tg: most_improvement(platform_id: \"voobly\", ladder_id: 132) {\n      user {\n        id\n        platform_id\n        name\n        person {\n          name\n        }\n      }\n      min_rate\n      max_rate\n      diff_rate\n      count\n      wins\n      losses\n    }\n\t\tlongest_matches {\n      id\n      type\n      diplomacy_type\n      team_size\n      map_name\n      duration\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Report.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "mutation", "name": "start($id: ID!)", "content": "{\n        start(field: $id) @client {\n          field\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Simple($variable: String!)", "content": "{\n        field(usingVariable: $variable) {\n          child\n          foo\n        }\n        network\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "($id: ID!)", "content": "{\n        getPostPrivateIAM(id: $id) {\n          id\n          title\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthV2TransformerWithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "", "content": "{\n            name\n          }\n\n          query {\n            address\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/readFromStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "", "content": "{ __typename }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "(\n    $title: String!\n    $notes: String\n    $staff: String!\n    $date: String!\n    $startTime: String!\n    $endTime: String!\n    $duration: Int!\n    $allDay: Boolean\n    $blockTime: Boolean\n  )", "content": "{\n    addPersonalEvent(\n      title: $title\n      notes: $notes\n      staff: $staff\n      date: $date\n      startTime: $startTime\n      endTime: $endTime\n      duration: $duration\n      allDay: $allDay\n      blockTime: $blockTime\n    ) {\n      title\n      notes\n      staff\n      date\n      startTime\n      endTime\n      duration\n      allDay\n      blockTime\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/addPersonalEventMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "query", "name": "User", "content": "{\n  user {\n    userId\n    email\n  }\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "SearchCompanies($text: String!, $companyId: ID)", "content": "{\n    searchCompanies(text: $text, companyId: $companyId) {\n      users {\n        id\n        fullName\n        profileUrl\n        companies {\n          id\n          name\n          logoUrl\n        }\n      }\n      companies {\n        id\n        name\n        logoUrl\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/modules/company/components/FormPanel/components/CompanyForm.tsx", "repo": "DoBestMan_PrepDD"}}, {"type": "query", "name": "", "content": "{\n                          libraries {\n                            id\n                            name\n                          }\n                        }", "metadata": {"commit_hash": "89dd6d9be2c03695498196ef118e7054874db3fa", "file": "pages/addbot.tsx", "repo": "pikokr_uniquebots"}}, {"type": "query", "name": "GetAllUsersByRoomId($roomId: Float!)", "content": "{\n      getAllUsersByRoomId(roomId: $roomId) {\n        username\n        firstname\n        lastname\n        avatarUrl\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "user($id: String)", "content": "{\n  user(slug: $id) {\n    id\n    accessGrants(withPast: true) {\n      id\n      status\n      createdAt\n      beginBefore\n      voucherCode\n      beginAt\n      endAt\n      revokedAt\n      invalidatedAt\n      granter {\n        id\n        email\n        name\n      }\n      campaign {\n        id\n        title\n        endAt\n      }\n      events {\n        createdAt\n        event\n      }\n    }\n    accessCampaigns(withPast: true) {\n      id\n      title\n      endAt\n      slots {\n        total\n        free\n        used\n      }\n      grants(withRevoked: true, withInvalidated: true) {\n        id\n        status\n        createdAt\n        beginBefore\n        voucherCode\n        beginAt\n        endAt\n        revokedAt\n        invalidatedAt\n        email\n        recipient {\n          id\n          email\n          name\n        }\n        events {\n          createdAt\n          event\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Access.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "sortTaskGroup($tasks: [TaskPositionUpdate!]!, $taskGroupID: UUID!)", "content": "{\n  sortTaskGroup(input: {taskGroupID: $taskGroupID, tasks: $tasks}) {\n    taskGroupID\n    tasks {\n      id\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "($slug: String!)", "content": "{\n    blogs(where: { slug: $slug, published: true }) {\n      title\n      content\n      data\n      slug\n\n      image {\n        url\n      }\n\n      taxonomies {\n        name\n      }\n\n      seo {\n        title\n        image {\n          url\n        }\n        type\n        description\n        locale\n      }\n\n      hero {\n        content\n        url\n        media {\n          url\n        }\n      }\n\n      comments {\n        user {\n          username\n        }\n\n        message\n        likes\n      }\n    }\n  }", "metadata": {"commit_hash": "ea3383ad63bdf8fb7ce94efc2a5a756e195c708d", "file": "packages/client/lib/gql/blog/post.ts", "repo": "learnstrapi_boilerplate"}}, {"type": "mutation", "name": "(\n    $firstName: String\n    $lastName: String\n    $email: String\n    $phoneNumber: String\n    $password: String\n  )", "content": "{\n    updateClientInformation(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      password: $password\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateClientInformationMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "query", "name": "CardTransfers($tokenId: String!, $sort: CardTransfersSort!)", "content": "{\n    cardTransfers(filter: { tokenId: $tokenId }, sort: $sort) {\n      id\n      fromOwner {\n        user {\n          slug\n          username\n        }\n      }\n      toOwner {\n        user {\n          slug\n          username\n          profile {\n            pictureUrl(derivative: \"width=128\")\n            fallbackUrl(derivative: \"width=128\")\n          }\n        }\n      }\n      price\n      kind\n      date\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/CardTransfers.ts", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        field\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteManyEjes($where: EjeWhereInput!)", "content": "{\n    deleteManyEjes(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "PauseModal_Query", "content": "{\n    ...PauseReasonPupUpFragment_Query\n  }\n  ${PauseReasonPupUpFragment_Query}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Components/Pause/PauseModal.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "setName", "content": "{\n          name\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/ObservableQuery.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "MoveAudioQueueItem($id: ID!, $sequence: Int!)", "content": "{\n    audioQueueItems: moveAudioQueueItem(id: $id, sequence: $sequence) {\n      ...AudioQueueItemFragment\n    }\n  }\n  ${AudioQueueItemFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Audio/graphql/AudioQueueHooks.ts", "repo": "republik_plattform"}}, {"type": "query", "name": "B", "content": "{\n    a\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/presets/near-operation-file/tests/fixtures/issue-6439.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "HideBlockedCustomEventDefinitions($eventDefinitionIds: [String]!)", "content": "{\n\t\thideBlockedEventDefinitions(\n\t\t\tblockedEventDefinitionIds: $eventDefinitionIds\n\t\t) {\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\tlastSeenDate\n\t\t\tlastSeenURL\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/definitions/events/queries/BlockedCustomEventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "deleteTeamMember($teamID: UUID!, $userID: UUID!, $newOwnerID: UUID)", "content": "{\n    deleteTeamMember(input: { teamID: $teamID, userID: $userID, newOwnerID: $newOwnerID }) {\n      teamID\n      userID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/deleteTeamMember.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "pairs($tokenAddress: ID!)", "content": "{\n    pairs(where: { id: $tokenAddress }) {\n      token0Price\n      token1Price\n      totalSupply\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "68a9441d0362624484c279c5ab7615d73f1ad775", "file": "src/erc20/erc20.controller.ts", "repo": "DoBestMan_Bondswap-backend"}}, {"type": "mutation", "name": "registerAvatar($avatar: String!)", "content": "{\n    registerNewAvatar(input: { avatar_: $avatar }) {\n      profile {\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "AdjustItemQuantity($id: ID!, $quantity: Int!)", "content": "{\n    adjustItemQuantity(orderItemId: $id, quantity: $quantity) {\n      ...ActiveOrder\n    }\n  }\n  ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/components/ShoppingCart/ShoppingCart.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}}, {"type": "query", "name": "($first: Int!)", "content": "{\n    pokemons(first: $first) {\n      id\n      number\n      name\n      image\n      types\n    }\n  }", "metadata": {"commit_hash": "a6c8486027a835fa38a246823d4862b6c9721148", "file": "src/services/apollo/gqlQueries.js", "repo": "RianTavares_pokedex"}}, {"type": "subscription", "name": "OnCreateMember", "content": "{\n        onCreateMember {\n          id\n          name\n          createdAt\n          updatedAt\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "", "content": "{ createComment(input: { stuff: \"Yay\", stuff: \"No\" }) { story { id } } }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "aproveArtist(\n    $event_id: String!\n    $artist_id: String!\n  )", "content": "{\n    aproveArtist(\n      event_id: $event_id\n      artist_id: $artist_id\n    )\n    {\n      ${eventType}\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event-curatorship/eventCuratorship.mutations.js", "repo": "midianinja_som-web"}}, {"type": "query", "name": "getCurrency($currentPage: Int, $searchList: String)", "content": "{\n        getCurrency(currentPage: $currentPage, searchList:$searchList){\n          count\n          currencyList{\n              id\n              symbol\n              isEnable\n              isPayment\n              isBaseCurrency\n          }\n        }\n      }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Currency/updateCurrency.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "query", "name": "Four", "content": "{\n          four\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deletePago($where: PagoWhereUniqueInput!)", "content": "{\n    deletePago(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "", "content": "{\n      cars {\n        make\n        model\n        vin\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "CreatePhoto(\n          $input: CreatePhotoInput!\n          $condition: ModelPhotoConditionInput\n      )", "content": "{\n          createPhoto(input: $input, condition: $condition) {\n              id\n              albumId\n              owner\n              bucket\n              fullsize {\n                  key\n                  width\n                  height\n              }\n              thumbnail {\n                  key\n                  width\n                  height\n              }\n              album {\n                  id\n                  name\n                  owner\n              }\n          }\n      }", "metadata": {"commit_hash": "856a02a2c036a2e9f8222da10b1d79c45d5c5ed4", "file": "amplify/backend/function/S3Trigger984fb593/src/reference-index.js", "repo": "aws-samples_lambda-refarch-imagerecognition"}}, {"type": "query", "name": "getFriendList($userId: ID!)", "content": "{\n\t\tgetFriendList( userId: $userId){\n\t\t\tid\n\t\t\tusername\n\t\t\temail\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/queries.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "subscription", "name": "onCommentAdded($repoFullName: String!)", "content": "{\n          commentAdded(repoFullName: $repoFullName) {\n            id\n            content\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n          }\n        }\n      }\n\n      fragment friendFields on User {\n        firstName\n        lastName\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "pendingAppSignIn", "content": "{\n    pendingAppSignIn {\n      title\n      body\n      expiresAt\n      verificationUrl\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/NativeApp/MessageSync.js", "repo": "republik_plattform"}}, {"type": "query", "name": "myNewsletterSettings($onlyName: NewsletterName)", "content": "{\n    me {\n      id\n      newsletterSettings {\n        id\n        status\n        subscriptions(name: $onlyName) {\n          ...NewsletterInfo\n        }\n      }\n    }\n  }\n  ${newsletterFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/NewsletterSubscriptions/index.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getSite($siteID: ID!)", "content": "{\n\t\tsite(id: $siteID) {\n\t\t\tid\n\t\t\tstatus\n\t\t}\n\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/renderer/localClient/queries.ts", "repo": "getflywheel_local-addon-backups"}}, {"type": "query", "name": "searchThreads(\n    $queryString: String!\n    $type: SearchType!\n    $filter: SearchFilter\n  )", "content": "{\n    search(queryString: $queryString, type: $type, filter: $filter) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on Thread {\n              ...threadInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/search/searchThreads.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Posts ($userId: ID!, $after: String)", "content": "{\n    posts (first: ${POSTS_PER_PAGE}, after: $after, filter: { user: { value: $userId } }, orderBy: [{ createdAt: DESC }]) {\n      ...PostList\n    }\n  }\n  ${PostList.fragments.postList}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/lists/UserPostList.tsx", "repo": "marian2js_finsharing"}}, {"type": "query", "name": "somethingelse($variable: Boolean)", "content": "{\n          allPeople(first: 1, yetisArePeople: $variable) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "cancelMembership($id: ID!, $reason: String)", "content": "{\n    cancelMembership(id: $id, reason: $reason) {\n      id\n      active\n      renew\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Manage.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "UpdateTeam($sport: String!, $teamID: String!, $name: String!, $description: String!)", "content": "{\n        updateTeam(sport: $sport, teamID: $teamID, name: $name, description: $description)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n            vote(repoFullName: $repoFullName, type: $type) {\n              score\n              id\n              vote {\n                vote_value\n              }\n            }\n          }", "metadata": {"commit_hash": "7329a93316e283725f01eb3a8905af1f84aae288", "file": "client/Feed.ts", "repo": "it-efrem_Apollo-Angular"}}, {"type": "query", "name": "getCouncilMembers", "content": "{\n        councils(last: 1){\n            members {\n                id\n                address\n            }\n        }\n  }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/GovernanceSideBar/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getCommunityChannels($id: ID)", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunityChannelConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{ stories { id comments { text } } }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "loadBots($max: Int!, $ownUsername: String!, $userId: String!, $after: String, $relationship: String!)", "content": "{\n            user(id: $userId) {\n              id\n              bots(first: $max after: $after relationship: $relationship) {\n                totalCount\n                edges {\n                  cursor\n                  node {\n                    ${BOT_PROPS}\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "getDMNotifications($after: String)", "content": "{\n    directMessageNotifications(after: $after) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...notificationInfo\n        }\n      }\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/notification/getDirectMessageNotifications.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n        makeListPrivate(id: \"5\") {\n          id\n          isPrivate\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "", "content": "{\n            callContract(contractInstruction: {originatorPk: \"${originatorPk}\", contractAddress: \"${contractAddress}\", method: \"${method}\", methodArguments: ${JSON.stringify(methodArguments)}})\n        }", "metadata": {"commit_hash": "ccef4dba46db20add0010c4267345c8e726fd0bd", "file": "src/client/Client.ts", "repo": "input-output-hk_smart-contract-backend"}}, {"type": "mutation", "name": "deleteTaskChecklistItem($taskChecklistItemID: UUID!)", "content": "{\n    deleteTaskChecklistItem(input: { taskChecklistItemID: $taskChecklistItemID }) {\n      ok\n      taskChecklistItem {\n        id\n        taskChecklistID\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/deleteTaskChecklistItem.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "appendPeriod(\n    $id: ID!\n    $duration: Int!\n    $durationUnit: MembershipTypeInterval!\n  )", "content": "{\n    appendPeriod(id: $id, duration: $duration, durationUnit: $durationUnit) {\n      id\n      periods {\n        id\n        beginDate\n        endDate\n        isCurrent\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/AppendPeriod.js", "repo": "republik_plattform"}}, {"type": "query", "name": "moloches($skip: Int)", "content": "{\n    moloches(orderBy: summoningTime, first: 1000, skip: $skip) {\n      id\n      version\n      totalShares\n      guildBankAddress\n      summoningTime\n      summoner\n      guildBankBalanceV1\n      members(where: { exists: true }) {\n        id\n      }\n      proposals {\n        id\n        cancelled\n        createdAt\n        details\n        didPass\n        lootRequested\n        processed\n        sharesRequested\n        tributeOffered\n        tributeToken\n      }\n      tokens {\n        id\n      }\n      depositToken {\n        tokenAddress\n        symbol\n        decimals\n      }\n      tokenBalances(where: { guildBank: true }) {\n        id\n        tokenBalance\n        guildBank\n        token {\n          decimals\n          tokenAddress\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/explore-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "poolHourData($pool: String, $startTimestamp: Int, $endTimestamp: Int)", "content": "{\n    poolHourDatas(\n      first: 1000\n      where: {\n        pool: $pool\n        periodStartUnix_gte: $startTimestamp\n        periodStartUnix_lte: $endTimestamp\n      }\n      orderBy: periodStartUnix\n      orderDirection: asc\n      subgraphError: allow\n    ) {\n      periodStartUnix\n      volumeUSD\n      tvlUSD\n      feesUSD\n      untrackedVolumeUSD\n      token0Price\n      token1Price\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "mutation", "name": "retryDownload($v: String!)", "content": "{\n    retryDownload(v: $v) {\n      v\n    }\n  }", "metadata": {"commit_hash": "3e951b300431b09ea649f3bb347b11a6a6b9d019", "file": "src/components/Downloads.js", "repo": "opensoars_ytmp3dl-web"}}, {"type": "query", "name": "Uploads", "content": "{\n    uploadFiles {\n      data {\n        id\n        attributes {\n          url\n          name\n          ext\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Upload.ts", "repo": "h3lpkey_fibber"}}, {"type": "subscription", "name": "ProductAdded", "content": "{\n  productAdded {\n    id\n    name\n    description\n    image\n    price\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "query", "name": "users", "content": "{\n    user {\n        _id\n        username\n        score\n        createdAt\n        lastModified\n    }\n}", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/queries.js", "repo": "Morgoth27_pewpew_spaceman"}}, {"type": "mutation", "name": "(\n      $target: NotificationTargets!\n      $type: NotificationTypes!\n      $accountId: ID!\n      $balance: Float!\n      $date: AWSDateTime!\n      $delta: Float!\n      $description: String!\n      $id: ID!\n    )", "content": "{\n      notifyTransactionCreated(\n        data: {\n          target: $target\n          type: $type\n          accountId: $accountId\n          transaction: {\n            balance: $balance\n            date: $date\n            delta: $delta\n            description: $description\n            id: $id\n          }\n        }\n      ) {\n        transaction {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "e5ea650d524a01b7811e2e8e6daa8b7a6cdcd5ab", "file": "src/shared/infra/appsync/templates/Mutation.notifyTransactionCreated.e2e.ts", "repo": "s4nt14go_white-label"}}, {"type": "mutation", "name": "($location: LocationInput!)", "content": "{\n    createLocation(location: $location) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-event/event.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "loginWithGoogle ($accessToken: String!)", "content": "{\n        loginWithGoogle (accessToken: $accessToken) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/login-with-google.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "mutation", "name": "NewChatScreenMutation($userId: Int!,$currentUserId: Int!)", "content": "{\n    insert_chat(objects: [{\n      owner_id: null,\n      users: {\n        data: [\n          {user_id: $userId},\n          {user_id: $currentUserId}\n        ]\n      }\n    \n    }]) {\n      affected_rows\n      returning {\n        ...chat\n      }\n    }\n  }\n  ${fragments.chat}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/NewChatScreen/index.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "fetchPoolFromTokens($token0: String, $token1: String)", "content": "{\n    pools0: pools(where: { token0: $token0, token1: $token1 }) {\n      id\n      fee\n      token0 {\n        id\n        decimals\n        symbol\n      }\n      token1 {\n        id\n        decimals\n        symbol\n      }\n      sqrtPrice\n      liquidity\n      tick\n      feesUSD\n      untrackedFeesUSD\n    }\n    pools1: pools(where: { token0: $token1, token1: $token0 }) {\n      id\n      fee\n      token0 {\n        id\n        decimals\n        symbol\n      }\n      token1 {\n        id\n        decimals\n        symbol\n      }\n      sqrtPrice\n      liquidity\n      tick\n      feesUSD\n      untrackedFeesUSD\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "stuff(\n        $test: Input =", "content": "{ key1: [\"value\", \"value2\"], key2: { key3: 4 } }\n      ) {\n        allStuff(test: $test) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "GetPairs($pairId: String)", "content": "{\n    pairs(where: { id: $pairId }) {\n      id\n      name\n      token0 {\n        id\n        name\n        symbol\n        derivedUSD\n      }\n      token1 {\n        id\n        name\n        symbol\n        derivedUSD\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/queries/pairs/index.ts", "repo": "BOTDeFi_botdex-frontend"}}, {"type": "query", "name": "shifts", "content": "{\n    shiftDate(where: { userId: { _eq: ${userId} },year: { _eq: ${year} } ,month: { _eq: ${month} }  }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/query.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "query", "name": "Web3", "content": "{\n    web3 {\n      networkId\n      networkName\n      walletType\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Web3.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "getEnvironment($openshiftProjectName: String!, $limit: Int)", "content": "{\n    environment: environmentByOpenshiftProjectName(openshiftProjectName: $openshiftProjectName) {\n      id\n      openshiftProjectName\n      project {\n        id\n        name\n        problemsUi\n        factsUi\n      }\n      backups(limit: $limit) {\n        id\n        source\n        backupId\n        created\n        restore {\n          id\n          status\n          restoreLocation\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/EnvironmentWithBackups.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "query", "name": "getAllVehicles($currentPage: Int)", "content": "{\n                getAllVehicles(currentPage: $currentPage){\n                count\n                vehicleData{\n                    id\n                    vehicleType\n                    vehicleNumber\n                    vehicleName \n                    vehicleStatus\n                    category{\n                        categoryName\n                    }\n                    user{\n                        email\n                        profile{\n                        firstName\n                        }\n                    }\n                }\n                }\n            }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/editVehicle.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "query", "name": "isServiceUniqueNameAvailable($displayName: String!)", "content": "{\n  isServiceUniqueNameAvailable(displayName:$displayName){\n    uniqueName\n    free\n    variants\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "mutation", "name": "AddSleepVariable($name: String!, $emoji: String!, $sleepDate: String!, $custom: Boolean!)", "content": "{\n  addSleepVariable(\n    custom: $custom\n    emoji: $emoji\n    name: $name\n    sleepDate: $sleepDate\n  ) {\n    date\n    variables {\n      name\n      emoji\n      custom\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "ROOT_SELECTOR_QUERY($lang: [AvailableLanguage!])", "content": "{\n        libraries {\n            list {\n                id\n                label(lang: $lang)\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/components/navigator/RootSelector.tsx", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "deleteManyFiles($where: FileWhereInput!)", "content": "{\n      deleteManyFiles(where: $where) {\n        count\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "addPendingCommunityMember($input: AddPendingCommunityMemberInput!)", "content": "{\n    addPendingCommunityMember(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/addPendingCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($user: String!)", "content": "{\n            updateContributorTags(githubUsername: $user) {\n              email\n              github {\n                username\n                contributionCount\n                pullRequests {\n                  id\n                }\n              }\n              shopify {\n                id\n                codes {\n                  code\n                  used\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "store.gatsbyjs.org/src/components/Layout/Layout.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "importPostfinanceCSV($csv: String!)", "content": "{\n    importPostfinanceCSV(csv: $csv)\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "DeleteFood($id:String!,$restaurant:String!,$categoryId:String!)", "content": "{\n        deleteFood(id:$id,restaurant:$restaurant,categoryId:$categoryId){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Food.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "generateNewResetPasswordTokenMutation($email: String!)", "content": "{\n    generateNewResetPasswordToken(email: $email)\n  }", "metadata": {"commit_hash": "281d357865d26cb238f40855bc145a25f5c37f7d", "file": "frontend/src/common/Dialogs/ResetPasswordDialog/constants.js", "repo": "Kichiyaki_gqlgen-nextjs-postgres-starter"}}, {"type": "query", "name": "($literal: Boolean, $value: Int)", "content": "{\n              a: field(literal: true, value: 42)\n              b: field(literal: $literal, value: $value)\n            }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/cache.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Customers($pageInput: PageInput!)", "content": "{\n    customers(pageInput: $pageInput) {\n      pageInfo {\n        limit\n        page\n        hasNext\n        numPages\n      }\n      customers {\n        id\n        firstName\n        lastName\n        orders {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a7f1253a409c83f34852f4674deb2fdde688f48f", "file": "ui/src/graphql/customer.js", "repo": "jkupcho_graphql-talk"}}, {"type": "query", "name": "", "content": "{\n  riders{\n    _id\n    name\n    username\n    password\n    phone\n    available\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Riders.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "query", "name": "surroundingTicks(\n      $poolAddress: String!\n      $tickIdxLowerBound: BigInt!\n      $tickIdxUpperBound: BigInt!\n      $skip: Int!\n    )", "content": "{\n      ticks(\n        subgraphError: allow\n        first: 1000\n        skip: $skip\n        where: { poolAddress: $poolAddress, tickIdx_lte: $tickIdxUpperBound, tickIdx_gte: $tickIdxLowerBound }\n      ) {\n        tickIdx\n        liquidityGross\n        liquidityNet\n        price0\n        price1\n      }\n    }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/pools/tickData.ts", "repo": "21orangehat_upool-listagem"}}, {"type": "query", "name": "($label: String!)", "content": "{\n    openIssues(label: $label) {\n      totalIssues\n      issues {\n        ...GitHubIssueFragment\n      }\n    }\n  }\n  ${GitHubIssueFragment}", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "store.gatsbyjs.org/src/components/Dashboard/OpenIssues.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "query", "name": "todos", "content": "{\n        todos {\n          id\n          name\n          description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "me", "content": "{\n  me {\n    user {\n      id\n      fullName\n      username\n      email\n      bio\n      profileIcon {\n        initials\n        bgColor\n        url\n      }\n    }\n    teamRoles {\n      teamID\n      roleCode\n    }\n    projectRoles {\n      projectID\n      roleCode\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "AllCountries", "content": "{\n    countries @client {\n      code\n      name\n      emoji\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/examples/bundling/no-tree-shaking/rollup-ac3-no-react/src/index.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GetCustomerFitPicItems($fitPicID: ID!)", "content": "{\n    fitPic(where: { id: $fitPicID }) {\n      id\n      image {\n        id\n        url\n      }\n      products {\n        id\n        name\n        brand {\n          id\n          name\n        }\n        images(size: Large) {\n          id\n          url\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/FitPic/ShareFitPicToIG.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "UpdateTimings($id:String!,$openingTimes:[TimingsInput])", "content": "{\n  updateTimings(id:$id,\n    openingTimes:$openingTimes){\n    _id\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Timings.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "OptionPoll($postId: Int!)", "content": "{\n  option_poll(where: {post_id: {_eq: $postId}}) {\n    ...optionPollFields\n  }\n}\n    ${OptionPollFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "celoSystemBalances", "content": "{\n  celoSystemBalances {\n    height\n    goldTokenSupply\n    totalLockedGoldBalance\n    nonVotingLockedGoldBalance\n    totalCeloUSDValue\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "query", "name": "WikiPageQuery($id: ID!)", "content": "{\n      wiki(id: $id) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/containers/WikiPage/WikiContainer.js", "repo": "heyrict_cindy-realtime"}}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field @storage(if: true)\n        other: field @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "(\n      $report_name: String!,\n      $report_desc: String!,\n      $template_name: [String]!,\n      $file_name: [String]!,\n      $project_id: [String]!,\n      $node_id: [String]!,\n      $variable: [String]!,\n      $previous: [String]!,\n      $modified: [String]!,\n      $userId:ID!\n    )", "content": "{\n      addReport(\n        report_name:$report_name\n        report_desc:$report_desc\n        template_name:$template_name\n        file_name:$file_name\n        project_id:$project_id\n        node_id:$node_id\n        variable:$variable\n        previous:$previous\n        modified:$modified\n        userId:$userId\n      ){\n        _id\n        report_name\n        report_desc\n        template_name\n        file_name\n        project_id\n        node_id\n        variable\n        previous\n        modified\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "DoSomething", "content": "{\n        doSomething {\n          time\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useMutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "delete_todo ($todoId: Int)", "content": "{\n    delete_todo(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "removePartner($input: RemovePartnerInput!)", "content": "{\n    removePartner(input: $input) {\n      partner {\n        name\n        address\n        role\n      }\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/partners.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "GetContactNameByEmail($email: String!)", "content": "{\n  contact_ByEmail(email: $email) {\n    id\n    ...ContactNameFragment\n  }\n}\n    ${ContactNameFragmentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "createSqlQuery", "content": "{\n        create_query {\n            success\n            error\n            result {\n                view_id\n                project {\n                    name\n                }\n                path\n                spec {\n                    ... on QuerySpec {\n                        query_text\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-web/create-query-button.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "SAVE_TREE($treeData: TreeInput!)", "content": "{\n        saveTree(tree: $treeData) {\n            id\n            system\n            label\n            behavior\n            libraries {\n                library {\n                    id\n                    label\n                    attributes {\n                        id\n                        label\n                        type\n                        ... on TreeAttribute {\n                            linked_tree {\n                                id\n                            }\n                        }\n                    }\n                }\n                settings {\n                    allowMultiplePositions\n                    allowedAtRoot\n                    allowedChildren\n                }\n            }\n            permissions_conf {\n                libraryId\n                permissionsConf {\n                    permissionTreeAttributes {\n                        id\n                        label\n                    }\n                    relation\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/saveTreeMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "getAllMeetings($beneficiaryID: String!)", "content": "{\n    getIncompleteMeetings: incompleteMeetings(beneficiary: $beneficiaryID) {\n      ...meetingWithOutcomeSetAndAggregates\n    }\n    getMeetings: meetings(beneficiary: $beneficiaryID) {\n      ...meetingWithOutcomeSetAndAggregates\n    }\n  }\n  ${fragmentWithOutcomeSetAndAggregates}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "query", "name": "IntrospectionQuery", "content": "{\n\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "b2448fceb3ff9bfe3ffbb6e9f553694e6c6aac38", "file": "src/introspection_query.js", "repo": "launchscout_graphql-admin-react"}}, {"type": "query", "name": "GetPostgresSettings($appId: uuid!)", "content": "{\n  systemConfig(appID: $appId) {\n    postgres {\n      database\n    }\n  }\n  config(appID: $appId, resolve: true) {\n    id: __typename\n    __typename\n    postgres {\n      version\n    }\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "($contactInput: String!)", "content": "{\n    updateContact(contactInput: $contactInput) {\n      id\n      name\n      contact {\n        id\n        type\n        number\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/contact.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "query", "name": "tokens($value: String, $id: String)", "content": "{\n    asSymbol: tokens(\n      where: { symbol_contains: $value }\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asName: tokens(\n      where: { name_contains: $value }\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/search/index.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteProduct(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REPO/APRESS/pro-react-16/08_-_SportsStore_-_Auth_and_Deployment/sportsstore/src/admin/clientMutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "challengeStatus($in: ChallengeId)", "content": "{\n    challengeStatus(input: $in) {\n      status\n      mrUrl\n      viewCount\n      userId\n      lessonId\n      challengeId\n      diff\n      comment\n      reviewer {\n        id\n        username\n      }\n      user {\n        id\n      }\n      reviewerId\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "query", "name": "getMyListCards($cardIds: [ID!]!, $first: Int!)", "content": "{\n    cards(focus: $cardIds, first: $first) {\n      nodes {\n        id\n        user {\n          id\n          name\n          slug\n        }\n        payload(\n          paths: [\n            \"party\"\n            \"yearOfBirth\"\n            \"nationalCouncil.candidacy\"\n            \"nationalCouncil.votes\"\n            \"nationalCouncil.elected\"\n            \"nationalCouncil.listNumbers\"\n            \"councilOfStates.candidacy\"\n            \"councilOfStates.votes\"\n            \"councilOfStates.elected\"\n            \"councilOfStates.secondBallotNecessary\"\n          ]\n        )\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/MyList.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getVoting($slug: String!)", "content": "{\n    voting(slug: $slug) {\n      id\n      description\n      slug\n      beginDate\n      endDate\n      userSubmitDate\n      userHasSubmitted\n      userIsEligible\n      requireAddress\n      allowEmptyBallots\n      options {\n        id\n        label\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/Voting.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "($loginUser: UserInput)", "content": "{\n    login(user: $loginUser) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        username\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/login.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "DeleteAddon($id:String!,$restaurant:String!)", "content": "{\n        deleteAddon(id:$id,restaurant:$restaurant){\n          _id\n          addons{\n            _id\n            options\n            title\n            description\n            quantityMinimum\n            quantityMaximum\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Addons.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "applicationsForScenario($filter: [LabelFilter!])", "content": "{\n    applications(filter: $filter) {\n      data {\n        name\n        id\n        labels\n        packages {\n          totalCount\n        }\n      }\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}}, {"type": "subscription", "name": "balances", "content": "{\n    balances(where: { account_name: { _eq: \"gaboesquivel\" } }) {\n      account_name\n      amount\n      currency\n      decimals\n    }\n  }", "metadata": {"commit_hash": "f4458b0c525643980ddba1515d369b639adea9cd", "file": "templates/cra/src/views/Wallet.tsx", "repo": "chaingraph_chaingraph-cli"}}, {"type": "query", "name": "SampleQuery", "content": "{\n                stub {\n                    id\n                }\n            }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/utils/__tests__/validateOperation.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "allStates($state: StateInput)", "content": "{\n        allStates(state: $state) {\n        name\n        id\n        short_name\n        }\n    }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/events/events.queries.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "LinkContributionAndProposalAndIntent(\n    $proposal: ID!\n    $citeIntent: ID!\n    $acceptIntent: ID!\n    $modifyIntent: ID!\n  )", "content": "{\n    proposeCite: proposeIntent(publishedIn: $proposal, publishes: $citeIntent) {\n      proposedIntent {\n        id\n      }\n    }\n    proposeAccept: proposeIntent(publishedIn: $proposal, publishes: $acceptIntent) {\n      proposedIntent {\n        id\n      }\n    }\n    proposeModify: proposeIntent(publishedIn: $proposal, publishes: $modifyIntent) {\n      proposedIntent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "query", "name": "SomeQuery", "content": "{\n            stuff {\n              thing\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Submit($id: ID!)", "content": "{\n        submit(id: $id) {\n            id\n            status\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "UserListings($id: ID!, $first: Int, $after: String, $filter: String)", "content": "{\n    marketplace {\n      user(id: $id) {\n        id\n        listings(first: $first, after: $after, filter: $filter) {\n          totalCount\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n            endCursor\n          }\n          nodes {\n            ...basicListingFields\n          }\n        }\n      }\n    }\n  }\n  ${fragments.Listing.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/UserListings.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "", "content": "{\n    CarQuery {\n      cars {\n        nodes {\n          name\n          id\n          latitude\n          longitude\n          status\n          fuel\n          hwId\n          companyName\n          carAdminPhone\n          callTwiml\n          underTest\n          speed\n          locationHistory(last: 10) {\n            nodes {\n              id\n              dateTime\n              latitude\n              longitude\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/queries.js", "repo": "bringauto_fleet"}}, {"type": "subscription", "name": "onCommentAdded($repoFullName: String!)", "content": "{\n    commentAdded(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "searchCommunityMembers(\n    $queryString: String!\n    $type: SearchType!\n    $filter: SearchFilter\n  )", "content": "{\n    search(queryString: $queryString, type: $type, filter: $filter) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on CommunityMember {\n              ...communityMemberInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/search/searchCommunityMembers.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "sellingPlanGroups($productId: ID!)", "content": "{\n        sellingPlanGroups(first: 10) {\n            edges {\n                node {\n                    id\n                    name\n                    appliesToProduct(productId: $productId)\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "admin-extension/AddSellingPlan.tsx", "repo": "mr-perseus_permaculture"}}, {"type": "mutation", "name": "createLinea($data: LineaCreateInput!)", "content": "{\n    createLinea(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/create/linea-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "($commentId: String!)", "content": "{\n        comment (id: $commentId) {\n          id\n          votes\n          viewerVote {\n            id\n            value\n          }\n        }\n      }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/comments/CommentListItem.tsx", "repo": "marian2js_finsharing"}}, {"type": "query", "name": "uniswapDayDatas($startTime: Int!, $skip: Int!)", "content": "{\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      id\n      date\n      totalVolumeUSD\n      dailyVolumeUSD\n      dailyVolumeETH\n      totalLiquidityUSD\n      totalLiquidityETH\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}}, {"type": "query", "name": "getAllPool($offset: Int!)", "content": "{\n    allVInstructorPools(first: 50, offset: $offset, orderBy: CREATED_AT_ASC) {\n      nodes {\n        id\n        thumbnailUrl\n        submissionId\n        createdAt\n        shortComment\n        title\n        animationId\n        avatar\n        endFrame\n        startFrame\n        responseStatus\n        requestStatus\n        latestSubmission\n        username\n        updatedAt\n      }\n      totalCount\n    }\n    currentInstructor {\n      currentlyResponding\n      isTilted\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "addThreadReaction($input: AddThreadReactionInput!)", "content": "{\n    addThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/addThreadReaction.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n      createPost(input: $input) {\n        id\n        title\n        postOwner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "GetMovie($movieTitle: String)", "content": "{\n    getMovie(filter: { title: $movieTitle }) {\n      title\n      tagline\n      released\n      actors {\n        name\n      }\n      directors {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-apollo-neo4j-graphql/pages/movie/[title].js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createOrder($input: CreateOrderInput)", "content": "{\n        createOrder(input: $input) {\n          orderId\n          expectedCollectedTime\n          expectedDeliveredTime\n          sender {\n            userId\n            username\n            firstName\n            lastName\n            email\n            phone\n          }\n          receiver {\n            userId\n            username\n            firstName\n            lastName\n            email\n            phone\n          }\n          sendAddress\n          sendLatLng {\n            latitude\n            longitude\n          }\n          receiveAddress\n          receiveLatLng {\n            latitude\n            longitude\n          }\n          status\n          comments\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/customer/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "query", "name": "member($id: String!)", "content": "{\n    member(id: $id) {\n      id\n      createdAt\n      molochAddress\n      memberAddress\n      shares\n      loot\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "mutation", "name": "runtimeOpenLink($url: String!)", "content": "{\n                runtimeOpenLink(url: $url)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "query", "name": "AllProjectsQuery", "content": "{\n      allProjects {\n        id\n        name\n        environments(type: PRODUCTION) {\n          route\n        }\n      }\n    }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/AllProjects.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "query", "name": "pairDayDatas($timespan: Int!, $pairAddress: ID!)", "content": "{\n    pairDayDatas(\n      first: $timespan\n      orderBy: date\n      orderDirection: desc\n      where: { pairAddress: $pairAddress }\n    ) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n      date\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}}, {"type": "query", "name": "GetGameById($gameId: Int!)", "content": "{\n    getGameById(gameId: $gameId) {\n      categories {\n        categoryName\n        catgId\n        gameId\n      }\n      contestants {\n        gameId\n        login\n        name\n        organization\n        score\n      }\n      emcee\n      gameId\n      title\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/queries.js", "repo": "ralberth_quizshow"}}, {"type": "query", "name": "GetWalletBalances($tokens: [String], $account: String!)", "content": "{\n    currencies(tokens: $tokens) {\n      __typename\n      ... on Currency {\n        id\n        name\n        code\n        priceInUSD\n      }\n      ... on Token {\n        id\n        decimals\n        balance(address: $account, format: true)\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/hoc/withWalletBalances.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "updateDataPipelineEnvironment($input: NewDataPipelineEnvironmentInput)", "content": "{\n      updateDataPipelineEnvironment(input: $input) {\n        envPipelineUri\n        environmentUri\n        environmentLabel\n        pipelineUri\n        pipelineLabel\n        stage\n        region\n        AwsAccountId\n        samlGroupName\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/updateDataPipelineEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteTopic($ids: [String]!)", "content": "{\n    deleteTopic(ids: $ids) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/topics.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "CreateCost($data: CostInput!)", "content": "{\n    createCost(data: $data) {\n      ...Cost\n      ...Payer\n    }\n  }\n  ${CostFragmentDoc}\n  ${PayerFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "subscription", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Sections", "content": "{\n  sections{\n    _id\n    name\n    enabled\n    restaurants{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Sections.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "CreateBookmarkMutation($input: CreateBookmarkInput!)", "content": "{\n    createBookmark(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateBookmarkMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "query", "name": "", "content": "{\n          agenda {\n            taskCount\n            tasks {\n              description\n              ownTime\n              totalTime\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "DeployMarketplace(\n    $from: String\n    $token: String\n    $version: String\n    $autoWhitelist: Boolean\n  )", "content": "{\n    deployMarketplace(\n      from: $from\n      token: $token\n      version: $version\n      autoWhitelist: $autoWhitelist\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "addAnalyticsCloudWorkspace(\n\t\t$analyticsCloudWorkspace: InputC_AnalyticsCloudWorkspace!\n\t)", "content": "{\n\t\tcreateAnalyticsCloudWorkspace(input: $analyticsCloudWorkspace)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_AnalyticsCloudWorkspace\"\n\t\t\t\tpath: \"/c/analyticscloudworkspaces/\"\n\t\t\t) {\n\t\t\taccountKey\n\t\t\tallowedEmailDomains\n\t\t\tdataCenterLocation\n\t\t\tid\n\t\t\townerEmailAddress\n\t\t\ttimeZone\n\t\t\tworkspaceFriendlyUrl\n\t\t\tworkspaceName\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "WithdrawListing(\n    $data: String!\n    $from: String!\n    $listingID: String\n    $offerID: String\n  )", "content": "{\n    addData(\n      data: $data\n      listingID: $listingID\n      offerID: $offerID\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "GetBook($isbn: String!)", "content": "{\n    book(isbn: $isbn) {\n      title\n      author {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/cache.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "allLocations", "content": "{\n    allLocations {\n      id\n      latitude\n      longitude\n      traveller {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/WorldChat.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getComposerCommunitiesAndChannels", "content": "{\n    user: currentUser {\n      ...userInfo\n      communityConnection {\n        edges {\n          node {\n            id\n            name\n            slug\n            profilePhoto\n            communityPermissions {\n              isMember\n              isBlocked\n              isOwner\n              isModerator\n              reputation\n            }\n          }\n        }\n      }\n      channelConnection {\n        edges {\n          node {\n            id\n            name\n            slug\n            isDefault\n            isPrivate\n            isArchived\n            community {\n              id\n            }\n            channelPermissions {\n              isMember\n              isPending\n              isBlocked\n              isOwner\n              isModerator\n            }\n          }\n        }\n      }\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/composer/getComposerCommunitiesAndChannels.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/fragments.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "QueryWithVariablesVar($variables: [String!])", "content": "{\n            getVars(variables: $variables) {\n              __typename\n              name\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "CharacterDetail($id: ID!)", "content": "{\n    getCharacter(characterId: $id) {\n      name\n      playedBy\n      culture\n      titles\n      aliases\n      born\n      died\n      allegiances {\n        name\n      }\n      isAlive\n      father {\n        id\n        name\n      }\n      mother {\n        id\n        name\n      }\n      spouse {\n        id\n        name\n      }\n      children {\n        id\n        name\n      }\n      appearedIn {\n        name\n      }\n\n      books {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "8f01d346bdf8047fc3682b154360a2743efb0bfe", "file": "client/src/queries/CharacterDetailQuery.tsx", "repo": "FormidableLabs_graphql-typescript-blog"}}, {"type": "mutation", "name": "($itemCode: ID!, $status: String)", "content": "{\n        addCollection(itemCode: $itemCode, status: $status)\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/details/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @skip(if: true) @include(if: false)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/directives.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "ReservationFeedback_Query", "content": "{\n    reservationFeedback {\n      id\n      feedbacks {\n        id\n        isCompleted\n        review\n        rating\n        questions {\n          id\n          options\n          question\n          responses\n          type\n        }\n        variant {\n          id\n          product {\n            id\n            name\n            retailPrice\n            brand {\n              id\n              name\n            }\n            images(size: Thumb) {\n              id\n              url\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ReservationFeedback/ReservationFeedbackModal.tsx", "repo": "seasons_harvest"}}, {"type": "subscription", "name": "", "content": "{\n          posts {\n            id\n            slug\n            description\n            imgUrl\n            imgAlt\n            author {\n              id\n              name\n            }\n            status\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/a-whole-bunch-o-gatsby-templates/gatsby/examples/creating-source-plugins/source-plugin/gatsby-node.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "car($vin: String)", "content": "{\n          car(vin: $vin) {\n            id\n            make\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "updateLocation($locationId: ID!, $latitude: Float!, $longitude: Float!)", "content": "{\n    updateLocation(id: $locationId, latitude: $latitude, longitude: $longitude) {\n      traveller {\n        id\n        name\n      }\n      id\n      latitude\n      longitude\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/WorldChat.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "editOrganizationRoles($organizationId: String!, $userId: String!, $roles: [String])", "content": "{\n        editOrganizationRoles(organizationId: $organizationId, userId: $userId, roles: $roles) {\n          ${organizationFragment}\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminPersonList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "query", "name": "", "content": "{\n    entities: applications {\n      data {\n        name\n        id\n        labels\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "($id: String!)", "content": "{\n        getJWT: jwt(jti: $id)\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/jwt/index.ts", "repo": "impactasaurus_app"}}, {"type": "query", "name": "somethingelse($variable: Boolean)", "content": "{\n          allPeople(first: 1, yetisArePeople: $variable) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "recipe", "content": "{\n    _id\n    name\n    instructions\n    minutes\n    ingredients\n    reactions\n  }", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "query", "name": "getProducts(\n    $type: String\n    $sortByPrice: String\n    $searchText: String\n    $offset: Int\n  )", "content": "{\n    products(\n      type: $type\n      sortByPrice: $sortByPrice\n      searchText: $searchText\n      offset: $offset\n    ) {\n      items {\n        id\n        name\n        image\n        type\n        price\n        unit\n        salePrice\n        discountInPercent\n      }\n      totalCount\n      hasMore\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/ProductForm/ProductForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "query", "name": "shifts", "content": "{\n    shiftDate(where: { userId: { _eq: ${userId} },year: { _eq: ${year} } ,month: { _eq: ${month} }  }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/query.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "updateLiferayExperienceCloudEnvironment(\n\t\t$liferayExperienceCloudEnvironmentId: Long!\n\t\t$LiferayExperienceCloudEnvironment: InputC_LiferayExperienceCloudEnvironment!\n\t)", "content": "{\n\t\tupdateLiferayExperienceCloudEnvironment(\n\t\t\tliferayExperienceCloudEnvironmentId: $liferayExperienceCloudEnvironmentId\n\t\t\tinput: $LiferayExperienceCloudEnvironment\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"PUT\"\n\t\t\t\ttype: \"C_LiferayExperienceCloudEnvironment\"\n\t\t\t\tpath: \"/c/liferayexperiencecloudenvironments/{args.liferayExperienceCloudEnvironmentId}\"\n\t\t\t) {\n\t\t\tliferayExperienceCloudEnvironmentId\n\t\t\tprojectId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/liferay-experience-cloud-environments/queries/useUpdateLiferayExperienceCloudEnvironment.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "createHistoryTable(\n        $sourceDbName: String!\n        $sourceTableName: String!\n    )", "content": "{\n        delete_view(id: $viewId) {\n            success\n            error\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/schema-settings.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "createScene($data: SceneInput!)", "content": "{\n    createScene(data: $data) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Scene.ts", "repo": "h3lpkey_fibber"}}, {"type": "query", "name": "getCommunitySettingsByMatch($slug: LowercaseString)", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunitySettings.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: 1) {\n            people {\n              id\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/Query.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "resendVerifyEmailToken", "content": "{\n\t\tresendVerifyEmailToken {\n\t\t\tmessage\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "UserLogout", "content": "{\n      user{\n        logout\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "query", "name": "($userId: String!)", "content": "{\n  user(userId: $userId) {\n    id,\n    username,\n    first_name,\n    last_name,\n    userId\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/table-filters/components/user-autocomplete.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "query", "name": "people($first: Int)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/skip.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "", "content": "{\n              allBlogs {\n                id\n                title\n                content\n                userId\n              }\n            }", "metadata": {"commit_hash": "3ab3a6926645806009516173b8745d3f0b7fb185", "file": "libs/client/adminconsole/feature/src/lib/adminconsole/adminconsole.component.ts", "repo": "COS-301_graduates"}}, {"type": "query", "name": "($id: String)", "content": "{\n      author(id: $id) {\n        name\n        id\n        __typename\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/benchmark/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "DataSource($type: String)", "content": "{\n\t\tdataSources(type: $type) {\n\t\t\tid\n\t\t\tname\n\t\t\turl\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/SitesDashboardQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "Network", "content": "{\n    web3 {\n      networkId\n      networkName\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Network.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "QueryWithVariablesVar($variables: [String!])", "content": "{\n            getVars(variables: $variables) {\n              __typename\n              name\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "recommendedMergeNumber", "content": "{\n    recommendedMerge {\n      pageInfo {\n        totalResults\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/queries.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "($a: Int = 1, $b: String = \"cheese\", $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Owner($id: ID!)", "content": "{\n    web3 {\n      account(id: $id) {\n        id\n        owner {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Owner.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "", "content": "{\n          profile{\n            _id\n            name\n            phone\n            phoneIsVerified\n            email\n            emailIsVerified\n            notificationToken\n            isActive\n            isOrderNotification\n            isOfferNotification\n            addresses{\n              _id\n              label\n              deliveryAddress\n              details\n              location{coordinates}\n              selected\n            }\n            favourite\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/components/Sidebar/Profile/Profile.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "KnownIndividualsListAssetQuery(\n\t\t\t$assetId: String!\n\t\t\t$channelId: String\n\t\t\t$devices: String\n\t\t\t$keywords: String\n\t\t\t$location: String\n\t\t\t$rangeEnd: String\n\t\t\t$rangeKey: Int\n\t\t\t$rangeStart: String\n\t\t\t$size: Int!\n\t\t\t$start: Int!\n\t\t\t$title: String\n\t\t\t$touchpoint: String\n\t\t)", "content": "{\n\t\t\t${queryName}(\n\t\t\t\tassetId: $assetId\n\t\t\t\tcanonicalUrl: $touchpoint\n\t\t\t\tchannelId: $channelId\n\t\t\t\tcountry: $location\n\t\t\t\tdeviceType: $devices\n\t\t\t\trangeEnd: $rangeEnd\n\t\t\t\trangeKey: $rangeKey\n\t\t\t\trangeStart: $rangeStart\n\t\t\t\ttitle: $title\n\t\t\t) {\n\t\t\t\t${metricName} {\n\t\t\t\t\t...individualsFragment\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t${INDIVIDUALS_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/knownIndividualsListAssetQuery.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "CreateProposal($name: String!, $note: String!)", "content": "{\n    createProposal(proposal: { name: $name, note: $note }) {\n      proposal {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Profile/ProfileCard/ProfileCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "Logout($token: String!)", "content": "{\n    logout(token: $token)\n  }", "metadata": {"commit_hash": "5280d119af49c7634a832864d0ffc7c8e9f36e21", "file": "libs/schemas/src/lib/app/models/auth.model.ts", "repo": "Vrishtrix_fullstack-ts-boilerplate"}}, {"type": "mutation", "name": "DeleteCoupon($id:String!)", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "GetUserReviewsForArticle($articleVersionId: ID!, $reviewerId: ID!)", "content": "{\n    userReviewsForArticle(\n      articleVersionId: $articleVersionId\n      reviewerId: $reviewerId\n    ) {\n      articleVersionId\n      content\n      events {\n        createdAt\n      }\n      id\n      recommendation\n      status {\n        submitted\n      }\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/getUserReviewsForArticle.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "changeEmail($email: String!, $password: String!)", "content": "{\n  changeEmail(email: $email, password: $password) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "test", "content": "{\n    user {\n      id\n    }\n  }", "metadata": {"commit_hash": "ac847cb1bcda5dce599e5cf206cfb8928e850732", "file": "services/site/tests/lib/apollo-client/apollo-client.spec.ts", "repo": "a11yphant_a11yphant"}}, {"type": "query", "name": "UsersQuery($page: Int)", "content": "{\n          users {\n            id\n            name\n            posts(page: $page) {\n              title\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "topTokens", "content": "{\n    tokens(\n      first: 50\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "getCommunityThreadConnection(\n    $id: ID\n    $after: String\n    $sort: CommunityThreadConnectionSort\n  )", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityThreadConnection\n    }\n  }\n  ${threadInfoFragment}\n  ${communityInfoFragment}\n  ${communityThreadConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunityThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "SearchCompanies($text: String!, $companyId: ID)", "content": "{\n    searchCompanies(text: $text, companyId: $companyId) {\n      users {\n        id\n        fullName\n        profileUrl\n        companies {\n          id\n          name\n          logoUrl\n        }\n      }\n      companies {\n        id\n        name\n        logoUrl\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/modules/company/components/FormPanel/components/CompanyForm.tsx", "repo": "DoBestMan_PrepDD"}}, {"type": "subscription", "name": "", "content": "{\n    greeting {\n      id\n      text\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Feed/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "UpdateStop($id: Int!, $name: String!, $latitude: Float!, $longitude: Float!)", "content": "{\n    StopMutation {\n      updateStop(station: { id: $id, name: $name, latitude: $latitude, longitude: $longitude }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "GenerateTemplatePlayer", "content": "{\n    generateTemplatePlayer\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "CreateStudent($input: CreateStudentInput!)", "content": "{\n      createStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "invite($emails: [String!]!)", "content": "{\n    invite(emails: $emails)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/InviteFriends.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "Increment($amount: Int = 1)", "content": "{\n        increment(amount: $amount) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getCurrentUserForLoader", "content": "{\n      currentUser {\n        id\n        organizations {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/DashboardLoader.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "query", "name": "", "content": "{ allFilms { films { title } } }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "FetchPlaces", "content": "{\n    allPlaces {\n      id\n      placeName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCampaign.js", "repo": "vecnazmaga_place-management"}}, {"type": "query", "name": "GetPosts", "content": "{\n    articles{\n        id,\n        title,\n        description,\n        author{\n          name\n        },\n        categories{\n          name\n        },\n        image{\n            url\n        },\n        created_at,\n        slug\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/PostList.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "mutation", "name": "DeleteFood($id:String!)", "content": "{\n        deleteFood(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n    uploadFiles(files: $files) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/upload/file-upload.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/CartAddress/CartAddress.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "updateSiteSettings(\n                $siteName: String,\n                $siteTitle: String,\n                $metaDescription: String, \n                $facebookLink: String,\n                $twitterLink: String,\n                $instagramLink: String,\n                $logoHeight: Int,\n                $logoWidth: Int,\n                $metaKeyword: String,\n                $homeLogo: String,\n                $youtubeLink: String,\n                $appForceUpdate: String\n                $riderAndroidVersion: String\n                $riderIosVersion: String\n                $driverAndroidVersion: String\n                $driverIosVersion: String\n                )", "content": "{\n                    updateSiteSettings(\n                    siteName: $siteName\n                    siteTitle: $siteTitle\n                    metaDescription: $metaDescription\n                    facebookLink: $facebookLink\n                    twitterLink: $twitterLink\n                    instagramLink: $instagramLink\n                    logoHeight: $logoHeight\n                    logoWidth: $logoWidth\n                    metaKeyword: $metaKeyword\n                    homeLogo: $homeLogo\n                    youtubeLink: $youtubeLink\n                    appForceUpdate: $appForceUpdate\n                    riderAndroidVersion: $riderAndroidVersion\n                    riderIosVersion: $riderIosVersion\n                    driverAndroidVersion: $driverAndroidVersion\n                    driverIosVersion: $driverIosVersion\n                    ){\n                    status\n                    }\n                }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateSiteSettings.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "updateTaskComment($commentID: UUID!, $message: String!)", "content": "{\n    updateTaskComment(input: { commentID: $commentID, message: $message }) {\n      comment {\n        id\n        updatedAt\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskComment.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "GetAllProductsDashboard", "content": "{\n  getAllProducts {\n    id\n    name\n    image\n    price\n    uuid\n    quantity\n    storeId {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "query", "name": "($hash: ID!)", "content": "{\n    block(hash: $hash) {\n      hash\n      parentHash\n      hash\n      parentHash\n      number\n      timestamp\n      nonce\n      difficulty\n      gasLimit {\n        _hex\n      }\n      gasUsed {\n        _hex\n      }\n      miner\n      extraData\n      transactions\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "getDirectMessageThreadMessages($id: ID!, $after: String)", "content": "{\n    directMessageThread(id: $id) {\n      ...directMessageThreadInfo\n      ...directMessageThreadMessageConnection\n    }\n  }\n  ${directMessageThreadInfoFragment}\n  ${directMessageThreadMessageConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/directMessageThread/getDirectMessageThreadMessageConnection.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "updateShopMotd($MOTD: String!)", "content": "{\n    updateMOTD(MOTD: $MOTD) {\n      id\n      MOTD\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "query", "name": "topPools", "content": "{\n    pools(\n      first: ${count}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries-v3.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "getPaymentMethods($workspaceId: uuid!)", "content": "{\n  paymentMethods(\n    where: {workspaceId: {_eq: $workspaceId}}\n    order_by: {createdAt: desc}\n  ) {\n    ...getPaymentMethods\n  }\n}\n    ${GetPaymentMethodsFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "query", "name": "getProjectSidebar($projectId: ID!)", "content": "{\n        getProject(projectId: $projectId) {\n            _id\n            name\n            image\n            color\n            members {\n                user {\n                    _id\n                    avatar\n                    name\n                    last_name\n                    email\n                }\n                role {\n                    _id\n                    name\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetProjectSidebar.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "getOrderItems($filter: String, $page: Int = 1, $pageSize: Int = 20)", "content": "{\n\t\torderItems(filter: $filter, page: $page, pageSize: $pageSize) {\n\t\t\titems {\n\t\t\t\texternalReferenceCode\n\t\t\t\tquantity\n\t\t\t\tcustomFields {\n\t\t\t\t\tname\n\t\t\t\t\tcustomValue {\n\t\t\t\t\t\tdata\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treducedCustomFields @client\n\t\t\t\toptions\n\t\t\t}\n\t\t\tlastPage\n\t\t\tpage\n\t\t\tpageSize\n\t\t\ttotalCount\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/order-items/queries/useGetOrderItems.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @include(if: false)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($name:String, $id: Int!)", "content": "{\n              insert_user (\n                objects: {\n                  name: $name\n                  id: $id\n                }\n              ) {\n                returning {\n                  id\n                }\n              }\n            }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "tic-tac-toe-react/client/src/utils.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "registerNoteComment($noteId: String!, $body: String!)", "content": "{\n    __typename\n    registerNoteComment(input: { noteId: $noteId, body: $body }) {\n      noteComment {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n        login(data: { email: $email, password: $password }) {\n            id\n            token\n        }\n    }", "metadata": {"commit_hash": "470c1d4642a33b4280439bd04bbd948feeba96ce", "file": "client/graphql/user/mutations/login.ts", "repo": "topbrightdev_ecommerce-microservice-nest-api"}}, {"type": "subscription", "name": "Trigger", "content": "{\n        trigger\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/subscriptions.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "ChatList($chatId: Int!, $userId: Int!)", "content": "{\n    chat_users(where:{chat_id: {_eq: $chatId}, user_id: {_neq: $userId}}) {\n      chat {\n        ...chat\n      }\n      user {\n        ...user\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/ChatNavbar.tsx", "repo": "hasura_sample-apps"}}, {"type": "query", "name": "getFrontpageHeadlines", "content": "{\n    allHeadlines(first: 6, orderBy: CREATED_AT_DESC) {\n      nodes {\n        id\n        createdAt\n        link\n        thumbnail\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "getAccounts @client", "content": "{\n    accounts\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/routes/Home.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "ResetEvent", "content": "{\n    resetEvent\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "query", "name": "ChatList($chatId: Int!, $userId: Int!)", "content": "{\n    chat_users(where:{chat_id: {_eq: $chatId}, user_id: {_neq: $userId}}) {\n      chat {\n        ...chat\n      }\n      user {\n        ...user\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/ChatNavbar.tsx", "repo": "hasura_sample-apps"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @include(if: true)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createFunction(\n    $name: String!\n    $namespace: String!\n    $labels: Labels!\n    $size: String!\n    $runtime: String!\n  )", "content": "{\n    createFunction(\n      name: $name\n      namespace: $namespace\n      labels: $labels\n      size: $size\n      runtime: $runtime\n    ) {\n      name\n      namespace\n      labels\n      size\n      runtime\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "($id: ID!)", "content": "{\n      getPostSecretFieldIAM(id: $id) {\n        id\n        title\n        secret\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthModelAuthTransformer.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "PuzzleShowSubscription ($id: String!)", "content": "{\n    puzzleSub(id: $id) {\n      id\n      title\n      yami\n      genre\n      status\n      content\n      solution\n      memo\n      created\n      modified\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/PuzzleShowSubscription.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "updateProjectLabel($projectLabelID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  updateProjectLabel(\n    input: {projectLabelID: $projectLabelID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "getAirflowClusterConsoleAccess($clusterUri: String!)", "content": "{\n      getAirflowClusterConsoleAccess(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/getClusterConsoleAccess.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "Stats($dataset_id: Int!)", "content": "{\n    search_options {\n      civilizations(dataset_id: $dataset_id) { value label }\n      versions(dataset_id: $dataset_id) { value label }\n    }\n  }", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/SearchOptionsDataset.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "mutation", "name": "deleteAirflowCluster($clusterUri: String!)", "content": "{\n      deleteAirflowCluster(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/deleteCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "", "content": "{\n        author {\n          firstName\n          lastName\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people($skip: Int, $first: Int)", "content": "{\n        allPeople(first: $first, skip: $skip) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/queries/api.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "($contactInput: String!)", "content": "{\n    updateContact(contactInput: $contactInput) {\n      id\n      name\n      contact {\n        id\n        type\n        number\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/mutation/contact.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "deleteManyMeses($where: MesWhereInput!)", "content": "{\n    deleteManyMeses(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/list/mes-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "subscription", "name": "OnCreateMember", "content": "{\n          onCreateMember {\n            id\n            name\n            createdAt\n            updatedAt\n          }\n        }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/amplify-util-mock/src/__e2e__/subscriptions-with-auth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateMessageMutation($message: MessageInput!)", "content": "{\n    createMessage(message: $message)\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/CreateMessage/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "createGoal($name: String!, $resolutionId: String!)", "content": "{\n    createGoal(name: $name, resolutionId: $resolutionId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/graphql-list/imports/ui/GoalForm.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($id: ID!, $timestamp: Int!)", "content": "{\n    pool(id: $id) {\n      volumes(where: { period: 3600, type: \"join\", timestamp_gt: $timestamp }) {\n        volume_usd\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/PoolManager/Analytics/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "tokenDayDatas($tokenId: ID!)", "content": "{\n    tokenDayDatas(orderBy: date, orderDirection: desc, where: { token: $tokenId }) {\n      id\n      date\n      token {\n        id\n        symbol\n        name\n      }\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      dailyVolumeToken\n      dailyVolumeUSD\n      mostLiquidPairs {\n        id\n        date\n      }\n    }\n    pairs0: pairs(\n      where: { token0: $tokenId }\n      first: 50\n      orderBy: reserveUSD\n      orderDirection: desc\n    ) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n    }\n    pairs1: pairs(\n      where: { token1: $tokenId }\n      first: 50\n      orderBy: reserveUSD\n      orderDirection: desc\n    ) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}}, {"type": "mutation", "name": "DeleteDatasetQualityRule($ruleUri: String!)", "content": "{\n      deleteDatasetQualityRule(ruleUri: $ruleUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetQualityRule/deleteDatasetqualityRule.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "UpdateCurrentlyWith($data: ManuscriptInput!)", "content": "{\n    updateManuscript(data: $data) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/updateCurrentlyWith.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "updateProfile($data: ProfileInputType!, $uuid: String)", "content": "{\n    updateProfile(data: $data, uuid: $uuid) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "query", "name": "people", "content": "{\n            allPeople(first: 1) {\n              people {\n                name\n              }\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getResolverFromSubgraph($id: ID!)", "content": "{\n    domain(id: $id) {\n      id\n      name\n      resolver {\n        coinTypes\n        texts\n      }\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "logout", "content": "{\n      logout\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "query", "name": "topTokens", "content": "{\n    tokens(\n      first: 50\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "CardTransfers($tokenId: String!, $sort: CardTransfersSort!)", "content": "{\n    cardTransfers(filter: { tokenId: $tokenId }, sort: $sort) {\n      id\n      fromOwner {\n        user {\n          slug\n          username\n        }\n      }\n      toOwner {\n        user {\n          slug\n          username\n          profile {\n            pictureUrl(derivative: \"width=128\")\n            fallbackUrl(derivative: \"width=128\")\n          }\n        }\n      }\n      price\n      kind\n      date\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/CardTransfers.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "", "content": "{\n        createAuthor(firstName: \"John\", lastName: \"Smith\") {\n          ...authorDetails\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "CommerceTotalOrderValue(\n\t\t$channelId: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t)", "content": "{\n\t\torderTotalCurrencyValues(\n\t\t\tchannelId: $channelId\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t) {\n\t\t\tcurrencyCode\n\t\t\ttrend {\n\t\t\t\ttrendClassification\n\t\t\t\tpercentage\n\t\t\t}\n\t\t\tvalue\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/commerce/queries/TotalOrderValueQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "toggleSnackBar", "content": "{\n    toggleSnackBar(msg: $msg, type: $type) @client\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/Material/SuccessMessage.js", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "declineInvitation($friendName: String!)", "content": "{\n\t\tdeclineInvitation(friendName: $friendName)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "query", "name": "Query", "content": "{\n      getAuthors {\n        _id\n        name\n        books {\n          _id\n          title\n          authorId\n          author {\n            _id\n            name\n            createdAt\n          }\n          createdAt\n        }\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/CreateAuthor.js", "repo": "FrontPhoenix_graphql-sample"}}, {"type": "query", "name": "GetNotification", "content": "{\n    notification @client {\n      title\n      content\n      color\n      icon\n      visible\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "RemoveHealthIndicator($organizationId: ID!)", "content": "{\n  organization_RemoveHealthIndicator(organizationId: $organizationId) {\n    id\n    healthIndicator {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "query", "name": "Specialists($filters: SpecialistsFilter)", "content": "{\n    specialists(filters: $filters) {\n      rows {\n        id\n        reviewCount\n        completedProjects\n        specialisation {\n          main {\n            id\n            name\n          }\n          additional {\n            id\n            name\n          }\n        }\n        description\n        interaction {\n          numberOfEmployees\n          formOfWork\n          name\n        }\n        profile {\n          photo {\n            url\n          }\n          personalInformation {\n            firstName\n            lastName\n          }\n          contactInformation {\n            phone {\n              number\n            }\n          }\n          address {\n            formatted\n          }\n          website\n        }\n        portfolio {\n          name\n          images {\n            id\n            url\n          }\n        }\n        rating\n        reviews {\n          id\n          rating\n          comment\n          customer {\n            personalInformation {\n              firstName\n              lastName\n            }\n            photo {\n              url\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/pages/specialists-detail-page/src/useData.ts", "repo": "atls_serenity"}}, {"type": "query", "name": "complexQuery", "content": "{\n        luke: people_one(id: 1) {\n          name\n        }\n        vader: people_one(id: 4) {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "(\n    $morningCleanser: [MyRoutineFieldsInputType]\n    $morningToner: [MyRoutineFieldsInputType]\n    $morningSerum: [MyRoutineFieldsInputType]\n    $morningMoisturizer: [MyRoutineFieldsInputType]\n    $morningSPF: [MyRoutineFieldsInputType]\n    $morningRX: [MyRoutineFieldsInputType]\n    $morningEyeCream: [MyRoutineFieldsInputType]\n    $eveningOilCleanser: [MyRoutineFieldsInputType]\n    $eveningCleanser: [MyRoutineFieldsInputType]\n    $eveningExfoliator: [MyRoutineFieldsInputType]\n    $eveningTreatmentMask: [MyRoutineFieldsInputType]\n    $eveningToner: [MyRoutineFieldsInputType]\n    $eveningSerum: [MyRoutineFieldsInputType]\n    $eveningMoisturizer: [MyRoutineFieldsInputType]\n    $eveningNightMask: [MyRoutineFieldsInputType]\n    $eveningOil: [MyRoutineFieldsInputType]\n    $eveningSpotTreatment: [MyRoutineFieldsInputType]\n    $eveningRX: [MyRoutineFieldsInputType]\n    $eveningEyeCream: [MyRoutineFieldsInputType]\n  )", "content": "{\n    updateMyRoutine(\n      morningCleanser: $morningCleanser\n      morningToner: $morningToner\n      morningSerum: $morningSerum\n      morningMoisturizer: $morningMoisturizer\n      morningSPF: $morningSPF\n      morningRX: $morningRX\n      morningEyeCream: $morningEyeCream\n      eveningOilCleanser: $eveningOilCleanser\n      eveningCleanser: $eveningCleanser\n      eveningExfoliator: $eveningExfoliator\n      eveningTreatmentMask: $eveningTreatmentMask\n      eveningToner: $eveningToner\n      eveningSerum: $eveningSerum\n      eveningMoisturizer: $eveningMoisturizer\n      eveningNightMask: $eveningNightMask\n      eveningOil: $eveningOil\n      eveningSpotTreatment: $eveningSpotTreatment\n      eveningRX: $eveningRX\n      eveningEyeCream: $eveningEyeCream\n    ) {\n      morningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSPF {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOilCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningExfoliator {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningTreatmentMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningNightMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOil {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSpotTreatment {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateMyRoutineMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "Mutation($newMessage: NewMessageInput!)", "content": "{\n      sendMessage(newMessage: $newMessage) {\n        id\n        userId\n        roomId\n        content\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "UserOAuthQueryUrl($req: ApiReqUserOAuthQueryUrl!)", "content": "{\n      user {\n        oauthUrl(req: $req) {\n          platform,\n          authorizeUrl,\n        }\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "query", "name": "tipo($id: String!)", "content": "{\n      tipo(id: $id) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "importPostfinanceCSV($csv: String!)", "content": "{\n    importPostfinanceCSV(csv: $csv)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/PostfinancePayments/List/index.js", "repo": "republik_plattform"}}, {"type": "query", "name": "", "content": "{\n                          libraries {\n                            id\n                            name\n                          }\n                        }", "metadata": {"commit_hash": "89dd6d9be2c03695498196ef118e7054874db3fa", "file": "pages/addbot.tsx", "repo": "pikokr_uniquebots"}}, {"type": "query", "name": "", "content": "{ __typename }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "scripts/codemods/ac2-to-ac3/examples/client-and-cache.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getRedshiftClusterDatabaseCredentials($clusterUri: String!)", "content": "{\n      getRedshiftClusterDatabaseCredentials(clusterUri: $clusterUri) {\n        clusterUri\n        user\n        database\n        port\n        endpoint\n        password\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/getClusterDatabaseCredentials.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "submitConsent", "content": "{\n    submitConsent(name: \"${PROLITTERIS_OPT_OUT_CONSENT}\") {\n      id\n      ...ProlitterisConsent\n    }\n  }\n  ${userProlitterisConsentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/ProlitterisSettings.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getAll$", "content": "{MODELS}($where: ${whereName}, $first: Int = ${DEFAULT_PAGE_SIZE}, $skip: Int, $sortBy: [${sortName}!]) {\n             objs: ${queryName}(where: $where, first: $first, skip: $skip, sortBy: $sortBy) ${fields}\n         }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "subscribe($id: String!, $artistID: String!)", "content": "{\n    subscribeEvent(id: $id, artistID: $artistID) {\n      id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n        mimified\n      }\n      photo {\n        mimified\n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event/event.mutations.js", "repo": "midianinja_som-web"}}, {"type": "query", "name": "($userId: String, $chatbotId: String)", "content": "{\n  user(userId: $userId, chatbotId: $chatbotId) {\n    id,\n    userId,\n    payload\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "nodes/mc-user-payload.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "query", "name": "($id: String)", "content": "{\n      author(id: $id) {\n        name\n        id\n        __typename\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/benchmark/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignInUser(\n    $email: String!\n    $password: String!\n    $socialLogin: Boolean!\n    $provider: String!\n    $tokenID: String!\n    $uuID: String!\n  )", "content": "{\n    signInUser(\n      email: $email\n      password: $password\n      socialLogin: $socialLogin\n      provider: $provider\n      tokenID: $tokenID\n      uuID: $uuID\n    ) {\n      currentUser {\n        id\n        user {\n          id\n          fullName\n          email\n        }\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/SignInUser.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "query", "name": "CommentReactions($commentId: uuid!)", "content": "{\n  comment_reactions(where: {comment_id: {_eq: $commentId}}) {\n    ...commentReactionFields\n  }\n}\n    ${CommentReactionFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "GET_ACTIVE_LIBRARY", "content": "{\n        activeLib @client {\n            id @client\n            name @client\n            filter @client\n            behavior @client\n            attributes @client\n            gql @client {\n                searchableFields @client\n                query @client\n                type @client\n            }\n            trees\n            permissions @client {\n                access_library @client\n                access_record @client\n                create_record @client\n                edit_record @client\n                delete_record @client\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/cache/activeLibrary/getActiveLibraryQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "unAdoptStudent($input: LessonUserId)", "content": "{\n    unAdoptStudent(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "mutation", "name": "cancelMembership($id: ID!, $details: CancellationInput!)", "content": "{\n    cancelMembership(id: $id, details: $details) {\n      id\n      active\n      renew\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Cancel.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "($communityId: ID!, $threadId: ID!)", "content": "{\n    setThread(communityId: $communityId, threadId: $threadId) {\n      id\n      threads {\n        ${F.thread}\n      }\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/ThreadSetter/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "query", "name": "getDirectMessageThreadMessages($id: ID!, $after: String)", "content": "{\n    directMessageThread(id: $id) {\n      ...directMessageThreadInfo\n      ...directMessageThreadMessageConnection\n    }\n  }\n  ${directMessageThreadInfoFragment}\n  ${directMessageThreadMessageConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/directMessageThread/getDirectMessageThreadMessageConnection.js", "repo": "DoBestMan_spectrum"}}, {"type": "subscription", "name": "", "content": "{\n    message ( order_by: {id:desc} limit: 1) {\n      id\n      username\n      text\n      timestamp\n    } }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Chat.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/queries/polling.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "", "content": "{\n            field {\n              __typename\n              ... on Obj {\n                stuff\n              }\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/roundtrip.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdateStudent($input: UpdateStudentInput!)", "content": "{\n      updateStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "loadMoreChannelThreads($id: ID, $after: String)", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelThreadConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelThreadConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannelThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Option/List/List.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "query", "name": "commentPreview(\n    $discussionId: ID!\n    $content: String!\n    $parentId: ID\n    $id: ID\n    $tags: [String!]\n  )", "content": "{\n    commentPreview(\n      content: $content\n      discussionId: $discussionId\n      parentId: $parentId\n      id: $id\n      tags: $tags\n    ) {\n      id\n      content\n      contentLength\n      tags\n      updatedAt\n      createdAt\n      embed {\n        ... on LinkPreview {\n          url\n          title\n          description\n          imageUrl\n          imageAlt\n          siteName\n          siteImageUrl\n          updatedAt\n          __typename\n        }\n        ... on TwitterEmbed {\n          id\n          url\n          text\n          html\n          userName\n          userScreenName\n          userProfileImageUrl\n          image\n          createdAt\n          __typename\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/queries/PreviewCommentQuery.graphql.ts", "repo": "republik_plattform"}}, {"type": "query", "name": "SampleQuery", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/http/__tests__/selectURI.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createProject($teamID: UUID, $name: String!)", "content": "{\n  createProject(input: {teamID: $teamID, name: $name}) {\n    id\n    shortId\n    name\n    team {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "setIsActiveAccount($id: ID!, $isActive: Boolean!)", "content": "{\n        setIsActiveAccount(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "CreateAwardApplicationMutation(\n    $input: CreateAwardApplicationInput!\n  )", "content": "{\n    createAwardApplication(input: $input) {\n      awardApplication {\n        ...AwardApplication\n      }\n    }\n  }\n  ${AwardApplication}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateAwardApplicationMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "createUser($name: String! $email: String! $password: String! )", "content": "{\n    createUser( name: $name, email: $email, password: $password) {\n      token\n    }\n}", "metadata": {"commit_hash": "fded8f5e0ee7b70172ed1cc0aa2b3e6e551ed2c1", "file": "src/graphql/mutations.js", "repo": "Umoren_Vue-auth"}}, {"type": "mutation", "name": "createTipo($data: TipoCreateInput!)", "content": "{\n      createTipo(data: $data) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "ViewerQuery", "content": "{\n    viewer {\n      id\n      name\n      status\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/api-routes-apollo-server-and-client/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($allPairs: [Bytes]!)", "content": "{\n    mints(\n      first: 20\n      where: { pair_in: $allPairs }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(\n      first: 20\n      where: { pair_in: $allPairs }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(\n      first: 30\n      where: { pair_in: $allPairs }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      transaction {\n        id\n        timestamp\n      }\n      id\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "mutation", "name": "sendMessage($message: MessageInput!)", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/message/sendMessage.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyPhone/VerifyPhone.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "($appId : ID! $payload : PackageCreateInput!)", "content": "{\n    addPackage(\n      applicationID: $appId\n      in: $payload  \n    ){\n      id\n    }}", "metadata": {"commit_hash": "e6d9b79197464112cbebeee76cf596345acc67b3", "file": "modules/app-connector/src/server/compass/api.ts", "repo": "kyma-incubator_varkes"}}, {"type": "query", "name": "CommentListQuery(\n      $orderBy: [String]\n      $limit: Int\n      $offset: Int\n      $puzzle_Status_Gt: Float\n      $puzzle_User: ID\n      $user: ID\n    )", "content": "{\n      allCommentsLo(\n        orderBy: $orderBy\n        limit: $limit\n        offset: $offset\n        puzzle_Status_Gt: $puzzle_Status_Gt\n        puzzle_User: $puzzle_User\n        user: $user\n      ) {\n        edges {\n          node {\n            id\n            user {\n              ...UserLabel_user\n            }\n            puzzle {\n              id\n              title\n              user {\n                ...UserLabel_user\n              }\n            }\n            content\n            spoiler\n          }\n        }\n        totalCount\n      }\n    }\n    ${UserLabel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/components/CommentList/constants.js", "repo": "heyrict_cindy-realtime"}}, {"type": "query", "name": "GetDashboardOrders($startingDate: String, $endingDate: String,$restaurant:String!)", "content": "{\n    getDashboardOrders(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      orders{\n        day\n        count\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "subscription", "name": "", "content": "{\n    user_online(order_by: { username: asc }) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-chat/src/components/OnlineUsers.js", "repo": "hasura_sample-apps"}}, {"type": "subscription", "name": "UserInfo($name: String)", "content": "{\n          user(name: $name) {\n            name\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/graphqlSubscriptions.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addPerson", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/shared-operations.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getRedirect($path: String!)", "content": "{\n    redirection(path: $path) {\n      id\n      target\n      status\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/StatusError/index.js", "repo": "republik_plattform"}}, {"type": "query", "name": "TokenPrice($id: String!)", "content": "{\n    token(id: $id) {\n      symbol\n      decimals\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/components/TokenPrice.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "deleteProject($projectId: ID!, $teamId: ID!)", "content": "{\n        deleteProject(projectId: $projectId, teamId: $teamId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteProject.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "clusterRoles", "content": "{\n    clusterRoles {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "", "content": "{\n          findAdopterById(_id: \"${this.t_id}\"){ \n            name,\n            email,\n            pic\n          }\n        }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/userprofile/feature/src/lib/userprofile.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "PreviewTable2($tableUri: String!)", "content": "{\n      previewTable2(tableUri: $tableUri) {\n        rows\n        fields\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/previewTable2.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: 1) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteBUG($bugId: ID!)", "content": "{\n    deleteBug(BugId: $bugId) {\n      _id\n      username\n      bugs {\n        _id\n        bugName\n      }\n    }\n  }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "mutation", "name": "", "content": "{\n            callContract(contractInstruction: {originatorPk: \"${originatorPk}\", contractAddress: \"${contractAddress}\", method: \"${method}\", methodArguments: ${JSON.stringify(methodArguments)}})\n        }", "metadata": {"commit_hash": "ccef4dba46db20add0010c4267345c8e726fd0bd", "file": "src/client/Client.ts", "repo": "input-output-hk_smart-contract-backend"}}, {"type": "query", "name": "transactions($address: Bytes!)", "content": "{\n    mints(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/pools/transactions.ts", "repo": "croco-finance_frontend-v3"}}, {"type": "mutation", "name": "ResetDatabasePassword($appId: String!, $newPassword: String!)", "content": "{\n  resetPostgresPassword(appID: $appId, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "query", "name": "GetUser($username: String!)", "content": "{\n        user(username: $username) {\n          id\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/testing/mocking/__tests__/MockedProvider.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "ForgotPassword($email: String!)", "content": "{\n    forgotPassword(email: $email)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "query", "name": "$", "content": "{this.entity}Connection($where: ProyectoWhereInput) {\n      ${this.entity}Connection(where: $where) {\n          aggregate {\n          count\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+dashboard/count-mproject/count-mproject.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "allPosts($first: Int!, $skip: Int!)", "content": "{\n    allPosts(orderBy: { createdAt: desc }, first: $first, skip: $skip) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/with-apollo-next/components/PostList.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SubmitPayment($name: String!, $cardType: String!, $cardNumber: String!, $expiryDate: String!, $cvc: Int!, $amount: Float!)", "content": "{\n    pay(details: {\n      name: $name,\n      type: $cardType,\n      number: $cardNumber,\n      expiry: $expiryDate,\n      cv2: $cvc,\n      amount: $amount,\n    }) {\n      id,\n      card_plaintext,\n      card_ciphertext,\n      message\n    } \n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlMutations.js", "repo": "hashicorp_learn-terraform-preview-environment"}}, {"type": "mutation", "name": "addDatasetToRedshiftCluster(\n      $clusterUri: String\n      $datasetUri: String\n    )", "content": "{\n      addDatasetToRedshiftCluster(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/addDatasetToCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "addPostAndProposalMutation($onchainProposalId: Int!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_proposal_id: $onchainProposalId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "DELETE_TREE($id: ID!)", "content": "{\n        deleteTree(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "CreateItemPrice($input: CreateItemPriceInput!)", "content": "{\n              createItemPrice(input: $input) {\n                id\n              }\n            }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/components/report-prices/report-prices.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "mutation", "name": "promoteService($id: Int!)", "content": "{\n  promoteService(id: $id){\n    ${SERVICE}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "query", "name": "books($order: string)", "content": "{\n        books(skip: 0, limit: 2, order: $order) {\n          name\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "subscription", "name": "NominateContestant", "content": "{\n    nominateContestant {\n      login\n      name\n      organization\n      quesId\n      timebuzzed\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/subscriptions.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "($postId: ID!, $value: PostVoteValueEnum!)", "content": "{\n    createPostVote (input: { post: $postId, value: $value }) {\n      postVote {\n        value\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/PostVotes.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "UploadToken($id:String!,$pushToken:String!)", "content": "{\n  uploadToken(id:$id,pushToken:$pushToken){\n    _id\n    pushToken\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/app.js", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "addItemToCart($variantId: ID!, $quantity: Int!)", "content": "{\n      addItemToCart(variantId: $variantId, quantity: $quantity) {\n        id\n        quantity\n        variant {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/product/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "query", "name": "getStack($environmentUri: String!, $stackUri: String!)", "content": "{\n      getStack(environmentUri: $environmentUri, stackUri: $stackUri) {\n        status\n        stackUri\n        targetUri\n        accountid\n        region\n        stackid\n        link\n        outputs\n        resources\n        error\n        events\n        name\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Stack/getStack.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteCommunity($communityId: ID!)", "content": "{\n    deleteCommunity(communityId: $communityId)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/deleteCommunity.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "Orders", "content": "{\n    restaurantOrders{\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        details\n        label\n      }\n      items{\n        _id\n        title\n        description\n        image\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          description\n          title\n          quantityMinimum\n          quantityMaximum\n        }\n        specialInstructions\n        isActive\n        createdAt\n        updatedAt\n      }\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      status\n      paymentStatus\n      reason\n      isActive\n      createdAt\n      orderDate\n      deliveryCharges\n      isPickedUp\n      preparationTime\n      acceptedAt\n      isRinged\n      rider{\n        _id\n        name\n        username\n        available\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/context/restaurant.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "Articles($id: ID!)", "content": "{\n    article(id: $id) {\n      id\n      title\n      content\n      image {\n        url\n      }\n      category {\n        id\n        name\n      }\n      published_at\n    }\n  }", "metadata": {"commit_hash": "8674ce93fe016737a61bd299d97a8d41147612da", "file": "src/app/apollo/queries/article/article.js", "repo": "strapi_strapi-starter-angular-blog"}}, {"type": "mutation", "name": "deleteSecret($namespace: String!, $name: String!)", "content": "{\n    deleteSecret(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "AddSubDomainFavourite($domain: Domain)", "content": "{\n    addSubDomainFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "enableCommunityWatercooler(\n    $input: EnableCommunityWatercoolerInput!\n  )", "content": "{\n    enableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/enableCommunityWatercooler.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$is_active:Boolean!)", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone,is_active:$is_active}){\n          _id\n          name\n          phone\n          is_active\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "", "content": "{\n      echo(msg: \"Hello\")\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/NonModelAuthV2Function.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "OptionPoll($postId: Int!)", "content": "{\n  option_poll(where: {post_id: {_eq: $postId}}) {\n    ...optionPollFields\n  }\n}\n    ${OptionPollFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AssignRider($id:String!,$riderId:String!)", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "LogIn($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      customer {\n        id\n        status\n        admissions {\n          id\n          admissable\n        }\n        bagItems {\n          id\n        }\n        detail {\n          id\n          shippingAddress {\n            id\n            state\n          }\n        }\n      }\n      user {\n        id\n        createdAt\n        email\n        firstName\n        lastName\n        beamsToken\n        roles\n      }\n      token\n      refreshToken\n      expiresIn\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/SignIn/LogIn.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "StartExchange($id: String!)", "content": "{\n  startExchange(exchangeId: $id)\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "query", "name": "author", "content": "{\n          author {\n            name\n            stats {\n              totalPosts\n              postsToday @client\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "", "content": "{\n        author {\n          name {\n            firstName\n            lastName\n          }\n          age\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "markSingleNotificationSeen($id: ID!)", "content": "{\n    markSingleNotificationSeen(id: $id)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/notification/markSingleNotificationSeen.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "oneMusicalStyleOption($id: ID!)", "content": "{\n    oneMusicalStyleOption(id: $id) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/queries/musicalGenres.query.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "LinkTerm(\n      $nodeUri: String!\n      $targetUri: String!\n      $targetType: String!\n    )", "content": "{\n      linkTerm(\n        nodeUri: $nodeUri\n        targetUri: $targetUri\n        targetType: $targetType\n      ) {\n        linkUri\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/linkTerm.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "ForumCategoryDetail($id: ID!)", "content": "{\n            forumCategory(_id: $id) {\n              _id\n              name\n            }\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/erxes-ui/src/components/filter/Filter.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "AddCommentReaction($commentId: uuid!, $userId: Int!, $reaction: bpchar!)", "content": "{\n  __typename\n  insert_comment_reactions(\n    objects: {comment_id: $commentId, user_id: $userId, reaction: $reaction}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "Book($isbn: string)", "content": "{\n        book(isbn: $isbn) {\n          title\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/entityStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getCommunitySettingsByMatch($slug: LowercaseString)", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunitySettings.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyPhone/VerifyPhone.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "getLotteries", "content": "{\n          lotteries(first: 100, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }", "metadata": {"commit_hash": "74922f49ceb05f6fc38a0a785d33676c737f67a6", "file": "teams/18-Avault/src/avault-shiden-web/src/state/lottery/getLotteriesData.ts", "repo": "parity-asia_hackathon-2022-summer"}}, {"type": "mutation", "name": "editReplyMessage($messageId: String!, $body: String!)", "content": "{\n    editReplyMessage(body: $body, messageId: $messageId) {\n      body\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "query", "name": "Sections", "content": "{\n  sections{\n    _id\n    name\n    enabled\n    restaurants{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Sections.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeltetRestaurant($id:String!)", "content": "{\n  deleteRestaurant(id:$id){\n    _id\n    isActive\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/RestaurantList.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateNote2($input: CreateNote2Input!)", "content": "{\n        createNote2(input: $input) {\n            noteId\n            noteType\n            owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/IndexWithClaimFieldAsSortKeyAuth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "newsletterSubscriptions($id: String)", "content": "{\n    user(slug: $id) {\n      id\n      newsletterSettings {\n        id\n        status\n        subscriptions {\n          id\n          name\n          subscribed\n          isEligible\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/NewsletterSubscriptions.js", "repo": "republik_plattform"}}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/context/Configuration.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "sendDirectMessage($message: MessageInput!)", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/message/sendDirectMessage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateNewsletterSubscriptionWithMac(\n    $name: NewsletterName!\n    $subscribed: Boolean!\n    $email: String!\n    $mac: String!\n    $consents: [String!]\n  )", "content": "{\n    updateNewsletterSubscription(\n      name: $name\n      subscribed: $subscribed\n      email: $email\n      mac: $mac\n      consents: $consents\n    ) {\n      id\n      name\n      subscribed\n      isEligible\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/MacNewsletterSubscription.js", "repo": "republik_plattform"}}, {"type": "query", "name": "alcance($id: String!)", "content": "{\n      alcance(id: $id) {\n        id\n        nombre\n        valor\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "SampleQuery", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/batch-http/__tests__/batchHttpLink.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fieldFragment\n      }\n\n      fragment fieldFragment on Field {\n        foo @live\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Coupon($coupon:String!)", "content": "{\n  coupon(coupon:$coupon){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Cart/Cart.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "initializeAdminAccount($email: String!, $password: String!)", "content": "{\n        initializeAdminAccount(email: $email, password: $password)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/initialize.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "", "content": "{\n        createAuthor(firstName: \"John\", lastName: \"Smith\") {\n          ...authorDetails\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n        author {\n          name {\n            firstName\n            lastName\n          }\n          age\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "blocks($timestampFrom: Int!, $timestampTo: Int!)", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "b7b9c43058b8bc05dedf45a952c856f892071f89", "file": "src/apollo/block.ts", "repo": "pangolindex_components"}}, {"type": "query", "name": "currentUser", "content": "{\n    me {\n      id\n      login\n      role\n      activated\n      email\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "281d357865d26cb238f40855bc145a25f5c37f7d", "file": "frontend/src/graphql/queries/auth.queries.js", "repo": "Kichiyaki_gqlgen-nextjs-postgres-starter"}}, {"type": "query", "name": "GetQuiz($where:QuizGetWhereInput!)", "content": "{\n    getQuiz(where: $where) {\n      data {\n       name\n       description\n      }\n    }\n  }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/angular-quiz-app/src/app/services/quiz.service.ts", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "RemoveComment($comment_id: ID!)", "content": "{\n    removeComment(comment_id: $comment_id)\n  }", "metadata": {"commit_hash": "985c3c6103b6fbdf208cc69007a81fc1cd62cd31", "file": "graphql/comment.ts", "repo": "rlawnsxo131_devlog-client"}}, {"type": "mutation", "name": "createDatasetLoader(\n      $datasetUri: String\n      $input: NewDatasetLoaderInput\n    )", "content": "{\n      createDatasetLoader(datasetUri: $datasetUri, input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/addDatasetLoader.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "saveTrips($trips:[TripVOInput])", "content": "{\n    saveTrips(trips: $trips){\n      id\n      updateDate\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/trip-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "query", "name": "getAllUsers($role: String, $search: String)", "content": "{\n    getAllUsers(role: $role, search: $search){\n      _id\n      email\n      profile{\n        name \n        image\n        carrierType\n        neighborhood\n        vehical {\n          vehicalTypeId\n          brand\n          color\n          model\n          plateNumber\n          valuePerKm\n          status\n        }\n      }\n      username\n      roles\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/queries.js", "repo": "whitehorse21_Vehicle"}}, {"type": "query", "name": "(\n        $qid: String!\n        $start: String\n        $end: String\n        $tags: [String]\n        $orTags: Boolean\n      )", "content": "{\n        exportMeetings: exportMeetings(\n          qID: $qid\n          start: $start\n          end: $end\n          tags: $tags\n          orTags: $orTags\n        )\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($id: Int!, $record: InputRecord!)", "content": "{\n  editRecord(id: $id, record: $record) {\n    id,\n    title,\n    type,\n    createdAt,\n    payload,\n    userId,\n    status\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/user-record/pages/user-record.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  )", "content": "{\n    updateProduct(\n      id: $id\n      data: { name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/29/UpdateProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "tokenDayDatas($tokenId: ID!)", "content": "{\n    tokenDayDatas(orderBy: date, orderDirection: desc, where: { token: $tokenId }) {\n      id\n      date\n      token {\n        id\n        symbol\n        name\n      }\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      dailyVolumeToken\n      dailyVolumeUSD\n      mostLiquidPairs {\n        id\n        date\n      }\n    }\n    pairs0: pairs(\n      where: { token0: $tokenId }\n      first: 50\n      orderBy: reserveUSD\n      orderDirection: desc\n    ) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n    }\n    pairs1: pairs(\n      where: { token1: $tokenId }\n      first: 50\n      orderBy: reserveUSD\n      orderDirection: desc\n    ) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}}, {"type": "query", "name": "", "content": "{\n        todos {\n          id\n          name\n          description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        keep\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "($id: String!)", "content": "{\n          project(id: $id) {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/containers/App/sagas/projectNextValue/workerCreateModelFilesFromThisData.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "query", "name": "DiscussionPostsIdDesc($limit: Int! = 20)", "content": "{\n  posts(order_by: {id: desc}, limit: $limit, where: {type: {id: {_eq: 1}}}) {\n    ...postFields\n  }\n}\n    ${PostFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddressLogin($address: String!, $signature: String!)", "content": "{\n        addressLogin(address: $address, signature:$signature){\n            token\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Login/query.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$is_active:Boolean!)", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone,is_active:$is_active}){\n          _id\n          name\n          phone\n          is_active\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Profile/Profile.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "Foo", "content": "{\n          foo {\n            bar\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteContent(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content/hooks/content.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "DELETE_TREE($id: ID!)", "content": "{\n        deleteTree(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "GetOrganization($id: ID!)", "content": "{\n  organization(id: $id) {\n    ...OrganizationDetails\n    ...OrganizationContacts\n    healthIndicator {\n      id\n      name\n      order\n    }\n    owner {\n      id\n      firstName\n      lastName\n    }\n    subsidiaryOf {\n      organization {\n        id\n        name\n      }\n    }\n    subsidiaries {\n      organization {\n        name\n        id\n      }\n    }\n    emails {\n      id\n      email\n      primary\n      label\n    }\n    phoneNumbers {\n      id\n      e164\n      rawPhoneNumber\n      label\n    }\n    customFields {\n      id\n      name\n      datatype\n      value\n      template {\n        type\n      }\n    }\n  }\n}\n    ${OrganizationDetailsFragmentDoc}\n${OrganizationContactsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "($user_id: Int)", "content": "{\n    insert_board (\n      objects: [{\n        user_1_id: $user_id,\n        turn: \"x\",\n      }]\n    ) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/components/Boards/BoardsList.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "DisableDataSubscriptions($environmentUri: String!)", "content": "{\n      DisableDataSubscriptions(environmentUri: $environmentUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/disableDataSubscriptions.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "Orders($offset:Int)", "content": "{\n  orders(offset:$offset){\n    _id\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n    }\n    items{\n      _id\n      title\n      food\n      description\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n    }\n    user{\n      _id\n      name\n      phone\n    }\n    rider{\n      _id\n      name\n    }\n    review{\n      _id\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    tipping\n    taxationAmount\n    createdAt\n    completionTime\n    orderDate\n    expectedTime\n    isPickedUp\n    deliveryCharges\n    acceptedAt\n    pickedAt\n    deliveredAt\n    cancelledAt\n    assignedAt\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/routes/index.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateReview($input: CreateReviewInput!)", "content": "{\n    createReview(input: $input)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/createReview.js", "repo": "PREreview_PREreview-2"}}, {"type": "query", "name": "IntrospectionQuery", "content": "{\n\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "b2448fceb3ff9bfe3ffbb6e9f553694e6c6aac38", "file": "src/introspection_query.js", "repo": "launchscout_graphql-admin-react"}}, {"type": "query", "name": "($take: Int, $skip: Int, $sort: JSON, $where: JSON)", "content": "{\n    stores(take: $take, skip: $skip, sort: $sort, where: $where) {\n      items {\n        id\n        nIndex\n\n        project {\n          id\n        }\n\n        client {\n          ...StoreClientNameParts\n        }\n\n        server {\n          ...StoreServerNameParts\n        }\n      }\n      total\n    }\n  }\n\n  # include fragments\n  ${StoreClientNameParts}\n  ${StoreServerNameParts}", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/queries/sub/stores.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "MarkFeatureSeen($feature: String!)", "content": "{\n  markFeatureSeen(feature: $feature)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "createNotificationCreative(\n    $input: CreateNotificationCreativeInput!\n  )", "content": "{\n    createNotificationCreative(createNotificationCreativeInput: $input) {\n      id\n      payloadNotification {\n        body\n        title\n        targetUrl\n      }\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/creative.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "query", "name": "notifications($limit: Int!, $cursor: String, $filter: NotificationFilter!)", "content": "{\n  notified(input: {limit: $limit, cursor: $cursor, filter: $filter}) {\n    totalCount\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    notified {\n      id\n      read\n      readAt\n      notification {\n        id\n        actionType\n        data {\n          key\n          value\n        }\n        causedBy {\n          username\n          fullname\n          id\n        }\n        createdAt\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "getCommerceOrderItems(\n\t\t$filter: String\n\t\t$page: Int = 1\n\t\t$pageSize: Int = 20\n\t)", "content": "{\n\t\torderItems(filter: $filter, page: $page, pageSize: $pageSize) {\n\t\t\titems {\n\t\t\t\texternalReferenceCode\n\t\t\t\tquantity\n\t\t\t\tcustomFields {\n\t\t\t\t\tname\n\t\t\t\t\tcustomValue {\n\t\t\t\t\t\tdata\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toptions\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "", "content": "{\n            deleteListing(id: \"2a376028-384e-4440-b941-a5c1baf4be0c\")\n          }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/web/src/modules/listing/delete/DemoDelete.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "query", "name": "blocks($timestamp: BigInt!)", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "8bcfc4591ba8c5fb2d79e2399259bdee980e81bb", "file": "src/v2/blocks/queries.ts", "repo": "Uniswap_api-deprecated"}}, {"type": "mutation", "name": "deleteTasks($taskIds: [ID!]!)", "content": "{\n    deleteTasks(taskIds: $taskIds) {\n      success\n      taskIds\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/DeleteTasks.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "query", "name": "BestFriend", "content": "{\n        bestFriend {\n          id\n          ...AnimalName\n        }\n      }\n      fragment AnimalName on Animal {\n        name\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/fragmentMatcher.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "sendSlackInvites($input: SendSlackInvitesInput!)", "content": "{\n    sendSlackInvites(input: $input) {\n      ...communityInfo\n      slackSettings {\n        teamName\n        isConnected\n        hasSentInvites\n        memberCount\n        invitesSentAt\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/sendSlackInvites.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "createUser($data: UserCreateInput!)", "content": "{\n    createUser(data: $data) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/create/user-create.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "($id: ID!)", "content": "{\n    deleteFood(id: $id) {\n      result\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "query", "name": "Simple", "content": "{\n        field @storage(if: true)\n        user @client\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/hooks/useRegistration.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "ExecuteRulingMutation(\n    $offerID: String!\n    $ruling: String!\n    $commission: String!\n    $message: String\n    $refund: String\n    $from: String\n  )", "content": "{\n    executeRuling(\n      offerID: $offerID\n      amount: $amount\n      ruling: $ruling\n      commission: $commission\n      message: $message\n      refund: $refund\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "()", "content": "{\n        balance() {\n          list {\n            id\n            balance\n            price\n            add \n            remark\n            createdAt\n            updatedAt\n            balanceStoreInfo{\n                id\n                imageUrl\n                name\n            }\n            balanceUser{\n                id\n            }\n            balanceOrder{\n                id\n                price\n                discount\n                amount\n                code\n                time\n                orderItem{\n                title\n                imageUrl\n                number\n                }\n                \n            }\n          }\n          pagination {\n            pageSize\n            total\n            current\n          }\n        }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/fans/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "query", "name": "poolHourData($pool: String, $startTimestamp: Int, $endTimestamp: Int)", "content": "{\n    poolHourDatas(\n      first: 1000\n      where: {\n        pool: $pool\n        periodStartUnix_gte: $startTimestamp\n        periodStartUnix_lte: $endTimestamp\n      }\n      orderBy: periodStartUnix\n      orderDirection: asc\n      subgraphError: allow\n    ) {\n      periodStartUnix\n      volumeUSD\n      tvlUSD\n      feesUSD\n      untrackedVolumeUSD\n      token0Price\n      token1Price\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "GetListItems($where: LessonFilter)", "content": "{\n        currentFilter @client @export(as: \"where\") {\n          title_contains\n          enabled\n        }\n        lessonCollection(where: $where) {\n          items {\n            title\n            slug\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getMyListCards($cardIds: [ID!]!, $first: Int!)", "content": "{\n    cards(focus: $cardIds, first: $first) {\n      nodes {\n        id\n        user {\n          id\n          name\n          slug\n        }\n        payload(\n          paths: [\n            \"party\"\n            \"yearOfBirth\"\n            \"nationalCouncil.candidacy\"\n            \"nationalCouncil.votes\"\n            \"nationalCouncil.elected\"\n            \"nationalCouncil.listNumbers\"\n            \"councilOfStates.candidacy\"\n            \"councilOfStates.votes\"\n            \"councilOfStates.elected\"\n            \"councilOfStates.secondBallotNecessary\"\n          ]\n        )\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/MyList.js", "repo": "republik_plattform"}}, {"type": "query", "name": "ideaIssueReplyFindAll($filter: Filter)", "content": "{\n      ideaIssueReplyFindAll(filter: $filter) {\n        ...replyFields\n      }\n    }\n    ${REPLY_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/reply.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "addPerson", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/shared-operations.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Images", "content": "{\n    images {\n      id\n      publicId\n      format\n      version\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/cloudinary-upload-prisma2/client/src/ImageList.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($number: Int!, $support: Boolean!)", "content": "{\n    proposals(where: { number: $number }) {\n      votes(where: { support: $support }) {\n        support\n        votingPower\n        voter {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/components/Governance/ModalVotes/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "mutation", "name": "PushToken($token:String)", "content": "{\n    pushToken(token:$token){\n      _id\n      notificationToken\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Settings/Settings.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "Referent($slug: String!)", "content": "{\n    user(slug: $slug) {\n      username\n      slug\n      profile {\n        pictureUrl(derivative: \"width=320\")\n        fallbackUrl(derivative: \"width=320\")\n      }\n    }\n    lastRookiePack {\n      pictureUrl(derivative: \"width=512\")\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/referal.ts", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "TestQuery", "content": "{\n          rates(currency: \"USD\") {\n            rate\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "findUpdatedMessages", "content": "{\n        message(\n            distinct_on: [id]\n            limit: 10\n        ) {\n            __typename\n            id\n            createdAt\n            updatedAt\n            message\n        }\n    }", "metadata": {"commit_hash": "95e85cd3b0e3e14c443b2ccc52cb171ab51c6fbf", "file": "examples/simple-example/src/ExamplePage.tsx", "repo": "beepsoft_hasura-bliq"}}, {"type": "query", "name": "($uuid: String!)", "content": "{\n    rfp(uuid: $uuid) {\n      ...RFP_ATTRIBUTES\n    }\n    getProposalsByRFPId(rfpId: $uuid) {\n      ...PROPOSAL_ATTRIBUTES\n    }\n    msasByRFPId(rfpId: $uuid) {\n      ...MSA_ATTRIBUTES\n    }\n  }\n  ${RFP_ATTRIBUTES}\n  ${PROPOSAL_ATTRIBUTES}\n  ${MSA_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/rfp.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "GetProductAvgRatingMetafield($productId: ID!)", "content": "{\n    product(id: $productId) {\n      avgRatingMetafield: metafield(\n        namespace: \"${METAFIELD_NAMESPACE.standardRating}\",\n        key: \"${METAFIELD_KEY.ratings}\"\n      ) {\n        id\n        key\n        namespace\n        value\n        type\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "server/handlers/mutations/update-product-avg-rating.js", "repo": "Shopify_product-reviews-sample-app"}}, {"type": "query", "name": "CharacterDetail($id: ID!)", "content": "{\n    getCharacter(characterId: $id) {\n      name\n      playedBy\n      culture\n      titles\n      aliases\n      born\n      died\n      allegiances {\n        name\n      }\n      isAlive\n      father {\n        id\n        name\n      }\n      mother {\n        id\n        name\n      }\n      spouse {\n        id\n        name\n      }\n      children {\n        id\n        name\n      }\n      appearedIn {\n        name\n      }\n\n      books {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "8f01d346bdf8047fc3682b154360a2743efb0bfe", "file": "client/src/queries/CharacterDetailQuery.tsx", "repo": "FormidableLabs_graphql-typescript-blog"}}, {"type": "query", "name": "GetUserByCognitoId($cognitoId: ID!)", "content": "{\n        getUserByCognitoId(cognitoId: $cognitoId) {\n            items {\n                id\n                tenantId\n            }\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletProfilePictureUploadURLResolver/src/index.js", "repo": "platelet-app_platelet"}}, {"type": "subscription", "name": "onUserAdded", "content": "{\n    user {\n      mutation\n      node {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "27327705aff1ce63cab00c125c8b4f760df39789", "file": "client/graphql/subscriptions/user.js", "repo": "greatWall627_chatting-pro"}}, {"type": "query", "name": "getCoupons($status: String, $searchBy: String)", "content": "{\n    coupons(status: $status, searchBy: $searchBy) {\n      id\n      title\n      code\n      number_of_used_coupon\n      number_of_coupon\n      expiration_date\n      creation_date\n      status\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CampaingForm/CampaingForm.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "syncPaymentIntent($stripePaymentIntentId: ID!, $companyId: ID!)", "content": "{\n    syncPaymentIntent(\n      stripePaymentIntentId: $stripePaymentIntentId\n      companyId: $companyId\n    ) {\n      pledgeStatus\n      updatedPledge\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Submit.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "deleteCommunity($communityId: ID!)", "content": "{\n    deleteCommunity(communityId: $communityId)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/deleteCommunity.js", "repo": "DoBestMan_spectrum"}}, {"type": "subscription", "name": "onCommentAdded($repoFullName: String!)", "content": "{\n        commentAdded(repoFullName: $repoFullName) {\n          id\n          content\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "issueChangeStatus($input: IssueChangeStatusInput!)", "content": "{\n      issueChangeStatus(input: $input) {\n        ...issueFullFields\n      }\n    }\n    ${ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "subscription", "name": "FETCH_LIMITED($where: nodes_bool_exp)", "content": "{\n  nodes(where: $where) {\n    from_id id to_id type_id in { from_id id to_id type_id } out { from_id id to_id type_id }\n  }\n}", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "projects/app/pages/mp.tsx", "repo": "deep-foundation_boilerplate"}}, {"type": "query", "name": "Me", "content": "{\n        me {\n            _id\n            name\n            avatarUrl\n            bannerUrls\n            introduction\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "", "content": "{\n    primaryMarketArtistsFundTotalValue\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/components/Homepage/ArtistsFund.tsx", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "CreateSleepVariable($name: String!, $emoji: String!)", "content": "{\n  createSleepVariable(emoji: $emoji, name: $name) {\n    name\n    emoji\n    custom\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "getRoles", "content": "{\n        getRoles {\n            _id\n            name\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetRoles.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "ChangeCustomerPlan($planID: String!)", "content": "{\n    changeCustomerPlan(planID: $planID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ChoosePlanPane/ChoosePlanPane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ADD_TO_CART_MUTATION($id: ID!)", "content": "{\n    addToCart(productId: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/48/AddToCart.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "", "content": "{ someUnion {... on someUnionMember { someField }}}", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GetSecrets($appId: uuid!)", "content": "{\n  appSecrets(appID: $appId) {\n    ...Secret\n  }\n}\n    ${SecretFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "removeCommunityModerator($input: RemoveCommunityModeratorInput!)", "content": "{\n    removeCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/removeCommunityModerator.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "($url: String!, $userId: String!, $caption: String!)", "content": "{\n    insert_Post(objects: { url: $url, caption: $caption, user_id: $userId }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "7907866ee41941a96b937dd6e34724a112ce5298", "file": "src/components/Upload.js", "repo": "abhi40308_instagram-clone"}}, {"type": "subscription", "name": "NotificationSubscription(\n  $user_id: String!\n)", "content": "{\n  notifications (\n    where: {\n      to: {_eq: $user_id},\n      confirmed: {_eq: false}\n    },\n    order_by: {created_at: desc}\n  ){\n    id\n    type\n    object\n    in_which\n    created_at\n    created_by\n    to\n    confirmed\n    creator {\n      name\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "ccd5f11eadcd16c0ea1232f165fbb0029a421c73", "file": "src/services/graphql/endpoints/notification.js", "repo": "Makermed_CleanAirMap"}}, {"type": "query", "name": "getInappropiateLanguage($username: String!, $userToken: String!)", "content": "{\n            getInappropiateLanguage(username: $username, userToken: $userToken) {\n                word\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "query", "name": "integrantes($where: IntegranteWhereInput)", "content": "{\n    integrantes (where: $where) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        fullname\n        username\n      }\n      proyecto {\n        id\n        codigo\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+profesor/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "($outcomeSetID: String!, $categoryID: String!)", "content": "{\n        deleteCategory: DeleteCategory(\n          outcomeSetID: $outcomeSetID\n          categoryID: $categoryID\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${osFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/categories/index.ts", "repo": "impactasaurus_app"}}, {"type": "query", "name": "locations", "content": "{\n            locations {\n              id\n              name\n              type {\n                id\n                name\n              }\n              parentLocation {\n                id\n                name\n              }\n              canTrade\n            }\n          }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/views/location/location.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "query", "name": "CLIENT($clientId: ID!)", "content": "{\n    client(id: $clientId) {\n      id\n      name\n      email\n    }\n  }", "metadata": {"commit_hash": "182740b7e289d56a59af3397d0a28153e8f3f2ab", "file": "clientServerExampleWithGraphQL/packages/web/src/components/ClientEdit.js", "repo": "AlbertoVictorRebello_hiringCoders2022"}}, {"type": "mutation", "name": "($id: Int!, $queue: String!)", "content": "{\n  deleteTask(id: $id, queue: $queue) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/tasks-queues/hooks/tasks.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "createCourse($name: String!)", "content": "{\n    addCourse(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/courses.query.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "resolvePledgeToPayment($pledgeId: ID!, $reason: String!)", "content": "{\n    resolvePledgeToPayment(pledgeId: $pledgeId, reason: $reason) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Pledges/ResolvePledgeToPayment.js", "repo": "republik_plattform"}}, {"type": "query", "name": "queryB", "content": "{\n        person(id: \"abc\") {\n          __typename\n          id\n          lastName\n          age\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "ViewerLogin", "content": "{\n  viewer {\n    login\n    avatarUrl\n    name\n  }\n}", "metadata": {"commit_hash": "5358526a9bb7c3ab826658a613e5b487b064a682", "file": "src/server/models/userModel.ts", "repo": "PolymerLabs_project-health"}}, {"type": "query", "name": "", "content": "{\n        todos {\n          id\n          name\n          description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($email: String, $password: String)", "content": "{\n    adminLogin(email: $email, password: $password) {\n      _id\n      accessToken\n      refreshToken\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/queries/adminLoginQuery.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "query", "name": "fetchUserIdeas($userId: String!)", "content": "{\n            ideas(createdById: $userId) {\n              totalCount\n              edges {\n                node {\n                  id\n                  title\n                  description\n                  imageUrl\n\n                  challenge {\n                    id\n                    title\n                    closeDate\n                  }\n\n                  createdDate\n                  modifiedDate\n\n                  reactionsSummary {\n                    value\n                    totalCount\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "query", "name": "getChannelById($id: ID)", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/channel/getChannel.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateNote($input: NoteUpdateInput!)", "content": "{\n  note_Update(input: $input) {\n    ...NoteContent\n  }\n}\n    ${NoteContentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "SubmitRefund($paymentId: ID!, $amount: Int!, $reference: String)", "content": "{\n    refund: submitRefund(\n      paymentId: $paymentId\n      amount: $amount\n      reference: $reference\n    ) {\n      ...PaymentRefund\n    }\n  }\n  ${PaymentRefundFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "($id: ID!, $title: String!, $actions: [TodoActionInputType]!)", "content": "{\n    updateTodoItem(id: $id, title: $title, actions: $actions) {\n      _id\n      title\n      completed\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "query", "name": "", "content": "{\n        fortuneCookie @skip(if: false)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "", "content": "{\n    getAllTasks{\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}}, {"type": "query", "name": "orgViewDirectory($organizationId: ID!)", "content": "{\n        organization(id: $organizationId) {\n            projects {\n                name\n                views {\n                    view_id\n                    view_type\n                    path\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-web/view-directory-tree.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  )", "content": "{\n    updateProduct(\n      id: $id\n      data: { name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/29/UpdateProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CreateGroup($input: NewGroupInput)", "content": "{\n      createGroup(input: $input) {\n        groupUri\n        label\n        groupRoleInOrganization\n        created\n        userRoleInGroup\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/createGroup.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "people($first: Int)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/client-option.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "subscription", "name": "statusChanged($id: ID!)", "content": "{\n    onStatus(id: $id) ${presenceResult}\n  }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "test/integration/apiclient.ts", "repo": "aws-samples_aws-appsync-presence-api"}}, {"type": "query", "name": "getMyListCards($cardIds: [ID!]!, $first: Int!)", "content": "{\n    cards(focus: $cardIds, first: $first) {\n      nodes {\n        id\n        user {\n          id\n          name\n          slug\n        }\n        payload(\n          paths: [\n            \"party\"\n            \"yearOfBirth\"\n            \"nationalCouncil.candidacy\"\n            \"nationalCouncil.votes\"\n            \"nationalCouncil.elected\"\n            \"nationalCouncil.listNumbers\"\n            \"councilOfStates.candidacy\"\n            \"councilOfStates.votes\"\n            \"councilOfStates.elected\"\n            \"councilOfStates.secondBallotNecessary\"\n          ]\n        )\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/MyList.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "registerFeedbackResponse($thumbnail: String!, $link: String!)", "content": "{\n    __typename\n    registerFeedbackResponse(input: { thumbnail_: $thumbnail, link_: $link }) {\n      animation {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "getMySessions", "content": "{\n    sessions {\n      me {\n        all {\n          id\n          title\n          status\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Member/MySessions/Current.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "createSong($song: SongInput!)", "content": "{\n    createSong(song: $song) {\n      id\n      url\n      title\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/handle-artist/songs.mutation.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "WithdrawListing(\n    $listingID: String!\n    $target: String!\n    $reason: String\n    $from: String\n  )", "content": "{\n    withdrawListing(\n      listingID: $listingID\n      target: $target\n      reason: $reason\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "getDatasetStorageLocation($locationUri: String!)", "content": "{\n      getDatasetStorageLocation(locationUri: $locationUri) {\n        dataset {\n          datasetUri\n          name\n          userRoleForDataset\n          region\n          SamlAdminGroupName\n          S3BucketName\n          AwsAccountId\n          owner\n          organization {\n            label\n          }\n          environment {\n            label\n            region\n            subscriptionsEnabled\n            subscriptionsProducersTopicImported\n            subscriptionsConsumersTopicImported\n            subscriptionsConsumersTopicName\n            subscriptionsProducersTopicName\n          }\n        }\n        owner\n        description\n        created\n        tags\n        locationUri\n        AwsAccountId\n        label\n        name\n        S3Prefix\n        terms {\n          count\n          nodes {\n            nodeUri\n            path\n            label\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/getDatasetStorageLocation.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "$", "content": "{this.entity}Connection($where: ProyectoWhereInput) {\n      ${this.entity}Connection(where: $where) {\n          aggregate {\n          count\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+dashboard/count-project/count-mproject.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "usersQuery(\n            $where: User_filter!\n            $domain: String!\n            $currentAddress: String!\n        )", "content": "{\n            users(\n                where: $where\n                domain: $domain\n                currentAddress: $currentAddress\n            ) {\n                accounts {\n                    ${requestedFields}\n                }\n                error {\n                    type\n                    key\n                    message\n                    response\n                }\n            }\n        }", "metadata": {"commit_hash": "a47d3d9ea38cd1363ede730998145da663df6091", "file": "packages/extension/src/background/services/GraphQLService/Queries/usersQuery.js", "repo": "AztecProtocol_aztec-v1"}}, {"type": "query", "name": "getReceipt($id: ID!)", "content": "{\n        receipt(id: $id) {\n            id\n            time\n            kind\n            status\n            statusText\n            payUrl\n            money\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/receipt.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "primeQuery", "content": "{\n        luke: people_one(id: 1) {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "EditPost($id: Int!, $content: String!, $title: String!)", "content": "{\n  update_posts(where: {id: {_eq: $id}}, _set: {content: $content, title: $title}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "($loginUser: UserInput)", "content": "{\n    login(user: $loginUser) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        username\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/login.ts", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "getEnvironment(\n      $filter: OrganizationUserFilter\n      $environmentUri: String\n    )", "content": "{\n      getEnvironment(environmentUri: $environmentUri) {\n        environmentUri\n        userRoleInEnvironment\n        notMembers(filter: $filter) {\n          count\n          nodes {\n            userName\n            userRoleInEnvironment\n            created\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/listEnvironmentNotMembers.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "todos", "content": "{\n          todo_list {\n            id\n            title\n            tasks {\n              id\n              text\n              completed\n            }\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/recycled-queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "fetcChallengeIdeas($challengeId: String!)", "content": "{\n            ideas(challengeId: $challengeId) {\n              totalCount\n              edges {\n                node {\n                  id\n                  title\n                  description\n                  imageUrl\n                  challenge {\n                    id\n                    title\n                  }\n\n                  reactions {\n                    totalCount\n                  }\n\n                  reactionsSummary {\n                    value\n                    totalCount\n                  }\n\n                  myReaction {\n                    id\n                    value\n                  }\n\n                  createdDate\n                  createdBy {\n                    id\n                    name\n                    imageUrl\n                  }\n                  modifiedDate\n                  modifiedBy {\n                    id\n                    name\n                    imageUrl\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "getQuestions", "content": "{\n    questions \n      @rest(\n          type: \"Question\" \n          path: \"/voc\" \n          method: \"GET\"\n      ) {\n      id\n      title\n      createdAt\n      username\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/voc/ApolloVoc.js", "repo": "ymkmoon_toyseven-react"}}, {"type": "mutation", "name": "CreateQuestionMutation($input: CreateQuestionInput!)", "content": "{\n    createQuestion(input: $input) {\n      dialogue {\n        id\n        created\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateQuestionMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  user: deleteChatId(id: $id) {\n    id,\n    chatIds {\n      id,\n      transport,\n      chatId\n    }\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/chat-ids-manager/queries.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "SaveCard($cardId: ID!, $name: String!, $image: String, $setName: String, $seriesName: String, $setImage: String, $rarity: String, $releaseDate: String)", "content": "{\n    saveCard(cardId: $cardId, name: $name, image: $image, setName: $setName, seriesName: $seriesName, setImage: $setImage, rarity: $rarity, releaseDate: $releaseDate) {\n      _id\n      username\n      email\n      savedCards {\n        cardId\n        name\n        image\n        setName\n        seriesName\n        setImage\n        rarity\n        releaseDate\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/mutations.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "mutation", "name": "", "content": "{\n      deleteDog(dogId: \"${this.dogID}\"){\n        name\n      }\n    }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/updateorremovedog/feature/src/lib/updateorremovedog.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "mutation", "name": "updateChannelInfo($channelUrl: String!, $date: String!)", "content": "{\n    updateChannelInfo(channelUrl: $channelUrl, date: $date) {\n      id\n      fullname\n      username\n      bio\n      email\n      social\n      image\n      isOnline\n      owner\n      communitiesOwned {\n        id\n        url\n      }\n      communitiesFollowed {\n        id\n        url\n        author {\n          id\n        }\n        image\n        name\n        members {\n          id\n        }\n        notifications {\n          id\n        }\n      }\n      role {\n        id\n        roleSettings\n        title\n      }\n      channelsInfo {\n        id\n        channel {\n          id\n          name\n          url\n        }\n        lastUpdateAt\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/ChannelInfo.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "", "content": "{\n    endSession\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/SignOut.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "SyncDatasetTableColumns($tableUri: String!)", "content": "{\n      syncDatasetTableColumns(tableUri: $tableUri) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          columnUri\n          name\n          description\n          typeName\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/syncDatasetTableColumns.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "", "content": "{ ${x} }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "", "content": "{\n        id\n        firstName @include(if: true)\n        lastName @upperCase\n        birthDate @dateFormat(format: \"DD-MM-YYYY\")\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/readFromStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "user($username: String)", "content": "{\n    user(username: $username) {\n      ...userInfo\n      ...userCommunities\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunitiesFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/admin/src/api/queries.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "name($data: ImageCreateInput!)", "content": "{\n\t\tcreateImage(data: $data) {\n\t\t\tid\n\t\t\timage {\n\t\t\t\tid\n\t\t\t\tfilename\n\t\t\t\tpublicUrl\n\t\t\t\tencoding\n\t\t\t\tpath\n\t\t\t}\n\t\t\tcaption\n\t\t}\n\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/dynamic-blocks/image.js", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "deleteMessage($id: ID!)", "content": "{\n    deleteMessage(id: $id)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/message/deleteMessage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n    topTags {\n      id\n      tagName\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "subscription", "name": "SubscriptionNewMessage($order:ID!)", "content": "{\n  subscriptionNewMessage(order:$order){\n    id\n    message\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/ChatWithCustomer/useChatScreen.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreatePhoto(\n          $input: CreatePhotoInput!\n          $condition: ModelPhotoConditionInput\n      )", "content": "{\n          createPhoto(input: $input, condition: $condition) {\n              id\n              albumId\n              owner\n              bucket\n              fullsize {\n                  key\n                  width\n                  height\n              }\n              thumbnail {\n                  key\n                  width\n                  height\n              }\n              album {\n                  id\n                  name\n                  owner\n              }\n          }\n      }", "metadata": {"commit_hash": "856a02a2c036a2e9f8222da10b1d79c45d5c5ed4", "file": "amplify/backend/function/S3Trigger984fb593/src/reference-index.js", "repo": "aws-samples_lambda-refarch-imagerecognition"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n  uploadFiles(files: $files) {\n    filename\n  }\n}", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/upload/file-upload.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "GetUser($username: String!)", "content": "{\n        user(username: $username) {\n          id\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/testing/mocking/__tests__/MockedProvider.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "WithVariables($id: ID!)", "content": "{\n        foo @client {\n          bar(id: $id)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "($id: ID!)", "content": "{\n    user(id: $id) {\n      votes {\n        support\n        proposal {\n          id\n          number\n          targets\n          values\n          signatures\n          startBlock\n          description\n          endBlock\n          created\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/components/Governance/UserTableVotingHistory/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "", "content": "{\n    me {\n      id\n      name\n      email\n    }\n  }", "metadata": {"commit_hash": "0898364e6e0b73a78d0deb77ffed3cdafc782d09", "file": "template/tests/utils/operations.js", "repo": "tylim88_Create-Prisma-App"}}, {"type": "mutation", "name": "requestResetPassword($email: String!)", "content": "{\n  requestResetPassword(email: $email) {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "nameOfMutation", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "", "content": "{\n    getAllTasks{\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}}, {"type": "mutation", "name": "usersConfigEmailSignatures($signatures: [EmailSignature])", "content": "{\n          usersConfigEmailSignatures(signatures: $signatures) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/ui-settings/src/email/containers/Signature.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "DeleteTag($id: ID!)", "content": "{\n  tag_Delete(id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "AddListOwner(\n    $listId: ID!\n    $companyId: ID!\n    $userEmails: [String!]\n    $teamIds: [ID!]\n  )", "content": "{\n    addListOwner(\n      listId: $listId\n      companyId: $companyId\n      userEmails: $userEmails\n      teamIds: $teamIds\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddListOwner.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "(\n      $report_name: String!,\n      $report_desc: String!,\n      $template_name: [String]!,\n      $file_name: [String]!,\n      $project_id: [String]!,\n      $node_id: [String]!,\n      $variable: [String]!,\n      $previous: [String]!,\n      $modified: [String]!,\n      $userId:ID!\n    )", "content": "{\n      addReport(\n        report_name:$report_name\n        report_desc:$report_desc\n        template_name:$template_name\n        file_name:$file_name\n        project_id:$project_id\n        node_id:$node_id\n        variable:$variable\n        previous:$previous\n        modified:$modified\n        userId:$userId\n      ){\n        _id\n        report_name\n        report_desc\n        template_name\n        file_name\n        project_id\n        node_id\n        variable\n        previous\n        modified\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "topNavbar", "content": "{\n  notifications {\n    createdAt\n    read\n    id\n    entity {\n      id\n      type\n      name\n    }\n    actor {\n      id\n      type\n      name\n    }\n    actionType\n  }\n  me {\n    user {\n      id\n      fullName\n      profileIcon {\n        initials\n        bgColor\n        url\n      }\n    }\n    teamRoles {\n      teamID\n      roleCode\n    }\n    projectRoles {\n      projectID\n      roleCode\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "CreateToken($data: CreateTokenInput!)", "content": "{\n  createToken(data: $data) {\n    updatedAt\n    title\n    sortOrder\n    points\n    price\n    id\n    description\n    createdAt\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/tokens.js", "repo": "competitivebidding_frontend"}}, {"type": "subscription", "name": "SourceSubscription", "content": "{\n  sources (\n    where: {category_id: {_neq: \"deleted\"}}\n  ){\n    id\n    category_id\n    name\n    description\n    slug\n    image\n    branch\n    weblink\n    translate\n    translateLang\n    translateAPI\n    followers\n    upvotes\n    throttle\n    disableFullText\n    created_at\n    created_by\n    approved\n    private\n    last_updated\n    updated_at\n    socialtags {\n      tag\n      type\n    }\n  }\n}", "metadata": {"commit_hash": "ccd5f11eadcd16c0ea1232f165fbb0029a421c73", "file": "src/services/graphql/endpoints/source.js", "repo": "Makermed_CleanAirMap"}}, {"type": "query", "name": "", "content": "{ a b }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/readFromStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "TodoListCell_CheckTodo($id: Int!, $status: String!)", "content": "{\n    updateTodoStatus(id: $id, status: $status) {\n      id\n      __typename\n      status\n    }\n  }", "metadata": {"commit_hash": "1031aa444ebf354ed13eb74c16f02d76b09f3302", "file": "fixtures/example-todo-master/web/src/components/TodoListCell/TodoListCell.js", "repo": "decoupled_redwood-core"}}, {"type": "query", "name": "", "content": "{\n        author {\n          ...authorDetails\n        }\n      }\n\n      fragment authorDetails on Author {\n        firstName\n        lastName\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateBug($bugId: ID!, $description: String!, $reproduction: String!)", "content": "{\n        updateBug(BugId: $bugId, description: $description, reproduction: $reproduction) {\n            _id\n            bugName\n            productName\n            date\n            severity\n            description\n            reproduction\n            status\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "query", "name": "blocks($timestamp: BigInt!)", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "8bcfc4591ba8c5fb2d79e2399259bdee980e81bb", "file": "src/v2/blocks/queries.ts", "repo": "Uniswap_api-deprecated"}}, {"type": "query", "name": "getNoticeCount", "content": "{\n    getNoticeCount {\n      ...CATEGORIES\n    }\n  }\n  ${CATEGORIES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/notices.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "", "content": "{\n        starAuthor(id: 12) {\n          author {\n            __typename\n            ...authorDetails\n          }\n        }\n      }\n\n      fragment authorDetails on Author {\n        firstName\n        lastName\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "idea($id: ID!)", "content": "{\n            idea(id: $id) {\n              id\n              title\n              description\n              imageUrl\n\n              myReaction {\n                id\n                value\n              }\n\n              reactions {\n                totalCount\n                edges {\n                  node {\n                    id\n                    value\n\n                    createdDate\n                    createdBy {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n              reactionsSummary {\n                value\n                totalCount\n              }\n\n              challenge {\n                id\n                title\n                closeDate\n              }\n\n              createdBy {\n                id\n                name\n                imageUrl\n              }\n              createdDate\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "query", "name": "", "content": "{\n        author {\n          firstName\n          lastName\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "", "content": "{\n            author {\n              name\n              books {\n                isbn\n                title\n                year\n              }\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addressUnlink($address: String!)", "content": "{\n  addressUnlink(address: $address) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "EditAddress($addressInput:AddressInput!)", "content": "{\n  editAddress(addressInput:$addressInput){\n    _id\n    label\n    delivery_address\n    details\n    longitude\n    latitude\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/EditAddress/EditAddress.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "query", "name": "($label: String!)", "content": "{\n    openIssues(label: $label) {\n      totalIssues\n      issues {\n        ...GitHubIssueFragment\n      }\n    }\n  }\n  ${GitHubIssueFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/a-whole-bunch-o-gatsby-templates/store.gatsbyjs.org/src/components/Dashboard/OpenIssues.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "AddItem($command: InputAddItemType!)", "content": "{\n    addItem(command: $command) {\n      name,\n      itemsQuantity\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/addToCart/addToCartMutation.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "query", "name": "getMailbox(\n    $after: String\n    $search: String\n    $hasError: Boolean\n    $id: ID\n  )", "content": "{\n    mailbox(\n      first: 100\n      after: $after\n      filters: { hasError: $hasError, email: $search, id: $id }\n    ) {\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      nodes {\n        ...MailboxRecordFragment\n      }\n    }\n  }\n\n  ${fragments.record}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Mailbox/Page.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "query", "name": "Simple", "content": "{\n        network\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "insert_author($name: String!)", "content": "{\n    insert_author(objects: { name: $name }) {\n      returning {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "gatsby-postgres-graphql/src/components/AddAuthor.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "Foo", "content": "{\n          foo {\n            bar\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "pairs($tokenAddress: ID!)", "content": "{\n    pairs(where: { id: $tokenAddress }) {\n      token0Price\n      token1Price\n      totalSupply\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "68a9441d0362624484c279c5ab7615d73f1ad775", "file": "src/erc20/erc20.controller.ts", "repo": "DoBestMan_Bondswap-backend"}}, {"type": "query", "name": "channelNotifications($channelUrl: String!)", "content": "{\n    channelNotifications(channelUrl: $channelUrl) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "query", "name": "GetClientData($id: ID)", "content": "{\n        clientEntity(id: $id) @client(always: true) {\n          id\n          title\n          titleLength @client(always: true)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "TodoQuery", "content": "{\n          todos {\n            totalCount\n            extraMetaData\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "disableBrandedLogin($input: DisableBrandedLoginInput!)", "content": "{\n    disableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/disableBrandedLogin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "GetAds($location: String!)", "content": "{\n    ads(where:{\n      location: $location\n    }){\n          id,\n          url,\n          banner{\n            url\n          }\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/AdsSlider.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "query", "name": "fetchHan($id: String)", "content": "{\n          people_one(id: $id) {\n            name\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "ImportDataset($input: ImportDatasetInput)", "content": "{\n      importDataset(input: $input) {\n        datasetUri\n        label\n        userRoleForDataset\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/importDataset.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "IssuesSearch($query: String!)", "content": "{\n  search(query:$query,type:ISSUE,last:10) {\n    nodes {\n      ... on Issue {\n        ...issueFields\n        ...popularityFields\n        ...commentFields\n      }\n    }\n  }\n}\n\n${issueFragment}\n${popularityFragment}\n${commentFragment}", "metadata": {"commit_hash": "5358526a9bb7c3ab826658a613e5b487b064a682", "file": "src/server/apis/issues.ts", "repo": "PolymerLabs_project-health"}}, {"type": "mutation", "name": "(\n    $controller: String!\n    $chainId: Int!\n    $signature: String!\n    $logo: String\n    $summary: String\n  )", "content": "{\n    savePool(\n      controller: $controller\n      chainId: $chainId\n      signature: $signature\n      logo: $logo\n      summary: $summary\n    ) {\n      message\n      ok\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/PoolManager/Details/PoolImage/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "mutation", "name": "updateMember($profile: ProfileUpdateInput!)", "content": "{\n    members {\n      member {\n        update(profile: $profile) {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/CounselorAgreement/Acknowledgment.js", "repo": "ThatConference_that-website"}}, {"type": "query", "name": "characters", "content": "{\n    characters(order_by: {id: asc}) {\n      id\n      name\n  }\n  }", "metadata": {"commit_hash": "5bafb503f63b1dfc180e77f02d16b96d6503eb11", "file": "src/constants/graphql.js", "repo": "malgamves_GameOfCharts"}}, {"type": "query", "name": "$", "content": "{type}Detail($id: String!) {\n            ${type}Detail(_id: $id) {\n              ${fields}\n            }\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/erxes-ui/src/components/filter/Filter.tsx", "repo": "erxes_erxes-community"}}, {"type": "query", "name": "leaderboarders", "content": "{\n        leaderboard {\n            username\n            score\n        }\n    }", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/queries.js", "repo": "Morgoth27_pewpew_spaceman"}}, {"type": "mutation", "name": "MUTATION_UPDATE_QUANTITY($itemId: String!, $quantity: Int!)", "content": "{\n    updateCartQuantity(itemId: $itemId, quantity: $quantity) {\n        success\n        message\n        data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/checkout/mutations/MUTATION_UPDATE_CART_ITEM.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "CreateCategory($title:String!,$description:String!,$img_menu:String)", "content": "{\n  createCategory(category:{title:$title,description:$description,img_menu:$img_menu}){_id}\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Category/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "getCommunitiesCollection($curatedContentType: String)", "content": "{\n    communities(curatedContentType: $curatedContentType) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunities.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Posts ($userId: ID!, $after: String)", "content": "{\n    posts (first: ${POSTS_PER_PAGE}, after: $after, filter: { user: { value: $userId } }, orderBy: [{ createdAt: DESC }]) {\n      ...PostList\n    }\n  }\n  ${PostList.fragments.postList}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/lists/UserPostList.tsx", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/http/__tests__/HttpLink.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "AddOrUpdate", "content": "{\n        addOrUpdate(id: $id, title: $title) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "toggleChannelNotifications($channelId: ID!)", "content": "{\n    toggleChannelNotifications(channelId: $channelId) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/toggleChannelNotifications.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "", "content": "{\n        person {\n          __typename\n          firstName\n          lastName\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/diffAgainstStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setIsActiveRoom($id: ID!, $isActive: Boolean!)", "content": "{\n        setIsActiveRoom(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "updateTagging($id: ID!, $level: Int, $description: String)", "content": "{\n    updateTagging(id: $id, level: $level, description: $description) {\n      id\n      level\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreateExchange($name: String!, $color: Int!)", "content": "{\n  createExchange(exchangeData: {exchangeColor: $color, exchangeName: $name}) {\n    id\n    name\n    colour\n    userPermissions {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "mutation", "name": "DeployIdentity(\n    $from: String!\n    $profile: ProfileInput\n    $attestations: [String]\n  )", "content": "{\n    deployIdentity(\n      from: $from\n      attestations: $attestations\n      profile: $profile\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/DeployIdentity.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "", "content": "{\n        author {\n          firstName\n          lastName\n        }\n      }\n\n      query {\n        author {\n          address\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/getFromAST.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "MarkConversationRead($id: String!)", "content": "{\n    markConversationRead(id: $id) {\n      success\n      messagesRead\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/MarkConversationRead.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "CardModelSaleTransfers($cardModelId: ID!, $sort: CardTransfersSort!)", "content": "{\n    cardModelSaleTransfers(filter: { cardModelId: $cardModelId }, sort: $sort) {\n      id\n      fromOwner {\n        user {\n          slug\n          username\n        }\n      }\n      toOwner {\n        user {\n          slug\n          username\n          profile {\n            pictureUrl(derivative: \"width=128\")\n            fallbackUrl(derivative: \"width=128\")\n          }\n        }\n      }\n      card {\n        serialNumber\n      }\n      price\n      date\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/CardTransfers.ts", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "clusterAddonsConfigurations", "content": "{\n    clusterAddonsConfigurations {\n      ...AddonsConfiguration\n    }\n  }\n\n  ${ADDONS_CONFIGURATION_FRAGMENT}", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Queries.service.ts", "repo": "kyma-project_console"}}, {"type": "query", "name": "getOutcomeSet($id: String!)", "content": "{\n        getOutcomeSet: outcomeset(id: $id) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/outcomeSets/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "createPullRequest($createPullRequestInput: CreatePullRequestInput!)", "content": "{\n    ${createPullRequestMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($name: String!, $genre: String!, $authorId: ID!)", "content": "{\n    addBook(name: $name, genre: $genre, authorId: $authorId) {\n      name\n      id\n    }\n  }", "metadata": {"commit_hash": "452abd50606adbf0cc2be478b3724da5f3dd770b", "file": "client/src/queries/queries.js", "repo": "Shawoll_GraphQLServerNode"}}, {"type": "mutation", "name": "UPDATE_PRODUCT_MUTATION (\n    $id: ID!\n    $name: String!\n    $description: String!\n    $price: Int!\n    $discount: Int!\n    $salePrice: Int!\n    $sku: String!\n    $unit: String!\n    $categoryId: ID!\n    $images: [ProductImageCreateWithoutProductInput!]!\n    $alreadyUploadedImages: [ProductImageCreateWithoutProductInput!]!\n  )", "content": "{\n    updateProduct(\n      id: $id\n      name: $name\n      description: $description\n      discount: $discount\n      salePrice: $salePrice\n      sku: $sku\n      price: $price\n      unit: $unit\n      categoryId: $categoryId\n      images: $images\n      alreadyUploadedImages: $alreadyUploadedImages\n    ) {\n      id\n      name\n      description\n      price\n      discount\n      salePrice\n      sku\n      unit\n      Category {\n        name\n        parent\n      }\n      ProductImages {\n        id\n        image\n      }\n    }\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/Product/ProductMutation.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "updateLiftMutation($id: ID!, $movement: String!, $units: String!, $weight: Float!)", "content": "{\n    updateLift(id: $id, movement: $movement, units: $units, weight: $weight) {\n      id\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field @storage(if: true)\n        other: field @client\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Rider($id:String)", "content": "{\n  rider(id:$id){\n    _id\n    location {\n      latitude\n      longitude\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/components/OrderDetail/TrackingRider/TrackingRider.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "Faq", "content": "{\n    faq {\n      sections {\n        title\n        subsections {\n          title\n          text\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Faq/Faq.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "($data: BotAddInfo!)", "content": "{\n                    addBot(data: $data)\n                  }", "metadata": {"commit_hash": "89dd6d9be2c03695498196ef118e7054874db3fa", "file": "pages/addbot.tsx", "repo": "pikokr_uniquebots"}}, {"type": "query", "name": "getAllPostComments($slug: String!, $offset: Int!)", "content": "{\n    newsBySlug(slug: $slug) {\n      newsCommentsByNewsId(first: 10, offset: $offset) {\n        totalCount\n        nodes {\n          updatedAt\n          profileId\n          id\n          createdAt\n          body\n          profileByProfileId {\n            avatar\n            username\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "Restaurant($id:String)", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Addons.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "($tool_id: ID!)", "content": "{\n    getTool(tool_id: $tool_id) {\n      id\n      brand {\n        id\n        name\n      }\n      type {\n        id\n        name\n      }\n      year\n      status\n      model_number\n      serial_number\n      purchased_from {\n        id\n        name\n      }\n      date_purchased\n      price\n      photo\n      tagged\n      owner {\n        ... on Location {\n          id\n          name\n          type\n        }\n        ... on User {\n          id\n          first_name\n          last_name\n          email\n          phone_number\n          type\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "query", "name": "", "content": "{\n            findDogsByOrgId(_id: \"${this.orgId}\") {\n              _id\n              name\n              dob\n              pics\n              breed\n              usersLiked{\n                name\n              }\n              organisation{\n                name\n              }\n            }\n          }", "metadata": {"commit_hash": "e5164a07001343484d7bd604d36c7510b5f42b94", "file": "libs/mobile/owneddogs/feature/src/lib/owneddogs.page.ts", "repo": "COS301-SE-2022_PaWdopt"}}, {"type": "query", "name": "SearchProject($id: ID!)", "content": "{\n    economicResource(id: $id) {\n      id\n      name\n      images {\n        bin\n        mimeType\n      }\n      conformsTo {\n        name\n        id\n      }\n      primaryAccountable {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/ProjectDisplay.tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "disableBrandedLogin($input: DisableBrandedLoginInput!)", "content": "{\n    disableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/disableBrandedLogin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateContentPageStatus ($id: Int, $isEnable: Boolean)", "content": "{\n                updateContentPageStatus(id: $id, isEnable: $isEnable){\n                    status\n                }\n            }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/ContentPageAction.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "query", "name": "bestNewsItems($type: FeedType!, $first: Int!, $skip: Int!)", "content": "{\n    feed(type: $type, first: $first, skip: $skip) {\n      ...NewsFeed\n    }\n  }\n  ${newsFeedNewsItemFragment}", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "pages/best.tsx", "repo": "Superdev0103_react-graph-demo"}}, {"type": "query", "name": "blocks($timestampFrom: Int!, $timestampTo: Int!)", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "ef4bb4133177509e1922805f8292a9d5429050ad", "file": "src/apollo/queries.js", "repo": "Anime1026_trisolaris-interface"}}, {"type": "mutation", "name": "deleteManyFiles($where: FileWhereInput!)", "content": "{\n      deleteManyFiles(where: $where) {\n        count\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}]