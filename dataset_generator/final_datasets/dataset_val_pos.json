[{"type": "mutation", "name": "createPost($authToken: String!, $post: PostInput)", "content": "{\n    CreatePost(input: { auth_token: $authToken, post: $post }) {\n      post {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/CreatePostContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "subscription", "name": "new$", "content": "{modelName}($filter: ${modelName}SubscriptionFilter) {\n                new${modelName}(filter: $filter) {\n                    ${graphQLFields}\n                }\n            }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "packages/datastore/src/replication/subscriptions/buildGraphQLCRUDSubscriptions.ts", "repo": "aerogear_offix"}}, {"type": "query", "name": "tools($query: String, $toolFilter: ToolFilter, $pagingParameters: PagingParameters)", "content": "{\n    searchTool(query: $query, toolFilter: $toolFilter, pagingParameters: $pagingParameters) {\n      id\n      type {\n        id\n        name\n      }\n      brand {\n        id\n        name\n      }\n      status\n      photo\n      tagged\n      owner {\n        ... on Location {\n           id\n           name\n           type\n        }\n        ... on User {\n           id\n           first_name\n           last_name\n           type\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "UpdateUser($input: UpdateUserInput!, $condition: ModelUserConditionInput)", "content": "{\n      updateUser(input: $input, condition: $condition) {\n        id\n        termsAccepted\n        notificationConfig {\n          matches\n          messages\n          subscribe\n        }\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-user.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field @storage(if: true)\n        user @client\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($manager: ID!, $day: Int!, $week: Int!, $month: Int!, $year: Int!)", "content": "{\n    manager(id: $manager) {\n      now: total_value_locked(\n        where: { base: \"usd\" }\n        orderBy: timestamp\n        orderDirection: desc\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n      day: total_value_locked(\n        where: { base: \"usd\", timestamp_gt: $day }\n        orderBy: timestamp\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n      week: total_value_locked(\n        where: { base: \"usd\", timestamp_gt: $week }\n        orderBy: timestamp\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n      month: total_value_locked(\n        where: { base: \"usd\", timestamp_gt: $month }\n        orderBy: timestamp\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n      year: total_value_locked(\n        where: { base: \"usd\", timestamp_gt: $year }\n        orderBy: timestamp\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n      max: total_value_locked(\n        where: { base: \"usd\", timestamp_gt: 0 }\n        orderBy: timestamp\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/Manage/Overview/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "GetUsers", "content": "{\n    users {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/queries/getUsers.js", "repo": "PREreview_PREreview-2"}}, {"type": "query", "name": "AttestationProviders", "content": "{\n    identityEvents {\n      attestationProviders\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/AttestationProviders.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "MyFeed", "content": "{\n          feed {\n            ...FeedWithRepository\n          }\n        }\n\n        ${feedWithRepository}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/plugins/typescript/react-apollo/tests/react-apollo.spec.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "NewTeam($sport: String!, $name: String!)", "content": "{\n        newTeam(sport: $sport, name: $name)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "Feed($type: FeedType!, $offset: Int, $limit: Int)", "content": "{\n    currentUser {\n      login\n    }\n    feed(type: $type, offset: $offset, limit: $limit) {\n      ...FeedEntry\n    }\n  }\n  ${FeedEntryFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "agentStatus", "content": "{\n                agentStatus {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Option/List/List.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "studentQuery($firebase_id: String!)", "content": "{\n        students(where: {firebase_id: {_eq: $firebase_id}}) {\n            id\n            firebase_id\n            firstname\n            lastname\n            gender\n            password\n            email\n            contact\n            birth_date\n            profile_url\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/queries/students.js", "repo": "v08nike_ESL-Learning-Center"}}, {"type": "query", "name": "($id: ID!)", "content": "{\n      user(id: $id) {\n        ...UserLabel_user\n      }\n    }\n    ${UserLabel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/containers/PuzzleAddForm/index.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "SignOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "grantAccess($campaignId: ID!, $email: String!, $message: String)", "content": "{\n    grantAccess(campaignId: $campaignId, email: $email, message: $message) {\n      email\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Climatelab/Onboarding/Invitation.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "signup(\n    $firstname: String!\n    $lastname: String!\n    $handle: String!\n    $email: String!\n    $password: String!\n  )", "content": "{\n    signup(\n      firstname: $firstname\n      lastname: $lastname\n      handle: $handle\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        id\n        handle\n        avatar\n        fullname\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/auth/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "query", "name": "getSingleQuestionnaireSubmission($slug: String!, $id: ID!)", "content": "{\n    questionnaire(slug: $slug) {\n      id\n      submissions(filters: { id: $id }) {\n        nodes {\n          ...QuestionnaireSubmissionFragment\n        }\n      }\n    }\n  }\n  ${submissionData}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/Submissions/graphql.js", "repo": "republik_plattform"}}, {"type": "query", "name": "($where: JSON)", "content": "{\n    mapPortals(where: $where) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/queries/sub/mapPortals_total.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "Decrement($amount: Int = 1)", "content": "{\n        decrement(amount: $amount) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "MakeOffer($listingID: String!, $value: String!, $from: String)", "content": "{\n    makeOffer(listingID: $listingID, value: $value, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/graphql-simple-demo/src/Buy.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddProductRequest($reason: String!, $url: String!)", "content": "{\n    addProductRequest(reason: $reason, url: $url) {\n      id\n      sku\n      brand\n      description\n      images\n      name\n      price\n      priceCurrency\n      productID\n      url\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ProductRequest/ProductRequest.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "BlockContact($username: String, $timestamp: Float)", "content": "{\n    blockContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/blockContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "Mutation($input: createContactInput!)", "content": "{\n  submitContact(input: $input) {\n    _id\n    fullName\n    email\n    purpose\n    message\n    createdAt\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/contact-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "query", "name": "AllPeople($name: String!)", "content": "{\n          allPeople(name: $name) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "AddCar", "content": "{\n          addCar {\n            id\n            make\n            model\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "invalidateAccess($id: ID!)", "content": "{\n    invalidateAccess(id: $id)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Access.js", "repo": "republik_plattform"}}, {"type": "query", "name": "($status: OrderStatus,$currentPage: Int,$type:OrderType)", "content": "{\n        orders(input: { status: $status, currentPage: $currentPage,type:$type }) {\n          list{\n            id\n            price\n            discount\n            amount\n            trade{\n              id\n              price \n              status\n            }\n            orderItem{\n              id\n              imageUrl\n              title\n              price\n              amount\n              number\n            }\n            code\n            time\n            qrCode\n            user{\n              id \n              imageUrl \n              nickname \n              balance \n              point \n              role\n              phone\n            }\n            store {\n              name\n            }\n          }\n          pagination {\n            total\n            current\n            pageSize\n          }\n        }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/certificates/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "(\n        $id: String!\n        $name: String!\n        $description: String\n        $destination: String\n        $questionnaires: [String]!\n      )", "content": "{\n        editSequence: EditSequence(\n          id: $id\n          name: $name\n          description: $description\n          destination: $destination\n          questionnaires: $questionnaires\n        ) {\n          ...defaultSequence\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/sequence/index.ts", "repo": "impactasaurus_app"}}, {"type": "query", "name": "SearchPosts", "content": "{\n        searchPosts {\n          items {\n            id\n            content\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthTests.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateListing(\n    $listingID: ID!\n    $from: String!\n    $additionalDeposit: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )", "content": "{\n    updateListing(\n      listingID: $listingID\n      from: $from\n      additionalDeposit: $additionalDeposit\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/UpdateListing.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "UserTransactions($id: ID!, $first: Int, $after: String)", "content": "{\n    marketplace {\n      user(id: $id) {\n        id\n        transactions(first: $first, after: $after) {\n          totalCount\n          nodes {\n            ...basicTransactionFields\n          }\n        }\n      }\n    }\n    web3 {\n      blockNumber\n    }\n  }\n  ${fragments.Transaction.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/UserTransactions.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "($literal: Boolean, $value: Int)", "content": "{\n              a: field(literal: true, value: 42)\n              b: field(literal: $literal, value: $value)\n            }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/cache.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getFilesAggregate($where: files_bool_exp)", "content": "{\n  filesAggregate(where: $where) {\n    aggregate {\n      count\n    }\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "query", "name": "Environment($id: String!)", "content": "{\n    environment(id: $id) {\n      puppetclasses {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "01a4dae6e1f33a3c2311888f9c771e0a3adc60e6", "file": "src/graphql/queries/puppetClassesByEnvironment.js", "repo": "dm-drogeriemarkt_lisa"}}, {"type": "query", "name": "asset(\n            $id: String!\n            $domain: String!\n            $currentAddress: String!\n        )", "content": "{\n            asset(\n                id: $id\n                domain: $domain\n                currentAddress: $currentAddress\n            ) {\n                asset {\n                    ${requestedFields}\n                }\n                error {\n                    type\n                    key\n                    message\n                    response\n                }\n            }\n        }", "metadata": {"commit_hash": "a47d3d9ea38cd1363ede730998145da663df6091", "file": "packages/extension/src/background/services/GraphQLService/Queries/assetQuery.js", "repo": "AztecProtocol_aztec-v1"}}, {"type": "query", "name": "Restaurants", "content": "{\n  restaurants{\n    _id\n    name\n    image\n    orderPrefix\n    slug\n    address\n    deliveryTime\n    minimumOrder\n    isActive\n    commissionRate\n    tax\n    owner{\n      _id\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Commission.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "notificationToggleRead($notifiedID: UUID!)", "content": "{\n  notificationToggleRead(input: {notifiedID: $notifiedID}) {\n    id\n    read\n    readAt\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "editOption($optionInput:editOptionInput)", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "createUserAccount(\n    $username: String!\n    $roleCode: String!\n    $email: String!\n    $fullName: String!\n    $initials: String!\n    $password: String!\n  )", "content": "{\n    createUserAccount(\n      input: {\n        roleCode: $roleCode\n        username: $username\n        email: $email\n        fullName: $fullName\n        initials: $initials\n        password: $password\n      }\n    ) {\n      id\n      email\n      fullName\n      initials\n      username\n      bio\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      role {\n        code\n        name\n      }\n      owned {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n      member {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/user/createUser.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "getDirectMessageThreadByUserIds($userIds: [ID!])", "content": "{\n    directMessageThreadByUserIds(userIds: $userIds) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/directMessageThread/getDirectMessageThreadByUserIds.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "($skip: Float!, $limit: Float!)", "content": "{\n        users(other: { skip: $skip, take: $limit }) {\n            id\n            username\n            email\n            rankID\n            credits\n            vipPoints\n            activityPoints\n            look\n            gender\n            motto\n            accountCreatedAt\n            onlineStatus\n            ipLast\n            ipRegisteredWith\n            homeRoomID\n        }\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/fetch-users.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "query", "name": "getCurrentProfile", "content": "{\n    currentProfile {\n      firstname\n      lastname\n      username\n      avatar\n      id\n      occupation\n      organisation\n      reel\n      reelDescription\n      about\n      banner\n      isInstructor\n      premiumType\n      profileSocialByProfileId {\n        youtube\n        www\n        vimeo\n        twitter\n        linkedin\n        instagram\n        facebook\n        artstation\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "CardsByTokenIds($tokenIds: [String!]!)", "content": "{\n    cardsByTokenIds(tokenIds: $tokenIds) {\n      serialNumber\n      listing {\n        price\n        orderSigningData {\n          signature {\n            r\n            s\n          }\n          salt\n        }\n      }\n      cardModel {\n        artistName\n        pictureUrl(derivative: \"width=256\")\n        season\n        scarcity {\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/components/MarketplaceModal/CancelOffer.tsx", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "($code: String!)", "content": "{post(code: $code) { code title } }", "metadata": {"commit_hash": "4463dfc761dbd2fa26535ab0a79dde14d40f0d73", "file": "client/app/core/service.js", "repo": "neat-soft_vue-express-mongo-boilerplate"}}, {"type": "query", "name": "pairs($skip: Int!)", "content": "{\n    pairs(first: 100, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}}, {"type": "query", "name": "allAbout", "content": "{\n    allAbouts {\n      edges {\n        node {\n          aboutMe\n          portrait\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d43fc12efb4e3b698bbd3519f51ff47302077561", "file": "lib/queries.ts", "repo": "simonsisay_portfolio-site"}}, {"type": "mutation", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/parser.test.ts", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "kudos($where: Kudo_filter! , $orderBy: Kudo_orderBy!, $limit: Int)", "content": "{\n        kudos(first:$limit, orderBy: $orderBy, where: $where, orderDirection: desc) {\n          owner\n          price\n          tokenURI\n          totalFees\n          totalRevenue\n        }\n    }", "metadata": {"commit_hash": "e3688b77e34b87f0aa102c7a6d996480612450b8", "file": "frontend/src/App.js", "repo": "santteegt_gitcoin-subgraph"}}, {"type": "mutation", "name": "some_mutation($nil: ID, $in: Object)", "content": "{\n        some_mutation(\n          input: {\n            id: \"5\"\n            arr: [1, { a: \"b\" }]\n            obj: { a: \"b\" }\n            num: 5.5\n            nil: $nil\n            bo: true\n          }\n        ) {\n          id\n        }\n        some_mutation_with_variables(input: $in) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GET_LANG_ALL", "content": "{\n        lang @client\n        availableLangs @client\n        defaultLang @client\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/cache/lang/getLangQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n      createPost(input: $input) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthTests.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "updateNotificationSettings(\n    $defaultDiscussionNotificationOption: DiscussionNotificationOption\n    $discussionNotificationChannels: [DiscussionNotificationChannel!]\n  )", "content": "{\n    updateNotificationSettings(\n      defaultDiscussionNotificationOption: $defaultDiscussionNotificationOption\n      discussionNotificationChannels: $discussionNotificationChannels\n    ) {\n      id\n      discussionNotificationChannels\n      defaultDiscussionNotificationOption\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "runtimeHcAddAgentInfos($agentInfos: String!)", "content": "{\n                runtimeHcAddAgentInfos(agentInfos: $agentInfos)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "deleteMessage($id: ID!)", "content": "{\n    deleteMessage(id: $id)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/message/deleteMessage.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "updateContribution(\n    $process: ID!\n    $agent: ID!\n    $resource: ID!\n    $quantity: IMeasure!\n    $now: DateTime!\n    $metadata: JSONObject!\n    $conformsTo: ID!\n    $unitOne: ID!\n  )", "content": "{\n    contribute: createEconomicEvent(\n      event: {\n        action: \"work\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceConformsTo: $conformsTo\n        hasPointInTime: $now\n        effortQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "query", "name": "($id: ID!)", "content": "{\n    user(id: $id) {\n      votingPower\n    }\n    governances {\n      totalVotingPower\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/components/VotingPower/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "AllCountries", "content": "{\n    countries @client {\n      code\n      name\n      emoji\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "examples/bundling/no-tree-shaking/rollup-ac3-no-react/src/index.js", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Economy($match_id: Int!)", "content": "{\n  match(id: $match_id) {\n    id\n    duration_secs\n    teams {\n      winner\n      players {\n        color_id\n        winner\n        name\n        user {\n          id\n          platform_id\n          name\n        }\n        metrics {\n          dark_age_tc_idle\n          total_tcs\n          average_floating_resources\n          seconds_housed\n          seconds_villagers_idle\n          seconds_popcapped\n        }\n      }\n    }\n    players {\n      color_id\n      name\n      timeseries {\n        timestamp_secs\n        relic_gold\n        total_food\n        total_wood\n        total_stone\n        total_gold\n      }\n      villagers {\n        timestamp_secs\n        count\n      }\n      villager_allocation {\n        timestamp_secs\n        name\n        count\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Economy.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "mutation", "name": "UploadManuscript($id: ID!, $file: Upload!, $fileSize: Int!)", "content": "{\n        uploadManuscript(id: $id, file: $file, fileSize: $fileSize) {\n            id\n            suggestions {\n                fieldName\n                value\n            }\n            files {\n                manuscriptFile {\n                    filename\n                    url\n                    downloadLink\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo/components/Submit.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($_id: ID, $email: String)", "content": "{\n    own_appointments(_id: $_id, email: $email) {\n      id\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      esthetician\n      treatments {\n        name\n        duration\n        price\n      }\n      addOns {\n        name\n        duration\n        price\n      }\n      client {\n        _id\n        squareCustomerId\n        unsavedSquareCardIDs\n        firstName\n        lastName\n        email\n        phoneNumber\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/queries/getOwnAppointmentsQuery.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "query", "name": "minichefs($where: Minichef_filter, $userAddress: String)", "content": "{\n    minichefs(where: $where) {\n      id\n      totalAllocPoint\n      rewardPerSecond\n      rewardsExpiration\n      farms(first: 1000) {\n        id\n        pid\n        tvl\n        allocPoint\n        rewarderAddress\n        chefAddress\n        pairAddress\n        rewarder {\n          id\n          rewards {\n            id\n            token {\n              id\n              symbol\n              derivedUSD\n              derivedETH\n              name\n              decimals\n            }\n            multiplier\n          }\n        }\n        pair {\n          id\n          reserve0\n          reserve1\n          totalSupply\n          token0 {\n            id\n            symbol\n            derivedUSD\n            derivedETH\n            name\n            decimals\n          }\n          token1 {\n            id\n            symbol\n            derivedUSD\n            derivedETH\n            name\n            decimals\n          }\n        }\n        farmingPositions(where: { userAddress: $userAddress }) {\n          id\n          stakedTokenBalance\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "b7b9c43058b8bc05dedf45a952c856f892071f89", "file": "src/apollo/minichef.ts", "repo": "pangolindex_components"}}, {"type": "mutation", "name": "editThread($input: EditThreadInput!)", "content": "{\n    editThread(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/editThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "GetGroup", "content": "{\n    group {\n      ...Group\n      users {\n        ...User\n      }\n      invites {\n        ...Invite\n      }\n    }\n  }\n  ${GroupFragmentDoc}\n  ${UserFragmentDoc}\n  ${InviteFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "query", "name": "ships", "content": "{\n        allships(first: 1) {\n          ships {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/shared-operations.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\") {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Deathwish($id: ID!)", "content": "{\n    deathwish(id: $id) {\n      id\n      type\n      title\n      description\n      cost\n      recipients\n      owner {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/graphql/queries/index.ts", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "SelectItem($id: Int!)", "content": "{\n        touchIllegally(id: $id) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getRentPrices($labels: String, $duration: Number)", "content": "{\n    getRentPrices(labels: $labels, duration: $duration)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "($take: Int, $skip: Int, $sort: JSON, $where: JSON)", "content": "{\n    items(take: $take, skip: $skip, sort: $sort, where: $where) {\n      items {\n        id\n        type\n        nIndex\n        project {\n          id\n        }\n        clientND {\n          strName\n        }\n        client {\n          ...ItemClientNameParts\n        }\n        server {\n          ...ItemServerNameParts\n        }\n      }\n      total\n    }\n  }\n\n  # include fragments\n  ${ItemClientNameParts}\n  ${ItemServerNameParts}", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/queries/sub/items.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "query", "name": "Foods($page:Int)", "content": "{\n    foods(page:$page){\n      _id\n      title\n      description\n      stock\n      tag\n      img_url\n      variations{\n        _id\n        title\n        price\n        discounted\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      category{\n          _id\n          title\n      }\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "updatePatronKind($input: PatronKindUpdateInput!)", "content": "{\n        updatePatronKind(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/patronKind.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: [ID!]!)", "content": "{\n        checkoutLineItemsRemove(checkoutId: $checkoutId, lineItemIds: $lineItemIds) {\n            userErrors {\n                field\n                message\n            }\n            checkout {\n                ...ReturnFieldsCheckout\n            }\n        }\n    }\n    ${ReturnFieldsCheckout}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/checkout/RemoveProduct.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "updateAddress($address: AddressInput)", "content": "{\n    updateMe(address: $address) {\n      id\n      address {\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/AddressEditor.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "CreateWallet($role: String, $name: String)", "content": "{\n    createWallet(role: $role, name: $name) {\n      id\n      role\n      name\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "subscription", "name": "UserInfo($name: String = \"Changping Chen\")", "content": "{\n            user(name: $name) {\n              name\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field\n        other: field\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "user($userId: ID!)", "content": "{\n    user(id: $userId) {\n      _id\n      username\n      email\n      savedCards {\n        cardId\n        name\n        image\n        setName\n        seriesName\n        setImage\n        rarity\n        releaseDate\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/queries.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\") {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "GetContactLocations($id: ID!)", "content": "{\n  contact(id: $id) {\n    locations {\n      ...LocationBaseDetails\n      rawAddress\n    }\n  }\n}\n    ${LocationBaseDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "query", "name": "challenges($projects: [ID!], $endTime: Int)", "content": "{\n    challenges(where: { owner_in: $projects, endTime_lt: $endTime }) {\n      id\n      project {\n        id\n        name\n        description\n        avatar\n        image\n        website\n        github\n        twitter\n        isRepresentative\n        createdAt\n        currentChallenge {\n          id\n        }\n        categories {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "UpdatePaymentStatus($id:String!,$status:String!)", "content": "{\n  updatePaymentStatus(id:$id,status:$status){\n    _id\n    payment_status\n    paid_amount\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "VerifyWebsite($identity: String!, $website: String!)", "content": "{\n    verifyWebsite(identity: $identity, website: $website) {\n      success\n      reason\n      data\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/VerifyWebsite.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "grantAccess($campaignId: ID!, $email: String!, $message: String)", "content": "{\n    grantAccess(campaignId: $campaignId, email: $email, message: $message) {\n      email\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Climatelab/Onboarding/Invitation.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "createFarm($farmName: String!, $farmType: String!)", "content": "{\n\t\tcreateFarm(farmName: $farmName, farmType: $farmType) {\n\t\t\tid\n\t\t\tfarmName\n\t\t\tfarmType\n\t\t\tmembers {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\tchunks {\n\t\t\t\tid\n\t\t\t\tcoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t}\n\t\t\tplants {\n\t\t\t\tid\n\t\t\t\tplantType\n\t\t\t\ttitle\n\t\t\t\tbody\n\t\t\t\tchunkCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tplantCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tauthor\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "query", "name": "getTweets", "content": "{\n    getTweets {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/React_Notes_V3/React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Votes($id: String)", "content": "{\n    votes(first: 1000, where: { proposal: $id }) {\n      id\n      voter\n      created\n      choice\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/snapshot-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "($id: Int!)", "content": "{\n  user(id: $id) {\n    id,\n    userId,\n    context\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/context-modal/index.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "deleteAccount($password: String!)", "content": "{\n\t\tdeleteAccount(password: $password){\n\t\t\tmessage\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "Configuration", "content": "{\n    configuration{\n      _id\n      currency\n      currency_symbol\n      delivery_charges\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/screens/OrderDetail/OrderDetail.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "shiftDetail", "content": "{\n      shift(where: {id: {_eq: ${shiftId}}}){\n        id\n        shiftDateId\n        shiftName\n        isCompleted\n        createdAt\n        updatedAt\n        shiftEmployees {\n          id\n          name\n          canWorkingIds\n          workIds\n        }\n        shiftWorkingTimes {\n          id\n          timeName\n          color\n          startHour\n          startMinute\n          endHour\n          endMinute\n          isNextDayoff\n          maxEmployee\n          minEmployee\n        }\n      }      \n    }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/query.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "query", "name": "transactions($user: Bytes!)", "content": "{\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "mutation", "name": "Refetch", "content": "{\n    refetch\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "createTeam($name: String!, $organizationID: UUID!)", "content": "{\n  createTeam(input: {name: $name, organizationID: $organizationID}) {\n    id\n    createdAt\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "TouchpointDevicesQuery(\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)", "content": "{\n\t\tpage(\n\t\t\tchannelId: $channelId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tviewsMetric {\n\t\t\t\t...browserFragment\n\t\t\t\t...deviceFragment\n\n\t\t\t\tpreviousValue\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n\n\t${BROWSER_FRAGMENT}\n\t${DEVICE_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/sites/touchpoints/hocs/DevicesCard.js", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "searchUsers(\n    $queryString: String!\n    $type: SearchType!\n    $filter: SearchFilter\n  )", "content": "{\n    search(queryString: $queryString, type: $type, filter: $filter) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on User {\n              ...userInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/search/searchUsers.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateModuleStatus($moduleId: ID!, $input: EditModuleInput!)", "content": "{\n        editModule(moduleId: $moduleId, input: $input) {\n            _id\n            name\n            status\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlUpdateModuleStatus.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "($refreshToken: String!, $accessToken: String!)", "content": "{\n          destroyToken(refreshToken: $refreshToken, accessToken: $accessToken )\n        }", "metadata": {"commit_hash": "687e83752f587b88cfb8d2dc68521400c4f7a9d9", "file": "src/app/services/auth.service.ts", "repo": "mern-dev-pro_SmartKanvas_Angular_Dashboard"}}, {"type": "query", "name": "blocks($timestampFrom: Int!, $timestampTo: Int!)", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "mutation", "name": "($a: Int = 1, $b: String = \"cheese\", $c: Int)", "content": "{\n        result(a: $a, b: $b, c: $c)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "AuthorWritings ($type: String)", "content": "{\n          author {\n            name\n            writings(b: 4, type: $type, unrelated: \"oyez\") {\n              ... on Book {\n                title\n                isbn\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "secrets($namespace: String!)", "content": "{\n    secrets(namespace: $namespace) {\n      name\n      type\n      labels\n      creationTime\n      json\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "CorporationInformation($id: Int!)", "content": "{\n        information: corporationByCorporationID(id: $id) {\n            id\n            name\n            ticker\n            memberCount\n            alliance {\n                id\n                name\n                ticker\n            }\n        }\n    }", "metadata": {"commit_hash": "009b5eae048747488ab78334a7cb9f92e1ad888f", "file": "src/util/queries/information.js", "repo": "eveisesi_neo-ui"}}, {"type": "query", "name": "GetUser($username: String!)", "content": "{\n    user(username: $username) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/testing/mocking/__tests__/MockedProvider.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "deleteThread($threadId: ID!)", "content": "{\n    deleteThread(threadId: $threadId)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/deleteThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "UpdateDevice($deviceId: ID!, $mac: String!, $name: String!, $ownerId: String!, $followerIds: [String])", "content": "{\n    updateDevice(deviceId: $deviceId, mac: $mac, name: $name, ownerId: $ownerId, followerIds: $followerIds) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "query", "name": "Test($foo: String!)", "content": "{\n              test(foo: $foo)\n            }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/plugins/typescript/urql/tests/urql.spec.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "loadProject($id: ID!)", "content": "{\n    project(id: $id) {\n      ...projectData\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/CreateProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "query", "name": "Tokens(\n      $", "content": "{TOKENS_FILTERS}\n    ) {\n      tokens(\n        where: {\n          ${extraWhere.join('\\n')}\n        }\n        ${TOKENS_ARGUMENTS}\n      ) {\n        ${isCount ? 'id' : '...tokenFragment'}\n      }\n    }\n    ${isCount ? '' : tokenFragment()}", "metadata": {"commit_hash": "6afba468cc1cd7fe436b644e3495c64403ac3048", "file": "webapp/src/modules/vendor/known_origin/token/api.ts", "repo": "WhiteDragon001227_land-marketplace-erc1155"}}, {"type": "subscription", "name": "Subscription", "content": "{\n        questionStateChange {\n            quesId\n            state\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}}, {"type": "query", "name": "uniswap($date: Int!, $date2: Int!)", "content": "{\n    current: uniswap(id: \"1\") {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    oneDay: uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    twoDay: uniswapHistoricalDatas(\n      where: { timestamp_lt: $date2 }\n      first: 1\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    exchanges(first: 200, orderBy: ethBalance, orderDirection: desc) {\n      ethBalance\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "mutation", "name": "AddBook($authorId: ID, $name: String!)", "content": "{\n    addBook(authorId: $authorId, name: $name) {\n      name\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/01_GraphQL/frontend/src/components/Form/mutations.js", "repo": "CrispenGari_node-startup"}}, {"type": "subscription", "name": "OnCreateTodo", "content": "{\n              onCreateTodo(\n                filter: { name: { eq: \"todo1\" } }\n              ) {\n                id\n                name\n                owner\n              }\n            }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "publishThread($thread: ThreadInput!)", "content": "{\n    publishThread(thread: $thread) {\n      ...threadInfo\n      channel {\n        id\n        slug\n        community {\n          id\n          slug\n        }\n      }\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/publishThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($orderId: String)", "content": "{\n        order(orderId: $orderId) {\n          suggestedPolylines\n          estimatedDuration\n          duration\n          orderId\n          expectedCollectedTime\n          expectedDeliveredTime\n          sender {\n            userId\n            username\n            firstName\n            lastName\n            email\n            phone\n            role\n          }\n          receiver {\n            userId\n            username\n            firstName\n            lastName\n            email\n            phone\n            role\n          }\n          sendAddress\n          sendLatLng {\n            latitude\n            longitude\n          }\n          receiveAddress\n          receiveLatLng {\n            latitude\n            longitude\n          }\n          status\n          comments\n          logs {\n            orderLogId\n            status\n            comments\n            createdAt\n          }\n          jobs {\n            polylines\n            duration\n            driver {\n              userId\n              username\n              firstName\n              lastName\n              role\n            }\n            status\n          }\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "web/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "CreateGameMutation($input: CreateGameInput!)", "content": "{\n    createGame(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/NewGame/NewGame.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "submitScore($username: String!, $score: Int!)", "content": "{\n    submitScore(username: $username, score: $score)\n}", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/mutations.js", "repo": "Morgoth27_pewpew_spaceman"}}, {"type": "mutation", "name": "doIt$", "content": "{declareArgumentVariables(mutationArgs, args)} {\n    ${mutationName}${argumentVariables(mutationArgs, args)} {\n      ${findMutationType(schema, mutationName).fields.filter(isScalar).map(field => field.name).join(\", \")}\n    }\n  }", "metadata": {"commit_hash": "b2448fceb3ff9bfe3ffbb6e9f553694e6c6aac38", "file": "src/graphql_utils.js", "repo": "launchscout_graphql-admin-react"}}, {"type": "query", "name": "statementsShareRef($id: String!)", "content": "{\n    statements(focus: $id, first: 1) {\n      nodes {\n        id\n        name\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Form.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "createTaskGroup($projectID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskGroup(\n    input: {projectID: $projectID, name: $name, position: $position}\n  ) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "popularPools", "content": "{\n    pools(orderBy: totalValueLockedUSD, orderDirection: desc, first: 6) {\n      token0 {\n        id\n      }\n      token1 {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "getReferralProgramController", "content": "{\n            getReferralProgramController{\n                maxDays\n                maxUsers\n                quantity\n                quantityReferred\n                isDisabled\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "query", "name": "getUser($id: ID!)", "content": "{\n    user(id: $id) {\n      lastLogin\n      firstName\n      lastName\n      email\n      phoneNumber\n      admin\n      department {\n        name\n        devices {\n          id\n          temperature\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/SetRadialGauge.jsx", "repo": "Dr169_Air-condition"}}, {"type": "mutation", "name": "addEmailToContact($contactId: ID!, $input: EmailInput!)", "content": "{\n  emailMergeToContact(contactId: $contactId, input: $input) {\n    ...Email\n    label\n  }\n}\n    ${EmailFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "userResetPassword($id: ID!)", "content": "{\n      userResetPassword(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "deleteBUG($bugId: ID!)", "content": "{\n    deleteBug(BugId: $bugId) {\n      _id\n      username\n      bugs {\n        _id\n        bugName\n      }\n    }\n  }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}}, {"type": "subscription", "name": "DirectmessageSubscription($userId: ID)", "content": "{\n    directmessageSub(receiver: $userId) {\n      id\n      content\n      created\n      sender {\n        ...UserLabel_user\n      }\n      receiver {\n        ...UserLabel_user\n      }\n    }\n  }\n  ${UserLabel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/DirectmessageSubscription.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "addCharacter($characterName: String!, $characterClass: String!)", "content": "{\n  addCharacter(character_name: $characterName, character_class: $characterClass) {\n    _id\n    character_name\n    character_class\n  }\n}", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/mutations.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "createConversation(\n    $name: String\n    $participantIds: [ID!]!\n    $text: String\n  )", "content": "{\n    createConversation(\n      name: $name\n      participantIds: $participantIds\n      text: $text\n    ) {\n      id\n      name\n      participants {\n        id\n        username\n      }\n      texts {\n        id\n        text\n        createdAt\n        author {\n          id\n          username\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "27327705aff1ce63cab00c125c8b4f760df39789", "file": "client/graphql/mutations/createConversation.js", "repo": "greatWall627_chatting-pro"}}, {"type": "query", "name": "LoggedInUserQuery", "content": "{\n    loggedInUser {\n      id\n    }\n  }", "metadata": {"commit_hash": "b43642d07e7f391c685bd8839c42d2a33f42cfa4", "file": "client/src/components/UserContext.js", "repo": "knowit_kodekalender"}}, {"type": "mutation", "name": "saveModulesOrder($moduleIds: [String]!, $projectId: ID!)", "content": "{\n        saveModulesOrder(moduleIds: $moduleIds, projectId: $projectId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlSaveModulesOrder.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "signIn(\n    $email: String!\n    $context: String\n    $consents: [String!]\n    $tokenType: SignInTokenType\n  )", "content": "{\n    signIn(\n      email: $email\n      context: $context\n      consents: $consents\n      tokenType: $tokenType\n    ) {\n      phrase\n      tokenType\n      alternativeFirstFactors\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Auth/SignIn.js", "repo": "orbiting_publikator-frontend"}}, {"type": "query", "name": "Restaurants($latitude:Float,$longitude:Float)", "content": "{\n  nearByRestaurants(latitude:$latitude,longitude:$longitude){\n    offers{\n      _id\n      name\n      tag\n      restaurants\n    }\n    sections{\n      _id\n      name\n      restaurants\n    }\n    restaurants{\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      reviewData{\n          total\n          ratings\n          reviews{\n            _id\n            order{\n              user{\n                _id\n                name\n                email\n              }\n            }\n            rating\n            description\n            createdAt\n          }\n      }\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          image\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      rating\n      isAvailable\n      openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/Pickup/Pickup.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "GetContactConversations($id: ID!)", "content": "{\n  contact(id: $id) {\n    conversations(\n      pagination: {page: 0, limit: 25}\n      sort: {by: \"STARTED_AT\", direction: DESC}\n    ) {\n      content {\n        id\n        startedAt\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "($device: NewDevice!)", "content": "{\n  createDevice(device: $device) {\n    id,\n    name,\n    payload,\n    createdAt,\n    updatedAt,\n    status,\n    lat,\n    lon,\n    jsonSchema,\n    version,\n    lastUpdate,\n    snapshot\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/devices/pages/devices.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "query", "name": "GetCollections($cursor: String, $perPage: Int, $channel: String)", "content": "{\n    collections(after: $cursor, first: $perPage, channel: $channel) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      edges {\n        node {\n          id\n          name\n          slug\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "52ea1dd236433466b7506c286c2f82488d35d883", "file": "src/sitemap/queries.ts", "repo": "saleor_saleor-storefront"}}, {"type": "mutation", "name": "addThreadReaction($input: AddThreadReactionInput!)", "content": "{\n    addThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/addThreadReaction.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "promoteService($id: Int!)", "content": "{\n  promoteService(id: $id){\n    ${SERVICE}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "query", "name": "Category($slug: String!)", "content": "{\n    categories(filters: { slug: { eq: $slug } }) {\n      data {\n        attributes {\n          slug\n          name\n          articles {\n            data {\n              attributes {\n                slug\n                title\n                content\n                category {\n                  data {\n                    attributes {\n                      name\n                    }\n                  }\n                }\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "461f66277eb04a0f121b50b83fe2e6efb59aecbd", "file": "src/queries/category/articles.js", "repo": "bitethecode_blog-template"}}, {"type": "query", "name": "CURRENT_USER_QUERY", "content": "{\n        me {\n            id\n            firstName\n            lastName\n            email\n            displayName\n        }\n    }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/user/queries/QUERY_GET_CUSTOMER.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "query", "name": "GET_ACTIVE_TREE", "content": "{\n        activeTree @client {\n            id @client\n            behavior @client\n            libraries @client {\n                id @client\n                behavior @client\n            }\n            label @client\n            permissions @client {\n                access_tree @client\n                edit_children @client\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/cache/activeTree/getActiveTreeQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "FetchCampaigns", "content": "{\n    allCampaigns {\n      id\n      createdAt\n      name\n      description\n      active\n      defaultPlace {\n        id\n        placeName\n      }\n      pushNotificationActive\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/index.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "deleteScores($player: ID!)", "content": "{\n    deleteScores(player: $player) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "($manager: String)", "content": "{\n      pools(where: { manager: $manager }) {\n        id\n        name\n        logo\n        chain {\n          logo\n        }\n      }\n    }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/hooks/useManagerPools.tsx", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "cosmosDistributionCommunityPool($network: String!)", "content": "{\n  cosmosDistributionCommunityPool(network: $network) {\n    denom\n    amount\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "query", "name": "ClientPortalNotificationDetail($id: String!)", "content": "{\n    clientPortalNotificationDetail(_id: $id) {\n      _id\n      content\n      createdAt\n      link\n      notifType\n      title\n      isRead\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/main/containers/notifications/Detail.tsx", "repo": "erxes_erxes-community"}}, {"type": "query", "name": "categories(\n        $orderBy: QueryCategoriesOrderByInput =", "content": "{ updatedAt: desc }\n        $first: Int = 10000\n        $skip: Int\n        $parentQuery: String = \"\"\n    ) {\n        categories(first: $first, skip: $skip, orderBy: $orderBy, parentQuery: $parentQuery) {\n            nodes {\n                id,\n                slug,\n                name,\n                parent\n            }\n            totalCount\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/Category/CategoryQuery.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "query", "name": "currentUser", "content": "{\n    currentUser {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "d15ccdc10e75dbf6861449824dd78bb83d31e4ef", "file": "client/src/hooks/useCurrentUserQuery.tsx", "repo": "metin1_bikersCamp"}}, {"type": "mutation", "name": "AssignRider($id:String!,$riderId:String!)", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "query", "name": "Foods($page:Int)", "content": "{\n    foods(page:$page){\n      _id\n      title\n      description\n      stock\n      tag\n      img_url\n      variations{\n        _id\n        title\n        price\n        discounted\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      category{\n          _id\n          title\n      }\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "SetUserCharacter($data: UserAvatarInput!)", "content": "{\n    setUserCharacter(data: $data) {\n      id\n      avatarId\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "inviteRemind($invitationId: Int!)", "content": "{\n    inviteRemind(invitationId: $invitationId)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/InviteRemind.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "ReviewOrder(\n    $order:String!,\n    $rating:Int!,\n    $description:String,\n  )", "content": "{\n    reviewOrder(reviewInput:{\n      order:$order,\n      rating:$rating,\n      description:$description,\n    }){\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      orderDate\n      expectedTime\n      isPickedUp\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/RateAndReview/RateAndReview.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "UserOffers($id: ID!, $first: Int, $after: String)", "content": "{\n    marketplace {\n      user(id: $id) {\n        id\n        offers(first: $first, after: $after) {\n          totalCount\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n            endCursor\n          }\n          nodes {\n            id\n            listingId\n            offerId\n            listing {\n              id\n              title\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/UserOffers.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "createServiceBinding(\n    $serviceInstanceName: String!\n    $namespace: String!\n    $parameters: JSON\n  )", "content": "{\n    createServiceBinding(\n      serviceInstanceName: $serviceInstanceName\n      namespace: $namespace\n      parameters: $parameters\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "toggleProjectVisibility($projectID: UUID!, $isPublic: Boolean!)", "content": "{\n    toggleProjectVisibility(input: { projectID: $projectID, isPublic: $isPublic }) {\n      project {\n        id\n        publicOn\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/toggleProjectVisibility.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "agentImport(\n                $did: String!,\n                $didDocument: String!,\n                $keystore: String!,\n                $passphrase: String!\n            )", "content": "{\n                agentImport(did: $did, didDocument: $didDocument, keystore: $keystore, passphrase: $passphrase) {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "query", "name": "blocks($timestampFrom: Int!, $timestampTo: Int!)", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}}, {"type": "mutation", "name": "unsubFromUser($subscriptionId: ID!)", "content": "{\n    unsubscribe(subscriptionId: $subscriptionId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/Group.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "($thread: String!, $id: ID!, $tagId: ID!, $communityId: ID!)", "content": "{\n    setTag(thread: $thread, id: $id, tagId: $tagId, communityId: $communityId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunitiesContent/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "query", "name": "loadKv($nCollection: String!, $nKey: String!)", "content": "{\n            kv(collection: $nCollection, key: $nKey) {\n              collection\n              key\n              name\n              type\n              value\n            }\n          }", "metadata": {"commit_hash": "f75eb868e162036502c0689ff052e92fc355c631", "file": "src/adapters/graphql.ts", "repo": "danielwii_asuna-admin"}}, {"type": "subscription", "name": "OrderStatusChanged($userId:String!)", "content": "{\n  orderStatusChanged(userId:$userId)\n  {\n    userId\n    origin\n    order{\n    _id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    order_id\n    user{\n      _id\n      phone\n    }\n    \n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    payment_status\n    payment_method\n    order_amount\n    paid_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n    rider{\n      _id\n    }\n  }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/context/User.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdtaeProfile($id: Int!, $firstName: String!, $lastName: String!, $position: String!)", "content": "{\n                update_profiles(where: {id: {_eq: $id}}, _set: {firstName: $firstName, lastName: $lastName, position: $position}) {\n                    affected_rows\n                    returning {\n                        firstName\n                        id\n                        lastName\n                        position\n                    }\n                }\n            }", "metadata": {"commit_hash": "049b0e0fd2a3ca39f6f831f29a67a22151380416", "file": "sveltekit-app/src/routes/graphql/profiles/index.ts", "repo": "crewnew-git_sveltekit-hasura-docker"}}, {"type": "query", "name": "ROLES_BY_USER_AND_GUILD($guildId: String!, $platformId: String!)", "content": "{\n    rolesByUserAndGuild(input: { guildId: $guildId, platformId: $platformId }) {\n      id\n      name\n      description\n      purchaseUrl\n      balance\n      token {\n        chainId\n        contractAddress\n        type\n        website\n        iconUrl\n      }\n      isWorthy\n      platformId\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "bot/src/graphql-operations/queries.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "search($queryString: String!, $type: SearchType!)", "content": "{\n    search(queryString: $queryString, type: $type) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on Community {\n              ...communityInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "admin/src/api/queries.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "Groups($page: Int!, $first: Int!)", "content": "{\n            groups(page: $page, first: $first) {\n              data {\n                id\n                name\n                object\n                created_at\n                updated_at\n                users {\n                  id\n                }\n                users_count\n                servers {\n                  id\n                }\n                servers_count\n              }\n              paginatorInfo {\n                hasMorePages\n              }\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateOrder(\n    $car: Int!\n    $from: Int\n    $id: Int!\n    $status: String!\n    $priority: String!\n    $to: Int!\n    $arrive: DateTime\n  )", "content": "{\n    OrderMutation {\n      updateOrder(\n        order: {\n          carId: $car\n          fromStationId: $from\n          id: $id\n          status: $status\n          priority: $priority\n          toStationId: $to\n          arrive: $arrive\n        }\n      ) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "createProposal($input: inputProposal!)", "content": "{\n    createProposal(input: $input) {\n      ...PROPOSAL_ATTRIBUTES\n    }\n  }\n  ${PROPOSAL_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/proposal.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "getStatus($id: ID!)", "content": "{\n      status(id: $id) ${presenceResult}\n    }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "presencedemo/src/graphql/operations.js", "repo": "aws-samples_aws-appsync-presence-api"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "updateTeamMemberRole($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateTeamMemberRole(\n    input: {teamID: $teamID, userID: $userID, roleCode: $roleCode}\n  ) {\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n    teamID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "addPerson($id: Int)", "content": "{\n    allPeople(id: $id) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/lifecycle.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "repoPermission($owner: String!, $name: String!)", "content": "{\n    repository(owner: $owner, name: $name) {\n      ...RepositoryParts\n      viewerPermission\n    }\n  }\n  ${fragments.repository}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/queries.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($configUpdateInput: ConfigUpdateInput!)", "content": "{\n        configUpdate(configUpdateInput: $configUpdateInput)\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/update-config.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "mutation", "name": "submitPledge(\n    $total: Int!\n    $options: [PackageOptionInput!]!\n    $user: UserInput\n    $reason: String\n    $consents: [String!]\n    $accessToken: ID\n    $payload: JSON\n    $address: AddressInput\n    $shippingAddress: AddressInput\n  )", "content": "{\n    submitPledge(\n      pledge: {\n        total: $total\n        options: $options\n        user: $user\n        address: $address\n        shippingAddress: $shippingAddress\n        reason: $reason\n        accessToken: $accessToken\n        payload: $payload\n      }\n      consents: $consents\n    ) {\n      pledgeId\n      userId\n      emailVerify\n      pfAliasId\n      pfSHA\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Submit.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "enableDataSubscriptions(\n      $environmentUri: String!\n      $input: EnableDataSubscriptionsInput\n    )", "content": "{\n      enableDataSubscriptions(environmentUri: $environmentUri, input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/enableDataSubscriptions.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "Preference($key: String!)", "content": "{\n\t\tpreference(key: $key) {\n\t\t\tkey\n\t\t\tvalue\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/data-privacy/queries/PreferenceQuery.js", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "startDatasetProfilingRun($input: StartDatasetProfilingRunInput!)", "content": "{\n      startDatasetProfilingRun(input: $input) {\n        profilingRunUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/startProfilingRun.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "UserLists", "content": "{\n    userLists {\n      id\n      lists {\n        id\n        name\n        sections {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/queries/UserLists.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "query", "name": "QUERY_GET_CART", "content": "{\n    cart {\n      id\n      cartItems {\n        id\n        title\n        description\n        handle\n        categoryHandle\n        quantityAvailable\n        quantity\n        image\n        price\n        note\n      }\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/checkout/queries/QUERY_GET_CART.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "subscription", "name": "subscribeToDirectMessageNotifications", "content": "{\n    dmNotificationAdded {\n      ...notificationInfo\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "delegateOwnership($projectId: String!, $delegateAddress: String!)", "content": "{\n    delegateOwnership(projectId: $projectId, delegateAddress: $delegateAddress)\n      @client {\n      id\n      name\n      description\n      avatar\n      image\n      website\n      github\n      twitter\n      isRepresentative\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "deleteRole($id: String!)", "content": "{\n    deleteRole(id: $id) {\n      id\n      roleSettings\n      title\n      color\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Role.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "createLesson($input: LessonInput)", "content": "{\n    createLesson(input: $input) {\n      id\n      description\n      docUrl\n      githubUrl\n      videoUrl\n      order\n      title\n      chatUrl\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "query", "name": "Addons", "content": "{\n  addons{\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n}}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "query", "name": "ArtsySearch(\n          $query: String!,\n          $after: String, $first: Int,\n          $before: String, $last: Int,\n        )", "content": "{\n          search(\n            query: $query,\n            after: $after, first: $first,\n            before: $before, last: $last,\n          ) {\n            edges {\n              __typename\n              node {\n                __typename\n                displayLabel\n                ... on Artist { __typename href bio }\n                ... on SearchableItem { __typename description }\n              }\n            }\n            pageInfo {\n              __typename\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n            }\n            totalCount\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "postfinancePayments(\n    $limit: Int!\n    $offset: Int\n    $orderBy: OrderBy\n    $dateRange: DateRangeFilter\n    $search: String\n    $bool: BooleanFilter\n  )", "content": "{\n    postfinancePayments(\n      limit: $limit\n      offset: $offset\n      orderBy: $orderBy\n      dateRangeFilter: $dateRange\n      search: $search\n      booleanFilter: $bool\n    ) {\n      count\n      items {\n        id\n        hidden\n        buchungsdatum\n        valuta\n        avisierungstext\n        gutschrift\n        konto\n        mitteilung\n        matched\n        image\n        debitorName\n        createdAt\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "addPostAndProposalMutation (\n        $onchainProposalId:Int!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_proposal_id: $onchainProposalId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "AddViewedProduct($item: ID!)", "content": "{\n    addViewedProduct(item: $item) {\n      id\n      viewCount\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Product.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "Login($email: String!, $password: String!)", "content": "{\n  login(email: $email, password: $password) {\n    accessToken\n    user {\n      userId\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "setTaskChecklistItemComplete($taskChecklistItemID: UUID!, $complete: Boolean!)", "content": "{\n  setTaskChecklistItemComplete(\n    input: {taskChecklistItemID: $taskChecklistItemID, complete: $complete}\n  ) {\n    id\n    complete\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "getAllCategory($currentPage: Int, $searchList: String)", "content": "{\n                getAllCategory(currentPage: $currentPage, searchList: $searchList){\n                 count\n                  categoryData{\n                      id\n                      categoryName\n                      categoryImage\n                      categoryMarkerImage\n                      basePrice\n                      minutePrice\n                      unitPrice\n                      riderFeeValue\n                      driverFeeValue\n                      isActive\n                      currency\n                      capacity\n                      createdAt\n                      updatedAt\n                  }\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateCategoryStatus.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "requestResetPassword($email: String!)", "content": "{\n            requestResetPassword(email: $email) {\n              _\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "JoinToRoom($roomId: Float!)", "content": "{\n  joinToRoom(roomId: $roomId) {\n    username\n    firstname\n    lastname\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "subscription", "name": "onCommentAdded($repoFullName: String!)", "content": "{\n    commentAdded(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/__generated__/comment-added.subscription.stencil-component.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "UpdateCondition(\n    $id: ID!,\n    $name: String!,\n    $pointReward: Int!,\n    $active: Boolean,\n    $distance: Int!,\n    $notificationType: NotificatiionType,\n    $badgeReward: String!,\n    $dates: [ConditiondatesConditionDate!]!,\n    $places: [ConditionplacesConditionPlace!]!,\n  )", "content": "{\n    updateCondition (\n      id: $id\n      name: $name\n      pointReward: $pointReward\n      active: $active\n      distance: $distance\n      notificationType: $notificationType\n      badgeReward: {\n        name: \"badge\",\n        photoURL: $badgeReward\n      }\n      dates: $dates\n      places: $places\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCondition.js", "repo": "vecnazmaga_place-management"}}, {"type": "query", "name": "getTweets", "content": "{\n    getTweets {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/queries/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "PostSubscribe ($postId: Int!)", "content": "{\n        postSubscribe(post_id: $postId) {\n            message\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/SubscriptionButton/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "account($user: ID!)", "content": "{\n    account(id: $user) {\n      id\n      totalBorrowValueInEth\n      totalCollateralValueInEth\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}}, {"type": "mutation", "name": "CreatePost($input: CreatePostInput!)", "content": "{\n      createPost(input: $input) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateMessage($args: CreateMessageInput!)", "content": "{\n    createMessage(args: $args) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/test-message/documents.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "ChatsListCacheQuery($userId: Int!)", "content": "{\n    chat(order_by:[{messages_aggregate:{max:{created_at:desc}}}]) {\n      ...chat\n      users(where:{user_id:{_neq:$userId}}) {\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/ChatNavbar.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    emailName\n    password\n    enableEmail\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AddFunds($offerID: String!, $amount: String!, $from: String)", "content": "{\n    addFunds(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "GetWithdrawRequests($offset:Int)", "content": "{\n      getAllWithdrawRequests(offset:$offset){\n          success\n          message\n          data{\n            _id\n            requestId\n            requestAmount\n            requestTime\n            rider{\n              _id\n              name\n              currentWalletAmount\n            }\n            status\n          }\n          pagination{\n            total\n          }\n      }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "thing($requiredVar: String!, $optionalVar: String)", "content": "{\n      entry(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n        value\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addRecipe($recipe: RecipeInput!)", "content": "{\n    addRecipe(recipe: $recipe) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-4/src/AddRecipe.js", "repo": "nikgraf_graphql-apollo-client-course"}}, {"type": "mutation", "name": "deleteNamespace($name: String!)", "content": "{\n    deleteNamespace(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "subscription", "name": "OnCreatePost", "content": "{\n          onCreatePost(postOwner: \"${USERNAME1}\") {\n              id\n              title\n              postOwner\n          }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/amplify-util-mock/src/__e2e__/subscriptions-with-auth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "MixedQuery", "content": "{\n          counter @client(always: true)\n          name\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "ArtsySearch(\n          $query: String!,\n          $after: String, $first: Int,\n          $before: String, $last: Int,\n        )", "content": "{\n          search(\n            query: $query,\n            after: $after, first: $first,\n            before: $before, last: $last,\n          ) {\n            edges {\n              __typename\n              node {\n                __typename\n                displayLabel\n                ... on Artist { __typename href bio }\n                ... on SearchableItem { __typename description }\n              }\n            }\n            pageInfo {\n              __typename\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n            }\n            totalCount\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "ideaIssueFindById($id: ID!)", "content": "{\n      ideaIssueFindById(id: $id) {\n        ...ideaIssueFullFields\n      }\n    }\n    ${IDEA_ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "query", "name": "getCategories($type: String!)", "content": "{\n    categories(type: $type) {\n      id\n      title\n      slug\n      icon\n      children {\n        id\n        title\n        slug\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/query/category.query.ts", "repo": "mdhafiz_PickBazar"}}, {"type": "query", "name": "EditorList($role: String!)", "content": "{\n        getEditors(role: $role) {\n            id\n            name\n            aff\n            focuses\n            expertises\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "usersConfigGetNotificationByEmail($isAllowed: Boolean)", "content": "{\n          usersConfigGetNotificationByEmail(isAllowed: $isAllowed) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-notifications-ui/src/containers/NotificationSettings.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "insertRemoteAppUserRoles($roles: [authUserRoles_insert_input!]!)", "content": "{\n  insertAuthUserRoles(objects: $roles) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "query", "name": "allPosts($first: Int!, $skip: Int!)", "content": "{\n    allPosts(orderBy: { createdAt: desc }, first: $first, skip: $skip) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-apollo/components/PostList.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "CreateFavoriteChatRoomMutation(\n    $input: CreateFavoriteChatRoomInput!\n  )", "content": "{\n    createFavoriteChatroom(input: $input) {\n      favchatroom {\n        chatroom {\n          ...ChatRoom\n        }\n      }\n    }\n  }\n  ${ChatRoom}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateFavoriteChatRoomMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "CreateCategory($category:CategoryInput)", "content": "{\n  createCategory(category:$category){\n    _id\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n        image\n        isActive\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "(\n  $limit: Int,\n  $offset: Int,\n  $order: String,\n  $username: String\n)", "content": "{\n  counters {\n    rows: admins {\n     count(username: $username)\n    }\n  }\n  rows: admins(\n    limit: $limit,\n    offset: $offset,\n    order: $order,\n    username: $username\n  ) {\n    id,\n    username,\n    first_name,\n    last_name,\n    payload,\n    createdAt,\n    email,\n    permissions,\n    chatbotIds\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/admins/pages/admins.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "query", "name": "CreateAccount_Cached_Query($where: PaymentPlanWhereInput)", "content": "{\n    paymentPlans(where: $where) {\n      id\n      name\n      features {\n        included\n        excluded\n      }\n      caption\n      price\n      planID\n      tier\n    }\n    howDidYouFindOutAboutUs: view(viewID: \"HowDidYouFindOutAboutUs\") {\n      id\n      title\n      caption\n      type\n      properties\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/CreateAccount.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "($input: ServerCreateInput!)", "content": "{\n            createServer(input: $input) {\n              id\n              hostname\n              ipv4\n              ipv6\n              created_at\n              updated_at\n              groups {\n                id\n                name\n              }\n              users {\n                id\n                name\n              }\n              users_count\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fieldFragment1\n      }\n\n      fragment fieldFragment1 on Field {\n        bar {\n          baz {\n            ...nestedFragment\n          }\n        }\n      }\n\n      fragment nestedFragment on Field {\n        foo @live\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "insertShiftDate($shiftDate: [shiftDate_insert_input!]!)", "content": "{\n    insert_shiftDate(objects: $shiftDate) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/mutation.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "addRecipe($recipe: RecipeInput!)", "content": "{\n    addRecipe(recipe: $recipe) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-4/src/AddRecipe.js", "repo": "nikgraf_graphql-apollo-client-course"}}, {"type": "query", "name": "CharacterInformation($id: Int!)", "content": "{\n        information: characterByCharacterID(id: $id) {\n            id\n            name\n            securityStatus\n            corporation {\n                id\n                name\n                ticker\n                alliance {\n                    id\n                    name\n                    ticker\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "009b5eae048747488ab78334a7cb9f92e1ad888f", "file": "src/util/queries/information.js", "repo": "eveisesi_neo-ui"}}, {"type": "query", "name": "getZones(\n    $filters: [SearchGenericFilterInput!]\n    $search: String\n    $before: String\n    $after: String\n  )", "content": "{\n    search(\n      first: 10\n      sort: { key: publishedAt, direction: DESC }\n      filters: $filters\n      search: $search\n      before: $before\n      after: $after\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      nodes {\n        entity {\n          ... on DocumentZone {\n            id\n            data\n            node\n            document {\n              id\n              repoId\n              meta {\n                title\n                path\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/editor/modules/chart/EditOverlay/ChartCatalog.js", "repo": "republik_plattform"}}, {"type": "query", "name": "profiles($id: [Int!]!)", "content": "{\n  profilesById(ids: $id) {\n    id\n    circlesAddress\n    displayCurrency\n    circlesSafeOwner\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    dream\n    avatarUrl\n    displayCurrency\n    provenUniqueness\n    city {\n      geonameid\n      name\n      country\n    }\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n      notificationEmail\n    }\n    memberships {\n      isAdmin\n      organisation {\n        id\n        circlesAddress\n        displayCurrency\n        displayName\n        circlesSafeOwner\n        name\n        description\n        avatarUrl\n        cityGeonameid\n        city {\n          geonameid\n          country\n          name\n          population\n        }\n      }\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        displayName\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "createNotificationCreative(\n    $input: CreateNotificationCreativeInput!\n  )", "content": "{\n    createNotificationCreative(createNotificationCreativeInput: $input) {\n      id\n      payloadNotification {\n        body\n        title\n        targetUrl\n      }\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/creative.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "query", "name": "GetOrganizationMentionSuggestions($pagination: Pagination!, $where: Filter, $sort: [SortBy!])", "content": "{\n  organizations(pagination: $pagination, where: $where, sort: $sort) {\n    content {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "updateGroupTenantPermissions(\n      $input: UpdateGroupTenantPermissionsInput!\n    )", "content": "{\n      updateGroupTenantPermissions(input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/updateTenantGroupPermissions.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "getChannelSettings($id: ID)", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannelSettings.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/parser.test.ts", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "PlaceOrder($restaurant:String!,$orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$tipping:Float!, $taxationAmount: Float!,$address:AddressInput!, $orderDate: String!,$isPickedUp: Boolean!, $deliveryCharges: Float!)", "content": "{\n    placeOrder(restaurant:$restaurant,orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,tipping:$tipping, taxationAmount: $taxationAmount, address:$address, orderDate: $orderDate,isPickedUp: $isPickedUp, deliveryCharges:$deliveryCharges) {\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      orderDate\n      expectedTime\n      isPickedUp\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/Checkout/Checkout.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "createProjectComment($authToken: String!,\n    $comment: CommentInput, $id: ID!)", "content": "{\n      CreateProjectComment(input: {\n        auth_token: $authToken,\n        comment: $comment,\n        project_id: $id\n      }) {\n        project_comment {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "ProductMetafieldCreate($input: ProductInput!)", "content": "{\n    productUpdate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "graphql/mutations/productMetafieldCreate.js", "repo": "Shopify_product-reviews-sample-app"}}, {"type": "mutation", "name": "EnableMessaging", "content": "{\n    enableMessaging\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/EnableMessaging.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "addMotionIdToTreasuryProposalMutation($treasuryProposalId: Int!, $motionId: Int!)", "content": "{\n        update_onchain_links(\n            where: {\n                onchain_treasury_proposal_id: {_eq: $treasuryProposalId}\n            },\n            _set: {\n                onchain_motion_id: $motionId\n            }\n        ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "usersConfigEmailSignatures($signatures: [EmailSignature])", "content": "{\n          usersConfigEmailSignatures(signatures: $signatures) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/ui-settings/src/email/containers/Signature.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "deleteReaction($id: ID!)", "content": "{\n            deleteReaction(objectType: IDEA, id: $id)\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "query", "name": "($text: String)", "content": "{\n            autoCompletion(text: $text) {\n              scientificName\n              familyName\n              name\n              _id\n            }\n          }", "metadata": {"commit_hash": "69435c083093dc503080b01e26d8c039549d3d77", "file": "legacy/containers/SearchInputBar.js", "repo": "zapkub_cu-vivid-museum-wiki"}}, {"type": "query", "name": "HeroName($episode: Episode)", "content": "{\n    hero(episode: $episode) {\n      name\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "setContenthash($name: String, $recordValue: String)", "content": "{\n    setContenthash(name: $name, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "getRemoteAppRoles", "content": "{\n  authRoles {\n    role\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "query", "name": "Q1", "content": "{ sum(a: 1, b: 2) } query Q2 { sum(a: 2, b: 3) }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getAuthors", "content": "{\n          author {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GetDashboardSales($startingDate: String, $endingDate: String,$restaurant:String!)", "content": "{\n    getDashboardSales(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      orders{\n        day\n        amount\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "findPersons($id: ID!, $name: String!)", "content": "{\n    findPersons(fields: {id: $id, name: $name}) {\n      ...PersonFields\n    }\n  }\n\n  ${PersonFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/queries/findPerson.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "deleteEventApi($id: ID!)", "content": "{\n    deleteEventDefinition(id: $id) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Api/gql.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "GetOrganizationName($id: ID!)", "content": "{\n  organization(id: $id) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "createTeamMember($userID: UUID!, $teamID: UUID!)", "content": "{\n  createTeamMember(input: {userID: $userID, teamID: $teamID}) {\n    team {\n      id\n    }\n    teamMember {\n      id\n      username\n      fullName\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "Login($data: LoginInput!)", "content": "{\n    login(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "Login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        email\n        }\n      }\n    }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/mutations.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "query", "name": "getDoor($id: ID!)", "content": "{\n    door: Door(id: $id) {\n      id\n      title\n      markup\n      activeTo\n      answer\n      discussionUrl\n      solved\n    }\n  }", "metadata": {"commit_hash": "b43642d07e7f391c685bd8839c42d2a33f42cfa4", "file": "client/src/Door.js", "repo": "knowit_kodekalender"}}, {"type": "query", "name": "($literal: Boolean, $value: Int)", "content": "{\n              a: field(literal: true, value: 42)\n              b: field(literal: $literal, value: $value)\n            }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/cache.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "newValues", "content": "{\n          name\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/subscribeToMore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "attemptUserLogin($organization_name: String!, $email: String!, $password: String!)", "content": "{\n     login(organization_name: $organization_name, email: $email, password: $password) {\n      token\n      user {\n        id\n        first_name\n        last_name\n        email\n        phone_number\n        role\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "AddSubDomainFavourite($domain: Domain)", "content": "{\n    addSubDomainFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "Shops($domains: [String])", "content": "{\n      shops(domains: $domains) {\n        id\n        domain\n        name\n        storefrontAccessToken\n      }\n    }", "metadata": {"commit_hash": "70998b427ad850d5beb881dce7d48219ca142e0d", "file": "pages/cart/index.js", "repo": "Shopify_shopify-marketplaces-buyer-app"}}, {"type": "mutation", "name": "removePhoneNumberFromContact($contactId: ID!, $id: ID!)", "content": "{\n  phoneNumberRemoveFromContactById(contactId: $contactId, id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "ApplyTeam($teamID: String!)", "content": "{\n        applyTeam(teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "CreateVendor($vendorInput:VendorInput)", "content": "{\n    createVendor(vendorInput:$vendorInput){\n      _id\n      email\n      userType\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Vendor/Vendor.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "GetDashboardSales($startingDate: String, $endingDate: String,$restaurant:String!)", "content": "{\n    getDashboardSales(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      orders{\n        day\n        amount\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "tokenDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!)", "content": "{\n    tokenDayDatas(\n      first: 1000\n      skip: $skip\n      where: { token: $address, date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n      subgraphError: allow\n    ) {\n      date\n      volumeUSD\n      totalValueLockedUSD\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/tokens/chartData.ts", "repo": "21orangehat_upool-listagem"}}, {"type": "query", "name": "Test($id: ID!)", "content": "{\n    foo(id: $id) {\n      bar\n    }\n  }", "metadata": {"commit_hash": "70937795396931ac4c0a7c16db40e168fa2da38a", "file": "src/__tests__/index.ts", "repo": "apollographql_apollo-link-persisted-queries"}}, {"type": "mutation", "name": "deleteAPIRule($name: String!, $namespace: String!)", "content": "{\n    deleteAPIRule(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateSiteSettings(\n                $siteName: String,\n                $siteTitle: String,\n                $metaDescription: String, \n                $facebookLink: String,\n                $twitterLink: String,\n                $instagramLink: String,\n                $logoHeight: Int,\n                $logoWidth: Int,\n                $metaKeyword: String,\n                $homeLogo: String,\n                $youtubeLink: String,\n                $appForceUpdate: String\n                $riderAndroidVersion: String\n                $riderIosVersion: String\n                $driverAndroidVersion: String\n                $driverIosVersion: String\n                )", "content": "{\n                    updateSiteSettings(\n                    siteName: $siteName\n                    siteTitle: $siteTitle\n                    metaDescription: $metaDescription\n                    facebookLink: $facebookLink\n                    twitterLink: $twitterLink\n                    instagramLink: $instagramLink\n                    logoHeight: $logoHeight\n                    logoWidth: $logoWidth\n                    metaKeyword: $metaKeyword\n                    homeLogo: $homeLogo\n                    youtubeLink: $youtubeLink\n                    appForceUpdate: $appForceUpdate\n                    riderAndroidVersion: $riderAndroidVersion\n                    riderIosVersion: $riderIosVersion\n                    driverAndroidVersion: $driverAndroidVersion\n                    driverIosVersion: $driverIosVersion\n                    ){\n                    status\n                    }\n                }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateSiteSettings.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "query", "name": "getDoc", "content": "{\n        doc @pdbGet(id: \"conflict\", conflicts: true) {\n          _id\n          _rev\n          _conflicts\n          name\n        }\n      }", "metadata": {"commit_hash": "0984105b45bada32b8c0b0ac70a6847570781221", "file": "src/resolvers/queries/get/get.spec.ts", "repo": "mattjennings_apollo-link-pouch"}}, {"type": "mutation", "name": "AddItem($command: InputAddItemType!)", "content": "{\n    addItem(command: $command) {\n      name,\n      itemsQuantity\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/addToCart/addToCartMutation.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "query", "name": "($id: [ID!]!, $day: Int!, $month: Int!, $wallet: String!)", "content": "{\n    pools(where: { id_in: $id }) {\n      id\n      address\n      name\n      symbol\n      logo\n      price_usd # pool asset price\n      total_value_locked_usd\n      now: price_candles(\n        where: { base: \"usd\", period: 3600 }\n        orderBy: timestamp\n        orderDirection: desc\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n      day: price_candles(\n        where: { base: \"usd\", period: 3600, timestamp_gt: $day }\n        orderBy: timestamp\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n\n      month: price_candles(\n        where: { base: \"usd\", period: 3600, timestamp_gt: $month }\n        orderBy: timestamp\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n    }\n\n    managedPools: pools(where: { investors_: { wallet: $wallet } }) {\n      id\n      address\n      name\n      symbol\n      logo\n      price_usd # pool asset price\n      total_value_locked_usd\n      investors(where: { wallet: $wallet }) {\n        amount\n      }\n      chain {\n        logo\n      }\n      now: price_candles(\n        where: { base: \"usd\", period: 3600 }\n        orderBy: timestamp\n        orderDirection: desc\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n      day: price_candles(\n        where: { base: \"usd\", period: 3600, timestamp_gt: $day }\n        orderBy: timestamp\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n\n      month: price_candles(\n        where: { base: \"usd\", period: 3600, timestamp_gt: $month }\n        orderBy: timestamp\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/Profile/Portfolio/AssetsTable/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "Namespaces($showSystemNamespaces: Boolean)", "content": "{\n    namespaces(\n      withSystemNamespaces: $showSystemNamespaces\n      withInactiveStatus: false\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateTaskName($taskID: UUID!, $name: String!)", "content": "{\n  updateTaskName(input: {taskID: $taskID, name: $name}) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "loadMoreDirectMessageThreads($after: String)", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userDirectMessageThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userDirectMessageThreadsConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getCurrentUserDMThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "($rankCreateInput: RankCreateInput!)", "content": "{\n        rankCreate(newRank: $rankCreateInput) {\n            id\n            name\n            scopes {\n                accessAdminPanel\n                manageArticles\n            }\n            badgeCode\n            description\n        }\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/rank-create.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "query", "name": "SearchPosts", "content": "{\n        searchPosts {\n          items {\n            id\n            content\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "AuthenticateUserMutation($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "868e58e4a19847fd9104e13922229edb96e4dda7", "file": "packages/components/login-form/login-form.js", "repo": "dferber90_lovely-webapp"}}, {"type": "query", "name": "($id: ID)", "content": "{\n    blogPost(where: { id: $id }) {\n      title\n      post\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "gatsby/examples/using-multiple-providers/src/pages/index.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "friendDelete($input: FriendDeleteInput!)", "content": "{\n          friendDelete(input: $input) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "getMessageList", "content": "{\n          # This field needs a selection set because its value is an array\n          # of non-scalar objects.\n          messageList\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/diffAgainstStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "updateTaskName($taskID: UUID!, $name: String!)", "content": "{\n  updateTaskName(input: {taskID: $taskID, name: $name}) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "SwapsByTokens($token0: String!, $token1: String!)", "content": "{\n    pairs(where: { token0: $token0, token1: $token1 }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "8bcfc4591ba8c5fb2d79e2399259bdee980e81bb", "file": "src/v2/apollo/queries.ts", "repo": "Uniswap_api-deprecated"}}, {"type": "mutation", "name": "CreateGuestbookEntry($input: GuestbookEntryInput!)", "content": "{\n      createGuestbookEntry(data: $input) {\n        _id\n        _ts\n        name\n        message\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-fauna/lib/fauna.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getAll$", "content": "{MODELS}($where: ${whereName}, $first: Int = ${DEFAULT_PAGE_SIZE}, $skip: Int, $sortBy: [${sortName}!]) {\n             objs: ${queryName}(where: $where, first: $first, skip: $skip, sortBy: $sortBy) ${fields}\n         }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "instructorUpdateAvailability(\n    $availability: InstructorAvailability!\n  )", "content": "{\n    instructorUpdateAvailability(input: { availability_: $availability }) {\n      instructor {\n        availability\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "verifySafe($safeAddress: String!)", "content": "{\n  verifySafe(safeAddress: $safeAddress) {\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "farmsBulk($addresses: [String]!, $blockWeekAgo: Int!)", "content": "{\n          farmsAtLatestBlock: pairs(first: 30, where: { id_in: $addresses }) {\n            id\n            volumeUSD\n            reserveUSD\n          }\n          farmsOneWeekAgo: pairs(first: 30, where: { id_in: $addresses }, block: { number: $blockWeekAgo }) {\n            id\n            volumeUSD\n            reserveUSD\n          }\n        }", "metadata": {"commit_hash": "74922f49ceb05f6fc38a0a785d33676c737f67a6", "file": "teams/18-Avault/src/avault-shiden-web/scripts/updateLPsAPR.ts", "repo": "parity-asia_hackathon-2022-summer"}}, {"type": "query", "name": "userInformation", "content": "{\n      me {\n        id\n        email\n        oneSignalUserId\n        firstName\n        orders {\n          id\n        }\n        cart {\n          id\n          deletedAt\n          quantity\n          variant {\n            id\n            available\n            price\n            selectedOptions {\n              id\n              option {\n                id\n                name\n              }\n              value {\n                id\n                name\n              }\n            }\n            product {\n              id\n              name\n              imageUrl\n              available\n              unavailableOptionsValues {\n                id\n                name\n              }\n              brand {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/graphql/queries/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "query", "name": "AnalyzeSleep", "content": "{\n  analyzeSleep {\n    components {\n      variable\n      regressionGradient\n    }\n    regressionIntercept\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "($device: NewDevice!)", "content": "{\n  createDevice(device: $device) {\n    id,\n    name,\n    payload,\n    createdAt,\n    updatedAt,\n    status,\n    lat,\n    lon,\n    jsonSchema,\n    version,\n    lastUpdate,\n    snapshot\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/devices/pages/devices.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "query", "name": "recipes($vegetarian: Boolean!)", "content": "{\n    recipes(vegetarian: $vegetarian) {\n      id\n      title\n      isStarred @client\n    }\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-6/src/recipesQuery.js", "repo": "nikgraf_graphql-apollo-client-course"}}, {"type": "mutation", "name": "hideNotification($id: ID!)", "content": "{\n        hideNotification(id: $id)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlHideNotification.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "enableRedshiftClusterDatasetTableCopy(\n      $clusterUri: String!\n      $datasetUri: String!\n      $tableUri: String!\n      $schema: String!\n      $dataLocation: String\n    )", "content": "{\n      enableRedshiftClusterDatasetTableCopy(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n        tableUri: $tableUri\n        schema: $schema\n        dataLocation: $dataLocation\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/copyTableToCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "MakeOffer(\n    $listingID: String\n    $finalizes: Int\n    $affiliate: String\n    $commission: String\n    $value: String\n    $currency: String\n    $arbitrator: String\n    $data: MakeOfferInput\n    $from: String\n    $withdraw: String\n    $quantity: Int\n  )", "content": "{\n    makeOffer(\n      listingID: $listingID\n      finalizes: $finalizes\n      affiliate: $affiliate\n      commission: $commission\n      value: $value\n      currency: $currency\n      arbitrator: $arbitrator\n      data: $data\n      from: $from\n      withdraw: $withdraw\n      quantity: $quantity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "adminUpdatePost($title: String!, $id: UUID!, $body: String!)", "content": "{\n    adminUpdatePost(input: { title_: $title, id_: $id, body_: $body }) {\n      news {\n        updatedAt\n        title\n        thumbnail\n        status\n        slug\n        profileId\n        nodeId\n        intro\n        id\n        createdAt\n        body\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "integrante($id: String!)", "content": "{\n    integrante(id: $id) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        fullname\n      }\n      proyecto {\n        id\n        nombre\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/details/integrante-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "markAllNotificationsAsRead", "content": "{\n    markAllNotificationsAsRead {\n      ...notificationInfo\n    }\n  }\n  ${notificationInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "requestResetPassword($email: String!)", "content": "{\n            requestResetPassword(email: $email) {\n              _\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "query", "name": "Feed($type: FeedType!, $offset: Int, $limit: Int)", "content": "{\n    currentUser {\n      login\n    }\n    feed(type: $type, offset: $offset, limit: $limit) {\n      ...FeedEntry\n    }\n  }\n  ${FeedEntryFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/jit-sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "updateSession($sessionId: ID!, $session: SessionUpdateInput!)", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            type\n            category\n            status\n            title\n            shortDescription\n            longDescription\n            primaryCategory\n            secondaryCategory\n            targetAudience\n            supportingArtifacts {\n              name\n              url\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Submit/Details.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "createUser", "content": "{\n      createUser(\n        email: \"${email}\"\n      ) {\n        id\n        email\n        emailVerified\n      }\n    }", "metadata": {"commit_hash": "1b0cf980a081ac78ce310ad7edeef6d7fb8d29bb", "file": "src/components/Subscription.js", "repo": "rabbotio_minemark"}}, {"type": "query", "name": "($literal: Boolean, $value: Int)", "content": "{\n              a: field(literal: true, value: 42)\n              b: field(literal: $literal, value: $value)\n            }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/cache.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "fetch_todos($userId: String!)", "content": "{\n    todos(\n      where: { is_public: { _eq: false }, user_id: { _eq: $userId } }\n      order_by: { created_at: desc }\n    ) {\n      ...TodoFragment\n    }\n  }\n  ${TODO_FRAGMENT}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "blocks($timestamp: Int!)", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "8404eca6f856dba59b0ba8f023cee437b686dcb4", "file": "src/components/ticker.js", "repo": "1Hive_about-1hive"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n            signIn(email: $email, password: $password, generateRefreshToken: true) {\n              token\n              refreshToken\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "Login($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "activeServiceClassFilters", "content": "{\n    activeServiceClassFilters @client {\n      basic\n      provider\n      tag\n      connectedApplication\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceClassList/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "Comment($repoName: String!, $start: Int!, $limit: Int!)", "content": "{\n      entry(repoFullName: $repoName, start: $start, limit: $limit)\n        @connection(key: \"repoName\") {\n        comments {\n          text\n        }\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($where: JSON)", "content": "{\n    mapPortals(where: $where) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/queries/sub/mapPortals_total.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "MintGameMutation($id: String!)", "content": "{\n    mintGame(id: $id) {\n      transactionHash\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/Game/Game.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "Simple", "content": "{\n        ...FragmentSpread\n        property\n        ...ValidSpread\n      }\n\n      fragment FragmentSpread on Thing {\n        foo\n        bar\n        baz\n      }\n\n      fragment ValidSpread on Thing {\n        oof\n        rab\n        zab\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($literal: Boolean, $value: Int)", "content": "{\n                  a: field(literal: true, value: 42)\n                  b: field(literal: $literal, value: $value)\n                }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/cache.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "updateAddress($address: AddressInput)", "content": "{\n    updateMe(address: $address) {\n      id\n      address {\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/AddressEditor.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "CreateApiKey", "content": "{\n      createApiKey {\n        ApiKeyId\n        ApiKeySecret\n        expires\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ApiKeys/createApiKey.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "blocks($timestamp: BigInt!)", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "8bcfc4591ba8c5fb2d79e2399259bdee980e81bb", "file": "src/v2/blocks/queries.ts", "repo": "Uniswap_api-deprecated"}}, {"type": "mutation", "name": "logout", "content": "{\n  logout {\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "2c4335dade177e2649f4f38c42838e56b0bbff7f", "file": "frontend/src/GraphQL/Queries.js", "repo": "riggedCoinflip_lol-friendfinder"}}, {"type": "mutation", "name": "usersConfigEmailSignatures($signatures: [EmailSignature])", "content": "{\n          usersConfigEmailSignatures(signatures: $signatures) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/ui-settings/src/email/containers/Signature.tsx", "repo": "erxes_erxes-community"}}, {"type": "query", "name": "users", "content": "{\n  invitedUsers {\n    id\n    email\n    invitedOn\n  }\n  users {\n    id\n    email\n    fullName\n    username\n    role {\n      code\n      name\n    }\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "FIND_USER_BY_ID($id: String!)", "content": "{\n    user: user(id: $id) {\n      address\n      authDetailId\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/EditUserCell/EditUserCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "DeleteAddon($id:String!,$restaurant:String!)", "content": "{\n        deleteAddon(id:$id,restaurant:$restaurant){\n          _id\n          addons{\n            _id\n            options\n            title\n            description\n            quantityMinimum\n            quantityMaximum\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Addons.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "deleteScene($id: ID!)", "content": "{\n    deleteScene(id: $id) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Scene.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "($admin: InputAdmin!)", "content": "{\n  createAdmin(admin: $admin) {\n    id,\n    username,\n    first_name,\n    last_name,\n    username,\n    payload,\n    permissions,\n    chatbotIds,\n    createdAt,\n    email\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "core/admins/hooks/admins.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Addons", "content": "{\n  addons{\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n}}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "getEnvironment($openshiftProjectName: String!)", "content": "{\n    environment: environmentByOpenshiftProjectName(openshiftProjectName: $openshiftProjectName) {\n      id\n      name\n      openshiftProjectName\n      project {\n        id\n        name\n        problemsUi\n        factsUi\n      }\n      facts {\n        ...factFields\n      }\n    }\n  }\n  ${FactsFragment}", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/EnvironmentWithFacts.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "query", "name": "SINGLE_ORDER_QUERY($id: ID!)", "content": "{\n    order: Order(where: { id: $id }) {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/60/order/[id].js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "reproveArtist(\n  $event_id: String!\n  $artist_id: String!\n)", "content": "{\n  reproveArtist(\n    event_id: $event_id\n    artist_id: $artist_id\n  ){\n    ${eventType}\n  }\n}", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event-curatorship/eventCuratorship.mutations.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "milestoneCreate($input: MilestoneCreateInput!)", "content": "{\n      milestoneCreate(input: $input) {\n        ...milestoneFullFields\n      }\n    }\n    ${MILESTONE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/milestone.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "query", "name": "getPage($taxonomy: String!, $location: String!)", "content": "{\n      page(taxonomy: $taxonomy, location: $location) {\n        location\n        taxonomy\n        common_content\n        local_content\n        common_services {\n          name\n          description\n          url\n        }\n        local_services {\n          name\n          description\n          url\n        }\n        localized_services{\n          name\n          description\n          url\n        }\n      }\n    }", "metadata": {"commit_hash": "3060fc2c99ed33acf5d3eac99e8b6bbdb25ede2c", "file": "src/CountyPage.js", "repo": "Open-NC_reentry-resources-hub"}}, {"type": "query", "name": "ABCQuery", "content": "{\n        __typename\n        a {\n          __typename\n          id\n          ...SharedFragment\n          b {\n            __typename\n            c {\n              __typename\n              title\n              titleSize\n            }\n          }\n        }\n      }\n      fragment SharedFragment on AShared {\n        __typename\n        b {\n          __typename\n          id\n          c {\n            __typename\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "partner($address: Address!)", "content": "{\n    partner {\n      name\n      address\n      role\n      identity\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/partners.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "perspectiveRemoveLink($link: LinkExpressionInput!, $uuid: String!)", "content": "{\n                perspectiveRemoveLink(link: $link, uuid: $uuid)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "deleteProject($projectID: UUID!)", "content": "{\n    deleteProject(input: { projectID: $projectID }) {\n      ok\n      project {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/project/deleteProject.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "MakeOffer(\n    $listingID: String\n    $finalizes: Int\n    $affiliate: String\n    $commission: String\n    $value: String\n    $currency: String\n    $arbitrator: String\n    $data: MakeOfferInput\n    $from: String\n    $withdraw: String\n    $quantity: Int\n  )", "content": "{\n    makeOffer(\n      listingID: $listingID\n      finalizes: $finalizes\n      affiliate: $affiliate\n      commission: $commission\n      value: $value\n      currency: $currency\n      arbitrator: $arbitrator\n      data: $data\n      from: $from\n      withdraw: $withdraw\n      quantity: $quantity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "LogIn($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      customer {\n        id\n        status\n        admissions {\n          id\n          admissable\n        }\n        bagItems {\n          id\n        }\n        detail {\n          id\n          shippingAddress {\n            id\n            state\n          }\n        }\n      }\n      user {\n        id\n        createdAt\n        email\n        firstName\n        lastName\n        beamsToken\n        roles\n      }\n      token\n      refreshToken\n      expiresIn\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/SignIn/LogIn.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "ideaContentPermissionedFindAll($filter: Filter)", "content": "{\n      ideaContentPermissionedFindAll(filter: $filter) {\n        ...ideaContentFields\n      }\n    }\n    ${IDEA_CONTENT_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaContent.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "EditPoll ($id: Int!,  $blockEnd: Int!)", "content": "{\n        update_poll(where: {id: {_eq: $id}}, _set: {block_end: $blockEnd}) {\n            affected_rows\n        }\n  }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/Poll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "addDatasetToRedshiftCluster(\n      $clusterUri: String\n      $datasetUri: String\n    )", "content": "{\n      addDatasetToRedshiftCluster(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/addDatasetToCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "($input: ResponseNewJobInput)", "content": "{\n        responseNewJob(input: $input)\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "app/driver/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "query", "name": "RiderWithdrawRequests($riderWithdrawRequestsId: String, $offset:Int)", "content": "{\n  riderWithdrawRequests(id: $riderWithdrawRequestsId, offset:$offset) {\n    _id\n    requestId\n    requestAmount\n    requestTime\n    rider {\n      name\n      email\n      accountNumber\n    }\n    status\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/WalletHistory/WalletHistory.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "ListUsers", "content": "{\n    users {\n      id\n      nickname\n    }\n  }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-manager/src/http/graphql/query.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "query", "name": "GetBrowseCategoriesAndBrands", "content": "{\n    categories(where: { visible: true }, orderBy: position_ASC) {\n      id\n      slug\n      name\n      children {\n        id\n        slug\n      }\n      position\n    }\n    brands(orderBy: name_ASC, where: { products_some: { id_not: null }, name_not: null, published: true }) {\n      id\n      slug\n      name\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Browse/queries/browseQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "listCandidates($eventId: ID!)", "content": "{\n    listCandidates(filter: { eventId: { eq: $eventId }, candidateType: { eq: UNDECIDED } }) {\n      items {\n        id\n        candidateType\n        attendee {\n          id\n          fullName\n          title\n          bio\n          company\n          pronouns\n          interests {\n            items {\n              id\n            }\n          }\n          ownIdentifiers {\n            items {\n              id\n            }\n          }\n          desiredIdentifiers {\n            items {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-candidates-by-event.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "($code: Int)", "content": "{\n        drawCard(code: $code)\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/packageA/pages/activityCoupons/service.tsx", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "query", "name": "($postId: ID!)", "content": "{\n      getPostConnection(id: $postId) {\n        id\n        title\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthModelAuthTransformer.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "($_id: ID)", "content": "{\n    deleteClient(_id: $_id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/deleteClientMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "deleteEvaluation($id: ID!)", "content": "{\n        deleteEvaluation(id: $id)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/UserForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "query", "name": "everests", "content": "{\n    everests {\n      id\n      projectCount\n      categoriesCount\n      reserveBankBalance\n      claimedProjects\n      challengedProjects\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "getCommunityByMatch($slug: LowercaseString)", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunity.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "getPartners($eventId: ID!)", "content": "{\n    events {\n      event(findBy: { id: $eventId }) {\n        get {\n          id\n          name\n          slug\n          year\n          partners {\n            id\n            slug\n            level\n            placement\n            companyName\n            companyLogo\n            heroImage\n            website\n            facebook\n            instagram\n            twitter\n            youtube\n            linkedIn\n            github\n            jobListings {\n              slug\n              id\n              title\n              description\n              jobType\n              internship\n              experienceLevel\n              relocationOffered\n              remote\n              role\n              featured\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/wi/2021/jobs.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "deleteComment($commentId: ID!, $taskId: ID, $topicId: ID)", "content": "{\n        deleteComment(commentId: $commentId, taskId: $taskId, topicId: $topicId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteComment.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "Repos", "content": "{\n    repos(first: 1000) {\n      id\n      name\n      registryName\n      versionCount\n      lastVersion {\n        semanticVersion\n        contentUri\n        timestamp\n      }\n    }\n  }", "metadata": {"commit_hash": "fe2e041cb933b5cd5acb5049391afb2f80ba8502", "file": "src/query.ts", "repo": "dappnode_explorer"}}, {"type": "mutation", "name": "AddCoach($teamID: String!, $userID: String!)", "content": "{\n        addCoach(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "someBigQuery(\n        $stringArg: String = \"This is a default string!\"\n        $intArg: Int = 0\n        $floatArg: Float\n      )", "content": "{\n        id\n        stringField(arg: $stringArg)\n        numberField(intArg: $intArg, floatArg: $floatArg)\n        nullField\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/readFromStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "updateIdea($id: ID!, $title: String!, $description: String, $upload: Upload)", "content": "{\n            updateIdea(id: $id, title: $title, description: $description, upload: $upload) {\n              id\n              title\n              description\n              imageUrl\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "updateSession($sessionId: ID!, $session: SessionUpdateInput!)", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            type\n            category\n            status\n            title\n            shortDescription\n            longDescription\n            primaryCategory\n            secondaryCategory\n            targetAudience\n            supportingArtifacts {\n              name\n              url\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Submit/Details.js", "repo": "ThatConference_that-website"}}, {"type": "subscription", "name": "subscribeToUpdatedThreads", "content": "{\n    threadUpdated {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "($manager: ID!, $timestamp: Int)", "content": "{\n    manager(id: $manager) {\n      withdraws: volumes(\n        where: { period: 86400, type: \"exit\", timestamp_gt: $timestamp }\n      ) {\n        volume_usd\n        timestamp\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/Manage/Overview/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "mutation", "name": "RejectProjectReply($input: RejectProjectReplyInput!)", "content": "{\n    rejectProjectReply(input: $input) {\n      result {\n        id\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}}, {"type": "mutation", "name": "UnblockContact($username: String, $timestamp: Float)", "content": "{\n    unblockContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/unblockContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "getAllStringsByMaxVersionAndLang($lang: String)", "content": "{\n  getAllStringsByMaxVersionAndLang(lang: $lang) {\n    lang\n    key\n    createdBy\n    version\n    value\n    needsUpdate\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "Restaurant($id:String)", "content": "{\n  restaurant(id:$id){\n    _id\n    orderId\n    orderPrefix\n    name\n    image\n    address\n    location{coordinates}\n    deliveryTime\n    minimumOrder\n    tax\n    reviewData{\n      total\n      ratings\n      reviews{\n        _id\n        order{\n          user{\n            _id\n            name\n            email\n          }\n        }\n        rating\n        description\n        createdAt\n      }\n    }\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        image\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n      }\n    }\n    options{\n      _id\n      title\n      description\n      price\n    }\n    addons{\n      _id\n      options\n      title\n      description\n      quantityMinimum\n      quantityMaximum\n    }\n    zone{\n      _id\n      title\n      tax\n    }\n    rating\n    isAvailable\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/hooks/useRestaurant.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "Feed($type: FeedType!)", "content": "{\n        # Eventually move this into a no fetch query right on the entry\n        # since we literally just need this info to determine whether to\n        # show upvote/downvote buttons\n        currentUser {\n          login\n        }\n        feed(type: $type) {\n          createdAt\n          score\n          commentCount\n          id\n          postedBy {\n            login\n            html_url\n          }\n          repository {\n            name\n            full_name\n            description\n            html_url\n            stargazers_count\n            open_issues_count\n            created_at\n            owner {\n              avatar_url\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteProyecto($where: ProyectoWhereUniqueInput!)", "content": "{\n      deleteProyecto(where: $where) {\n        id\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "AddFavouriteMutation($domain: Domain)", "content": "{\n    addFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "ClientPortalNotificationsMarkAsRead($ids: [String])", "content": "{\n    clientPortalNotificationsMarkAsRead(_ids: $ids)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/main/containers/notifications/List.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "($user_id: Int, $board_id: uuid!)", "content": "{\n      update_board (\n        _set: {\n          user_2_id: $user_id\n        },\n        where: {\n          _and: {\n            id: {\n              _eq: $board_id\n            },\n            user_2_id: {\n              _is_null: true\n            },\n            user_1_id: {\n              _neq: $user_id\n            }\n          }\n        }\n      ) {\n        affected_rows\n        returning {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/utils.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "deleteItem($item_id: uuid!)", "content": "{\n    delete_items_by_pk(id: $item_id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/with-nhost-auth-realtime-graphql/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "messageSend($input: MessageSendInput!)", "content": "{\n          messageSend(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "fetch_todos($userId: String!)", "content": "{\n    todos(\n      where: { is_public: { _eq: false }, user_id: { _eq: $userId } }\n      order_by: { created_at: desc }\n    ) {\n      ...TodoFragment\n    }\n  }\n  ${TODO_FRAGMENT}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "($input: SignInInput)", "content": "{\n        signIn(input: $input) {\n          userId\n          firstName\n          lastName\n          email\n          role\n          username\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "web/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "perspectiveUpdateLink(\n                $uuid: String!, \n                $newLink: LinkInput!\n                $oldLink: LinkExpressionInput!\n            )", "content": "{\n                perspectiveUpdateLink(\n                    newLink: $newLink, \n                    oldLink: $oldLink, \n                    uuid: $uuid\n                ) {\n                    ${LINK_EXPRESSION_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "query", "name": "DocumentsAndMediaMetrics(\n\t\t$assetId: String!\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)", "content": "{\n\t\tdocument(\n\t\t\tassetId: $assetId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tchannelId: $channelId\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tassetId\n\t\t\tassetTitle\n\t\t\tdownloadsMetric {\n\t\t\t\t...geolocationFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${GEOLOCATION_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/assets/document-and-media/hocs/LocationsCard.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "getApplicationPlan($workspace: String!, $slug: String!)", "content": "{\n  apps(where: {workspace: {slug: {_eq: $workspace}}, slug: {_eq: $slug}}) {\n    id\n    subdomain\n    plan {\n      name\n      price\n      upatedAt\n      featureMaxDbSize\n    }\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "query", "name": "GetNodePage($id: ID!)", "content": "{\n    node: node(id: $id) {\n      __typename\n      id\n      ... on Game {\n        srcId\n        slug\n        name\n        slug\n      }\n      ... on User {\n        srcId\n        slug\n        slug\n      }\n      ... on Level {\n        srcId\n        slug\n        name\n        slug\n      }\n      ... on Category {\n        srcId\n        slug\n        name\n        slug\n      }\n      ... on Run {\n        srcId\n        date\n        category {\n          id\n          srcId\n        }\n        level {\n          id\n          srcId\n        }\n        timeMs\n      }\n    }\n  }", "metadata": {"commit_hash": "69c789098b97c62f32df2f41440eb553dd01b9b8", "file": "src/pages/node/[node].tsx", "repo": "jeremyBanks_speedruns"}}, {"type": "mutation", "name": "UpdateDeathwish($input: UpdateDeathwishInput!)", "content": "{\n  updateDeathwish(input: $input) {\n    deathwish {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}}, {"type": "mutation", "name": "loginMutation($password: String!, $username: String!)", "content": "{\n  login(password: $password, username: $username) {\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "requestSessionChallenge($address: String!)", "content": "{\n  requestSessionChallenge(address: $address)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "botUnsubscribe($input: BotUnsubscribeInput!)", "content": "{\n          botUnsubscribe(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "currentUserDirectMessageThreads($after: String)", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userDirectMessageThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userDirectMessageThreadsConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getCurrentUserDMThreadConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Listing($listingId: ID!)", "content": "{\n    marketplace {\n      listing(id: $listingId) {\n        ...basicListingFields\n        ... on Listing {\n          allOffers {\n            ...basicOfferFields\n          }\n          events {\n            id\n            event\n            blockNumber\n            block {\n              id\n              timestamp\n            }\n            returnValues {\n              ipfsHash\n              party\n              offerID\n              listingID\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ${fragments.Listing.basic}\n  ${fragments.Offer.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Listing.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Restaurant($id:String)", "content": "{\n  restaurant(id:$id){\n    _id\n    orderId\n    orderPrefix\n    name\n    image\n    address\n    location{coordinates}\n    deliveryTime\n    minimumOrder\n    tax\n    reviewData{\n      total\n      ratings\n      reviews{\n        _id\n        order{\n          user{\n            _id\n            name\n            email\n          }\n        }\n        rating\n        description\n        createdAt\n      }\n    }\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        image\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n      }\n    }\n    options{\n      _id\n      title\n      description\n      price\n    }\n    addons{\n      _id\n      options\n      title\n      description\n      quantityMinimum\n      quantityMaximum\n    }\n    zone{\n      _id\n      title\n      tax\n    }\n    rating\n    isAvailable\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/hooks/useRestaurant.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "GetUserImages($userId: ID!)", "content": "{\n    person(id: $userId) {\n      id\n      name\n      images {\n        bin\n        mimeType\n        date\n        description\n        extension\n        hash\n        name\n        size\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/brickroom/BrUserAvatar.tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "query", "name": "GetAuthor2", "content": "{\n          author2 {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "GetDashboardSales($startingDate: String, $endingDate: String,$restaurant:String!)", "content": "{\n    getDashboardSales(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      orders{\n        day\n        amount\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "upsertShopCategoryEntries($shopCategoryEntries: [ShopCategoryEntryInput!]!)", "content": "{\n  upsertShopCategoryEntries(shopCategoryEntries: $shopCategoryEntries) {\n    inserted\n    updated\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "getSubdomains($name: String)", "content": "{\n    getSubdomains(name: $name) {\n      name\n      owner\n      resolver\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "subscription", "name": "techCommitteeProposalSubscription($startBlock: Int!)", "content": "{\n        techCommitteeProposal (\n            where: {\n\t\t\t\tnode: {\n\t\t\t\t\tstatus_some: {\n\t\t\t\t\t\tAND: [\n\t\t\t\t\t\t\t{ status: \"Proposed\" },\n\t\t\t\t\t\t\t{ blockNumber: { number_gte: $startBlock } }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n        ){\n            mutation\n            node {\n                id\n                author\n\t\t\t\tproposalId\n                status(orderBy: id_DESC) {\n                    blockNumber {\n                        number\n                    }\n                    status\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "tagVideosw($name: String)", "content": "{\n        allTagses(filter: { name: $name }) {\n            id\n            name\n            videos {\n                id\n                description\n                link\n                duration\n                name\n                speaker {\n                    name\n                }\n                tags {\n                    name\n                    id\n                }\n                speaker {\n                    name\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/TAG_VIDEOS.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/CartAddress/CartAddress.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "GetDashboardOrders($startingDate: String, $endingDate: String)", "content": "{\n  getDashboardOrders(starting_date: $startingDate, ending_date: $endingDate){\n    orders{\n      day\n      count\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "getProjectLayout($id: ID!)", "content": "{\n    economicResource(id: $id) {\n      id\n      name\n      note\n      metadata\n      license\n      repo\n      classifiedAs\n      accountingQuantity {\n        hasNumericalValue\n      }\n      onhandQuantity {\n        hasUnit {\n          id\n        }\n        hasNumericalValue\n      }\n      conformsTo {\n        id\n        name\n      }\n      primaryAccountable {\n        id\n        name\n        primaryLocation {\n          name\n          mappableAddress\n          lat\n          long\n        }\n      }\n      currentLocation {\n        id\n        name\n        mappableAddress\n        lat\n        long\n      }\n      images {\n        hash\n        name\n        mimeType\n        bin\n        date\n        description\n        extension\n        size\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/layout/FetchProjectLayout.tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "query", "name": "getUsers", "content": "{\n        allUsers {\n            _id,\n            email,\n            profile {\n                firstName,\n                lastName,\n                role\n            }\n        }\n    }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/queries.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "query", "name": "getDiscussionTips", "content": "{\n  onchain_links(where: {onchain_tip_id: {_is_null: false}}) {\n    ...discussionTip\n  }\n}\n    ${DiscussionTipFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "tagPostFilter($tag: String!, $input: PaginationInputType!)", "content": "{\n    tagPostFilter(tag: $tag, input: $input) {\n      page\n      data {\n        id\n        postId\n        slug\n        content\n        cover\n        likes\n        comments\n        community {\n          id\n          name\n          slug\n          communityId\n          description\n          logo\n          cover\n          type\n          category {\n            id\n            name\n          }\n          createdAt\n        }\n        tags {\n          id\n          tagName\n        }\n        user {\n          id\n          fullName\n          photo\n          totalLikes\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "updateWorkspace($id: uuid!, $workspace: workspaces_set_input!)", "content": "{\n  updateWorkspace(pk_columns: {id: $id}, _set: $workspace) {\n    id\n    name\n    email\n    companyName\n    addressLine1\n    addressLine2\n    addressPostalCode\n    addressCity\n    addressCountryCode\n    slug\n    taxIdType\n    taxIdValue\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "query", "name": "getThreadByMatch($id: ID!)", "content": "{\n    thread(id: $id) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/thread/getThread.js", "repo": "withspectrum_spectrum"}}, {"type": "query", "name": "($description: String!)", "content": "{\n                me {\n                  id\n                  description(update: $description)\n                }\n              }", "metadata": {"commit_hash": "89dd6d9be2c03695498196ef118e7054874db3fa", "file": "pages/editProfile.tsx", "repo": "pikokr_uniquebots"}}, {"type": "mutation", "name": "($id: ID!, $likes: Long!, $idUser: ID!, $favorites: [ID!])", "content": "{\n    updateRecipe(id: $id, data: { likes: $likes }) {\n      data {\n        id\n        attributes {\n          likes\n        }\n      }\n    }\n    updateUsersPermissionsUser(id: $idUser, data: { favorites: $favorites }) {\n      data {\n        id\n        attributes {\n          favorites {\n            data {\n              id\n              attributes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d9d5e4274570fe63f33ca798d58fa79b7ec75182", "file": "graphql/mutations/recipes.js", "repo": "gabrielcaiana_receitas-online"}}, {"type": "subscription", "name": "OnCreateTask", "content": "{\n              onCreateTask(\n                owner: \"${USERNAME1}\",\n                filter: { priority: { eq: 8 } }\n              ) {\n                id\n                title\n                priority\n                owner\n              }\n            }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "people($first: Int, $second: String)", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/getFromAST.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "submitRepository($repoFullName: String!)", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.urql.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "EditCategory($category:CategoryInput)", "content": "{\n        editCategory(category:$category){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "getAccounts($pageSize: Int = 20)", "content": "{\n\t\taccounts(pageSize: $pageSize) {\n\t\t\titems {\n\t\t\t\texternalReferenceCode\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "tokenDayDatas($tokenAddr: String!, $skip: Int!)", "content": "{\n    tokenDayDatas(\n      first: 1000\n      skip: $skip\n      orderBy: date\n      orderDirection: asc\n      where: { token: $tokenAddr }\n    ) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "allPosts", "content": "{\n  allPosts(orderBy: createdAt_DESC) {\n    id\n    imageUrl\n    description\n  }\n}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-instagram/src/components/ListPage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "fetchUser", "content": "{\n          me {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "a33eec57a5308fc4435a3c8a388bce6c30cb13fe", "file": "src/core/apiclients/graphql/GraphQLAPIClient.ts", "repo": "orangeloops_public-ol-native-template"}}, {"type": "mutation", "name": "Login($data: LoginInput!)", "content": "{\n    login(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "query", "name": "GetGamePagePreview($slug: String!)", "content": "{\n    game(slug: $slug) {\n      id\n      slug\n      name\n    }\n  }", "metadata": {"commit_hash": "69c789098b97c62f32df2f41440eb553dd01b9b8", "file": "src/pages/[game]/index.tsx", "repo": "jeremyBanks_speedruns"}}, {"type": "query", "name": "Application($id: ID!)", "content": "{\n    application(id: $id) {\n      id\n      providerName\n      description\n      name\n      labels\n      healthCheckURL\n      integrationSystemID\n      status {\n        condition\n      }\n      packages {\n        data {\n          id\n          name\n          description\n          defaultInstanceAuth {\n            credential {\n              __typename\n            }\n          }\n          apiDefinitions {\n            totalCount\n          }\n          eventDefinitions {\n            totalCount\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Application/gql.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "Sections", "content": "{\n  sections{\n    _id\n    name\n    enabled\n    restaurants{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Section/Section.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "addUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n\t\t\t\tdailyHints\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "query", "name": "offersByIdAndVersion($query: [OfferByIdAndVersionInput!]!)", "content": "{\n  offersByIdAndVersion(query: $query) {\n    id\n    title\n    pictureUrl\n    pricePerUnit\n    currentInventory\n    version\n    tags {\n      typeId\n      value\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "($username: String!, $email: String!, $password: String!)", "content": "{\n    register(username: $username, email: $email, password: $password) {\n      ok\n      errors {\n        path\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/routes/Register.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "query", "name": "getPartners($slug: String!)", "content": "{\n    events {\n      event(findBy: { slug: $slug }) {\n        get {\n          id\n          name\n          slug\n          year\n          partners {\n            id\n            slug\n            level\n            placement\n            companyName\n            companyLogo\n            heroImage\n            website\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/wi/2021/partners.js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "sendInvitation($friendName: String!)", "content": "{\n\t\tsendInvitation(friendName: $friendName)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "importPostfinanceCSV($csv: String!)", "content": "{\n    importPostfinanceCSV(csv: $csv)\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "query", "name": "account", "content": "{\n        account(order_by: { free_balance: desc }, where: {}) {\n          account_id\n          identity_display\n          identity_display_parent\n          available_balance\n          free_balance\n          locked_balance\n        }\n      }", "metadata": {"commit_hash": "fd1f463c94d6865ebe5e62b0e024d7455f603a0a", "file": "store/accounts.js", "repo": "Colm3na_polkastats-v3"}}, {"type": "mutation", "name": "UpdateStudent($input: UpdateStudentInput!)", "content": "{\n      updateStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "GetDashboard($dashboardUri: String!)", "content": "{\n      getDashboard(dashboardUri: $dashboardUri) {\n        dashboardUri\n        name\n        owner\n        SamlGroupName\n        description\n        label\n        created\n        tags\n        userRoleForDashboard\n        DashboardId\n        upvotes\n        environment {\n          label\n          region\n        }\n        organization {\n          organizationUri\n          label\n          name\n        }\n        terms {\n          count\n          nodes {\n            nodeUri\n            path\n            label\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/getDashboard.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "($authSignupInput: AuthSignupInput!)", "content": "{\n        signup(authSignupInput: $authSignupInput)\n      }", "metadata": {"commit_hash": "8c0fb55d246c2e0a35475d7168d3a427a5d44c80", "file": "apps/pwa/src/app/auth/services/auth.service.ts", "repo": "mIaborde_fullstack"}}, {"type": "query", "name": "($userId: ID!)", "content": "{\n    getUserReports(userId: $userId) {\n      _id\n      report_name\n      report_desc\n      template_name\n      file_name\n      project_id\n      node_id\n      variable\n      previous\n      modified\n      createdDate\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "HeroDetailsWithFragment($episode: Episode)", "content": "{\n    hero(episode: $episode) {\n      ...HeroDetails\n    }\n  }\n  ${HeroDetailsFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/__generated__/HeroDetailsWithFragment.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "($id: String!)", "content": "{\n    project(id: $id) {\n      title\n      description\n      name\n      id\n      createdAt\n      updatedAt\n      isPublic\n\n      owner {\n        id\n        login\n        role {\n          id\n          name\n          title\n        }\n      }\n\n      items {\n        total\n      }\n\n      stores {\n        total\n      }\n\n      itemsBox: items(where: { type: \"box\" }) {\n        total\n      }\n\n      boxItemOuts {\n        total\n      }\n\n      # include types\n      ...ProjectIncludeAllTypes\n    }\n  }\n\n  ${ProjectIncludeAllTypes}", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/queries/project_boxItemOuts_page.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "query", "name": "RPM(\n    $graphId: ID!\n    $operationId: ID\n    $to: DateTime\n    $from: DateTime\n    $traceFilters: [TraceFilter]\n  )", "content": "{\n    rpm(\n      graphId: $graphId\n      operationId: $operationId\n      to: $to\n      from: $from\n      traceFilters: $traceFilters\n    ) {\n      nodes {\n        startTime\n        count\n        errorCount\n      }\n      cursor\n    }\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/timeline/rpm.js", "repo": "craigmulligan_clementine"}}, {"type": "query", "name": "SomeQuery", "content": "{\n            stuff {\n              thing\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SaveDeliveryConfiguration($configurationInput:DeliveryConfigurationInput!)", "content": "{\n  saveDeliveryConfiguration(configurationInput:$configurationInput){\n    _id\n    delivery_charges\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Configuration/Delivery/Delivery.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "loadMoreChannelMembers($id: ID, $first: Int, $after: String)", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelMemberConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelMemberConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannelMemberConnection.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "transactions", "content": "{\n    transactions(first: 100, orderBy: timestamp, orderDirection: desc) {\n      mints(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        to\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      burns(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        amount0In\n        amount0Out\n        amount1In\n        amount1Out\n        amountUSD\n        to\n      }\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}}, {"type": "query", "name": "listDataItemsSharedWithEnvGroup(\n      $filter: EnvironmentDataItemFilter\n      $environmentUri: String\n      $groupUri: String\n    )", "content": "{\n      listDataItemsSharedWithEnvGroup(\n        environmentUri: $environmentUri\n        groupUri: $groupUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          shareUri\n          environmentName\n          environmentUri\n          organizationName\n          organizationUri\n          datasetUri\n          datasetName\n          itemType\n          itemAccess\n          GlueDatabaseName\n          GlueTableName\n          S3AccessPointName\n          created\n          principalId\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/listDataItemsSharedWithEnvGroup.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "($files: [Upload]!, $topicId: String)", "content": "{\n    multipleUpload(files: $files, topicId: $topicId) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/component/Uploads.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "mutation", "name": "deleteScores($player: ID!)", "content": "{\n    deleteScores(player: $player) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "query", "name": "getNotifications", "content": "{\n    notifications {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...notificationInfo\n        }\n      }\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/notification/getNotifications.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "fetchUser($id: ID!)", "content": "{\n        fetchUser(id: $id) {\n          name\n          email\n          wins\n          losses\n          gameCount\n          activityCount\n          daysInCurrentActiveStreak\n          daysInLongestStreak\n          games{\n            id\n            win\n            completedActivities {\n              name\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "ce63327cdc13d8d5323b232a3f9891fb949a0f52", "file": "src/Views/DashboardView.js", "repo": "Swolify_swolify-fe"}}, {"type": "query", "name": "CommerceAverageRevenuePerAccount(\n\t\t$channelId: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t)", "content": "{\n\t\torderAccountAverageCurrencyValues(\n\t\t\tchannelId: $channelId\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t) {\n\t\t\tcurrencyCode\n\t\t\ttrend {\n\t\t\t\ttrendClassification\n\t\t\t\tpercentage\n\t\t\t}\n\t\t\tvalue\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/commerce/queries/AverageRevenuePerAccountQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "getTransactionHistory @client", "content": "{\n    transactionHistory\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "GetProductPayment($id: ID!)", "content": "{\n    productPayment(id: $id) {\n      ...ProductPayment\n    }\n  }\n  ${ProductPaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/products/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "editMessage($messageId: String!, $body: String!)", "content": "{\n    editMessage(body: $body, messageId: $messageId) {\n      body\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "query", "name": "GetWalletBalances($tokens: [String], $account: String!)", "content": "{\n    currencies(tokens: $tokens) {\n      __typename\n      ... on Currency {\n        id\n        name\n        code\n        priceInUSD\n      }\n      ... on Token {\n        id\n        decimals\n        balance(address: $account, format: true)\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/hoc/withWalletBalances.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "FetchPlaces", "content": "{\n    allPlaces {\n      id\n      placeName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/EditStory.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "addPostComment($teamID: String!, $content: String!, $postID: String!)", "content": "{\n        addPostComment(content: $content, teamID: $teamID, postID: $postID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "mutation", "name": "SubmitPayment($id: ID!)", "content": "{\n    payment: submitProductPayment(id: $id) {\n      ...ProductPayment\n    }\n  }\n  ${ProductPaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/products/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "subscription", "name": "itemUpdated", "content": "{\n    itemUpdated {\n      id\n      title\n    }\n}", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "query", "name": "ShipIds", "content": "{\n                  allShips {\n                    id\n                  }\n                }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/ssr/server.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addFriendByUsername($username: String!)", "content": "{\n\t\taddFriendByUsername(username: $username) {\n\t\t\tfriends {\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "Coupon($coupon:String!)", "content": "{\n    coupon(coupon:$coupon){\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Checkout/CartItemCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "mut($in: Float!)", "content": "{\n            mut(inline: 5.5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "ListScheduledQueryExecutions($scheduledQueryUri: String!)", "content": "{\n      listScheduledQueryExecutions(scheduledQueryUri: $scheduledQueryUri) {\n        executionArn\n        status\n        startDate\n        stopDate\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/listScheduledQueryExecutions.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "people($id: ID!)", "content": "{\n        allPeople(first: $id) {\n          people {\n            id\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/skip.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "($take: Int, $skip: Int, $sort: JSON, $where: JSON)", "content": "{\n      mapPortals(take: $take, skip: $skip, sort: $sort, where: $where) {\n        items {\n          id\n          mapName\n          nIndex\n          ${fieldNames instanceof Array ? fieldNames.join('\\n') : fieldNames}\n        }\n        total\n      }\n    }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/containers/App/sagas/projectExport/serverMapPortalResolve.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "query", "name": "($limit: Int)", "content": "{\n    transactions(limit: $limit) {\n      hash\n      blockHash\n      blockNumber\n      to\n      from\n      data\n      gasLimit {\n        _hex\n      }\n      gasPrice {\n        _hex\n      }\n      transactionIndex\n      nonce\n      confirmations\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "allItems($first: Int)", "content": "{\n    allItems(first: $first) {\n      id\n      title\n    }\n}", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "query", "name": "($id: ID!)", "content": "{\n    user(id: $id) {\n      votingPower\n    }\n    governances {\n      totalVotingPower\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/components/VotingPower/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "LoggedInUserQuery", "content": "{\n    loggedInUser {\n      id\n    }\n  }", "metadata": {"commit_hash": "b43642d07e7f391c685bd8839c42d2a33f42cfa4", "file": "client/src/components/UserContext.js", "repo": "knowit_kodekalender"}}, {"type": "query", "name": "FetchBids ($id: Int)", "content": "{\n        bids(first: 3, orderBy: createdAt, orderDirection: desc, where: {eventID: $id}) {\n            address\n            eventID\n            stakedAmount\n            createdAt\n        }\n    }", "metadata": {"commit_hash": "6f372b42abec79f8082dd87765e1e0904347a643", "file": "src/state/smartbid/hooks.ts", "repo": "rigelprotocol_SmartswapDappV2"}}, {"type": "mutation", "name": "toggleReaction($reaction: ReactionInput!)", "content": "{\n    toggleReaction(reaction: $reaction) {\n      ...messageInfo\n      __typename\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/reaction/toggleReaction.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "searchCommunityMembers(\n    $queryString: String!\n    $type: SearchType!\n    $filter: SearchFilter\n  )", "content": "{\n    search(queryString: $queryString, type: $type, filter: $filter) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on CommunityMember {\n              ...communityMemberInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/search/searchCommunityMembers.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "RecommendationDeleteMutation($jobIds: [String]!)", "content": "{\n\t\tdeleteJobs(jobIds: $jobIds)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationMutation.js", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "Zones", "content": "{\n    zones{\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Zone.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ownerLogin($email:String!,$password:String!)", "content": "{\n  ownerLogin(email:$email,password:$password){\n    userId\n    token\n    email\n    userType\n    restaurants{\n      _id\n      orderId\n      name\n      image\n      address\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Login.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "books($order: string)", "content": "{\n        books(skip: 0, limit: 2, order: $order) {\n          name\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "removeOrganizationOwner($organizationId: ID!)", "content": "{\n  organization_UnsetOwner(organizationId: $organizationId) {\n    id\n    owner {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(username: $username, password: $password) {\n      user {\n        firstname\n        username\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+auth/login/login.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "Application($applicationId: ID!, $apiPackageId: ID!)", "content": "{\n    application(id: $applicationId) {\n      name\n      id\n      package(id: $apiPackageId) {\n        id\n        name\n        description\n        instanceAuthRequestInputSchema\n        defaultInstanceAuth {\n          credential {\n            ... on OAuthCredentialData {\n              clientId\n              clientSecret\n              url\n              __typename\n            }\n            ... on BasicCredentialData {\n              username\n              password\n              __typename\n            }\n          }\n        }\n        instanceAuths {\n          id\n          context\n          inputParams\n          status {\n            condition\n            reason\n            message\n            timestamp\n          }\n        }\n        apiDefinitions {\n          data {\n            id\n            name\n            description\n            targetURL\n          }\n        }\n        eventDefinitions {\n          data {\n            id\n            name\n            description\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/ApiPackages/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "userInviteMakeUrl", "content": "{\n          userInviteMakeUrl {\n            result\n            successful\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "getCompanyAdminPage", "content": "{\n    allVCompanyAdmins(first: 1) {\n      nodes {\n        createdAt\n        address\n        description\n        id\n        link\n        logo\n        name\n        nameUrlSafe\n        updatedAt\n        members\n        groups\n        companyById {\n          companyProGroupsByCompanyId {\n            nodes {\n              groupName\n              id\n              slug\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "updateUserRole($userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateUserRole(input: {userID: $userID, roleCode: $roleCode}) {\n    user {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "allReviews", "content": "{\n    allReviews(orderBy: createdAt_DESC) {\n      id\n      slug\n      rating\n      createdAt\n      title\n    }\n  }", "metadata": {"commit_hash": "0e0c08cd4600d3535e4d6651c5ece26b6e42c1f4", "file": "pages/index.js", "repo": "hygraph_example_01_nextjs_apollo"}}, {"type": "mutation", "name": "invitedUsers(\n      $invitedId: ID!\n    )", "content": "{\n      invitedUsers (\n        invitedId: $invitedId\n      )\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-taro-mall/src/pages/home/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "query", "name": "AllTipPosts($postType: Int!, $postTopic: Int!, $limit: Int! = 5)", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, topic: {id: {_eq: $postTopic}}, onchain_link: {onchain_tip_id: {_is_null: false}}}\n    order_by: {onchain_link: {id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_tip_id\n      onchain_tip(where: {}) {\n        id\n        reason\n        tipStatus(last: 1) {\n          id\n          status\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "($name: String!, $genre: String!, $authorId: ID!)", "content": "{\n    addBook(name: $name, genre: $genre, authorId: $authorId) {\n      name\n      id\n    }\n  }", "metadata": {"commit_hash": "452abd50606adbf0cc2be478b3724da5f3dd770b", "file": "client/src/queries/queries.js", "repo": "Shawoll_GraphQLServerNode"}}, {"type": "query", "name": "GetDashboardTotal($startingDate: String, $endingDate: String,$restaurant:String!)", "content": "{\n    getDashboardTotal(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      totalOrders\n      totalSales\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "SearchComments", "content": "{\n        searchComments {\n          items {\n            id\n            content\n            owner\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "getSagemakerNotebookPresignedUrl($notebookUri: String!)", "content": "{\n      getSagemakerNotebookPresignedUrl(notebookUri: $notebookUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/getSagemakerNotebookPresignedUrl.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "totalLiquidityUSD", "content": "{\n    uniswapFactories(first: 1) {\n      totalLiquidityUSD\n    }\n  }", "metadata": {"commit_hash": "ee9029626b23797603b9ce8313e50089cac6d43a", "file": "src/services/graphql/queries.ts", "repo": "VenomProtocol_frontend"}}, {"type": "query", "name": "DHT($pin: Int)", "content": "{\n    DHT(pin: $pin) {\n      temperature\n      humidity\n      pin\n    }\n  }", "metadata": {"commit_hash": "6779ec1650cf05b3e2b7c27a818719ac909e9510", "file": "src/graphql/queryes/DHT.ts", "repo": "venancioavila_action"}}, {"type": "mutation", "name": "UpdateRolePriority($name: String!, $ids: [Int]!)", "content": "{\n    updateTemplateRolePriority(name: $name, ids: $ids)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/EditTemplateRole.js", "repo": "thomas81528262_wolf"}}, {"type": "query", "name": "FindExchange($id: ID!)", "content": "{\n  exchange(id: $id) {\n    id\n    public\n    name\n    colour\n    port\n    userPermissions {\n      id\n      user {\n        name\n        id\n        email\n        profilePicUrl\n        profitLoss(exchange: $id)\n      }\n      permission\n    }\n    instruments {\n      id\n      instrumentType\n      name\n      tickSizeMin\n      positionLimit\n      bondFixedPrice\n      bondVolatility\n      recentTrades(limit: 20) {\n        price\n        instrumentId\n      }\n    }\n    profitLoss {\n      instrument\n      profitLoss\n    }\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "query", "name": "getDIDByTwitter($username: String!, $shortFormDid: String!)", "content": "{\n    getDID(shortFormDid: $shortFormDid, username: $username) {\n      avatarUrl\n      lastUpdated\n      longFormDid\n      shortFormDid\n      name\n      username\n    }\n  }", "metadata": {"commit_hash": "0cd03673a5b146a74847fb84ca67cc6ee74dc5aa", "file": "client/utils/contacts.js", "repo": "imperviousai_imp-daemon"}}, {"type": "query", "name": "($userId: ID!)", "content": "{\n    getUserReports(userId: $userId) {\n      _id\n      report_name\n      report_desc\n      template_name\n      file_name\n      project_id\n      node_id\n      variable\n      previous\n      modified\n      createdDate\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "subscription", "name": "events", "content": "{\n  events {\n    type\n    from\n    to\n    itemId\n    transaction_hash\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "ViewMessagesQuery($listingId: String!)", "content": "{\n    messages(listingId: $listingId) {\n      text\n      user {\n        id\n        email\n      }\n      listingId\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/ViewMessages/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "query", "name": "getImporters", "content": "{\n    identitiesImportersTypes {\n      name\n      args\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/queries.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "query", "name": "Uploads($search: String, $ext: String, $page: Int, $pageSize: Int)", "content": "{\n    uploadFiles(\n      filters: { name: { contains: $search }, ext: { eq: $ext } }\n      pagination: { pageSize: $pageSize, page: $page }\n    ) {\n      meta {\n        pagination {\n          total\n          page\n        }\n      }\n      data {\n        id\n        attributes {\n          name\n          url\n          formats\n          ext\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Upload.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "agentUnlock($passphrase: String!)", "content": "{\n                agentUnlock(passphrase: $passphrase) {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "query", "name": "asset(\n            $id: String!\n            $domain: String!\n            $currentAddress: String!\n        )", "content": "{\n            asset(\n                id: $id\n                domain: $domain\n                currentAddress: $currentAddress\n            ) {\n                asset {\n                    ${requestedFields}\n                }\n                error {\n                    type\n                    key\n                    message\n                    response\n                }\n            }\n        }", "metadata": {"commit_hash": "a47d3d9ea38cd1363ede730998145da663df6091", "file": "packages/extension/src/background/services/GraphQLService/Queries/assetQuery.js", "repo": "AztecProtocol_aztec-v1"}}, {"type": "mutation", "name": "($postId: Int!, $userId: String!)", "content": "{\n    delete_Like(\n      where: { user_id: { _eq: $userId }, post_id: { _eq: $postId } }\n    ) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "7907866ee41941a96b937dd6e34724a112ce5298", "file": "src/components/Like.js", "repo": "abhi40308_instagram-clone"}}, {"type": "query", "name": "Member", "content": "{\n        isLoggedIn @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "unregisterApplication($id: ID!)", "content": "{\n    unregisterApplication(id: $id) {\n      name\n      providerName\n      description\n      labels\n      id\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Applications/gql.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "($id: ID!)", "content": "{\n      getPostSecretFieldIAM(id: $id) {\n        id\n        title\n        secret\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthV2Transformer.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "getOrderItems($filter: String, $page: Int = 1, $pageSize: Int = 20)", "content": "{\n\t\torderItems(filter: $filter, page: $page, pageSize: $pageSize) {\n\t\t\titems {\n\t\t\t\texternalReferenceCode\n\t\t\t\tquantity\n\t\t\t\tcustomFields {\n\t\t\t\t\tname\n\t\t\t\t\tcustomValue {\n\t\t\t\t\t\tdata\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treducedCustomFields @client\n\t\t\t\toptions\n\t\t\t}\n\t\t\tlastPage\n\t\t\tpage\n\t\t\tpageSize\n\t\t\ttotalCount\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/order-items/queries/useGetOrderItems.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "($literal: Boolean, $value: Int)", "content": "{\n                a: field(literal: true, value: 42)\n                b: field(literal: $literal, value: $value)\n              }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/cache.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "RegisterUser(\n    $email: String!\n    $password: String!\n    $name: String!\n    $gender: String!\n  )", "content": "{\n    register(email: $email, password: $password, name: $name, gender: $gender) {\n      email\n      password\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/core/queries/register.mutation.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "query", "name": "Sections", "content": "{\n  sections{\n    _id\n    name\n    enabled\n    restaurants{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Sections.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currency_symbol\n    delivery_charges\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "($userId: Int!)", "content": "{\n    update_user_by_pk(\n      pk_columns: { id: $userId }\n      _set: { last_typed: \"now()\" }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-chat/src/components/Textbox.js", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $employeeRole: [String]\n  )", "content": "{\n    addEmployee(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      phoneNumber: $phoneNumber\n      employeeRole: $employeeRole\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n      employeeRole\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addEmployeeMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "createTodo($requiredVar: String!, $optionalVar: String)", "content": "{\n          createTodo(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n            id\n            text\n            completed\n            __typename\n          }\n          __typename\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "subscription", "name": "onUserAdded", "content": "{\n    user {\n      mutation\n      node {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "27327705aff1ce63cab00c125c8b4f760df39789", "file": "client/graphql/subscriptions/user.js", "repo": "greatWall627_chatting-pro"}}, {"type": "query", "name": "GetClientData($id: ID)", "content": "{\n          clientEntity(id: $id) @client(always: true) {\n            id\n            title\n            titleLength @client(always: true)\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "B", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/scheduler/__tests__/scheduler.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Shops($domains: [String])", "content": "{\n      shops(domains: $domains) {\n        id\n        domain\n        name\n        storefrontAccessToken\n      }\n    }", "metadata": {"commit_hash": "70998b427ad850d5beb881dce7d48219ca142e0d", "file": "pages/cart/index.js", "repo": "Shopify_shopify-marketplaces-buyer-app"}}, {"type": "query", "name": "getDices", "content": "{\n        dices {\n            _id\n            did,\n            name,\n            userId,\n            actionIds,\n            coverImg,\n            createdAt\n        }\n    }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/queries.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "query", "name": "todos", "content": "{\n        todos {\n          id\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Mutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "renewDomains($labels: [String], $duration: Int)", "content": "{\n    renewDomains(labels: $labels, duration: $duration)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "($content: String!, $userID: ID!, $postID: ID!)", "content": "{\n    createComment(content: $content, userId: $userID, postId: $postID) {\n      comment {\n        content\n      }\n    }\n  }", "metadata": {"commit_hash": "8edbb9e5a59715d9fe9657dc00e82a906774b695", "file": "frontend/src/mutations.js", "repo": "ericsdevblog_django-vue-starter-blog"}}, {"type": "mutation", "name": "updateRef($input: UpdateRefInput!)", "content": "{\n    updateRef(input: $input) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n  }\n  ${fragments.branch}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "query", "name": "thing($requiredVar: String!, $optionalVar: String)", "content": "{\n      entry(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n        value\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "TrackerTechCommitteeProposalPosts($postType: Int!, $onchainTechCommitteeProposalIds: [Int!]! )", "content": "{\n        posts(where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            onchain_link: {\n                onchain_tech_committee_proposal_id: {\n                    _in: $onchainTechCommitteeProposalIds\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_tech_committee_proposal_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_tech_committee_proposal_id\n                onchain_tech_committee_proposal(where: {}) {\n                    id\n                    status(last: 1) {\n                        id\n                        status\n                    }\n                    preimage {\n                        id\n                        method\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n    ${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Tracker/TechCommitteeProposals/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "($pledgeId: ID!)", "content": "{\n    pledge(id: $pledgeId) {\n      id\n      package {\n        name\n      }\n      options {\n        templateId\n        amount\n        optionGroup\n        periods\n      }\n      total\n      donation\n      reason\n      user {\n        firstName\n        lastName\n        email\n      }\n      shippingAddress {\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/ReceivePayment.js", "repo": "republik_plattform"}}, {"type": "query", "name": "($itemClassId: ID, $currentPage: Int, $pageSize: Int)", "content": "{\n        items (\n          itemClassId : $itemClassId,\n          currentPage: $currentPage,\n          pageSize: $pageSize,\n        ) {\n          list {\n            code\n            name\n            imageUrl\n            price\n            originalPrice\n            memberPrice\n          }\n          pagination {\n            pageSize\n            total\n            current\n          }\n        }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/itemLists/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "query", "name": "GetClientData($id: ID)", "content": "{\n          clientEntity(id: $id) @client(always: true) {\n            id\n            title\n            titleLength @client(always: true)\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteNoteComment($id: UUID!)", "content": "{\n    deleteOwnNoteComment(input: { _id: $id }) {\n      noteComment {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "searchUsers($text: String!)", "content": "{\n          users(limit: 20, searchTerm: $text) {\n            ${PROFILE_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "DeleteComment($id: uuid!)", "content": "{\n  delete_comments(where: {id: {_eq: $id}}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "NewTeam($sport: String!, $name: String!)", "content": "{\n        newTeam(sport: $sport, name: $name)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "($tool_id: ID!)", "content": "{\n    getTool(tool_id: $tool_id) {\n      id\n      brand {\n        id\n        name\n      }\n      type {\n        id\n        name\n      }\n      year\n      status\n      model_number\n      serial_number\n      purchased_from {\n        id\n        name\n      }\n      date_purchased\n      price\n      photo\n      tagged\n      owner {\n        ... on Location {\n          id\n          name\n          type\n        }\n        ... on User {\n          id\n          first_name\n          last_name\n          email\n          phone_number\n          type\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "mutation", "name": "DeleteComment($id: uuid!)", "content": "{\n  delete_comments(where: {id: {_eq: $id}}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "($manager: ID!, $timestamp: Int)", "content": "{\n    manager(id: $manager) {\n      withdraws: volumes(\n        where: { period: 86400, type: \"exit\", timestamp_gt: $timestamp }\n      ) {\n        volume_usd\n        timestamp\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/Manage/Overview/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "fiatPriceData($currency: String!, $fiat: String!)", "content": "{\n  fiatPriceData(currency: $currency, fiat: $fiat) {\n    price\n    lastDayChange\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "mutation", "name": "deleteSecret($namespace: String!, $name: String!)", "content": "{\n    deleteSecret(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "ChooseSpecialist($input: ChooseSpecialistInput!)", "content": "{\n    chooseSpecialist(input: $input) {\n      result {\n        id\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}}, {"type": "mutation", "name": "ResetPassword($data: ResetPasswordInput!)", "content": "{\n    resetPassword(data: $data)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "SwapToToken($from: String!, $token: String!, $tokenValue: String!)", "content": "{\n    swapToToken(from: $from, token: $token, tokenValue: $tokenValue) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SwapToToken.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "UpdateOptions($input: StoreOptionsInput, $updateStoreOptionsId: ID!)", "content": "{\n  updateStoreOptions(input: $input, id: $updateStoreOptionsId) {\n    id\n    slider\n    slider_image\n    bestProducts\n    ourBrands\n    whatsapp\n    primaryColor\n    bgColor\n    storeId\n    popup\n    popupImage\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "mutation", "name": "($teamId: Int!, $members: [Int!]!)", "content": "{\n    getOrCreateChannel(teamId: $teamId, members: $members) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/components/DirectMessageModal.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "mutation", "name": "CreateWallet($role: String, $name: String)", "content": "{\n    createWallet(role: $role, name: $name) {\n      ...balanceFields\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "newAlbum($input: AlbumInput!)", "content": "{\n    newAlbum(input: $input) {\n      AlbumName\n      Artist\n    }\n  }", "metadata": {"commit_hash": "b51fb08011eb7f9872aff7c5266f46d15eec0047", "file": "s3-react-app/src/components/Table/NewAlbum.tsx", "repo": "sudopla_react-cognito-appsync"}}, {"type": "query", "name": "GetContactLocations($id: ID!)", "content": "{\n  contact(id: $id) {\n    locations {\n      ...LocationBaseDetails\n      rawAddress\n    }\n  }\n}\n    ${LocationBaseDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "query", "name": "posts($tag: String)", "content": "{\n    posts(tag: $tag) {\n      ...postDataFragment\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ArchiveContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "query", "name": "searchPlugin", "content": "{\n        search @pdbPlugin @wrongplugin(query: \"bob\", fields: [\"name\"]) {\n          rows {\n            id\n            score\n          }\n          total_rows\n        }\n      }", "metadata": {"commit_hash": "0984105b45bada32b8c0b0ac70a6847570781221", "file": "src/resolvers/queries/plugin/plugin.spec.ts", "repo": "mattjennings_apollo-link-pouch"}}, {"type": "mutation", "name": "UpdateRiderLocation($latitude:String!,$longitude:String!)", "content": "{\nupdateRiderLocation(latitude:$latitude,longitude:$longitude){\n  _id\n}\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/utilities/location.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "getProposals($first: Int!, $skip: Int!, $state: String!)", "content": "{\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "74922f49ceb05f6fc38a0a785d33676c737f67a6", "file": "teams/18-Avault/src/avault-shiden-web/src/state/voting/helpers.ts", "repo": "parity-asia_hackathon-2022-summer"}}, {"type": "mutation", "name": "changeName($newName: String!)", "content": "{\n  changeName(newName: $newName)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "query", "name": "PageMetricQuery(\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)", "content": "{\n\t\tpage(\n\t\t\tchannelId: $channelId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\t${metricName} {\n\t\t\t\t...HistogramFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${METRIC_HISTOGRAM_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/components/metric-card/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "downloadProject($id: Int!)", "content": "{\n  downloadProject(serviceId:$id){\n    data\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}}, {"type": "query", "name": "transactions($txAmount: Int!)", "content": "{\n    mints(first: $txAmount, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: $txAmount, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: $txAmount, orderBy: timestamp, orderDirection: desc) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}}, {"type": "mutation", "name": "(\n    $unsavedSquareCardID: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    removeOneUnsavedSquareCardIDs(\n      unsavedSquareCardID: $unsavedSquareCardID\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      unsavedSquareCardIDs\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/removeOneUnsavedSquareCardIDsMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "query", "name": "Votes($id: String)", "content": "{\n    votes(first: 1000, where: { proposal: $id }) {\n      id\n      voter\n      created\n      choice\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/snapshot-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "userFindById($id: ID!)", "content": "{\n      userFindById(id: $id) {\n        ...userFullFields\n      }\n    }\n    ${USER_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "CreateGuestbookEntry($input: GuestbookEntryInput!)", "content": "{\n      createGuestbookEntry(data: $input) {\n        _id\n        _ts\n        name\n        message\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-fauna/lib/fauna.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Coupons", "content": "{\n        coupons {\n          _id\n          code\n          discount\n          enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "GetPropertyByIdQuery ($propertyId: ID!, $organizationId: ID)", "content": "{\n        objs: allProperties(where: {id: $propertyId, organization: { id: $organizationId }}) {\n            id\n            address\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}}, {"type": "query", "name": "($manager: ID!, $timestamp: Int)", "content": "{\n    manager(id: $manager) {\n      total_value_locked(\n        where: { base: \"usd\", timestamp_gt: $timestamp }\n        orderBy: timestamp\n        orderDirection: asc\n        first: 1000\n      ) {\n        close\n        timestamp\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/Manage/Overview/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "getExpandE($id: ID!, $class: String!, $io: String!, $rid: String!, $page: Int = 1, $size: Int = 20)", "content": "{\n    expand_e(id: $id, class: $class, io: $io, rid: $rid, page: $page, size: $size) {\n      id\n      class\n      color\n      name\n      alias\n      properties {\n        n\n        v\n      }\n      inV {\n        id\n        class\n        color\n        name\n        expand\n        analysis\n        alias\n        properties {\n          n\n          v\n        }\n      }\n      outV {\n        id\n        class\n        color\n        name\n        expand\n        analysis\n        alias\n        properties {\n          n\n          v\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c507be725bcade8c618ec274193badbc04909dcb", "file": "studio/webui/src/components/G6SearchGraph/G6Graph/InAndOut/gql.js", "repo": "AISHU-Technology_kweaver"}}, {"type": "query", "name": "LatestTipPosts($postType: Int!, $postTopic: Int!, $limit: Int! = 5 )", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            topic: {\n                id: {\n                    _eq: $postTopic\n                }\n            },\n            onchain_link: {\n                onchain_tip_id: {\n                    _is_null: false\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_tip_id\n                onchain_tip(where: {NOT: {tipStatus_some: {OR: [{status: \"TipClosed\"}, {status: \"TipClosing\"}, {status: \"TipRetracted\"}]}}}) {\n                    id\n                    reason\n                    tipStatus(last: 1) {\n                        id\n                        status\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/OnChain/Tips/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "EditCategory( $_id:String,$title:String!,$description:String!,$img_menu:String)", "content": "{\n        editCategory(category:{_id:$_id,title:$title,description:$description,img_menu:$img_menu}){_id}\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "sellingPlanGroupDelete($id: ID!)", "content": "{\n        sellingPlanGroupDelete(id: $id) {\n            deletedSellingPlanGroupId\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "components/SubscriptionsTab.tsx", "repo": "mr-perseus_permaculture"}}, {"type": "query", "name": "users", "content": "{\n    users {\n      id\n      firstname\n      lastname\n      email\n      roles {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "PlaceOrder($orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$address:AddressInput!)", "content": "{\n  placeOrder(orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,address:$address) {\n    _id\n    order_id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    user {\n      _id\n      phone\n      email\n    }\n    rider{\n      _id\n    }\n    payment_status\n    payment_method\n    paid_amount\n    order_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Cart/Cart.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "($product: productStore)", "content": "{\n    storeProduct(product: $product) {\n      id\n      name\n      category\n      description\n      price\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REPO/APRESS/pro-react-16/08_-_SportsStore_-_Auth_and_Deployment/sportsstore/src/admin/clientMutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "TypeInformation($id: Int!)", "content": "{\n        information: typeByTypeID(id: $id) {\n            id\n            name\n            group {\n                id\n                name\n                category {\n                    id\n                    name\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "009b5eae048747488ab78334a7cb9f92e1ad888f", "file": "src/util/queries/information.js", "repo": "eveisesi_neo-ui"}}, {"type": "mutation", "name": "applyCoupon($code: String!)", "content": "{\n    applyCoupon(code: $code) {\n      id\n      code\n      discountInPercent\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/features/carts/fixed-cart.tsx", "repo": "mdhafiz_PickBazar"}}, {"type": "mutation", "name": "newAlbum($input: AlbumInput!)", "content": "{\n    newAlbum(input: $input) {\n      AlbumName\n      Artist\n    }\n  }", "metadata": {"commit_hash": "b51fb08011eb7f9872aff7c5266f46d15eec0047", "file": "s3-react-app/src/components/Table/NewAlbum.tsx", "repo": "sudopla_react-cognito-appsync"}}, {"type": "mutation", "name": "SAVE_APPLICATION($application: ApplicationInput!)", "content": "{\n        saveApplication(application: $application) {\n            ...DetailsApplication\n        }\n    }\n    ${DetailsApplicationFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "getCommentEmbed($id: ID!)", "content": "{\n    embed: comment(id: $id) {\n      __typename\n      id\n      text\n      tags\n      createdAt\n      updatedAt\n      parentIds\n      discussion {\n        id\n        title\n        path\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/modules/embed/index.js", "repo": "orbiting_publikator-frontend"}}, {"type": "query", "name": "GetContactLocations($id: ID!)", "content": "{\n  contact(id: $id) {\n    locations {\n      ...LocationBaseDetails\n      rawAddress\n    }\n  }\n}\n    ${LocationBaseDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "EditFood($foodInput:FoodInput!)", "content": "{\n        editFood(\n            foodInput:$foodInput\n        ){\n          _id\n          title\n          img_url\n          description\n          stock\n          tag\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons{\n              _id\n              title\n              description\n              quantity_minimum\n              quantity_maximum\n              options{\n                _id\n                title\n                price\n              }\n            }\n          }\n          category{\n            _id\n            title\n        }\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Food/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "getLiferayExperienceCloudEnvironments($filter: String)", "content": "{\n\t\tc {\n\t\t\tliferayExperienceCloudEnvironments(filter: $filter) {\n\t\t\t\titems {\n\t\t\t\t\tliferayExperienceCloudEnvironmentId\n\t\t\t\t\tprojectId\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "CommentReactions ($commentId: uuid!)", "content": "{\n        comment_reactions(where: {comment_id: {_eq: $commentId}}) {\n            ...commentReactionFields\n        }\n    }\n    ${commentReactionFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "editUserPreferences($username: String!, $inappropiateLanguage: Boolean!, $userToken: String!)", "content": "{\n            editUserPreferences(username: $username, inappropiateLanguage: $inappropiateLanguage, userToken: $userToken){\n                userPreferences{\n                    inappropiateLanguage\n                }   \n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "query", "name": "QUERY_GET_CART", "content": "{\n    cart {\n      id\n      cartItems {\n        id\n        title\n        description\n        handle\n        categoryHandle\n        quantityAvailable\n        quantity\n        image\n        price\n        note\n      }\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/checkout/queries/QUERY_GET_CART.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "unsubscribe($id: String!, $artistID: String!)", "content": "{\n    unsubscribeEvent(id: $id, artistID: $artistID) {\n      id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n        mimified\n      }\n      photo {\n        mimified\n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/components/organisms/subscribe-button/subscribeButton.mutations.js", "repo": "midianinja_som-web"}}, {"type": "query", "name": "GetThread($offset: Int, $limit: Int)", "content": "{\n        thread {\n          tid\n          comments(offset: $offset, limit: $limit) {\n            id\n            text\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/cache.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "RemoveTablePermission($tableUri: String!, $userName: String!)", "content": "{\n      removeTablePermission(tableUri: $tableUri, userName: $userName)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/removeTablePermission.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateTaskChecklistLocation($taskChecklistID: UUID!, $position: Float!)", "content": "{\n    updateTaskChecklistLocation(input: { taskChecklistID: $taskChecklistID, position: $position }) {\n      checklist {\n        id\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistLocation.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "(\n    $squareCustomerId: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  )", "content": "{\n    updateClientSquareID(\n      squareCustomerId: $squareCustomerId\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      squareCustomerId\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/mutations/updateClientSquareIDMutation.js", "repo": "HappyDream0317_Microservices-GrowLabs"}}, {"type": "mutation", "name": "($description: String!, $title: String!)", "content": "{\n    createListing(description: $description, title: $title) {\n      id\n    }\n  }", "metadata": {"commit_hash": "29a44a12529919aaab0fdc48efcb8b652bf28ce4", "file": "classifieds-app/src/components/Root/Listings/AddListing/AddListing.js", "repo": "nizar787_mircroservice-app-front-back-build-deploy-docker"}}, {"type": "mutation", "name": "Signup($data: RegisterInput!)", "content": "{\n    signup(data: $data) {\n      code\n      token\n      message\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "delete_todo ($todoId: Int)", "content": "{\n    delete_todo(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "hasura_sample-apps"}}, {"type": "query", "name": "Orders", "content": "{\n    restaurantOrders{\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        details\n        label\n      }\n      items{\n        _id\n        title\n        description\n        image\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          description\n          title\n          quantityMinimum\n          quantityMaximum\n        }\n        specialInstructions\n        isActive\n        createdAt\n        updatedAt\n      }\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      status\n      paymentStatus\n      reason\n      isActive\n      createdAt\n      orderDate\n      deliveryCharges\n      isPickedUp\n      preparationTime\n      acceptedAt\n      isRinged\n      rider{\n        _id\n        name\n        username\n        available\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/context/restaurant.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "($postId: ID!)", "content": "{\n    createPostVote (input: { post: $postId, value: POSITIVE_1 }) {\n      postVote {\n        id\n        value\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/PostForm.tsx", "repo": "marian2js_finsharing"}}, {"type": "query", "name": "getAuthSettings($userId: String)", "content": "{\n    user(slug: $userId) {\n      id\n      ...FirstFactors\n    }\n  }\n  ${firstFactorFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/AuthSettings.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "DeleteLabelDefinition($key: String!)", "content": "{\n    deleteLabelDefinition(key: $key) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/MetadataDefinitions/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "($namespace: String!, $application: String!)", "content": "{\n    enableApplication(\n      namespace: $namespace\n      application: $application\n      allServices: true\n    ) {\n      namespace\n      application\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "search($queryString: String!, $type: SearchType!)", "content": "{\n    search(queryString: $queryString, type: $type) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on Community {\n              ...communityInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "admin/src/api/queries.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "deleteOwnSubmission($submissionId: String!)", "content": "{\n    deleteOwnSubmission(input: { submissionId: $submissionId }) {\n      string\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "GetTransaction($customId: String!)", "content": "{\n      txFindByCustomId(customId: $customId) {\n        fromAddr\n        toAddr\n        amount\n        receipt {\n          event_logs {\n            address\n            _eventname\n            params {\n              vname\n              type\n              value\n            }\n          }\n          transitions {\n            accepted\n            addr\n            depth\n            msg {\n              _tag\n              _amount\n              _recipient\n              params {\n                vname\n                type\n                value\n              }\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "24af70d737f1bd2764e1bbb0198f9d57b7fa85c7", "file": "src/components/DetailsPages/TxnDetailsPage/TransactionFlowNew.tsx", "repo": "Zilliqa_devex"}}, {"type": "mutation", "name": "(\n    $title: String!\n    $notes: String\n    $staff: String!\n    $date: String!\n    $startTime: String!\n    $endTime: String!\n    $duration: Int!\n    $allDay: Boolean\n    $blockTime: Boolean\n  )", "content": "{\n    addPersonalEvent(\n      title: $title\n      notes: $notes\n      staff: $staff\n      date: $date\n      startTime: $startTime\n      endTime: $endTime\n      duration: $duration\n      allDay: $allDay\n      blockTime: $blockTime\n    ) {\n      title\n      notes\n      staff\n      date\n      startTime\n      endTime\n      duration\n      allDay\n      blockTime\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addPersonalEventMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "SignOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "topNavbar", "content": "{\n  notifications {\n    createdAt\n    read\n    id\n    entity {\n      id\n      type\n      name\n    }\n    actor {\n      id\n      type\n      name\n    }\n    actionType\n  }\n  me {\n    user {\n      id\n      fullName\n      profileIcon {\n        initials\n        bgColor\n        url\n      }\n    }\n    teamRoles {\n      teamID\n      roleCode\n    }\n    projectRoles {\n      projectID\n      roleCode\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "updateUser($firstName: String!, $lastName: String!)", "content": "{\n    updateUser(firstName: $firstName, lastName: $lastName) {\n      id\n      firstName\n      lastName\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/username/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "hideNotification($id: ID!)", "content": "{\n        hideNotification(id: $id)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlHideNotification.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "getSections", "content": "{\n    sections: documents(template: \"section\") {\n      nodes {\n        id\n        meta {\n          title\n          path\n          color\n          kind\n        }\n        formats: linkedDocuments {\n          nodes {\n            id\n            meta {\n              title\n              path\n              color\n              kind\n            }\n            linkedDocuments(feed: true, first: 0) {\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Sections/All.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "CREATE_PRODUCT_MUTATION(\n    # Which variables are getting passed in? And What types are they\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  )", "content": "{\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/25/CreateProduct.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "subscription", "name": "itemUpdated", "content": "{\n    itemUpdated {\n      id\n      title\n    }\n}", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "query", "name": "Organisations", "content": "{\n    admin {\n      organisations {\n        ...Organisation\n      }\n    }\n  }\n  ${OrganisationFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/platform-admin/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "customerAccessTokenDelete($customerAccessToken: String!)", "content": "{\n    customerAccessTokenDelete(customerAccessToken: $customerAccessToken) {\n        userErrors {\n            field\n            message\n        }\n        deletedAccessToken\n        deletedCustomerAccessTokenId\n    }\n}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/account/logout.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "notesQuery(\n            $where: Note_filter!\n        )", "content": "{\n            notes(\n                where: $where\n            ) {\n                notes {\n                    ${requestedFields}\n                }\n                error {\n                    type\n                    key\n                    message\n                    response\n                }\n            }\n        }", "metadata": {"commit_hash": "a47d3d9ea38cd1363ede730998145da663df6091", "file": "packages/extension/src/background/services/GraphQLService/Queries/notesQuery.js", "repo": "AztecProtocol_aztec-v1"}}, {"type": "query", "name": "getCurrentUser", "content": "{\n      currentUser {\n        id\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/CreateOrganization.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "query", "name": "user", "content": "{\n    user(id: \"1\") {\n      ...usernameFragment\n    }\n  }\n\n  ${usernameFragment}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/presets/near-operation-file/tests/fixtures/issue-6546-queries.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "UpdateProducts($id: ID, $product: _inputUpdateProduct)", "content": "{\n              product: updateProduct(\n                where: { id: { eq: $id } }\n                input: $product\n              ) {\n               id\n               description\n               price\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}}, {"type": "mutation", "name": "Decrement($amount: Int = 1)", "content": "{\n        decrement(amount: $amount) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Messages($id: ID!)", "content": "{\n    messages(id: $id) {\n      author {\n        id\n        firstName\n        lastName\n        profile {\n          img\n        }\n      }\n      recipientUserId\n      body\n    }       \n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/Messages/query.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "($outcomeSetID: String!, $categoryID: String!)", "content": "{\n        deleteCategory: DeleteCategory(\n          outcomeSetID: $outcomeSetID\n          categoryID: $categoryID\n        ) {\n          ...defaultOutcomeSet\n        }\n      }\n      ${osFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/categories/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "($sendEmailEmail: String!)", "content": "{\n    sendEmail(email: $sendEmailEmail) {\n      error {\n        message\n        name\n      }\n      message\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/requetsResetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "NavigationSetting", "content": "{\n\t\t\t\tsetting(where: { name: \"navigation\" }) {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/src/components/layout/layout.js", "repo": "WestpacGEL_GEL"}}, {"type": "query", "name": "myBlogs($id: ID, $skip: Int, $limit: Int, $hasNextBlogsSkip: Int)", "content": "{\n        myBlogs: blogs(\n            where: { OR: [{ creator: { id: $id } }, { authors: { id: $id } }] }\n            options: { limit: $limit, skip: $skip, sort: createdAt_DESC }\n        ) {\n            id\n            name\n            creator {\n                id\n                email\n            }\n            createdAt\n        }\n        hasNextBlogs: blogs(\n            where: { OR: [{ creator: { id: $id } }, { authors: { id: $id } }] }\n            options: { limit: 1, skip: $hasNextBlogsSkip, sort: createdAt_DESC }\n        ) {\n            id\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "mutation", "name": "LoginMutation($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      errors {\n        path\n        message\n      }\n      sessionId\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/LoginController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "createGroupalGroup($username: String!, $groupName: String!, $users: [String!]!, $userToken: String!)", "content": "{\n            createGroupalGroup(username: $username, groupName: $groupName, users: $users, userToken: $userToken) {\n                group{\n                    id\n                    name\n                    individual\n                    users {\n                        username\n                        profilePicture\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "UpdateTodo($input: UpdateTodoInput!)", "content": "{\n      updateTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "Tips", "content": "{\n    tips {\n      _id\n      tipVariations\n      enabled\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Cart/Cart.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "pairs", "content": "{\n    pairs(first: 200, orderBy: reserveUSD, orderDirection: desc) {\n      id\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}}, {"type": "mutation", "name": "userLocationGetToken", "content": "{\n          userLocationGetToken {\n            successful\n            messages {\n              message\n            }\n            result\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "UpdateStudent($input: UpdateStudentInput!)", "content": "{\n      updateStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "signOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Auth/SignOut.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "deleteRef($deleteRefInput: DeleteRefInput!)", "content": "{\n    ${deleteRefMutationPart}\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "ForumCategories", "content": "{\n    forumCategories {\n      slug\n      title\n      subTitle\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($filter: PagedFilter!)", "content": "{\n    pagedCommunities(filter: $filter) {\n      entries {\n        id\n        title\n        raw\n        logo\n      }\n      pageNumber\n      pageSize\n      totalCount\n      totalPages\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/TagEditor/schema.js", "repo": "coderplanets_coderplanets_admin"}}, {"type": "mutation", "name": "updateEmail($id: ID!, $email: String!)", "content": "{\n    updateEmail(userId: $id, email: $email) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Email/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "query", "name": "getBookings", "content": "{\n        bookings {\n            id\n            bookCheckInTime\n            bookCheckOutTime\n            realCheckInTime\n            realCheckOutTime\n            status\n            patrons {\n                id\n                name\n            }\n            bill {\n                id\n            }\n            room {\n                id\n                name\n                isClean\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/booking.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "PollVotes($pollId: Int!)", "content": "{\n  poll_votes(where: {poll_id: {_eq: $pollId}}) {\n    ...pollVotesFields\n  }\n}\n    ${PollVotesFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "CreateMember($input: CreateMemberInput!)", "content": "{\n      createMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "LoggedInUserQuery", "content": "{\n    loggedInUser {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-email-and-apollo/src/components/App.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "posts($tag: String)", "content": "{\n    posts(tag: $tag) {\n      ...postDataFragment\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ArchiveContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "query", "name": "listCandidates($eventId: ID!)", "content": "{\n    listCandidates(filter: { eventId: { eq: $eventId }, candidateType: { eq: UNDECIDED } }) {\n      items {\n        id\n        candidateType\n        attendee {\n          id\n          fullName\n          title\n          bio\n          company\n          pronouns\n          interests {\n            items {\n              id\n            }\n          }\n          ownIdentifiers {\n            items {\n              id\n            }\n          }\n          desiredIdentifiers {\n            items {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-candidates-by-event.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "subscription", "name": "newNotification($receiverId: String!, $tenant: String!)", "content": "{\n    newNotification(receiverId: $receiverId, tenant: $tenant) {\n      id\n      type\n      createdAt\n      isRead\n      message {\n        id\n        body\n        createdAt\n        author {\n          id\n          username\n        }\n      }\n      receiver {\n        id\n        username\n      }\n      sender {\n        id\n        username\n        isOnline\n      }\n      channel {\n        url\n        id\n      }\n      community {\n        url\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Notification.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "AddCar", "content": "{\n          addCar {\n            id\n            make\n            model\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "($offset: Int, $limit: Int, $order: String, $namespace: String)", "content": "{\n  categories(offset: $offset, limit: $limit, order: $order, namespace: $namespace) {\n    id,\n    name,\n    createdAt\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/content-autocomplete/queries.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "closePullRequestAndDeleteBranch(\n    $closePullRequestInput: ClosePullRequestInput!\n    $deleteRefInput: DeleteRefInput!\n  )", "content": "{\n    ${closePullRequestMutationPart}\n    ${deleteRefMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "createTaskChecklist($taskID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskChecklist(input: {taskID: $taskID, name: $name, position: $position}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "ScheduleAddFormMutation($input: CreateScheduleInput!)", "content": "{\n    createSchedule(input: $input) {\n      schedule {\n        ...ScheduleFragment_schedule\n      }\n    }\n  }\n  ${ScheduleFragment}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/ScheduleAddFormMutation.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "Register($data: RegisterInput!)", "content": "{\n    register(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "query", "name": "users($first: Int!, $skip: Int)", "content": "{\n          users(first: $first, skip: $skip) {\n            id\n            filledOrdersMaker {\n              id\n            }\n            filledOrdersTaker {\n              id\n            }\n            filledOrdersFeeRecipient {\n              id\n            }\n          }\n        }", "metadata": {"commit_hash": "5853ea4e34d63a7422bdbc89e48cb8f217ad27a6", "file": "src/client.ts", "repo": "michaelhly_0x-exchange-events"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "ItemImportClientND(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    itemImportClientND(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_import_client_nd.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "query", "name": "getOrderItems($filter: String, $page: Int = 1, $pageSize: Int = 20)", "content": "{\n\t\torderItems(filter: $filter, page: $page, pageSize: $pageSize) {\n\t\t\titems {\n\t\t\t\texternalReferenceCode\n\t\t\t\tquantity\n\t\t\t\tcustomFields {\n\t\t\t\t\tname\n\t\t\t\t\tcustomValue {\n\t\t\t\t\t\tdata\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treducedCustomFields @client\n\t\t\t\toptions\n\t\t\t}\n\t\t\tlastPage\n\t\t\tpage\n\t\t\tpageSize\n\t\t\ttotalCount\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/order-items/queries/useGetOrderItems.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "categories", "content": "{\n      categories{\n          _id\n          title\n          description\n          img_menu\n    }}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "me", "content": "{\n          me {\n            id\n            username\n            roles\n          }\n        }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/app.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "query", "name": "FetchUsers", "content": "{\n    allUsers {\n      id\n      displayName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/NewStory.js", "repo": "vecnazmaga_place-management"}}, {"type": "query", "name": "getEnvironment(\n      $filter: OrganizationUserFilter\n      $environmentUri: String\n    )", "content": "{\n      getEnvironment(environmentUri: $environmentUri) {\n        environmentUri\n        userRoleInEnvironment\n        notMembers(filter: $filter) {\n          count\n          nodes {\n            userName\n            userRoleInEnvironment\n            created\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/listEnvironmentNotMembers.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "($id: Int!, $chatbot: InputChatbot!)", "content": "{\n  chatbot: editChatbot(id: $id, chatbot: $chatbot) {\n    id,\n    name,\n    description,\n    guid,\n    chatbotId\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/chatbot-configuration/pages/configure-chatbot.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "query", "name": "getNamesFromSubgraph($address: String!)", "content": "{\n    domains(first: 1000, where: { resolvedAddress: $address }) {\n      name\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "SaveCurrencyConfiguration($configurationInput:CurrencyConfigurationInput!)", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Configuration/Currency/Currency.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "($offset: Int, $limit: Int, $order: String, $type: String, $userId: String, $status: String)", "content": "{\n  counters {\n    rows: records {\n     count(type: $type, userId: $userId, status: $status)\n    }\n  }\n  rows: records(offset: $offset, limit: $limit, order: $order, type: $type, userId: $userId, status: $status) {\n    id,\n    createdAt,\n    title,\n    payload,\n    type,\n    status,\n    userId,\n    longitude,\n    latitude\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "src/components/user-records/pages/user-records.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "Decline($id: ID!, $reason: String!)", "content": "{\n    decline(id: $id, reason: $reason) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/test-message/documents.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "updateCarrierStatus($status: Boolean)", "content": "{\n    updateCarrierStatus(status: $status) \n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}}, {"type": "mutation", "name": "InsertLink($fromId: Int, $toId: Int, $type_id: Int)", "content": "{\n    insert_nodes(objects: { from_id: $fromId, to_id: $toId, type_id: $type_id }) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "query", "name": "UnAssignedOrders", "content": "{\n    unassignedOrders{\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          title\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/context/user.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "( \n  $id: Int!,\n  $title: String!, \n  $description: String!, \n  $code: String!, \n  $type: Int!,\n  $promoValue: Float!, \n  $currency: String,\n  $expiryDate: String,\n  $isEnable: String\n)", "content": "{\n  updatePromoCode(\n      id: $id,\n      title: $title,\n      description: $description,\n      code: $code,\n      type: $type,\n      promoValue: $promoValue,\n      currency: $currency,\n      expiryDate: $expiryDate,\n      isEnable: $isEnable\n  ) {\n      status\n      errorMessage\n  }\n}", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/PromoCode/addPromoCode.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          name\n          # missing field: description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "deleteInvitedUserAccount($invitedUserID: UUID!)", "content": "{\n  deleteInvitedUserAccount(input: {invitedUserID: $invitedUserID}) {\n    invitedUser {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "UpdatePlayerName($id: Int!, $name: String!)", "content": "{\n    updatePlayerName(id: $id, name: $name)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "uploadImage($input: UploadImageInput!)", "content": "{\n    uploadImage(input: $input)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/uploadImage.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "($outcomeSetID: String!, $tags: [String])", "content": "{\n    generateSummon: NewMeetingSummon(outcomeSetID:$outcomeSetID, daysToComplete: ${defaultRemoteMeetingLimit}, tags: $tags)\n  }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/summon/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "SelectAddress($id:String!)", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/CartAddress/CartAddress.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "ticketAnalyticsReport ($data: TicketAnalyticsReportInput!)", "content": "{\n        result: ticketAnalyticsReport(data: $data) { groups { count status property dayGroup categoryClassifier executor assignee } ticketLabels { color label } }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/analytics/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteUser(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/users/hooks/users.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "query", "name": "GetJordanIndustryData($industryCode: Int!)", "content": "{\n    jordanIndustry(industryCode: $industryCode) {\n      industryCode\n      title\n      description\n      keywords\n      factors {\n        edges {\n          node {\n            rcaJordan\n            rcaPeers\n            waterIntensity\n            electricityIntensity\n            availabilityInputs\n            femaleEmployment\n            highSkillEmployment\n            fdiWorld\n            fdiRegion\n            exportPropensity\n          }\n        }\n      }\n      nationality {\n        edges {\n          node {\n            nationality\n            men\n            women\n            meanwage\n            medianwage\n          }\n        }\n      }\n      schooling {\n        edges {\n          node {\n            schooling\n            men\n            women\n          }\n        }\n      }\n      occupation {\n        edges {\n          node {\n            occupation\n            men\n            women\n          }\n        }\n      }\n      mapLocation {\n        edges {\n          node {\n            govCode\n            governorate\n            shareState\n            shareCountry\n          }\n        }\n      }\n      wageHistogram {\n        edges {\n          node {\n            facet\n            range0100\n            range100200\n            range200300\n            range300400\n            range400500\n            range500600\n            range600Plus\n          }\n        }\n      }\n      overTime {\n        edges {\n          node {\n            visualization\n            variable\n            years20042006\n            years20072009\n            years20102012\n            years20132015\n            years20162018\n          }\n        }\n      }\n      text {\n        edges {\n          node {\n            occupation\n            demographic\n            location\n            avgWage\n            wageHist\n            scatter\n            schooling\n            percentFemale\n            percentHighSkill\n            female\n            highSkill\n          }\n        }\n      }\n      control {\n        edges {\n          node {\n            labor\n            women\n            fdi\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "caa856ce162d7acc90e14e7eb883e81840218fd2", "file": "src/pages/jordanTool/fetchData.ts", "repo": "cid-harvard_growth-lab-app-front-end"}}, {"type": "mutation", "name": "($user_id: Int, $board_id: uuid!)", "content": "{\n      update_board (\n        _set: {\n          user_2_id: $user_id\n        },\n        where: {\n          _and: {\n            id: {\n              _eq: $board_id\n            },\n            user_2_id: {\n              _is_null: true\n            },\n            user_1_id: {\n              _neq: $user_id\n            }\n          }\n        }\n      ) {\n        affected_rows\n        returning {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/tic-tac-toe-react/client/src/utils.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "query", "name": "MyFeed", "content": "{\n          feed {\n            ...Item\n          }\n          allFeeds: feed {\n            ...Item\n          }\n        }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/plugins/typescript/urql/tests/urql.spec.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "changePassword($username: String!, $newPassword: String!, $oldPassword: String!, $userToken: String!)", "content": "{\n            changeUserPassword(username: $username, newPassword: $newPassword, oldPassword: $oldPassword, userToken: $userToken){\n                user{\n                    username\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "createUser", "content": "{\n      createUser(\n        email: \"${email}\"\n      ) {\n        id\n        email\n        emailVerified\n      }\n    }", "metadata": {"commit_hash": "1b0cf980a081ac78ce310ad7edeef6d7fb8d29bb", "file": "src/components/Subscription.js", "repo": "rabbotio_minemark"}}, {"type": "mutation", "name": "CreateVolunteer(\n    $firstName: String!\n    $lastName: String\n    $neighborhood: String\n    $city: String!\n    $state: String!\n    $country: String!\n    $latitude: Float!\n    $longitude: Float!\n    $address: String!\n    $email: String!\n    $providerId: ID!\n    $requests: [String!]!\n    $description: String\n    $availabilities: [String!]!\n    $phone: String\n    $social: String\n    $over18: Boolean!\n  )", "content": "{\n    createVolunteer(\n      input: {\n        firstName: $firstName\n        lastName: $lastName\n        neighborhood: $neighborhood\n        city: $city\n        state: $state\n        country: $country\n        latitude: $latitude\n        longitude: $longitude\n        address: $address\n        email: $email\n        providerId: $providerId\n        requests: $requests\n        description: $description\n        availabilities: $availabilities\n        phone: $phone\n        social: $social\n        over18: $over18\n      }\n    ) {\n      errors\n      volunteer {\n        id\n        firstName\n        responses {\n          provider {\n            id\n          }\n          requests\n          availabilities\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5e9ad0842300f9fd2c1d60fa00bf0311375e29bd", "file": "app/javascript/packs/pages/volunteer_signup/VolunteerStepper.jsx", "repo": "feedadoc_feedadoc"}}, {"type": "mutation", "name": "signIn($email: String!, $password: String!)", "content": "{\n    signIn(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/reto02/bookshop-frontend/src/page/Signin.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "query", "name": "NOOP", "content": "{\n        __typename\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/noopQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "CreateZone($zone:ZoneInput!)", "content": "{\n  createZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "fiatPriceData($currency: String!, $fiat: String!)", "content": "{\n  fiatPriceData(currency: $currency, fiat: $fiat) {\n    price\n    lastDayChange\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "mutation", "name": "createProposal($input: inputProposal!)", "content": "{\n    createProposal(input: $input) {\n      ...PROPOSAL_ATTRIBUTES\n    }\n  }\n  ${PROPOSAL_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/proposal.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "addAccountFlag($accountFlag: InputC_AccountFlag!)", "content": "{\n\t\tcreateAccountFlag(input: $accountFlag)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_AccountFlag\"\n\t\t\t\tpath: \"/c/accountflags\"\n\t\t\t) {\n\t\t\taccountKey\n\t\t\tname\n\t\t\tfinished\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "subscription", "name": "onRepoChange($repoId: ID!)", "content": "{\n    repoChange(repoId: $repoId) {\n      mutation\n      repo {\n        ...EditPageRepo\n      }\n      commit {\n        ...SimpleCommit\n      }\n    }\n  }\n  ${fragments.EditPageRepo}\n  ${fragments.SimpleCommit}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/VersionControl/index.js", "repo": "orbiting_publikator-frontend"}}, {"type": "query", "name": "Restaurant($id:String)", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Food/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SendMessage($to: String!, $content: String, $media: [MediaInput])", "content": "{\n    sendMessage(to: $to, content: $content, media: $media) {\n      success\n      error\n      conversation {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SendMessage.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "meses", "content": "{\n    meses {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/list/mes-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "editOption($optionInput:editOptionInput)", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Option/Option.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "annos", "content": "{\n    annos {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/list/anno-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "Odds($match_id: Int!)", "content": "{\n  match(id: $match_id) {\n    id\n    odds {\n      teams { wins losses percent }\n      teams_and_civilizations { wins losses percent }\n      civilizations { wins losses percent }\n      civilizations_and_map { wins losses percent }\n      teams_and_map { wins losses percent }\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Odds.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "query", "name": "ListDatasetsCreatedInEnvironment(\n      $filter: DatasetFilter\n      $environmentUri: String\n    )", "content": "{\n      listDatasetsCreatedInEnvironment(\n        environmentUri: $environmentUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          datasetUri\n          label\n          AwsAccountId\n          region\n          GlueDatabaseName\n          SamlAdminGroupName\n          name\n          S3BucketName\n          created\n          owner\n          stack {\n            status\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/listDatasetsCreatedInEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "people", "content": "{\n          allPeople {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/ssr/getDataFromTree.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "updateTaskName($taskID: UUID!, $name: String!)", "content": "{\n  updateTaskName(input: {taskID: $taskID, name: $name}) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "($qid: String!, $ben: String!)", "content": "{\n        exportBenMeetings: exportBenMeetings(qID: $qid, beneficiary: $ben)\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "addPostAndTreasurySpendProposalMutation($onchainTreasuryProposalId: Int!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_treasury_proposal_id: $onchainTreasuryProposalId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getCommunityChannels($id: ID)", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunityChannelConnection.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "upsertBrand($name: String!, $categoryId: ID!, $brandId: ID)", "content": "{\n    upsertBrand(name: $name, categoryId: $categoryId, brandId: $brandId) {\n      id\n      name\n      category {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "query", "name": "user", "content": "{\n    user(id: \"1\") {\n      ...usernameFragment\n    }\n  }\n\n  ${usernameFragment}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/presets/near-operation-file/tests/fixtures/issue-6546-queries.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "subscription", "name": "statusChanged($id: ID!)", "content": "{\n      onStatus(id: $id) ${presenceResult}\n    }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "presencedemo/src/graphql/operations.js", "repo": "aws-samples_aws-appsync-presence-api"}}, {"type": "mutation", "name": "updateVotes($id: Int!)", "content": "{\n    update_characters(where: {id: {_eq: $id}},\n      _inc: {votes: 1}) {\n        affected_rows\n    }\n  }", "metadata": {"commit_hash": "5bafb503f63b1dfc180e77f02d16b96d6503eb11", "file": "src/constants/graphql.js", "repo": "malgamves_GameOfCharts"}}, {"type": "query", "name": "getWidgetData ($data: TicketReportWidgetInput!)", "content": "{\n        result: ticketReportWidgetData(data: $data) { data { statusName, currentValue, growth, statusType } }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/analytics/gql.js", "repo": "open-condo-software_condo"}}, {"type": "query", "name": "Ladders($platform_id: String!, $ladder_ids: [Int])", "content": "{\n  meta_ladders(platform_id: $platform_id, ladder_ids: $ladder_ids) {\n    id\n    platform_id\n    name\n    ranks(limit: 25) {\n      rank\n      rating\n      streak\n      user {\n        id\n        name\n        person {\n          id\n          country\n          name\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Ladders.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "mutation", "name": "FinalizeOffer($offerID: String!, $from: String)", "content": "{\n    finalizeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "(\n    $morningCleanser: [MyRoutineFieldsInputType]\n    $morningToner: [MyRoutineFieldsInputType]\n    $morningSerum: [MyRoutineFieldsInputType]\n    $morningMoisturizer: [MyRoutineFieldsInputType]\n    $morningSPF: [MyRoutineFieldsInputType]\n    $morningRX: [MyRoutineFieldsInputType]\n    $morningEyeCream: [MyRoutineFieldsInputType]\n    $eveningOilCleanser: [MyRoutineFieldsInputType]\n    $eveningCleanser: [MyRoutineFieldsInputType]\n    $eveningExfoliator: [MyRoutineFieldsInputType]\n    $eveningTreatmentMask: [MyRoutineFieldsInputType]\n    $eveningToner: [MyRoutineFieldsInputType]\n    $eveningSerum: [MyRoutineFieldsInputType]\n    $eveningMoisturizer: [MyRoutineFieldsInputType]\n    $eveningNightMask: [MyRoutineFieldsInputType]\n    $eveningOil: [MyRoutineFieldsInputType]\n    $eveningSpotTreatment: [MyRoutineFieldsInputType]\n    $eveningRX: [MyRoutineFieldsInputType]\n    $eveningEyeCream: [MyRoutineFieldsInputType]\n  )", "content": "{\n    updateMyRoutine(\n      morningCleanser: $morningCleanser\n      morningToner: $morningToner\n      morningSerum: $morningSerum\n      morningMoisturizer: $morningMoisturizer\n      morningSPF: $morningSPF\n      morningRX: $morningRX\n      morningEyeCream: $morningEyeCream\n      eveningOilCleanser: $eveningOilCleanser\n      eveningCleanser: $eveningCleanser\n      eveningExfoliator: $eveningExfoliator\n      eveningTreatmentMask: $eveningTreatmentMask\n      eveningToner: $eveningToner\n      eveningSerum: $eveningSerum\n      eveningMoisturizer: $eveningMoisturizer\n      eveningNightMask: $eveningNightMask\n      eveningOil: $eveningOil\n      eveningSpotTreatment: $eveningSpotTreatment\n      eveningRX: $eveningRX\n      eveningEyeCream: $eveningEyeCream\n    ) {\n      morningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningSPF {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      morningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOilCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningCleanser {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningExfoliator {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningTreatmentMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningToner {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSerum {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningMoisturizer {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningNightMask {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningOil {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningSpotTreatment {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningRX {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n      eveningEyeCream {\n        _id\n        name\n        frequency\n        useNotes\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateMyRoutineMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "RemoveTwoFactorAuthSecret($email: String!, $token: String!)", "content": "{\n    removeTwoFactorAuthSecret(input: { email: $email, token: $token }) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "items", "content": "{\n        items {\n          ...ItemFragment\n          __typename\n        }\n      }\n\n      fragment ItemFragment on Item {\n        id\n        ... on ColorItem {\n          color\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/client.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "($signature: String!)", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "onCommentAdded($repoFullName: String!)", "content": "{\n    commentAdded(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.urql.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "pairs($skip: Int!)", "content": "{\n    pairs(first: 100, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}}, {"type": "mutation", "name": "toggleReaction($reaction: ReactionInput!)", "content": "{\n    toggleReaction(reaction: $reaction) {\n      ...messageInfo\n      __typename\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/reaction/toggleReaction.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "($data: BotAddInfo!)", "content": "{\n                    addBot(data: $data)\n                  }", "metadata": {"commit_hash": "89dd6d9be2c03695498196ef118e7054874db3fa", "file": "pages/addbot.tsx", "repo": "pikokr_uniquebots"}}, {"type": "subscription", "name": "SubscriptionOrder($id:String!)", "content": "{\n    subscriptionOrder(id:$id){\n        _id\n        orderStatus\n        rider{\n            _id\n        }\n        completionTime\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Orders/ActiveOrder/Card/ActiveOrder.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "changeAuthorName($id: ID!)", "content": "{\n          changeAuthorName(newName: \"Jack Smith\", id: $id) {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "updateOrganizationWebsite($input: OrganizationUpdateInput!)", "content": "{\n  organization_Update(input: $input) {\n    id\n    website\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "migrateResolver($name: String)", "content": "{\n    migrateResolver(name: $name)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "createPurchase($lines: [PurchaseLineInput!]!, $deliveryMethodId: Int!, $deliveryAddressId: Int)", "content": "{\n  purchase(\n    lines: $lines\n    deliveryMethodId: $deliveryMethodId\n    deliveryAddressId: $deliveryAddressId\n  ) {\n    id\n    buyerAddress\n    buyerProfile {\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n    sellerAddress\n    sellerProfile {\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n    purchaseId\n    lines {\n      id\n      amount\n      offer {\n        id\n        version\n        createdByAddress\n        createdByProfile {\n          id\n          circlesAddress\n          firstName\n          lastName\n          avatarUrl\n        }\n        pricePerUnit\n        title\n        description\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "($followId: ID!)", "content": "{\n      deleteMarketFollow (input: {id: $followId}) {\n        result\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/MarketHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "query", "name": "GroupDetailsScreenQuery($chatId: Int!)", "content": "{\n    chat(where:{id: {_eq: $chatId}}) {\n        ...chat\n      users {\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/GroupDetailsScreen/index.tsx", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeleteOption($id:String!,$restaurant:String!)", "content": "{\n        deleteOption(id:$id,restaurant:$restaurant){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Options.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "unsubscribe($id: String!, $artistID: String!)", "content": "{\n    unsubscribeEvent(id: $id, artistID: $artistID) {\n      id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n        mimified\n      }\n      photo {\n        mimified\n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event/event.mutations.js", "repo": "midianinja_som-web"}}, {"type": "query", "name": "PostQuery($id: ID!)", "content": "{\n    Post(id: $id) {\n      id\n      imageUrl\n      description\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/quickstart-with-apollo/src/components/DetailPage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "subscription", "name": "UserInfo($name: String)", "content": "{\n          user(name: $name) {\n            name\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "AddDice($did: String!, $name: String!, $userId: String!, $actionIds: [String]!, $coverImg: String)", "content": "{\n    addDice(did: $did, name: $name, userId: $userId, actionIds: $actionIds, coverImg: $coverImg) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "mutation", "name": "Logout($token: String!)", "content": "{\n    logout(token: $token)\n  }", "metadata": {"commit_hash": "5280d119af49c7634a832864d0ffc7c8e9f36e21", "file": "libs/schemas/src/lib/app/models/auth.model.ts", "repo": "Vrishtrix_fullstack-ts-boilerplate"}}, {"type": "mutation", "name": "SubmitOrder($dishes: [Order!]!)", "content": "{\n    order(dishes: $dishes) {\n      id\n      delivery\n      delivered\n      items {\n        id\n        name\n        price\n      }\n    }\n  }", "metadata": {"commit_hash": "b6d96035d668b9480ff20fb4a7df628fa97a9250", "file": "3_examples/react/src/apollo/mutations.js", "repo": "systek_graphql-workshop"}}, {"type": "query", "name": "pool($poolAddress: String!)", "content": "{\n    pool(id: $poolAddress) {\n      tick\n      token0 {\n        symbol\n        id\n        decimals\n      }\n      token1 {\n        symbol\n        id\n        decimals\n      }\n      feeTier\n      sqrtPrice\n      liquidity\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/pools/tickData.ts", "repo": "croco-finance_frontend-v3"}}, {"type": "mutation", "name": "UpdateTimings($id:String!,$openingTimes:[TimingsInput])", "content": "{\n  updateTimings(id:$id,\n    openingTimes:$openingTimes){\n    _id\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Timings.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "Research($match_id: Int!)", "content": "{\n  match(id: $match_id) {\n    id\n    team_size\n    duration_secs\n    players {\n      name\n      color_id\n      research {\n        name\n        started\n        finished\n        started_secs\n        finished_secs\n      }\n      timeseries {\n        timestamp_secs\n        roi\n        value_spent_research\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Research.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "mutation", "name": "ScheduleJob($repoSlug: String!, $branchName: String!, $commitSha: String!)", "content": "{\n    scheduleJob(repoSlug: $repoSlug, branchName: $branchName, commitSha: $commitSha) {\n      id\n    }\n  }", "metadata": {"commit_hash": "51ed43ee1f30cf3fbf441f2623f1bf6322c0486b", "file": "web/src/graphql/mutations/index.js", "repo": "spawnfest_elixirbench"}}, {"type": "query", "name": "getMaximumCommitmentAge", "content": "{\n    getMaximumCommitmentAge\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "getText($name: String, $key: String)", "content": "{\n    getText(name: $name, key: $key)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "enableDataSubscriptions(\n      $environmentUri: String!\n      $input: EnableDataSubscriptionsInput\n    )", "content": "{\n      enableDataSubscriptions(environmentUri: $environmentUri, input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/enableDataSubscriptions.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "Editions(\n      $", "content": "{EDITIONS_FILTERS}\n    ) {\n      editions(\n        where: {\n          active: true,\n          offersOnly: false,\n          remainingSupply_gt: 0,\n          priceInWei_gt: 0,\n          ${extraWhere.join('\\n')}\n        }\n        ${EDITIONS_ARGUMENTS}\n      ) {\n        ${isCount ? 'id' : '...editionFragment'}\n      }\n    }\n    ${isCount ? '' : editionFragment()}", "metadata": {"commit_hash": "c0e50bd262fa172e7b6384a02757580bdc5f6689", "file": "webapp/src/modules/vendor/known_origin/edition/api.ts", "repo": "dev-captain_land-marketplace-erc"}}, {"type": "mutation", "name": "deleteTag($tagId: ID!)", "content": "{\n        deleteTag(tagId: $tagId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteTag.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "($password: String)", "content": "{\n    updateAdminPassword(password: $password) {\n      _id\n      permanentPasswordSet\n      firstName\n      lastName\n      email\n      phoneNumber\n      password\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/updateAdminPasswordMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}}, {"type": "mutation", "name": "($id: Int!, $device: NewDevice!)", "content": "{\n  editDevice(id: $id, device: $device) {\n    id,\n    name,\n    payload,\n    createdAt,\n    updatedAt,\n    status,\n    lat,\n    lon,\n    jsonSchema,\n    version,\n    lastUpdate,\n    snapshot\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "src/components/edit-device/index.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "query", "name": "($id: ID!)", "content": "{\n      getPostSecretFieldIAM(id: $id) {\n        id\n        title\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/MultiAuthModelAuthTransformer.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "pairDayDatas($pairAddress: Bytes!, $date: Int!)", "content": "{\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      totalSupply\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}}, {"type": "query", "name": "OrderCount($restaurant:String!)", "content": "{\n  orderCount(restaurant:$restaurant)\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Order/OrdersData.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "getCurrency($currentPage: Int, $searchList: String)", "content": "{\n        getCurrency(currentPage: $currentPage, searchList:$searchList){\n          count\n          currencyList{\n              id\n              symbol\n              isEnable\n              isPayment\n              isBaseCurrency\n          }\n        }\n      }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Currency/updateCurrency.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/ws/__tests__/webSocketLink.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "updateStaticPage(\n  $id: Int,\n  $content: String,\n  $metaTitle: String,\n  $metaDescription: String,\n  $pageBanner: String,\n)", "content": "{\n  updateStaticPage(\n    id: $id,\n    content: $content,\n    metaTitle: $metaTitle,\n    metaDescription: $metaDescription,\n    pageBanner: $pageBanner,\n  ) {\n      status\n  }\n}", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateStaticPage.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "addPerson", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/shared-operations.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "subscription", "name": "subscribeToUpdatedCommunities($communityIds: [ID!])", "content": "{\n    communityUpdated(communityIds: $communityIds) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "GetActor($actorName: String)", "content": "{\n    getActor(filter: { name: $actorName }) {\n      name\n      born\n      movies {\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo-neo4j-graphql/pages/actor/[name].js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($where: JSON)", "content": "{\n    boxItemOuts(where: $where) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/queries/sub/boxItemOuts_total.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "query", "name": "lists($url: String!)", "content": "{\n    lists(url: $url) {\n      id_wishlist\n      name\n      listUrl\n      shareUrl\n      nbProducts\n      default\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/queries/getlists.js", "repo": "platformsh_fwp-prestashop"}}, {"type": "query", "name": "Identities($first: Int, $after: String, $sort: String)", "content": "{\n    identityEvents {\n      id\n      identities(first: $first, after: $after, sort: $sort) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          endCursor\n        }\n        nodes {\n          id\n          fullName\n          owner {\n            id\n            owner {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Identities.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Query", "content": "{\n    me {\n      _id\n      username\n      email\n      reviews {\n        _id\n        company\n        interviewExperience\n        role\n        interviewerInfo\n        reviewAuthor\n        rating\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "e0a8e6f7b5ccf7d913dae3006e6e54762ae76e25", "file": "client/src/utils/queries.js", "repo": "daisyle0203_UPIN"}}, {"type": "query", "name": "blob($owner: String!, $name: String!, $expression: String!)", "content": "{\n    repository(owner: $owner, name: $name) {\n      ...RepositoryParts\n      object(expression: $expression) {\n        ... on Blob {\n          ...BlobWithTextParts\n        }\n      }\n    }\n  }\n  ${fragments.repository}\n  ${fragments.blobWithText}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/queries.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "vote($repoFullName: String!, $type: VoteType!)", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "upVote($input: VoteInput!)", "content": "{\n      upVote(input: $input) {\n        voteUri\n        targetUri\n        targetType\n        upvote\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Vote/upVote.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "authorizeSession(\n    $email: String!\n    $tokens: [SignInToken!]!\n    $consents: [String!]\n    $requiredFields: RequiredUserFields\n  )", "content": "{\n    authorizeSession(\n      email: $email\n      tokens: $tokens\n      consents: $consents\n      requiredFields: $requiredFields\n    )\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/withAuthorizeSession.js", "repo": "republik_plattform"}}, {"type": "query", "name": "Chat($order: ID!)", "content": "{\n  chat(order: $order) {\n    id\n    message\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/screens/ChatWithCustomer/useChatScreen.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "LatestMotionPosts($postType: Int!, $limit: Int! = 5 )", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            onchain_link: {\n                onchain_motion_id: {\n                    _is_null: false\n                },\n                onchain_referendum_id: {\n                    _is_null: true\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_motion_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_motion_id\n                onchain_motion(where: {NOT: {motionStatus_some: {OR: [{status: \"Executed\"}, {status: \"Disapproved\"}]}}}) {\n                    id\n                    motionStatus(last: 1) {\n                        id\n                        status\n                    }\n                    preimage {\n                        id\n                        method\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n    ${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/OnChain/Motions/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "RiderLogin($username:String,$password:String,$notificationToken:String)", "content": "{\n  riderLogin(username:$username,password:$password,notificationToken:$notificationToken){\n    userId\n    token\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/Login/useLogin.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "($limit: Int)", "content": "{\n    contractList(limit: $limit) {\n      address\n      name\n      abi\n      event_topics\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "mutation", "name": "AddOrUpdate", "content": "{\n        addOrUpdate(id: $id, title: $title) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "registerNoteComment($noteId: String!, $body: String!)", "content": "{\n    __typename\n    registerNoteComment(input: { noteId: $noteId, body: $body }) {\n      noteComment {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "Addons", "content": "{\n  addons{\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n}}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/jit-sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "Chat($order: ID!)", "content": "{\n  chat(order: $order) {\n    id\n    message\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/ChatWithRider/useChatScreen.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "Q", "content": "{\n        books {\n          name\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/lifecycle.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "recomissionTool($tool_id: ID!, $status: InServiceToolStatus!)", "content": "{\n    recomissionTool(tool_id: $tool_id, recomissioned_status: $status) {\n      status\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}}, {"type": "query", "name": "account($user: ID!)", "content": "{\n    account(id: $user) {\n      id\n      totalBorrowValueInEth\n      totalCollateralValueInEth\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}}, {"type": "query", "name": "molochActivities($contractAddr: String!, $createdAt: String!)", "content": "{\n    proposals(\n      where: { molochAddress: $contractAddr, createdAt_gt: $createdAt, sponsored: false, guildkickOrWhitelistOrMinion: false }\n      orderBy: createdAt\n      orderDirection: asc\n      first: 1000\n    ) {\n      ${proposalFields}\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "mutation", "name": "unpublish($repoId: ID!)", "content": "{\n    unpublish(repoId: $repoId)\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Publication/Current.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "CreateCoupon($couponInput:CouponInput!)", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    title\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currency_symbol\n    delivery_charges\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/context/Configuration.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "removeCommunityModerator($input: RemoveCommunityModeratorInput!)", "content": "{\n    removeCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/removeCommunityModerator.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "insertShift($shift: [shift_insert_input!]!)", "content": "{\n    insert_shift(objects: $shift) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/mutation.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "query", "name": "($limit: Int, $filters: EventFilters)", "content": "{\n    eventList(limit: $limit, filters: $filters) {\n      transaction_hash\n      event_topic_hash\n      contract_address\n      event_abi\n      raw_event\n      json_event\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "mutation", "name": "UserOAuthLogin($req: ApiReqUserOAuthLogin!)", "content": "{\n      user {\n        oauthLogin(req: $req) {\n          session { token },\n          user { id, email, name }\n        }\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "query", "name": "someBigQuery(\n        $stringArg: String = \"This is a default string!\"\n        $intArg: Int = 0\n        $floatArg: Float\n      )", "content": "{\n        id\n        stringField(arg: $stringArg)\n        numberField(intArg: $intArg, floatArg: $floatArg)\n        nullField\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/readFromStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "($skip: Float!, $limit: Float!)", "content": "{\n        users(other: { skip: $skip, take: $limit }) {\n            id\n            username\n            email\n            rankID\n            credits\n            vipPoints\n            activityPoints\n            look\n            gender\n            motto\n            accountCreatedAt\n            onlineStatus\n            ipLast\n            ipRegisteredWith\n            homeRoomID\n        }\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/fetch-users.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "query", "name": "fiatPriceHistory($fiat: String!, $network: String!)", "content": "{\n  fiatPriceHistory(fiat: $fiat, network: $network) {\n    price\n    timestamp\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "query", "name": "ViewerQuery", "content": "{\n    viewer {\n      id\n      name\n      status\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/api-routes-apollo-server-and-client/pages/index.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Restaurant($id:String)", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Food.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "editProject($projectId: ID!, $input: EditProjectInput!)", "content": "{\n        editProject(projectId: $projectId, input: $input) {\n            _id\n            name\n            description\n            image\n            color\n            privacy\n            status\n            created_at\n            updated_at\n            owner {\n                _id\n                name\n                last_name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditProject.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "resetOrganization ($data: ResetOrganizationInput!)", "content": "{\n        result: resetOrganization(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "Exchange($selectedAccountCurrency: String!, $toAccountCurrency: String!, $amount: Float!)", "content": "{\n  exchange(selectedAccountCurrency: $selectedAccountCurrency, toAccountCurrency: $toAccountCurrency, amount: $amount) {\n    account {\n      id\n      balance\n    }\n    message\n  }\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "CreateLocation($name: String!, $addr: String!, $lat: Decimal!, $lng: Decimal!)", "content": "{\n    createSpatialThing(spatialThing: { name: $name, mappableAddress: $addr, lat: $lat, long: $lng }) {\n      spatialThing {\n        id\n        lat\n        long\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}}, {"type": "mutation", "name": "CreateStudent($input: CreateStudentInput!)", "content": "{\n      createStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "getOrg($organizationUri: String, $filter: GroupFilter)", "content": "{\n      getOrganization(organizationUri: $organizationUri) {\n        groups(filter: $filter) {\n          count\n          nodes {\n            groupUri\n            label\n            created\n            groupRoleInOrganization\n            userRoleInGroup\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/listOrganizationEnvironment.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "AddProductRequest($reason: String!, $url: String!)", "content": "{\n    addProductRequest(reason: $reason, url: $url) {\n      id\n      sku\n      brand\n      description\n      images\n      name\n      price\n      priceCurrency\n      productID\n      url\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ProductRequest/ProductRequest.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "( \n  $id: Int!,\n  $title: String!, \n  $description: String!, \n  $code: String!, \n  $type: Int!,\n  $promoValue: Float!, \n  $currency: String,\n  $expiryDate: String,\n  $isEnable: String\n)", "content": "{\n  updatePromoCode(\n      id: $id,\n      title: $title,\n      description: $description,\n      code: $code,\n      type: $type,\n      promoValue: $promoValue,\n      currency: $currency,\n      expiryDate: $expiryDate,\n      isEnable: $isEnable\n  ) {\n      status\n      errorMessage\n  }\n}", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/PromoCode/addPromoCode.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "mutation", "name": "CreateOrder(\n        $name: String\n        $phone: String\n        $account: String\n        $card: String\n        $openId: String\n      )", "content": "{\n        addAccount(\n          input: {\n            name: $name\n            phone: $phone\n            account: $account\n            card: $card\n            openId: $openId\n          }\n        ) {\n            name\n            phone\n            account\n            card\n            openId\n        }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/addCollection/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "(\n    $id: ID!\n    $gratefulFor: String\n    $affirmation: String\n    $callSos: String\n    $research: String\n    $reading: ReadingInputType\n    $accountability: AccountabilityInputType\n    $awake: String\n    $asleep: String\n  )", "content": "{\n    updateSheet(\n      id: $id\n      gratefulFor: $gratefulFor\n      affirmation: $affirmation\n      callSos: $callSos\n      research: $research\n      reading: $reading\n      accountability: $accountability\n      awake: $awake\n      asleep: $asleep\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "mutation", "name": "AssignOrder($id:String!)", "content": "{\n    assignOrder(id:$id){\n      _id\n      rider{\n        _id\n      }\n    }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/screens/OrderDetail/OrderDetail.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "One", "content": "{\n          one\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "enableRedshiftClusterDatasetTableCopy(\n      $clusterUri: String!\n      $datasetUri: String!\n      $tableUri: String!\n      $schema: String!\n      $dataLocation: String\n    )", "content": "{\n      enableRedshiftClusterDatasetTableCopy(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n        tableUri: $tableUri\n        schema: $schema\n        dataLocation: $dataLocation\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/copyTableToCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "Faq", "content": "{\n    faq {\n      sections {\n        title\n        subsections {\n          title\n          text\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Faq/Faq.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "name($data: ImageCreateInput!)", "content": "{\n\t\tcreateImage(data: $data) {\n\t\t\tid\n\t\t\timage {\n\t\t\t\tid\n\t\t\t\tfilename\n\t\t\t\tpublicUrl\n\t\t\t\tencoding\n\t\t\t\tpath\n\t\t\t}\n\t\t\tcaption\n\t\t}\n\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/dynamic-blocks/do-and-avoid.js", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "removeOrganizationOwner($organizationId: ID!)", "content": "{\n  organization_UnsetOwner(organizationId: $organizationId) {\n    id\n    owner {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "query", "name": "ClientPortalCurrentUser", "content": "{\n    clientPortalCurrentUser {\n      _id\n      username\n      email\n      forumIsSubscribed\n      erxesCustomerId\n      forumSubscriptionEndsAfter\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-forum-ui/src/containers/subscriptionProducts/PaymentTest/CurrentUser.tsx", "repo": "erxes_erxes-community"}}, {"type": "query", "name": "accounts(\n            $where: Account_filter!\n            $domain: String!\n            $currentAddress: String!\n        )", "content": "{\n            accounts(\n                where: $where\n                domain: $domain\n                currentAddress: $currentAddress\n            ) {\n                accounts {\n                    ${requestedFields}\n                }\n                error {\n                    type\n                    key\n                    message\n                    response\n                }\n            }\n        }", "metadata": {"commit_hash": "a47d3d9ea38cd1363ede730998145da663df6091", "file": "packages/extension/src/background/services/GraphQLService/Queries/accountsQuery.js", "repo": "AztecProtocol_aztec-v1"}}, {"type": "mutation", "name": "($input: SignInInput)", "content": "{\n        signIn(input: $input) {\n          userId\n          firstName\n          lastName\n          email\n          role\n          username\n        }\n      }", "metadata": {"commit_hash": "d32c9d558a4500fd0563bbe0eab2d6ba3fbf9438", "file": "web/utils/schema.ts", "repo": "jswildcards_logicall"}}, {"type": "mutation", "name": "CreateWallet($role: String, $name: String)", "content": "{\n    createWallet(role: $role, name: $name) {\n      id\n      role\n      name\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "CorporationInformation($id: Int!)", "content": "{\n        information: corporationByCorporationID(id: $id) {\n            id\n            name\n            ticker\n            memberCount\n            alliance {\n                id\n                name\n                ticker\n            }\n        }\n    }", "metadata": {"commit_hash": "009b5eae048747488ab78334a7cb9f92e1ad888f", "file": "src/util/queries/information.js", "repo": "eveisesi_neo-ui"}}, {"type": "query", "name": "topPools", "content": "{\n    pools0: pools(\n      where: {token0_contains_nocase: \"${address}\", token1_contains_nocase: \"${address1}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n    pools1: pools(\n      first: 5\n      where: {token0_contains_nocase: \"${address}\", token1_not_contains_nocase: \"${address1}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n    pools2: pools(\n      first: 5\n      where: {token0_not_contains_nocase: \"${address}\", token1_contains_nocase: \"${address1}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n    pools3: pools(\n      first: 5\n      where: {token0_contains_nocase: \"${address1}\", token1_not_contains_nocase: \"${address}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n    pools4: pools(\n      first: 5\n      where: {token0_not_contains_nocase: \"${address1}\", token1_contains_nocase: \"${address}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries-v3.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "queryB", "content": "{\n        person(id: \"abc\") {\n          __typename\n          id\n          lastName\n          age\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "HeroNameConditionalExclusion($episode: Episode, $skipName: Boolean!)", "content": "{\n    hero(episode: $episode) {\n      name @skip(if: $skipName)\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "(\n        $category: Category = all\n        $type: Entity = all\n        $id: Int\n        $age: Int = 7\n        $limit: Int = 6\n    )", "content": "{\n        mv: mvByEntityID(\n            category: $category\n            entity: $type\n            id: $id\n            age: $age\n            limit: $limit\n        ) {\n            id\n            hash\n            totalValue\n            victim {\n                character {\n                    id\n                    name\n                }\n                ship {\n                    id\n                    name\n                    group {\n                        id\n                        name\n                    }\n                }\n                corporation {\n                    id\n                    name\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "009b5eae048747488ab78334a7cb9f92e1ad888f", "file": "src/util/queries/mv.js", "repo": "eveisesi_neo-ui"}}, {"type": "query", "name": "foo", "content": "{\n            bar\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/queries/index.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Modular($pin: Int, $state: Int)", "content": "{\n    modular(pin: $pin, state: $state) {\n      state\n      pin\n    }\n  }", "metadata": {"commit_hash": "6779ec1650cf05b3e2b7c27a818719ac909e9510", "file": "src/graphql/mutations/MODULAR.ts", "repo": "venancioavila_action"}}, {"type": "mutation", "name": "AddTeamMember(\n    $email: String!\n    $fullName: String!\n    $role: ID!\n    $team: String!\n    $companyId: ID!\n  )", "content": "{\n    addTeamMember(\n      email: $email\n      fullName: $fullName\n      role: $role\n      team: $team\n      companyId: $companyId\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n      user {\n        id\n        fullName\n        profileUrl\n        roles {\n          id\n          name\n          companyId\n        }\n        teams {\n          id\n          name\n          companyId\n        }\n        companies {\n          id\n          name\n          logoUrl\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddTeamMember.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "query", "name": "transactions($address: Bytes!)", "content": "{\n    mintsAs0: mints(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    mintsAs1: mints(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs0: swaps(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs1: swaps(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs0: burns(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs1: burns(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries-v3.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "mutation", "name": "AssignOrder($id:String!)", "content": "{\n  assignOrder(id:$id){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "SearchPosts", "content": "{\n        searchPosts {\n          items {\n            id\n            content\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "pullRequestAndBranch($owner: String!, $name: String!, $originRepoOwner: String!, $originRepoName: String!, $qualifiedName: String!, $number: Int!)", "content": "{\n    repository(owner: $owner, name: $name) {\n      ...RepositoryParts\n      ${branchQueryPart}\n    }\n    origin: repository(owner: $originRepoOwner, name: $originRepoName) {\n      ...RepositoryParts\n      ${pullRequestQueryPart}\n    }\n  }\n  ${fragments.repository}\n  ${fragments.branch}\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/queries.ts", "repo": "starknet-io_starknet-website"}}, {"type": "mutation", "name": "setContent($name: String, $recordValue: String)", "content": "{\n    setContent(name: $name, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "UpdateTimings($id:String!,$openingTimes:[TimingsInput])", "content": "{\n  updateTimings(id:$id,\n    openingTimes:$openingTimes){\n    _id\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Timings.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "completeSale($invoiceId: Int!, $revoke: Boolean)", "content": "{\n  completeSale(invoiceId: $invoiceId, revoke: $revoke) {\n    id\n    sellerAddress\n    paymentTransactionHash\n    buyerAddress\n    pickupCode\n    buyerSignature\n    buyerSignedDate\n    sellerSignature\n    sellerSignedDate\n    sellerProfile {\n      type\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "remount($name: String)", "content": "{\n        allPeople(name: $name) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/loading.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "($label: String!)", "content": "{\n    openIssues(label: $label) {\n      totalIssues\n      issues {\n        ...GitHubIssueFragment\n      }\n    }\n  }\n  ${GitHubIssueFragment}", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "store.gatsbyjs.org/src/components/Dashboard/OpenIssues.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "query", "name": "CheckTelegramStatus($identity: String!, $maxTries: Int)", "content": "{\n    checkTelegramStatus(identity: $identity, maxTries: $maxTries) {\n      success\n      reason\n      data {\n        attestation\n        verified\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/CheckTelegramStatus.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "ships", "content": "{\n        allships(first: 1) {\n          ships {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/shared-operations.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "posts($tag: String)", "content": "{\n    posts(tag: $tag) {\n      ...postDataFragment\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ArchiveContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "($userID: String!)", "content": "{\n        unsubscribe: Unsubscribe(userID: $userID)\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/user/index.ts", "repo": "impactasaurus_app"}}, {"type": "query", "name": "getUserPointIncreaseEvents($account: ID!)", "content": "{\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }", "metadata": {"commit_hash": "74922f49ceb05f6fc38a0a785d33676c737f67a6", "file": "teams/18-Avault/src/avault-shiden-web/src/state/achievements/helpers.ts", "repo": "parity-asia_hackathon-2022-summer"}}, {"type": "query", "name": "allTravellersCount", "content": "{\n        _allTravellersMeta {\n            count\n        }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/TravellerCount.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "setName", "content": "{\n          name\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "GetGameById($gameId: Int!)", "content": "{\n    getGameById(gameId: $gameId) {\n      categories {\n        categoryName\n        catgId\n        gameId\n      }\n      contestants {\n        gameId\n        login\n        name\n        organization\n        score\n      }\n      emcee\n      gameId\n      title\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/queries.js", "repo": "ralberth_quizshow"}}, {"type": "query", "name": "eje($id: String!)", "content": "{\n    eje(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/update/eje-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "people", "content": "{\n        name\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "DeleteSubDomainFavourite($domain: Domain)", "content": "{\n    deleteSubDomainFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "getNamesFromSubgraph($address: String!)", "content": "{\n    domains(first: 1000, where: { resolvedAddress: $address }) {\n      name\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "getProjects", "content": "{\n  organizations {\n    id\n    name\n  }\n  teams {\n    id\n    name\n    createdAt\n  }\n  projects {\n    id\n    name\n    team {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "account($user: ID!)", "content": "{\n    account(id: $user) {\n      id\n      tokens {\n        id\n        lifetimeSupplyInterestAccrued\n      }\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}}, {"type": "query", "name": "Zones", "content": "{\n    zones{\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "serviceClassFilters", "content": "{\n    serviceClassFilters @client {\n      name\n      isMore\n      values @client {\n        name\n        value\n        count\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceClassList/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "($poolId: ID!, $first: Int, $skip: Int)", "content": "{\n    pools(where: { id: $poolId }) {\n      num_brokers\n      brokers(first: $first, skip: $skip) {\n        wallet\n        num_deposits\n        unique_investors\n        deposits_usd\n        fees_usd\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/PoolManager/Brokers/BrokersTable/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "Configuration", "content": "{\n    configuration{\n      _id\n      currency\n      currency_symbol\n      delivery_charges\n    }\n  }", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/screens/OrderDetail/OrderDetail.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}}, {"type": "query", "name": "getAllPartners", "content": "{\n    partners {\n      all {\n        id\n        companyName\n        companyLogo\n        slug\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/partners.js", "repo": "ThatConference_that-website"}}, {"type": "query", "name": "ideaIssueFindById($id: ID!)", "content": "{\n      ideaIssueFindById(id: $id) {\n        ...ideaIssueFullFields\n      }\n    }\n    ${IDEA_ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "query", "name": "loadMoreCommunityMembers(\n    $id: ID\n    $after: String\n    $first: Int\n    $filter: MembersFilter\n  )", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityMembers\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityMembersFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunityMembers.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "FormsMetrics(\n\t\t$assetId: String!\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)", "content": "{\n\t\tform(\n\t\t\tassetId: $assetId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tchannelId: $channelId\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tabandonmentsMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\tassetId\n\t\t\tassetTitle\n\t\t\tcompletionTimeMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\tsubmissionsMetric {\n\t\t\t\t...browserFragment\n\t\t\t\t...deviceFragment\n\t\t\t\t...geolocationFragment\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\turls\n\t\t\tviewsMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${BROWSER_FRAGMENT}\n\t${DEVICE_FRAGMENT}\n\t${GEOLOCATION_FRAGMENT}\n\t${METRIC_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/FormMetricsQuery.js", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "GetUser", "content": "{\n    users {\n      first_name\n      gender\n      id\n      date_of_birth\n    }\n  }", "metadata": {"commit_hash": "ce43433d771a9c0d484f1d8e9f002676444d8055", "file": "src/therapist/TherapistHome.js", "repo": "ghmeec_Mental-Health-Therapy-2020"}}, {"type": "query", "name": "($id: String!)", "content": "{\n    project(id: $id) {\n      title\n      description\n      name\n      id\n      createdAt\n      updatedAt\n      isPublic\n      owner {\n        id\n        login\n        role {\n          id\n          name\n          title\n        }\n      }\n      items {\n        total\n      }\n      stores {\n        total\n      }\n      itemsBox: items(where: { type: \"box\" }) {\n        total\n      }\n      boxItemOuts {\n        total\n      }\n      resources {\n        total\n      }\n      mapSpts {\n        total\n      }\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/queries/sub/project.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        ...inDirection\n      }\n\n      fragment inDirection on Thing {\n        field @storage\n        bar\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "subscription", "name": "onRepoChange($repoId: ID!)", "content": "{\n    repoChange(repoId: $repoId) {\n      mutation\n      repo {\n        isArchived\n      }\n      commit {\n        ...SimpleCommit\n        document {\n          id\n          type\n        }\n        derivatives {\n          ...SimpleDerivative\n        }\n        canDeriveSyntheticReadAloud: canDerive(type: SyntheticReadAloud)\n      }\n      milestone {\n        ...SimpleMilestone\n        commit {\n          ...SimpleCommit\n          derivatives {\n            ...SimpleDerivative\n          }\n          canDeriveSyntheticReadAloud: canDerive(type: SyntheticReadAloud)\n        }\n      }\n    }\n  }\n  ${fragments.SimpleCommit}\n  ${fragments.SimpleMilestone}\n  ${fragments.SimpleDerivative}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/pages/repo/[owner]/[repo]/tree.js", "repo": "republik_plattform"}}, {"type": "query", "name": "lastEvent", "content": "{\n    limitFarmings(\n      first: 1\n      orderDirection: desc\n      orderBy: createdAtTimestamp\n      where: { isDetached: false }\n    ) {\n      createdAtTimestamp\n      id\n      startTime\n      endTime\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "history($solutionId: String)", "content": "{\n    history(solutionId: $solutionId) {\n      solutionId\n      delta\n    }\n  }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/typescript-usage.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "(\n        $beneficiaryID: String!\n        $outcomeSetID: String!\n        $daysToComplete: Int!\n        $tags: [String]\n      )", "content": "{\n        newRemoteMeeting: AddRemoteMeeting(\n          beneficiaryID: $beneficiaryID\n          outcomeSetID: $outcomeSetID\n          daysToComplete: $daysToComplete\n          tags: $tags\n        ) {\n          JTI\n        }\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "approveShareObject($shareUri: String!)", "content": "{\n      approveShareObject(shareUri: $shareUri) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/approveShareObject.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "AllAccounts", "content": "{\n    web3 {\n      defaultAccount {\n        ...balanceFields\n      }\n      nodeAccounts {\n        ...balanceFields\n      }\n      accounts {\n        ...balanceFields\n      }\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/AllAccounts.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "loadMoreDirectMessageThreads($after: String)", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userDirectMessageThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userDirectMessageThreadsConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getCurrentUserDMThreadConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "ConnectDiscordAccount($code: String!, $redirectPath: String!)", "content": "{\n    connectDiscordAccount(input: { code: $code, redirectPath: $redirectPath }) {\n      id\n      username\n      discriminator\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Discord.ts", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "HumanWithNullHeight", "content": "{\n    human(id: 1004) {\n      ...HumanFields\n    }\n  }\n  ${HumanFieldsFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/__generated__/HumanWithNullWeight.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "CreateUser($phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)", "content": "{\n        createUser(userInput:{\n            phone:$phone,\n            email:$email,\n            password:$password,\n            name:$name,\n            notificationToken:$notificationToken,\n            appleId:$appleId\n        }){\n            userId\n            token\n            tokenExpiration\n            name\n            email\n            phone\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Otp/Email/useEmailOtp.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "people($cursor: Int)", "content": "{\n        allPeople(cursor: $cursor) {\n          cursor\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/api.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "updateMes($data: MesUpdateInput!, $where: MesWhereUniqueInput!)", "content": "{\n    updateMes(data: $data, where: $where) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/update/mes-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "GET_ATTRIBUTE_BY_ID($id: ID)", "content": "{\n        attributes(filters: {id: $id}) {\n            list {\n                ...AttributeDetails\n            }\n        }\n    }\n    ${AttributeDetailsFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "people", "content": "{\n    allPeople(first: 1) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "onCreateMessage($chatThreadId: ID!)", "content": "{\n    onCreateMessage(chatThreadId: $chatThreadId) {\n      __typename\n      id\n      content\n      createdAt\n      attendeeId\n      chatThreadId\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/subscriptions/on-create-message.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "EditPoll ($id: Int!,  $blockEnd: Int!)", "content": "{\n        update_poll(where: {id: {_eq: $id}}, _set: {block_end: $blockEnd}) {\n            affected_rows\n        }\n  }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/Poll/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "test", "content": "{\n    user {\n      id\n    }\n  }", "metadata": {"commit_hash": "ac847cb1bcda5dce599e5cf206cfb8928e850732", "file": "services/site/tests/lib/apollo-client/create-forward-cookies-to-client-link.spec.ts", "repo": "a11yphant_a11yphant"}}, {"type": "query", "name": "allTravellersCount", "content": "{\n        _allTravellersMeta {\n            count\n        }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/TravellerCount.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "GetUser($username: String!)", "content": "{\n    user(username: $username) {\n      id\n      __typename\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/testing/mocking/__tests__/MockedProvider.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "FindUser($page: Int, $pageSize: Int, $userName: String)", "content": "{\n      FindUser(userName: $userName, page: $page, pageSize: $pageSize) {\n        count\n        page\n        pageSize\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          userName\n          organizations\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/User/findUser.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "($id: String!)", "content": "{\n    project(id: $id) {\n      title\n      description\n      name\n      id\n      createdAt\n      updatedAt\n      isPublic\n      owner {\n        id\n        login\n        role {\n          id\n          name\n          title\n        }\n      }\n      items {\n        total\n      }\n      stores {\n        total\n      }\n      itemsBox: items(where: { type: \"box\" }) {\n        total\n      }\n      boxItemOuts {\n        total\n      }\n      resources {\n        total\n      }\n      mapSpts {\n        total\n      }\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/queries/sub/project.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "query", "name": "user", "content": "{\n    user {\n      username\n      createdat\n      email\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/queries/user.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "confirmEmail($token: String!)", "content": "{\n            confirmEmail(token: $token) {\n              _\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "query", "name": "getQuestionnaire($slug: String!)", "content": "{\n    questionnaire(slug: $slug) {\n      ...QuestionnaireFragment\n    }\n  }\n  ${questionnaireData}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/Submissions/graphql.js", "repo": "republik_plattform"}}, {"type": "query", "name": "GlobalFilterTouchpointQuery(\n\t\t\t$channelId: String\n\t\t\t$touchpoint: String\n\t\t\t$rangeKey: Int!\n\t\t\t$title: String\n\t\t)", "content": "{\n\t\t\t${queryName}(\n\t\t\t\tchannelId: $channelId\n\t\t\t\tcanonicalUrl: $touchpoint\n\t\t\t\trangeKey: $rangeKey\n\t\t\t\ttitle: $title\n\t\t\t) {\n\t\t\t\t${metricName} {\n\t\t\t\t\t...deviceFragment\n\t\t\t\t\t...geolocationFragment\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t${DEVICE_FRAGMENT}\n\t\t${GEOLOCATION_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/globalFilterTouchpointQuery.js", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "vendorItems($filter: ItemFilterInput, $orderBy: ItemOrderByInput)", "content": "{\n        items(filter: $filter, orderBy: $orderBy){\n            ...itemDetails\n        }\n    }\n    ${ITEM_DETAILS}", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/query.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "UnhideBlockedCustomEventDefinitions(\n\t\t$eventDefinitionIds: [String]!\n\t)", "content": "{\n\t\tunhideBlockedEventDefinitions(\n\t\t\tblockedEventDefinitionIds: $eventDefinitionIds\n\t\t) {\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\tlastSeenDate\n\t\t\tlastSeenURL\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/definitions/events/queries/BlockedCustomEventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "delegateOwnership($projectId: String!, $delegateAddress: String!)", "content": "{\n    delegateOwnership(projectId: $projectId, delegateAddress: $delegateAddress)\n      @client {\n      id\n      name\n      description\n      avatar\n      image\n      website\n      github\n      twitter\n      isRepresentative\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}}, {"type": "query", "name": "getAllMembers($first: Int!, $offset: Int!)", "content": "{\n    allVAdminMembers(offset: $offset, first: $first, orderBy: USERNAME_ASC) {\n      nodes {\n        avatar\n        username\n        firstname\n        lastname\n        id\n        createdAt\n        role\n        isInstructor\n      }\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "exportCampaign($campaignId: String!)", "content": "{\n      exportCampaign(id: $campaignId) {\n        id\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignStats.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n      zone{\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "Vendors", "content": "{\n    vendors{\n      _id\n      email\n      userType\n      restaurants{\n        _id\n        orderId\n        orderPrefix\n        slug\n        name\n        image\n        address\n        location{coordinates}\n        zone{\n          _id\n          title\n        }\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Vendor/Vendor.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "getUserById($id: ID)", "content": "{\n    user(id: $id) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/user/getUser.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "pairs($id: [Bytes]!)", "content": "{\n    pairs(where: { id_in: $id }, orderDirection: asc) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/queries/errors.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Refresh($token: String!)", "content": "{\n  refresh(token: $token) {\n    access_token\n    expires_in\n    refresh_token\n    user_id\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "checkoutLineItemsAdd($lineItems: [CheckoutLineItemInput!]!, $checkoutId: ID!)", "content": "{\n        checkoutLineItemsAdd(lineItems: $lineItems, checkoutId: $checkoutId) {\n            userErrors {\n                field\n                message\n            }\n            checkout {\n                ...ReturnFieldsCheckout\n            }\n        }\n    }\n    ${ReturnFieldsCheckout}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/AddToCart.js", "repo": "gil--_gatsby-starter-shopifypwa"}}, {"type": "mutation", "name": "grantAccess($campaignId: ID!, $email: String!, $message: String)", "content": "{\n    grantAccess(campaignId: $campaignId, email: $email, message: $message) {\n      email\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Climatelab/Onboarding/Invitation.js", "repo": "republik_plattform"}}, {"type": "query", "name": "User($user_id: String!, $platform_id: String!, $order: [String], $offset: Int!, $limit: Int!)", "content": "{\n  user(id: $user_id, platform_id: $platform_id) {\n    id\n    name\n    person {\n      id\n      name\n      country\n    }\n    meta_ranks(ladder_ids: [131, 132]) {\n      rating\n      rank\n      streak\n      ladder {\n        platform_id\n        id\n        name\n      }\n      rate_by_day {\n        date\n        count\n      }\n    }\n    top_map {\n      name\n    }\n    top_civilization {\n      id\n      dataset_id\n      name\n    }\n    top_dataset {\n      name\n    }\n    matches(order: $order, offset: $offset, limit: $limit) {\n      count\n      hits {\n        ...MatchFragment\n      }\n    }\n  }\n}\n${MatchFragment}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/User.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "query", "name": "pairDayDatas($timespan: Int!, $pairAddress: ID!)", "content": "{\n    pairDayDatas(\n      first: $timespan\n      orderBy: date\n      orderDirection: desc\n      where: { pairAddress: $pairAddress }\n    ) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n      date\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}}, {"type": "query", "name": "($appId:ID!, $packageId: ID!, $apiId: ID!)", "content": "{\n    application (id : $appId){\n      package (id : $packageId){\n        eventDefinition(id: $apiId) { \n          id \n          name \n          description\n          spec {\n            data format type \n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e6d9b79197464112cbebeee76cf596345acc67b3", "file": "modules/app-connector/src/server/compass/api.ts", "repo": "kyma-incubator_varkes"}}, {"type": "query", "name": "ListScheduledQueryExecutions($scheduledQueryUri: String!)", "content": "{\n      listScheduledQueryExecutions(scheduledQueryUri: $scheduledQueryUri) {\n        executionArn\n        status\n        startDate\n        stopDate\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/listScheduledQueryExecutions.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "payTheBill($id: ID!)", "content": "{\n        payTheBill(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/bill.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "getSagemakerStudioUserProfilePresignedUrl(\n      $sagemakerStudioUserProfileUri: String!\n    )", "content": "{\n      getSagemakerStudioUserProfilePresignedUrl(\n        sagemakerStudioUserProfileUri: $sagemakerStudioUserProfileUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerStudio/getSagemakerStudioUserProfilePresignedUrl.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "SetUserCharacter($data: UserAvatarInput!)", "content": "{\n    setUserCharacter(data: $data) {\n      id\n      avatarId\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "DeleteAddress($id:ID!)", "content": "{\n    deleteAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Addresses/Addresses.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "notesQuery(\n            $where: Note_filter!\n        )", "content": "{\n            notes(\n                where: $where\n            ) {\n                notes {\n                    ${requestedFields}\n                }\n                error {\n                    type\n                    key\n                    message\n                    response\n                }\n            }\n        }", "metadata": {"commit_hash": "a47d3d9ea38cd1363ede730998145da663df6091", "file": "packages/extension/src/background/services/GraphQLService/Queries/notesQuery.js", "repo": "AztecProtocol_aztec-v1"}}, {"type": "query", "name": "Restaurants($latitude:Float,$longitude:Float)", "content": "{\n  nearByRestaurants(latitude:$latitude,longitude:$longitude){\n    offers{\n      _id\n      name\n      tag\n      restaurants\n    }\n    sections{\n      _id\n      name\n      restaurants\n    }\n    restaurants{\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      reviewData{\n          total\n          ratings\n          reviews{\n            _id\n            order{\n              user{\n                _id\n                name\n                email\n              }\n            }\n            rating\n            description\n            createdAt\n          }\n      }\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          image\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      rating\n      isAvailable\n      openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/Restaurants/Restaurants.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "perspectiveAdd($name: String!)", "content": "{\n                perspectiveAdd(name: $name) {\n                    ${PERSPECTIVE_HANDLE_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "AddAction($name: String!, $action: String!, $equation: String!)", "content": "{\n    addAction(name: $name, action: $action, equation: $equation) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "query", "name": "user($id: String)", "content": "{\n    user(slug: $id) {\n      id\n      firstName\n      lastName\n      email\n      phoneNumber\n      username\n      portrait(size: SMALL)\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/ProfileHeader.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "CreateAddress($addressInput:AddressInput!)", "content": "{\n    createAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Checkout/AddressDetail.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "GetArticle($id: ID!) @api(name: lens)", "content": "{\n    post(id: $id) {\n      id\n      pubId\n      profileId {\n        handle\n        imageURI\n        owner\n      }\n      comments {\n        pubId\n        timestamp\n      }\n      contentURI\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "f177a79f59efde8c68c963dd4e118eb296c13490", "file": "packages/react-app/src/graphql/queries/jodw-lens.ts", "repo": "Talent-DAO_JoDW-Demo"}}, {"type": "query", "name": "allReviews", "content": "{\n    allReviews(orderBy: createdAt_DESC) {\n      id\n      slug\n      rating\n      createdAt\n      title\n    }\n  }", "metadata": {"commit_hash": "0e0c08cd4600d3535e4d6651c5ece26b6e42c1f4", "file": "pages/index.js", "repo": "hygraph_example_01_nextjs_apollo"}}, {"type": "mutation", "name": "CreateAddress($addressInput:AddressInput!)", "content": "{\n  createAddress(addressInput:$addressInput){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/NewAddress/NewAddress.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}}, {"type": "mutation", "name": "CreateZone($zone:ZoneInput!)", "content": "{\n  createZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "DeleteAddon($id:String!,$restaurant:String!)", "content": "{\n        deleteAddon(id:$id,restaurant:$restaurant){\n          _id\n          addons{\n            _id\n            options\n            title\n            description\n            quantityMinimum\n            quantityMaximum\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Addons.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "getMember", "content": "{\n      members {\n        me {\n          id\n          bio\n          city\n          company\n          firstName\n          interests\n          jobTitle\n          lastName\n          lifeHack\n          profileImage\n          profileSlug\n          profileLinks {\n            linkType\n            url\n          }\n          state\n        }\n      }\n    }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/member/[memberSlug].js", "repo": "ThatConference_that-website"}}, {"type": "mutation", "name": "ideaCreate($input: IdeaCreateInput!)", "content": "{\n      ideaCreate(input: $input) {\n        ...ideaFullFields\n      }\n    }\n    ${IDEA_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/idea.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "($input: SellingPlanGroupInput!)", "content": "{\n        sellingPlanGroupCreate(input: $input) {\n            sellingPlanGroup {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "lib/sellingPlanGraphQL.ts", "repo": "mr-perseus_permaculture"}}, {"type": "query", "name": "NewComments($start: Int!, $limit: Int!)", "content": "{\n      comments(start: $start, limit: $limit) {\n        text\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/fetchMore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "RegisterUser(\n    $email: String!\n    $password: String!\n    $name: String!\n    $gender: String!\n  )", "content": "{\n    register(email: $email, password: $password, name: $name, gender: $gender) {\n      email\n      password\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/core/queries/register.mutation.js", "repo": "SparkEdUAB_sparked-client"}}, {"type": "subscription", "name": "UserInfo($name: String)", "content": "{\n            user(name: $name) {\n              name\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "searchProduct($query: String!)", "content": "{\n    searchProducts(productName: $query, first: 6, skip: 0) {\n      edges {\n        node {\n          id\n          name\n          imageUrl\n          displayPrice\n          brand {\n            id\n            name\n          }\n          unavailableOptionsValues {\n            id\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/search/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "deleteInvitedProjectMember($projectID: UUID!, $email: String!)", "content": "{\n    deleteInvitedProjectMember(input: { projectID: $projectID, email: $email }) {\n      invitedMember {\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/deleteProjectInvitedMember.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "AssignedOrders($id:String)", "content": "{\n    assignedOrders(id:$id){\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          title\n          options{\n            title\n            price\n          }\n        }\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "($shouldSkip: Boolean)", "content": "{\n        fortuneCookie @include(if: $shouldInclude)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Categories", "content": "{\n    categories {\n      rows {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/main/src/useData.ts", "repo": "atls_serenity"}}, {"type": "query", "name": "Me", "content": "{\n    me {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "query", "name": "loadMoreChannelMembers($id: ID, $first: Int, $after: String)", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelMemberConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelMemberConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannelMemberConnection.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "pauseRedshiftCluster($clusterUri: String!)", "content": "{\n      pauseRedshiftCluster(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/pauseCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "createProjectLabel($projectID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  createProjectLabel(\n    input: {projectID: $projectID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createPerson(\n    $email: String!,\n    $name: String!,\n    $picture: String,\n    $headline: String,\n    $currentPosition: String\n  )", "content": "{\n    createPerson(\n      email: $email,\n      name: $name,\n      picture: $picture,\n      headline: $headline\n      currentPosition: $currentPosition\n      ) {\n      ${personFields}\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/persons.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "anno($id: String!)", "content": "{\n    anno(id: $id) {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/details/anno-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "subscription", "name": "newNotification($receiverId: String!, $tenant: String!)", "content": "{\n    newNotification(receiverId: $receiverId, tenant: $tenant) {\n      id\n      type\n      createdAt\n      isRead\n      message {\n        id\n        body\n        createdAt\n        author {\n          id\n          username\n        }\n      }\n      receiver {\n        id\n        username\n      }\n      sender {\n        id\n        username\n        isOnline\n      }\n      channel {\n        url\n        id\n      }\n      community {\n        url\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Notification.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "updateLocation($input: LocationUpdateInput!)", "content": "{\n  location_Update(input: $input) {\n    locality\n    rawAddress\n    postalCode\n    street\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "query", "name": "getDXPCloudPageInfo($accountSubscriptionsFilter: String)", "content": "{\n\t\tc {\n\t\t\taccountSubscriptions(filter: $accountSubscriptionsFilter) {\n\t\t\t\titems {\n\t\t\t\t\taccountKey\n\t\t\t\t\texternalReferenceCode\n\t\t\t\t\thasDisasterDataCenterRegion\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\ttotalCount\n\t\t\t}\n\n\t\t\tdXPCDataCenterRegions(sort: \"name:asc\") {\n\t\t\t\titems {\n\t\t\t\t\tdxpcDataCenterRegionId\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\ttotalCount\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "mutation", "name": "ProductVariantCreateDraftOrder($input: CreateDraftedOrderInput!)", "content": "{\n    createDraftedOrder(input: $input) {\n      id\n      ...OrderFragment_Order\n    }\n  }\n  ${OrderFragment_Order}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "Exchange($selectedAccountCurrency: String!, $toAccountCurrency: String!, $amount: Float!)", "content": "{\n  exchange(selectedAccountCurrency: $selectedAccountCurrency, toAccountCurrency: $toAccountCurrency, amount: $amount) {\n    account {\n      id\n      balance\n    }\n    message\n  }\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "query", "name": "actions($slug: String)", "content": "{\n    user(slug: $slug) {\n      id\n      deletedAt\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Actions/index.js", "repo": "republik_plattform"}}, {"type": "query", "name": "RiderOrders", "content": "{\n  riderOrders{\n        _id\n      orderId\n      createdAt\n      acceptedAt\n      pickedAt\n      assignedAt\n      isPickedUp\n      deliveredAt\n      expectedTime\n      deliveryCharges\n      restaurant{\n        _id\n        name\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        label\n        details\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n        isActive\n        createdAt\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      paymentStatus\n      orderStatus\n      tipping\n      taxationAmount\n      reason\n      isRiderRinged\n      preparationTime\n      rider{\n        _id\n        name\n        username\n      }\n    }\n    }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "FetchDeathCertificates($ids: [String!]!)", "content": "{\n    deathCertificates {\n      certificates(ids: $ids) {\n        id\n        firstName\n        lastName\n        deathYear\n        deathDate\n        pending\n        age\n        birthDate\n      }\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/fetch-death-certificates.ts", "repo": "CityOfBoston_digital"}}, {"type": "query", "name": "AwardList($count: Int, $cursor: String, $groupName: String)", "content": "{\n    allAwards(first: $count, after: $cursor, groupName: $groupName)\n      @connection(key: \"AwardNode_allAwards\", filter: [\"groupName\"]) {\n      edges {\n        node {\n          id\n          name\n          description\n          requisition\n          groupName\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/AwardList.js", "repo": "heyrict_cindy-realtime"}}, {"type": "query", "name": "MessagingStatus", "content": "{\n    web3 {\n      metaMaskAccount {\n        id\n      }\n    }\n    messaging(id: \"defaultAccount\") {\n      id\n      pubKey\n      pubSig\n      enabled\n      isKeysLoading\n      synced\n      syncProgress\n      totalUnread\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Messaging.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "data($id: ID!)", "content": "{\n          ship(id: $id) {\n            name\n            films {\n              id\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/ssr/server.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Portfolios", "content": "{\n    portfolios {\n      _id\n      title\n      company\n      companyWebsite\n      location\n      jobTitle\n      description\n      startDate\n      endDate\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "todos", "content": "{\n        todos {\n          id\n          name\n          description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getAllUsers($role: String, $search: String)", "content": "{\n    getAllUsers(role: $role, search: $search){\n      _id\n      email\n      profile{\n        name \n        image\n        carrierType\n        neighborhood\n        vehical {\n          vehicalTypeId\n          brand\n          color\n          model\n          plateNumber\n          valuePerKm\n          status\n        }\n      }\n      username\n      roles\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/queries.js", "repo": "whitehorse21_Vehicle"}}, {"type": "query", "name": "One", "content": "{\n          one\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mergeUsers($sourceId: ID!, $targetId: ID!)", "content": "{\n    mergeUsers(\n      sourceUserId: $sourceId\n      targetUserId: $targetId\n    ) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Merge/index.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "query", "name": "existUser($where: UserWhereInput)", "content": "{\n      existUser(where: $where)\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "DeltetRestaurant($id:String!)", "content": "{\n  deleteRestaurant(id:$id){\n    _id\n    isActive\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/RestaurantList.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "Comment($repoName: String!)", "content": "{\n      entry(repoFullName: $repoName) {\n        comments {\n          ...authorFields\n        }\n      }\n    }\n\n    fragment authorFields on User {\n      postedBy {\n        login\n        html_url\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "MakeOffer(\n    $listingID: String\n    $finalizes: Int\n    $affiliate: String\n    $commission: String\n    $value: String\n    $currency: String\n    $arbitrator: String\n    $data: MakeOfferInput\n    $from: String\n    $withdraw: String\n    $quantity: Int\n    $autoswap: Boolean\n  )", "content": "{\n    makeOffer(\n      listingID: $listingID\n      finalizes: $finalizes\n      affiliate: $affiliate\n      commission: $commission\n      value: $value\n      currency: $currency\n      arbitrator: $arbitrator\n      data: $data\n      from: $from\n      withdraw: $withdraw\n      quantity: $quantity\n      autoswap: $autoswap\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "createTask($taskGroupID: UUID!, $name: String!, $position: Float!, $assigned: [UUID!])", "content": "{\n    createTask(input: { taskGroupID: $taskGroupID, name: $name, position: $position, assigned: $assigned }) {\n      ...TaskFields\n    }\n  }\n  ${TASK_FRAGMENT}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/createTask.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "poolHourData($pool: String, $startTimestamp: Int, $endTimestamp: Int)", "content": "{\n    poolHourDatas(\n      first: 1000\n      where: {\n        pool: $pool\n        periodStartUnix_gte: $startTimestamp\n        periodStartUnix_lte: $endTimestamp\n      }\n      orderBy: periodStartUnix\n      orderDirection: asc\n      subgraphError: allow\n    ) {\n      periodStartUnix\n      volumeUSD\n      tvlUSD\n      feesUSD\n      untrackedVolumeUSD\n      token0Price\n      token1Price\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n  uploadFiles(files: $files) {\n    filename\n  }\n}", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/upload/file-upload.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "Escalate($id: ID!)", "content": "{\n    escalate(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/test-message/documents.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "getThreadMessages(\n    $id: ID!\n    $after: String\n    $first: Int\n    $before: String\n    $last: Int\n  )", "content": "{\n    thread(id: $id) {\n      ...threadInfo\n      ...threadMessageConnection\n    }\n  }\n  ${threadInfoFragment}\n  ${threadMessageConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/thread/getThreadMessageConnection.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "SetVoteWeightedId($id: Int!)", "content": "{\n    setVoteWeightedId(id: $id)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/PlayerTable.js", "repo": "thomas81528262_wolf"}}, {"type": "query", "name": "ViewerQuery", "content": "{\n    viewer {\n      id\n      name\n      status\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/api-routes-apollo-server-and-client/pages/index.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createUser ($username: String!, $password: String!, $firstName: String!, $lastName: String!, $email: String!, $roles: String!, $genre: String!, $code: String)", "content": "{\n                    createUser (username: $username, password: $password, firstName: $firstName, lastName: $lastName, email: $email, roles: $roles, genre: $genre, code: $code){\n                        user{\n                            username\n                        }\n                    }\n\n                    tokenAuth(username: $username, password: $password){\n                        token\n                        user{\n                          username\n                          roles{\n                            role\n                          }\n                          userpreferences{\n                            inappropiateLanguage\n                          }\n                        }\n                      }\n                }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "query", "name": "somethingelse", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Query.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "SubmitBamboraPayment(\n    $paymentId: ID!\n    $transition: String!\n    $input: BamboraPaymentInput!\n  )", "content": "{\n    payment: submitBamboraPayment(\n      paymentId: $paymentId\n      transition: $transition\n      paymentInput: $input\n    ) {\n      ...Payment\n    }\n  }\n  ${PaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/checkout/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "updateProjectLabel($projectLabelID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  updateProjectLabel(\n    input: {projectLabelID: $projectLabelID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "SignupMutation($name: String!, $email: String!, $password: String!, $confirmPassword: String!)", "content": "{\n        signup(name: $name, email: $email, password: $password, confirmPassword: $confirmPassword) {\n            email\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "query", "name": "ArtsySearch(\n          $query: String!,\n          $after: String, $first: Int,\n          $before: String, $last: Int,\n        )", "content": "{\n          search(\n            query: $query,\n            after: $after, first: $first,\n            before: $before, last: $last,\n          ) {\n            edges {\n              __typename\n              node {\n                __typename\n                displayLabel\n                ... on Artist { __typename href bio }\n                ... on SearchableItem { __typename description }\n              }\n            }\n            pageInfo {\n              __typename\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n            }\n            totalCount\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Coupons", "content": "{\n    coupons {\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Coupons.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "associateUserAccountWithAccount(\n\t\t$emailAddress: String!\n\t\t$accountKey: String!\n\t)", "content": "{\n\t\tcreateAccountUserAccountByExternalReferenceCodeByEmailAddress(\n\t\t\texternalReferenceCode: $accountKey\n\t\t\temailAddress: $emailAddress\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "queryA", "content": "{\n        person(id: \"abc\") {\n          __typename\n          id\n          firstName\n          lastName\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "UpdatePositionCapital ($symbol: String, $capital: Float)", "content": "{\n        updatePositionCapital (symbol: $symbol, capital: $capital) {\n            symbol\n            direction\n            conditionalEntryPrice\n            startingCapital\n            tradingId\n            value\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}}, {"type": "query", "name": "($skip: Float!, $limit: Float!)", "content": "{\n        articles(other: {skip: $skip, take: $limit, order: {id: \"DESC\"}}) {\n            id\n            name\n            description\n            content\n            imageURL\n            user {\n                id\n                username\n                look\n            }\n        }\n    }", "metadata": {"commit_hash": "1e1ae34a4cb9851be03dde109eade1c264843c75", "file": "libs/web/src/hooks/fetch-articles.hook.ts", "repo": "chrismpettyjohn_imagine-cms"}}, {"type": "query", "name": "Simple($variable: String!)", "content": "{\n        field(usingVariable: $variable) @client\n        networkField(usingVariable: $variable)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "($hash: ID!)", "content": "{\n    transaction(hash: $hash) {\n      hash\n      blockHash\n      blockNumber\n      to\n      from\n      data\n      gasLimit {\n        _hex\n      }\n      gasPrice {\n        _hex\n      }\n      transactionIndex\n      nonce\n      confirmations\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/context/configuration.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "Taxes", "content": "{\n  taxes {\n    _id\n    taxationCharges\n    enabled\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/RestaurantDetailComponent/RestaurantCart/MRestaurantCart.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "addComment($input: CommentInput!)", "content": "{\n    addComment(input: $input) {\n      id\n      commentId\n      message\n      isReply\n      cover\n      likes\n      user {\n        id\n        fullName\n        photo\n        totalLikes\n        createdAt\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}}, {"type": "mutation", "name": "($message: InputMessage!)", "content": "{\n  message: createMessage(message: $message) {\n    id,\n    chatId\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "lib/sender-factory/store-messages.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "mutation", "name": "changeConversationOperator(\n            $_id: String!\n            $operatorStatus: String!\n          )", "content": "{\n            changeConversationOperator(\n              _id: $_id\n              operatorStatus: $operatorStatus\n            )\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "widgets/client/messenger/containers/AppContext.tsx", "repo": "erxes_erxes-community"}}, {"type": "subscription", "name": "UserInfo($name: String)", "content": "{\n        user(name: $name) {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/subscriptions.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "UploadToken($pushToken:String!)", "content": "{\n  uploadToken(pushToken:$pushToken){\n    _id\n    push_token\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/index.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "CreateUser($phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)", "content": "{\n        createUser(userInput:{\n            phone:$phone,\n            email:$email,\n            password:$password,\n            name:$name,\n            notificationToken:$notificationToken,\n            appleId:$appleId\n        }){\n            userId\n            token\n            tokenExpiration\n            name\n            email\n            phone\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/VerifyEmail/VerifyEmail.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "unassignTask($taskID: UUID!, $userID: UUID!)", "content": "{\n  unassignTask(input: {taskID: $taskID, userID: $userID}) {\n    assigned {\n      id\n      fullName\n    }\n    id\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "getDirectMessageThread($id: ID!)", "content": "{\n    directMessageThread(id: $id) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getDirectMessageThread.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "($message: InputMessage!)", "content": "{\n  message: createMessage(message: $message) {\n    id,\n    chatId\n  }\n}", "metadata": {"commit_hash": "3c7dae52dea8fd06c50f15a0f69457e0f936a430", "file": "lib/sender-factory/store-messages.js", "repo": "jinstar0112_node-red-contrib-chatbot"}}, {"type": "query", "name": "categories", "content": "{\n      categories{\n          _id\n          title\n          description\n          img_menu\n    }}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "createEpisode($data: EpisodeInput!)", "content": "{\n    createEpisode(data: $data) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/geeksblabla.com/src/components/Suggest/graphql/mutation.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "PublicChatRoomList($private: Boolean, $limit: Int, $offset: Int)", "content": "{\n      allChatroomsLo(private: $private, limit: $limit, offset: $offset) {\n        edges {\n          node {\n            ...ChatRoom\n          }\n        }\n        totalCount\n      }\n    }\n    ${ChatRoomFragment}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/components/ChatRoomList/index.js", "repo": "heyrict_cindy-realtime"}}, {"type": "query", "name": "UserOAuthQueryUrl($req: ApiReqUserOAuthQueryUrl!)", "content": "{\n      user {\n        oauthUrl(req: $req) {\n          platform,\n          authorizeUrl,\n        }\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}}, {"type": "query", "name": "currentAuthorPostCount($authorId: Int!)", "content": "{\n        currentAuthor {\n          name\n          authorId @export(as: \"authorId\")\n        }\n        postCount(authorId: $authorId)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "tokens($tokenAddress: Bytes!)", "content": "{\n    tokens(where: { id: $tokenAddress }) {\n      derivedETH\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "4202e3dbff9a01b8b4c38cd45af7fa8ba421799e", "file": "src/components/App.js", "repo": "tashapais_graphql-dai-display"}}, {"type": "mutation", "name": "CreateService($input: CreateServiceInput!)", "content": "{\n    service: createService(service: $input) {\n      ...Service\n    }\n  }\n  ${ServiceFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "SkillForceImportClient(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )", "content": "{\n    skillForceImportClient(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/skillforce_import_client.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\") {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "listDatasetTableProfilingRuns($tableUri: String!)", "content": "{\n      listDatasetTableProfilingRuns(tableUri: $tableUri) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          profilingRunUri\n          GlueJobRunId\n          GlueTableName\n          results\n          created\n          status\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/listDatasetTableProfilingRuns.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "postRequiringReview($reviewerId: Int!)", "content": "{\n          postRequiringReview {\n            id\n            title\n            currentReviewer @client {\n              id @export(as: \"reviewerId\")\n            }\n          }\n          reviewerDetails(reviewerId: $reviewerId) {\n            name\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/export.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "IssuesSearch($query: String!)", "content": "{\n  search(query:$query,type:ISSUE,last:10) {\n    nodes {\n      ... on Issue {\n        ...issueFields\n        ...popularityFields\n        ...commentFields\n      }\n    }\n  }\n}\n\n${issueFragment}\n${popularityFragment}\n${commentFragment}", "metadata": {"commit_hash": "5358526a9bb7c3ab826658a613e5b487b064a682", "file": "src/server/apis/issues.ts", "repo": "PolymerLabs_project-health"}}, {"type": "mutation", "name": "unfollowCommunity($url: String)", "content": "{\n    unfollowCommunity(url: $url) {\n      id\n      members {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Community.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "query", "name": "($shouldSkip: Boolean)", "content": "{\n        fortuneCookie @skip(if: $shouldSkip)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/directives.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getPivotRolePresignedUrl($organizationUri: String!)", "content": "{\n      getPivotRolePresignedUrl(organizationUri: $organizationUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/getPivotRolePresignedUrl.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Order/Order.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "loadBot($id: UUID!, $limit: Int, $cursor: String)", "content": "{\n          bot(id: $id) {\n            items(after: $cursor, first: $limit) {\n              ${BOT_POST_LIST_PROPS}\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "UpdateStudentMutation($id: uuid!, $firstname: String, $lastname: String, $contact: String, $gender: String, $birth_date: String)", "content": "{\n        update_students(where: {id: {_eq: $id}}, _set: {firstname: $firstname, lastname: $lastname, contact: $contact, gender: $gender, birth_date: $birth_date}) {\n            affected_rows\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/mutations/students.js", "repo": "v08nike_ESL-Learning-Center"}}, {"type": "mutation", "name": "submitComment($repoFullName: String!, $commentContent: String!)", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.hooks.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "removeUser($id: ID!)", "content": "{\n    removeUser(id: $id)\n}", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/mutations.js", "repo": "Morgoth27_pewpew_spaceman"}}, {"type": "query", "name": "getStations", "content": "{\n    stations \n      @rest(\n          type: \"Station\" \n          path: \"/stations\" \n          method: \"GET\"\n      ) {\n      stationId\n      stationName\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/station/ApolloStation.js", "repo": "ymkmoon_toyseven-react"}}, {"type": "mutation", "name": "editUserPreferences($username: String!, $inappropiateLanguage: Boolean!, $userToken: String!)", "content": "{\n            editUserPreferences(username: $username, inappropiateLanguage: $inappropiateLanguage, userToken: $userToken){\n                userPreferences{\n                    inappropiateLanguage\n                }   \n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "updatePatronKind($input: PatronKindUpdateInput!)", "content": "{\n        updatePatronKind(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/patronKind.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "allCities($city: CityInput)", "content": "{\n        allCities(city: $city) {\n        name\n        id\n        }\n    }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-event/registerEvent.queries.js", "repo": "midianinja_som-web"}}, {"type": "mutation", "name": "hideNotification($id: ID!)", "content": "{\n        hideNotification(id: $id)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlHideNotification.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "getChannelThreadConnection($id: ID, $after: String)", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelThreadConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelThreadConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannelThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "Listing($listingId: ID!)", "content": "{\n    marketplace {\n      listing(id: $listingId) {\n        ...basicListingFields\n        ... on Listing {\n          allOffers {\n            ...basicOfferFields\n          }\n          events {\n            id\n            event\n            blockNumber\n            block {\n              id\n              timestamp\n            }\n            returnValues {\n              ipfsHash\n              party\n              offerID\n              listingID\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ${fragments.Listing.basic}\n  ${fragments.Offer.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Listing.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "DeleteCategory($id:String!)", "content": "{\n        deleteCategory(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Category.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "query", "name": "AllTodos", "content": "{\n    todos: allTodos {\n      id\n      title\n      completed\n    }\n  }", "metadata": {"commit_hash": "1692f891caba032a215afa5fd33ba9be063f9162", "file": "src/apollo/todos.js", "repo": "Andryuha-Nikolaev_apollo-graphql-todo"}}, {"type": "mutation", "name": "($emailToken: String!)", "content": "{\n        confirmEmail(emailToken: $emailToken)\n      }", "metadata": {"commit_hash": "8c0fb55d246c2e0a35475d7168d3a427a5d44c80", "file": "apps/pwa/src/app/auth/services/auth.service.ts", "repo": "mIaborde_fullstack"}}, {"type": "mutation", "name": "DeleteBirthCertificateUploadedFile(\n    $attachmentKey: String!\n    $uploadSessionId: String!\n  )", "content": "{\n    deleteUpload(\n      type: BC\n      attachmentKey: $attachmentKey\n      uploadSessionID: $uploadSessionId\n    ) {\n      message\n      success\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/delete-birth-certificate-uploaded-file.ts", "repo": "CityOfBoston_digital"}}, {"type": "query", "name": "($currentPage: Int)", "content": "{\n        withdrawals(currentPage: $currentPage) {\n        list {\n            id\n            price\n            name\n            phone\n            account\n            remark\n            status\n            createdAt\n            card\n            }\n            pagination {\n                total\n                current\n                pageSize\n            }\n        }\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/account/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}}, {"type": "mutation", "name": "startDatasetProfilingRun($input: StartDatasetProfilingRunInput!)", "content": "{\n      startDatasetProfilingRun(input: $input) {\n        profilingRunUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/startProfilingRun.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "SendFromNode($from: String!, $to: String!, $value: String!)", "content": "{\n    sendFromNode(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "setContenthash($name: String, $recordValue: String)", "content": "{\n    setContenthash(name: $name, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "neighbourhoodHasTelepresenceAdapter($perspectiveUUID: String!)", "content": "{\n                neighbourhoodHasTelepresenceAdapter(perspectiveUUID: $perspectiveUUID)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "UpdateUserMutation($id: String!, $input: UpdateUserInput!)", "content": "{\n    updateUser(id: $id, input: $input) {\n      address\n      authDetailId\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/EditUserCell/EditUserCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "query", "name": "ListDatasetShareObjects(\n      $datasetUri: String!\n      $filter: ShareObjectFilter\n    )", "content": "{\n      getDataset(datasetUri: $datasetUri) {\n        shares(filter: $filter) {\n          page\n          pages\n          pageSize\n          hasPrevious\n          hasNext\n          count\n          nodes {\n            shareUri\n            created\n            owner\n            status\n            userRoleForShareObject\n            statistics {\n              tables\n              locations\n            }\n            principal {\n              principalId\n              principalType\n              principalName\n              principalIAMRoleName\n              SamlGroupName\n              environmentUri\n              environmentName\n              AwsAccountId\n              region\n              organizationUri\n              organizationName\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/listDatasetShareObjects.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "Environment($id: String!)", "content": "{\n    environment(id: $id) {\n      puppetclasses {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "01a4dae6e1f33a3c2311888f9c771e0a3adc60e6", "file": "src/graphql/queries/puppetClassesByEnvironment.js", "repo": "dm-drogeriemarkt_lisa"}}, {"type": "query", "name": "BlogPosts($uid: String!)", "content": "{\n    blogPosts(where: { uid: $uid }) {\n      Title\n      SubTitle\n      published_at\n      blog_author {\n        Name\n        Title\n        Image {\n          formats\n        }\n      }\n      CoverImage {\n        url\n      }\n      Content\n    }\n  }", "metadata": {"commit_hash": "7d4fb9ff93d346028d5d0c71c4512b2f7edf82bb", "file": "react-frontend/src/queries/blog/blog.js", "repo": "bcgov_digital.gov.bc.ca"}}, {"type": "query", "name": "($first: Int!, $type: String, $startCursor: String, $endCursor: String)", "content": "{\n    searchRepositories(\n      first: $first\n      type: $type\n      startCursor: $startCursor\n      endCursor: $endCursor\n    ) {\n      repositoryCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      nodes {\n        name\n        description\n        url\n        owner {\n          login\n          url\n          avatarUrl\n        }\n        stargazers {\n          totalCount\n        }\n        primaryLanguage {\n          name\n          color\n        }\n        languages {\n          totalCount\n          nodes {\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "07d639ac71294027bea24a9f969429dfac8c2491", "file": "src/components/RepositoryOverview.tsx", "repo": "wslyvh_buidl-explorer"}}, {"type": "query", "name": "blocks($timestampFrom: Int!, $timestampTo: Int!)", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "mutation", "name": "REMOVE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $deleteChildren: Boolean)", "content": "{\n        treeDeleteElement(treeId: $treeId, nodeId: $nodeId, deleteChildren: $deleteChildren)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/trees/removeTreeElementMutation.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "FetchConditions($campaignId: ID)", "content": "{\n    allConditions(filter: {\n      campaign: {\n        id: $campaignId\n      }\n    }) {\n      id\n      name\n      notificationType\n      pointReward\n      active\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCampaign.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "CreateTodoMutation($description: String!)", "content": "{\n    createTodo(description: $description) {\n      id\n      description\n      isDone\n    }\n  }", "metadata": {"commit_hash": "f787b31d5bf36dc74ea6030ce1982f331c8cf362", "file": "src/screens/Todo/TodoInput.js", "repo": "vctormb_react-todolist-apollo-prisma"}}, {"type": "query", "name": "Coupons", "content": "{\n        coupons {\n          _id\n          code\n          discount\n          enabled\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Coupons.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "editUser($userId: ID!, $input: EditUserInput!)", "content": "{\n        editUser(userId: $userId, input: $input) {\n            _id\n            name\n            last_name\n            email\n            occupation\n            birthday\n            avatar\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditUser.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "setNotificationAsReadByUserId($externalId: ID!, $recipient: ID!)", "content": "{\n        setNotificationAsReadByUserId(\n            externalId: $externalId\n            recipient: $recipient\n        )\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlSetNotificationAsReadByUserId.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "Luke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/recycler.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo($text: String!)", "content": "{\n    createTodo {\n      id\n      text\n      completed\n      __typename\n    }\n    __typename\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Mutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "DeleteProfile($username: String)", "content": "{\n    createPublicProfile(username: $username)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/deleteProfileMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "Orders", "content": "{\n    restaurantOrders{\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        details\n        label\n      }\n      items{\n        _id\n        title\n        description\n        image\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          description\n          title\n          quantityMinimum\n          quantityMaximum\n        }\n        specialInstructions\n        isActive\n        createdAt\n        updatedAt\n      }\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      status\n      paymentStatus\n      reason\n      isActive\n      createdAt\n      orderDate\n      deliveryCharges\n      isPickedUp\n      preparationTime\n      acceptedAt\n      isRinged\n      rider{\n        _id\n        name\n        username\n        available\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useOrderRing.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "renameList($name: String!, $url: String!, $listId: Int!)", "content": "{\n    renameList(name: $name, url: $url, listId: $listId) {\n      message\n      success\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/mutations/renamelist.js", "repo": "Marikita1007_prestashop_youtube"}}, {"type": "query", "name": "tokenDayDatas($date: Int)", "content": "{\n    tokenDayDatas(\n      first: 150\n      orderBy: totalLiquidityUSD\n      orderDirection: desc\n    ) {\n      id\n      date\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "tokens($tokenAddress: Bytes!)", "content": "{\n    tokens(where: { id: $tokenAddress }) {\n      derivedETH\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "4202e3dbff9a01b8b4c38cd45af7fa8ba421799e", "file": "src/components/App.js", "repo": "tashapais_graphql-dai-display"}}, {"type": "query", "name": "channel($url: String!)", "content": "{\n    channel(url: $url) {\n      id\n      name\n      url\n      description\n      community {\n        members {\n          username\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "query", "name": "Repos", "content": "{\n  repos(first: 1000) {\n    id\n    name\n    registryName\n    versionCount\n    lastVersion {\n      semanticVersion\n      contentUri\n      timestamp\n    }\n  }\n}", "metadata": {"commit_hash": "fe2e041cb933b5cd5acb5049391afb2f80ba8502", "file": "src/generated/graphql.tsx", "repo": "dappnode_explorer"}}, {"type": "subscription", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "pushNotificationsEnable($input: PushNotificationsEnableInput!)", "content": "{\n          pushNotificationsEnable(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "loginByEmail($email: String!, $password: String!)", "content": "{\n    __typename\n    authenticate(input: { email: $email, password: $password }) {\n      jwtToken\n      __typename\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "importDashboard($dashboardUri: String!)", "content": "{\n      deleteDashboard(dashboardUri: $dashboardUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/deleteDashboard.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "repoPermission($owner: String!, $name: String!)", "content": "{\n    repository(owner: $owner, name: $name) {\n      ...RepositoryParts\n      viewerPermission\n    }\n  }\n  ${fragments.repository}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/queries.ts", "repo": "starknet-io_starknet-website"}}, {"type": "query", "name": "User($user_id: String!, $platform_id: String!, $order: [String], $offset: Int!, $limit: Int!)", "content": "{\n  user(id: $user_id, platform_id: $platform_id) {\n    id\n    name\n    person {\n      id\n      name\n      country\n    }\n    meta_ranks(ladder_ids: [131, 132]) {\n      rating\n      rank\n      streak\n      ladder {\n        platform_id\n        id\n        name\n      }\n      rate_by_day {\n        date\n        count\n      }\n    }\n    top_map {\n      name\n    }\n    top_civilization {\n      id\n      dataset_id\n      name\n    }\n    top_dataset {\n      name\n    }\n    matches(order: $order, offset: $offset, limit: $limit) {\n      count\n      hits {\n        ...MatchFragment\n      }\n    }\n  }\n}\n${MatchFragment}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/User.js", "repo": "SiegeEngineers_aocrecs.com"}}, {"type": "query", "name": "RepoMemos($repoId: ID!)", "content": "{\n    repo(id: $repoId) {\n      id\n      memos {\n        ...RepoMemo\n      }\n    }\n  }\n  ${MemoFragment}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/modules/memo/graphql.js", "repo": "orbiting_publikator-frontend"}}, {"type": "query", "name": "getCommunityByMatch($slug: LowercaseString)", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunity.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "HeroDetailsWithFragment($episode: Episode)", "content": "{\n    hero(episode: $episode) {\n      ...HeroDetails\n    }\n  }\n  ${HeroDetailsFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "getProject($projectId: ID!)", "content": "{\n        getProject(projectId: $projectId) {\n            _id\n            name\n            description\n            image\n            color\n            privacy\n            modules_order\n            members {\n                user {\n                    _id\n                    avatar\n                    name\n                    last_name\n                    email\n                    color\n                }\n                role {\n                    _id\n                    name\n                }\n                team {\n                    _id\n                    name\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetProject.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "Book($isbn: string)", "content": "{\n        book(isbn: $isbn) {\n          title\n          isbn\n          author {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/entityStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "ChangePassword($oldPassword:String!,$newPassword:String!)", "content": "{\n  changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Profile/ChangePassword.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "GetOrganizationTimeline($organizationId: ID!, $from: Time!, $size: Int!)", "content": "{\n  organization(id: $organizationId) {\n    id\n    timelineEvents(from: $from, size: $size) {\n      ... on Meeting {\n        ...MeetingTimelineEventFragment\n        describedBy {\n          contentType\n          content\n          id\n          analysisType\n          source\n        }\n      }\n      ... on PageView {\n        id\n        application\n        startedAt\n        endedAt\n        engagedTime\n        pageUrl\n        pageTitle\n        orderInSession\n        sessionId\n        source\n      }\n      ... on Issue {\n        id\n        createdAt\n        updatedAt\n        subject\n        status\n        priority\n        source\n        description\n        externalLinks {\n          type\n          externalId\n          externalUrl\n        }\n        tags {\n          id\n          name\n        }\n      }\n      ... on Analysis {\n        id\n        createdAt\n        content\n        contentType\n        analysisType\n        describes {\n          __typename\n          ...InteractionEventFragment\n          ...InteractionSessionFragment\n        }\n        source\n        sourceOfTruth\n      }\n      ... on Conversation {\n        id\n        startedAt\n        subject\n        channel\n        updatedAt\n        messageCount\n        contacts {\n          id\n          lastName\n          firstName\n        }\n        users {\n          id\n          lastName\n          firstName\n          emails {\n            email\n          }\n        }\n        source\n        appSource\n        initiatorFirstName\n        initiatorLastName\n        initiatorUsername\n        initiatorType\n        threadId\n      }\n      ... on InteractionSession {\n        ...InteractionSessionFragment\n        source\n      }\n      ... on InteractionEvent {\n        ...InteractionEventFragment\n        source\n      }\n      ... on Note {\n        id\n        html\n        createdAt\n        source\n        noted {\n          ... on Organization {\n            id\n            organizationName: name\n          }\n          ... on Contact {\n            ...ContactNameFragment\n          }\n        }\n        createdBy {\n          id\n          firstName\n          lastName\n        }\n        includes {\n          id\n          name\n          mimeType\n          extension\n          size\n        }\n        mentioned {\n          ... on Issue {\n            subject\n            externalLinks {\n              type\n              externalId\n              externalUrl\n            }\n          }\n        }\n      }\n      ... on Action {\n        id\n        actionType\n        createdAt\n        source\n        createdBy {\n          id\n          firstName\n          lastName\n        }\n      }\n    }\n  }\n}\n    ${MeetingTimelineEventFragmentFragmentDoc}\n${InteractionEventFragmentFragmentDoc}\n${InteractionSessionFragmentFragmentDoc}\n${ContactNameFragmentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "editPost($id: ID, $content: String, $title: String)", "content": "{\n        updatePosts(\n            where: { id: $id }\n            update: { content: $content, title: $title }\n        ) {\n            posts {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}}, {"type": "query", "name": "isLoggedIn", "content": "{\n        isLoggedIn @client\n        role @client\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/Router/ProtectedRoute.js", "repo": "sujoys10_food-at-you"}}, {"type": "query", "name": "Four", "content": "{\n          four\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Feed($type: FeedType!)", "content": "{\n        # Eventually move this into a no fetch query right on the entry\n        # since we literally just need this info to determine whether to\n        # show upvote/downvote buttons\n        currentUser {\n          login\n        }\n        feed(type: $type) {\n          createdAt\n          score\n          commentCount\n          id\n          postedBy {\n            login\n            html_url\n          }\n          repository {\n            name\n            full_name\n            description\n            html_url\n            stargazers_count\n            open_issues_count\n            created_at\n            owner {\n              avatar_url\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "disableCommunityTokenJoin($input: DisableCommunityTokenJoinInput!)", "content": "{\n    disableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/disableCommunityTokenJoin.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "unregisterApplication($id: ID!)", "content": "{\n    unregisterApplication(id: $id) {\n      name\n      providerName\n      description\n      labels\n      id\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Applications/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "viewResultPreview($viewId: ID!)", "content": "{\n        preview_view_result(id: $viewId) {\n            success\n            error\n            result\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/view-result-preview.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "deleteEje($where: EjeWhereUniqueInput!)", "content": "{\n    deleteEje(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "($teamId: Int!, $name: String!, $public: Boolean, $members: [Int!])", "content": "{\n    createChannel(teamId: $teamId, name: $name, public: $public, members: $members) {\n      ok\n      channel {\n        id\n        name\n        dm\n      }\n    }\n  }", "metadata": {"commit_hash": "0e3e45f89965e916bc2cdc610c2a157061b9797a", "file": "slack/client/src/components/AddChannelModal.js", "repo": "vnscriptkid_system-design-practice"}}, {"type": "mutation", "name": "editUser($userId: ID!, $input: EditUserInput!)", "content": "{\n        editUser(userId: $userId, input: $input) {\n            _id\n            name\n            last_name\n            email\n            occupation\n            birthday\n            avatar\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditUser.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "newsletterSubscriptions($id: String)", "content": "{\n    user(slug: $id) {\n      id\n      newsletterSettings {\n        id\n        status\n        subscriptions {\n          id\n          name\n          subscribed\n          isEligible\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/NewsletterSubscriptions.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "unarchiveCampaign($campaignId: String!)", "content": "{\n      unarchiveCampaign(id: $campaignId) {\n        id\n        isArchived\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignStats.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "query", "name": "getReverseRecord($address: String)", "content": "{\n    getReverseRecord(address: $address) {\n      name\n      address\n      avatar\n      match\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "toggleProjectVisibility($projectID: UUID!, $isPublic: Boolean!)", "content": "{\n    toggleProjectVisibility(input: { projectID: $projectID, isPublic: $isPublic }) {\n      project {\n        id\n        publicOn\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/toggleProjectVisibility.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "transactions($user: Bytes!)", "content": "{\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "getQuestionnaireResults($slug: String!, $orderFilter: [Int!])", "content": "{\n    questionnaire(slug: $slug) {\n      id\n      slug\n      questions(orderFilter: $orderFilter) {\n        id\n        text\n        turnout {\n          skipped\n          submitted\n        }\n        __typename\n        ... on QuestionTypeRange {\n          ticks {\n            label\n            value\n          }\n          result {\n            median\n            histogram(ticks: 10) {\n              x0\n              x1\n              count\n            }\n          }\n        }\n        ... on QuestionTypeChoice {\n          results: result {\n            count\n            option {\n              label\n              category\n            }\n          }\n          options {\n            label\n          }\n        }\n        ... on QuestionTypeImageChoice {\n          results: result {\n            count\n            option {\n              label\n              category\n            }\n          }\n          options {\n            label\n          }\n        }\n        ... on QuestionTypeDocument {\n          results: result(min: 3, top: 20) {\n            count\n            document {\n              meta {\n                title\n                path\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/Results.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "pauseRedshiftCluster($clusterUri: String!)", "content": "{\n      pauseRedshiftCluster(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/pauseCluster.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "deleteRef($deleteRefInput: DeleteRefInput!)", "content": "{\n    ${deleteRefMutationPart}\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateUserRole($userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateUserRole(input: {userID: $userID, roleCode: $roleCode}) {\n    user {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "ViewMessagesQuery($listingId: String!)", "content": "{\n    messages(listingId: $listingId) {\n      text\n      user {\n        id\n        email\n      }\n      listingId\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/ViewMessages/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "(\n    $id: ID!\n    $gratefulFor: String\n    $affirmation: String\n    $callSos: String\n    $research: String\n    $reading: ReadingInputType\n    $accountability: AccountabilityInputType\n    $awake: String\n    $asleep: String\n  )", "content": "{\n    updateSheet(\n      id: $id\n      gratefulFor: $gratefulFor\n      affirmation: $affirmation\n      callSos: $callSos\n      research: $research\n      reading: $reading\n      accountability: $accountability\n      awake: $awake\n      asleep: $asleep\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "8db46af968bcef7e9742a7c064e638ce68d05299", "file": "src/mutations/index.js", "repo": "ares524_dailyplannerFE"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        ...inDirection\n      }\n\n      fragment inDirection on Thing {\n        bar\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createReview ($valuedUser: String!, $evaluatorUser: String!, $text: String!, $relationship: String!, $rating: Int, $userToken: String!)", "content": "{\n            createReview (valuedUser: $valuedUser, evaluatorUser: $evaluatorUser, text: $text, relationship: $relationship, rating: $rating, userToken: $userToken){\n                review{\n                    text\n                    evaluatorUser{\n                        username\n                        firstName\n                        lastName\n                        profilePicture\n                        genre\n                    }\n                    valuedUser{\n                        averageRating\n                    }\n                    rating\n                    relationship\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "query", "name": "people", "content": "{\n    allPeople(first: 1) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "deleteRuntimeLabel($id: ID!)", "content": "{\n    deleteRuntimeLabel(runtimeID: $id, key: \"scenarios\") {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "deleteUser($userId: ID!)", "content": "{\n    deleteUser(userId: $userId) {\n      success\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/AlertDialog.jsx", "repo": "Dr169_Air-condition"}}, {"type": "query", "name": "Rider($id:String)", "content": "{\n    rider(id:$id){\n      _id\n      name\n      username\n      available\n    }\n  }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/components/Sidebar/Profile/Profile.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "createLiftMutation($userId: ID!, $movement: String!, $units: String!, $weight: Float!)", "content": "{\n    createLift(userId: $userId, movement: $movement, units: $units, weight: $weight) {\n      id\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "mutation", "name": "createUser($input: CreateUserInput!)", "content": "{\n        createUser(input: $input){\n            user{\n                name\n                email\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "saveBrandedLoginSettings($input: SaveBrandedLoginSettingsInput!)", "content": "{\n    saveBrandedLoginSettings(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/saveBrandedLoginSettings.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "messageSend($input: MessageSendInput!)", "content": "{\n          messageSend(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "getUncommittedChanges($repoId: ID!)", "content": "{\n    repo(id: $repoId) {\n      id\n      uncommittedChanges {\n        id\n        email\n        name\n        portrait(properties: { width: 160, height: 160 })\n      }\n      currentPhase {\n        lock\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/VersionControl/UncommittedChanges.js", "repo": "orbiting_publikator-frontend"}}, {"type": "mutation", "name": "UpdateListingMutation(\n    $listingId: String!\n    $input: UpdateListingInput!\n  )", "content": "{\n    updateListing(listingId: $listingId, input: $input)\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/UpdateListing/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "query", "name": "QUERY_GET_PRODUCT_AVAILABILITY($handle: String!)", "content": "{\n        productAvailability(handle: $handle) {\n            id\n            availableForSale\n            totalInventory \n        }\n    }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/product/queries/QUERY_GET_PRODUCT_AVAILABILITY.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "(\n        $beneficiaryID: String!\n        $outcomeSetID: String!\n        $conducted: String\n        $tags: [String]\n      )", "content": "{\n        newMeeting: AddMeeting(\n          beneficiaryID: $beneficiaryID\n          outcomeSetID: $outcomeSetID\n          conducted: $conducted\n          tags: $tags\n        ) {\n          ...defaultMeeting\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "query", "name": "getOnchainProposals($startBlock: Int!)", "content": "{\n  proposals(where: {proposalStatus_some: {AND: [{status: \"Proposed\"}, {blockNumber: {number_gte: $startBlock}}]}}) {\n    ...onchainProposal\n  }\n}\n    ${OnchainProposalFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/chain-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "ListWorksheets($filter: WorksheetFilter)", "content": "{\n      listWorksheets(filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          worksheetUri\n          label\n          description\n          tags\n          owner\n          created\n          userRoleForWorksheet\n          SamlAdminGroupName\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/listWorksheets.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateComment($input: CreateCommentInput!)", "content": "{\n      createComment(input: $input) {\n        id\n        content\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        field @client\n        other\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createItem($title: String!)", "content": "{\n    createItem(title: $title){\n      title\n    }\n  }", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "query", "name": "GetCurrencies", "content": "{\n    currencies {\n      __typename\n      ... on Currency {\n        id\n        name\n        code\n        priceInUSD\n      }\n      ... on Token {\n        decimals\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/hoc/withCurrencies.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "loadKvModels", "content": "{\n            kv_models {\n              name\n              description\n              formatType\n              pair {\n                collection\n                key\n                value\n                type\n              }\n            }\n          }", "metadata": {"commit_hash": "f75eb868e162036502c0689ff052e92fc355c631", "file": "src/adapters/graphql.ts", "repo": "danielwii_asuna-admin"}}, {"type": "mutation", "name": "RemoveMember($teamID: String!, $userID: String!)", "content": "{\n        removeMember(teamID: $teamID, userID: $userID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetUser($username: String!)", "content": "{\n    user(username: $username) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/testing/mocking/__tests__/MockedProvider.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getUserById($id: ID)", "content": "{\n    user(id: $id) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/user/getUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getOrganization($filters: OrganizationFilterType!)", "content": "{\n    organizations(filters: $filters) {\n      entities {\n        name\n        domains {\n          id\n          domain\n          isTopDomain\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/queries.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "subscription", "name": "UserInfo($name: String = \"Changping Chen\")", "content": "{\n          user(name: $name) {\n            name\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "GrowthCampaigns($first: Int, $after: String)", "content": "{\n    campaigns(first: $first, after: $after) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        endCursor\n      }\n      nodes {\n        ...basicCampaignFields\n      }\n    }\n  }\n  ${fragments.GrowthCampaign.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/AllGrowthCampaigns.js", "repo": "OriginProtocol_origin"}}, {"type": "subscription", "name": "OnUpdateTodo", "content": "{\n        onUpdateTodo {\n          id\n          description\n          name\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "addCommunityMembers($input: AddCommunityMembersInput!)", "content": "{\n    addCommunityMembers(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/addCommunityMembers.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "ItemUpdate($id: String!, $values: JSON)", "content": "{\n    itemUpdate(id: $id, values: $values) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_update.js", "repo": "bump44_rf-online-gs-editor"}}, {"type": "mutation", "name": "createTeamMember($userID: UUID!, $teamID: UUID!)", "content": "{\n  createTeamMember(input: {userID: $userID, teamID: $teamID}) {\n    team {\n      id\n    }\n    teamMember {\n      id\n      username\n      fullName\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "SampleQuery", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/ws/__tests__/webSocketLink.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "thing($requiredVar: String!, $optionalVar: String)", "content": "{\n      entry(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n        value\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n    updatePost(id: $id, votes: $votes) {\n      id\n      __typename\n      votes\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux/components/PostUpvoter.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "deleteClusterAddonsConfiguration($name: String!)", "content": "{\n    deleteClusterAddonsConfiguration(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}}, {"type": "query", "name": "GetPropertyByIdQuery ($propertyId: ID!, $organizationId: ID)", "content": "{\n        objs: allProperties(where: {id: $propertyId, organization: { id: $organizationId }}) {\n            id\n            address\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}}, {"type": "query", "name": "getActions($organizationId: String!)", "content": "{\n      availableActions(organizationId: $organizationId) {\n        name\n        display_name\n        instructions\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "query", "name": "Listing($id: ID!, $bookingsPage: Int!, $limit: Int!)", "content": "{\n    listing(id: $id) {\n      id\n      title\n      description\n      image\n      host {\n        id\n        name\n        avatar\n        hasWallet\n      }\n      type\n      address\n      city\n      bookings(limit: $limit, page: $bookingsPage) {\n        total\n        result {\n          id\n          tenant {\n            id\n            name\n            avatar\n          }\n          checkIn\n          checkOut\n        }\n      }\n      bookingsIndex\n      price\n      numOfGuests\n    }\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/queries/Listing/index.ts", "repo": "AllTwinkleStars_recat"}}, {"type": "mutation", "name": "renew($label: String, $duration: Int)", "content": "{\n    renew(label: $label, duration: $duration)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "Restaurant($id:String)", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Food/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "SendPasswordResetInstructions($email: String!)", "content": "{\n    sendResetPasswordInstructions(email: $email) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/SendPasswordResetInstructions.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "query", "name": "product($id:Int)", "content": "{\n        product(id:$id){\n            name,\n            locality,\n            aggregate_rating,\n        }\n    }", "metadata": {"commit_hash": "7be103722feda1e98931c7fc66ed44555445fb87", "file": "graphqlapp/src/Home.js", "repo": "Aakashdeveloper_edu_feb_React_22"}}, {"type": "mutation", "name": "sortTaskGroup($tasks: [TaskPositionUpdate!]!, $taskGroupID: UUID!)", "content": "{\n  sortTaskGroup(input: {taskGroupID: $taskGroupID, tasks: $tasks}) {\n    taskGroupID\n    tasks {\n      id\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "UpdateUser($name:String!,$phone:String!,$is_active:Boolean!)", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone,is_active:$is_active}){\n          _id\n          name\n          phone\n          is_active\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Profile/Profile.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    password\n    enable_email\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "subscription", "name": "onCommentAdded($repoFullName: String!)", "content": "{\n    commentAdded(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.customSuffix.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "GetActor($actorName: String)", "content": "{\n    getActor(filter: { name: $actorName }) {\n      name\n      born\n      movies {\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo-neo4j-graphql/pages/actor/[name].js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getTeam($teamID: UUID!)", "content": "{\n    findTeam(input: { teamID: $teamID }) {\n      id\n      createdAt\n      name\n      members {\n        id\n        fullName\n        username\n        role {\n          code\n          name\n        }\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n        owned {\n          teams {\n            id\n            name\n          }\n          projects {\n            id\n            name\n          }\n        }\n        member {\n          teams {\n            id\n            name\n          }\n          projects {\n            id\n            name\n          }\n        }\n      }\n    }\n    projects(input: { teamID: $teamID }) {\n      id\n      name\n      team {\n        id\n        name\n      }\n    }\n    users {\n      id\n      email\n      fullName\n      username\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      owned {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n      member {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/team/getTeam.ts", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "deleteTask($taskID: UUID!)", "content": "{\n  deleteTask(input: {taskID: $taskID}) {\n    taskID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "fetchLeia($id: String)", "content": "{\n          people_one(id: $id) {\n            name\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "pairDayDatas($timespan: Int!, $pairAddress: ID!)", "content": "{\n    pairDayDatas(\n      first: $timespan\n      orderBy: date\n      orderDirection: desc\n      where: { pairAddress: $pairAddress }\n    ) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n      date\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}}, {"type": "mutation", "name": "createPrice($input: PriceCreateInput!)", "content": "{\n        createPrice(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/price.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "Simple", "content": "{\n        field @live\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "CreateProfile", "content": "{\n    createProfile(\n      request: {\n        handle: \"jptestdev\"\n        profilePictureUri: null\n        followNFTURI: null\n        followModule: null\n      }\n    ) {\n      ... on RelayerResult {\n        txHash\n      }\n      ... on RelayError {\n        reason\n      }\n      __typename\n    }\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/createProfile.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}}, {"type": "query", "name": "selectOrganizationEmployee ($value: String, $organizationId: ID)", "content": "{\n        objs: allOrganizationEmployees(where: {name_contains_i: $value, organization: { id: $organizationId } }) {\n            id\n            name\n            email\n            user {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "AddSleepVariable($name: String!, $emoji: String!, $sleepDate: String!, $custom: Boolean!)", "content": "{\n  addSleepVariable(\n    custom: $custom\n    emoji: $emoji\n    name: $name\n    sleepDate: $sleepDate\n  ) {\n    date\n    variables {\n      name\n      emoji\n      custom\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "(\n        $beneficiaryID: String!\n        $outcomeSetID: String!\n        $daysToComplete: Int!\n        $tags: [String]\n      )", "content": "{\n        newRemoteMeeting: AddRemoteMeeting(\n          beneficiaryID: $beneficiaryID\n          outcomeSetID: $outcomeSetID\n          daysToComplete: $daysToComplete\n          tags: $tags\n        ) {\n          JTI\n        }\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "AddFavouriteMutation($domain: Domain)", "content": "{\n    addFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "ListInvalidPosts", "content": "{\n    allPosts {\n      idz\n      description\n      sections\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next/pages/index.js", "repo": "department-stockholm_apollo-component"}}, {"type": "mutation", "name": "createTweet(\n    $tweet: String,\n    $author: String,\n    $createdAt: DateTime\n  )", "content": "{\n    createTweet(\n      tweet: $tweet,\n      author: $author,\n      createdAt: $createdAt\n\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/React-Cookbook/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "health", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: \"${subgraphName}\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "mutation", "name": "AddMessage($id: ID! $post: String!)", "content": "{\n    createPost(id: $id post: $post) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/DashboardView/TextInput.tsx", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "addPostAndProposalMutation (\n        $onchainProposalId:Int!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_proposal_id: $onchainProposalId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getCommunitySettingsById($id: ID)", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunitySettings.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "DisputeOffer($offerID: String, $from: String)", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "getRoomKind($id: ID!)", "content": "{\n        roomKind(id: $id) {\n            id\n            name\n            isActive\n            amountOfPeople\n            numberOfBeds\n            rooms {\n                id\n                isActive\n                name\n                floor {\n                    id\n                }\n            }\n            currentPrice {\n                id\n                earlyCheckInFee\n                lateCheckOutFee\n                hourPrice\n                nightPrice\n                dayPrice\n                weekPrice\n                monthPrice\n            }\n            currentPriceVolatilities {\n                id\n                name\n                hourPrice\n                nightPrice\n                dayPrice\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room-kind.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "withdraw(\n    $uuid: String!\n    $group: String!\n    $fromDate: DateTime\n    $toDate: DateTime\n    $parentOrg: String\n  )", "content": "{\n    withdraw(\n      uuid: $uuid\n      group: $group\n      fromDate: $fromDate\n      toDate: $toDate\n      parentOrg: $parentOrg\n    ) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}}, {"type": "mutation", "name": "removeGroupFromOrganization(\n      $organizationUri: String!\n      $groupUri: String!\n    )", "content": "{\n      removeGroupFromOrganization(\n        organizationUri: $organizationUri\n        groupUri: $groupUri\n      ) {\n        organizationUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/removeGroup.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "SaveCurrencyConfiguration($configurationInput:CurrencyConfigurationInput!)", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Configuration/Currency/Currency.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "removeThreadReaction($input: RemoveThreadReactionInput!)", "content": "{\n    removeThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/removeThreadReaction.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "AllDemocracyProposalPosts($postType: Int!, $postTopic: Int!, $limit: Int! = 5)", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, topic: {id: {_eq: $postTopic}}, onchain_link: {onchain_proposal_id: {_is_null: false}}}\n    order_by: {onchain_link: {onchain_proposal_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_proposal_id\n      onchain_proposal(where: {}) {\n        id\n        proposalStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "updateIdea($id: ID!, $title: String!, $description: String, $upload: Upload)", "content": "{\n            updateIdea(id: $id, title: $title, description: $description, upload: $upload) {\n              id\n              title\n              description\n              imageUrl\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}}, {"type": "mutation", "name": "InsertSecret($appId: uuid!, $secret: ConfigEnvironmentVariableInsertInput!)", "content": "{\n  insertSecret(appID: $appId, secret: $secret) {\n    name\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "deleteRef($deleteRefInput: DeleteRefInput!)", "content": "{\n    ${deleteRefMutationPart}\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateTaskDueDate($taskID: UUID!, $dueDate: Time, $hasTime: Boolean!)", "content": "{\n  updateTaskDueDate(\n    input: {taskID: $taskID, dueDate: $dueDate, hasTime: $hasTime}\n  ) {\n    id\n    dueDate\n    hasTime\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "SearchProject($id: ID!)", "content": "{\n    economicResource(id: $id) {\n      id\n      name\n      images {\n        bin\n        mimeType\n      }\n      conformsTo {\n        name\n        id\n      }\n      primaryAccountable {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/ProjectDisplay.tsx", "repo": "interfacerproject_interfacer-gui"}}, {"type": "subscription", "name": "OnUpdateMember", "content": "{\n        onUpdateMember {\n          id\n          name\n          createdAt\n          updatedAt\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "loadMoreChannelMembers($id: ID, $first: Int, $after: String)", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelMemberConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelMemberConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannelMemberConnection.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "ConnectDiscordAccount($code: String!, $redirectPath: String!)", "content": "{\n    connectDiscordAccount(input: { code: $code, redirectPath: $redirectPath }) {\n      id\n      username\n      discriminator\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Discord.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "milestoneUpdateOrDeleteMany($input: [MilestoneUpdateInput!])", "content": "{\n      milestoneUpdateOrDeleteMany(input: $input) {\n        ...milestoneFullFields\n      }\n    }\n    ${MILESTONE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/milestone.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "query", "name": "people($first: Int)", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/queries/skip.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "views($id: String)", "content": "{\n    views(id: $id) @rest(type: \"Response\", path: \"resource_view_list?{args}\") {\n      result @type(name: \"View\") {\n        id\n        title\n        description\n        resources: resource_id\n        viewType: view_type\n        series\n        group\n        type: graph_type\n      }\n    }\n  }", "metadata": {"commit_hash": "f04b86dda45a53314422c3d42013f04980effa85", "file": "examples/ckan-2021/graphql/queries.ts", "repo": "datopian_portaljs"}}, {"type": "mutation", "name": "($id: Int!)", "content": "{\n  deleteRecord(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "739cce2fb9968ee28558b1787a18d6bacb88b298", "file": "core/user-record/pages/user-record.js", "repo": "guidone_node-red-contrib-chatbot"}}, {"type": "query", "name": "FetchUsers", "content": "{\n    allUsers {\n      id\n      displayName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/NewCampaign.js", "repo": "vecnazmaga_place-management"}}, {"type": "subscription", "name": "OnCreatePost", "content": "{\n          onCreatePost(postOwner: \"${USERNAME1}\") {\n              id\n              title\n              postOwner\n          }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/amplify-util-mock/src/__e2e__/subscriptions-with-auth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "myDiscussionNotificationSettings", "content": "{\n    meDiscussionNotification: me {\n      id\n      discussionNotificationChannels\n      defaultDiscussionNotificationOption\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/NotificationOptions.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "SubmitBamboraPayment(\n    $paymentId: ID!\n    $transition: String!\n    $input: BamboraPaymentInput!\n  )", "content": "{\n    payment: submitBamboraPayment(\n      paymentId: $paymentId\n      transition: $transition\n      paymentInput: $input\n    ) {\n      ...Payment\n    }\n  }\n  ${PaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/checkout/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "query", "name": "Restaurant($id:String)", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Food/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "fetchEternalFarm($farmId: ID)", "content": "{\n    eternalFarmings(where: { id: $farmId }) {\n      id\n      rewardToken\n      bonusRewardToken\n      pool\n      startTime\n      endTime\n      reward\n      bonusReward\n      rewardRate\n      bonusRewardRate\n      isDetached\n      tier1Multiplier\n      tier2Multiplier\n      tier3Multiplier\n      tokenAmountForTier1\n      tokenAmountForTier2\n      tokenAmountForTier3\n      multiplierToken\n      minRangeLength\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "Simple", "content": "{\n        field @live\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/directives.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "operationsAndSegments", "content": "{\n        operations: __type(name: \"Operation\") {\n            enumValues {\n                name\n            }\n        }\n        segments {\n            id\n            name\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "UpdateUser($input: updateUserInput)", "content": "{\n  updateUser(input: $input) {\n    _id\n    alias\n    givenName\n    surName\n    displayName\n    email\n    apiAccess\n    roles\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/user-gql.js", "repo": "Duke-MatSci_materialsmine"}}, {"type": "mutation", "name": "setCredentialsConfirm($address: String!, $email: String, $signature: String!, $username: String!, $password: String!)", "content": "{\n\t\tsetCredentialsConfirm(address: $address, email: $email, signature: $signature, username: $username, password: $password) {\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getUserId($slug: String!)", "content": "{\n    user(slug: $slug) {\n      id\n      name\n      statement\n      portrait\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Climatelab/Questionnaire/Person.js", "repo": "republik_plattform"}}, {"type": "query", "name": "($templateId: ID!)", "content": "{\n      getTemplate(templateId: $templateId){\n          _id\n          title\n          templateType\n          content\n          treeTemplate\n          filenames\n          filetypes\n          createdDate\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "getCurrency($currentPage: Int, $searchList: String)", "content": "{\n        getCurrency(currentPage: $currentPage, searchList:$searchList){\n          count\n          currencyList{\n              id\n              symbol\n              isEnable\n              isPayment\n              isBaseCurrency\n          }\n        }\n      }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Currency/updateCurrency.js", "repo": "gstech0322_Wooberly-Admin"}}, {"type": "query", "name": "($address: ID!)", "content": "{\n    contract(address: $address) {\n      address\n      name\n      abi\n      event_topics\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "Upload($id: ID!)", "content": "{\n    uploadFile(id: $id) {\n      data {\n        id\n        attributes {\n          url\n          name\n          ext\n          formats\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Upload.ts", "repo": "h3lpkey_fibber"}}, {"type": "query", "name": "getCommunityTopMembers($id: ID)", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      topMembers {\n        ...communityMemberInfo\n      }\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunityTopMembers.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "(\n    $day: Int\n    $month: Int\n    $orderDirection: OrderDirection\n    $skip: Int\n    $first: Int\n  )", "content": "{\n    totalManagers: managers {\n      id\n    }\n    managers(\n      orderBy: total_value_locked_usd\n      orderDirection: $orderDirection\n      skip: $skip\n      first: $first\n    ) {\n      id\n      pool_count\n      unique_investors\n      total_value_locked_usd\n      TVLDay: total_value_locked(\n        where: { base: \"usd\", timestamp_gt: $day }\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n      TVLMonthly: total_value_locked(\n        where: { base: \"usd\", timestamp_gt: $month }\n        first: 1\n      ) {\n        timestamp\n        close\n      }\n    }\n  }", "metadata": {"commit_hash": "c81c3a5cb0c0f022988631bec79a9f2628713791", "file": "src/templates/Explore/ManagersPoolTable/graphql.ts", "repo": "KassandraFinance_kassandra-application"}}, {"type": "query", "name": "proposal($molochAddress: String!, $proposalId: String!)", "content": "{\n    proposals(where: { molochAddress: $molochAddress, proposalId: $proposalId }) {\n      ${proposalFields}\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "getAllSubmissions($animationId: String!)", "content": "{\n    allSubmissions(\n      condition: { animationId: $animationId, status: PUBLISHED }\n      first: 10\n      orderBy: CREATED_AT_DESC\n    ) {\n      nodes {\n        shortComment\n        createdAt\n        startFrame\n        endFrame\n        id\n        thumbnailUrl\n        hasProFeedback\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "DeleteLabelDefinition($key: String!)", "content": "{\n    deleteLabelDefinition(key: $key) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/MetadataDefinitions/gql.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "getNoticeCount", "content": "{\n    getNoticeCount {\n      ...CATEGORIES\n    }\n  }\n  ${CATEGORIES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/notices.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "addCommunityModerator($input: AddCommunityModeratorInput!)", "content": "{\n    addCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityModerator.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "createList($title: String!)", "content": "{\n    createList(title: $title){\n      title\n    }\n  }", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "mutation", "name": "botInvitationRespond($input: BotInvitationRespondInput!)", "content": "{\n          botInvitationRespond(input: $input) {\n            successful\n            result\n            messages {\n              message\n              field\n              code\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "delete_todos", "content": "{\n    delete_todos(where: {is_completed: {_eq: true}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "createUserAccount(\n    $username: String!\n    $roleCode: String!\n    $email: String!\n    $fullName: String!\n    $initials: String!\n    $password: String!\n  )", "content": "{\n    createUserAccount(\n      input: {\n        roleCode: $roleCode\n        username: $username\n        email: $email\n        fullName: $fullName\n        initials: $initials\n        password: $password\n      }\n    ) {\n      id\n      email\n      fullName\n      initials\n      username\n      bio\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      role {\n        code\n        name\n      }\n      owned {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n      member {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/createUser.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "getDiscussionProposalById($onchainProposalId: Int!)", "content": "{\n        onchain_links(where: {onchain_proposal_id: {_eq: $onchainProposalId}}) {\n            id\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "ForgotPassword($email:String!)", "content": "{\n  forgotPassword(email:$email){\n    result\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/ForgotPassword/ForgotPassword.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "query", "name": "ExperimentSessionPerVariantHistogram($experimentId: String!)", "content": "{\n\t\texperiment(experimentId: $experimentId) {\n\t\t\tdxpVariants {\n\t\t\t\tcontrol\n\t\t\t\tdxpVariantName\n\t\t\t\tsessionsHistogram {\n\t\t\t\t\tkey\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/experiments/queries/ExperimentQuery.js", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "pairDayDatas($pairAddress: Bytes!, $date: Int!)", "content": "{\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      totalSupply\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "userQuery(\n            $id: String!\n            $domain: String!\n            $currentAddress: String!\n        )", "content": "{\n            user(\n                id: $id\n                domain: $domain\n                currentAddress: $currentAddress\n            ) {\n                account {\n                    ${requestedFields}\n                }\n                error {\n                    type\n                    key\n                    message\n                    response\n                }\n            }\n        }", "metadata": {"commit_hash": "a47d3d9ea38cd1363ede730998145da663df6091", "file": "packages/extension/src/background/services/GraphQLService/Queries/userQuery.js", "repo": "AztecProtocol_aztec-v1"}}, {"type": "query", "name": "cosmosGovernanceProposals($network: String!)", "content": "{\n  cosmosGovernanceProposals(network: $network) {\n    proposal_id\n    title\n    description\n    proposal_type\n    proposal_status\n    final_tally_result {\n      yes\n      abstain\n      no\n      no_with_veto\n    }\n    submit_time\n    total_deposit {\n      denom\n      amount\n    }\n    voting_start_time\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}]