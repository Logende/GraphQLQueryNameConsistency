[{"type": "mutation", "name": "excludeServiceByUniqueNames", "content": "{\n      excludeServiceByUniqueNames(data: $data) {\n        status\n      }\n    }", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/index.ts", "repo": "code-store-platform_cli"}, "arguments": "($data: InputProjectServiceUniqueNames!)"}, {"type": "query", "name": "getFullProfile", "content": "{\n    getProfileByUsername(_username: $username) {\n      about\n      firstname\n      lastname\n      occupation\n      organisation\n      reel\n      avatar\n      banner\n      createdAt\n      animationsByProfileId(first: 3) {\n        nodes {\n          id\n          title\n          profileId\n          submissionsByAnimationId(first: 1, orderBy: CREATED_AT_DESC) {\n            nodes {\n              startFrame\n              endFrame\n              thumbnailUrl\n              comment\n              createdAt\n              id\n              notesBySubmissionId {\n                totalCount\n              }\n            }\n            totalCount\n          }\n        }\n        totalCount\n      }\n      notesByProfileId(first: 5, orderBy: CREATED_AT_DESC) {\n        nodes {\n          paragraph\n          createdAt\n          submissionBySubmissionId {\n            id\n            animationId\n            thumbnailUrl\n            comment\n            createdAt\n            animationByAnimationId {\n              title\n              profileByProfileId {\n                avatar\n                username\n              }\n            }\n          }\n          id\n        }\n        totalCount\n      }\n      profileSocialsByProfileId {\n        nodes {\n          linkedin\n          instagram\n          facebook\n          artstation\n          profileId\n          twitter\n          vimeo\n          www\n          youtube\n        }\n      }\n      isInstructor\n      premiumType\n      username\n      role\n      reelDescription\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($username: String!)"}, {"type": "query", "name": "Simple", "content": "{\n        field {\n          child\n          foo\n        }\n        network\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteFile", "content": "{\n    deleteFile(where: $where) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gondolin"}, "arguments": "($where: FileWhereUniqueInput!)"}, {"type": "mutation", "name": "removePendingCommunityMember", "content": "{\n    removePendingCommunityMember(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/removePendingCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $input: RemovePendingCommunityMemberInput!\n  )"}, {"type": "query", "name": "cosmosGovernanceProposals", "content": "{\n  cosmosGovernanceProposals(network: $network) {\n    proposal_id\n    title\n    description\n    proposal_type\n    proposal_status\n    final_tally_result {\n      yes\n      abstain\n      no\n      no_with_veto\n    }\n    submit_time\n    total_deposit {\n      denom\n      amount\n    }\n    voting_start_time\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($network: String!)"}, {"type": "subscription", "name": "removedReaction", "content": "{\n    removedReaction(channelUrl: $channelUrl, tenant: $tenant) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($channelUrl: String, $tenant: String)"}, {"type": "query", "name": "bulkGet", "content": "{\n        people @pdbBulkGet(docs: [{ id: \"1\", _rev: \"${rev1}\" }, { id: \"2\", _rev: \"${rev2}\" }]) {\n          results {\n            docs {\n              ok {\n                _id\n                _rev\n                name\n              }\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "0984105b45bada32b8c0b0ac70a6847570781221", "file": "src/resolvers/queries/bulkGet/bulkGet.spec.ts", "repo": "mattjennings_apollo-link-pouch"}}, {"type": "query", "name": "ProfileQuery", "content": "{\n\t\t\t\tprofiles {\n\t\t\t\t\tid\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n                    position\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "049b0e0fd2a3ca39f6f831f29a67a22151380416", "file": "sveltekit-apollo/src/routes/api/graphql/index.ts", "repo": "crewnew-git_sveltekit-hasura-docker"}}, {"type": "mutation", "name": "LoginAppUser", "content": "{\n    loginAppUser(input: $input) {\n      token {\n        id\n        value\n      }\n      user {\n        ...ActiveUserFragment\n      }\n    }\n  }\n\n  ${userFragment}", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/authenticate.js", "repo": "endeavorb2b_websites"}, "arguments": "($input: LoginAppUserMutationInput!)"}, {"type": "query", "name": "getEnvironment", "content": "{\n    environment: environmentByOpenshiftProjectName(openshiftProjectName: $openshiftProjectName) {\n      id\n      name\n      openshiftProjectName\n      project {\n        id\n        name\n        problemsUi\n        factsUi\n      }\n      problems {\n        ...problemFields\n      }\n    }\n  }\n  ${ProblemsFragment}", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/EnvironmentWithProblems.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($openshiftProjectName: String!)"}, {"type": "mutation", "name": "registerServiceConsumer", "content": "{\n        obj: registerServiceConsumer(data: $data) ${SERVICE_CONSUMER_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/resident/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: RegisterServiceConsumerInput!)"}, {"type": "query", "name": "GetCharacter", "content": "{\n    hero(episode: $episode) {\n      name\n      id\n      friends {\n        name\n        id\n        appearsIn\n      }\n    }\n  }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "examples/ssr/imports/app.js", "repo": "Shopify_react-apollo"}, "arguments": "($episode: Episode!)"}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/context/Configuration.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "topNavbar", "content": "{\n  notifications {\n    createdAt\n    read\n    id\n    entity {\n      id\n      type\n      name\n    }\n    actor {\n      id\n      type\n      name\n    }\n    actionType\n  }\n  me {\n    user {\n      id\n      fullName\n      profileIcon {\n        initials\n        bgColor\n        url\n      }\n    }\n    teamRoles {\n      teamID\n      roleCode\n    }\n    projectRoles {\n      projectID\n      roleCode\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "disableCommunityWatercooler", "content": "{\n    disableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/disableCommunityWatercooler.js", "repo": "DoBestMan_spectrum"}, "arguments": "(\n    $input: DisableCommunityWatercoolerInput!\n  )"}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName) {\n        comments {\n          ...authorFields\n        }\n      }\n    }\n\n    fragment authorFields on User {\n      postedBy {\n        login\n        html_url\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($repoName: String!)"}, {"type": "query", "name": "getNotifications", "content": "{\n    notifications {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...notificationInfo\n        }\n      }\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/notification/getNotifications.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "people", "content": "{\n        name\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "DoSomething", "content": "{\n        doSomething {\n          time\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useMutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "people", "content": "{\n      allPeople(first: 1) {\n        people {\n          name\n        }\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/queries/polling.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "logout", "content": "{\n  logout\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "addressUnlink", "content": "{\n  addressUnlink(address: $address) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($address: String!)"}, {"type": "query", "name": "loadMoreChannelMembers", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelMemberConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelMemberConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannelMemberConnection.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID, $first: Int, $after: String)"}, {"type": "query", "name": "AnimalNames", "content": "{\n        animals {\n          id\n          name\n          ...CatDetails\n        }\n      }\n      fragment CatDetails on Cat {\n        livesLeft\n        killsToday\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/fragmentMatcher.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String)"}, {"type": "query", "name": "Comment", "content": "{\n    currentUser {\n      login\n      html_url\n    }\n    entry(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      comments(limit: $limit, offset: $offset) {\n        ...CommentsPageComment\n      }\n      commentCount\n      repository {\n        full_name\n        html_url\n        ... on Repository {\n          description\n          open_issues_count\n          stargazers_count\n        }\n      }\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $limit: Int, $offset: Int)"}, {"type": "query", "name": "Simple", "content": "{\n        networkField(usingVariable: $variable)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($variable: String!)"}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteMessage", "content": "{\n    deleteMessage(id: $id)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/message/deleteMessage.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "waitBlockTimestamp", "content": "{\n    waitBlockTimestamp(waitUntil: $waitUntil)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($waitUntil: Int)"}, {"type": "mutation", "name": "assignBlogAuthor", "content": "{\n        updateBlogs(\n            where: { id: $blog }\n            connect: { authors: { where: { email: $authorEmail } } }\n        ) {\n            blogs {\n                authors {\n                    email\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "($blog: ID, $authorEmail: String)"}, {"type": "mutation", "name": "DeleteAddon", "content": "{\n        deleteAddon(id:$id)\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Addons.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($id:String!)"}, {"type": "query", "name": "filteredServiceClasses", "content": "{\n    filteredServiceClasses @client {\n      name\n      displayName\n      externalName\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceClassList/queries.js", "repo": "kyma-project_console"}}, {"type": "query", "name": "health", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: \"dystopia-exchange/dystopia-v2\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}}, {"type": "mutation", "name": "RiderLogin", "content": "{\n  riderLogin(username:$username,password:$password,notificationToken:$notificationToken){\n    userId\n    token\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/Login/useLogin.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($username:String,$password:String,$notificationToken:String)"}, {"type": "mutation", "name": "AddTodo", "content": "{\n        addTodo(message: $message, title: $title) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($message: String, $title: String)"}, {"type": "query", "name": "getStaffs", "content": "{\n    staffs(role: $role, searchBy: $searchBy) {\n      id\n      name\n      email\n      contact_number\n      creation_date\n      role\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/StaffMemberForm/StaffMemberForm.tsx", "repo": "mdhafiz_PickBazar"}, "arguments": "($role: String, $searchBy: String)"}, {"type": "subscription", "name": "onServerStateUpdate", "content": "{\n    serverStateUpdate {\n      state\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/server-settings.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "viewBackendEvents", "content": "{\n        view(id: $viewId) {\n            backend_events {\n                backend_event_id\n                title\n                description\n                created_time\n                backend {\n                    name\n                }\n                project {\n                    name\n                }\n                view {\n                    path\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/log-settings.tsx", "repo": "andrewsmike_jasmine"}, "arguments": "($viewId: ID!)"}, {"type": "query", "name": "userInviteGetSender", "content": "{\n          userInviteGetSender(inviteCode: $code) {\n            user {\n              ${PROFILE_PROPS}\n            }\n            shareType\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($code: String!)"}, {"type": "mutation", "name": "UpdateTodo", "content": "{\n      updateTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: UpdateTodoInput!)"}, {"type": "mutation", "name": "updateTaskComment", "content": "{\n  updateTaskComment(input: {commentID: $commentID, message: $message}) {\n    comment {\n      id\n      updatedAt\n      message\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($commentID: UUID!, $message: String!)"}, {"type": "query", "name": "getPetitions", "content": "{\n      getPetitionsByRequesterAndStatusAndDates(username: $username, status: $status, startDate: $startDate, endDate: $endDate, userToken: $userToken){\n        id\n        status\n        dateOfPetitionAcepted\n        requester{\n          firstName\n          lastName\n          username\n        }\n        property{\n          maxCapacity\n          id\n          title\n          price\n          province{\n            name\n          }\n          images{\n            image\n            id\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/personalRequestsAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $status: String, $startDate: String, $endDate: String, $userToken: String!)"}, {"type": "query", "name": "current_balances", "content": "{\n    current_coin_balances(\n      where: {\n        owner_address: {\n          _eq: $owner_address\n        }\n      }\n      order_by: { last_transaction_version: desc }\n      offset: $offset\n    ) {\n      coin_type\n      amount\n      last_transaction_timestamp\n    }\n  }\n  # args:", "metadata": {"commit_hash": "fa7e183ed01a0371a99f9ee6b79ebae22d2cbf76", "file": "src/components/user/AddrAssets.tsx", "repo": "SeamMoney_seam-frontend"}, "arguments": "($owner_address: String!, $offset: Int!)"}, {"type": "mutation", "name": "updateValue", "content": "{\n  updateValue(lang: $lang, key: $key, createdBy: $createdBy, value: $value) {\n    lang\n    key\n    createdBy\n    value\n    version\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($lang: String, $key: String, $createdBy: String, $value: String)"}, {"type": "query", "name": "CURRENT_USER_QUERY", "content": "{\n        me {\n            id\n            firstName\n            lastName\n            email\n            displayName\n        }\n    }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/user/queries/QUERY_GET_CUSTOMER.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "removePhoneNumberFromContact", "content": "{\n  phoneNumberRemoveFromContactById(contactId: $contactId, id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($contactId: ID!, $id: ID!)"}, {"type": "mutation", "name": "mut", "content": "{\n            mut(inline: \"abc\", variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($in: String!)"}, {"type": "mutation", "name": "AddData", "content": "{\n    addData(offerID: $offerID, from: $from, data: $data) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $from: String, $data: String)"}, {"type": "mutation", "name": "updateLiferayExperienceCloudEnvironment", "content": "{\n\t\tupdateLiferayExperienceCloudEnvironment(\n\t\t\tliferayExperienceCloudEnvironmentId: $liferayExperienceCloudEnvironmentId\n\t\t\tinput: $LiferayExperienceCloudEnvironment\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"PUT\"\n\t\t\t\ttype: \"C_LiferayExperienceCloudEnvironment\"\n\t\t\t\tpath: \"/c/liferayexperiencecloudenvironments/{args.liferayExperienceCloudEnvironmentId}\"\n\t\t\t) {\n\t\t\tliferayExperienceCloudEnvironmentId\n\t\t\tprojectId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/liferay-experience-cloud-environments/queries/useUpdateLiferayExperienceCloudEnvironment.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$liferayExperienceCloudEnvironmentId: Long!\n\t\t$LiferayExperienceCloudEnvironment: InputC_LiferayExperienceCloudEnvironment!\n\t)"}, {"type": "mutation", "name": "Login", "content": "{\n  login(email: $email, password: $password) {\n    accessToken\n    user {\n      id\n      email\n      firstName\n      lastName\n      dateOfBirth\n      streetAddress\n      postCode\n      city\n      country\n    }\n  }\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "Weather", "content": "{\n    weather {\n      icon\n      text\n    }\n    sport {\n      icon\n      text\n    }\n    music {\n      icon\n      text\n    }\n  }", "metadata": {"commit_hash": "e7a757ca1e82e3c718266d58c64fa587078177fe", "file": "client/src/components/Subscriber/Subscriber.tsx", "repo": "mihailgaberov_redis-pubsub-visualized"}}, {"type": "query", "name": "Addons", "content": "{\n  addons{\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n}}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "searchPlugin", "content": "{\n        search @pdbPlugin @wrongplugin(query: \"bob\", fields: [\"name\"]) {\n          rows {\n            id\n            score\n          }\n          total_rows\n        }\n      }", "metadata": {"commit_hash": "0984105b45bada32b8c0b0ac70a6847570781221", "file": "src/resolvers/queries/plugin/plugin.spec.ts", "repo": "mattjennings_apollo-link-pouch"}}, {"type": "mutation", "name": "deleteUserAccount", "content": "{\n    deleteUserAccount(input: { userID: $userID, newOwnerID: $newOwnerID }) {\n      ok\n      userAccount {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/deleteUser.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($userID: UUID!, $newOwnerID: UUID)"}, {"type": "mutation", "name": "DeleteAddon", "content": "{\n        deleteAddon(id:$id)\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Addons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($id:String!)"}, {"type": "subscription", "name": "CallsSubscription", "content": "{\n    webRTCMessage(yourUser: $id) {\n      callID\n      type\n      message\n      fromUser\n      chat {\n        _id\n        users {\n          _id\n          name\n          email\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Chat/ChatsList.tsx", "repo": "LFSCamargo_Chatify"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "resetChannelJoinToken", "content": "{\n    resetChannelJoinToken(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/resetChannelJoinToken.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: ResetChannelJoinTokenInput!)"}, {"type": "mutation", "name": "upvoteCommentMutation", "content": "{\n    upvoteComment(id: $commentId) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}, "arguments": "($commentId: ID!)"}, {"type": "mutation", "name": "EditCategory", "content": "{\n        editCategory(category:{_id:$_id,title:$title,description:$description,img_menu:$img_menu}){_id}\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "( $_id:String,$title:String!,$description:String!,$img_menu:String)"}, {"type": "query", "name": "apiDefinition", "content": "{\n    application(id: $applicationId) {\n      name\n      id\n      package(id: $apiPackageId) {\n        id\n        name\n        apiDefinition(id: $apiDefinitionId) {\n          id\n          name\n          description\n          targetURL\n          spec {\n            data\n            format\n            type\n          }\n          group\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Api/gql.js", "repo": "kyma-project_console"}, "arguments": "(\n    $applicationId: ID!\n    $apiPackageId: ID!\n    $apiDefinitionId: ID!\n  )"}, {"type": "query", "name": "GetReviewsForArticle", "content": "{\n    reviewsForArticle(articleVersionId: $articleVersionId) {\n      articleVersionId\n      content\n      events {\n        createdAt\n      }\n      id\n      recommendation\n      reviewer {\n        username\n      }\n      status {\n        pending\n        submitted\n      }\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/getReviewsForArticle.js", "repo": "PREreview_PREreview-2"}, "arguments": "($articleVersionId: ID!)"}, {"type": "query", "name": "HeroAndFriendsNames", "content": "{\n    hero(episode: $episode) {\n      name\n      friends {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode)"}, {"type": "query", "name": "Simple", "content": "{\n        field @live\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "LinkTerm", "content": "{\n      linkTerm(\n        nodeUri: $nodeUri\n        targetUri: $targetUri\n        targetType: $targetType\n      ) {\n        linkUri\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/linkTerm.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $nodeUri: String!\n      $targetUri: String!\n      $targetType: String!\n    )"}, {"type": "query", "name": "AssignedOrders", "content": "{\n    assignedOrders(id:$id){\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          title\n          options{\n            title\n            price\n          }\n        }\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/context/user.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($id:String)"}, {"type": "query", "name": "challenge", "content": "{\n            challenge(id: $id) {\n              id\n              title\n              description\n              imageUrl\n              closeDate\n              endDate\n              privacyMode\n              privacyData\n\n              createdDate\n              createdBy {\n                id\n                name\n                imageUrl\n              }\n              modifiedDate\n              modifiedBy {\n                id\n                name\n                imageUrl\n              }\n\n              reactions {\n                totalCount\n                edges {\n                  node {\n                    id\n                    objectId\n                    value\n\n                    createdDate\n                    createdBy {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n              reactionsSummary {\n                value\n                totalCount\n              }\n\n              topIdea {\n                id\n                title\n                description\n                imageUrl\n\n                reactionsSummary {\n                  value\n                  totalCount\n                }\n              }\n\n              ideas {\n                totalCount\n                edges {\n                  node {\n                    id\n                    title\n                    description\n                    imageUrl\n                    createdDate\n                    createdBy {\n                      id\n                      name\n                      imageUrl\n                    }\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getPlatformAuthorSession", "content": "{\n      getPlatformAuthorSession(\n         awsAccount: $awsAccount\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/getPlatformAuthorSession.js", "repo": "awslabs_aws-dataall"}, "arguments": "($awsAccount: String)"}, {"type": "query", "name": "CommentReactions", "content": "{\n        comment_reactions(where: {comment_id: {_eq: $commentId}}) {\n            ...commentReactionFields\n        }\n    }\n    ${commentReactionFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($commentId: uuid!)"}, {"type": "mutation", "name": "VendorResetPassword", "content": "{\n    vendorResetPassword(oldPassword: $oldPassword, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/ResetPassword/ResetPassword.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($oldPassword: String!, $newPassword: String!)"}, {"type": "query", "name": "GET_VERSIONABLE_ATTRIBUTES_BY_LIBRARY", "content": "{\n        attributes(filters: {libraries: [$libraryId], versionable: true}) {\n            list {\n                id\n                versions_conf {\n                    versionable\n                    profile {\n                        id\n                        trees {\n                            id\n                            label\n                        }\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/attributes/getVersionableAttributesByLibrary.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($libraryId: String!)"}, {"type": "query", "name": "viewBackendEvents", "content": "{\n        view(id: $viewId) {\n            backend_events {\n                backend_event_id\n                title\n                description\n                created_time\n                backend {\n                    name\n                }\n                project {\n                    name\n                }\n                view {\n                    path\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/log-settings.tsx", "repo": "andrewsmike_jasmine"}, "arguments": "($viewId: ID!)"}, {"type": "query", "name": "getEtherScanLink @client", "content": "{\n    network\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/Links/EtherScanLink.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "VoteElectionDiscussionPage", "content": "{\n  ${ELECTION_COOP_PRESIDENT_SLUG}: election(slug: \"${ELECTION_COOP_PRESIDENT_SLUG}\") {\n    id\n    discussion {\n      id\n      comments {\n        id\n        totalCount\n      }\n    }\n   }\n  ${ELECTION_COOP_MEMBERS_SLUG}: election(slug: \"${ELECTION_COOP_MEMBERS_SLUG}\") {\n    id\n    discussion {\n      id\n      comments {\n        id\n        totalCount\n      }\n    }\n   }\n  ${VOTING_COOP_BOARD_SLUG}: voting(slug: \"${VOTING_COOP_BOARD_SLUG}\") {\n    id\n    discussion {\n      id\n      comments {\n        id\n        totalCount\n      }\n    }\n   }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/Legacy/ElectionDiscussionPage.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "subscribeToWebPush", "content": "{\n    subscribeWebPush(subscription: $subscription)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($subscription: WebPushSubscription!)"}, {"type": "subscription", "name": "apiRuleEvent", "content": "{\n    apiRuleEvent(namespace: $namespace, serviceName: $serviceName) {\n      type\n      apiRule {\n        name\n        generation\n        spec {\n          rules {\n            path\n            methods\n            accessStrategies {\n              name\n              config\n            }\n          }\n          service {\n            host\n            name\n            port\n          }\n        }\n        status {\n          apiRuleStatus {\n            code\n            description\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/subscriptions.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!, $serviceName: String)"}, {"type": "mutation", "name": "UpdatePosition", "content": "{\n        updatePosition (position: $position) {\n            positionId\n            symbol\n            direction\n            entryTime\n            entryPrice\n            growth\n            profit\n            profitPct\n            holdingPeriod\n            amount\n            initialStopPrice\n            curStopPrice\n            profitTarget\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}, "arguments": "($position: InputPosition)"}, {"type": "query", "name": "Simple", "content": "{\n        field(usingVariable: $variable) @client\n        networkField(usingVariable: $variable)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($variable: String!)"}, {"type": "query", "name": "getCountries", "content": "{\n  countries(order_by: {name: asc}) {\n    code\n    name\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "DeleteAddon", "content": "{\n        deleteAddon(id:$id)\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Addons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($id:String!)"}, {"type": "query", "name": "EditionById", "content": "{\n    editions(where: { id: $id }, first: 1) {\n      ...editionFragment\n    }\n  }\n  ${editionFragment()}", "metadata": {"commit_hash": "c0e50bd262fa172e7b6384a02757580bdc5f6689", "file": "webapp/src/modules/vendor/known_origin/edition/api.ts", "repo": "dev-captain_land-marketplace-erc"}, "arguments": "($id: String)"}, {"type": "query", "name": "moloch", "content": "{\n    moloch(id: $contractAddr) {\n      id\n      summoner\n      summoningTime\n      newContract\n      totalShares\n      dilutionBound\n      totalLoot\n      version\n      periodDuration\n      votingPeriodLength\n      gracePeriodLength\n      proposalDeposit\n      processingReward\n      guildBankAddress\n      minions {\n        createdAt\n        minionAddress\n        minionType\n        details\n        minQuorum\n        safeAddress\n        crossChainMinion\n        foreignChainId\n        foreignSafeAddress\n        safeMinionVersion\n      }\n      depositToken {\n        tokenAddress\n        symbol\n        decimals\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($contractAddr: String!)"}, {"type": "mutation", "name": "UpdateUserData", "content": "{\n    updateUserData(\n      email: $email\n      fullName: $fullName\n      displayName: $displayName\n      lastViewedCompanyId: $lastViewedCompanyId\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/UpdateUserData.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "(\n    $email: String!\n    $fullName: String!\n    $displayName: String!\n    $lastViewedCompanyId: ID\n  )"}, {"type": "mutation", "name": "closePullRequestAndDeleteBranch", "content": "{\n    ${closePullRequestMutationPart}\n    ${deleteRefMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}, "arguments": "(\n    $closePullRequestInput: ClosePullRequestInput!\n    $deleteRefInput: DeleteRefInput!\n  )"}, {"type": "query", "name": "accessGrantInfoQuery", "content": "{\n    accessGrantInfo(id: $id) {\n      granter {\n        portrait\n      }\n      granterName\n      message\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Claim.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Offer", "content": "{\n    marketplace {\n      offer(id: $offerId) {\n        listing {\n          ...basicListingFields\n        }\n        ...basicOfferFields\n      }\n    }\n  }\n  ${fragments.Listing.basic}\n  ${fragments.Offer.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "infra/discovery/src/listener/queries/Offer.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerId: ID!)"}, {"type": "mutation", "name": "SAVE_TREE", "content": "{\n        saveTree(tree: $treeData) {\n            id\n            system\n            label\n            behavior\n            libraries {\n                library {\n                    id\n                    label\n                    attributes {\n                        id\n                        label\n                        type\n                        ... on TreeAttribute {\n                            linked_tree {\n                                id\n                            }\n                        }\n                    }\n                }\n                settings {\n                    allowMultiplePositions\n                    allowedAtRoot\n                    allowedChildren\n                }\n            }\n            permissions_conf {\n                libraryId\n                permissionsConf {\n                    permissionTreeAttributes {\n                        id\n                        label\n                    }\n                    relation\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/saveTreeMutation.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($treeData: TreeInput!)"}, {"type": "mutation", "name": "SubmitOrder", "content": "{\n    order(dishes: $dishes) {\n      id\n      delivery\n      delivered\n      items {\n        id\n        name\n        price\n      }\n    }\n  }", "metadata": {"commit_hash": "b6d96035d668b9480ff20fb4a7df628fa97a9250", "file": "3_examples/react/src/apollo/mutations.js", "repo": "systek_graphql-workshop"}, "arguments": "($dishes: [Order!]!)"}, {"type": "query", "name": "posts", "content": "{\n    posts(tag: $tag) {\n      ...postDataFragment\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ArchiveContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($tag: String)"}, {"type": "mutation", "name": "PauseApplication", "content": "{\n  updateApp(pk_columns: {id: $appId}, _set: {desiredState: 6}) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!)"}, {"type": "mutation", "name": "createBranch", "content": "{\n    createRef(input: $createRefInput) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n  }\n  ${fragments.branch}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}, "arguments": "($createRefInput: CreateRefInput!)"}, {"type": "query", "name": "getFrontpageHeadlines", "content": "{\n    allHeadlines(first: 6, orderBy: CREATED_AT_DESC) {\n      nodes {\n        id\n        createdAt\n        link\n        thumbnail\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "getDiscussionTipById", "content": "{\n  onchain_links(where: {onchain_tip_id: {_eq: $onchainTipId}}) {\n    id\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainTipId: String!)"}, {"type": "mutation", "name": "CreateAddons", "content": "{\n  createAddons(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Addon/Addon.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($addonInput:AddonInput)"}, {"type": "query", "name": "getTransactionHistory", "content": "{\n    transactionHistory @client {\n      id\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/routes/TestRegistrar.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "pairDayDatas", "content": "{\n    pairDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { pairAddress: $pairAddress }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($pairAddress: Bytes!, $skip: Int!)"}, {"type": "query", "name": "getChannelBlockedUsers", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${userInfoFragment}\n  ${communityInfoFragment}\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/channel/getChannelBlockedUsers.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID)"}, {"type": "query", "name": "AllProjectsQuery", "content": "{\n      allProjects {\n        id\n        name\n        environments(type: PRODUCTION) {\n          route\n        }\n      }\n    }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/AllProjects.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "query", "name": "labels", "content": "{\n    findProject(input: { projectID: $projectID }) {\n      labels {\n        id\n        createdDate\n        name\n        labelColor {\n          id\n          name\n          colorHex\n          position\n        }\n      }\n    }\n    labelColors {\n      id\n      position\n      colorHex\n      name\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/labels.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($projectID: UUID!)"}, {"type": "query", "name": "getProductWithRelatedProducts", "content": "{\n    product(slug: $slug) {\n      id\n      title\n      weight\n      slug\n      price\n      type\n      image\n      categories {\n        id\n        slug\n        title\n      }\n    }\n    relatedProducts(slug: $slug, type: $type) {\n      id\n      title\n      slug\n      weight\n      price\n      type\n      image\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/query/product.query.ts", "repo": "mdhafiz_PickBazar"}, "arguments": "($slug: String!, $type: String!)"}, {"type": "query", "name": "getChannelBySlugAndCommunitySlug", "content": "{\n    channel(channelSlug: $channelSlug, communitySlug: $communitySlug) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannel.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $channelSlug: LowercaseString\n    $communitySlug: LowercaseString\n  )"}, {"type": "mutation", "name": "votePost", "content": "{\n    votePost(id: $id) {\n      id\n      votes\n      __typename\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/with-apollo-next/components/PostUpvoter.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "commit", "content": "{\n    commit(\n      repoId: $repoId\n      parentId: $parentId\n      message: $message\n      document: $document\n      isTemplate: $isTemplate\n    ) {\n      ...CommitWithDocument\n      repo {\n        ...EditPageRepo\n      }\n    }\n  }\n  ${fragments.CommitWithDocument}\n  ${fragments.EditPageRepo}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "pages/repo/edit.js", "repo": "orbiting_publikator-frontend"}, "arguments": "(\n    $repoId: ID!\n    $parentId: ID\n    $message: String!\n    $document: DocumentInput!\n    $isTemplate: Boolean\n  )"}, {"type": "query", "name": "Simple", "content": "{\n        user @client\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        field @client\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SAVE_APPLICATION", "content": "{\n        saveApplication(application: $application) {\n            ...DetailsApplication\n        }\n    }\n    ${DetailsApplicationFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($application: ApplicationInput!)"}, {"type": "mutation", "name": "createServiceBinding", "content": "{\n    createServiceBinding(\n      serviceInstanceName: $serviceInstanceName\n      namespace: $namespace\n      parameters: $parameters\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $serviceInstanceName: String!\n    $namespace: String!\n    $parameters: JSON\n  )"}, {"type": "query", "name": "clusterRoles", "content": "{\n    clusterRoles {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "DeployToken", "content": "{\n    deployToken(\n      name: $name\n      symbol: $symbol\n      decimals: $decimals\n      supply: $supply\n      type: $type\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $name: String\n    $symbol: String\n    $decimals: String\n    $supply: String\n    $type: String\n    $from: String\n  )"}, {"type": "query", "name": "getPlatformAuthorSession", "content": "{\n      getPlatformAuthorSession(\n         awsAccount: $awsAccount\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/getPlatformAuthorSession.js", "repo": "awslabs_aws-dataall"}, "arguments": "($awsAccount: String)"}, {"type": "query", "name": "Test", "content": "{ sum(a: 1, b: 2) }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "firstcustomer", "content": "{\n              customer(where: {id: { eq: $id }}) {\n                ${fields.join('\\n')}\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}, "arguments": "($id: ID)"}, {"type": "mutation", "name": "updateHomePageHome", "content": "{\n                updateHomePageHome (\n                  homeSectionImage1: $homeSectionImage1\n                  homeSectionImage2: $homeSectionImage2\n                  homeSectionImage3: $homeSectionImage3\n                  homeSectionImage4: $homeSectionImage4\n                  homeSectionImage5: $homeSectionImage5\n                  homeSectionImage6: $homeSectionImage6\n                  homeSectionImage7: $homeSectionImage7\n                  homeSectionImage8: $homeSectionImage8\n                  homeSectionButton1: $homeSectionButton1\n                  homeSectionTitle1: $homeSectionTitle1\n                ) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateHomepageSettingsHome.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "(\n                $homeSectionImage1: String\n                $homeSectionImage2: String\n                $homeSectionImage3: String\n                $homeSectionImage4: String\n                $homeSectionImage5: String\n                $homeSectionImage6: String\n                $homeSectionImage7: String\n                $homeSectionImage8: String\n                $homeSectionButton1: String\n                $homeSectionTitle1: String\n              )"}, {"type": "query", "name": "getPartners", "content": "{\n    events {\n      event(findBy: { id: $eventId }) {\n        get {\n          id\n          name\n          slug\n          year\n          partners {\n            id\n            slug\n            level\n            placement\n            companyName\n            companyLogo\n            heroImage\n            website\n            facebook\n            instagram\n            twitter\n            youtube\n            linkedIn\n            github\n            jobListings {\n              slug\n              id\n              title\n              description\n              jobType\n              internship\n              experienceLevel\n              relocationOffered\n              remote\n              role\n              featured\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/wi/2020/jobs.js", "repo": "ThatConference_that-website"}, "arguments": "($eventId: ID!)"}, {"type": "query", "name": "mes", "content": "{\n    mes(id: $id) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/update/mes-update.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "SignUp", "content": "{\n    signup(\n      email: $email\n      password: $password\n      firstName: $firstName\n      lastName: $lastName\n      details: { shippingAddress: { create: { zipCode: $zipCode } }, discoveryReference: $discoveryReference }\n    ) {\n      user {\n        id\n        email\n        firstName\n        lastName\n        beamsToken\n        roles\n        createdAt\n      }\n      customer {\n        id\n        status\n        detail {\n          id\n          shippingAddress {\n            id\n            state\n          }\n        }\n        bagItems {\n          id\n        }\n      }\n      token\n      refreshToken\n      expiresIn\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/CreateAccountPane/CreateAccountPane.tsx", "repo": "seasons_harvest"}, "arguments": "(\n    $email: String!\n    $password: String!\n    $firstName: String!\n    $lastName: String!\n    $zipCode: String!\n    $discoveryReference: String\n  )"}, {"type": "mutation", "name": "createTaskChecklist", "content": "{\n  createTaskChecklist(input: {taskID: $taskID, name: $name, position: $position}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskID: UUID!, $name: String!, $position: Float!)"}, {"type": "query", "name": "TokenById", "content": "{\n    tokens(where: { id: $id }, first: 1) {\n      ...tokenFragment\n    }\n  }\n  ${tokenFragment()}", "metadata": {"commit_hash": "c0e50bd262fa172e7b6384a02757580bdc5f6689", "file": "webapp/src/modules/vendor/known_origin/token/api.ts", "repo": "dev-captain_land-marketplace-erc"}, "arguments": "($id: String)"}, {"type": "mutation", "name": "friendInvite", "content": "{\n          friendInvite(input: $input) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($input: FriendInviteInput!)"}, {"type": "query", "name": "minichefs", "content": "{\n    minichefs(where: $where) {\n      id\n      totalAllocPoint\n      rewardPerSecond\n      rewardsExpiration\n      farms(first: 1000) {\n        id\n        pid\n        tvl\n        allocPoint\n        rewarderAddress\n        chefAddress\n        pairAddress\n        rewarder {\n          id\n          rewards {\n            id\n            token {\n              id\n              symbol\n              derivedUSD\n              derivedETH\n              name\n              decimals\n            }\n            multiplier\n          }\n        }\n        pair {\n          id\n          reserve0\n          reserve1\n          totalSupply\n          token0 {\n            id\n            symbol\n            derivedUSD\n            derivedETH\n            name\n            decimals\n          }\n          token1 {\n            id\n            symbol\n            derivedUSD\n            derivedETH\n            name\n            decimals\n          }\n        }\n        farmingPositions(where: { userAddress: $userAddress }) {\n          id\n          stakedTokenBalance\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "b7b9c43058b8bc05dedf45a952c856f892071f89", "file": "src/apollo/minichef.ts", "repo": "pangolindex_components"}, "arguments": "($where: Minichef_filter, $userAddress: String)"}, {"type": "subscription", "name": "itemDeleted", "content": "{\n    itemDeleted {\n      id\n    }\n}", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "mutation", "name": "CreateAddress", "content": "{\n    createAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Checkout/AddressDetail.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($addressInput:AddressInput!)"}, {"type": "mutation", "name": "deleteSagemakerNotebook", "content": "{\n      deleteSagemakerNotebook(\n        notebookUri: $notebookUri\n        deleteFromAWS: $deleteFromAWS\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/deleteSagemakerNotebook.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $notebookUri: String!\n      $deleteFromAWS: Boolean\n    )"}, {"type": "query", "name": "Simple", "content": "{\n        field @live\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "CreateWithdrawRequest", "content": "{\n  createWithdrawRequest(amount: $amount) {\n    _id\n    requestId\n    requestAmount\n    requestTime\n    status\n    rider {\n      name\n      email\n      accountNumber\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/Withdraw/useWithdrawRequest.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($amount: Float!)"}, {"type": "mutation", "name": "applyCoupon", "content": "{\n    applyCoupon(code: $code) {\n      id\n      code\n      discountInPercent\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/features/carts/fixed-cart.tsx", "repo": "mdhafiz_PickBazar"}, "arguments": "($code: String!)"}, {"type": "mutation", "name": "ideaIssueCreate", "content": "{\n      ideaIssueCreate(input: $input) {\n        ...ideaIssueFullFields\n      }\n    }\n    ${IDEA_ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($input: IdeaIssueCreateInput!)"}, {"type": "mutation", "name": "RemoveContact", "content": "{\n    removeContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/removeContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}, "arguments": "($username: String, $timestamp: Float)"}, {"type": "mutation", "name": "ChangePassword", "content": "{\n    changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Profile/PasswordCard/PasswordCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($oldPassword:String!,$newPassword:String!)"}, {"type": "query", "name": "One", "content": "{\n          one\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "closePullRequestAndDeleteBranch", "content": "{\n    ${closePullRequestMutationPart}\n    ${deleteRefMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}, "arguments": "(\n    $closePullRequestInput: ClosePullRequestInput!\n    $deleteRefInput: DeleteRefInput!\n  )"}, {"type": "mutation", "name": "updateOrganizationById", "content": "{\n        obj: updateOrganization(id: $id, data: $data) ${ORGANIZATION_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($id: ID!, $data: OrganizationUpdateInput!)"}, {"type": "mutation", "name": "editUser", "content": "{\n    editUser(input: $input) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/user/editUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: EditUserInput!)"}, {"type": "mutation", "name": "authenticateUserWithPhoneAndPassword", "content": "{\n        obj: authenticateUserWithPhoneAndPassword(data: { phone: $phone, password: $password }) {\n            item {\n                id\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/apollo-server-client/lib/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($phone: String!, $password: String!)"}, {"type": "query", "name": "AllCountries", "content": "{\n    countries {\n      code\n      name\n      emoji\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/examples/bundling/tree-shaking/rollup-ac2/src/App.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "updateCandidacy", "content": "{\n    updateMe(\n      birthday: $birthday\n      statement: $statement\n      disclosures: $disclosures\n      address: $address\n      portrait: $portrait\n      username: $username\n      gender: $gender\n      biography: $biography\n      publicUrl: $publicUrl\n      twitterHandle: $twitterHandle\n      facebookId: $facebookId\n      hasPublicProfile: true\n    ) {\n      id\n      username\n      name\n      portrait\n      statement\n      disclosures\n      birthday\n      address {\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n      credentials {\n        isListed\n        description\n      }\n      gender\n      biography\n      biographyContent\n      publicUrl\n      twitterHandle\n      facebookId\n    }\n    submitCandidacy(slug: $slug, credential: $credential) {\n      id\n      yearOfBirth\n      city\n      recommendation\n      user {\n        id\n        candidacies {\n          id\n          credential {\n            id\n            description\n            verified\n          }\n          election {\n            slug\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/ElectionCandidacy.js", "repo": "republik_plattform"}, "arguments": "(\n    $slug: String!\n    $birthday: Date\n    $statement: String\n    $disclosures: String\n    $address: AddressInput\n    $portrait: String\n    $username: String\n    $credential: String!\n    $gender: String\n    $biography: String\n    $publicUrl: String\n    $twitterHandle: String\n    $facebookId: String\n  )"}, {"type": "query", "name": "profile", "content": "{\n  profile(profileId: $profileId) {\n    _id\n    username\n    email\n    password\n    kitchen {\n      _id\n      name\n      quantity\n      uom\n      refrigerated\n      expires\n      purchaseDate\n    }\n    friends {\n      _id\n      username\n    }\n    recipes {\n      _id\n      name\n      instructions\n      minutes\n      ingredients {\n        _id\n        name\n        quantity\n        uom\n        refrigerated\n        expires\n        purchaseDate\n      }\n      reactions {\n        _id\n        reactionBody\n        username\n        createdAt\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}, "arguments": "($profileId: ID!)"}, {"type": "query", "name": "AllPeople", "content": "{\n        people {\n          id\n          name\n        }\n        ...PeopleTypes\n      }\n      fragment PeopleTypes on Query {\n        __type(name: \"Person\") {\n          name\n          kind\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/fragmentMatcher.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getUser", "content": "{\n        user(id: $id) {\n            id\n            context\n            updatedAt\n            evaluations(search: $search, offset: $offset, limit: $limit) {\n                evaluations {\n                    id\n                    flagId\n                    flagKey\n                    flagVersion\n                    value\n                    createdAt\n                }\n                total\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/UserForm/queries.js", "repo": "uw-labs_flaggio"}, "arguments": "($id: ID!, $search: String, $offset: Int, $limit: Int)"}, {"type": "mutation", "name": "RemoveAllPlayer", "content": "{\n    removeAllPlayer\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "query", "name": "ListDatasetTableColumns", "content": "{\n      listDatasetTableColumns(tableUri: $tableUri, filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          columnUri\n          name\n          label\n          description\n          typeName\n          columnType\n          terms {\n            count\n            page\n            pages\n            nodes {\n              linkUri\n              term {\n                label\n                created\n                path\n                nodeUri\n              }\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/listDatasetTableColumns.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $tableUri: String!\n      $filter: DatasetTableColumnFilter\n    )"}, {"type": "mutation", "name": "UpdateRefundMutation", "content": "{\n    updateRefund(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $offerID: String!\n    $amount: String!\n    $from: String\n  )"}, {"type": "query", "name": "USERS", "content": "{\n    users {\n      address\n      authDetailId\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/UsersCell/UsersCell.js", "repo": "oneclickdapp_swordy-bot"}}, {"type": "mutation", "name": "createUserFeedback", "content": "{\n    createUserFeedback(\n      input: { data: { UserEmail: $email, Feedback: $feedback } }\n    ) {\n      userFeedback {\n        UserEmail\n        Feedback\n      }\n    }\n  }", "metadata": {"commit_hash": "7d4fb9ff93d346028d5d0c71c4512b2f7edf82bb", "file": "react-frontend/src/queries/feedback/feedback.js", "repo": "bcgov_digital.gov.bc.ca"}, "arguments": "($email: String!, $feedback: String!)"}, {"type": "mutation", "name": "setText", "content": "{\n    setText(name: $name, key: $key, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String, $key: String, $recordValue: String)"}, {"type": "query", "name": "Account", "content": "{\n  account(currency: $currency) {\n    id\n    balance\n  }\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}, "arguments": "($currency: String!)"}, {"type": "query", "name": "getUserById", "content": "{\n    user(id: $id) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/user/getUser.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)"}, {"type": "query", "name": "communities", "content": "{\n    communities {\n      id\n      url\n      image\n      name\n      author {\n        id\n      }\n      members {\n        id\n      }\n      notifications {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "components/Layout/index.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "completePurchase", "content": "{\n  completePurchase(invoiceId: $invoiceId, revoke: $revoke) {\n    id\n    sellerAddress\n    paymentTransactionHash\n    buyerAddress\n    pickupCode\n    buyerSignature\n    buyerSignedDate\n    sellerSignature\n    sellerSignedDate\n    purchase {\n      id\n    }\n    sellerProfile {\n      type\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($invoiceId: Int!, $revoke: Boolean)"}, {"type": "query", "name": "operationsAndSegments", "content": "{\n        operations: __type(name: \"Operation\") {\n            enumValues {\n                name\n            }\n        }\n        segments {\n            id\n            name\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "bookEvent", "content": "{\n        bookEvent(eventId: $eventId) {\n            _id\n            createdAt\n            updatedAt\n        }\n    }", "metadata": {"commit_hash": "111a5a0fa557f4231951199e1a6f89c76f1c2c5a", "file": "src/gql/bookEvent.js", "repo": "stack-guru_fullstack-graphql"}, "arguments": "($eventId: ID!)"}, {"type": "query", "name": "proyectos", "content": "{\n    proyectos(where: $where) {\n      id\n      codigo\n      nombre\n      inicia\n      finaliza\n      area {\n        id\n        nombre\n      }\n      tipo {\n        id\n        nombre\n      }\n      estado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/project/list/project-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: ProyectoWhereInput)"}, {"type": "query", "name": "getFeedbackMonthlyOverview", "content": "{\n    allVAdminFeedbackOverviewCollapseds(\n      orderBy: COUNT_DESC\n      condition: { year: $year, month: $month }\n      first: 50\n      offset: $offset\n    ) {\n      nodes {\n        avatar\n        profileId\n        year\n        username\n        month\n        count\n        avatar\n      }\n      totalCount\n    }\n    allVAdminFeedbackOverviews(condition: { year: $year, month: $month }) {\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($year: Int!, $month: Int!, $offset: Int!)"}, {"type": "query", "name": "Echo", "content": "{\n        echo(message: $message)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($message: String)"}, {"type": "mutation", "name": "addEmailToOrganization", "content": "{\n  emailMergeToOrganization(organizationId: $organizationId, input: $input) {\n    ...Email\n    label\n  }\n}\n    ${EmailFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!, $input: EmailInput!)"}, {"type": "query", "name": "user", "content": "{\n                    user(id: $id) {\n                      safes {\n                        id\n                        organization\n                        deployed\n                        balances {\n                          amount\n                          token {\n                            id\n                          }\n                        }\n                      }\n                    }\n                  }", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/dapps/o-onboarding/processes/fromCirclesLand.ts", "repo": "circlesland_o-platform"}, "arguments": "($id: String!)"}, {"type": "query", "name": "fetchIdeasWithUserReaction", "content": "{\n            ideas(withReactionByUserId: $userId) {\n              totalCount\n              edges {\n                node {\n                  id\n                  title\n                  description\n                  imageUrl\n                  challenge {\n                    id\n                    title\n                    closeDate\n                  }\n\n                  reactionsSummary {\n                    value\n                    totalCount\n                  }\n\n                  myReaction {\n                    id\n                    value\n                  }\n\n                  createdDate\n                  modifiedDate\n                  modifiedBy {\n                    id\n                    name\n                    imageUrl\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($userId: String!)"}, {"type": "query", "name": "getAgents", "content": "{\n    people(last: $last, filter: { userOrName: $userOrName }) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n        totalCount\n        pageLimit\n      }\n      edges {\n        cursor\n        node {\n          id\n          name\n          note\n          images {\n            bin\n            mimeType\n          }\n          primaryLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($userOrName: String!, $last: Int)"}, {"type": "query", "name": "top500Tokens", "content": "{\n    tokens(first: 500, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n      id\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/tokens/topTokens.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "mutation", "name": "UpdateUser", "content": "{\n    updateUser(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}, "arguments": "($data: UpdateInput!)"}, {"type": "mutation", "name": "updateInRun", "content": "{\n  updateInRun(inRun: $inRun) {\n    inRun\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($inRun: InRun!)"}, {"type": "query", "name": "RiderOrders", "content": "{\n  riderOrders{\n        _id\n      orderId\n      createdAt\n      acceptedAt\n      pickedAt\n      assignedAt\n      isPickedUp\n      deliveredAt\n      expectedTime\n      deliveryCharges\n      restaurant{\n        _id\n        name\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        label\n        details\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n        isActive\n        createdAt\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      paymentStatus\n      orderStatus\n      tipping\n      taxationAmount\n      reason\n      isRiderRinged\n      preparationTime\n      rider{\n        _id\n        name\n        username\n      }\n    }\n    }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/context/user.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "Balance", "content": "{\n    web3 {\n      account(id: $id) {\n        id\n        token(symbol: $token) {\n          id\n          balance\n          token {\n            id\n            decimals\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "mobile/src/graphql/queries.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!, $token: String!)"}, {"type": "mutation", "name": "ReviewOrder", "content": "{\n    reviewOrder(reviewInput:{\n      order:$order,\n      rating:$rating,\n      description:$description,\n    }){\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      orderDate\n      expectedTime\n      isPickedUp\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/RateAndReview/RateAndReview.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "(\n    $order:String!,\n    $rating:Int!,\n    $description:String,\n  )"}, {"type": "mutation", "name": "shareList", "content": "{\n    shareList(listId: $listId, userId: $userId) {\n      url\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/mutations/sharelist.js", "repo": "Marikita1007_prestashop_youtube"}, "arguments": "($listId: Int!, $userId: Int!)"}, {"type": "mutation", "name": "UpdateStudent", "content": "{\n      updateStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: UpdateStudentInput!)"}, {"type": "mutation", "name": "adminPromoteToInstructor", "content": "{\n    adminPromoteToInstructor(input: { profileId_: $profileId }) {\n      instructor {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($profileId: UUID!)"}, {"type": "mutation", "name": "deleteTask", "content": "{\n        deleteTask(taskId: $taskId, listId: $listId, moduleId: $moduleId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteTask.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($taskId: ID!, $listId: ID!, $moduleId: ID!)"}, {"type": "query", "name": "Application", "content": "{\n    application(id: $applicationId) {\n      name\n      id\n      package(id: $apiPackageId) {\n        id\n        name\n        description\n        instanceAuthRequestInputSchema\n        defaultInstanceAuth {\n          credential {\n            ... on OAuthCredentialData {\n              clientId\n              clientSecret\n              url\n              __typename\n            }\n            ... on BasicCredentialData {\n              username\n              password\n              __typename\n            }\n          }\n        }\n        instanceAuths {\n          id\n          context\n          inputParams\n          status {\n            condition\n            reason\n            message\n            timestamp\n          }\n        }\n        apiDefinitions {\n          data {\n            id\n            name\n            description\n            targetURL\n          }\n        }\n        eventDefinitions {\n          data {\n            id\n            name\n            description\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/ApiPackages/gql.js", "repo": "kyma-project_console"}, "arguments": "($applicationId: ID!, $apiPackageId: ID!)"}, {"type": "mutation", "name": "syncPaymentIntent", "content": "{\n    syncPaymentIntent(\n      stripePaymentIntentId: $stripePaymentIntentId\n      companyId: $companyId\n    ) {\n      pledgeStatus\n      updatedPledge\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Submit.js", "repo": "republik_plattform"}, "arguments": "($stripePaymentIntentId: ID!, $companyId: ID!)"}, {"type": "mutation", "name": "joinChannelWithToken", "content": "{\n    joinChannelWithToken(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/joinChannelWithToken.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: JoinChannelWithTokenInput!)"}, {"type": "query", "name": "getUser", "content": "{\n      getUser(id: $id) {\n        id\n        termsAccepted\n        notificationConfig {\n          matches\n          messages\n          subscribe\n        }\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-user.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "user", "content": "{\n                    user(id: $id) {\n                      safes {\n                        id\n                        organization\n                        deployed\n                        balances {\n                          amount\n                          token {\n                            id\n                          }\n                        }\n                      }\n                    }\n                  }", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/dapps/o-onboarding/processes/fromCirclesLand.ts", "repo": "circlesland_o-platform"}, "arguments": "($id: String!)"}, {"type": "query", "name": "SwapsByPair", "content": "{\n    swaps(\n      skip: $skip\n      where: { timestamp_gte: $timestamp, pair: $pairAddress }\n      orderBy: timestamp\n      orderDirection: asc\n    ) {\n      id\n      timestamp\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n    }\n  }", "metadata": {"commit_hash": "8bcfc4591ba8c5fb2d79e2399259bdee980e81bb", "file": "src/v2/apollo/queries.ts", "repo": "Uniswap_api-deprecated"}, "arguments": "($skip: Int!, $timestamp: BigInt!, $pairAddress: String!)"}, {"type": "mutation", "name": "ExecuteRulingMutation", "content": "{\n    executeRuling(\n      offerID: $offerID\n      amount: $amount\n      ruling: $ruling\n      commission: $commission\n      message: $message\n      refund: $refund\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $offerID: String!\n    $ruling: String!\n    $commission: String!\n    $message: String\n    $refund: String\n    $from: String\n  )"}, {"type": "query", "name": "prices", "content": "{\n    current: bundles(first: 1) {\n      ethPriceUSD\n    }\n    oneDay: bundles(first: 1, block: { number: $block24 }) {\n      ethPriceUSD\n    }\n    twoDay: bundles(first: 1, block: { number: $block48 }) {\n      ethPriceUSD\n    }\n    oneWeek: bundles(first: 1, block: { number: $blockWeek }) {\n      ethPriceUSD\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/hooks/useEthPrices.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($block24: Int!, $block48: Int!, $blockWeek: Int!)"}, {"type": "query", "name": "ideaIssueReplyFind", "content": "{\n      ideaIssueReplyFind(filter: $filter) {\n        edges {\n          node {\n            id\n            description\n            status\n            createdAt\n            author {\n              firstName\n              lastName\n              createdAt\n              avatarUrl\n            }\n            type\n            issueId\n            ideaId\n            ideaIssueId\n            scoreInstance\n            idea {\n              id\n              description\n            }\n            issue {\n              id\n              description\n            }\n            ideaIssue {\n              id\n              description\n              type\n            }\n          }\n        }\n        pageInfo {\n          totalCount\n          hasNextPage\n          hasPrevPage\n        }\n      }\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/reply.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($filter: PaginatedFilter!)"}, {"type": "mutation", "name": "deleteTaskChecklist", "content": "{\n  deleteTaskChecklist(input: {taskChecklistID: $taskChecklistID}) {\n    ok\n    taskChecklist {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskChecklistID: UUID!)"}, {"type": "query", "name": "account", "content": "{\n    account(id: $user) {\n      id\n      totalBorrowValueInEth\n      totalCollateralValueInEth\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}, "arguments": "($user: ID!)"}, {"type": "query", "name": "contents", "content": "{\n    contents(\n      where: { molochAddress: $molochAddress }\n      first: 1000\n      orderBy: createdAt\n      orderDirection: desc\n    ) {\n      id\n      createdAt\n      transactionHash\n      title\n      molochAddress\n      memberAddress\n      content\n      contentType\n      location\n      ratified\n      description\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/postQueries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($molochAddress: String!)"}, {"type": "mutation", "name": "subscribe", "content": "{\n    subscribeEvent(id: $id, artistID: $artistID) {\n      id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n        mimified\n      }\n      photo {\n        mimified\n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/components/organisms/subscribe-button/subscribeButton.mutations.js", "repo": "midianinja_som-web"}, "arguments": "($id: String!, $artistID: String!)"}, {"type": "query", "name": "todoList", "content": "{\n      __typename\n      todoList(id: 5) {\n        __typename\n        id\n        todos {\n          id\n          __typename\n          text\n          completed\n        }\n        filteredTodos: todos(completed: true) {\n          id\n          __typename\n          text\n          completed\n        }\n      }\n      noIdList: todoList(id: 6) {\n        __typename\n        id\n        todos {\n          __typename\n          text\n          completed\n        }\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "editCoupon", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Coupons.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($couponInput:CouponInput!)"}, {"type": "mutation", "name": "noteUnlinkAttachment", "content": "{\n  note_UnlinkAttachment(noteId: $noteId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n      name\n      mimeType\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($noteId: ID!, $attachmentId: ID!)"}, {"type": "subscription", "name": "OnCreatePost", "content": "{\n        onCreatePost(postOwner: \"${USERNAME1}\") {\n            id\n            title\n            postOwner\n        }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "topPools", "content": "{\n    pools(\n      first: ${count}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries-v3.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "mutation", "name": "approvePendingCommunityMember", "content": "{\n    approvePendingCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/approvePendingCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $input: ApprovePendingCommunityMemberInput!\n  )"}, {"type": "mutation", "name": "register", "content": "{\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/pages/Login.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}, "arguments": "($username: String!, $password: String!)"}, {"type": "query", "name": "issuances", "content": "{\n    issuances(where: { account: $user }) {\n      id\n      amount\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}, "arguments": "($user: String!)"}, {"type": "mutation", "name": "UpdatePhoto", "content": "{\n        updatePhoto(input: $input, condition: $condition) {\n            id\n            albumId\n            uploadTime\n            bucket\n            fullsize {\n                key\n                width\n                height\n            }\n            thumbnail {\n                key\n                width\n                height\n            }\n            format\n            exifMake\n            exitModel\n            objectDetected\n            SfnExecutionArn\n            ProcessingStatus\n            geoLocation {\n                Latitude {\n                    D\n                    M\n                    S\n                    Direction\n                }\n                Longtitude {\n                    D\n                    M\n                    S\n                    Direction\n                }\n            }\n            owner\n        }\n    }", "metadata": {"commit_hash": "856a02a2c036a2e9f8222da10b1d79c45d5c5ed4", "file": "lambda-functions/store-image-metadata/index.js", "repo": "aws-samples_lambda-refarch-imagerecognition"}, "arguments": "(\n        $input: UpdatePhotoInput!\n        $condition: ModelPhotoConditionInput\n    )"}, {"type": "query", "name": "QueryWithVarsVar", "content": "{\n            getVars(variables: $vars) {\n              __typename\n              name\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($vars: [String!])"}, {"type": "query", "name": "GetCoffee", "content": "{\n    coffee(id: $coffeeID) {\n      image\n    }\n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlQueries.js", "repo": "hashicorp_learn-terraform-preview-environment"}, "arguments": "($coffeeID: String!)"}, {"type": "query", "name": "LatestDemocracyTreasuryProposalPosts", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            topic: {\n                id: {\n                    _eq: $postTopic\n                }\n            },\n            onchain_link: {\n                onchain_treasury_proposal_id: {\n                    _is_null: false\n                },\n                onchain_motion_id: {\n                    _is_null: true\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_treasury_proposal_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_treasury_proposal_id\n                onchain_treasury_spend_proposal(where: {}) {\n                    id\n                    treasuryStatus(last: 1) {\n                        id\n                        status\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/OnChain/Treasury/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $postTopic: Int!, $limit: Int! = 5 )"}, {"type": "mutation", "name": "cancelMembership", "content": "{\n    cancelMembership(id: $id, details: $details) {\n      id\n      active\n      renew\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Cancel.js", "repo": "republik_plattform"}, "arguments": "($id: ID!, $details: CancellationInput!)"}, {"type": "mutation", "name": "startPasswordRecovery", "content": "{\n        result: startPasswordRecovery(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: StartPasswordRecoveryInput!)"}, {"type": "query", "name": "getVideoEmbed", "content": "{\n    embed(id: $id, embedType: $embedType) {\n      __typename\n      ... on YoutubeEmbed {\n        platform\n        id\n        createdAt\n        retrievedAt\n        userName\n        userUrl\n        thumbnail\n        title\n        userName\n        userProfileImageUrl\n        aspectRatio\n        durationMs\n        mediaId\n      }\n      ... on VimeoEmbed {\n        platform\n        id\n        createdAt\n        retrievedAt\n        userName\n        userUrl\n        thumbnail\n        title\n        userName\n        userProfileImageUrl\n        aspectRatio\n        src {\n          mp4\n          hls\n          thumbnail\n        }\n        durationMs\n        mediaId\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/modules/embed/index.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($id: ID!, $embedType: EmbedType!)"}, {"type": "mutation", "name": "submitComment", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "subscription", "name": "onCommentAdded", "content": "{\n        commentAdded(repoFullName: $repoFullName) {\n          id\n          content\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Query.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($repoFullName: String!)"}, {"type": "query", "name": "tipos", "content": "{\n    tipos {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/list/tipo-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "UpdateRiderLocation", "content": "{\n  updateRiderLocation(latitude:$latitude,longitude:$longitude){\n    _id\n  }\n}", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/context/user.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}, "arguments": "($latitude:String!,$longitude:String!)"}, {"type": "query", "name": "HAVE_USER_ADDRESS", "content": "{\n    haveUserAddress(platformId: $platformId) {\n      haveUserAddress\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "bot/src/graphql-operations/queries.js", "repo": "oneclickdapp_swordy-bot"}, "arguments": "($platformId: String!)"}, {"type": "query", "name": "post", "content": "{\n    post(id: $id) {\n      viewerHasFavorited\n      viewerHasStarred\n      favoritedCount\n      starredCount\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/ArticleViwer/schema.js", "repo": "coderplanets_coderplanets_admin"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "AddItem", "content": "{\n    addItem(command: $command) {\n      name,\n      itemsQuantity\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/addToCart/addToCartMutation.ts", "repo": "vuestorefront-community_virto-commerce"}, "arguments": "($command: InputAddItemType!)"}, {"type": "query", "name": "Orders", "content": "{\n  orders(offset:$offset){\n    _id\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n    }\n    items{\n      _id\n      title\n      food\n      description\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n    }\n    user{\n      _id\n      name\n      phone\n    }\n    rider{\n      _id\n      name\n    }\n    review{\n      _id\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    tipping\n    taxationAmount\n    createdAt\n    completionTime\n    orderDate\n    expectedTime\n    isPickedUp\n    deliveryCharges\n    acceptedAt\n    pickedAt\n    deliveredAt\n    cancelledAt\n    assignedAt\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/Stripe/Stripe.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($offset:Int)"}, {"type": "query", "name": "getMyUserSubscriptions", "content": "{\n    authors: employees(onlyPromotedAuthors: true) {\n      name\n      user {\n        id\n        subscribedByMe {\n          ...subInfo\n          userDetails: object {\n            ... on User {\n              id\n              slug\n              documents {\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n    myUserSubscriptions: me {\n      id\n      subscribedTo(objectType: User) {\n        nodes {\n          ...subInfo\n          userDetails: object {\n            ... on User {\n              id\n              slug\n              documents {\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  ${subInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "query", "name": "uniswapDayDatas", "content": "{\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      id\n      date\n      totalVolumeUSD\n      dailyVolumeUSD\n      dailyVolumeETH\n      totalLiquidityUSD\n      totalLiquidityETH\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($startTime: Int!, $skip: Int!)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)"}, {"type": "query", "name": "LoadCampaign", "content": "{\n    campaign(id: $id) {\n      ...Campaign\n    }\n  }\n  ${CampaignFragmentDoc}", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/campaign.generated.tsx", "repo": "brave_ads-ui"}, "arguments": "($id: String!)"}, {"type": "query", "name": "Posts", "content": "{\n    posts (first: 10, orderBy: [{ createdAt: DESC }], filter: { votes: { value: $minVotes, comparator: GREATER_THAN_OR_EQUAL } }) {\n      ...RssPosts\n    }\n  }\n  ${RSS_POSTS_FRAGMENT}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/RssService.ts", "repo": "marian2js_finsharing"}, "arguments": "($minVotes: Int!)"}, {"type": "mutation", "name": "deleteFile", "content": "{\n        deleteFile(fileId: $fileId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteFile.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($fileId: ID!)"}, {"type": "mutation", "name": "deleteBagItem", "content": "{\n    deleteBagItem(itemID: $itemID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}, "arguments": "($itemID: ID!)"}, {"type": "subscription", "name": "subscribeToUpdatedThreads", "content": "{\n    threadUpdated {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "paymentRemove", "content": "{\n    paymentRemove(_id: $_id)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}, "arguments": "($_id: String!)"}, {"type": "mutation", "name": "CreateTodoMutation", "content": "{\n    createTodo(description: $description) {\n      id\n      description\n      isDone\n    }\n  }", "metadata": {"commit_hash": "f787b31d5bf36dc74ea6030ce1982f331c8cf362", "file": "src/screens/Todo/TodoInput.js", "repo": "vctormb_react-todolist-apollo-prisma"}, "arguments": "($description: String!)"}, {"type": "query", "name": "ProfileQuery", "content": "{\n\t\t\t\tprofiles {\n\t\t\t\t\tid\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n                    position\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "049b0e0fd2a3ca39f6f831f29a67a22151380416", "file": "sveltekit-apollo/src/routes/api/graphql/index.ts", "repo": "crewnew-git_sveltekit-hasura-docker"}}, {"type": "mutation", "name": "SaveCurrencyConfiguration", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Currency/Currency.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($configurationInput:CurrencyConfigurationInput!)"}, {"type": "mutation", "name": "CreateCost", "content": "{\n    createCost(data: $data) {\n      ...Cost\n      ...Payer\n    }\n  }\n  ${CostFragmentDoc}\n  ${PayerFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}, "arguments": "($data: CostInput!)"}, {"type": "query", "name": "allSequences", "content": "{\n    sequences {\n      ...defaultSequence\n    }\n  }\n  ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/sequence/index.ts", "repo": "impactasaurus_app"}}, {"type": "query", "name": "WatchedLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "DeployMarketplace", "content": "{\n    deployMarketplace(\n      from: $from\n      token: $token\n      version: $version\n      autoWhitelist: $autoWhitelist\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $from: String\n    $token: String\n    $version: String\n    $autoWhitelist: Boolean\n  )"}, {"type": "mutation", "name": "Reset", "content": "{\n        reset {\n          echo\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "celoSystemHistory", "content": "{\n  celoSystemHistory {\n    BlockNumber\n    SnapshotDate\n    GoldTokenSupply\n    TotalLockedGoldBalance\n    NonVotingLockedGoldBalance\n    TotalCeloUSDValue\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Option/List/List.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "SendChatMessage", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/hooks/useChat.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($orderId: ID!, $messageInput: ChatMessageInput!)"}, {"type": "mutation", "name": "editUser", "content": "{\n                    editUser(username: $username, firstName: $firstName, lastName: $lastName, email: $email, role: $role, genre: $genre, profilePicture: $profilePicture, biography: $biography, profession: $profession, userToken: $userToken){\n                        user{\n                            username\n                            roles{\n                                role\n                            }\n                            age\n                            birthday\n                        }\n                    }\n                }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $firstName: String, $lastName: String, $email: String, $role: String, $genre: String, $profilePicture: String, $biography: String, $profession: String, $userToken: String!)"}, {"type": "mutation", "name": "SignOutMutation", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/api-routes-apollo-server-and-client-auth/pages/signout.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "userById", "content": "{\n    user(id: $id) {\n      ...UserBaseInfo\n    }\n  }\n  ${fragments.userBaseInfo}", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/graphql-authentication-and-authorization/__tests__/queries.ts", "repo": "mrdulin_apollo-graphql-tutorial"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "updateUserRole", "content": "{\n  updateUserRole(input: {userID: $userID, roleCode: $roleCode}) {\n    user {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($userID: UUID!, $roleCode: RoleCode!)"}, {"type": "query", "name": "ROOT_SELECTOR_QUERY", "content": "{\n        libraries {\n            list {\n                id\n                label(lang: $lang)\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/components/navigator/RootSelector.tsx", "repo": "leav-solutions_leav-engine"}, "arguments": "($lang: [AvailableLanguage!])"}, {"type": "mutation", "name": "languagePublish", "content": "{\n                languagePublish(languagePath: $languagePath, languageMeta: $languageMeta) {\n                    ${LANGUAGE_META}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/language/LanguageClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "(\n                $languagePath: String!,\n                $languageMeta: LanguageMetaInput!,\n            )"}, {"type": "mutation", "name": "CreateList", "content": "{\n    createList(\n      name: $name\n      description: $description\n      requesterId: $requesterId\n      responderId: $responderId\n      tasks: $tasks\n    ) {\n      list {\n        id\n        name\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/CreateList.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "(\n    $name: String!\n    $description: String\n    $requesterId: ID!\n    $responderId: ID!\n    $tasks: [TaskAttributes!]\n  )"}, {"type": "subscription", "name": "getVehicle", "content": "{\n          vehicle (where: { id: { _eq: $vehicleId }}) {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($vehicleId: String!)"}, {"type": "query", "name": "getWorkspaceMembers", "content": "{\n  workspace(id: $workspaceId) {\n    id\n    creatorUser {\n      id\n    }\n    workspaceMembers(order_by: {createdAt: asc}) {\n      ...getWorkspaceMembersWorkspaceMember\n    }\n    workspaceMemberInvites(order_by: {createdAt: asc}) {\n      ...getWorkspaceMembersWorkspaceMemberInvite\n    }\n  }\n}\n    ${GetWorkspaceMembersWorkspaceMemberFragmentDoc}\n${GetWorkspaceMembersWorkspaceMemberInviteFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($workspaceId: uuid!)"}, {"type": "query", "name": "One", "content": "{\n        user(t: $t) {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/parser.test.ts", "repo": "Shopify_react-apollo"}, "arguments": "($t: String!)"}, {"type": "query", "name": "topPools", "content": "{\n    pools0: pools(\n      first: 100\n      where: {token0_contains_nocase: \"${address}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n    pools1: pools(\n      first: 100\n      where: {token1_contains_nocase: \"${address}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries-v3.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "CommitToPR", "content": "{\n  pullRequests: search (first: 1, type: ISSUE, query: $query) {\n    nodes {\n      ... on PullRequest {\n        id,\n        number,\n        title,\n        bodyText,\n        state,\n        url,\n        headRef {\n          id,\n          prefix,\n          name\n        },\n        repository {\n          name\n          owner {\n            login\n          }\n        },\n        author {\n          login\n        },\n        commits(last: 1) {\n          nodes {\n            commit {\n              oid,\n              status {\n                state\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "5358526a9bb7c3ab826658a613e5b487b064a682", "file": "src/server/utils/get-pr-from-commit.ts", "repo": "PolymerLabs_project-health"}, "arguments": "($query: String!)"}, {"type": "mutation", "name": "insert_vehicle", "content": "{\n    insert_vehicle (objects: $objects){\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "hasura_sample-apps"}, "arguments": "($objects: [vehicle_insert_input!]! )"}, {"type": "query", "name": "transactions", "content": "{\n    mintsAs0: mints(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    mintsAs1: mints(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs0: swaps(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs1: swaps(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs0: burns(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs1: burns(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/tokens/transactions.ts", "repo": "21orangehat_upool-listagem"}, "arguments": "($address: Bytes!)"}, {"type": "mutation", "name": "updateCard", "content": "{\n    updateCard(\n      id: $id\n      portrait: $portrait\n      statement: $statement\n      payload: $payload\n    ) {\n      ...MyCard\n    }\n  }\n\n  ${fragmentCard}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/Update.js", "repo": "republik_plattform"}, "arguments": "(\n    $id: ID!\n    $portrait: String\n    $statement: String!\n    $payload: JSON\n  )"}, {"type": "query", "name": "GetWorkspaceAndProject", "content": "{\n  workspaces(where: {slug: {_eq: $workspaceSlug}}) {\n    ...Workspace\n  }\n}\n    ${WorkspaceFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($workspaceSlug: String!, $projectSlug: String)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id)\n      {\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryBounds{\n        coordinates\n      }\n      username\n      password\n      deliveryTime\n      minimumOrder\n      tax\n      isAvailable\n      stripeDetailsSubmitted\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n      owner{\n        _id\n        email\n      }\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/DeliveryBoundsAndLocation.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String)"}, {"type": "query", "name": "celoSystemHistory", "content": "{\n  celoSystemHistory {\n    BlockNumber\n    SnapshotDate\n    GoldTokenSupply\n    TotalLockedGoldBalance\n    NonVotingLockedGoldBalance\n    TotalCeloUSDValue\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "query", "name": "getTopThreads", "content": "{\n    meta {\n      topThreads {\n        ...threadInfo\n      }\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/admin/src/api/queries.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "addComment", "content": "{\n    createComment(data: { name: $name, message: $message }) {\n      name\n    }\n  }", "metadata": {"commit_hash": "af4fa7c060cd40c673ed1fc373f216b91cb888d1", "file": "src/pages/guestbook.js", "repo": "netlify_netlify-dev-gatsby-fauna-demo"}, "arguments": "($name: String!, $message: String!)"}, {"type": "query", "name": "RecommendationJobRuns", "content": "{\n\t\tjobRuns(jobId: $jobId, size: $size, sort: $sort, start: $start) {\n\t\t\tjobRuns {\n\t\t\t\tcompletedDate\n\t\t\t\tcontext {\n\t\t\t\t\tkey\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tid\n\t\t\t\tstatus\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationJobRunsQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$jobId: String!\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t\t$start: Int!\n\t)"}, {"type": "mutation", "name": "acceptOrRejectOrganizationInviteById", "content": "{\n        obj: acceptOrRejectOrganizationInviteById(id: $id, data: $data) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($id: ID!, $data: AcceptOrRejectOrganizationInviteInput!)"}, {"type": "query", "name": "someBigQuery", "content": "{\n        id\n        stringField(arg: $stringArg)\n        numberField(intArg: $intArg, floatArg: $floatArg)\n        nullField\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/readFromStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "(\n        $stringArg: String = \"This is a default string!\"\n        $intArg: Int = 0\n        $floatArg: Float\n      )"}, {"type": "mutation", "name": "sendEmail", "content": "{\n\t\tsendEmail(input:$input) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}, "arguments": "($input:EmailInput!)"}, {"type": "query", "name": "Vendors", "content": "{\n    vendors{\n      _id\n      email\n      userType\n      restaurants{\n        _id\n        orderId\n        orderPrefix\n        slug\n        name\n        image\n        address\n        location{coordinates}\n        zone{\n          _id\n          title\n        }\n      }\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/SuperAdminDashboard.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "resetOrganization", "content": "{\n        result: resetOrganization(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: ResetOrganizationInput!)"}, {"type": "query", "name": "poolDayDatas", "content": "{\n    poolDayDatas(\n      first: 1000\n      skip: $skip\n      where: { pool: $address, date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n    ) {\n      date\n      volumeUSD\n      tvlUSD\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/pools/chartData.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($startTime: Int!, $skip: Int!, $address: Bytes!)"}, {"type": "mutation", "name": "updateUser", "content": "{\n    updateUser(\n      userId: $id\n      birthday: $birthday\n      firstName: $firstName\n      lastName: $lastName\n      phoneNumber: $phoneNumber\n      address: $address\n    ) {\n      id\n      name\n      firstName\n      lastName\n      phoneNumber\n      address {\n        id\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Particulars/index.js", "repo": "republik_plattform"}, "arguments": "(\n    $id: ID!\n    $birthday: Date\n    $firstName: String!\n    $lastName: String!\n    $phoneNumber: String\n    $address: AddressInput!\n  )"}, {"type": "mutation", "name": "SendChatMessage", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/hooks/useChat.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($orderId: ID!, $messageInput: ChatMessageInput!)"}, {"type": "mutation", "name": "CreateReview", "content": "{\n    createReview(\n      data: {\n        content: $reviewContent\n        rating: $rating\n        laptop: $id\n        user: $userID\n      }\n    ) {\n      data {\n        id\n        attributes {\n          content\n          user {\n            data {\n              id\n              attributes {\n                username\n              }\n            }\n          }\n          rating\n          laptop {\n            data {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "920b5d6b04a8ad98c88c96b3bcbd236e91e9f462", "file": "apollo/constants/graphql.js", "repo": "silversoftdev_Geeks-eShop"}, "arguments": "(\n    $reviewContent: String!\n    $rating: String!\n    $id: ID!\n    $userID: ID!\n  )"}, {"type": "mutation", "name": "UniswapInitFactory", "content": "{\n    uniswapInitializeFactory(\n      from: $from\n      exchange: $exchange\n      factory: $factory\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $from: String!\n    $exchange: String\n    $factory: String\n  )"}, {"type": "query", "name": "listAllEnvironmentConsumptionRoles", "content": "{\n      listAllEnvironmentConsumptionRoles(\n        environmentUri: $environmentUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          consumptionRoleUri\n          consumptionRoleName\n          environmentUri\n          groupUri\n          IAMRoleArn\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/listAllEnvironmentConsumptionRoles.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $filter: ConsumptionRoleFilter\n      $environmentUri: String!\n    )"}, {"type": "query", "name": "loadMoreCommunityThreads", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityThreadConnection\n    }\n  }\n  ${threadInfoFragment}\n  ${communityInfoFragment}\n  ${communityThreadConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunityThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $after: String\n    $id: ID\n    $sort: CommunityThreadConnectionSort\n  )"}, {"type": "subscription", "name": "onRepoChange", "content": "{\n    repoChange(repoId: $repoId) {\n      mutation\n      repo {\n        ...EditPageRepo\n      }\n      commit {\n        ...SimpleCommit\n      }\n    }\n  }\n  ${fragments.EditPageRepo}\n  ${fragments.SimpleCommit}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/VersionControl/index.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!)"}, {"type": "query", "name": "prices", "content": "{\n    current: bundles(first: 1, subgraphError: allow) {\n      ethPriceUSD\n    }\n    oneDay: bundles(first: 1, block: { number: $block24 }, subgraphError: allow) {\n      ethPriceUSD\n    }\n    twoDay: bundles(first: 1, block: { number: $block48 }, subgraphError: allow) {\n      ethPriceUSD\n    }\n    oneWeek: bundles(first: 1, block: { number: $blockWeek }, subgraphError: allow) {\n      ethPriceUSD\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/hooks/useEthPrices.ts", "repo": "21orangehat_upool-listagem"}, "arguments": "($block24: Int!, $block48: Int!, $blockWeek: Int!)"}, {"type": "mutation", "name": "addComment", "content": "{\n    createComment(data: { name: $name, message: $message }) {\n      name\n    }\n  }", "metadata": {"commit_hash": "af4fa7c060cd40c673ed1fc373f216b91cb888d1", "file": "src/pages/guestbook.js", "repo": "netlify_netlify-dev-gatsby-fauna-demo"}, "arguments": "($name: String!, $message: String!)"}, {"type": "query", "name": "GetContactTags", "content": "{\n  contact(id: $id) {\n    id\n    tags {\n      ...Tag\n    }\n  }\n}\n    ${TagFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($id: ID!)"}, {"type": "subscription", "name": "SubscriptionAssignRider", "content": "{\n      subscriptionAssignRider(riderId:$riderId){\n      order{\n          _id\n          orderId\n          createdAt\n          acceptedAt\n          pickedAt\n          isPickedUp\n          deliveredAt\n          expectedTime\n          deliveryCharges\n          restaurant{\n            _id\n            name\n            address\n            location{coordinates}\n          }\n          deliveryAddress{\n            location{coordinates}\n            deliveryAddress\n            label\n            details\n          }\n          items{\n            _id\n            title\n            food\n            description\n            quantity\n            variation{\n              _id\n              title\n              price\n            }\n            addons{\n              _id\n              options{\n                _id\n                title\n                price\n              }\n              title\n              description\n              quantityMinimum\n              quantityMaximum\n            }\n            isActive\n            createdAt\n          }\n          user{\n            _id\n            name\n            phone\n          }\n          paymentMethod\n          paidAmount\n          orderAmount\n          paymentStatus\n          orderStatus\n          tipping\n          taxationAmount\n          reason\n          isRiderRinged\n          preparationTime\n          rider{\n            _id\n            name\n            username\n          }\n      }\n      origin\n      }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($riderId:String!)"}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName) {\n        comments {\n          ...authorFields\n        }\n      }\n    }\n\n    fragment authorFields on User {\n      postedBy {\n        login\n        html_url\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($repoName: String!)"}, {"type": "mutation", "name": "start", "content": "{\n        start @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GetMode", "content": "{\n        mode @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/SWITCH_MODE.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "mutation", "name": "deleteManyProyectos", "content": "{\n      deleteManyProyectos(where: $where) {\n        count\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: ProyectoWhereInput!)"}, {"type": "query", "name": "GetUser", "content": "{\n    user(username: $username) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/testing/mocking/__tests__/MockedProvider.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($username: String!)"}, {"type": "query", "name": "Rider", "content": "{\n    rider(id:$id){\n      _id\n      name\n      username\n      available\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($id:String)"}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.stencilApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "signinResidentUser", "content": "{\n        result: signinResidentUser(data: $data) { user { id name }, token }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: SigninResidentUserInput!)"}, {"type": "query", "name": "blocks", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($timestampFrom: Int!, $timestampTo: Int!)"}, {"type": "query", "name": "loadUser", "content": "{\n  me\n  {\n    id\n    userName\n    email\n    emailConfirmed\n    photoUrl\n    phoneNumber\n    permissions\n    \n    contact\n    {\n      firstName\n      lastName\n      fullName      \n    }\n  }\n}", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/getMe/getMeQuery.ts", "repo": "vuestorefront-community_virto-commerce"}}, {"type": "query", "name": "moloches", "content": "{\n    moloches(orderBy: summoningTime, first: 100, skip: $skip) {\n      id\n      apiData @client\n      version\n      title\n      totalShares\n      summoningTime\n      guildBankAddress\n      guildBankBalanceV1\n      members {\n        id\n        memberAddress\n        createdAt\n      }\n      proposals {\n        id\n        createdAt\n        votes {\n          id\n          createdAt\n        }\n      }\n      depositToken {\n        tokenAddress\n        symbol\n        decimals\n      }\n      tokenBalances {\n        id\n        tokenBalance\n        guildBank\n        token {\n          decimals\n          tokenAddress\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c9f05d8022506070d39119d721d3ac1ad23c8cf", "file": "src/util/queries.js", "repo": "mjtechworks_daohaus-web"}, "arguments": "($skip: Int)"}, {"type": "mutation", "name": "submitRepository", "content": "{\n          submitRepository(repoFullName: \"apollographql/apollo-client\") {\n            createdAt\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addFarmer", "content": "{\n\t\taddFarmer(farmId: $farmId, friendId: $friendId)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}, "arguments": "($farmId: ID!, $friendId: ID!)"}, {"type": "mutation", "name": "UpdateStatus", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/DispatchRestaurant.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!,$orderStatus:String!)"}, {"type": "mutation", "name": "DeletePostMutation", "content": "{\n    deletePost(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/quickstart-with-apollo/src/components/DetailPage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "thing", "content": "{\n      entry {\n        value\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id)\n      {\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryBounds{\n        coordinates\n      }\n      username\n      password\n      deliveryTime\n      minimumOrder\n      tax\n      isAvailable\n      stripeDetailsSubmitted\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n      owner{\n        _id\n        email\n      }\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/VendorProfile.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String)"}, {"type": "query", "name": "project", "content": "{\n    project(id: $id) {\n      id\n      name\n      description\n      createdAt\n      website\n      twitter\n      github\n      image\n      avatar\n      totalVotes\n      isRepresentative\n      delegates {\n        id\n      }\n      currentChallenge {\n        id\n        endTime\n        owner {\n          id\n          name\n        }\n        description\n        resolved\n        keepVotes\n        removeVotes\n        votes {\n          id\n        }\n      }\n      owner {\n        id\n      }\n      categories {\n        id\n        name\n        imageUrl\n        parentCategory {\n          id\n          name\n        }\n        subcategories {\n          id\n          name\n          imageUrl\n          parentCategory {\n            id\n            name\n          }\n          subcategories {\n            id\n            name\n            imageUrl\n            parentCategory {\n              id\n              name\n              parentCategory {\n                id\n                name\n              }\n            }\n            subcategories {\n              id\n              name\n              imageUrl\n              parentCategory {\n                id\n                name\n                parentCategory {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getVideoEmbed", "content": "{\n    embed(id: $id, embedType: $embedType) {\n      __typename\n      ... on YoutubeEmbed {\n        platform\n        id\n        createdAt\n        retrievedAt\n        userName\n        userUrl\n        thumbnail\n        title\n        userName\n        userProfileImageUrl\n        aspectRatio\n        durationMs\n        mediaId\n      }\n      ... on VimeoEmbed {\n        platform\n        id\n        createdAt\n        retrievedAt\n        userName\n        userUrl\n        thumbnail\n        title\n        userName\n        userProfileImageUrl\n        aspectRatio\n        src {\n          mp4\n          hls\n          thumbnail\n        }\n        durationMs\n        mediaId\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/editor/modules/embed/index.js", "repo": "republik_plattform"}, "arguments": "($id: ID!, $embedType: EmbedType!)"}, {"type": "subscription", "name": "getVehicle", "content": "{\n          vehicle (where: { id: { _eq: $vehicleId }}) {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($vehicleId: String!)"}, {"type": "query", "name": "postRequiringReview", "content": "{\n          postRequiringReview {\n            id\n            title\n            currentReviewer @client {\n              id @export(as: \"reviewerId\")\n            }\n          }\n          reviewerDetails(reviewerId: $reviewerId) {\n            name\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/export.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($reviewerId: Int!)"}, {"type": "query", "name": "getAtHomeBagSection", "content": "{\n    me {\n      id\n      returnPendingSection: bagSection(status: ReturnPending) {\n        id\n        status\n        bagItems {\n          id\n          reservationPhysicalProduct {\n            id\n            physicalProduct {\n              id\n              productVariant {\n                id\n                displayLong\n                product {\n                  id\n                  slug\n                  name\n                  brand {\n                    id\n                    name\n                  }\n                  images {\n                    id\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/ReturnYourBagConfirmation.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "allEvents", "content": "{\n    allEvents( \n      event: $event\n      paginator: $paginator\n    ) {\n     ${eventType}\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event-curatorship/eventCuratorship.query.js", "repo": "midianinja_som-web"}, "arguments": "( \n    $event: EventInput\n    $paginator: PaginatorInput\n  )"}, {"type": "query", "name": "VerifyRepo", "content": "{\n  repository(owner: $owner, name: $repo) {\n    name\n    owner {\n      login\n      avatarUrl\n    }\n  }\n}", "metadata": {"commit_hash": "5358526a9bb7c3ab826658a613e5b487b064a682", "file": "src/server/apis/user.ts", "repo": "PolymerLabs_project-health"}, "arguments": "($owner: String!, $repo: String!)"}, {"type": "query", "name": "APIRule", "content": "{\n    APIRule(name: $name, namespace: $namespace) {\n      name\n      generation\n      json\n      spec {\n        rules {\n          path\n          methods\n          accessStrategies {\n            name\n            config\n          }\n        }\n        service {\n          host\n          name\n          port\n        }\n      }\n      status {\n        apiRuleStatus {\n          code\n          description\n        }\n      }\n      ownerSubscription {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($name: String!, $namespace: String!)"}, {"type": "mutation", "name": "StoreInquirySubmission", "content": "{\n    createInquirySubmission(input:$input){\n      id\n    }\n  }", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/inquiry/utils/store-inquiry.js", "repo": "endeavorb2b_websites"}, "arguments": "($input: CreateInquirySubmissionMutationInput!)"}, {"type": "query", "name": "positionsOnFarming", "content": "{\n    deposits(\n      orderBy: id\n      orderDirection: desc\n      where: { owner: $account, pool: $pool, onFarmingCenter: true }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($account: Bytes, $pool: Bytes)"}, {"type": "query", "name": "ReferendumPostAndComments", "content": "{\n        posts(where: {onchain_link: {onchain_referendum_id: {_eq: $id}}}) {\n            ...referendumPost\n        }\n    }\n    ${referendumPost}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/ReferendumPost/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($id:Int!)"}, {"type": "mutation", "name": "UpdateTask", "content": "{\n    updateTask(\n      id: $id\n      name: $name\n      description: $description\n      priority: $priority\n      status: $status\n      dueDate: $dueDate\n    ) {\n      success\n      errors {\n        path\n        message\n      }\n      task {\n        id\n        name\n        priority\n        status\n        dueDate\n        updatedAt\n        userOwners {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamOwners {\n          id\n          name\n        }\n        userReviewers {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamReviewers {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/UpdateTask.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "(\n    $id: ID!\n    $name: String\n    $description: String\n    $priority: String\n    $status: String\n    $dueDate: String\n  )"}, {"type": "query", "name": "listSegments", "content": "{\n        segments {\n            id\n            name\n            description\n            createdAt\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentList/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "query", "name": "tokens", "content": "{\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($value: String, $id: String)"}, {"type": "query", "name": "Resolutions", "content": "{\n    resolutions {\n      _id\n      name\n      completed\n      goals {\n        _id\n        name\n        completed\n      }\n    }\n    user {\n      _id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/graphql-list/imports/ui/App.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "GetConfiguration", "content": "{\n    configuration{\n      _id\n      email\n      emailName\n      password\n      enableEmail\n      clientId\n      clientSecret\n      sandbox\n      publishableKey\n      secretKey\n      currency\n      currencySymbol\n      deliveryRate\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Configuration.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "fetcChallengeIdeas", "content": "{\n            ideas(challengeId: $challengeId) {\n              totalCount\n              edges {\n                node {\n                  id\n                  title\n                  description\n                  imageUrl\n                  challenge {\n                    id\n                    title\n                  }\n\n                  reactions {\n                    totalCount\n                  }\n\n                  reactionsSummary {\n                    value\n                    totalCount\n                  }\n\n                  myReaction {\n                    id\n                    value\n                  }\n\n                  createdDate\n                  createdBy {\n                    id\n                    name\n                    imageUrl\n                  }\n                  modifiedDate\n                  modifiedBy {\n                    id\n                    name\n                    imageUrl\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($challengeId: String!)"}, {"type": "query", "name": "Simple", "content": "{\n        keep\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "resetChannelJoinToken", "content": "{\n    resetChannelJoinToken(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/resetChannelJoinToken.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: ResetChannelJoinTokenInput!)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/client-option.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "getPlatformAuthorSession", "content": "{\n      getPlatformAuthorSession(\n         awsAccount: $awsAccount\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/getPlatformAuthorSession.js", "repo": "awslabs_aws-dataall"}, "arguments": "($awsAccount: String)"}, {"type": "query", "name": "block", "content": "{\n            block(limit: 1, where: {block_hash: {_eq: \"${input}\"}}) {\n              block_number\n            }\n          }", "metadata": {"commit_hash": "460150ece21daab197cabf2edf84bc00180b9f27", "file": "frontend/mixins/commonMixin.js", "repo": "Colm3na_polkastats-subsocial"}}, {"type": "query", "name": "Rider", "content": "{\n    rider(id:$id){\n      _id\n      name\n      username\n      available\n    }\n  }", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/components/Sidebar/Profile/Profile.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "Coupon", "content": "{\n  coupon(coupon:$coupon){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Cart/Cart.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($coupon:String!)"}, {"type": "mutation", "name": "upvoteComment", "content": "{\n    VoteProjectComment(input: { auth_token: $authToken, project_comment_id: $id }) {\n      total_votes\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($authToken: String!, $id: ID!)"}, {"type": "mutation", "name": "subscribeToWebPush", "content": "{\n    subscribeWebPush(subscription: $subscription)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/subscriptions/index.js", "repo": "withspectrum_spectrum"}, "arguments": "($subscription: WebPushSubscription!)"}, {"type": "mutation", "name": "submitVotingBallot", "content": "{\n    submitVotingBallot(votingId: $votingId, optionId: $optionId) {\n      id\n      userHasSubmitted\n      userSubmitDate\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/Voting.js", "repo": "republik_plattform"}, "arguments": "($votingId: ID!, $optionId: ID)"}, {"type": "mutation", "name": "reclaimPledge", "content": "{\n    reclaimPledge(pledgeId: $pledgeId)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Claim.js", "repo": "republik_plattform"}, "arguments": "($pledgeId: ID!)"}, {"type": "mutation", "name": "shareProjectByLinkId", "content": "{\n      shareProjectByLinkId(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/project_sharelink.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "updateNewsletterSubscription", "content": "{\n    updateNewsletterSubscription(name: $name, subscribed: $subscribed) {\n      ...NewsletterInfo\n    }\n  }\n  ${newsletterFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/NewsletterSubscriptions/index.js", "repo": "republik_plattform"}, "arguments": "(\n    $name: NewsletterName!\n    $subscribed: Boolean!\n  )"}, {"type": "mutation", "name": "UpdateTeam", "content": "{\n    updateTeam(id: $id, input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/updateTeam.js", "repo": "PREreview_PREreview-2"}, "arguments": "($id: ID, $input: TeamInput!)"}, {"type": "query", "name": "project", "content": "{\n  project(uniqueName: $uniqueName) {\n    ${PROJECT}\n    services {\n      ${SERVICE}\n    }\n    environments{\n      name\n      deployments{\n        serviceId\n        version{\n          name\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($uniqueName: String!)"}, {"type": "mutation", "name": "updateOrganizationEmail", "content": "{\n  emailUpdateInOrganization(organizationId: $organizationId, input: $input) {\n    primary\n    label\n    id\n    email\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!, $input: EmailUpdateInput!)"}, {"type": "mutation", "name": "DeployToken", "content": "{\n    deployToken(\n      name: $name\n      symbol: $symbol\n      decimals: $decimals\n      supply: $supply\n      type: $type\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $name: String\n    $symbol: String\n    $decimals: String\n    $supply: String\n    $type: String\n    $from: String\n  )"}, {"type": "subscription", "name": "getLogsSubscription", "content": "{\n  logs(appID: $appID, service: $service, from: $from) {\n    log\n    service\n    timestamp\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appID: String!, $service: String, $from: Timestamp)"}, {"type": "query", "name": "repoListSearch", "content": "{\n    repos: reposSearch(\n      first: 50\n      after: $after\n      search: $search\n      phases: $phases\n      orderBy: $orderBy\n      isTemplate: $isTemplate\n    ) {\n      totalCount\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      nodes {\n        id\n        meta {\n          publishDate\n        }\n        latestCommit {\n          id\n          date\n          message\n          author {\n            name\n          }\n          document {\n            id\n            meta {\n              template\n              title\n              contributors {\n                name\n                kind\n                user {\n                  id\n                  username\n                }\n              }\n              series {\n                title\n                overview {\n                  id\n                  repoId\n                }\n                episodes {\n                  label\n                  document {\n                    id\n                    repoId\n                  }\n                }\n              }\n              section {\n                id\n                meta {\n                  title\n                }\n              }\n              format {\n                id\n                meta {\n                  title\n                }\n              }\n              dossier {\n                id\n                meta {\n                  title\n                }\n              }\n            }\n          }\n        }\n        latestPublications {\n          name\n          prepublication\n          live\n          scheduledAt\n          document {\n            id\n            meta {\n              path\n              format {\n                id\n                meta {\n                  externalBaseUrl\n                }\n              }\n            }\n          }\n        }\n        currentPhase {\n          key\n          color\n          label\n        }\n      }\n    }\n    phasesAgg: reposSearch(search: $search, isTemplate: false) {\n      phases {\n        key\n        color\n        label\n        count\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Repo/Table.js", "repo": "republik_plattform"}, "arguments": "(\n    $after: String\n    $search: String\n    $phases: [RepoPhaseKey!]\n    $orderBy: RepoOrderBy\n    $isTemplate: Boolean\n  )"}, {"type": "mutation", "name": "MOVE_TREE_ELEMENT", "content": "{\n        treeMoveElement(treeId: $treeId, nodeId: $nodeId, parentTo: $parentTo, order: $order) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/treeMoveElementMutation.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($treeId: ID!, $nodeId: ID!, $parentTo: ID, $order: Int)"}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getExpandE", "content": "{\n    expand_e(id: $id, class: $class, io: $io, rid: $rid, page: $page, size: $size) {\n      id\n      class\n      color\n      name\n      alias\n      properties {\n        n\n        v\n      }\n      inV {\n        id\n        class\n        color\n        name\n        expand\n        analysis\n        alias\n        properties {\n          n\n          v\n        }\n      }\n      outV {\n        id\n        class\n        color\n        name\n        expand\n        analysis\n        alias\n        properties {\n          n\n          v\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c507be725bcade8c618ec274193badbc04909dcb", "file": "studio/webui/src/components/G6SearchGraph/G6Graph/InAndOut/gql.js", "repo": "AISHU-Technology_kweaver"}, "arguments": "($id: ID!, $class: String!, $io: String!, $rid: String!, $page: Int = 1, $size: Int = 20)"}, {"type": "query", "name": "Test", "content": "{\n    foo(id: $id) {\n      bar\n      ${makeAliasFields('title', 1000)}\n    }\n  }", "metadata": {"commit_hash": "70937795396931ac4c0a7c16db40e168fa2da38a", "file": "src/__tests__/index.ts", "repo": "apollographql_apollo-link-persisted-queries"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Orders", "content": "{\n  orders(offset:$offset){\n    _id\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n    }\n    items{\n      _id\n      title\n      food\n      description\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n    }\n    user{\n      _id\n      name\n      phone\n    }\n    rider{\n      _id\n      name\n    }\n    review{\n      _id\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    tipping\n    taxationAmount\n    createdAt\n    completionTime\n    orderDate\n    expectedTime\n    isPickedUp\n    deliveryCharges\n    acceptedAt\n    pickedAt\n    deliveredAt\n    cancelledAt\n    assignedAt\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/Stripe/Stripe.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($offset:Int)"}, {"type": "mutation", "name": "editTeam", "content": "{\n        editTeam(teamId: $teamId, input: $input) {\n            name\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditTeam.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($teamId: ID!, $input: EditTeamInput!)"}, {"type": "mutation", "name": "delete_todos", "content": "{\n    delete_todos(where: {is_completed: {_eq: true}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "deletePackage", "content": "{\n    deletePackage(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/ApiPackages/gql.js", "repo": "kyma-project_console"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "deploymentsForProjectService", "content": "{\n  deploymentsForProjectService(projectId: $projectId, serviceId: $serviceId) {\n    ${DEPLOYMENT_WITH_ENVIRONMENT_NAME}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/deployment/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($projectId: Int!, $serviceId: Int!)"}, {"type": "mutation", "name": "togglePendingUser", "content": "{\n    togglePendingUser(input: $input) {\n      ...channelInfo\n      pendingUsers {\n        ...userInfo\n      }\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${channelInfoFragment}\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/toggleChannelPendingUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: TogglePendingUserInput!)"}, {"type": "mutation", "name": "start", "content": "{\n        start(field: $id) @client {\n          field\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "myBlogs", "content": "{\n        myBlogs: blogs(\n            where: { OR: [{ creator: { id: $id } }, { authors: { id: $id } }] }\n            options: { limit: $limit, skip: $skip, sort: createdAt_DESC }\n        ) {\n            id\n            name\n            creator {\n                id\n                email\n            }\n            createdAt\n        }\n        hasNextBlogs: blogs(\n            where: { OR: [{ creator: { id: $id } }, { authors: { id: $id } }] }\n            options: { limit: 1, skip: $hasNextBlogsSkip, sort: createdAt_DESC }\n        ) {\n            id\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "($id: ID, $skip: Int, $limit: Int, $hasNextBlogsSkip: Int)"}, {"type": "mutation", "name": "ImportWallet", "content": "{\n    importWallet(role: $role, name: $name, privateKey: $privateKey) {\n      ...balanceFields\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($role: String, $name: String, $privateKey: String!)"}, {"type": "query", "name": "someBigQuery", "content": "{\n        id\n        stringField(arg: $stringArg)\n        numberField(intArg: $intArg, floatArg: $floatArg)\n        nullField\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/readFromStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n        $stringArg: String = \"This is a default string!\"\n        $intArg: Int = 0\n        $floatArg: Float\n      )"}, {"type": "mutation", "name": "VouchForAgent", "content": "{\n    vouchForAgent(agentId: $agentId)\n  }", "metadata": {"commit_hash": "cb7ee7787a2a0ee259216418899710641070d85e", "file": "ui/src/graphql/queries.ts", "repo": "holochain-open-dev_social-triangulation"}, "arguments": "($agentId: ID!)"}, {"type": "mutation", "name": "addRelationshipToOrganization", "content": "{\n  organization_AddRelationship(\n    organizationId: $organizationId\n    relationship: $relationship\n  ) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!, $relationship: OrganizationRelationship!)"}, {"type": "query", "name": "OrderStripe", "content": "{\n  orderStripe(id:$id){\n    _id\n    restaurant{\n      _id\n      name\n      image\n      slug\n      address\n      location {\n        coordinates\n      }\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n      details\n      label\n    }\n    deliveryCharges\n    orderId\n    user{\n      _id\n      phone\n      email\n      name\n    }\n    items{\n      _id\n      food\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    taxationAmount\n    tipping\n    paymentStatus\n    paymentMethod\n    orderAmount\n    paidAmount\n    orderStatus\n    orderDate\n    expectedTime\n    isPickedUp\n    createdAt\n    preparationTime\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/Stripe/Stripe.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "DeleteAddress", "content": "{\n    deleteAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Checkout/DeliveryCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:ID!)"}, {"type": "mutation", "name": "submitComment", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.stencilApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "mutation", "name": "updateDashboard", "content": "{\n      updateDashboard(input: $input) {\n        dashboardUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/updateDashboard.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: UpdateDashboardInput)"}, {"type": "mutation", "name": "resetPassword", "content": "{\n        resetPassword(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "AcceptOffer", "content": "{\n    acceptOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $from: String)"}, {"type": "mutation", "name": "transferOwnership", "content": "{\n    transferOwnership(projectId: $projectId, newOwnerAddress: $newOwnerAddress)\n      @client {\n      id\n      name\n      description\n      avatar\n      image\n      website\n      github\n      twitter\n      isRepresentative\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}, "arguments": "($projectId: String!, $newOwnerAddress: String!)"}, {"type": "subscription", "name": "getUpdatedEmployee", "content": "{\n    getUpdatedEmployee(_id: $_id) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      employeeRole\n      permanentPasswordSet\n      password\n      tokenCount\n      createdAt\n      profilePicture\n      notifications {\n        _id\n        new\n        type\n        date\n        time\n        allDay\n        associatedClientFirstName\n        associatedClientLastName\n        originalAssociatedStaffFirstName\n        originalAssociatedStaffLastName\n        newAssociatedStaffFirstName\n        newAssociatedStaffLastName\n        createdByFirstName\n        createdByLastName\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/subscriptions/getUpdatedEmployeeSubscription.js", "repo": "HappyDream0317_Microservices-GrowLabs"}, "arguments": "($_id: ID)"}, {"type": "query", "name": "APIRule", "content": "{\n    APIRule(name: $name, namespace: $namespace) {\n      name\n      generation\n      json\n      spec {\n        rules {\n          path\n          methods\n          accessStrategies {\n            name\n            config\n          }\n        }\n        service {\n          host\n          name\n          port\n        }\n      }\n      status {\n        apiRuleStatus {\n          code\n          description\n        }\n      }\n      ownerSubscription {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($name: String!, $namespace: String!)"}, {"type": "mutation", "name": "deleteProjectLabel", "content": "{\n  deleteProjectLabel(input: {projectLabelID: $projectLabelID}) {\n    id\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($projectLabelID: UUID!)"}, {"type": "query", "name": "areas", "content": "{\n    areas {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/list/area-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "reInviteOrganizationEmployee", "content": "{\n        obj: reInviteOrganizationEmployee(data: $data) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: ReInviteOrganizationEmployeeInput!)"}, {"type": "query", "name": "tags", "content": "{\n    tags(filter: $filter) {\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/CommunityBanner/schema.js", "repo": "coderplanets_coderplanets_admin"}, "arguments": "($filter: PagedFilter!)"}, {"type": "mutation", "name": "CreateXlsxCurationList", "content": "{\n  createXlsxCurationList(input: $input) {\n    columns {\n      field\n      values\n      user\n    }\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/material-gql.js", "repo": "Duke-MatSci_materialsmine"}, "arguments": "($input: materialsInput)"}, {"type": "mutation", "name": "ItemImportClientND", "content": "{\n    itemImportClientND(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/item_import_client_nd.js", "repo": "bump44_rf-online-gs-editor"}, "arguments": "(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )"}, {"type": "mutation", "name": "createChallenge", "content": "{\n    createChallenge(input: $input) {\n      id\n      lessonId\n      title\n      description\n      order\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($input: ChallengeInput)"}, {"type": "query", "name": "getPaymentMethods", "content": "{\n  paymentMethods(\n    where: {workspaceId: {_eq: $workspaceId}}\n    order_by: {createdAt: desc}\n  ) {\n    ...getPaymentMethods\n  }\n}\n    ${GetPaymentMethodsFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($workspaceId: uuid!)"}, {"type": "mutation", "name": "setTaskChecklistItemComplete", "content": "{\n  setTaskChecklistItemComplete(\n    input: {taskChecklistItemID: $taskChecklistItemID, complete: $complete}\n  ) {\n    id\n    complete\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskChecklistItemID: UUID!, $complete: Boolean!)"}, {"type": "query", "name": "listCognitoGroups", "content": "{\n      listCognitoGroups (\n        filter: $filter\n      ){\n        groupName\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Groups/listCognitoGroups.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $filter: CognitoGroupFilter\n    )"}, {"type": "mutation", "name": "PlaceOrder", "content": "{\n    placeOrder(restaurant:$restaurant,orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,tipping:$tipping, taxationAmount: $taxationAmount, address:$address, orderDate: $orderDate,isPickedUp: $isPickedUp, deliveryCharges:$deliveryCharges) {\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      orderDate\n      expectedTime\n      isPickedUp\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Cart/Cart.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($restaurant:String!,$orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$tipping:Float!, $taxationAmount: Float!,$address:AddressInput!, $orderDate: String!,$isPickedUp: Boolean!, $deliveryCharges: Float!)"}, {"type": "mutation", "name": "neighbourhoodPublishFromPerspective", "content": "{\n                neighbourhoodPublishFromPerspective(\n                    linkLanguage: $linkLanguage,\n                    meta: $meta,\n                    perspectiveUUID: $perspectiveUUID\n                )\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "(\n                $linkLanguage: String!,\n                $meta: PerspectiveInput!,\n                $perspectiveUUID: String!\n            )"}, {"type": "mutation", "name": "setIsActiveAccount", "content": "{\n        setIsActiveAccount(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!, $isActive: Boolean!)"}, {"type": "mutation", "name": "PlaceOrder", "content": "{\n  placeOrder(orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,address:$address) {\n    _id\n    order_id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    user {\n      _id\n      phone\n      email\n    }\n    rider{\n      _id\n    }\n    payment_status\n    payment_method\n    paid_amount\n    order_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Cart/Cart.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$address:AddressInput!)"}, {"type": "subscription", "name": "UserInfo", "content": "{\n            user(name: $name) {\n              name\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($name: String = \"Changping Chen\")"}, {"type": "mutation", "name": "deleteRuntimeLabel", "content": "{\n    deleteRuntimeLabel(runtimeID: $id, key: \"scenarios\") {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "UpdateUserAddress", "content": "{\n    updateUserAddress(input: $input) {\n      country\n      city\n      address\n      index\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}, "arguments": "($input: UpdateAddressInput!)"}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int, $second: String)"}, {"type": "subscription", "name": "UserInfo", "content": "{\n            user(name: $name) {\n              name\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($name: String = \"Changping Chen\")"}, {"type": "mutation", "name": "CreateDashboard", "content": "{\n      createDashboard(input: $input) {\n        dashboardUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/createDashboard.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: NewDashboardInput)"}, {"type": "query", "name": "GetCoffee", "content": "{\n    coffee(id: $coffeeID) {\n      image\n    }\n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlQueries.js", "repo": "hashicorp_learn-terraform-preview-environment"}, "arguments": "($coffeeID: String!)"}, {"type": "query", "name": "AllListings", "content": "{\n    marketplace {\n      listings(\n        first: $first\n        after: $after\n        sort: $sort\n        order: $order\n        search: $search\n        filters: $filters\n        listingIds: $listingIds\n      ) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          endCursor\n        }\n        nodes {\n          ...basicListingFields\n        }\n      }\n    }\n  }\n  ${fragments.Listing.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Listings.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $first: Int\n    $after: String\n    $sort: String\n    $order: String\n    $search: String\n    $filters: [ListingFilterInput!]\n    $listingIds: [String]\n  )"}, {"type": "mutation", "name": "renew", "content": "{\n    renew(label: $label, duration: $duration)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($label: String, $duration: Int)"}, {"type": "mutation", "name": "CreateEnvironment", "content": "{\n      createEnvironment(input: $input) {\n        environmentUri\n        label\n        userRoleInEnvironment\n        SamlGroupName\n        AwsAccountId\n        created\n        dashboardsEnabled\n        notebooksEnabled\n        mlStudiosEnabled\n        pipelinesEnabled\n        warehousesEnabled\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/createEnvironment.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: NewEnvironmentInput)"}, {"type": "mutation", "name": "setCredentialsStart", "content": "{\n\t\tsetCredentialsStart(address: $address) {\n\t\t\tmessage\n\t\t\tsignMessage\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($address: String!)"}, {"type": "mutation", "name": "CreateCoupon", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    title\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($couponInput:CouponInput!)"}, {"type": "query", "name": "user", "content": "{\n    user(username: $username) {\n      ...userInfo\n      ...userCommunities\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunitiesFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/admin/src/api/queries.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($username: String)"}, {"type": "query", "name": "transactions", "content": "{\n    mints(\n      first: 100\n      orderBy: timestamp\n      orderDirection: desc\n      where: { pool: $address }\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(\n      first: 100\n      orderBy: timestamp\n      orderDirection: desc\n      where: { pool: $address }\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(\n      first: 100\n      orderBy: timestamp\n      orderDirection: desc\n      where: { pool: $address }\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries-v3.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($address: Bytes!)"}, {"type": "query", "name": "getCommunitySettingsByMatch", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunitySettings.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($slug: LowercaseString)"}, {"type": "query", "name": "people", "content": "{\n        name\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getServiceClassPlans", "content": "{\n    clusterServiceClass(name: $name) {\n      ${serviceClassGQL}\n      plans {\n        ${plansGQL}\n        relatedClusterServiceClassName\n      }\n    }\n    serviceClass(name: $name, namespace: $namespace) {\n      ${serviceClassGQL}\n      namespace\n      plans {\n        ${plansGQL}\n        namespace\n        relatedServiceClassName\n        assetGroup{\n            assets{\n              type\n            }\n          }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceClassPlansList/queries.js", "repo": "kyma-project_console"}, "arguments": "($name: String!, $namespace: String!)"}, {"type": "mutation", "name": "updatePreferredFirstFactor", "content": "{\n    preferredFirstFactor(userId: $userId, tokenType: $tokenType) {\n      id\n      ...FirstFactors\n    }\n  }\n  ${firstFactorFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/AuthSettings.js", "repo": "republik_plattform"}, "arguments": "(\n    $userId: ID!\n    $tokenType: SignInTokenType!\n  )"}, {"type": "mutation", "name": "deleteServiceBindingUsage", "content": "{\n    deleteServiceBindingUsage(\n      serviceBindingUsageName: $serviceBindingUsageName\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $serviceBindingUsageName: String!\n    $namespace: String!\n  )"}, {"type": "query", "name": "Application", "content": "{\n    application(id: $id) {\n      id\n      providerName\n      description\n      name\n      labels\n      healthCheckURL\n      integrationSystemID\n      status {\n        condition\n      }\n      packages {\n        data {\n          id\n          name\n          description\n          defaultInstanceAuth {\n            credential {\n              __typename\n            }\n          }\n          apiDefinitions {\n            totalCount\n          }\n          eventDefinitions {\n            totalCount\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Application/gql.js", "repo": "kyma-project_console"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "SignUp", "content": "{\n    signUp(\n      input: {\n        email: $email\n        username: $username\n        password: $password\n        walletPublicKey: $walletPublicKey\n        walletAddress: $walletAddress\n        rulesPrivateKey: $rulesPrivateKey\n        emailVerificationCode: $emailVerificationCode\n        acceptCommercialEmails: $acceptCommercialEmails\n        newcomer: $newcomer\n        referentSlug: $referentSlug\n      }\n    ) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}, "arguments": "(\n    $email: String!\n    $username: String!\n    $password: String!\n    $walletPublicKey: String!\n    $walletAddress: String!\n    $rulesPrivateKey: RulesPrivateKeyAttributes!\n    $emailVerificationCode: String!\n    $acceptCommercialEmails: Boolean!\n    $newcomer: Boolean!\n    $referentSlug: String\n  )"}, {"type": "mutation", "name": "SaveCurrencyConfiguration", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Currency/Currency.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($configurationInput:CurrencyConfigurationInput!)"}, {"type": "query", "name": "getDoc", "content": "{\n        doc @pdbGet(id: \"1\") {\n          _id\n          _rev\n          name\n        }\n      }", "metadata": {"commit_hash": "0984105b45bada32b8c0b0ac70a6847570781221", "file": "src/resolvers/queries/get/get.spec.ts", "repo": "mattjennings_apollo-link-pouch"}}, {"type": "subscription", "name": "GetServerSettingsUpdate", "content": "{\n    serverSettingsUpdate {\n      globalRegistryAddress\n      orgRegistryAddress\n      organizationName\n      organizationRole\n      organizationAddress\n      organizationWhisperKey\n      rpcProvider\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/server-settings.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "getCommitById", "content": "{\n    repo(id: $repoId) {\n      ...EditPageRepo\n      commit(id: $commitId) {\n        ...CommitWithDocument\n      }\n    }\n  }\n  ${fragments.EditPageRepo}\n  ${fragments.CommitWithDocument}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "pages/repo/preview.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!, $commitId: ID!)"}, {"type": "mutation", "name": "UpdateUserMutation", "content": "{\n    updateUser(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateUserMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($input: UpdateUserInput!)"}, {"type": "query", "name": "SINGLE_ORDER_QUERY", "content": "{\n    order: Order(where: { id: $id }) {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/pages/order/[id].js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "Increment", "content": "{\n        increment(amount: $amount) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($amount: Int = 1)"}, {"type": "mutation", "name": "repoArchive", "content": "{\n    archive(repoIds: [$repoId]) {\n      nodes {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Repo/Archive.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!)"}, {"type": "query", "name": "thing", "content": "{\n      entry(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n        value\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/fetchMore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($requiredVar: String!, $optionalVar: String)"}, {"type": "query", "name": "WithVariables", "content": "{\n        foo @client {\n          bar(id: $id)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getJobListingBySlug", "content": "{\n    partners {\n      partner(findBy: { slug: $partnerSlug }) {\n        id\n        companyName\n        companyLogo\n        slug\n        aboutUs\n        website\n        linkedIn\n        github\n        youtube\n        instagram\n        twitter\n        facebook\n        jobListing(slug: $jobListingSlug) {\n          slug\n          id\n          title\n          description\n          jobType\n          internship\n          experienceLevel\n          relocationOffered\n          remote\n          role\n          featured\n          applyNowLink\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/partner/[slug]/job/[jobSlug].js", "repo": "ThatConference_that-website"}, "arguments": "($partnerSlug: Slug!, $jobListingSlug: String!)"}, {"type": "mutation", "name": "enableRedshiftClusterDatasetTableCopy", "content": "{\n      enableRedshiftClusterDatasetTableCopy(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n        tableUri: $tableUri\n        schema: $schema\n        dataLocation: $dataLocation\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/copyTableToCluster.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $clusterUri: String!\n      $datasetUri: String!\n      $tableUri: String!\n      $schema: String!\n      $dataLocation: String\n    )"}, {"type": "query", "name": "getOnchainTreasuryProposals", "content": "{\n  treasurySpendProposals(where: {treasuryStatus_some: {AND: [{status: \"Proposed\"}, {blockNumber: {number_gte: $startBlock}}]}}) {\n    ...onchainTreasuryProposal\n  }\n}\n    ${OnchainTreasuryProposalFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/chain-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "query", "name": "IsEmailExists", "content": "{\n    isEmailExists(email: $email, hash: $hash)\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}, "arguments": "($email: String, $hash: String)"}, {"type": "query", "name": "files", "content": "{\n      repository(owner: $owner, name: $name) {\n        ...RepositoryParts\n        object(expression: $expression) {\n          ${buildFilesQuery(depth)}\n        }\n      }\n    }\n    ${fragments.repository}\n    ${fragments.object}\n    ${fragments.fileEntry}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/queries.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($owner: String!, $name: String!, $expression: String!)"}, {"type": "query", "name": "meses", "content": "{\n      meses(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        nombre\n        habilitado\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "(\n      $where: MesWhereInput\n      $orderBy: MesOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )"}, {"type": "mutation", "name": "updateFunction", "content": "{\n    updateFunction(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $name: String!\n    $namespace: String!\n    $params: FunctionMutationInput!\n  )"}, {"type": "query", "name": "getProposals", "content": "{\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "74922f49ceb05f6fc38a0a785d33676c737f67a6", "file": "teams/18-Avault/src/avault-shiden-web/src/state/voting/helpers.ts", "repo": "parity-asia_hackathon-2022-summer"}, "arguments": "($first: Int!, $skip: Int!, $state: String!)"}, {"type": "mutation", "name": "addReferendumIdToMotionMutation", "content": "{\n            update_onchain_links(\n                where: {\n                    onchain_motion_id: {_eq: $motionId}\n                },\n                _set: {\n                    onchain_referendum_id: $referendumId\n                }\n            ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($motionId: Int!, $referendumId: Int!)"}, {"type": "query", "name": "QUERY_GET_PRODUCTS", "content": "{\n    products {\n      id\n      title\n      image\n      price\n      handle\n      description\n      category {\n        id\n        title\n        handle\n      }\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/product/queries/QUERY_GET_PRODUCTS.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "deleteMessage", "content": "{\n    deleteMessage(id: $id)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/message/deleteMessage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "signin", "content": "{\n        authenticateUserWithPassword(email: $email, password: $password) {\n            item {\n                ${userFragment}\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/next/auth.jsx", "repo": "open-condo-software_condo"}, "arguments": "($email: String, $password: String)"}, {"type": "mutation", "name": "submitComment", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "mutation", "name": "addFavorite", "content": "{\n        addFavorite(id: $id) @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/ADD_FAVORITE.js", "repo": "SaraVieira_awesome-talks"}, "arguments": "($id: String!)"}, {"type": "query", "name": "CURRENT_USER_QUERY", "content": "{\n        me {\n            id\n            firstName\n            lastName\n            email\n            displayName\n        }\n    }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/user/queries/QUERY_GET_CUSTOMER.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "updateEnvironmentStack", "content": "{\n      updateEnvironmentStack(environmentUri: $environmentUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/updateEnvironmentStack.js", "repo": "awslabs_aws-dataall"}, "arguments": "($environmentUri: String!)"}, {"type": "query", "name": "GET_REFRESH_TOKEN", "content": "{\n    token {\n        token\n    }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "AnalyseRun", "content": "{\n  generateRunFeedback(run: $run) {\n    feedbackSummary\n    lastRunFeedback\n    intensityFeedback\n    volumeFeedback\n    performanceFeedback\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($run: RunInput!)"}, {"type": "query", "name": "GET_TREE_BY_ID", "content": "{\n        trees(filters: {id: $id}) {\n            list {\n                ...TreeDetails\n            }\n        }\n    }\n    ${TreeDetailsFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: [ID!])"}, {"type": "mutation", "name": "PlaceOrder", "content": "{\n    createOrderFromCart(command: $command) {\n      id\n      number\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/placeOrder/placeOrderMutation.ts", "repo": "vuestorefront-community_virto-commerce"}, "arguments": "($command: InputCreateOrderFromCartType!)"}, {"type": "mutation", "name": "addFreightRequestAmount", "content": "{\n    addFreightRequestAmount(shipmentId: $shipmentId, amount: $amount) \n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}, "arguments": "($shipmentId: String, $amount: Int)"}, {"type": "query", "name": "getAnimation", "content": "{\n    allVAnimations(\n      condition: { animationId: $animationId, submissionId: $submissionId }\n    ) {\n      nodes {\n        audio\n        frameRate\n        endFrame\n        comment\n        avatar\n        animationId\n        startFrame\n        createdAt\n        updatedAt\n        occupation\n        organisation\n        thumbnailUrl\n        profileId\n        title\n        username\n        videoUrl\n        isLatest\n        instructor\n        premiumType\n        role\n        currentProfileHasReplied\n        profeedback\n        profeedbackStatus\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($animationId: String!, $submissionId: String!)"}, {"type": "mutation", "name": "SaveEmailConfiguration", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    emailName\n    password\n    enableEmail\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($configurationInput:EmailConfigurationInput!)"}, {"type": "query", "name": "AllCountries", "content": "{\n    countries {\n      code\n      name\n      emoji\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "examples/bundling/tree-shaking/rollup-ac2/src/App.js", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "AddEvent", "content": "{\n        addEvent(\n            description: $description\n            name: $name\n            startDate: $startDate\n            endDate: $endDate\n            isPrivate: $isPrivate\n            eventType: $eventType\n            teamID: $teamID\n            address: $address\n        )\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "(\n        $description: String!\n        $name: String!\n        $startDate: DateTime!\n        $endDate: DateTime!\n        $isPrivate: Boolean!\n        $eventType: String!\n        $teamID: String!\n        $address: String!\n    )"}, {"type": "query", "name": "liquidityPositions", "content": "{\n    liquidityPositions(where: { user: $user }) {\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n          symbol\n          derivedETH\n        }\n        token1 {\n          id\n          symbol\n          derivedETH\n        }\n        totalSupply\n      }\n      liquidityTokenBalance\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}, "arguments": "($user: Bytes!)"}, {"type": "query", "name": "getUserCommunityConnection", "content": "{\n    user(id: $id) {\n      ...userInfo\n      ...userCommunityConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunityConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/user/getUserCommunityConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID)"}, {"type": "mutation", "name": "RequestToChat", "content": "{\n    requestToChat(sender: $sender, recipient: $recipient)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/requests/mutations/requestToChatMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}, "arguments": "($sender: ID, $recipient: ID)"}, {"type": "query", "name": "electionResults", "content": "{\n    election(slug: $slug) {\n      id\n      userHasSubmitted\n      userSubmitDate\n      userIsEligible\n      beginDate\n      endDate\n      turnout {\n        eligible\n        submitted\n      }\n      result {\n        candidacies {\n          count\n          elected\n          candidacy {\n            id\n            isIncumbent\n            user {\n              id\n              username\n              name\n            }\n            recommendation\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/ElectionResult.js", "repo": "republik_plattform"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "health", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: \"sameepsi/quickswap06\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "mutation", "name": "CompleteOnboarding", "content": "{\n  completeOnboarding(\n    experience: $experience\n    firstName: $firstName\n    lastName: $lastName\n    dob: $dob\n  ) {\n    id\n    firstName\n    lastName\n    experience\n    stage\n    dob\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($firstName: String!, $lastName: String!, $experience: ExperienceLevel!, $dob: String!)"}, {"type": "query", "name": "getPremium", "content": "{\n    getPremium(name: $name, expires: $expires, duration: $duration)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String, $expires: Number, $duration: Number)"}, {"type": "query", "name": "IsUserLoggedIn", "content": "{\n          isLoggedIn @client\n        }", "metadata": {"commit_hash": "b665a32a216dd9c3439369fb59e665b3b8d05e74", "file": "frontend/src/containers/__tests__/logout-button.tsx", "repo": "zzy_actix-graphql-react"}}, {"type": "query", "name": "Services", "content": "{\n    admin {\n      services {\n        ...Service\n      }\n    }\n  }\n  ${ServiceFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/platform-admin/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "mutation", "name": "createTweet", "content": "{\n    createTweet(\n      tweet: $tweet,\n      author: $author,\n      createdAt: $createdAt\n\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/React_Notes_V3/React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $tweet: String,\n    $author: String,\n    $createdAt: DateTime\n  )"}, {"type": "mutation", "name": "updateTaskGroupLocation", "content": "{\n  updateTaskGroupLocation(input: {taskGroupID: $taskGroupID, position: $position}) {\n    id\n    position\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskGroupID: UUID!, $position: Float!)"}, {"type": "query", "name": "getCommunityMemberGrowth", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      memberGrowth {\n        count\n        weeklyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n        monthlyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n        quarterlyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunityMemberGrowth.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID)"}, {"type": "query", "name": "LatestTechCommitteeProposalPosts", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            onchain_link: {\n                onchain_tech_committee_proposal_id: {\n                    _is_null: false\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_tech_committee_proposal_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_tech_committee_proposal_id\n                onchain_tech_committee_proposal(where: {NOT: {status_some: {OR: [{status: \"Closed\"}, {status: \"Approved\"}, {status: \"Executed\"}, {status: \"Disapproved\"}]}}}) {\n                    id\n                    status(last: 1) {\n                        id\n                        status\n                    }\n                    preimage {\n                        id\n                        method\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n    ${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/OnChain/TechCommitteeProposals/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $limit: Int! = 5 )"}, {"type": "mutation", "name": "CreateUser", "content": "{\n        createUser(userInput:{\n            phone:$phone,\n            email:$email,\n            password:$password,\n            name:$name,\n            notificationToken:$notificationToken,\n            appleId:$appleId\n        }){\n            userId\n            token\n            tokenExpiration\n            name\n            email\n            phone\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/VerifyEmail/VerifyEmail.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)"}, {"type": "mutation", "name": "ForgotPassword", "content": "{\n    forgotPassword(email: $email)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}, "arguments": "($email: String!)"}, {"type": "mutation", "name": "signUp", "content": "{\n  signUp(\n    input: {\n      name: $name\n      lastname: $lastname\n      email: $email\n      password: $password\n    }\n  ) {\n    name\n    lastname\n    email\n  }\n}", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/postwork/bedulives-frontend/src/page/Signup.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}, "arguments": "($name: String, $lastname: String, $email: String!, $password: String!)"}, {"type": "query", "name": "WithVariables", "content": "{\n        foo @client {\n          bar(id: $id)\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "Reset", "content": "{\n        reset {\n          echo\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "nestedData", "content": "{\n          people {\n            id\n            friends {\n              id\n              type\n            }\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/ApolloClient.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "transactions", "content": "{\n    mints(\n      first: 100\n      orderBy: timestamp\n      orderDirection: desc\n      where: { pool: $address }\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(\n      first: 100\n      orderBy: timestamp\n      orderDirection: desc\n      where: { pool: $address }\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(\n      first: 100\n      orderBy: timestamp\n      orderDirection: desc\n      where: { pool: $address }\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries-v3.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($address: Bytes!)"}, {"type": "query", "name": "Simple", "content": "{\n        field @storage(if: true)\n        other: field @storage\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getAddresses", "content": "{\n    getAddresses(name: $name, keys: $keys)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String, $keys: [String])"}, {"type": "query", "name": "AllCountries", "content": "{\n    countries {\n      code\n      name\n      emoji\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "examples/bundling/tree-shaking/rollup-ac2/src/App.js", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "IsUserLoggedIn", "content": "{\n          isLoggedIn @client\n        }", "metadata": {"commit_hash": "b665a32a216dd9c3439369fb59e665b3b8d05e74", "file": "frontend/src/containers/__tests__/logout-button.tsx", "repo": "zzy_actix-graphql-react"}}, {"type": "mutation", "name": "CreateOrder", "content": "{\n        addAccount(\n          input: {\n            name: $name\n            phone: $phone\n            account: $account\n            card: $card\n            openId: $openId\n          }\n        ) {\n            name\n            phone\n            account\n            card\n            openId\n        }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/addCollection/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}, "arguments": "(\n        $name: String\n        $phone: String\n        $account: String\n        $card: String\n        $openId: String\n      )"}, {"type": "mutation", "name": "shareTicket", "content": "{\n        obj: shareTicket(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: ShareTicketInput!)"}, {"type": "mutation", "name": "deleteCategory", "content": "{\n                deleteCategory(id: $id) {\n                  status\n                  errorMessage\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/deleteCategory.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($id: Int)"}, {"type": "query", "name": "search", "content": "{\n    search(q: $q, sort: $sort)\n      @rest(type: \"Search\", path: \"package_search?{args}\") {\n      result {\n        count\n      }\n    }\n  }", "metadata": {"commit_hash": "f04b86dda45a53314422c3d42013f04980effa85", "file": "examples/ckan-2021/graphql/queries.ts", "repo": "datopian_portaljs"}, "arguments": "($q: String, $sort: String)"}, {"type": "mutation", "name": "CreateProfile", "content": "{\n    createProfile(username: $username) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/createProfileMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}, "arguments": "($username: String)"}, {"type": "query", "name": "GetCurrencies", "content": "{\n    currencies {\n      __typename\n      ... on Currency {\n        id\n        name\n        code\n        priceInUSD\n      }\n      ... on Token {\n        decimals\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/hoc/withCurrencies.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "FetchUsers", "content": "{\n    allUsers {\n      id\n      displayName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/EditStory.js", "repo": "vecnazmaga_place-management"}}, {"type": "subscription", "name": "getUpdatedEmployee", "content": "{\n    getUpdatedEmployee(_id: $_id) {\n      _id\n      firstName\n      lastName\n      email\n      phoneNumber\n      employeeRole\n      permanentPasswordSet\n      password\n      tokenCount\n      createdAt\n      profilePicture\n      notifications {\n        _id\n        new\n        type\n        date\n        time\n        allDay\n        associatedClientFirstName\n        associatedClientLastName\n        originalAssociatedStaffFirstName\n        originalAssociatedStaffLastName\n        newAssociatedStaffFirstName\n        newAssociatedStaffLastName\n        createdByFirstName\n        createdByLastName\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "dabe52ca514ec46979791b0ed559cbd7a2754b6a", "file": "Client/src/graphql/subscriptions/getUpdatedEmployeeSubscription.js", "repo": "HappyDream0317_Microservices-GrowLabs"}, "arguments": "($_id: ID)"}, {"type": "subscription", "name": "DirectmessageSubscription", "content": "{\n    directmessageSub(receiver: $userId) {\n      id\n      content\n      created\n      sender {\n        ...UserLabel_user\n      }\n      receiver {\n        ...UserLabel_user\n      }\n    }\n  }\n  ${UserLabel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/DirectmessageSubscription.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($userId: ID)"}, {"type": "mutation", "name": "DeltetRestaurant", "content": "{\n  deleteRestaurant(id:$id){\n    _id\n    isActive\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/RestaurantList.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "query", "name": "lineas", "content": "{\n      lineas(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "(\n      $where: LineaWhereInput\n      $orderBy: LineaOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )"}, {"type": "mutation", "name": "unarchiveCampaign", "content": "{\n        unarchiveCampaign(id: $campaignId) {\n          ${campaignInfoFragment}\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($campaignId: String!)"}, {"type": "mutation", "name": "DeleteTodo", "content": "{\n    removeTodo(id:$id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "995581d75a63cff91e36e944c688f87e62e5eef9", "file": "src/apollo/todos.js", "repo": "michey85_apollo-qql-todos"}, "arguments": "($id:ID!)"}, {"type": "query", "name": "GetPosts", "content": "{\n            posts(page: $page, per_page: $per_page) {\n              id\n              title\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/Learning-Redux/repos/redux-toolkit/examples/query/react/graphql/src/app/services/posts.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($page: Int = 1, $per_page: Int = 10)"}, {"type": "mutation", "name": "createTask", "content": "{\n    createTask(data: $data) {\n      completed\n      createdAt\n      id\n      text\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/tasks.js", "repo": "amplication_react-todos"}, "arguments": "($data: TaskCreateInput!)"}, {"type": "mutation", "name": "InviteUser", "content": "{\n      inviteUser(input: $input) {\n        userName\n        userRoleInOrganization\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/inviteUser.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: NewOrganizationUserInput)"}, {"type": "query", "name": "Posts", "content": "{\n    posts (first: 10, orderBy: [{ createdAt: DESC }], filter: { votes: { value: $minVotes, comparator: GREATER_THAN_OR_EQUAL } }) {\n      ...RssPosts\n    }\n  }\n  ${RSS_POSTS_FRAGMENT}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/RssService.ts", "repo": "marian2js_finsharing"}, "arguments": "($minVotes: Int!)"}, {"type": "query", "name": "ChatsListQuery", "content": "{\n    chat(order_by:[{messages_aggregate:{max:{created_at:desc}}}]) {\n      ...chat\n      users(where:{user_id:{_neq:$userId}}) {\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatsListScreen/ChatsList.tsx", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($userId: Int!)"}, {"type": "query", "name": "characters", "content": "{\n    characters(order_by: {id: asc}) {\n      id\n      name\n  }\n  }", "metadata": {"commit_hash": "5bafb503f63b1dfc180e77f02d16b96d6503eb11", "file": "src/constants/graphql.js", "repo": "malgamves_GameOfCharts"}}, {"type": "mutation", "name": "addOrderToCart", "content": "{\n    addOrderToCart(orderId: $orderId, replace: $replace) {\n      id\n      quantity\n      variant {\n        id\n        available\n        price\n        selectedOptions {\n          id\n          option {\n            id\n            name\n          }\n          value {\n            id\n            name\n          }\n        }\n        product {\n          ...ProductCardFragment\n        }\n      }\n    }\n  }\n  ${ProductCardFragment}", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/home/query.gql.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($orderId: ID!, $replace: Boolean!)"}, {"type": "mutation", "name": "complexStuff", "content": "{ key1: [\"value\", \"value2\"], key2: { key3: 4 } }\n        ) {\n          complexStuff(test: $test) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n          $test: Input ="}, {"type": "mutation", "name": "PlaceOrder", "content": "{\n    placeOrder(restaurant:$restaurant,orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,tipping:$tipping, taxationAmount: $taxationAmount, address:$address, orderDate: $orderDate,isPickedUp: $isPickedUp, deliveryCharges:$deliveryCharges) {\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      orderDate\n      expectedTime\n      isPickedUp\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Cart/Cart.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($restaurant:String!,$orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$tipping:Float!, $taxationAmount: Float!,$address:AddressInput!, $orderDate: String!,$isPickedUp: Boolean!, $deliveryCharges: Float!)"}, {"type": "query", "name": "GetCrawlerStatus", "content": "{\n            getCrawlerStatus(datasetUri:$datasetUri,name:$name){\n                Name\n                AwsAccountId\n                region\n                status\n            }\n        }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/getCrawlerStatus.js", "repo": "awslabs_aws-dataall"}, "arguments": "($datasetUri:String, name:String)"}, {"type": "mutation", "name": "UpdateDescription", "content": "{\n        updateDescription(teamID: $teamID, description: $description)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($teamID: String!, $description: String!)"}, {"type": "query", "name": "exportMeterReadings", "content": "{\n        result: exportMeterReadings (data: $data) { status, linkToFile }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/meter/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: ExportMeterReadingsInput!)"}, {"type": "query", "name": "user", "content": "{\n        users(where: { id: $id }) {\n            email\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "($id: ID)"}, {"type": "query", "name": "InviteCode", "content": "{\n    inviteCode\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/InviteCode.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Post", "content": "{\n  node(id: $id) {\n    id\n    ... on Post {\n      title\n      language\n      createdAt\n      tags {\n        id\n        name\n      }\n      creator {\n        id\n        name\n        username\n        profilePicture\n      }\n      items {\n        edges {\n          node {\n            id\n            type\n            createdAt\n            creator {\n              id\n              name\n              username\n              profilePicture\n            }\n            description\n            caption\n            compressedPath\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "DeleteCoupon", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Coupons.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "sigin", "content": "{\n        auth: authenticateUserWithPassword(email: $identity, password: $secret) {\n            user: item {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/keystone/test.utils.js", "repo": "open-condo-software_condo"}, "arguments": "($identity: String, $secret: String)"}, {"type": "query", "name": "getDiscussionBountyById", "content": "{\n        onchain_links(where: {onchain_bounty_id: {_eq: $onchainBountyId}}) {\n            id\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainBountyId: Int!)"}, {"type": "subscription", "name": "onCommentAdded", "content": "{\n    commentAdded(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "query", "name": "nameOfQuery", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "RemoveTeamMember", "content": "{\n    removeTeamMember(teamId: $teamId, userId: $userId, userIds: $userIds) {\n      user {\n        id\n        fullName\n        profileUrl\n        roles {\n          id\n          name\n          companyId\n        }\n        teams {\n          id\n          name\n          companyId\n        }\n        companies {\n          id\n          name\n        }\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/RemoveTeamMember.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "($teamId: ID!, $userId: ID!, $userIds: [ID!])"}, {"type": "mutation", "name": "Enroll", "content": "{\n    enroll(\n      agreementMessage: $agreementMessage\n      inviteCode: $inviteCode\n      fingerprintData: $fingerprintData\n    ) {\n      authToken\n      isBanned\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GrowthEnroll.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $agreementMessage: String!\n    $inviteCode: String\n    $fingerprintData: JSON\n  )"}, {"type": "mutation", "name": "FileUpload", "content": "{\n    fileUpload(bucketFolder: $bucketFolder, fileName: $fileName, base64: $base64)\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/file-upload.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($bucketFolder: String, $fileName: String, $base64: String)"}, {"type": "mutation", "name": "submitRepository", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "updateProperty", "content": "{\n      updateProperty(\n        propertyId: $id\n        title: $title\n        description: $description\n        dimensions: $dimensions\n        location: $location\n        bedroomsNumber: $bedroomsNumber\n        bathroomsNumber: $bathroomsNumber\n        province: $province\n        municipality: $municipality\n        price: $price\n        images: $images\n        tags: $tags\n        userToken: $userToken\n      ) {\n        property {\n          title\n          description\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "(\n      $id: Int!\n      $title: String!\n      $description: String!\n      $province: String!\n      $bathroomsNumber: Int!\n      $bedroomsNumber: Int!\n      $dimensions: Int!\n      $location: String!\n      $municipality: String!\n      $price: Float!\n      $images: [String]\n      $tags: [String]!\n      $userToken: String!\n    )"}, {"type": "mutation", "name": "CreatePost", "content": "{\n    createPost(input: $input) {\n      id\n      title\n      body\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/serverless-components-gql/client/src/components/AddPost.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: CreatePostInput!)"}, {"type": "query", "name": "ListWorksheets", "content": "{\n      listWorksheets(filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          worksheetUri\n          label\n          description\n          tags\n          owner\n          created\n          userRoleForWorksheet\n          SamlAdminGroupName\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/listWorksheets.js", "repo": "awslabs_aws-dataall"}, "arguments": "($filter: WorksheetFilter)"}, {"type": "query", "name": "getFrontFeed", "content": "{\n    feed: search(\n      filters: $filters\n      filter: {\n        feed: true\n        publishedAt: $minPublishDate\n        repoIds: $specificRepoIds\n      }\n      sort: { key: publishedAt, direction: DESC }\n    ) {\n      totalCount\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      nodes {\n        entity {\n          ... on Document {\n            id\n            meta {\n              credits\n              shortTitle\n              title\n              description\n              publishDate\n              prepublication\n              path\n              kind\n              template\n              color\n              format {\n                id\n                meta {\n                  path\n                  externalBaseUrl\n                  title\n                  color\n                  kind\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Front/withData.js", "repo": "republik_plattform"}, "arguments": "(\n    $specificRepoIds: [ID!]\n    $filters: [SearchGenericFilterInput!]\n    $minPublishDate: DateRangeInput\n  )"}, {"type": "query", "name": "getSalesByState", "content": "{\n  getSalesByState(state:$state){\n    crops\n    sales\n  }\n }", "metadata": {"commit_hash": "de9e7fe6dc68a0689416de336fa7ada58d18ff60", "file": "src/views/Maps/Maps.jsx", "repo": "SIH-20_KisanSeva-SmartIndiaHackathon"}, "arguments": "($state:String)"}, {"type": "query", "name": "Item", "content": "{\n      item(code:$code ){\n        code\n        name\n        imageUrl\n        content\n        originalPrice\n        commission\n        memberPrice\n        price\n        pointDiscountPrice\n        unit\n        stock\n        type\n        kind\n        status\n        followed\n      }\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-taro-mall/src/pages/home/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}, "arguments": "($code:ID!)"}, {"type": "query", "name": "cosmosValidators", "content": "{\n  cosmosValidators(network: $network) {\n    operator_address\n    consensus_pubkey\n    jailed\n    status\n    tokens\n    delegator_shares\n    description {\n      moniker\n      identity\n      website\n      details\n    }\n    unbonding_height\n    unbonding_time\n    commission {\n      update_time\n      commission_rates {\n        rate\n        max_rate\n        max_change_rate\n      }\n    }\n    min_self_delegation\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($network: String!)"}, {"type": "mutation", "name": "moveQuery", "content": "{\n        move_view(\n            id: $queryId\n            project_name: $projectName\n            view_path: $queryPath\n        ) {\n            success\n            error\n            result {\n                view_id\n                project {\n                    name\n                }\n                path\n                spec {\n                    ... on QuerySpec {\n                        query_text\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/query-editor.tsx", "repo": "andrewsmike_jasmine"}, "arguments": "(\n        $queryId: ID!\n        $projectName: String!\n        $queryPath: String!\n    )"}, {"type": "query", "name": "GetPayment", "content": "{\n    payment(id: $id) {\n      ...Payment\n      gatewayAccount {\n        ...GatewayAccount\n      }\n    }\n    cardTypes {\n      ...CardTypes\n    }\n  }\n  ${PaymentFragmentDoc}\n  ${GatewayAccountFragmentDoc}\n  ${CardTypesFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/checkout/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "createIntegrante", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      id\n      usuario {\n        firstname\n      }\n      proyecto {\n        codigo\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/create/integrante-create.component.ts", "repo": "ysantalla_gespro"}, "arguments": "(\n    $data: IntegranteCreateInput!\n    $whereInput: IntegranteWhereInput!\n  )"}, {"type": "query", "name": "Publications", "content": "{\n    publications(\n      request: { profileId: $id, publicationTypes: [POST], limit: $limit }\n    ) {\n      items {\n        __typename\n        ... on Post {\n          ...PostFields\n        }\n      }\n    }\n  }\n  fragment PostFields on Post {\n    id\n    metadata {\n      ...MetadataOutputFields\n    }\n  }\n  fragment MetadataOutputFields on MetadataOutput {\n    content\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/getPublications.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}, "arguments": "($id: ProfileId!, $limit: LimitScalar)"}, {"type": "query", "name": "moloches", "content": "{\n    moloches(orderBy: summoningTime, first: 100, skip: $skip) {\n      id\n      title\n      version\n      totalShares\n      guildBankAddress\n      summoningTime\n      guildBankBalanceV1\n      guildBankValue @client\n      apiData @client\n      members(where: { exists: true }) {\n        id\n      }\n      proposals {\n        id\n      }\n      approvedTokens {\n        id\n      }\n      depositToken {\n        tokenAddress\n        symbol\n        decimals\n      }\n      tokenBalances(where: { guildBank: true }) {\n        id\n        tokenBalance\n        guildBank\n        token {\n          decimals\n          tokenAddress\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "51995b7c5a268264235aee2f64af86f691ad7a6b", "file": "src/util/queries.js", "repo": "HausDAO_daohaus-web"}, "arguments": "($skip: Int)"}, {"type": "query", "name": "getUser", "content": "{\n    user(id: $id) {\n      lastLogin\n      firstName\n      lastName\n      email\n      phoneNumber\n      admin\n      department {\n        name\n        devices {\n          id\n          temperature\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/SetTempHistory.jsx", "repo": "Dr169_Air-condition"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "listTenantGroups", "content": "{\n      listTenantGroups(filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          groupUri\n          tenantPermissions {\n            name\n            description\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/listTenantGroups.js", "repo": "awslabs_aws-dataall"}, "arguments": "($filter: GroupFilter)"}, {"type": "query", "name": "getThreadById", "content": "{\n    thread(id: $id) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/thread/getThread.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "WithdrawDust", "content": "{\n    withdrawDust(amount: $amount, from: $from, currency: $currency) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/WithdrawDust.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String, $currency: String!, $amount: String!)"}, {"type": "mutation", "name": "One", "content": "{\n        user(t: $t) {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/parser.test.ts", "repo": "Shopify_react-apollo"}, "arguments": "($t: String!)"}, {"type": "mutation", "name": "createEpisode", "content": "{\n    createEpisode(data: $data) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/geeksblabla.com/src/components/Suggest/graphql/mutation.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($data: EpisodeInput!)"}, {"type": "query", "name": "UserOffers", "content": "{\n    marketplace {\n      user(id: $id) {\n        id\n        offers(first: $first, after: $after) {\n          totalCount\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n            endCursor\n          }\n          nodes {\n            id\n            listingId\n            offerId\n            listing {\n              id\n              title\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/UserOffers.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!, $first: Int, $after: String)"}, {"type": "query", "name": "Three", "content": "{\n          three\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "activeEvents", "content": "{\n    communities {\n      community(findBy: $communityInput) {\n        get {\n          id\n          name\n          events(filter: ACTIVE) {\n            id\n            name\n            slug\n            slogan\n            description\n            startDate\n            endDate\n            website\n            partners {\n              id\n              slug\n              level\n              placement\n              companyName\n              companyLogo\n            }\n            notifications {\n              id\n              shouldFeature\n              title\n              message\n              startDate\n              endDate\n              link\n              linkText\n            }\n            theme {\n              primary\n              secondary\n              heroSlug\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/RootHomePage/Events.js", "repo": "ThatConference_that-website"}, "arguments": "($communityInput: CommunityQueryInput!)"}, {"type": "mutation", "name": "createAd", "content": "{\n    createAd(createAdInput: $createAdInput) {\n      ...Ad\n    }\n  }\n  ${AdFragmentDoc}", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/ad-set.generated.tsx", "repo": "brave_ads-ui"}, "arguments": "($createAdInput: CreateAdInput!)"}, {"type": "mutation", "name": "PostFlags", "content": "{\n      postFlags(flags: $flags)\n    }", "metadata": {"commit_hash": "5d4ba443dca65ed9d3135e1db563195f782ae847", "file": "src/next/lib/graphql.ts", "repo": "Giotino_LessDestructiveFarm"}, "arguments": "($flags: [String!]!)"}, {"type": "query", "name": "Questions", "content": "{\n    questions {\n      id\n      code\n      title\n      options {\n        text\n        correct\n      }\n      explanation\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/jsquiz/client/graphql/query.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "UpdateStarMutation", "content": "{\n    updateStar(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateStarMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($input: UpdateStarInput!)"}, {"type": "mutation", "name": "votePost", "content": "{\n    votePost(id: $id) {\n      id\n      votes\n      __typename\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/with-apollo-next/components/PostUpvoter.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: String!)"}, {"type": "query", "name": "selectProperty", "content": "{\n        objs: allProperties(where: $where, orderBy: $orderBy, first: $first, skip: $skip) {\n            id\n            address\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "($where: PropertyWhereInput, $orderBy: String, $first: Int, $skip: Int)"}, {"type": "query", "name": "getRentPrices", "content": "{\n    getRentPrices(labels: $labels, duration: $duration)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($labels: String, $duration: Number)"}, {"type": "mutation", "name": "updateKeyValueTags", "content": "{\n      updateKeyValueTags(input: $input) {\n        tagUri\n        targetUri\n        targetType\n        key\n        value\n        cascade\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/KeyValueTags/updateKeyValueTags.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: UpdateKeyValueTagsInput!)"}, {"type": "mutation", "name": "saveMedia", "content": "{\n    saveMedia(input: $input) {\n      username\n      _id\n      mediaCount\n      savedMedias {\n        title\n        plot\n        imdbID\n        poster\n        link\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}, "arguments": "($input: SavedMediaInput)"}, {"type": "mutation", "name": "UpdateLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "ReserveItems", "content": "{\n    reserveItems(options: $options, shippingCode: $shippingCode) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Reservation/Reservation.tsx", "repo": "seasons_harvest"}, "arguments": "($options: ReserveItemsOptions, $shippingCode: ShippingCode)"}, {"type": "query", "name": "AllReviews", "content": "{\n  allReviews(offset:$offset){\n    _id\n    rating\n    description\n    createdAt\n    updatedAt\n    is_active\n    order{\n      user{\n        name\n        email\n      }\n      items{\n        food{\n          title\n        }\n      }\n   }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Ratings.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($offset:Int)"}, {"type": "mutation", "name": "UpdateStudent", "content": "{\n      updateStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: UpdateStudentInput!)"}, {"type": "mutation", "name": "DeleteDeathwish", "content": "{\n    deleteDeathwish(input: $input) {\n      deathwish {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/graphql/mutations/index.ts", "repo": "aaronmcadam_deathwish"}, "arguments": "($input: DeleteDeathwishInput!)"}, {"type": "mutation", "name": "editCoupon", "content": "{\n  editCoupon(couponInput:$couponInput){\n        _id\n        title\n        discount\n        enabled\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($couponInput:CouponInput!)"}, {"type": "query", "name": "updateCardForm", "content": "{\n    me {\n      id\n      name\n      isUserOfCurrentSession\n      portrait(properties: { width: 600, height: 800, bw: false })\n      cards(first: 1) {\n        nodes {\n          ...MyCard\n        }\n      }\n    }\n  }\n\n  ${fragmentCard}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/Update.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "LoginAppUser", "content": "{\n    loginAppUser(input: $input) {\n      token {\n        id\n        value\n      }\n      user {\n        ...ActiveUserFragment\n      }\n    }\n  }\n\n  ${userFragment}", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/authenticate.js", "repo": "endeavorb2b_websites"}, "arguments": "($input: LoginAppUserMutationInput!)"}, {"type": "query", "name": "FetchPlaces", "content": "{\n    allPlaces {\n      id\n      createdAt\n      placeName\n      description\n      addressCityTown\n      addressCountry\n      source\n      status\n      createdBy {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/places/index.js", "repo": "vecnazmaga_place-management"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createResolution", "content": "{\n    createResolution(name: $name) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/graphql-list/imports/ui/ResolutionForm.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($name: String!)"}, {"type": "mutation", "name": "addAdminDXPCloud", "content": "{\n\t\tcreateAdminDXPCloud(input: $AdminDXPCloud)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_AdminDXPCloud\"\n\t\t\t\tpath: \"/c/admindxpclouds/\"\n\t\t\t) {\n\t\t\temailAddress\n\t\t\tfirstName\n\t\t\tgithubUsername\n\t\t\tlastName\n\t\t\tdxpCloudEnvironmentId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "($AdminDXPCloud: InputC_AdminDXPCloud!)"}, {"type": "mutation", "name": "SaveDisclosurePage", "content": "{\n        saveDisclosurePage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            disclosure {\n                submitterSignature\n                disclosureConsent\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}, "arguments": "($id: ID!, $details: DisclosureDetailsInput!)"}, {"type": "query", "name": "GetContactList", "content": "{\n  contacts(pagination: $pagination, where: $where, sort: $sort) {\n    content {\n      id\n      ...ContactNameFragment\n      emails {\n        id\n        email\n      }\n    }\n    totalElements\n  }\n}\n    ${ContactNameFragmentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($pagination: Pagination!, $where: Filter, $sort: [SortBy!])"}, {"type": "query", "name": "Simple", "content": "{\n        ...fieldFragment1\n      }\n\n      fragment fieldFragment1 on Field {\n        bar {\n          baz {\n            ...nestedFragment\n          }\n        }\n      }\n\n      fragment nestedFragment on Field {\n        foo @live\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "totalUsersByDate", "content": "{\n  usersAggregate(where: $where) {\n    aggregate {\n      count\n    }\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($where: users_bool_exp!)"}, {"type": "query", "name": "getCurrentUser", "content": "{\n    user: currentUser {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/user/getUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "removeOrganizationRelationship", "content": "{\n  organization_RemoveRelationship(\n    organizationId: $organizationId\n    relationship: $relationship\n  ) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!, $relationship: OrganizationRelationship!)"}, {"type": "mutation", "name": "denySession", "content": "{\n    denySession(email: $email, token: $token)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/TokenAuthorization.js", "repo": "republik_plattform"}, "arguments": "($email: String!, $token: SignInToken!)"}, {"type": "query", "name": "secret", "content": "{\n    secret(namespace: $namespace, name: $name) {\n      name\n      namespace\n      data\n      labels\n      annotations\n      json\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!, $name: String!)"}, {"type": "mutation", "name": "CreateMessage", "content": "{\n    createMessage(args: $args) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/test-message/documents.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($args: CreateMessageInput!)"}, {"type": "mutation", "name": "start", "content": "{\n          start @client\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "bulkSendMessages", "content": "{\n        bulkSendMessages(assignmentId: $assignmentId) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AssignmentTexterContact.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($assignmentId: Int!)"}, {"type": "query", "name": "SkinnyIdentity", "content": "{\n    identity(id: $id) {\n      id\n      firstName\n      lastName\n      fullName\n      description\n      avatarUrl\n      avatarUrlExpanded\n      strength\n      attestations\n\n      verifiedAttestations {\n        id\n        rawData\n        properties {\n          type\n          value\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/SkinnyIdentity.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "resourceProposals", "content": "{\n    proposals(filter: { primaryIntentsResourceInventoriedAsId: [$id] }) {\n      edges {\n        node {\n          id\n          status\n          note\n          created\n          primaryIntents {\n            provider {\n              id\n              name\n              images {\n                bin\n                mimeType\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "remount", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/loading.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int)"}, {"type": "mutation", "name": "CreateAddons", "content": "{\n  createAddons(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($addonInput:AddonInput)"}, {"type": "query", "name": "thing", "content": "{\n      entry\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/fetchMore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "addPerson", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/index.test.tsx", "repo": "Shopify_react-apollo"}, "arguments": "($first: Int)"}, {"type": "query", "name": "profileBySafeAddress", "content": "{\n  profilesBySafeAddress(safeAddresses: [$safeAddress]) {\n    id\n    circlesAddress\n    displayCurrency\n    circlesSafeOwner\n    invitationLink\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    emailAddress\n    askedForEmailAddress\n    dream\n    country\n    avatarUrl\n    avatarCid\n    avatarMimeType\n    newsletter\n    displayTimeCircles\n    displayCurrency\n    cityGeonameid\n    provenUniqueness\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n      notificationEmail\n      cityGeonameid\n    }\n    shops {\n      id\n    }\n    city {\n      geonameid\n      name\n      country\n    }\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      city\n      cityGeonameid\n      zip\n      state\n      country\n      notificationEmail\n    }\n    memberships {\n      isAdmin\n      organisation {\n        id\n        circlesAddress\n        displayCurrency\n        displayName\n        circlesSafeOwner\n        name\n        description\n        avatarUrl\n        cityGeonameid\n        city {\n          geonameid\n          country\n          name\n          population\n        }\n      }\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n    claimedInvitation {\n      claimedAt\n    }\n    invitationTransaction {\n      timestamp\n      transaction_hash\n    }\n    circlesTokenAddress\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($safeAddress: String!)"}, {"type": "query", "name": "prices", "content": "{\n    current: bundles(first: 1) {\n      ethPriceUSD\n    }\n    oneDay: bundles(first: 1, block: { number: $block24 }) {\n      ethPriceUSD\n    }\n    twoDay: bundles(first: 1, block: { number: $block48 }) {\n      ethPriceUSD\n    }\n    oneWeek: bundles(first: 1, block: { number: $blockWeek }) {\n      ethPriceUSD\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/hooks/useEthPrices.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($block24: Int!, $block48: Int!, $blockWeek: Int!)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}, "arguments": "($data: LoginInput!)"}, {"type": "mutation", "name": "GeneratePhoneCode", "content": "{\n    generatePhoneCode(prefix: $prefix, method: $method, phone: $phone) {\n      success\n      reason\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GeneratePhoneCode.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $prefix: String!\n    $method: String\n    $phone: String!\n  )"}, {"type": "query", "name": "fetchIdeasWithUserReaction", "content": "{\n            ideas(withReactionByUserId: $userId) {\n              totalCount\n              edges {\n                node {\n                  id\n                  title\n                  description\n                  imageUrl\n                  challenge {\n                    id\n                    title\n                    closeDate\n                  }\n\n                  reactionsSummary {\n                    value\n                    totalCount\n                  }\n\n                  myReaction {\n                    id\n                    value\n                  }\n\n                  createdDate\n                  modifiedDate\n                  modifiedBy {\n                    id\n                    name\n                    imageUrl\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($userId: String!)"}, {"type": "mutation", "name": "checkSMSVerification", "content": "{\n    checkSMSVerification(code: $code)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/VerifyCodePane/VerifyCodePane.tsx", "repo": "seasons_harvest"}, "arguments": "($code: String!)"}, {"type": "mutation", "name": "createGroupalGroup", "content": "{\n            createGroupalGroup(username: $username, groupName: $groupName, users: $users, userToken: $userToken) {\n                group{\n                    id\n                    name\n                    individual\n                    users {\n                        username\n                        profilePicture\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $groupName: String!, $users: [String!]!, $userToken: String!)"}, {"type": "query", "name": "GetUser", "content": "{\n    users {\n      first_name\n      gender\n      id\n      date_of_birth\n    }\n  }", "metadata": {"commit_hash": "ce43433d771a9c0d484f1d8e9f002676444d8055", "file": "Drawer.js", "repo": "ghmeec_Mental-Health-Therapy-2020"}}, {"type": "mutation", "name": "AuthenticateUserMutation", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "868e58e4a19847fd9104e13922229edb96e4dda7", "file": "packages/components/login-form/login-form.js", "repo": "dferber90_lovely-webapp"}, "arguments": "($email: String!, $password: String!)"}, {"type": "subscription", "name": "SubscriptionNewMessage", "content": "{\n  subscriptionNewMessage(order:$order){\n    id\n    message\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/hooks/useChat.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($order:ID!)"}, {"type": "mutation", "name": "saveScore", "content": "{\n    saveScore(value: $value, highScore: $highScore, difficulty: $difficulty, player: $player){\n      value\n      highScore\n      difficulty\n      player {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}, "arguments": "($value: Int!, $highScore: Boolean!, $difficulty: String, $player: ID!)"}, {"type": "query", "name": "getCommunitySettingsById", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunitySettings.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID)"}, {"type": "mutation", "name": "unify", "content": "{\n    unify(criteria: $criteria, exclude: $exclude) {\n      jobId\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "($criteria: [String], $exclude: Boolean)"}, {"type": "mutation", "name": "CreateCoupon", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($couponInput:CouponInput!)"}, {"type": "mutation", "name": "updateContribution", "content": "{\n    contribute: createEconomicEvent(\n      event: {\n        action: \"work\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceConformsTo: $conformsTo\n        hasPointInTime: $now\n        effortQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "(\n    $process: ID!\n    $agent: ID!\n    $resource: ID!\n    $quantity: IMeasure!\n    $now: DateTime!\n    $metadata: JSONObject!\n    $conformsTo: ID!\n    $unitOne: ID!\n  )"}, {"type": "query", "name": "transfers", "content": "{\n    transfers(\n      offset: $offset\n      last: $limit\n      filter: { fromId: { equalTo: $account } }\n      orderBy: TIMESTAMP_DESC\n    ) {\n      totalCount\n      nodes {\n        toId\n        fromId\n        amount\n        timestamp\n        \n        block {\n          id\n          extrinsics {\n            nodes {\n              id\n              method\n              section\n              args\n              signerId  # \u9a8c\u8bc1\u4ebaaccount\n              isSuccess\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c71e88ae7a3a24f250eac00ee4f3f79fa8bfb132", "file": "src/config/query.js", "repo": "itering_subscan-multisig-ui"}, "arguments": "($account: String!, $offset: Int, $limit: Int)"}, {"type": "mutation", "name": "denySession", "content": "{\n    denySession(email: $email, token: $token)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/TokenAuthorization.js", "repo": "republik_plattform"}, "arguments": "($email: String!, $token: SignInToken!)"}, {"type": "mutation", "name": "submitRepository", "content": "{\n          submitRepository(repoFullName: \"apollographql/apollo-client\") {\n            createdAt\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/Query.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "UpdateOrderStatusRider", "content": "{\n    updateOrderStatusRider(id:$id,status:$status){\n      _id\n      order_status\n    }\n  }", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/screens/OrderDetail/OrderDetail.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}, "arguments": "($id:String!,$status:String!)"}, {"type": "mutation", "name": "EditMe", "content": "{\n    editMe(name: $name, img: $img) {\n      status\n      msg\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/components/account/account-profile-details.js", "repo": "FrontPhoenix_phoenix-finance"}, "arguments": "($name: String!, $img: Upload)"}, {"type": "mutation", "name": "registerServiceConsumer", "content": "{\n        obj: registerServiceConsumer(data: $data) ${SERVICE_CONSUMER_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/resident/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: RegisterServiceConsumerInput!)"}, {"type": "mutation", "name": "addCouponToBasket", "content": "{\n        addCouponToBasket(couponCode: $couponCode) {\n            ${basketQuery}\n        }\n    }", "metadata": {"commit_hash": "d75976ca5a5746fe56fe814655bb3c33e88b042d", "file": "packages/storefront-lwc/src/modules/commerce/coupons/gqlMutations.js", "repo": "SalesforceCommerceCloud_sfcc-sample-apps"}, "arguments": "($couponCode: String!)"}, {"type": "query", "name": "communities", "content": "{\n    communities {\n      id\n      url\n      image\n      name\n      author {\n        id\n      }\n      members {\n        id\n      }\n      notifications {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "components/Layout/index.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "query", "name": "account", "content": "{\n    account(id: $user) {\n      id\n      totalBorrowValueInEth\n      totalCollateralValueInEth\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}, "arguments": "($user: ID!)"}, {"type": "mutation", "name": "addAPIDefinition", "content": "{\n    addAPIDefinitionToPackage(packageID: $apiPackageId, in: $in) {\n      id\n      name\n      description\n      targetURL\n      spec {\n        data\n        format\n        type\n      }\n      group\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Api/gql.js", "repo": "kyma-project_console"}, "arguments": "($apiPackageId: ID!, $in: APIDefinitionInput!)"}, {"type": "mutation", "name": "archiveChannel", "content": "{\n    archiveChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/archiveChannel.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: ArchiveChannelInput!)"}, {"type": "mutation", "name": "enableRedshiftClusterDatasetTableCopy", "content": "{\n      enableRedshiftClusterDatasetTableCopy(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n        tableUri: $tableUri\n        schema: $schema\n        dataLocation: $dataLocation\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/copyTableToCluster.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $clusterUri: String!\n      $datasetUri: String!\n      $tableUri: String!\n      $schema: String!\n      $dataLocation: String\n    )"}, {"type": "query", "name": "WatchedLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/links.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "topPools", "content": "{\n    pools(\n      first: 50\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "QueryWithoutVariables", "content": "{\n            getVars {\n              __typename\n              name\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "UPDATE_USER_MUTATION", "content": "{\n    updateUser(\n      id: $id\n      name: $name\n      status: $status\n      role: $role\n    ) {\n      id\n      name\n      email\n      status\n      role\n    }\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/User/UserMutation.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}, "arguments": "(\n    $id: ID!\n    $name: String!\n    $status: String!\n    $role: String!\n  )"}, {"type": "query", "name": "loadChats", "content": "{\n            currentUser {\n              id\n              conversations(first: $max) {\n                totalCount\n                edges {\n                  cursor\n                  node {\n                    ${MESSAGE_PROPS}\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($max: Int)"}, {"type": "mutation", "name": "updateStack", "content": "{\n      updateStack(targetUri: $targetUri, targetType: $targetType) {\n        stackUri\n        targetUri\n        name\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Stack/updateStack.js", "repo": "awslabs_aws-dataall"}, "arguments": "($targetUri: String!, $targetType: String!)"}, {"type": "mutation", "name": "updateLiferayExperienceCloudEnvironment", "content": "{\n\t\tupdateLiferayExperienceCloudEnvironment(\n\t\t\tliferayExperienceCloudEnvironmentId: $liferayExperienceCloudEnvironmentId\n\t\t\tinput: $LiferayExperienceCloudEnvironment\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"PUT\"\n\t\t\t\ttype: \"C_LiferayExperienceCloudEnvironment\"\n\t\t\t\tpath: \"/c/liferayexperiencecloudenvironments/{args.liferayExperienceCloudEnvironmentId}\"\n\t\t\t) {\n\t\t\tliferayExperienceCloudEnvironmentId\n\t\t\tprojectId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/liferay-experience-cloud-environments/queries/useUpdateLiferayExperienceCloudEnvironment.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$liferayExperienceCloudEnvironmentId: Long!\n\t\t$LiferayExperienceCloudEnvironment: InputC_LiferayExperienceCloudEnvironment!\n\t)"}, {"type": "query", "name": "getEverythingThreads", "content": "{\n    user: currentUser {\n      id\n      ...userEverythingConnection\n    }\n  }\n  ${userEverythingConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/user/getCurrentUserEverythingFeed.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($after: String)"}, {"type": "mutation", "name": "editUser", "content": "{\n    editUser(input: $input) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/user/editUser.js", "repo": "withspectrum_spectrum"}, "arguments": "($input: EditUserInput!)"}, {"type": "query", "name": "Orders", "content": "{\n  orders(offset:$offset){\n    _id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    order_id\n    user{\n      _id\n      phone\n    }\n    \n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    payment_status\n    payment_method\n    order_amount\n    paid_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n    rider{\n      _id\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/context/User.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}, "arguments": "($offset:Int)"}, {"type": "query", "name": "getCommunitiesByIds", "content": "{\n    communities(ids: $ids) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunities.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($ids: [ID])"}, {"type": "mutation", "name": "archiveChannel", "content": "{\n    archiveChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/archiveChannel.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: ArchiveChannelInput!)"}, {"type": "query", "name": "LatestDemocracyTreasuryProposalPosts", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            topic: {\n                id: {\n                    _eq: $postTopic\n                }\n            },\n            onchain_link: {\n                onchain_treasury_proposal_id: {\n                    _is_null: false\n                },\n                onchain_motion_id: {\n                    _is_null: true\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_treasury_proposal_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_treasury_proposal_id\n                onchain_treasury_spend_proposal(where: {}) {\n                    id\n                    treasuryStatus(last: 1) {\n                        id\n                        status\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/OnChain/Treasury/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $postTopic: Int!, $limit: Int! = 5 )"}, {"type": "query", "name": "getCategory", "content": "{\n    category(id: $id) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/queries/category.js", "repo": "stvkoch_graphqlizejs"}, "arguments": "($id: ID)"}, {"type": "query", "name": "GetSecrets", "content": "{\n  appSecrets(appID: $appId) {\n    ...Secret\n  }\n}\n    ${SecretFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!)"}, {"type": "mutation", "name": "UploadIntro", "content": "{\n        uploadIntro(intro: $intro)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($intro: String!)"}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        field\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createProject", "content": "{\n  createProject(data:$data){\n    ${PROJECT}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($data: InputProject!)"}, {"type": "query", "name": "DiscussionPostsIdDesc", "content": "{\n        posts(order_by: {id: desc}, limit: $limit, where: {type: {id: {_eq: 1}}}) {\n            ...postFields\n        }\n    }\n    ${postFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Discussions/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($limit: Int! = 20)"}, {"type": "query", "name": "getCatalogueQuestionnaires", "content": "{\n      getCatalogueQuestionnaires: outcomesetCatalogue(source: \"softoutcomes\") {\n        ...catalogueOutcomeSet\n      }\n    }\n    ${catalogueFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/catalogue/index.ts", "repo": "impactasaurus_app"}}, {"type": "mutation", "name": "createAlcance", "content": "{\n    createAlcance(data: $data) {\n      id\n      nombre\n      valor\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/create/alcance-create.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($data: AlcanceCreateInput!)"}, {"type": "mutation", "name": "updateCarrierStatus", "content": "{\n    updateCarrierStatus(status: $status) \n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}, "arguments": "($status: Boolean)"}, {"type": "mutation", "name": "updateLinea", "content": "{\n    updateLinea(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/update/linea-update.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($data: LineaUpdateInput!, $where: LineaWhereUniqueInput!)"}, {"type": "query", "name": "proposal", "content": "{\n    proposals(where: { molochAddress: $molochAddress, proposalId: $proposalId }) {\n      ${proposalFields}\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($molochAddress: String!, $proposalId: String!)"}, {"type": "query", "name": "Customers", "content": "{\n    customers(pageInput: $pageInput) {\n      pageInfo {\n        limit\n        page\n        hasNext\n        numPages\n      }\n      customers {\n        id\n        firstName\n        lastName\n        orders {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a7f1253a409c83f34852f4674deb2fdde688f48f", "file": "ui/src/graphql/customer.js", "repo": "jkupcho_graphql-talk"}, "arguments": "($pageInput: PageInput!)"}, {"type": "query", "name": "intl", "content": "{\n    locale(locale: $locale, section: $section) {\n      messages\n      locale\n    }\n  }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/hocs/with-locale-props.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}, "arguments": "($locale: String!, $section: String!)"}, {"type": "mutation", "name": "joinChannelWithToken", "content": "{\n    joinChannelWithToken(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/joinChannelWithToken.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: JoinChannelWithTokenInput!)"}, {"type": "query", "name": "tagPostFilter", "content": "{\n    tagPostFilter(tag: $tag, input: $input) {\n      page\n      data {\n        id\n        postId\n        slug\n        content\n        cover\n        likes\n        comments\n        community {\n          id\n          name\n          slug\n          communityId\n          description\n          logo\n          cover\n          type\n          category {\n            id\n            name\n          }\n          createdAt\n        }\n        tags {\n          id\n          tagName\n        }\n        user {\n          id\n          fullName\n          photo\n          totalLikes\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($tag: String!, $input: PaginationInputType!)"}, {"type": "mutation", "name": "DELETE_LIBRARY", "content": "{\n        deleteLibrary(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/libraries/deleteLibraryMutation.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: ID)"}, {"type": "mutation", "name": "DeleteMember", "content": "{\n      deleteMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: DeleteMemberInput!)"}, {"type": "query", "name": "greeting", "content": "{ hello }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($someVar: Boolean)"}, {"type": "mutation", "name": "vote", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $type: VoteType!)"}, {"type": "mutation", "name": "deleteSagemakerNotebook", "content": "{\n      deleteSagemakerNotebook(\n        notebookUri: $notebookUri\n        deleteFromAWS: $deleteFromAWS\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/deleteSagemakerNotebook.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $notebookUri: String!\n      $deleteFromAWS: Boolean\n    )"}, {"type": "query", "name": "getPositions", "content": "{\n        positions {\n            id\n            name\n            permissionCleaning\n            permissionGetAccountingVoucher\n            permissionGetMap\n            permissionGetPatron\n            permissionGetPrice\n            permissionGetService\n            permissionManageEmployee\n            permissionManageRentingRoom\n            permissionManageMap\n            permissionManagePatron\n            permissionManagePatronKind\n            permissionManagePosition\n            permissionManagePrice\n            permissionManageService\n            isActive\n            employees {\n                id\n                isActive\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/position.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "signUp", "content": "{\n  signUp(\n    input: {\n      name: $name\n      lastname: $lastname\n      email: $email\n      password: $password\n    }\n  ) {\n    name\n    lastname\n    email\n  }\n}", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/reto02/bookshop-frontend/src/page/Signup.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}, "arguments": "($name: String, $lastname: String, $email: String!, $password: String!)"}, {"type": "query", "name": "getComposerCommunitiesAndChannels", "content": "{\n    user: currentUser {\n      ...userInfo\n      communityConnection {\n        edges {\n          node {\n            id\n            name\n            slug\n            profilePhoto\n            communityPermissions {\n              isMember\n              isBlocked\n              isOwner\n              isModerator\n              reputation\n            }\n          }\n        }\n      }\n      channelConnection {\n        edges {\n          node {\n            id\n            name\n            slug\n            isDefault\n            isPrivate\n            isArchived\n            community {\n              id\n            }\n            channelPermissions {\n              isMember\n              isPending\n              isBlocked\n              isOwner\n              isModerator\n            }\n          }\n        }\n      }\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/composer/getComposerCommunitiesAndChannels.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "rejectDashboardShare", "content": "{\n      rejectDashboardShare(shareUri: $shareUri) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/rejectDashboardShare.js", "repo": "awslabs_aws-dataall"}, "arguments": "($shareUri: String!)"}, {"type": "mutation", "name": "RemoveTeamMember", "content": "{\n    removeTeamMember(teamId: $teamId, userId: $userId, userIds: $userIds) {\n      user {\n        id\n        fullName\n        profileUrl\n        roles {\n          id\n          name\n          companyId\n        }\n        teams {\n          id\n          name\n          companyId\n        }\n        companies {\n          id\n          name\n        }\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/RemoveTeamMember.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "($teamId: ID!, $userId: ID!, $userIds: [ID!])"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Query.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int)"}, {"type": "mutation", "name": "insert_message", "content": "{\n    insert_message (\n      objects: [$message]\n    ) {\n      returning {\n        id\n        timestamp\n        text\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-chat/src/components/Textbox.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($message: message_insert_input! )"}, {"type": "query", "name": "Publications", "content": "{\n    publications(\n      request: { profileId: $id, publicationTypes: [POST], limit: $limit }\n    ) {\n      items {\n        __typename\n        ... on Post {\n          ...PostFields\n        }\n      }\n    }\n  }\n  fragment PostFields on Post {\n    id\n    metadata {\n      ...MetadataOutputFields\n    }\n  }\n  fragment MetadataOutputFields on MetadataOutput {\n    content\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/getPublications.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}, "arguments": "($id: ProfileId!, $limit: LimitScalar)"}, {"type": "query", "name": "HeroNameConditionalExclusion", "content": "{\n    hero(episode: $episode) {\n      name @skip(if: $skipName)\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/__generated__/HeroNameConditional.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode, $skipName: Boolean!)"}, {"type": "mutation", "name": "updateTodo", "content": "{\n    updateTodo(input: { id: $id, title: $title, description: $description, version: $version, completed: $completed}) {\n      id\n      title\n      description\n      version\n      completed\n    }\n  }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "examples/react-native/src/gql/queries.js", "repo": "aerogear_offix"}, "arguments": "($id: ID!, $description: String, $title: String, $version: Int!, $completed: Boolean)"}, {"type": "mutation", "name": "generateStartup", "content": "{\n  generateStartup(keyword: $keyword) {\n    id\n    name\n    valueProposition\n    keyword\n    colorScheme\n  }\n}", "metadata": {"commit_hash": "b1cd78e068ae27b14a38c22dd8e257ef8de5d1c5", "file": "frontend/src/generated/graphql.tsx", "repo": "jdiebold_foundst-rs"}, "arguments": "($keyword: String!)"}, {"type": "mutation", "name": "CreateCar", "content": "{\n    createCar(input: $input, condition: $condition) {\n      id\n    }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}, "arguments": "(\n      $input: CreateCarInput!\n      $condition: ModelCarConditionInput\n    )"}, {"type": "query", "name": "GetSmtpSettings", "content": "{\n  config(appID: $appId, resolve: true) {\n    id: __typename\n    __typename\n    provider {\n      id: __typename\n      __typename\n      smtp {\n        host\n        method\n        port\n        secure\n        sender\n        user\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!)"}, {"type": "mutation", "name": "CreateProposal", "content": "{\n    createProposal(proposal: { name: $name, note: $note }) {\n      proposal {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($name: String!, $note: String!)"}, {"type": "query", "name": "listConnections", "content": "{\n    listConnections(limit: $limit) {\n      items {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-connections.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($limit: Int)"}, {"type": "query", "name": "getCommunitySettingsByMatch", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/community/getCommunitySettings.js", "repo": "withspectrum_spectrum"}, "arguments": "($slug: LowercaseString)"}, {"type": "query", "name": "getUncommittedChanges", "content": "{\n    repo(id: $repoId) {\n      id\n      uncommittedChanges {\n        id\n        email\n        name\n        portrait(properties: { width: 160, height: 160 })\n      }\n      currentPhase {\n        lock\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/VersionControl/UncommittedChanges.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!)"}, {"type": "query", "name": "getPostComments", "content": "{\n    getPostComments(post: $post, pagination: $pagination) {\n      page\n      per_page\n      total\n      data {\n        id\n        commentId\n        message\n        isReply\n        cover\n        likes\n        user {\n          id\n          userId\n          fullName\n          photo\n          totalLikes\n          createdAt\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($post: String!, $pagination: PaginationInputType!)"}, {"type": "mutation", "name": "DeleteVendor", "content": "{\n  deleteVendor(id:$id)\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Vendors.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "companyDeleteGroup", "content": "{\n    companyDeleteGroup(input: { groupId_: $id }) {\n      companyProGroup {\n        groupName\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($id: UUID!)"}, {"type": "mutation", "name": "PlaceOrder", "content": "{\n    placeOrder(restaurant:$restaurant,orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,tipping:$tipping, taxationAmount: $taxationAmount, address:$address, orderDate: $orderDate,isPickedUp: $isPickedUp, deliveryCharges:$deliveryCharges) {\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      orderDate\n      expectedTime\n      isPickedUp\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Cart/Cart.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($restaurant:String!,$orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$tipping:Float!, $taxationAmount: Float!,$address:AddressInput!, $orderDate: String!,$isPickedUp: Boolean!, $deliveryCharges: Float!)"}, {"type": "query", "name": "advertiser", "content": "{\n    advertiser(id: $id) {\n      id\n      publicKey\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/advertiser.generated.tsx", "repo": "brave_ads-ui"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "noteUnlinkAttachment", "content": "{\n  note_UnlinkAttachment(noteId: $noteId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n      name\n      mimeType\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($noteId: ID!, $attachmentId: ID!)"}, {"type": "mutation", "name": "deleteDataPipeline", "content": "{\n      deleteDataPipeline(\n        DataPipelineUri: $DataPipelineUri\n        deleteFromAWS: $deleteFromAWS\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/deleteDataPipeline.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $DataPipelineUri: String!\n      $deleteFromAWS: Boolean\n    )"}, {"type": "mutation", "name": "UpdateRiderLocation", "content": "{\n  updateRiderLocation(latitude:$latitude,longitude:$longitude){\n    _id\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/context/user.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($latitude:String!,$longitude:String!)"}, {"type": "query", "name": "getPetitions", "content": "{\n      getPetitionsByRequesterAndStatusAndDates(username: $username, status: $status, startDate: $startDate, endDate: $endDate, userToken: $userToken){\n        id\n        status\n        dateOfPetitionAcepted\n        requester{\n          firstName\n          lastName\n          username\n        }\n        property{\n          maxCapacity\n          id\n          title\n          price\n          province{\n            name\n          }\n          images{\n            image\n            id\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/personalRequestsAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $status: String, $startDate: String, $endDate: String, $userToken: String!)"}, {"type": "mutation", "name": "UniswapAddLiquidity", "content": "{\n    uniswapAddLiquidity(\n      from: $from\n      exchange: $exchange\n      value: $value\n      tokens: $tokens\n      liquidity: $liquidity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $from: String!\n    $exchange: String!\n    $value: String!\n    $tokens: String!\n    $liquidity: String!\n  )"}, {"type": "mutation", "name": "issueCreate", "content": "{\n      issueCreate(input: $input) {\n        ...issueFullFields\n      }\n    }\n    ${ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($input: IssueCreateInput!)"}, {"type": "mutation", "name": "vote", "content": "{\n    insert_vote(\n      objects: [{ option_id: $optionId, created_by_user_id: $userId }]\n    ) {\n      returning {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-poll/src/GraphQL.jsx", "repo": "hasura_sample-apps"}, "arguments": "($optionId: uuid!, $userId: uuid!)"}, {"type": "mutation", "name": "sendVerificationEmail", "content": "{\n      sendVerificationEmail(username: $username)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($username: String!)"}, {"type": "query", "name": "puzzleVotePermQuery", "content": "{\n      user(id: $userId) {\n        id\n        canVote\n      }\n    }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/containers/PuzzleShowPage/RewardingBox.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($userId: ID!)"}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Option/List/List.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "ForgotPassword", "content": "{\n  forgotPassword(email:$email){\n    result\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/ForgotPassword/ForgotPassword.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($email:String!)"}, {"type": "mutation", "name": "signup", "content": "{\n    signup(username: $username) {\n      token\n      user {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "27327705aff1ce63cab00c125c8b4f760df39789", "file": "client/graphql/mutations/signup.js", "repo": "greatWall627_chatting-pro"}, "arguments": "($username: String!)"}, {"type": "mutation", "name": "setLastSeen", "content": "{\n    setLastSeen(id: $id) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/directMessageThread/setDMThreadLastSeen.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "EditRider", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Rider/Rider.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($riderInput:RiderInput!)"}, {"type": "query", "name": "postBySlug", "content": "{\n    post(slug: $slug) {\n      id\n      title\n      slug\n      text\n    }\n  }", "metadata": {"commit_hash": "d4cc8b8e50491cf1d27c2bb4742e22202bee9615", "file": "web/pages/post.js", "repo": "KATT_graphql-workshop"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "Four", "content": "{\n          four\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "DeleteSection", "content": "{\n  deleteSection(id:$id)\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Sections.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "query", "name": "validateTargetUrl", "content": "{\n    validateTargetUrl(targetUrl: $url) {\n      isValid\n      redirects {\n        url\n        violations {\n          summary\n          detail\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/url.generated.tsx", "repo": "brave_ads-ui"}, "arguments": "($url: String!)"}, {"type": "query", "name": "ShopProducts", "content": "{\n    shop {\n      name\n    }\n    products(first: 4) {\n      edges {\n        node {\n          id\n          handle\n          title\n          images(first: 1) {\n            edges {\n              node {\n                id\n                altText\n                originalSrc\n              }\n            }\n          }\n          priceRange {\n            minVariantPrice {\n              amount\n              currencyCode\n            }\n            maxVariantPrice {\n              amount\n              currencyCode\n            }\n          }\n          onlineStoreUrl\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "70998b427ad850d5beb881dce7d48219ca142e0d", "file": "pages/index.js", "repo": "Shopify_shopify-marketplaces-buyer-app"}}, {"type": "query", "name": "GetUserByCognitoId", "content": "{\n        getUserByCognitoId(cognitoId: $cognitoId) {\n            items {\n                id\n                tenantId\n            }\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletProfilePictureUploadURLResolver/src/index.js", "repo": "platelet-app_platelet"}, "arguments": "($cognitoId: ID!)"}, {"type": "mutation", "name": "addEmailToOrganization", "content": "{\n  emailMergeToOrganization(organizationId: $organizationId, input: $input) {\n    ...Email\n    label\n  }\n}\n    ${EmailFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!, $input: EmailInput!)"}, {"type": "query", "name": "Streams", "content": "{\n    streams(first: 100, orderBy: timestamp, orderDirection: desc, where: { owner: $owner }) {\n      id\n      flow\n      owner\n      rawStream {\n        id\n        interval\n        payment\n        recipient\n        redemption {\n          id\n          recipientAmount\n          senderAmount\n        }\n        sender\n        startBlock\n        stopBlock\n        token {\n          id\n          decimals\n          name\n          symbol\n        }\n        txs {\n          id\n          block\n          event\n          timestamp\n        }\n        withdrawals {\n          id\n          amount\n        }\n      }\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "80918ace237654f5b6697aae541744d7ceb6dfa6", "file": "v0/dapp/src/apollo/queries.js", "repo": "sablier-labs_legacy-uis"}, "arguments": "($owner: String!)"}, {"type": "query", "name": "UserFavourite", "content": "{\n    userFavourite(latitude:$latitude,longitude:$longitude) {\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      reviewData{\n        total\n        ratings\n        reviews{\n          _id\n          order{\n            user{\n              _id\n              name\n              email\n            }\n          }\n          rating\n          description\n          createdAt\n        }\n      }\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          image\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      rating\n      isAvailable\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n     }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/Favourites/Favourites.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($latitude:Float,$longitude:Float)"}, {"type": "query", "name": "nestedData", "content": "{\n          people {\n            id\n            friends {\n              id\n              type\n            }\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/ApolloClient.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deleteDomain", "content": "{\n    deleteDomain(domain: $domain) {\n      domain {\n        domain\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "($domain: String!)"}, {"type": "query", "name": "GetPosts", "content": "{\n      posts (filter: { pinnedUntil: { value: $now, comparator: GREATER_THAN } }) {\n        ...PostList\n      }\n    }\n    ${PostList.fragments.postList}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/PostHooks.ts", "repo": "marian2js_finsharing"}, "arguments": "($now: Date!)"}, {"type": "mutation", "name": "botItemDelete", "content": "{\n          botItemDelete(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($input: BotItemDeleteInput!)"}, {"type": "query", "name": "GetBackupPresignedUrl", "content": "{\n  getBackupPresignedUrl: getBackupPresignedURL(\n    appID: $appId\n    backupID: $backupId\n    expireInMinutes: $expireInMinutes\n  ) {\n    url\n    expiresAt: expires_at\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: String!, $backupId: String!, $expireInMinutes: Int)"}, {"type": "mutation", "name": "update_todos", "content": "{\n    update_todos(_set: {is_completed: $done}, where: {id: {_gt: 0}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "vuetify-vuex-todo-graphql/src/store.js", "repo": "hasura_sample-apps"}, "arguments": "($done: Boolean)"}, {"type": "query", "name": "MyFeed", "content": "{\n          feed {\n            ...FeedWithRepository\n          }\n        }\n\n        ${feedWithRepository}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/plugins/typescript/vue-apollo/tests/vue-apollo.spec.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "CHECK_APPLICATION_EXISTENCE", "content": "{\n        applications(filters: {id: $id, endpoint: $endpoint}) {\n            totalCount\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/applications/checkApplicationExistence.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: ID, $endpoint: String)"}, {"type": "query", "name": "ExperimentVariantsHistogram", "content": "{\n\t\texperiment(experimentId: $experimentId) {\n\t\t\tdxpVariants {\n\t\t\t\tcontrol\n\t\t\t\tdxpVariantName\n\t\t\t\tdxpVariantId\n\t\t\t}\n\t\t\tgoal {\n\t\t\t\tmetric\n\t\t\t}\n\t\t\tid\n\t\t\tmetricsHistogram {\n\t\t\t\tvariantMetrics {\n\t\t\t\t\tconfidenceInterval\n\t\t\t\t\tdxpVariantId\n\t\t\t\t\timprovement\n\t\t\t\t\tmedian\n\t\t\t\t}\n\t\t\t\tprocessedDate\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/experiments/queries/ExperimentQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "($experimentId: String!)"}, {"type": "mutation", "name": "deleteMessage", "content": "{\n    deleteMessage(id: $id)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/message/deleteMessage.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "EventAttributeDefinitions", "content": "{\n\t\teventAttributeDefinitions(\n\t\t\teventDefinitionId: $eventDefinitionId\n\t\t\tkeyword: $keyword\n\t\t\tpage: $page\n\t\t\tsize: $size\n\t\t\tsort: $sort\n\t\t\ttype: $type\n\t\t) {\n\t\t\teventAttributeDefinitions {\n\t\t\t\tdataType\n\t\t\t\tdescription\n\t\t\t\tdisplayName\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tsampleValue\n\t\t\t\ttype\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventAttributeDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$eventDefinitionId: String\n\t\t$keyword: String\n\t\t$page: Int!\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t\t$type: EventAttributeDefinitionType!\n\t)"}, {"type": "query", "name": "GetContactTags", "content": "{\n  contact(id: $id) {\n    id\n    tags {\n      ...Tag\n    }\n  }\n}\n    ${TagFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "signInUser", "content": "{\n    SignIn(input: { email: $email, password: $password }) {\n      user {\n        ...authUserData\n      }\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/LoginContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "SitesMetricQuery", "content": "{\n\t\tsite(\n\t\t\tchannelId: $channelId\n\t\t\tinterval: $interval\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t) {\n\t\t\tvisitorsMetric {\n\t\t\t\t...HistogramFragment\n\t\t\t}\n\t\t\tanonymousVisitorsMetric {\n\t\t\t\t...HistogramFragment\n\t\t\t}\n\t\t\tknownVisitorsMetric {\n\t\t\t\t...HistogramFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${METRIC_HISTOGRAM_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/components/metric-card/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String\n\t\t$interval: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t)"}, {"type": "query", "name": "HeroNameConditionalExclusion", "content": "{\n    hero(episode: $episode) {\n      name @skip(if: $skipName)\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode, $skipName: Boolean!)"}, {"type": "mutation", "name": "updateTaskComment", "content": "{\n    updateTaskComment(input: { commentID: $commentID, message: $message }) {\n      comment {\n        id\n        updatedAt\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/updateTaskComment.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($commentID: UUID!, $message: String!)"}, {"type": "query", "name": "PuzzleDescribeListQuery", "content": "{\n      allPuzzles(\n        orderBy: $orderBy\n        offset: $offset\n        limit: $limit\n        created_Year: $year\n        created_Month: $month\n      ) {\n        edges {\n          node {\n            id\n            title\n            genre\n            yami\n            user {\n              ...UserLabel_user\n            }\n            content\n            contentSafe\n            commentSet {\n              edges {\n                node {\n                  id\n                  spoiler\n                  content\n                  user {\n                    ...UserLabel_user\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    ${UserLabel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/containers/HomePage/PuzzleDescribeList.js", "repo": "heyrict_cindy-realtime"}, "arguments": "(\n      $orderBy: [String]\n      $offset: Int\n      $limit: Int\n      $year: Int\n      $month: Int\n    )"}, {"type": "query", "name": "PublicChatRoomList", "content": "{\n      allChatroomsLo(private: $private, limit: $limit, offset: $offset) {\n        edges {\n          node {\n            ...ChatRoom\n          }\n        }\n        totalCount\n      }\n    }\n    ${ChatRoomFragment}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/components/ChatRoomList/index.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($private: Boolean, $limit: Int, $offset: Int)"}, {"type": "query", "name": "Order", "content": "{\n              order(where: { id: $id }) {\n                id\n                description\n                itemsCount: _itemsCount\n                items {\n                  id\n                  description\n                }\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}, "arguments": "($id: _inputIDOperator)"}, {"type": "query", "name": "GetFirstPublishedProduct", "content": "{\n    products(first: 1, query: \"published_status:published\") {\n      edges {\n        node {\n          id\n          title\n          handle\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "server/handlers/queries/get-first-published-product.js", "repo": "Shopify_product-reviews-sample-app"}}, {"type": "mutation", "name": "deleteProjectMember", "content": "{\n    deleteProjectMember(input: { projectID: $projectID, userID: $userID }) {\n      ok\n      member {\n        id\n      }\n      projectID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/deleteProjectMember.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($projectID: UUID!, $userID: UUID!)"}, {"type": "query", "name": "FeaturesSeen", "content": "{\n  currentUser {\n    id\n    features\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "rolesConnection", "content": "{\n    rolesConnection {\n      aggregate {\n       count\n     }\n   }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+dashboard/count-roles/count-roles.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "tokenDayDatas", "content": "{\n    tokenDayDatas(first: 7, orderBy: date, orderDirection: desc, where: { token: $token }) {\n      id\n      date\n      priceUSD\n      token {\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "b7b9c43058b8bc05dedf45a952c856f892071f89", "file": "src/apollo/tokenDayDatas.ts", "repo": "pangolindex_components"}, "arguments": "($token: String!)"}, {"type": "mutation", "name": "delete$", "content": "{MODELS}($ids: [ID!]) {\n            objs: delete${MODELS}(ids: $ids) ${fields}\n        }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "updateOwnSubmissionComment", "content": "{\n    updateOwnSubmissionComment(\n      input: { comment_: $comment, shortComment_: $shortComment, id_: $id }\n    ) {\n      submission {\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "(\n    $comment: String!\n    $shortComment: String!\n    $id: String!\n  )"}, {"type": "query", "name": "liquidityPositions", "content": "{\n    liquidityPositions(where: { user: $user }) {\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n          symbol\n          derivedETH\n        }\n        token1 {\n          id\n          symbol\n          derivedETH\n        }\n        totalSupply\n      }\n      liquidityTokenBalance\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}, "arguments": "($user: Bytes!)"}, {"type": "mutation", "name": "UpdateRefundMutation", "content": "{\n    updateRefund(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $offerID: String!\n    $amount: String!\n    $from: String\n  )"}, {"type": "query", "name": "getPlatformAuthorSession", "content": "{\n      getPlatformAuthorSession(\n         awsAccount: $awsAccount\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/getPlatformAuthorSession.js", "repo": "awslabs_aws-dataall"}, "arguments": "($awsAccount: String)"}, {"type": "query", "name": "getAccountSubscriptionGroups", "content": "{\n\t\tc {\n\t\t\taccountSubscriptionGroups(\n\t\t\t\taggregation: $aggregation\n\t\t\t\tfilter: $filter\n\t\t\t\tpage: $page\n\t\t\t\tpageSize: $pageSize\n\t\t\t\tsearch: $search\n\t\t\t\tsort: $sort\n\t\t\t) {\n\t\t\t\titems {\n\t\t\t\t\taccountSubscriptionGroupId\n\t\t\t\t\taccountKey\n\t\t\t\t\tactivationStatus\n\t\t\t\t\texternalReferenceCode\n\t\t\t\t\thasActivation\n\t\t\t\t\tname\n\t\t\t\t\ttabOrder\n\t\t\t\t\tmenuOrder\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$aggregation: [String]\n\t\t$filter: String\n\t\t$page: Int = 1\n\t\t$pageSize: Int = 20\n\t\t$search: String\n\t\t$sort: String\n\t)"}, {"type": "mutation", "name": "DeleteTag", "content": "{\n  tag_Delete(id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "AnalyseRun", "content": "{\n  generateRunFeedback(run: $run) {\n    feedbackSummary\n    lastRunFeedback\n    intensityFeedback\n    volumeFeedback\n    performanceFeedback\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($run: RunInput!)"}, {"type": "mutation", "name": "UnlinkMobileWallet", "content": "{\n    unlinkMobileWallet\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/UnlinkMobileWallet.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Member", "content": "{\n        isLoggedIn @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "fetchPool", "content": "{\n    pools(where: { id: $poolId }) {\n      id\n      fee\n      token0 {\n        id\n        decimals\n        symbol\n      }\n      token1 {\n        id\n        decimals\n        symbol\n      }\n      sqrtPrice\n      liquidity\n      tick\n      feesUSD\n      untrackedFeesUSD\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($poolId: ID)"}, {"type": "mutation", "name": "ResetPassword", "content": "{\n    resetPassword(\n      newPassword: $newPassword\n      confirmPassword: $confirmPassword\n      token: $token\n    ) {\n      caseId\n      status\n      error\n      messages\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/access-boston/src/client/graphql/reset-password.ts", "repo": "CityOfBoston_digital"}, "arguments": "(\n    $newPassword: String!\n    $confirmPassword: String!\n    $token: String!\n  )"}, {"type": "query", "name": "contents", "content": "{\n    contents(\n      where: { molochAddress: $molochAddress }\n      first: 1000\n      orderBy: createdAt\n      orderDirection: desc\n    ) {\n      id\n      createdAt\n      transactionHash\n      title\n      molochAddress\n      memberAddress\n      content\n      contentType\n      location\n      ratified\n      description\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/postQueries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($molochAddress: String!)"}, {"type": "mutation", "name": "forgotPassword", "content": "{\n        forgotPassword(email: $email) {\n          success\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/forgot-password.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}, "arguments": "($email: String!)"}, {"type": "mutation", "name": "deleteNoteComment", "content": "{\n    deleteOwnNoteComment(input: { _id: $id }) {\n      noteComment {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($id: UUID!)"}, {"type": "query", "name": "Restaurants", "content": "{\n  nearByRestaurants(latitude:$latitude,longitude:$longitude){\n    offers{\n      _id\n      name\n      tag\n      restaurants\n    }\n    sections{\n      _id\n      name\n      restaurants\n    }\n    restaurants{\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      reviewData{\n          total\n          ratings\n          reviews{\n            _id\n            order{\n              user{\n                _id\n                name\n                email\n              }\n            }\n            rating\n            description\n            createdAt\n          }\n      }\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          image\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      rating\n      isAvailable\n      openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Main/Main.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($latitude:Float,$longitude:Float)"}, {"type": "query", "name": "CurrentUser", "content": "{\n    currentUser {\n      id\n      user {\n        id\n        email\n        fullName\n        displayName\n        profileUrl\n        lastViewedCompanyId\n        ownedCompanies {\n          id\n          name\n        }\n        companies {\n          id\n          name\n          logoUrl\n        }\n        teams {\n          id\n          companyId\n          name\n        }\n        roles {\n          id\n          name\n          companyId\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/queries/CurrentUser.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "sendMessage", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/message/sendMessage.js", "repo": "DoBestMan_spectrum"}, "arguments": "($message: MessageInput!)"}, {"type": "query", "name": "getFollowers", "content": "{\n      getFollowers(userId: $userId, limit: $limit, nextToken: $nextToken) {\n        profiles {\n          id\n          name\n          screenName\n          createdAt\n        }\n      }\n    }", "metadata": {"commit_hash": "cdc3e383299f4b6e33541d9a79562fcfa59301a7", "file": "aws/Burning-Monk/Testing-Serverless-Apps/ch03-test-appsync/__tests__/steps/when.js", "repo": "muratkeremozcan_books"}, "arguments": "($userId: ID!, $limit: Int!, $nextToken: String)"}, {"type": "mutation", "name": "deleteIdea", "content": "{\n            deleteIdea(id: $id)\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetCost", "content": "{\n    getCost(costId: $costId) {\n      ...Cost\n      ...Shares\n    }\n  }\n  ${Cost}\n  ${Shares}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split"}, "arguments": "($costId: String!)"}, {"type": "mutation", "name": "submitComment", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.stencilApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "query", "name": "GetLinks", "content": "{\n          links(search: $search) {\n            url\n            id\n            description\n            postedBy {\n              email\n              id\n            }\n            votes {\n              id\n              user {\n                email\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "206747c230ff8343197ddacc762f289f4083fccd", "file": "quasar/src/store/hn/index.js", "repo": "briancaffey_django-postgres-vue-gitlab-ecs"}, "arguments": "($search: String!)"}, {"type": "subscription", "name": "deleteMessage", "content": "{\n    deleteMessage(channelUrl: $channelUrl, tenant: $tenant) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($channelUrl: String, $tenant: String)"}, {"type": "query", "name": "GetBidsByAuctionId", "content": "{\n      getBidsByAuctionId(auctionId: $auctionId) {\n        id\n        userId\n        auctionId\n        bitPrice\n        createdAt\n        updatedAt\n        user {\n          username\n          firstname\n          lastname\n          avatarUrl\n        }\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/auctions.js", "repo": "competitivebidding_frontend"}, "arguments": "($auctionId: Int!)"}, {"type": "mutation", "name": "login", "content": "{\n        login(email: $email, password: $password) {\n          email\n          name\n          admin\n        }\n      }", "metadata": {"commit_hash": "dcbf455cda4fa1257c7ac458a41b1c86232ffa65", "file": "pages/login.tsx", "repo": "PabloSzx_Next-Now-Apollo-TypeGraphQL-TypeORM-Passport"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "SearchCompanies", "content": "{\n    searchCompanies(text: $text, companyId: $companyId) {\n      users {\n        id\n        fullName\n        profileUrl\n        companies {\n          id\n          name\n          logoUrl\n        }\n      }\n      companies {\n        id\n        name\n        logoUrl\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/modules/list/CreateListPage/components/CreateListStep/components/CompanyForm.tsx", "repo": "DoBestMan_PrepDD"}, "arguments": "($text: String!, $companyId: ID)"}, {"type": "query", "name": "LazyLoad", "content": "{\n          id\n          expensive @defer\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "councilAtBlockNumber", "content": "{\n  councils(\n    where: {blockNumber: {number_lte: $blockNumber}}\n    orderBy: id_DESC\n    first: 1\n  ) {\n    members {\n      address\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($blockNumber: Int!)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id)\n      {\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryBounds{\n        coordinates\n      }\n      username\n      password\n      deliveryTime\n      minimumOrder\n      tax\n      isAvailable\n      stripeDetailsSubmitted\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n      owner{\n        _id\n        email\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Timings.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String)"}, {"type": "query", "name": "Luke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/recycler.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getMessageById", "content": "{\n    message(id: $id) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/message/getMessage.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "createTutorialComment", "content": "{\n    CreateTutorialComment(input: {\n      auth_token: $authToken,\n      comment: $comment,\n      tutorial_id: $id\n    }) {\n      tutorial_comment {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/TutorialContainer/gql.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($authToken: String!,\n    $comment: CommentInput, $id: ID!\n  )"}, {"type": "query", "name": "mes", "content": "{\n    mes(id: $id) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/update/mes-update.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/client-option.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "remoteAppGetUsersWhole", "content": "{\n  users(limit: $limit, offset: $offset) {\n    ...RemoteAppGetUsers\n  }\n  usersAggregate {\n    aggregate {\n      count\n    }\n  }\n}\n    ${RemoteAppGetUsersFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($limit: Int!, $offset: Int!)"}, {"type": "query", "name": "eje", "content": "{\n      eje(id: $id) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "CreateCost", "content": "{\n    createCost(data: $data) {\n      ...Cost\n      ...Payer\n    }\n  }\n  ${CostFragmentDoc}\n  ${PayerFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}, "arguments": "($data: CostInput!)"}, {"type": "mutation", "name": "UpdateOwnNewsComment", "content": "{\n    updateOwnNewsComment(input: { body_: $body, id_: $id }) {\n      newsComment {\n        id\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($id: UUID!, $body: String!)"}, {"type": "mutation", "name": "agentImport", "content": "{\n                agentImport(did: $did, didDocument: $didDocument, keystore: $keystore, passphrase: $passphrase) {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "(\n                $did: String!,\n                $didDocument: String!,\n                $keystore: String!,\n                $passphrase: String!\n            )"}, {"type": "query", "name": "GetRolesPermissions", "content": "{\n  config(appID: $appId, resolve: true) {\n    id: __typename\n    __typename\n    auth {\n      user {\n        roles {\n          allowed\n          default\n        }\n      }\n      session {\n        accessToken {\n          customClaims {\n            ...PermissionVariable\n          }\n        }\n      }\n    }\n  }\n}\n    ${PermissionVariableFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!)"}, {"type": "query", "name": "celoSystemHistory", "content": "{\n  celoSystemHistory {\n    BlockNumber\n    SnapshotDate\n    GoldTokenSupply\n    TotalLockedGoldBalance\n    NonVotingLockedGoldBalance\n    TotalCeloUSDValue\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "query", "name": "categories", "content": "{\n      categories{\n          _id\n          title\n          description\n          img_menu\n    }}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "GetLaunchList", "content": "{\n    launches(after: $after) {\n      cursor\n      hasMore\n      launches {\n        ...LaunchTile\n      }\n    }\n  }\n  ${LAUNCH_TILE_DATA}", "metadata": {"commit_hash": "b665a32a216dd9c3439369fb59e665b3b8d05e74", "file": "frontend/src/pages/launches.tsx", "repo": "zzy_actix-graphql-react"}, "arguments": "($after: String)"}, {"type": "query", "name": "CHECK_ATTRIBUTE_EXISTENCE", "content": "{\n        attributes(filters: {id: $id}) {\n            totalCount\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "deleteTweet", "content": "{\n    deleteTweet(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/tweet/index.js", "repo": "manikandanraji_twitter-clone-frontend"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "shiftDetail", "content": "{\n      shift(where: {id: {_eq: ${shiftId}}}){\n        id\n        shiftDateId\n        shiftName\n        isCompleted\n        createdAt\n        updatedAt\n        shiftEmployees {\n          id\n          name\n          canWorkingIds\n          workIds\n        }\n        shiftWorkingTimes {\n          id\n          timeName\n          color\n          startHour\n          startMinute\n          endHour\n          endMinute\n          isNextDayoff\n          maxEmployee\n          minEmployee\n        }\n      }      \n    }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/query.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "query", "name": "thing", "content": "{\n      entry\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/fetchMore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "CreateMessage", "content": "{\n    createMessage(args: $args) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/test-message/documents.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($args: CreateMessageInput!)"}, {"type": "mutation", "name": "EditComment", "content": "{\n  update_comments(where: {id: {_eq: $id}}, _set: {content: $content}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($id: uuid!, $content: String!)"}, {"type": "query", "name": "Account", "content": "{\n  account(currency: $currency) {\n    id\n    balance\n  }\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}, "arguments": "($currency: String!)"}, {"type": "mutation", "name": "register", "content": "{\n\t\tregister(\n\t\t\tregisterInput: {\n\t\t\t\tusername: $username\n\t\t\t\tpasswordHash: $passwordHash\n\t\t\t\tconfirmHash: $confirmHash\n\t\t\t\temail: $email\n\t\t\t}\n\t\t) {\n\t\t\tusername\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}, "arguments": "(\n\t\t$username: String!\n\t\t$passwordHash: String!\n\t\t$confirmHash: String!\n\t\t$email: String!\n\t)"}, {"type": "query", "name": "allCategories", "content": "{\n            categoryManyLean {\n              _id\n              name\n            }\n          }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/search.ts", "repo": "Enubia_buystuff4.me"}}, {"type": "mutation", "name": "DeletePost", "content": "{\n    deletePost(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next-cms/pages/posts/index.js", "repo": "department-stockholm_apollo-component"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "login", "content": "{\n    login(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "2c4335dade177e2649f4f38c42838e56b0bbff7f", "file": "frontend/src/GraphQL/Queries.js", "repo": "riggedCoinflip_lol-friendfinder"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "deleteInvitedProjectMember", "content": "{\n  deleteInvitedProjectMember(input: {projectID: $projectID, email: $email}) {\n    invitedMember {\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($projectID: UUID!, $email: String!)"}, {"type": "mutation", "name": "AddSleepVariable", "content": "{\n  addSleepVariable(\n    custom: $custom\n    emoji: $emoji\n    name: $name\n    sleepDate: $sleepDate\n  ) {\n    date\n    variables {\n      name\n      emoji\n      custom\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($name: String!, $emoji: String!, $sleepDate: String!, $custom: Boolean!)"}, {"type": "mutation", "name": "removeDatasetFromRedshiftCluster", "content": "{\n      removeDatasetFromRedshiftCluster(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/removeDatasetFromCluster.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $clusterUri: String\n      $datasetUri: String\n    )"}, {"type": "query", "name": "KnownIndividualsListTouchpointQuery", "content": "{\n\t\t\t${queryName}(\n\t\t\t\tchannelId: $channelId\n\t\t\t\tcanonicalUrl: $touchpoint\n\t\t\t\tdeviceType: $devices\n\t\t\t\tcountry: $location\n\t\t\t\trangeEnd: $rangeEnd\n\t\t\t\trangeKey: $rangeKey\n\t\t\t\trangeStart: $rangeStart\n\t\t\t\ttitle: $title\n\t\t\t) {\n\t\t\t\t${metricName} {\n\t\t\t\t\t...individualsFragment\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t${INDIVIDUALS_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/knownIndividualsListTouchpointQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t\t$channelId: String\n\t\t\t$devices: String\n\t\t\t$keywords: String\n\t\t\t$location: String\n\t\t\t$rangeEnd: String\n\t\t\t$rangeKey: Int\n\t\t\t$rangeStart: String\n\t\t\t$size: Int!\n\t\t\t$start: Int!\n\t\t\t$title: String\n\t\t\t$touchpoint: String\n\t\t)"}, {"type": "query", "name": "GetTrustAccount", "content": "{\n      getTrustAccount\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/getTrustAccount.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "ideaIssueUpdate", "content": "{\n      ideaIssueUpdate(id: $id, input: $input) {\n        ...ideaIssueFullFields\n      }\n    }\n    ${IDEA_ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!, $input: IdeaIssueUpdateInput!)"}, {"type": "subscription", "name": "addonsConfigurationEvent", "content": "{\n    addonsConfigurationEvent(namespace: $namespace) {\n      type\n      addonsConfiguration {\n        ...AddonsConfiguration\n      }\n    }\n  }\n\n  ${ADDONS_CONFIGURATION_FRAGMENT}", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Subscriptions.service.ts", "repo": "kyma-project_console"}, "arguments": "($namespace: String!)"}, {"type": "mutation", "name": "update_todos", "content": "{\n    update_todos(_set: {is_completed: $done}, where: {id: {_gt: 0}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($done: Boolean)"}, {"type": "query", "name": "me", "content": "{\n    me {\n      id\n      fullname\n      username\n      bio\n      email\n      social\n      image\n      isOnline\n      owner\n      communitiesOwned {\n        id\n        url\n      }\n      communitiesFollowed {\n        id\n        url\n        author {\n          id\n        }\n        image\n        name\n        members {\n          id\n        }\n        notifications {\n          id\n        }\n      }\n      role {\n        id\n        roleSettings\n        title\n      }\n      channelsInfo {\n        id\n        channel {\n          id\n          name\n          url\n        }\n        lastUpdateAt\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/User.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "updateName", "content": "{\n    updateName(id: $id, firstName: $firstName) {\n      __typename\n      id\n      firstName\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/fetchPolicies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: ID!, $firstName: String!)"}, {"type": "query", "name": "post", "content": "{\n    post(slug: $slug)\n      @rest(type: \"Post\", path: \"{args.slug}\", endpoint: \"wordpress\") {\n      title\n      content\n      excerpt\n      slug\n      date\n      modified\n    }\n  }", "metadata": {"commit_hash": "f04b86dda45a53314422c3d42013f04980effa85", "file": "examples/ckan-2021/graphql/queries.ts", "repo": "datopian_portaljs"}, "arguments": "($slug: String)"}, {"type": "mutation", "name": "usersConfigGetNotificationByEmail", "content": "{\n          usersConfigGetNotificationByEmail(isAllowed: $isAllowed) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-notifications-ui/src/containers/NotificationSettings.tsx", "repo": "erxes_erxes-community"}, "arguments": "($isAllowed: Boolean)"}, {"type": "query", "name": "Three", "content": "{\n          three\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "editCoupon", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Coupons.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($couponInput:CouponInput!)"}, {"type": "mutation", "name": "usersChangePassword", "content": "{\n          usersChangePassword(\n            currentPassword: $currentPassword\n            newPassword: $newPassword\n          ) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/core-ui/src/modules/settings/profile/containers/ChangePassword.tsx", "repo": "erxes_erxes-community"}, "arguments": "(\n          $currentPassword: String!\n          $newPassword: String!\n        )"}, {"type": "query", "name": "PlaylistQuery", "content": "{\n\t  playlist {\n\t    name\n\t    tracks {\n\t      track_details {\n\t        name\n\t      }\n\t      track {\n\t        items {\n\t          track {\n\t            url\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/gatsby-contentful-auth0/app/src/components/Playlist.js", "repo": "shinesanthosh_graphql-engine"}}, {"type": "mutation", "name": "addCouponToBasket", "content": "{\n        addCouponToBasket(couponCode: $couponCode) {\n            ${basketQuery}\n        }\n    }", "metadata": {"commit_hash": "d75976ca5a5746fe56fe814655bb3c33e88b042d", "file": "packages/storefront-lwc/src/modules/commerce/coupons/gqlMutations.js", "repo": "SalesforceCommerceCloud_sfcc-sample-apps"}, "arguments": "($couponCode: String!)"}, {"type": "mutation", "name": "UpdateStatus", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Dispatch.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String!,$orderStatus:String!)"}, {"type": "query", "name": "SurpriseProductVariants", "content": "{\n    surpriseProductVariants {\n      id\n      isSaved\n      product {\n        id\n        slug\n        name\n        brand {\n          id\n          slug\n          name\n        }\n        images(size: Small) {\n          id\n          url\n        }\n      }\n    }\n    me {\n      id\n      bag {\n        id\n        productVariant {\n          id\n          product {\n            id\n          }\n        }\n        position\n        saved\n        status\n      }\n      customer {\n        id\n        membership {\n          id\n          plan {\n            id\n            itemCount\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/SurpriseMe.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "UpdateUser", "content": "{\n    updateUser(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}, "arguments": "($data: UpdateInput!)"}, {"type": "subscription", "name": "UserInfo", "content": "{\n    user {\n      name\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Subscription.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteWorkspace", "content": "{\n  deleteWorkspace(id: $id) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($id: uuid!)"}, {"type": "query", "name": "user", "content": "{\n        users(where: { id: $id }) {\n            email\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "($id: ID)"}, {"type": "query", "name": "integrante", "content": "{\n      integrante(id: $id) {\n        id\n        proyecto {\n          id\n          codigo\n        }\n        usuario {\n          id\n          firstname\n          lastname\n          fullname\n          email\n          username\n          employeeNumber\n          roles {\n            id\n            name\n          }\n        }\n        jefeProyecto\n        pagos {\n          id\n          integrante {\n            id\n            usuario {\n              id\n              fullname\n              employeeNumber\n            }\n          }\n          mes {\n            id\n            nombre\n          }\n          anno {\n            id\n            numero\n          }\n          horas\n          presencia\n          incidencia\n          relevancia\n          complejidad\n          gestion\n          vinculacion\n          calidad\n          significacion\n          cumplimiento\n          calculo\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "deleteMessage", "content": "{\n    deleteMessage(id: $id)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/message/deleteMessage.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "ChatsListQuery", "content": "{\n    chat(order_by:[{messages_aggregate:{max:{created_at:desc}}}]) {\n      ...chat\n      users(where:{user_id:{_neq:$userId}}) {\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatsListScreen/ChatsList.tsx", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($userId: Int!)"}, {"type": "query", "name": "user", "content": "{\n    user(slug: $id) {\n      id\n      credentials {\n        id\n        description\n        verified\n        isListed\n      }\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Dialog/Credentials.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($id: String)"}, {"type": "mutation", "name": "WithdrawOffer", "content": "{\n    withdrawOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String, $from: String)"}, {"type": "mutation", "name": "CreatePost", "content": "{\n    createPost(input: $input) {\n      id\n      title\n      body\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/serverless-components-gql/client/src/components/AddPost.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: CreatePostInput!)"}, {"type": "query", "name": "Identities", "content": "{\n    identityEvents {\n      id\n      identities(first: $first, after: $after, sort: $sort) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          endCursor\n        }\n        nodes {\n          id\n          fullName\n          owner {\n            id\n            owner {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Identities.js", "repo": "OriginProtocol_origin"}, "arguments": "($first: Int, $after: String, $sort: String)"}, {"type": "query", "name": "PAGINATION_QUERY", "content": "{\n    _allProductsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/Pagination.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "AllCountries", "content": "{\n    countries @client {\n      code\n      name\n      emoji\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/examples/bundling/tree-shaking/rollup-ac3-no-react/src/index.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "AllRoles", "content": "{\n    roles {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/queries/AllRoles.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "query", "name": "oasisTransactions", "content": "{\n  oasisTransactions(address: $address, startingPage: $startingPage, pageSize: $pageSize) {\n    page\n    limit\n    data {\n      hash\n      fee\n      gas\n      gas_price\n      height\n      method\n      date\n      sender\n      data {\n        ... on OasisBurnEvent {\n          type\n          owner\n          tokens\n        }\n        ... on OasisTransferEvent {\n          type\n          from\n          to\n          tokens\n        }\n        ... on OasisEscrowAddEvent {\n          type\n          to\n          tokens\n        }\n        ... on OasisEscrowTakeEvent {\n          type\n          from\n          to\n          tokens\n        }\n        ... on OasisEscrowReclaimEvent {\n          type\n          from\n          shares\n        }\n        ... on OasisRegisterEntityEvent {\n          type\n          id\n          nodes\n          allow_entity_signed_nodes\n        }\n        ... on OasisRegisterNodeEvent {\n          type\n          id\n          entity_id\n          expiration\n        }\n        ... on OasisUnfreezeNodeEvent {\n          type\n          id\n        }\n        ... on OasisRegisterRuntimeEvent {\n          type\n          id\n          version\n        }\n        ... on OasisRateEvent {\n          type\n          start\n          rate\n        }\n        ... on OasisBoundEvent {\n          type\n          start\n          rate_min\n          rate_max\n        }\n        ... on OasisAmendCommissionScheduleEvent {\n          type\n          rates\n          bounds\n        }\n        ... on OasisUnknownEvent {\n          type\n          method_name\n        }\n      }\n    }\n    moreResultsExist\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($address: String!, $startingPage: Float, $pageSize: Float)"}, {"type": "mutation", "name": "meetingLinkAttachment", "content": "{\n  meeting_LinkAttachment(meetingId: $meetingId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n      name\n      mimeType\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($meetingId: ID!, $attachmentId: ID!)"}, {"type": "query", "name": "Recommendation", "content": "{\n\t\tjobByName(name: $name) {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "($name: String!)"}, {"type": "mutation", "name": "AddReplyMessage", "content": "{\n    addReplyMessage(input: $input) {\n      result {\n        id\n        content\n        author {\n          photo {\n            url\n          }\n          personalInformation {\n            firstName\n            lastName\n          }\n        }\n      }\n      errors {\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}, "arguments": "($input: AddReplyMessageInput!)"}, {"type": "query", "name": "Coupons", "content": "{\n        coupons {\n          _id\n          code\n          discount\n          enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(cursor: $cursor) {\n          cursor\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/api.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($cursor: Int)"}, {"type": "query", "name": "Book", "content": "{\n        book(isbn: $isbn) {\n          title\n          isbn\n          author {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/entityStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($isbn: string)"}, {"type": "query", "name": "getCoupons", "content": "{\n    coupons(status: $status, searchBy: $searchBy) {\n      id\n      title\n      code\n      number_of_used_coupon\n      number_of_coupon\n      expiration_date\n      creation_date\n      status\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CampaingForm/CampaingForm.tsx", "repo": "mdhafiz_PickBazar"}, "arguments": "($status: String, $searchBy: String)"}, {"type": "query", "name": "filteredServiceClassesCounts", "content": "{\n    filteredClassesCounts @client {\n      local\n      notLocal\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceClassList/queries.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "repoFileUploadBegin", "content": "{\n    repoFileUploadBegin(repoId: $repoId, name: $name) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/Upload.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!, $name: String!)"}, {"type": "query", "name": "getEtherScanLink @client", "content": "{\n    network\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/Links/EtherScanLink.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "getVideoEmbed", "content": "{\n    embed(id: $id, embedType: $embedType) {\n      __typename\n      ... on YoutubeEmbed {\n        platform\n        id\n        createdAt\n        retrievedAt\n        userName\n        userUrl\n        thumbnail\n        title\n        userName\n        userProfileImageUrl\n        aspectRatio\n        durationMs\n        mediaId\n      }\n      ... on VimeoEmbed {\n        platform\n        id\n        createdAt\n        retrievedAt\n        userName\n        userUrl\n        thumbnail\n        title\n        userName\n        userProfileImageUrl\n        aspectRatio\n        src {\n          mp4\n          hls\n          thumbnail\n        }\n        durationMs\n        mediaId\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/editor/modules/embed/index.js", "repo": "republik_plattform"}, "arguments": "($id: ID!, $embedType: EmbedType!)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/client.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first, jedi: $jedi) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/index.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int, $jedi: Boolean)"}, {"type": "query", "name": "currentEvents", "content": "{\n    limitFarmings(\n      orderBy: endTime\n      orderDirection: desc\n      where: {\n        startTime_lte: $startTime\n        endTime_gt: $endTime\n        isDetached: false\n      }\n    ) {\n      id\n      rewardToken\n      bonusReward\n      bonusRewardToken\n      pool\n      startTime\n      endTime\n      reward\n      tier1Multiplier\n      tier2Multiplier\n      tier3Multiplier\n      tokenAmountForTier1\n      tokenAmountForTier2\n      tokenAmountForTier3\n      enterStartTime\n      multiplierToken\n      isDetached\n      minRangeLength\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($startTime: BigInt, $endTime: BigInt)"}, {"type": "mutation", "name": "sendTextMessage", "content": "{\n    sendTextMessage(conversationId: $conversationId, text: $text) {\n      id\n      text\n    }\n  }", "metadata": {"commit_hash": "27327705aff1ce63cab00c125c8b4f760df39789", "file": "client/graphql/mutations/sendTextMessage.js", "repo": "greatWall627_chatting-pro"}, "arguments": "($conversationId: ID!, $text: String!)"}, {"type": "mutation", "name": "agentGenerate", "content": "{\n                agentGenerate(passphrase: $passphrase) {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "(\n                $passphrase: String!\n            )"}, {"type": "query", "name": "Candles", "content": "{\n        candles (token: $token, exchange: $exchange, mode: $mode, symbol: $symbol, timeframe: $timeframe, start: $start, stop: $stop) {\n            time\n            open\n            high\n            low\n            close\n            volume\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}, "arguments": "($token: String, $exchange: String, $mode: String, $symbol: String, $timeframe: String, $start: Int, $stop: Int)"}, {"type": "mutation", "name": "SignUp", "content": "{\n    createPerson(\n      person: {\n        name: $name\n        user: $user\n        email: $email\n        eddsaPublicKey: $eddsaPublicKey\n        reflowPublicKey: $reflowPublicKey\n        ethereumAddress: $ethereumAddress\n        ecdhPublicKey: $ecdhPublicKey\n        bitcoinPublicKey: $bitcoinPublicKey\n      }\n    ) {\n      agent {\n        id\n        name\n        user\n        email\n        eddsaPublicKey\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "(\n    $name: String!\n    $user: String!\n    $email: String!\n    $eddsaPublicKey: String!\n    $reflowPublicKey: String!\n    $ethereumAddress: String!\n    $ecdhPublicKey: String!\n    $bitcoinPublicKey: String!\n  )"}, {"type": "query", "name": "GetUser", "content": "{\n        getUser(id: $id) {\n            id\n            cognitoId\n            tenantId\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletProfilePictureUploadURLResolver/src/index.js", "repo": "platelet-app_platelet"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getUsers", "content": "{\n    users(search: $search, hasPublicProfile: true) {\n      firstName\n      lastName\n      email\n      id\n      portrait\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/modules/link/ui.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($search: String!)"}, {"type": "mutation", "name": "sendVerificationEmail", "content": "{\n      sendVerificationEmail(username: $username)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($username: String!)"}, {"type": "query", "name": "AllAgents", "content": "{\n    allAgents {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/allAgentsQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "mutation", "name": "removeCommunityModerator", "content": "{\n    removeCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/removeCommunityModerator.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: RemoveCommunityModeratorInput!)"}, {"type": "mutation", "name": "createFunction", "content": "{\n    createFunction(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $name: String!\n    $namespace: String!\n    $params: FunctionMutationInput!\n  )"}, {"type": "mutation", "name": "meetingUnlinkAttachment", "content": "{\n  meeting_UnlinkAttachment(meetingId: $meetingId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n      name\n      mimeType\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($meetingId: ID!, $attachmentId: ID!)"}, {"type": "query", "name": "bulkGet", "content": "{\n        people @pdbBulkGet(docs: [{ id: \"1\", _rev: \"${rev1}\" }, { id: \"2\", _rev: \"${rev2}\" }]) {\n          results {\n            docs {\n              ok {\n                _id\n                _rev\n                name\n              }\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "0984105b45bada32b8c0b0ac70a6847570781221", "file": "src/resolvers/queries/bulkGet/bulkGet.spec.ts", "repo": "mattjennings_apollo-link-pouch"}}, {"type": "query", "name": "Specialists", "content": "{\n    specialists(filters: $filters) {\n      rows {\n        id\n        reviewCount\n        completedProjects\n        specialisation {\n          main {\n            id\n            name\n          }\n          additional {\n            id\n            name\n          }\n        }\n        description\n        interaction {\n          numberOfEmployees\n          formOfWork\n          name\n        }\n        profile {\n          photo {\n            url\n          }\n          personalInformation {\n            firstName\n            lastName\n          }\n          contactInformation {\n            phone {\n              number\n            }\n          }\n          address {\n            formatted\n          }\n          website\n        }\n        portfolio {\n          name\n          images {\n            id\n            url\n          }\n        }\n        rating\n        reviews {\n          id\n          rating\n          comment\n          customer {\n            personalInformation {\n              firstName\n              lastName\n            }\n            photo {\n              url\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/pages/specialists-detail-page/src/useData.ts", "repo": "atls_serenity"}, "arguments": "($filters: SpecialistsFilter)"}, {"type": "query", "name": "GetBooks", "content": "{\n    getAllBooks {\n      asin\n      title\n      author\n      pages\n    }\n  }", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/ejemplo03/bookshop-frontend/src/page/Books.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}}, {"type": "mutation", "name": "submitRepository", "content": "{\n          submitRepository(repoFullName: \"apollographql/apollo-client\") {\n            createdAt\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/Query.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "subscription", "name": "onRepoChange", "content": "{\n    repoChange(repoId: $repoId) {\n      mutation\n      repo {\n        ...EditPageRepo\n      }\n      commit {\n        ...SimpleCommit\n      }\n    }\n  }\n  ${fragments.EditPageRepo}\n  ${fragments.SimpleCommit}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/VersionControl/index.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!)"}, {"type": "mutation", "name": "UpdateLabelDefinition", "content": "{\n    updateLabelDefinition(in: $in) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/MetadataDefinitions/gql.js", "repo": "kyma-project_console"}, "arguments": "($in: LabelDefinitionInput!)"}, {"type": "mutation", "name": "saveChallenge", "content": "{\n    saveChallenge(input: $input) {\n      id\n      lessonId\n      title\n      description\n      order\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($input: ChallengeInput)"}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field\n        other: field\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout(wallet: $wallet) {\n      success\n      reason\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/Logout.js", "repo": "OriginProtocol_origin"}, "arguments": "($wallet: String!)"}, {"type": "mutation", "name": "userUnblock", "content": "{\n          userUnblock(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($input: UserUnblockInput!)"}, {"type": "mutation", "name": "deleteBook", "content": "{\n        deleteBook(id: $id) {\n            id\n            name\n        }\n    }", "metadata": {"commit_hash": "821bcde594f373c2d28fe847fe7d940be8ad22bb", "file": "graphql-crud/client/src/app/queries.ts", "repo": "thisdot_blog-demos"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Zones", "content": "{\n    zones{\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "FormsMetrics", "content": "{\n\t\tform(\n\t\t\tassetId: $assetId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tchannelId: $channelId\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tsubmissionsMetric {\n\t\t\t\t...geolocationFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${GEOLOCATION_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/assets/form/hocs/LocationsCard.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$assetId: String!\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)"}, {"type": "query", "name": "lastPoolHourData", "content": "{\n    poolHourDatas(\n      first: 1\n      where: { pool: $pool }\n      orderBy: periodStartUnix\n      orderDirection: desc\n    ) {\n      periodStartUnix\n      volumeUSD\n      tvlUSD\n      feesUSD\n      untrackedVolumeUSD\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($pool: String)"}, {"type": "query", "name": "SurviveStatus", "content": "{\n    crowdfunding(name: \"MARCH20\") {\n      goals {\n        people\n        memberships\n        money\n        description\n      }\n    }\n    revenueStats {\n      surplus(min: \"2019-11-30T23:00:00Z\", max: \"${END_DATE}\") {\n        total\n        updatedAt\n      }\n    }\n    membershipStats {\n      count\n      marchCount: countRange(\n        min: \"2020-02-29T23:00:00Z\"\n        max: \"2020-03-31T23:00:00Z\"\n      )\n      evolution(min: \"2019-12\", max: \"2020-03\") {\n        buckets {\n          key\n\n          gaining\n\n          ending\n          expired\n          cancelled\n\n          activeEndOfMonth\n\n          pending\n          pendingSubscriptionsOnly\n        }\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Crowdfunding/withSurviveStatus.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "associateUserAccountWithAccountAndAccountRole", "content": "{\n\t\tcreateAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress(\n\t\t\taccountRoleId: $accountRoleId\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $accountKey\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$emailAddress: String!\n\t\t$accountKey: String!\n\t\t$accountRoleId: Long!\n\t)"}, {"type": "mutation", "name": "AssignOrder", "content": "{\n    assignOrder(id:$id){\n      _id\n      rider{\n        _id\n      }\n    }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/screens/OrderDetail/OrderDetail.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "addTask", "content": "{\n    addTask(name: $name) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0440968a824f00cfbfc64b76f3e30250f1ef21b7", "file": "client/src/app/global-query.ts", "repo": "nicolad_graphql-mongodb-angular"}, "arguments": "($name: String!)"}, {"type": "query", "name": "health", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: \"dystopia-exchange/dystopia-v2\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}}, {"type": "query", "name": "GetProducts", "content": "{\n    service(id: $serviceID) {\n      id\n      gatewayAccounts {\n        products {\n          ...Product\n        }\n      }\n    }\n  }\n  ${ProductFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "($serviceID: ID!)"}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(input: { id: \"5\" }) {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "exportPropertiesToExcel", "content": "{\n        result: exportPropertiesToExcel(data: $data) { status, linkToFile }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/property/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: ExportPropertiesToExcelInput!)"}, {"type": "query", "name": "Streams", "content": "{\n    streams(first: 100, orderBy: timestamp, orderDirection: desc, where: { owner: $owner }) {\n      id\n      flow\n      owner\n      rawStream {\n        id\n        interval\n        payment\n        recipient\n        redemption {\n          id\n          recipientAmount\n          senderAmount\n        }\n        sender\n        startBlock\n        stopBlock\n        token {\n          id\n          decimals\n          name\n          symbol\n        }\n        txs {\n          id\n          block\n          event\n          timestamp\n        }\n        withdrawals {\n          id\n          amount\n        }\n      }\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "80918ace237654f5b6697aae541744d7ceb6dfa6", "file": "v0/dapp/src/apollo/queries.js", "repo": "sablier-labs_legacy-uis"}, "arguments": "($owner: String!)"}, {"type": "mutation", "name": "addOrganization", "content": "{\n    addOrganization(name: $name) {\n      organization {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "($name: String!)"}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "subscription", "name": "SubscribePaceOrder", "content": "{\n    subscribePlaceOrder(restaurant:$restaurant){\n      userId\n      origin\n      order{\n        _id\n        orderId\n        restaurant{\n          _id\n          name\n          image\n          address\n          location{coordinates}\n        }\n        deliveryAddress{\n          location{coordinates}\n          deliveryAddress\n          details\n          label\n        }\n        items{\n          _id\n          title\n          description\n          image\n          quantity\n          variation{\n            _id\n            title\n            price\n            discounted\n          }\n          addons{\n            _id\n            options{\n              _id\n              title\n              description\n              price\n            }\n            description\n            title\n            quantityMinimum\n            quantityMaximum\n          }\n          specialInstructions\n          isActive\n          createdAt\n          updatedAt\n        }\n        user{\n          _id\n          name\n          phone\n          email\n        }\n        paymentMethod\n        paidAmount\n        orderAmount\n        orderStatus\n        status\n        paymentStatus\n        reason\n        isActive\n        createdAt\n        deliveryCharges\n        rider{\n          _id\n          name\n          username\n          available\n        }\n    }\n  }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Order/OrdersData.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($restaurant:String!)"}, {"type": "mutation", "name": "VerifyEmail", "content": "{\n    personVerifyEmailVerification(token: $token)\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "pages/email/verify/[token].tsx", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($token: String!)"}, {"type": "query", "name": "search", "content": "{\n    search(queryString: $queryString, type: $type) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on Community {\n              ...communityInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/admin/src/api/queries.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($queryString: String!, $type: SearchType!)"}, {"type": "query", "name": "Zones", "content": "{\n    zones{\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "Simple", "content": "{\n        network\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "votePost", "content": "{\n    votePost(id: $id) {\n      id\n      votes\n      __typename\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/with-apollo/components/PostUpvoter.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: String!)"}, {"type": "query", "name": "GetProductPayment", "content": "{\n    productPayment(id: $id) {\n      ...ProductPayment\n    }\n  }\n  ${ProductPaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/products/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "searchProduct", "content": "{\n    searchProducts(productName: $query, first: 6, skip: 0) {\n      edges {\n        node {\n          id\n          name\n          imageUrl\n          displayPrice\n          brand {\n            id\n            name\n          }\n          unavailableOptionsValues {\n            id\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/search/query.gql.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($query: String!)"}, {"type": "mutation", "name": "signInUser", "content": "{\n    SignIn(input: { email: $email, password: $password }) {\n      user {\n        ...authUserData\n      }\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/LoginContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "GetProductPayment", "content": "{\n    productPayment(id: $id) {\n      ...ProductPayment\n    }\n  }\n  ${ProductPaymentFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/products/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "AllListings", "content": "{\n    marketplace {\n      listings(first: $first, after: $after, sort: $sort, search: $search) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          endCursor\n        }\n        nodes {\n          ...basicListingFields\n        }\n      }\n    }\n  }\n  ${fragments.Listing.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/AllListings.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $first: Int\n    $after: String\n    $sort: String\n    $search: String\n  )"}, {"type": "query", "name": "GetGlossary", "content": "{\n      getGlossary(nodeUri: $nodeUri) {\n        nodeUri\n        label\n        readme\n        created\n        owner\n        status\n        path\n        admin\n        userRoleForGlossary\n        stats {\n          categories\n          terms\n          associations\n        }\n        associations {\n          count\n          page\n          pages\n          hasNext\n          hasPrevious\n          nodes {\n            __typename\n            target {\n              ... on Dataset {\n                label\n              }\n              ... on DatasetTable {\n                label\n              }\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/getGlossary.js", "repo": "awslabs_aws-dataall"}, "arguments": "($nodeUri: String!)"}, {"type": "subscription", "name": "SubscribePaceOrder", "content": "{\n  subscribePlaceOrder{\n      order{\n        _id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      order_amount\n      paid_amount\n      payment_method\n      order_id\n      user{\n        _id\n        name\n        email\n        phone\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n          description\n          img_url\n        }\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            price\n          }\n        }\n        quantity\n      }\n      reason\n      status\n      payment_status\n      order_status\n      createdAt\n      review{\n        _id\n        rating\n        description\n      }\n      rider{\n        _id\n        name\n      }\n    }\n    origin\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Order/OrderData.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "createGoal", "content": "{\n    createGoal(name: $name, resolutionId: $resolutionId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/graphql-list/imports/ui/GoalForm.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($name: String!, $resolutionId: String!)"}, {"type": "query", "name": "WatchedLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "author", "content": "{\n          author {\n            name\n            stats {\n              totalPosts\n              postsToday @client\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "proyectos", "content": "{\n    proyectos(where: $where) {\n      id\n      codigo\n      nombre\n      inicia\n      finaliza\n      area {\n        id\n        nombre\n      }\n      tipo {\n        id\n        nombre\n      }\n      estado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+profesor/project/list/project-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: ProyectoWhereInput)"}, {"type": "query", "name": "GetPosts", "content": "{\n    articles{\n        id,\n        title,\n        description,\n        author{\n          name\n        },\n        categories{\n          name\n        },\n        image{\n            url\n        },\n        created_at,\n        slug\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/MiddlePostList.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "query", "name": "Products", "content": "{\n  products {\n    _id\n    name\n    quantity\n    uom\n    refrigerated\n    expires\n    purchaseDate\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "query", "name": "orderStatuses", "content": "{\n      me {\n        id\n        cart {\n          id\n        }\n        orders(orderBy: createdAt_ASC) {\n          id\n          createdAt\n          orderStatus\n        }\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/payment/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "Mutation", "content": "{\n    signup(name: $name, username: $username, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/pages/register.js", "repo": "FrontPhoenix_phoenix-finance"}, "arguments": "($name: String!, $username: String!, $password: String!)"}, {"type": "mutation", "name": "subToUser", "content": "{\n    subscribe(objectId: $userId, type: User, filters: $filters) {\n      ...subInfo\n    }\n  }\n  ${subInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}, "arguments": "($userId: ID!, $filters: [EventObjectType!])"}, {"type": "mutation", "name": "addPhoneToOrganization", "content": "{\n  phoneNumberMergeToOrganization(organizationId: $organizationId, input: $input) {\n    ...PhoneNumber\n    label\n  }\n}\n    ${PhoneNumberFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!, $input: PhoneNumberInput!)"}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        field\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "loadMoreCommunityMembers", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityMembers\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityMembersFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunityMembers.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $id: ID\n    $after: String\n    $first: Int\n    $filter: MembersFilter\n  )"}, {"type": "query", "name": "AllCountries", "content": "{\n    countries {\n      code\n      name\n      emoji\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "examples/bundling/tree-shaking/rollup-ac2/src/App.js", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Option/List/List.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "Register", "content": "{\n    register(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split"}, "arguments": "($data: RegisterInput!)"}, {"type": "mutation", "name": "ApplePayCheckout", "content": "{\n    applePayCheckout(planID: $planID, token: $token, tokenType: $tokenType, couponID: $couponID, shipping: $shipping)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ChoosePlanPane/ChoosePlanPane.tsx", "repo": "seasons_harvest"}, "arguments": "(\n    $planID: String!\n    $token: StripeToken!\n    $tokenType: String\n    $couponID: String\n    $shipping: JSON\n  )"}, {"type": "mutation", "name": "UnsuspendUser", "content": "{\n    unsuspendUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Dialog/DiscussionSuspensions.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "deleteProject", "content": "{\n        deleteProject(projectId: $projectId, teamId: $teamId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteProject.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($projectId: ID!, $teamId: ID!)"}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n          }\n        }\n      }\n\n      fragment friendFields on User {\n        firstName\n        lastName\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Candles", "content": "{\n        candles (token: $token, exchange: $exchange, mode: $mode, symbol: $symbol, timeframe: $timeframe, start: $start, stop: $stop) {\n            time\n            open\n            high\n            low\n            close\n            volume\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}, "arguments": "($token: String, $exchange: String, $mode: String, $symbol: String, $timeframe: String, $start: Int, $stop: Int)"}, {"type": "mutation", "name": "UpdateLabelDefinition", "content": "{\n    updateLabelDefinition(in: $in) {\n      key\n      schema\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/MetadataDefinitions/gql.js", "repo": "kyma-project_console"}, "arguments": "($in: LabelDefinitionInput!)"}, {"type": "query", "name": "loadMoreCommunityMembers", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityMembers\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityMembersFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunityMembers.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $id: ID\n    $after: String\n    $first: Int\n    $filter: MembersFilter\n  )"}, {"type": "query", "name": "primeQuery", "content": "{\n        luke: people_one(id: 1) {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "$", "content": "{this.queryName()}${this.declareArgumentVariables()} {\n          ${this.queryName()}${this.argumentVariables()} {\n            ${this.scalarFields().map((field) => field.name).join(', ')}\n          }\n        }", "metadata": {"commit_hash": "5c2bcc5ed8229b1da33546fa5871153145a110e6", "file": "src/app/graphql_builder.ts", "repo": "launchscout_graphql-admin"}}, {"type": "query", "name": "getAllUsers", "content": "{\n    getAllUsers(role: $role, search: $search){\n      _id\n      email\n      profile{\n        name \n        image\n        carrierType\n        neighborhood\n        vehical {\n          vehicalTypeId\n          brand\n          color\n          model\n          plateNumber\n          valuePerKm\n          status\n        }\n      }\n      username\n      roles\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/queries.js", "repo": "whitehorse21_Vehicle"}, "arguments": "($role: String, $search: String)"}, {"type": "query", "name": "Simple", "content": "{\n        user @client\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        field @client\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "resetPassword", "content": "{\n        resetPassword(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetDashboardTotal", "content": "{\n    getDashboardTotal(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      totalOrders\n      totalSales\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Dashboard.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($startingDate: String, $endingDate: String,$restaurant:String!)"}, {"type": "query", "name": "topPools", "content": "{\n    asToken0: pools(first: 200, orderBy: totalValueLockedUSD, orderDirection: desc, where: { token0: $address }) {\n      id\n    }\n    asToken1: pools(first: 200, orderBy: totalValueLockedUSD, orderDirection: desc, where: { token1: $address }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/tokens/poolsForToken.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($address: Bytes!)"}, {"type": "mutation", "name": "editChannel", "content": "{\n    editChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/editChannel.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: EditChannelInput!)"}, {"type": "subscription", "name": "OnUpdateTask", "content": "{\n        onUpdateTask(filter: {\n          or: [\n            { priority: { lt: 5 } }\n            { severity: { lt: 5 } }\n          ]\n        }) {\n          id\n          title\n          description\n          priority\n          severity\n          owner\n          readOwners\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "editUser", "content": "{\n    editUser(input: $input) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/user/editUser.js", "repo": "withspectrum_spectrum"}, "arguments": "($input: EditUserInput!)"}, {"type": "query", "name": "Candles", "content": "{\n        candles (token: $token, exchange: $exchange, mode: $mode, symbol: $symbol, timeframe: $timeframe, start: $start, stop: $stop) {\n            time\n            open\n            high\n            low\n            close\n            volume\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}, "arguments": "($token: String, $exchange: String, $mode: String, $symbol: String, $timeframe: String, $start: Int, $stop: Int)"}, {"type": "mutation", "name": "updatePatronKind", "content": "{\n        updatePatronKind(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/patronKind.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($input: PatronKindUpdateInput!)"}, {"type": "query", "name": "TodoQuery", "content": "{\n          todos {\n            totalCount\n            extraMetaData\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "onMessagingStatusChange", "content": "{\n    messagingStatusChange {\n      newStatus\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/MessagingStatusChangeSubscription.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "reInviteOrganizationEmployee", "content": "{\n        obj: reInviteOrganizationEmployee(data: $data) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: ReInviteOrganizationEmployeeInput!)"}, {"type": "mutation", "name": "UpdateCommentMutation", "content": "{\n    updateComment(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateCommentMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($input: UpdateCommentInput!)"}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "stakeHistory", "content": "{\n    factories {\n      currentStakedAmount\n      earnedForAllTime\n      ALGBbalance\n      xALGBtotalSupply\n    }\n    stakes(where: { id: $id }) {\n      stakedALGBAmount\n      xALGBAmount\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($id: ID)"}, {"type": "query", "name": "player", "content": "{\n    player(id: $user) {\n      id\n      consolidatedBalance\n      latestBalance\n      firstDepositDrawId\n      latestDrawId\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}, "arguments": "($user: String!)"}, {"type": "mutation", "name": "register", "content": "{\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/pages/Login.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}, "arguments": "($username: String!, $password: String!)"}, {"type": "query", "name": "getAllOrders", "content": "{\n  getAllOrders {\n    id\n    userId {\n      firstName\n      id\n      lastName\n    }\n    productId {\n      name\n      id\n      image\n      price\n      uuid\n    }\n    quantity\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "mutation", "name": "$", "content": "{this.queryName()}${this.declareArgumentVariables()} {\n          ${this.queryName()}${this.argumentVariables()} {\n            ${this.scalarFields().map((field) => field.name).join(', ')}\n          }\n        }", "metadata": {"commit_hash": "5c2bcc5ed8229b1da33546fa5871153145a110e6", "file": "src/app/graphql_builder.ts", "repo": "launchscout_graphql-admin"}}, {"type": "query", "name": "tokenDayDatas", "content": "{\n    tokenDayDatas(\n      first: 1000\n      skip: $skip\n      orderBy: date\n      orderDirection: asc\n      where: { token: $tokenAddr }\n    ) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}, "arguments": "($tokenAddr: String!, $skip: Int!)"}, {"type": "mutation", "name": "upsertProduct", "content": "{\n    upsertProduct(\n      name: $name\n      description: $description\n      imageUrl: $imageUrl\n      brandId: $brandId\n      categoryId: $categoryId\n      available: $available\n      optionIds: $optionIds\n      variants: $variants\n      productId: $productId\n      attributesIds: $attributesIds\n      unavailableOptionsValuesIds: $unavailableOptionsValuesIds\n      displayPrice: $displayPrice\n    ) {\n      id\n      name\n      description\n      available\n      displayPrice\n      imageUrl\n      brand {\n        id\n        name\n      }\n      category {\n        id\n        name\n      }\n      options {\n        id\n        name\n        values {\n          id\n          name\n        }\n      }\n      variants(where: { deletedAt: $nullValue }) {\n        id\n        price\n        available\n        selectedOptions {\n          id\n          option {\n            id\n            name\n          }\n          value {\n            id\n            name\n          }\n        }\n      }\n      displayPrice\n      attributes {\n        id\n        value\n        category {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "(\n    $name: String!\n    $description: String\n    $brandId: ID!\n    $categoryId: ID!\n    $available: Boolean!\n    $optionIds: [ID!]!\n    $variants: [ProductVariantInput!]!\n    $productId: ID,\n    $attributesIds: [ID!]!\n    $unavailableOptionsValuesIds: [ID!]!\n    $displayPrice: Float!\n    $imageUrl: String,\n    $nullValue: DateTime\n  )"}, {"type": "mutation", "name": "CREATE_PRODUCT_MUTATION", "content": "{\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/26/CreateProduct.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    # Which variables are getting passed in? And What types are they\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  )"}, {"type": "mutation", "name": "UpdateUserPayment", "content": "{\n    updateUserPayment(input: $input) {\n      firstname\n      lastname\n      patronymic\n      number\n      cvv\n      month\n      year\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}, "arguments": "($input: UpdatePaymentInput!)"}, {"type": "query", "name": "UserDetails", "content": "{\n          name @client\n          isLoggedIn @client(always: true)\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Orders", "content": "{\n  orders(offset:$offset){\n    _id\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n    }\n    items{\n      _id\n      title\n      food\n      description\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n    }\n    user{\n      _id\n      name\n      phone\n    }\n    rider{\n      _id\n      name\n    }\n    review{\n      _id\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    tipping\n    taxationAmount\n    createdAt\n    completionTime\n    orderDate\n    expectedTime\n    isPickedUp\n    deliveryCharges\n    acceptedAt\n    pickedAt\n    deliveredAt\n    cancelledAt\n    assignedAt\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/Stripe/Stripe.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($offset:Int)"}, {"type": "query", "name": "RepoLabels", "content": "{\n  repository(owner: $owner, name: $repo) {\n    labels(first: 20, after: $cursor) {\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      nodes {\n        name\n        description\n        issues(states: OPEN) {\n          totalCount\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "5358526a9bb7c3ab826658a613e5b487b064a682", "file": "src/server/apis/issues.ts", "repo": "PolymerLabs_project-health"}, "arguments": "($owner: String!, $repo: String!, $cursor: String)"}, {"type": "query", "name": "test", "content": "{\n    user {\n      id\n    }\n  }", "metadata": {"commit_hash": "ac847cb1bcda5dce599e5cf206cfb8928e850732", "file": "services/site/tests/lib/apollo-client/create-error-link.spec.ts", "repo": "a11yphant_a11yphant"}}, {"type": "query", "name": "Chat", "content": "{\n  match(id: $match_id) {\n    id\n    chat {\n      audience\n      origination\n      timestamp\n      message\n      player {\n        color_id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Chat.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($match_id: Int!)"}, {"type": "query", "name": "getDiscussionTreasuryProposals", "content": "{\n        onchain_links(where: {onchain_treasury_proposal_id: {_is_null: false}}){\n            ...discussionTreasuryProposal\n        }\n    }\n    fragment discussionTreasuryProposal on onchain_links {\n        id\n        onchain_treasury_proposal_id\n        proposer_address\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/sync/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "createShop", "content": "{\n    createShop(input: {name: $name}) {\n      ...ShopFields\n    }\n  }\n\n  ${ShopFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/createShop.ts", "repo": "aerogear_offix-react-native-example"}, "arguments": "($id: ID!, $name: String!)"}, {"type": "mutation", "name": "UpdateRace", "content": "{\n      updateRace(input: $input, condition: $condition) {\n        id\n      }\n    }", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}, "arguments": "(\n      $input: UpdateRaceInput!\n      $condition: ModelRaceConditionInput\n    )"}, {"type": "mutation", "name": "setIsActiveAccount", "content": "{\n        setIsActiveAccount(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/employee.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!, $isActive: Boolean!)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}, "arguments": "($data: LoginInput!)"}, {"type": "subscription", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/fragments.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "service", "content": "{\n    service(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($name: String!, $namespace: String!)"}, {"type": "query", "name": "TouchpointMetrics", "content": "{\n\t\tpage(\n\t\t\tchannelId: $channelId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tassetTitle\n\t\t\tavgTimeOnPageMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\tbounceRateMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\tentrancesMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\texitRateMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\tvisitorsMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\tviewsMetric {\n\t\t\t\t...browserFragment\n\t\t\t\t...deviceFragment\n\t\t\t\t...metricFragment\n\t\t\t\t...geolocationFragment\n\n\t\t\t\tpreviousValue\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n\n\t${BROWSER_FRAGMENT}\n\t${DEVICE_FRAGMENT}\n\t${GEOLOCATION_FRAGMENT}\n\t${METRIC_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/TouchpointMetricsQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)"}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName) {\n        comments {\n          ...authorFields\n        }\n      }\n    }\n\n    fragment authorFields on User {\n      postedBy {\n        login\n        html_url\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($repoName: String!)"}, {"type": "query", "name": "secret", "content": "{\n    secret(namespace: $namespace, name: $name) {\n      data\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!, $name: String!)"}, {"type": "mutation", "name": "updateContribution", "content": "{\n    contribute: createEconomicEvent(\n      event: {\n        action: \"work\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceConformsTo: $conformsTo\n        hasPointInTime: $now\n        effortQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "(\n    $process: ID!\n    $agent: ID!\n    $resource: ID!\n    $quantity: IMeasure!\n    $now: DateTime!\n    $metadata: JSONObject!\n    $conformsTo: ID!\n    $unitOne: ID!\n  )"}, {"type": "subscription", "name": "subscribeToNewNotifications", "content": "{\n    notificationAdded {\n      ...notificationInfo\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "editChannel", "content": "{\n    editChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/channel/editChannel.js", "repo": "withspectrum_spectrum"}, "arguments": "($input: EditChannelInput!)"}, {"type": "mutation", "name": "recomissionTool", "content": "{\n    recomissionTool(tool_id: $tool_id, recomissioned_status: $status) {\n      status\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}, "arguments": "($tool_id: ID!, $status: InServiceToolStatus!)"}, {"type": "query", "name": "contents", "content": "{\n    contents(\n      where: { molochAddress: $molochAddress }\n      first: 1000\n      orderBy: createdAt\n      orderDirection: desc\n    ) {\n      id\n      createdAt\n      transactionHash\n      title\n      molochAddress\n      memberAddress\n      content\n      contentType\n      location\n      ratified\n      description\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/postQueries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($molochAddress: String!)"}, {"type": "subscription", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "GET_TREES", "content": "{\n        trees {\n            list {\n                ...TreeLight\n            }\n        }\n    }\n    ${TreeLightFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "HandleInvitation", "content": "{\n    handleInvitation(\n      action: $action\n      articleId: $articleId\n      currentUserId: $currentUserId\n    )\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/handleInvitation.js", "repo": "PREreview_PREreview-2"}, "arguments": "(\n    $action: String!\n    $articleId: ID!\n    $currentUserId: ID!\n  )"}, {"type": "mutation", "name": "UpdateListing", "content": "{\n    updateListing(\n      listingID: $listingID\n      additionalDeposit: $additionalDeposit\n      from: $from\n      data: $data\n      autoApprove: $autoApprove\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $listingID: String!\n    $additionalDeposit: String\n    $from: String\n    $data: NewListingInput\n    $autoApprove: Boolean\n  )"}, {"type": "query", "name": "MyFeed", "content": "{\n          feed {\n            ...Item\n          }\n          allFeeds: feed {\n            ...Item\n          }\n        }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/plugins/typescript/vue-urql/tests/urql.spec.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "GetPosts", "content": "{\n    articles{\n        id,\n        title,\n        description,\n        author{\n          name\n        },\n        categories{\n          name\n        },\n        image{\n            url\n        },\n        created_at,\n        slug\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/PostList.js", "repo": "ngocphucnguyen256_news-cms-frontend"}}, {"type": "mutation", "name": "submitComment", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "query", "name": "runtimeFriends", "content": "{\n                runtimeFriends\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "CreateOptions", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Option/Option.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($optionInput:[OptionInput])"}, {"type": "mutation", "name": "ClearError", "content": "{\n        clearError @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "deleteTask", "content": "{\n        deleteTask(taskId: $taskId, listId: $listId, moduleId: $moduleId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteTask.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($taskId: ID!, $listId: ID!, $moduleId: ID!)"}, {"type": "mutation", "name": "enableCommunityWatercooler", "content": "{\n    enableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/enableCommunityWatercooler.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $input: EnableCommunityWatercoolerInput!\n  )"}, {"type": "query", "name": "CockpitStatus", "content": "{\n    membershipStats {\n      evolution(min: \"2018-01\", max: $max) {\n        updatedAt\n        buckets {\n          key\n          active\n          overdue\n          ended\n          pending\n          pendingSubscriptionsOnly\n          gaining\n        }\n      }\n      lastSeen(min: $prev, max: $max) {\n        buckets {\n          key\n          users\n        }\n      }\n    }\n    discussionsStats {\n      evolution(min: \"2018-01\", max: $max) {\n        buckets {\n          key\n          users\n        }\n      }\n    }\n    collectionsStats {\n      progress: evolution(name: \"progress\", min: \"2019-03\", max: $max) {\n        buckets {\n          key\n          users\n        }\n      }\n      bookmarks: evolution(name: \"bookmarks\", min: \"2019-01\", max: $max) {\n        buckets {\n          key\n          users\n        }\n      }\n    }\n    actionMe: me(accessToken: $accessToken) {\n      id\n      ...SurviveActionsOnUser\n    }\n  }\n  ${userSurviveActionsFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/pages/cockpit.js", "repo": "republik_plattform"}, "arguments": "(\n    $prev: YearMonthDate!\n    $max: YearMonthDate!\n    $accessToken: ID\n  )"}, {"type": "mutation", "name": "toggleLike", "content": "{\n    toggleLike(id: $id)\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/tweet/index.js", "repo": "manikandanraji_twitter-clone-frontend"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getLatestCommit", "content": "{\n    repo(id: $repoId) {\n      id\n      latestCommit {\n        ...SimpleCommit\n        document {\n          id\n          type\n        }\n      }\n    }\n  }\n  ${fragments.SimpleCommit}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Edit/enhancers.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!)"}, {"type": "mutation", "name": "editUserPrivate", "content": "{\n            editUserPrivate(username: $username, firstName: $firstName, lastName: $lastName, email: $email , genre: $genre, role: $role, profilePicture: $profilePicture, userToken: $userToken){\n                user{\n                    firstName\n                    lastName\n                    profilePicture\n                    email\n                    roles{\n                        role\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $firstName: String!, $lastName: String!, $email: String!, $genre: String!, $role: String!, $profilePicture: String, $userToken: String!)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/queries/observableQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "UpdateListing", "content": "{\n    updateListing(\n      listingID: $listingID\n      from: $from\n      additionalDeposit: $additionalDeposit\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/UpdateListing.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $listingID: ID!\n    $from: String!\n    $additionalDeposit: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )"}, {"type": "query", "name": "ReservationHistoryTab_Query", "content": "{\n    me {\n      id\n      customer {\n        ...ReservationHistoryTabFragment_Customer\n      }\n    }\n  }\n  ${ReservationHistoryTabFragment_Customer}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/SavedAndHistory/queries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "UpdateProfile", "content": "{\n    updateProfile(profile: $profile)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/updateProfile.ts", "repo": "hc-institute-japan_Kizuna-Redux"}, "arguments": "($profile: ProfileInput)"}, {"type": "query", "name": "Scenes", "content": "{\n    scene {\n      data {\n        attributes {\n          Link {\n            TriggerSetter\n            TriggerGetter\n            TriggerDelete\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Scene.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "RemoveUserCharacter", "content": "{\n    removeUserCharacter(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "submitRepository", "content": "{\n          submitRepository(repoFullName: \"apollographql/apollo-client\") {\n            createdAt\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Query.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GetResources", "content": "{\n  config(appID: $appId, resolve: true) {\n    ...ServiceResources\n  }\n}\n    ${ServiceResourcesFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!)"}, {"type": "query", "name": "births", "content": "{\n    births(where: { owner: $user }) {\n      id\n      kittyId\n      sireId\n      matronId\n      owner\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}, "arguments": "($user: String!)"}, {"type": "mutation", "name": "repoArchive", "content": "{\n    archive(repoIds: [$repoId]) {\n      nodes {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Repo/Archive.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!)"}, {"type": "mutation", "name": "subToUser", "content": "{\n    subscribe(objectId: $userId, type: User, filters: $filters) {\n      ...subInfo\n    }\n  }\n  ${subInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}, "arguments": "($userId: ID!, $filters: [EventObjectType!])"}, {"type": "mutation", "name": "GenerateAirbnbCode", "content": "{\n    generateAirbnbCode(identity: $identity, airbnbUserId: $airbnbUserId) {\n      success\n      reason\n      code\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GenerateAirbnbCode.js", "repo": "OriginProtocol_origin"}, "arguments": "($identity: String!, $airbnbUserId: String!)"}, {"type": "mutation", "name": "WithdrawOffer", "content": "{\n    withdrawOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String, $from: String)"}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int, $second: String)"}, {"type": "mutation", "name": "deleteSagemakerNotebook", "content": "{\n      deleteSagemakerNotebook(\n        notebookUri: $notebookUri\n        deleteFromAWS: $deleteFromAWS\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/deleteSagemakerNotebook.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $notebookUri: String!\n      $deleteFromAWS: Boolean\n    )"}, {"type": "query", "name": "cliLoginById", "content": "{\n        cliLoginById(id: $id) {\n          encryptedAccessToken\n          encryptedIdToken\n          encryptedRefreshToken\n          encryptedKey\n          encryptedIv\n        }\n      }", "metadata": {"commit_hash": "36da03c2d0c5ebd623bdb271c9114b6dbed32459", "file": "lib/plugins/login/lib/getCliLoginById.js", "repo": "alibaba-archive_serverless"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "removeAddonsConfigurationURLs", "content": "{\n    removeAddonsConfigurationURLs(\n      name: $name\n      namespace: $namespace\n      urls: $urls\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}, "arguments": "(\n    $name: String!\n    $namespace: String!\n    $urls: [String!]!\n  )"}, {"type": "mutation", "name": "cancelName", "content": "{\n  update_names(where: {_id: {_eq: $_id }}, \n  _set: {\n    edit: false\n  }) \n  {\n    affected_rows\n  }\n\n    }", "metadata": {"commit_hash": "07231cecbda91b36f6d8088c9dd2e7f2fa54f365", "file": "graphdemo/src/constants/graphql.js", "repo": "malgamves_firebase2graphql-demo"}, "arguments": "($edit: Boolean!, $_id: String!)"}, {"type": "query", "name": "getTeam", "content": "{\n    findTeam(input: { teamID: $teamID }) {\n      id\n      createdAt\n      name\n      members {\n        id\n        fullName\n        username\n        role {\n          code\n          name\n        }\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n        owned {\n          teams {\n            id\n            name\n          }\n          projects {\n            id\n            name\n          }\n        }\n        member {\n          teams {\n            id\n            name\n          }\n          projects {\n            id\n            name\n          }\n        }\n      }\n    }\n    projects(input: { teamID: $teamID }) {\n      id\n      name\n      team {\n        id\n        name\n      }\n    }\n    users {\n      id\n      email\n      fullName\n      username\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      owned {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n      member {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/getTeam.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($teamID: UUID!)"}, {"type": "query", "name": "Restaurants", "content": "{\n  restaurants{\n    _id\n    name\n    image\n    orderPrefix\n    slug\n    address\n    deliveryTime\n    minimumOrder\n    isActive\n    commissionRate\n    tax\n    owner{\n      _id\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/RestaurantList.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "pushService", "content": "{\n  pushService(base64Service:$base64Service, releaseNotes: $notes, description: $description){\n    data\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($base64Service: String!, $notes: [String]!, $description: String!)"}, {"type": "query", "name": "user", "content": "{\n    user(username: $username) {\n      ...userInfo\n      ...userCommunities\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunitiesFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "admin/src/api/queries.js", "repo": "DoBestMan_spectrum"}, "arguments": "($username: String)"}, {"type": "query", "name": "AllTodos", "content": "{\n    todos: allTodos {\n      id\n      title\n      completed\n    }\n  }", "metadata": {"commit_hash": "1692f891caba032a215afa5fd33ba9be063f9162", "file": "src/apollo/todos.js", "repo": "Andryuha-Nikolaev_apollo-graphql-todo"}}, {"type": "query", "name": "userDatasetIds", "content": "{\n  getUserDataset(input: $input) {\n    datasets {\n      datasetGroupId\n      updatedAt\n      title\n    }\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/dataset-gql.js", "repo": "Duke-MatSci_materialsmine"}, "arguments": "($input: datasetStatusInput)"}, {"type": "subscription", "name": "subscribeToUpdatedCommunities", "content": "{\n    communityUpdated(communityIds: $communityIds) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/subscriptions/index.js", "repo": "DoBestMan_spectrum"}, "arguments": "($communityIds: [ID!])"}, {"type": "query", "name": "alcances", "content": "{\n      alcances {\n        id\n        nombre\n        valor\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "block", "content": "{\n    blocks(\n      first: 1\n      where: { timestamp_gt: $timestampMin, timestamp_lt: $timestampMax }\n      orderBy: timestamp\n      orderDirection: asc\n    ) {\n      number\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/utils/getBockNumDaysAgo.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($timestampMin: Int, $timestampMax: Int)"}, {"type": "query", "name": "me", "content": "{\n    me {\n      id\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/auth.js", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "AddToCartClient", "content": "{\n    addToCartClient(id: $id, title: $title, price: $price) @client\n  }", "metadata": {"commit_hash": "5dd0189183c913410137e8fc9b14e96fcac09baf", "file": "client/src/screens/Home/Home.js", "repo": "vctormb_apollo-shopping-cart-caching"}, "arguments": "($id: ID!, $title: String!, $price: Float!)"}, {"type": "query", "name": "cancelledOrders", "content": "{\n          cancelEvents: cancelledOrders(\n            first: $first\n            skip: $skip\n            where: $where\n          ) {\n            id\n            maker\n            feeRecipient\n            makerAssetDataV2\n            takerAssetDataV2\n            senderV2\n          }\n        }", "metadata": {"commit_hash": "5853ea4e34d63a7422bdbc89e48cb8f217ad27a6", "file": "src/client.ts", "repo": "michaelhly_0x-exchange-events"}, "arguments": "(\n          $first: Int!\n          $skip: Int\n          $where: CancelledOrder_filter\n        )"}, {"type": "subscription", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "fetch_todos", "content": "{\n    todos(\n      where: { is_public: { _eq: true }, id: { _gt: $todoId } }\n      order_by: { created_at: desc }\n      limit: $todoLimit\n    ) {\n      ...TodoFragment\n      user {\n        ...UserFragment\n      }\n    }\n  }\n  ${TODO_FRAGMENT}\n  ${USER_FRAGMENT}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "hasura_sample-apps"}, "arguments": "($todoLimit: Int, $todoId: Int)"}, {"type": "query", "name": "getSearchResults", "content": "{\n    search(\n      first: 5\n      after: $after\n      search: $search\n      sort: $sort\n      filters: $filters\n    ) {\n      nodes {\n        entity {\n          __typename\n          ... on Document {\n            meta {\n              title\n              path\n              credits\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/ArticleQuestion.js", "repo": "republik_plattform"}, "arguments": "(\n    $search: String\n    $after: String\n    $sort: SearchSortInput\n    $filters: [SearchGenericFilterInput!]\n  )"}, {"type": "mutation", "name": "appendPeriod", "content": "{\n    appendPeriod(id: $id, duration: $duration, durationUnit: $durationUnit) {\n      id\n      periods {\n        id\n        beginDate\n        endDate\n        isCurrent\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/AppendPeriod.js", "repo": "republik_plattform"}, "arguments": "(\n    $id: ID!\n    $duration: Int!\n    $durationUnit: MembershipTypeInterval!\n  )"}, {"type": "mutation", "name": "runtimeRemoveKnownLinkLanguageTemplates", "content": "{\n                runtimeRemoveKnownLinkLanguageTemplates(addresses: $addresses)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($addresses: [String!]!)"}, {"type": "mutation", "name": "approvePendingCommunityMember", "content": "{\n    approvePendingCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/approvePendingCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $input: ApprovePendingCommunityMemberInput!\n  )"}, {"type": "query", "name": "GetUser", "content": "{\n    person(id: $id) {\n      id\n      name\n      email\n      user\n      ethereumAddress\n      primaryLocation {\n        name\n        mappableAddress\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GET_LANGS", "content": "{\n        langs\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/core/getLangs.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "SampleQuery", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/core/__tests__/ApolloLink.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getStaffs", "content": "{\n    staffs(role: $role, searchBy: $searchBy) {\n      id\n      name\n      email\n      contact_number\n      creation_date\n      role\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/StaffMemberForm/StaffMemberForm.tsx", "repo": "mdhafiz_PickBazar"}, "arguments": "($role: String, $searchBy: String)"}, {"type": "query", "name": "GetSubmissions", "content": "{\n        getSubmissions {\n            id\n            lastStepVisited\n            manuscriptDetails {\n                title\n            }\n            updated\n            articleType\n            status\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/dashboard/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SignInMutation", "content": "{\n    signIn(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/api-routes-apollo-server-and-client-auth/pages/signin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "heartbeat", "content": "{\n      heartbeat(id: $id) ${presenceResult}\n    }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "presencedemo/src/graphql/operations.js", "repo": "aws-samples_aws-appsync-presence-api"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "deleteChallenge", "content": "{\n            deleteChallenge(id: $id)\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getCommunityTopMembers", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      topMembers {\n        ...communityMemberInfo\n      }\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunityTopMembers.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getPremium", "content": "{\n    getPremium(name: $name, expires: $expires, duration: $duration)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String, $expires: Number, $duration: Number)"}, {"type": "mutation", "name": "UpdateUserProfile", "content": "{\n    updateOwnAppUser(input: $input) {\n      ...ActiveUserFragment\n    }\n  }\n\n  ${userFragment}", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/profile.js", "repo": "endeavorb2b_websites"}, "arguments": "($input: UpdateOwnAppUserMutationInput!)"}, {"type": "mutation", "name": "CreatePost", "content": "{\n    createPost(description: $description, imageUrl: $imageUrl, authorId: $authorId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-facebook-and-apollo/src/components/CreatePost.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($description: String!, $imageUrl: String!, $authorId: ID!)"}, {"type": "mutation", "name": "AddTodo", "content": "{\n  createTodo(\n\t\tdata: {\n      todoItem: $todoItem\n    }\n  )\n  {data{\n    todoItem,\n    taskCompleted\n  }}\n}", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/todo-react-tailwind/src/App.js", "repo": "webiny_write-with-webiny"}, "arguments": "($todoItem: String!)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/queries/polling.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getSideNavData", "content": "{\n    accounts\n    isReadOnly\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/SideNav/SideNav.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "editUserPublic", "content": "{\n            editUserPublic(username: $username, biography: $biography, profession: $profession, profilePicture: $profilePicture, tags: $tags, firstName: $firstName, lastName: $lastName, birthday: $birthday, userToken: $userToken){\n                user{\n                    firstName\n                    lastName\n                    profilePicture\n                    biography\n                    profession\n                    birthday\n                    averageRating\n                    roles{\n                        role\n                    }\n                    tags{\n                        name\n                        color\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $tags: [String]!, $biography: String, $profession: String, $profilePicture: String, $firstName: String!, $lastName: String!, $birthday: String, $userToken: String!)"}, {"type": "mutation", "name": "EditCategory", "content": "{\n        editCategory(category:{_id:$_id,title:$title,description:$description,img_menu:$img_menu}){_id}\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Category/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "( $_id:String,$title:String!,$description:String!,$img_menu:String)"}, {"type": "query", "name": "fetchUser", "content": "{\n          me {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "a33eec57a5308fc4435a3c8a388bce6c30cb13fe", "file": "src/core/apiclients/graphql/GraphQLAPIClient.ts", "repo": "orangeloops_public-ol-native-template"}}, {"type": "mutation", "name": "EditCategory", "content": "{\n        editCategory(category:$category){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($category:CategoryInput)"}, {"type": "mutation", "name": "AddItem", "content": "{\n    insertTodo(object: { contents: $contents }) {\n      id\n      contents\n    }\n  }", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "examples/react-apollo/src/apollo/index.tsx", "repo": "nhost_nhost"}, "arguments": "($contents: String!)"}, {"type": "mutation", "name": "GenerateEmailCode", "content": "{\n    generateEmailCode(email: $email) {\n      success\n      reason\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/GenerateEmailCode.js", "repo": "OriginProtocol_origin"}, "arguments": "($email: String!)"}, {"type": "query", "name": "Simple", "content": "{\n        ...fieldFragment1\n      }\n\n      fragment fieldFragment1 on Field {\n        bar {\n          baz {\n            ...nestedFragment\n          }\n        }\n      }\n\n      fragment nestedFragment on Field {\n        foo @live\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "FetchLuke", "content": "{\n          hero(id: $id) @client {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/fetchPolicies.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($id: String)"}, {"type": "query", "name": "userInviteGetSender", "content": "{\n          userInviteGetSender(inviteCode: $code) {\n            user {\n              ${PROFILE_PROPS}\n            }\n            shareType\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($code: String!)"}, {"type": "query", "name": "someBigQuery", "content": "{\n        id\n        stringField(arg: $stringArg)\n        numberField(intArg: $intArg, floatArg: $floatArg)\n        nullField\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/readFromStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n        $stringArg: String = \"This is a default string!\"\n        $intArg: Int = 0\n        $floatArg: Float\n      )"}, {"type": "mutation", "name": "createOrganizationNote", "content": "{\n  note_CreateForOrganization(organizationId: $organizationId, input: $input) {\n    ...NoteContent\n  }\n}\n    ${NoteContentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!, $input: NoteInput!)"}, {"type": "mutation", "name": "revokeSession", "content": "{\n  revokeSession(id: $id)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Coupons", "content": "{\n        coupons {\n          _id\n          code\n          discount\n          enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SignMessage", "content": "{\n    signMessage(address: $address, message: $message)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SignMessage.js", "repo": "OriginProtocol_origin"}, "arguments": "($address: ID!, $message: String!)"}, {"type": "query", "name": "CockpitStatus", "content": "{\n    membershipStats {\n      evolution(min: \"2018-01\", max: $max) {\n        updatedAt\n        buckets {\n          key\n          active\n          overdue\n          ended\n          pending\n          pendingSubscriptionsOnly\n          gaining\n        }\n      }\n      lastSeen(min: $prev, max: $max) {\n        buckets {\n          key\n          users\n        }\n      }\n    }\n    discussionsStats {\n      evolution(min: \"2018-01\", max: $max) {\n        buckets {\n          key\n          users\n        }\n      }\n    }\n    collectionsStats {\n      progress: evolution(name: \"progress\", min: \"2019-03\", max: $max) {\n        buckets {\n          key\n          users\n        }\n      }\n      bookmarks: evolution(name: \"bookmarks\", min: \"2019-01\", max: $max) {\n        buckets {\n          key\n          users\n        }\n      }\n    }\n    actionMe: me(accessToken: $accessToken) {\n      id\n      ...SurviveActionsOnUser\n    }\n  }\n  ${userSurviveActionsFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/pages/cockpit.js", "repo": "republik_plattform"}, "arguments": "(\n    $prev: YearMonthDate!\n    $max: YearMonthDate!\n    $accessToken: ID\n  )"}, {"type": "mutation", "name": "Logout", "content": "{\n  logout\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "quakeList", "content": "{\n    quakes(after: $after) {\n      cursor\n      hasMore\n      quakes {\n        id\n        magnitude\n        location\n        when\n        cursor\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_RESOURCES/awesome-git-user/full-stack-apollo-graphql-tutorial-quakehunter/client/src/App.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($after: String)"}, {"type": "query", "name": "Addons", "content": "{\n  addons{\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n}}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "test", "content": "{\n          f\n        }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/plugins/typescript/apollo-angular/tests/apollo-angular.spec.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "DeletePostReaction", "content": "{\n        delete_post_reactions(where: {_and: [{post_id: {_eq: $postId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($postId: Int!, $userId: Int!, $reaction: bpchar!)"}, {"type": "mutation", "name": "ToggleRider", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Riders.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($id:String)"}, {"type": "query", "name": "OutgoingPullRequests", "content": "{\n\tuser(login: $login) {\n    name\n    avatarUrl\n    login\n    pullRequests(last: 10, states: [OPEN], before: $startCursor) {\n      totalCount\n      pageInfo {\n        hasPreviousPage\n        startCursor\n      }\n      nodes {\n        ...prFields\n        ...statusFields\n        ...lastCommentFields\n        reviews(last: 10) {\n          totalCount\n          nodes {\n            ...reviewFields\n          }\n        }\n        reviewRequests(last: 2) {\n          totalCount\n          nodes {\n            requestedReviewer {\n              ... on User {\n                login\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  rateLimit {\n    cost\n    limit\n    remaining\n    resetAt\n    nodeCount\n  }\n}\n\n${prFragment}\n${reviewFragment}\n${lastCommentFragment}\n\nfragment commitFields on Commit {\n  status {\n    contexts {\n      id\n      context\n      state\n      createdAt\n    }\n    state\n  }\n  pushedDate\n}\n\nfragment statusFields on PullRequest {\n\tcommits(last: 1) {\n    nodes {\n      commit {\n        ...commitFields\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "5358526a9bb7c3ab826658a613e5b487b064a682", "file": "src/server/apis/dash-data.ts", "repo": "PolymerLabs_project-health"}, "arguments": "($login: String!, $startCursor: String)"}, {"type": "mutation", "name": "PushToken", "content": "{\n  pushToken(token:$token){\n    _id\n    notificationToken\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($token:String!)"}, {"type": "query", "name": "PrepareRun", "content": "{\n  prepRun(duration: $duration) {\n    highIntensity\n    lowIntensity\n    repetitions\n    sets\n    restPeriod\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($duration: Int!)"}, {"type": "query", "name": "UserOffers", "content": "{\n    marketplace {\n      user(id: $id) {\n        id\n        offers(first: $first, after: $after) {\n          totalCount\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n            endCursor\n          }\n          nodes {\n            id\n            listingId\n            offerId\n            listing {\n              id\n              title\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/UserOffers.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!, $first: Int, $after: String)"}, {"type": "mutation", "name": "clearProfileAvatar", "content": "{\n  clearProfileAvatar {\n    id\n    fullName\n    profileIcon {\n      initials\n      bgColor\n      url\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "CommerceIncompleteOrders", "content": "{\n\t\torderIncompleteCurrencyValues(\n\t\t\tchannelId: $channelId\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t) {\n\t\t\tcurrencyCode\n\t\t\ttrend {\n\t\t\t\ttrendClassification\n\t\t\t\tpercentage\n\t\t\t}\n\t\t\tvalue\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/commerce/queries/IncompleteOrdersQuery.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t)"}, {"type": "query", "name": "GetMovies", "content": "{\n    getMovies {\n      title\n      tagline\n      released\n      actors {\n        name\n      }\n      directors {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo-neo4j-graphql/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "ALL_PRODUCTS_QUERY", "content": "{\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/33/Products.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "blocks", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "ef4bb4133177509e1922805f8292a9d5429050ad", "file": "src/apollo/queries.js", "repo": "Anime1026_trisolaris-interface"}, "arguments": "($timestampFrom: Int!, $timestampTo: Int!)"}, {"type": "query", "name": "uniswapDayDatas", "content": "{\n    uniswapDayDatas(\n      first: 500\n      skip: $skip\n      where: { date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n    ) {\n      id\n      date\n      totalVolumeUSD\n      dailyVolumeUSD\n      dailyVolumeETH\n      totalLiquidityUSD\n      totalLiquidityETH\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($startTime: Int!, $skip: Int!)"}, {"type": "query", "name": "currentAuthorPostCount", "content": "{\n          currentAuthor @client {\n            name\n            authorId @export(as: \"authorId\")\n          }\n          postCount(authorId: $authorId) @client\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($authorId: Int!)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int = 1)"}, {"type": "mutation", "name": "deleteRuntimeLabel", "content": "{\n    deleteRuntimeLabel(runtimeID: $id, key: \"scenarios\") {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Scenarios/gql.js", "repo": "kyma-project_console"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "pairs", "content": "{\n    pairs(where: { id_in: $id }, orderDirection: asc) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}, "arguments": "($id: [Bytes]!)"}, {"type": "query", "name": "todos", "content": "{\n        todo_list {\n          id\n          title\n          tasks {\n            id\n            text\n            completed\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getCommunityByMatch", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunity.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($slug: LowercaseString)"}, {"type": "subscription", "name": "projectUpdated", "content": "{\n      projectUpdated {\n        id\n      }\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/project.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "submitComment", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "mutation", "name": "editCommunity", "content": "{\n    editCommunity(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/editCommunity.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: EditCommunityInput!)"}, {"type": "query", "name": "getAddresses", "content": "{\n    getAddresses(name: $name, keys: $keys)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String, $keys: [String])"}, {"type": "query", "name": "Account__PaymentQuery", "content": "{\n        account(id: $accountId) {\n          id\n          currentPlan {\n            id\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/queries.test.tsx", "repo": "Shopify_react-apollo"}, "arguments": "($accountId: ID!)"}, {"type": "query", "name": "GetSleepLeaderboard", "content": "{\n  currentUser {\n    id\n    friends(limit: 10) {\n      id\n      firstName\n      lastName\n      avatarUrl\n      emblem\n      shareableSleepScore\n      xp\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "AnalyseRun", "content": "{\n  generateRunFeedback(run: $run) {\n    feedbackSummary\n    lastRunFeedback\n    intensityFeedback\n    volumeFeedback\n    performanceFeedback\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($run: RunInput!)"}, {"type": "mutation", "name": "MoveAudioQueueItem", "content": "{\n    audioQueueItems: moveAudioQueueItem(id: $id, sequence: $sequence) {\n      ...AudioQueueItemFragment\n    }\n  }\n  ${AudioQueueItemFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Audio/graphql/AudioQueueHooks.ts", "repo": "republik_plattform"}, "arguments": "($id: ID!, $sequence: Int!)"}, {"type": "query", "name": "getUserCommunityConnection", "content": "{\n    user(id: $id) {\n      ...userInfo\n      ...userCommunityConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunityConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/user/getUserCommunityConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID)"}, {"type": "mutation", "name": "setTagOn", "content": "{\n    setTagOn(\n      tagName: $tagName\n      on: $on\n      targetType: $targetType\n      targetId: $targetId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "(\n    $tagName: String!\n    $on: String!\n    $targetType: String!\n    $targetId: ID!\n  )"}, {"type": "query", "name": "FIND_GAME_BY_ID", "content": "{\n    game: game(id: $id) {\n      id\n      createdAt\n      updatedAt\n      playedAt\n      mintedAt\n      minterAddress\n      ownerAddress\n      tokenId\n      externalUrl\n      location\n      event\n      moves\n      black\n      white\n      winner\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/GameCell/GameCell.js", "repo": "oneclickdapp_swordy-bot"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "registerTestDomain", "content": "{\n    registerTestDomain(name: $name) @client {\n      id\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/routes/TestRegistrar.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String!)"}, {"type": "mutation", "name": "UpdateRiderLocation", "content": "{\n  updateRiderLocation(latitude:$latitude,longitude:$longitude){\n    _id\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/context/user.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($latitude:String!,$longitude:String!)"}, {"type": "mutation", "name": "updateUser", "content": "{\n    updateUser(\n      userId: $id\n      birthday: $birthday\n      firstName: $firstName\n      lastName: $lastName\n      phoneNumber: $phoneNumber\n      address: $address\n    ) {\n      id\n      name\n      firstName\n      lastName\n      phoneNumber\n      address {\n        id\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Particulars/index.js", "repo": "republik_plattform"}, "arguments": "(\n    $id: ID!\n    $birthday: Date\n    $firstName: String!\n    $lastName: String!\n    $phoneNumber: String\n    $address: AddressInput!\n  )"}, {"type": "mutation", "name": "duplicateTaskGroup", "content": "{\n  duplicateTaskGroup(\n  input: {\n    projectID: $projectID\n    taskGroupID: $taskGroupID\n    name: $name\n    position: $position\n  }\n  ) {\n    taskGroup {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/duplicateTaskGroup.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskGroupID: UUID!, $name: String!, $position: Float!, $projectID: UUID!)"}, {"type": "query", "name": "popularPools", "content": "{\n    pools(orderBy: totalValueLockedUSD, orderDirection: desc, first: 6) {\n      token0 {\n        id\n      }\n      token1 {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "mutation", "name": "appendPeriod", "content": "{\n    appendPeriod(id: $id, duration: $duration, durationUnit: $durationUnit) {\n      id\n      periods {\n        id\n        beginDate\n        endDate\n        isCurrent\n      }\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/AppendPeriod.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "(\n    $id: ID!\n    $duration: Int!\n    $durationUnit: MembershipTypeInterval!\n  )"}, {"type": "query", "name": "getDpp", "content": "{\n    economicResource(id: $id) {\n      traceDpp\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/partials/project/[id]/ProjectDpp.tsx", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "dashboardView_Organizations", "content": "{\n  dashboardView_Organizations(pagination: $pagination, where: $where, sort: $sort) {\n    content {\n      id\n      name\n      subsidiaryOf {\n        organization {\n          id\n          name\n        }\n      }\n      owner {\n        id\n        firstName\n        lastName\n      }\n      description\n      industry\n      website\n      domains\n      locations {\n        ...LocationBaseDetails\n        rawAddress\n      }\n      healthIndicator {\n        id\n        name\n        order\n      }\n      relationshipStages {\n        relationship\n        stage\n      }\n      lastTouchPointTimelineEventId\n      lastTouchPointAt\n      lastTouchPointTimelineEvent {\n        ... on PageView {\n          id\n        }\n        ... on Issue {\n          id\n        }\n        ... on Note {\n          id\n          createdBy {\n            firstName\n            lastName\n          }\n        }\n        ... on InteractionEvent {\n          id\n          channel\n          eventType\n          sentBy {\n            __typename\n            ... on EmailParticipant {\n              type\n              emailParticipant {\n                id\n                email\n                rawEmail\n              }\n            }\n          }\n        }\n        ... on Analysis {\n          id\n        }\n        ... on Meeting {\n          id\n          name\n          attendedBy {\n            __typename\n          }\n        }\n        ... on Action {\n          id\n          actionType\n          createdAt\n          source\n          createdBy {\n            id\n            firstName\n            lastName\n          }\n        }\n      }\n    }\n    totalElements\n  }\n}\n    ${LocationBaseDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($pagination: Pagination!, $where: Filter, $sort: SortBy)"}, {"type": "query", "name": "getHostedCollectives", "content": "{\n    account(slug: $slug) {\n      memberOf(\n        accountType: COLLECTIVE\n        orderBy: { field: MEMBER_COUNT, direction: DESC }\n        role: HOST\n        limit: 1000\n      ) {\n        nodes {\n          since\n          account {\n            id\n            name\n            slug\n            description\n            imageUrl\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8b3e31e55c26bc7b93ab2260e4908fd24e134ef0", "file": "src/_data/hostedCollectives.js", "repo": "opencollective_foundation-website"}, "arguments": "($slug: String!)"}, {"type": "mutation", "name": "addBug", "content": "{\n        addBug(bugName: $bugName, productName: $productName, severity: $severity, description: $description, reproduction: $reproduction) {\n            _id\n            bugName\n            productName\n            date\n            severity\n            description\n            reproduction\n            status\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}, "arguments": "($bugName: String, $productName: String, $severity: String, $description: String, $reproduction: String)"}, {"type": "mutation", "name": "CreateOrder", "content": "{\n    order(items: $orderItems) {\n      id,\n      items {\n        coffee { id, name, price }\n        quantity\n      }\n    } \n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlMutations.js", "repo": "hashicorp_learn-terraform-preview-environment"}, "arguments": "($orderItems: [OrderItemInput!])"}, {"type": "query", "name": "getPerson", "content": "{\n    person(id: $id) {\n      id\n      name\n      user\n      images {\n        bin\n        mimeType\n      }\n      primaryLocation {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/brickroom/BrUserDisplay.tsx", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        field @storage\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "ChatsListQuery", "content": "{\n    chat(order_by:[{messages_aggregate:{max:{created_at:desc}}}]) {\n      ...chat\n      users(where:{user_id:{_neq:$userId}}) {\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/ChatsListScreen/ChatsList.tsx", "repo": "hasura_sample-apps"}, "arguments": "($userId: Int!)"}, {"type": "query", "name": "ALL_PRODUCTS_QUERY", "content": "{\n    allProducts(first: $first, skip: $skip) {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/Products.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($skip: Int = 0, $first: Int)"}, {"type": "mutation", "name": "UpdateAwardApplicationMutation", "content": "{\n    updateAwardApplication(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateAwardApplicationMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($input: UpdateAwardApplicationInput!)"}, {"type": "mutation", "name": "UniswapInitFactory", "content": "{\n    uniswapInitializeFactory(\n      from: $from\n      exchange: $exchange\n      factory: $factory\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $from: String!\n    $exchange: String\n    $factory: String\n  )"}, {"type": "mutation", "name": "addOrganizationSubsidiary", "content": "{\n  organization_AddSubsidiary(input: $input) {\n    id\n    subsidiaries {\n      organization {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($input: LinkOrganizationsInput!)"}, {"type": "query", "name": "getExpandE", "content": "{\n    expand_e(id: $id, class: $class, io: $io, rid: $rid, page: $page, size: $size) {\n      id\n      class\n      color\n      name\n      alias\n      properties {\n        n\n        v\n      }\n      inV {\n        id\n        class\n        color\n        name\n        expand\n        analysis\n        alias\n        properties {\n          n\n          v\n        }\n      }\n      outV {\n        id\n        class\n        color\n        name\n        expand\n        analysis\n        alias\n        properties {\n          n\n          v\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c507be725bcade8c618ec274193badbc04909dcb", "file": "studio/webui/src/components/G6SearchGraph/G6Graph/InAndOut/gql.js", "repo": "AISHU-Technology_kweaver"}, "arguments": "($id: ID!, $class: String!, $io: String!, $rid: String!, $page: Int = 1, $size: Int = 20)"}, {"type": "query", "name": "sync$", "content": "{modelName}($lastSync: GraphbackTimestamp!, $filter: ${modelName}Filter) {\n              sync${modelName}s(lastSync: $lastSync, filter: $filter) {\n                  items {\n                    ${graphQLFields}\n                    _deleted\n                  }\n                  lastSync\n              }\n            }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "packages/datastore/src/replication/queries/buildGraphQLCRUDQueries.ts", "repo": "aerogear_offix"}}, {"type": "query", "name": "getUserThreadConnection", "content": "{\n    user(id: $id) {\n      ...userInfo\n      ...userThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userThreadConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/user/getUserThreadConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $id: ID\n    $after: String\n    $kind: ThreadConnectionType\n  )"}, {"type": "query", "name": "getSellingPlanGroup", "content": "{\n        sellingPlanGroup(id: $id) {\n            id\n            name\n            createdAt\n            appId\n            createdAt\n            description\n            merchantCode\n            options\n            position\n            productCount\n            productVariantCount\n            summary\n            sellingPlans(first: 99) {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        deliveryPolicy {\n                            ... on SellingPlanRecurringDeliveryPolicy {\n                                interval\n                                intervalCount\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "lib/useSellingPlanGroup.ts", "repo": "mr-perseus_permaculture"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "createProduct", "content": "{\n    createProduct(input: {name: $name, quantity: $quantity}) {\n      ...ProductFields\n    }\n  }\n\n  ${ProductFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/createProduct.ts", "repo": "aerogear_offix-react-native-example"}, "arguments": "($id: ID!, $name: String!, $quantity: Int!)"}, {"type": "subscription", "name": "UserInfo", "content": "{\n        user(name: $name) {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/subscriptions.test.tsx", "repo": "Shopify_react-apollo"}, "arguments": "($name: String)"}, {"type": "mutation", "name": "insert_message", "content": "{\n    insert_message_one(object: $message) {\n      id\n      timestamp\n      text\n      username\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "streaming-subscriptions-chat/src/components/Textbox.js", "repo": "hasura_sample-apps"}, "arguments": "($message: message_insert_input!)"}, {"type": "mutation", "name": "DeleteEventTable", "content": "{\n    deleteEventTable(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditEvent.js", "repo": "vecnazmaga_place-management"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "SaveDisclosurePage", "content": "{\n        saveDisclosurePage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            disclosure {\n                submitterSignature\n                disclosureConsent\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}, "arguments": "($id: ID!, $details: DisclosureDetailsInput!)"}, {"type": "query", "name": "todos", "content": "{\n        todos {\n          id\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Mutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "DELETE_LIBRARY", "content": "{\n        deleteLibrary(id: $libID) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/libraries/deleteLibMutation.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($libID: ID!)"}, {"type": "query", "name": "celoSystemBalances", "content": "{\n  celoSystemBalances {\n    height\n    goldTokenSupply\n    totalLockedGoldBalance\n    nonVotingLockedGoldBalance\n    totalCeloUSDValue\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "query", "name": "BlogsMetrics", "content": "{\n\t\tblog(\n\t\t\tassetId: $assetId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tchannelId: $channelId\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tassetId\n\t\t\tassetTitle\n\t\t\tviewsMetric {\n\t\t\t\t...browserFragment\n\t\t\t\t...deviceFragment\n\n\t\t\t\tpreviousValue\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n\n\t${BROWSER_FRAGMENT}\n\t${DEVICE_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/assets/blog/hocs/DevicesCard.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$assetId: String!\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)"}, {"type": "mutation", "name": "unarchiveCampaign", "content": "{\n        unarchiveCampaign(id: $campaignId) {\n          ${campaignInfoFragment}\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($campaignId: String!)"}, {"type": "query", "name": "everestChallenge", "content": "{\n      challenge(id: \"${challengeId}\", block: { hash: \"${hash}\" }) {\n        id\n        description\n        votes {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/utils.ts", "repo": "cryptosguru_everest"}}, {"type": "mutation", "name": "ChangePassword", "content": "{\n  changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Profile/ChangePassword.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($oldPassword:String!,$newPassword:String!)"}, {"type": "mutation", "name": "EditCategory", "content": "{\n        editCategory(category:{_id:$_id,title:$title,description:$description,img_menu:$img_menu}){_id}\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Category/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "( $_id:String,$title:String!,$description:String!,$img_menu:String)"}, {"type": "query", "name": "Transactions", "content": "{\n  transactions(currency: $currency) {\n    id\n    transactionType\n    date\n    amount\n  }\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}, "arguments": "($currency: String!)"}, {"type": "query", "name": "GetCurrencies", "content": "{\n    currencies {\n      __typename\n      ... on Currency {\n        id\n        name\n        code\n        priceInUSD\n      }\n      ... on Token {\n        decimals\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/hoc/withCurrencies.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/context/configuration.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "tweet", "content": "{\n    tweet(id: $id) {\n      id\n      text\n      tags\n      user {\n        id\n        fullname\n        handle\n        avatar\n      }\n      files {\n        id\n        url\n      }\n      likesCount\n      commentsCount\n      retweetsCount\n      isLiked\n      isRetweet\n      comments {\n        id\n        text\n        isCommentMine\n        user {\n          id\n          fullname\n          handle\n          avatar\n        }\n        createdAt\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/tweet/index.js", "repo": "manikandanraji_twitter-clone-frontend"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Namespaces", "content": "{\n    namespaces(\n      withSystemNamespaces: $showSystemNamespaces\n      withInactiveStatus: false\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($showSystemNamespaces: Boolean)"}, {"type": "query", "name": "User", "content": "{\n  user {\n    userId\n    email\n  }\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "runtimeHcAgentInfos", "content": "{\n                runtimeHcAgentInfos\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "query", "name": "vendors", "content": "{\n        vendors(filter: $filter){\n            id\n            name\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/query.js", "repo": "sujoys10_food-at-you"}, "arguments": "($filter: VendorFilterInput)"}, {"type": "query", "name": "newsletterSubscriptions", "content": "{\n    user(slug: $id) {\n      id\n      newsletterSettings {\n        id\n        status\n        subscriptions {\n          id\n          name\n          subscribed\n          isEligible\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/NewsletterSubscriptions.js", "repo": "republik_plattform"}, "arguments": "($id: String)"}, {"type": "query", "name": "getRedirect", "content": "{\n    redirection(path: $path) {\n      id\n      target\n      status\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/StatusError/index.js", "repo": "republik_plattform"}, "arguments": "($path: String!)"}, {"type": "mutation", "name": "upvoteComment", "content": "{\n    VoteProjectComment(input: { auth_token: $authToken, project_comment_id: $id }) {\n      total_votes\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($authToken: String!, $id: ID!)"}, {"type": "mutation", "name": "PlaceOrder", "content": "{\n  placeOrder(orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,address:$address) {\n    _id\n    order_id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    user {\n      _id\n      phone\n      email\n    }\n    rider{\n      _id\n    }\n    payment_status\n    payment_method\n    paid_amount\n    order_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Cart/Cart.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$address:AddressInput!)"}, {"type": "mutation", "name": "toggleFavTask", "content": "{\n        toggleFavTask(state: $state, taskId: $taskId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlToggleFavTask.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($state: Boolean!, $taskId: ID!)"}, {"type": "query", "name": "ViewMessagesQuery", "content": "{\n    messages(listingId: $listingId) {\n      text\n      user {\n        id\n        email\n      }\n      listingId\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/ViewMessages/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}, "arguments": "($listingId: String!)"}, {"type": "query", "name": "GetCar", "content": "{\n      getCar(id: $id) {\n        id\n        color\n        throttle\n        fuelLevel\n        speed\n        tireWear\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "CurrentUser", "content": "{\n    currentUser {\n      id\n      user {\n        id\n        email\n        fullName\n        displayName\n        profileUrl\n        lastViewedCompanyId\n        ownedCompanies {\n          id\n          name\n        }\n        companies {\n          id\n          name\n          logoUrl\n        }\n        teams {\n          id\n          companyId\n          name\n        }\n        roles {\n          id\n          name\n          companyId\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/queries/CurrentUser.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "mutation", "name": "UpdateTimings", "content": "{\n  updateTimings(id:$id,\n    openingTimes:$openingTimes){\n    _id\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Timings.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!,$openingTimes:[TimingsInput])"}, {"type": "mutation", "name": "editUser", "content": "{\n    editUser (\n      name: $name,\n      username: $username,\n      email: $email, \n      image: $image,\n      userId: $userId,\n      carrierType: $carrierType,\n      neighborhood: $neighborhood,\n      vehicalTypeId: $vehicalTypeId,\n      brand: $brand,\n      color: $color,\n      model: $model,\n      plateNumber: $plateNumber,\n      valuePerKm: $valuePerKm\n    ) {\n      _id\n      email\n      profile{\n        name \n        carrierType\n        neighborhood\n        vehical {\n          vehicalTypeId\n          brand\n          color\n          model\n          plateNumber\n          valuePerKm\n        }\n      }\n      username\n      roles\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}, "arguments": "($name: String, $username: String, $email: String, $image: String, $userId: String, $carrierType: String, $neighborhood: String, $vehicalTypeId: String, $brand: String, $color: String, $model: String, $plateNumber: String, $valuePerKm: Int)"}, {"type": "mutation", "name": "deleteService", "content": "{\n    deleteService(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "($name: String!, $namespace: String!)"}, {"type": "mutation", "name": "unblockCommunityMember", "content": "{\n    unblockCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/unblockCommunityMember.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: UnblockCommunityMemberInput!)"}, {"type": "mutation", "name": "vote", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $type: VoteType!)"}, {"type": "mutation", "name": "deleteTaskGroup", "content": "{\n  deleteTaskGroup(input: {taskGroupID: $taskGroupID}) {\n    ok\n    affectedRows\n    taskGroup {\n      id\n      tasks {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskGroupID: UUID!)"}]