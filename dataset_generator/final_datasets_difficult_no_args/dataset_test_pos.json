[{"type": "mutation", "name": "createVideos", "content": "{\n        createVideos(\n            name: $name\n            link: $link\n            moderatorNotes: $moderatorNotes\n        ) {\n            id\n            name\n        }\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/ADD_VIDEO.js", "repo": "SaraVieira_awesome-talks"}, "arguments": "(\n        $name: String!\n        $link: String!\n        $moderatorNotes: String\n    )"}, {"type": "query", "name": "tagVideosw", "content": "{\n        allTagses(filter: { name: $name }) {\n            id\n            name\n            videos {\n                id\n                description\n                link\n                duration\n                name\n                speaker {\n                    name\n                }\n                tags {\n                    name\n                    id\n                }\n                speaker {\n                    name\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/TAG_VIDEOS.js", "repo": "SaraVieira_awesome-talks"}, "arguments": "($name: String)"}, {"type": "query", "name": "speakerVideos", "content": "{\n        allVideoses(orderBy: createdAt_DESC, filter: { isPublished: false }) {\n            id\n            speaker {\n                name\n            }\n            description\n            link\n            name\n            tags {\n                name\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/GET_PROPOSED_TALKS.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "query", "name": "allVideos", "content": "{\n        allVideoses(\n            first: $first\n            after: $after\n            orderBy: $order\n            filter: {\n                AND: [\n                    {\n                        OR: [\n                            { link_contains: $search }\n                            { name_contains: $search }\n                            { tags_some: { name_contains: $search } }\n                            { speaker_some: { name_contains: $search } }\n                        ]\n                    }\n                    {\n                        AND: [\n                            { isPublished: true }\n                            { duration_lte: $duration }\n                            { year: $year }\n                        ]\n                    }\n                ]\n            }\n        ) {\n            ...VideoData\n        }\n    }\n    ${VideoData}", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/ALL_VIDEOS.js", "repo": "SaraVieira_awesome-talks"}, "arguments": "(\n        $first: Int\n        $after: String\n        $search: String\n        $duration: Int\n        $year: Int\n        $order: VideosOrderBy\n    )"}, {"type": "query", "name": "GetWatched", "content": "{\n        watched @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/GET_WATCHED.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "mutation", "name": "switchMode", "content": "{\n        switchMode(id: $id) @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/SWITCH_MODE.js", "repo": "SaraVieira_awesome-talks"}, "arguments": "($id: String!)"}, {"type": "query", "name": "GetSearch", "content": "{\n        search @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/GET_SEARCH.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "query", "name": "GetSpeakersSearch", "content": "{\n        searchSpeakers @client\n    }", "metadata": {"commit_hash": "7058aa2ba4a7102bce151630f397dd160fd12bb3", "file": "src/Queries/Local/GET__SPEAKERS_SEARCH.js", "repo": "SaraVieira_awesome-talks"}}, {"type": "query", "name": "datastore", "content": "{\n    datastore(resource_id: $resource_id)\n      @rest(type: \"Response\", path: \"datastore_search?{args}\") {\n      result {\n        count: total\n        fields\n        records\n      }\n    }\n  }", "metadata": {"commit_hash": "f04b86dda45a53314422c3d42013f04980effa85", "file": "examples/ckan-2021/graphql/queries.ts", "repo": "datopian_portaljs"}, "arguments": "($resource_id: String)"}, {"type": "query", "name": "search", "content": "{\n    search(q: $q, sort: $sort, rows: $rows, start: $start)\n      @rest(type: \"Search\", path: \"package_search?{args}\") {\n      result {\n        count\n        results {\n          name\n          title\n          updated: metadata_modified\n          organization {\n            name\n            title\n            description\n            image: image_url\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f04b86dda45a53314422c3d42013f04980effa85", "file": "examples/ckan-2021/graphql/queries.ts", "repo": "datopian_portaljs"}, "arguments": "($q: String, $sort: String, $rows: Int, $start: Int)"}, {"type": "query", "name": "stats", "content": "{\n    datasets @rest(type: \"Search\", path: \"package_search?rows=0\") {\n      result {\n        count\n      }\n    }\n    orgs @rest(type: \"Search\", path: \"organization_list\") {\n      result\n    }\n    groups @rest(type: \"Search\", path: \"group_list\") {\n      result\n    }\n  }", "metadata": {"commit_hash": "f04b86dda45a53314422c3d42013f04980effa85", "file": "examples/ckan-2021/graphql/queries.ts", "repo": "datopian_portaljs"}}, {"type": "query", "name": "posts", "content": "{\n    posts @rest(type: \"Posts\", path: \"\", endpoint: \"wordpress-posts\") {\n      found\n      posts\n      meta\n    }\n  }", "metadata": {"commit_hash": "f04b86dda45a53314422c3d42013f04980effa85", "file": "examples/ckan-2021/graphql/queries.ts", "repo": "datopian_portaljs"}}, {"type": "mutation", "name": "SendMessageMutation", "content": "{\n    sendMessage(_id: $id, message: $message) {\n      chat {\n        users {\n          _id\n          name\n          email\n        }\n        messages {\n          _id\n          user {\n            _id\n            name\n            email\n          }\n          message\n          createdAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Chat/mutations/SendMessageMutation.ts", "repo": "LFSCamargo_Chatify"}, "arguments": "($id: String!, $message: String!)"}, {"type": "mutation", "name": "AddChatMutation", "content": "{\n    addConversation(otherUser: $id) {\n      chat {\n        updatedAt\n        _id\n        lastMessage\n        users {\n          _id\n          email\n          name\n        }\n        messages {\n          message\n          createdAt\n          user {\n            _id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Chat/mutations/AddChatMutation.ts", "repo": "LFSCamargo_Chatify"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "login", "content": "{\n    login(email: $email, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Login/Login.tsx", "repo": "LFSCamargo_Chatify"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "register", "content": "{\n    register(email: $email, password: $password, name: $name) {\n      token\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/SignUp/SignUp.tsx", "repo": "LFSCamargo_Chatify"}, "arguments": "($email: String!, $password: String!, $name: String!)"}, {"type": "subscription", "name": "CallScreenSub", "content": "{\n    webRTCMessage(yourUser: $id) {\n      callID\n      type\n      message\n      chat {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Chat/CallScreen.tsx", "repo": "LFSCamargo_Chatify"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "SendRTCMessage", "content": "{\n    sendWebRTCMessage(_id: $id, callID: $callID, message: $message, type: $type) {\n      message\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Chat/ChatsList.tsx", "repo": "LFSCamargo_Chatify"}, "arguments": "($id: String!, $callID: String!, $message: String!, $type: String!)"}, {"type": "query", "name": "AddChatQuery", "content": "{\n    me {\n      _id\n      email\n      name\n    }\n    users(first: $first, search: $search) {\n      count\n      edges {\n        _id\n        name\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "562dfa4e90b3f8ecb7606b76451492017e0b15d4", "file": "packages/app/src/screens/Chat/AddChat.tsx", "repo": "LFSCamargo_Chatify"}, "arguments": "($first: Int, $search: String = \"\")"}, {"type": "query", "name": "FetchBids", "content": "{\n        bids(first: 3, orderBy: createdAt, orderDirection: desc, where: {eventID: $id}) {\n            address\n            eventID\n            stakedAmount\n            createdAt\n        }\n    }", "metadata": {"commit_hash": "6f372b42abec79f8082dd87765e1e0904347a643", "file": "src/state/smartbid/hooks.ts", "repo": "rigelprotocol_SmartswapDappV2"}, "arguments": "($id: Int)"}, {"type": "query", "name": "GetIndividuals", "content": "{\n    individuals(\n      page: $page\n      pageSize: $pageSize\n      filters: $filters\n      orderBy: $orderBy\n    ) {\n      entities {\n        ...individual\n      }\n      pageInfo {\n        page\n        pageSize\n        numPages\n        totalResults\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/queries.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "(\n    $page: Int!\n    $pageSize: Int!\n    $filters: IdentityFilterType\n    $orderBy: String\n  )"}, {"type": "query", "name": "GetOrganizations", "content": "{\n    organizations(page: $page, pageSize: $pageSize, filters: $filters) {\n      entities {\n        id\n        name\n        enrollments {\n          id\n          individual {\n            mk\n          }\n        }\n        domains {\n          domain\n          isTopDomain\n        }\n      }\n      pageInfo {\n        page\n        pageSize\n        numPages\n        totalResults\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/queries.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "(\n    $page: Int!\n    $pageSize: Int!\n    $filters: OrganizationFilterType\n  )"}, {"type": "query", "name": "GetTeams", "content": "{\n    teams(pageSize: 500, filters: $filters) {\n      entities {\n        name\n        numchild\n        id\n        enrollments {\n          individual {\n            mk\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/queries.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "($filters: TeamFilterType)"}, {"type": "query", "name": "getOrganization", "content": "{\n    organizations(filters: $filters) {\n      entities {\n        name\n        domains {\n          id\n          domain\n          isTopDomain\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/queries.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "($filters: OrganizationFilterType!)"}, {"type": "mutation", "name": "Merge", "content": "{\n    merge(fromUuids: $fromUuids, toUuid: $toUuid) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "($fromUuids: [String!], $toUuid: String!)"}, {"type": "mutation", "name": "unmerge", "content": "{\n    unmergeIdentities(uuids: $uuids) {\n      uuids\n      individuals {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "($uuids: [String!])"}, {"type": "mutation", "name": "moveIdentity", "content": "{\n    moveIdentity(fromUuid: $fromUuid, toUuid: $toUuid) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "($fromUuid: String!, $toUuid: String!)"}, {"type": "mutation", "name": "enroll", "content": "{\n    enroll(\n      uuid: $uuid\n      group: $group\n      fromDate: $fromDate\n      toDate: $toDate\n      parentOrg: $parentOrg\n    ) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "(\n    $uuid: String!\n    $group: String!\n    $fromDate: DateTime\n    $toDate: DateTime\n    $parentOrg: String\n  )"}, {"type": "mutation", "name": "withdraw", "content": "{\n    withdraw(\n      uuid: $uuid\n      group: $group\n      fromDate: $fromDate\n      toDate: $toDate\n      parentOrg: $parentOrg\n    ) {\n      uuid\n      individual {\n        ...individual\n      }\n    }\n  }\n  ${FULL_INDIVIDUAL}", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "(\n    $uuid: String!\n    $group: String!\n    $fromDate: DateTime\n    $toDate: DateTime\n    $parentOrg: String\n  )"}, {"type": "mutation", "name": "updateImportTask", "content": "{\n    updateImportIdentitiesTask(data: $data, taskId: $taskId) {\n      task {\n        id\n        lastModified\n      }\n    }\n  }", "metadata": {"commit_hash": "78d86a5846d4e3444df0df81b6730b878a926570", "file": "ui/src/apollo/mutations.js", "repo": "chaoss_grimoirelab-sortinghat"}, "arguments": "(\n    $data: ImportIdentitiesTaskInputType\n    $taskId: Int!\n  )"}, {"type": "mutation", "name": "follow", "content": "{\n    follow(id: $id)\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/follow/index.js", "repo": "manikandanraji_twitter-clone-frontend"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "editProfile", "content": "{\n    editProfile(\n      firstname: $firstname\n      lastname: $lastname\n      location: $location\n      dob: $dob\n      bio: $bio\n      website: $website\n      avatar: $avatar\n      coverPhoto: $coverPhoto\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/profile/index.js", "repo": "manikandanraji_twitter-clone-frontend"}, "arguments": "(\n    $firstname: String\n    $lastname: String\n    $location: String\n    $dob: String\n    $bio: String\n    $website: String\n    $avatar: String\n    $coverPhoto: String\n  )"}, {"type": "query", "name": "searchByTweet", "content": "{\n    searchByTweet(term: $term) {\n      id\n      text\n      tags\n      isRetweet\n      isTweetMine\n      likesCount\n      retweetsCount\n      commentsCount\n      isLiked\n      files {\n        id\n        url\n      }\n      user {\n        id\n        handle\n        avatar\n        fullname\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/search/index.js", "repo": "manikandanraji_twitter-clone-frontend"}, "arguments": "($term: String!)"}, {"type": "query", "name": "user", "content": "{\n    user {\n      id\n      handle\n      avatar\n      fullname\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/client/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "query", "name": "feed", "content": "{\n    feed {\n      id\n      text\n      tags\n      isLiked\n      isTweetMine\n      likesCount\n      commentsCount\n      retweetsCount\n      isRetweet\n      files {\n        id\n        url\n      }\n      user {\n        id\n        avatar\n        handle\n        fullname\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/others/index.js", "repo": "manikandanraji_twitter-clone-frontend"}}, {"type": "mutation", "name": "signup", "content": "{\n    signup(\n      firstname: $firstname\n      lastname: $lastname\n      handle: $handle\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        id\n        handle\n        avatar\n        fullname\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "4132cd6069836c84adc82f9708b30c0cc45783c3", "file": "src/queries/auth/index.js", "repo": "manikandanraji_twitter-clone-frontend"}, "arguments": "(\n    $firstname: String!\n    $lastname: String!\n    $handle: String!\n    $email: String!\n    $password: String!\n  )"}, {"type": "query", "name": "AllContracts", "content": "{\n    marketplaces {\n      address\n      totalListings\n      version\n      token {\n        id\n      }\n      owner {\n        id\n      }\n    }\n    tokens {\n      id\n      code\n      address\n      name\n      decimals\n      totalSupply\n    }\n    identityEvents {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/AllContracts.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "Refetch", "content": "{\n    refetch\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddAffiliate", "content": "{\n    addAffiliate(affiliate: $affiliate, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($affiliate: String, $from: String)"}, {"type": "mutation", "name": "DeployToken", "content": "{\n    deployToken(\n      name: $name\n      symbol: $symbol\n      decimals: $decimals\n      supply: $supply\n      type: $type\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $name: String\n    $symbol: String\n    $decimals: String\n    $supply: String\n    $type: String\n    $from: String\n  )"}, {"type": "mutation", "name": "SendFromNode", "content": "{\n    sendFromNode(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String, $to: String, $value: String)"}, {"type": "mutation", "name": "DeployMarketplace", "content": "{\n    deployMarketplace(\n      from: $from\n      token: $token\n      version: $version\n      autoWhitelist: $autoWhitelist\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $from: String\n    $token: String!\n    $version: String!\n    $autoWhitelist: Boolean\n  )"}, {"type": "mutation", "name": "DeployIdentityContract", "content": "{\n    deployIdentityContract(from: $from, contract: $contract) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String!, $contract: String!)"}, {"type": "mutation", "name": "DeployIdentityEventsContract", "content": "{\n    deployIdentityEvents(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String!)"}, {"type": "mutation", "name": "WithdrawListing", "content": "{\n    withdrawListing(\n      listingID: $listingID\n      target: $target\n      reason: $reason\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $listingID: String!\n    $target: String!\n    $reason: String\n    $from: String\n  )"}, {"type": "mutation", "name": "MakeOffer", "content": "{\n    makeOffer(\n      listingID: $listingID\n      finalizes: $finalizes\n      affiliate: $affiliate\n      commission: $commission\n      value: $value\n      currency: $currency\n      arbitrator: $arbitrator\n      data: $data\n      from: $from\n      withdraw: $withdraw\n      quantity: $quantity\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $listingID: String\n    $finalizes: Int\n    $affiliate: String\n    $commission: String\n    $value: String\n    $currency: String\n    $arbitrator: String\n    $data: MakeOfferInput\n    $from: String\n    $withdraw: String\n    $quantity: Int\n  )"}, {"type": "mutation", "name": "FinalizeOffer", "content": "{\n    finalizeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $from: String)"}, {"type": "mutation", "name": "DisputeOffer", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String, $from: String)"}, {"type": "mutation", "name": "WithdrawListing", "content": "{\n    addData(\n      data: $data\n      listingID: $listingID\n      offerID: $offerID\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $data: String!\n    $from: String!\n    $listingID: String\n    $offerID: String\n  )"}, {"type": "mutation", "name": "DeployIdentity", "content": "{\n    deployIdentity(\n      from: $from\n      attestations: $attestations\n      profile: $profile\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $from: String!\n    $profile: ProfileInput\n    $attestations: [String]\n  )"}, {"type": "mutation", "name": "UniswapDeployFactory", "content": "{\n    uniswapDeployFactory(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String!)"}, {"type": "mutation", "name": "UniswapInitFactory", "content": "{\n    uniswapInitializeFactory(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String!)"}, {"type": "query", "name": "Users", "content": "{\n    marketplace {\n      users(first: $first, after: $after, sort: $sort) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          endCursor\n        }\n        nodes {\n          id\n          firstEvent {\n            id\n            timestamp\n          }\n          lastEvent {\n            id\n            timestamp\n          }\n          offers {\n            totalCount\n          }\n          listings {\n            totalCount\n          }\n          account {\n            id\n            owner {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Users.js", "repo": "OriginProtocol_origin"}, "arguments": "($first: Int, $after: String, $sort: String)"}, {"type": "query", "name": "Network", "content": "{\n    web3 {\n      networkId\n      networkName\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Network.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "UserListings", "content": "{\n    marketplace {\n      user(id: $id) {\n        id\n        listings(first: $first, after: $after) {\n          totalCount\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n            endCursor\n          }\n          nodes {\n            ...basicListingFields\n          }\n        }\n      }\n    }\n  }\n  ${fragments.Listing.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/UserListings.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!, $first: Int, $after: String)"}, {"type": "query", "name": "AllAccounts", "content": "{\n    web3 {\n      defaultAccount {\n        ...balanceFields\n      }\n      nodeAccounts {\n        ...balanceFields\n      }\n      accounts {\n        ...balanceFields\n      }\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/AllAccounts.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Listing", "content": "{\n    marketplace {\n      listing(id: $listingId) {\n        ...basicListingFields\n        ... on Listing {\n          allOffers {\n            ...basicOfferFields\n          }\n          events {\n            id\n            event\n            blockNumber\n            block {\n              id\n              timestamp\n            }\n            returnValues {\n              ipfsHash\n              party\n              offerID\n              listingID\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ${fragments.Listing.basic}\n  ${fragments.Offer.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/queries/Listing.js", "repo": "OriginProtocol_origin"}, "arguments": "($listingId: ID!)"}, {"type": "subscription", "name": "onTransactionUpdated", "content": "{\n    transactionUpdated {\n      id\n      status\n      mutation\n      confirmations\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/_TransactionToasts.js", "repo": "OriginProtocol_origin"}}, {"type": "subscription", "name": "onNewBlock", "content": "{\n    newBlock {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/_NodeInfo.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Conversations", "content": "{\n    messaging(id: $id) {\n      enabled\n      conversations {\n        id\n        timestamp\n        messages {\n          address\n          content\n          timestamp\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/messaging/Messaging.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: String)"}, {"type": "mutation", "name": "SendMessage", "content": "{\n    sendMessage(to: $to, content: $content)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/messaging/Messaging.js", "repo": "OriginProtocol_origin"}, "arguments": "($to: String!, $content: String!)"}, {"type": "mutation", "name": "SetActiveWallet", "content": "{\n    setActiveWallet(address: $address) {\n      ...balanceFields\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/settings/_SetWalletMutation.js", "repo": "OriginProtocol_origin"}, "arguments": "($address: String!)"}, {"type": "mutation", "name": "TransferToken", "content": "{\n    transferToken(token: $token, from: $from, to: $to, value: $value) {\n      to {\n        id\n        balance\n      }\n      from {\n        id\n        balance\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/settings/_WalletAccounts.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )"}, {"type": "mutation", "name": "RemoveWallet", "content": "{\n    removeWallet(address: $address)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/settings/_RemoveWalletBtn.js", "repo": "OriginProtocol_origin"}, "arguments": "($address: String!)"}, {"type": "query", "name": "User", "content": "{\n    marketplace {\n      user(id: $id) {\n        id\n        account {\n          id\n          identity {\n            id\n            firstName\n            lastName\n            description\n            avatar\n\n            verifiedAttestations {\n              id\n              properties {\n                type\n                value\n              }\n            }\n          }\n        }\n        listings {\n          totalCount\n        }\n        offers {\n          totalCount\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/pages/users/User.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "TokenPrice", "content": "{\n    token(id: $id) {\n      symbol\n      decimals\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/components/TokenPrice.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: String!)"}, {"type": "query", "name": "MetaMaskEnabled", "content": "{\n    web3 {\n      metaMaskAvailable\n      metaMaskEnabled\n      metaMaskNetworkId\n      useMetaMask\n      networkId\n      metaMaskAccount {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/components/MetaMaskSwitcher.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "AllAccounts", "content": "{\n    web3 {\n      accounts {\n        id\n        role\n        name\n      }\n      useMetaMask\n      metaMaskAccount {\n        id\n        role\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/admin/src/components/SelectAccount.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "Refetch", "content": "{\n    refetch\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "AddAffiliate", "content": "{\n    addAffiliate(affiliate: $affiliate, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($affiliate: String, $from: String)"}, {"type": "mutation", "name": "CreateWallet", "content": "{\n    createWallet(role: $role, name: $name) {\n      ...balanceFields\n    }\n  }\n  ${fragments.Account.balance}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($role: String, $name: String)"}, {"type": "mutation", "name": "ImportWallets", "content": "{\n    importWallets(accounts: $accounts)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($accounts: [WalletInput]!)"}, {"type": "mutation", "name": "SendFromNode", "content": "{\n    sendFromNode(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String, $to: String, $value: String)"}, {"type": "mutation", "name": "SendFromWallet", "content": "{\n    sendFromWallet(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String, $to: String, $value: String)"}, {"type": "mutation", "name": "WithdrawListing", "content": "{\n    withdrawListing(\n      listingID: $listingID\n      target: $target\n      reason: $reason\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $listingID: String!\n    $target: String!\n    $reason: String\n    $from: String\n  )"}, {"type": "mutation", "name": "AddFunds", "content": "{\n    addFunds(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $amount: String!, $from: String)"}, {"type": "mutation", "name": "DisputeOffer", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String, $from: String)"}, {"type": "query", "name": "Profile", "content": "{\n    web3 {\n      primaryAccount {\n        id\n        checksumAddress\n      }\n      walletType\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Profile.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "TransactionReceipt", "content": "{\n    web3 {\n      blockNumber\n      transactionReceipt(id: $id) {\n        id\n        blockNumber\n        status\n        events {\n          id\n          event\n          returnValues {\n            listingID\n            offerID\n            party\n            ipfsHash\n          }\n          returnValuesArr {\n            field\n            value\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/TransactionReceipt.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Reviews", "content": "{\n    marketplace {\n      user(id: $id) {\n        id\n        reviews(first: $first, after: $after) {\n          totalCount\n          nodes {\n            id\n            review\n            rating\n            reviewer {\n              id\n              account {\n                id\n                identity {\n                  id\n                  fullName\n                  avatarUrlExpanded\n                }\n              }\n            }\n            listing {\n              ... on Listing {\n                id\n                title\n              }\n            }\n            event {\n              id\n              timestamp\n            }\n          }\n          pageInfo {\n            endCursor\n            hasNextPage\n            hasPreviousPage\n            startCursor\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Reviews.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!, $first: Int, $after: String)"}, {"type": "query", "name": "AllContracts", "content": "{\n    marketplaces {\n      address\n      totalListings\n      version\n      token {\n        id\n      }\n      owner {\n        id\n      }\n    }\n    tokens {\n      id\n      symbol\n      address\n      name\n      decimals\n      totalSupply\n    }\n    userRegistry {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/AllContracts.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "AccountBalance", "content": "{\n    web3 {\n      account(id: $id) {\n        id\n        balance {\n          eth\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/AccountBalance.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetAuthUrl", "content": "{\n    identityEvents {\n      getAuthUrl(provider: $provider, redirect: $redirect)\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/GetAuthUrl.js", "repo": "OriginProtocol_origin"}, "arguments": "($provider: String!, $redirect: String)"}, {"type": "query", "name": "Owner", "content": "{\n    web3 {\n      account(id: $id) {\n        id\n        owner {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Owner.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Web3", "content": "{\n    web3 {\n      networkId\n      networkName\n      walletType\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Web3.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "CreatorConfig", "content": "{\n    creatorConfig(creatorConfigUrl: $creatorConfigUrl) {\n      title\n      about\n      logoUrl\n      faviconUrl\n      marketplacePublisher\n      isCreatedMarketplace\n      cssVars {\n        defaultFont\n        headingFont\n        lightFooter\n        background\n        dark\n        darkTwo\n        light\n        clearBlue\n        paleClearBlue\n        darkGreyBlue\n        darkClearBlue\n        darkGrey\n        paleGrey\n        paleGreyTwo\n        paleGreyThree\n        paleGreyFour\n        paleGreyFive\n        paleGreySix\n        paleGreySeven\n        paleGreyTwoDarker\n        paleGreyEight\n        dusk\n        lightDusk\n        steel\n        greenblue\n        paleGreenblue\n        paleYellow\n        mustard\n        gold\n        goldenRod\n        goldenRodLight\n        lightGreenblue\n        bluishPurple\n        blueyGrey\n        darkBlueGrey\n        orangeRed\n        orangeRedLight\n        red\n        darkRed\n        lightRed\n        darkPurple\n        boostLow\n        boostMedium\n        boostHigh\n        boostPremium\n        defaultRadius\n      }\n      listingFilters {\n        name\n        value\n        operator\n        valueType\n      }\n      forceType {\n        category\n        subCategory\n        typename\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/CreatorConfig.js", "repo": "OriginProtocol_origin"}, "arguments": "($creatorConfigUrl: String)"}, {"type": "query", "name": "Wallet", "content": "{\n    web3 {\n      metaMaskAccount {\n        id\n      }\n      walletType\n      mobileWalletAccount {\n        id\n      }\n      primaryAccount {\n        id\n        proxy {\n          id\n        }\n        predictedProxy {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Wallet.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "DecryptOutOfBandMessage", "content": "{\n    messaging(id: \"defaultAccount\") {\n      decryptOutOfBandMessage(encrypted: $encrypted) {\n        content\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/DecryptOutOfBandMessage.js", "repo": "OriginProtocol_origin"}, "arguments": "($encrypted: String!)"}, {"type": "query", "name": "DecryptShippingAddress", "content": "{\n    messaging(id: \"defaultAccount\") {\n      decryptShippingAddress(encrypted: $encrypted) {\n        name\n        address1\n        address2\n        city\n        stateProvinceRegion\n        postalCode\n        country\n        instructions\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/DecryptShippingAddress.js", "repo": "OriginProtocol_origin"}, "arguments": "($encrypted: String!)"}, {"type": "query", "name": "EnrollmentStatus", "content": "{\n    enrollmentStatus(walletAddress: $walletAddress)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/EnrollmentStatus.js", "repo": "OriginProtocol_origin"}, "arguments": "($walletAddress: ID!)"}, {"type": "query", "name": "Room", "content": "{\n    messaging(id: \"defaultAccount\") {\n      id\n      enabled\n      isKeysLoading\n      conversation(id: $id, before: $before, after: $after) {\n        id\n        timestamp\n        totalUnread\n        messages {\n          index\n          address\n          content\n          status\n          hash\n          media {\n            url\n            contentType\n          }\n          timestamp\n          type\n          offer {\n            ...basicOfferFields\n            listing {\n              ...basicListingFields\n            }\n          }\n          eventData {\n            offerID\n            eventType\n          }\n        }\n        hasMore\n      }\n    }\n  }\n  ${fragments.Listing.basic}\n  ${fragments.Offer.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Room.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: String!, $before: Int, $after: Int)"}, {"type": "subscription", "name": "onNewNotification", "content": "{\n    newNotification {\n      totalCount\n      totalUnread\n      node {\n        id\n        title\n        timestamp\n        content\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/NotificationsSubscription.js", "repo": "OriginProtocol_origin"}}, {"type": "subscription", "name": "onNewBlock", "content": "{\n    newBlock {\n      id\n      number\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/NewBlockSubscription.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "GrowthCampaigns", "content": "{\n    campaigns(first: $first, after: $after) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        endCursor\n      }\n      nodes {\n        ...basicCampaignFields\n      }\n    }\n  }\n  ${fragments.GrowthCampaign.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/AllGrowthCampaigns.js", "repo": "OriginProtocol_origin"}, "arguments": "($first: Int, $after: String)"}, {"type": "query", "name": "CheckTelegramStatus", "content": "{\n    checkTelegramStatus(identity: $identity, maxTries: $maxTries) {\n      success\n      reason\n      data {\n        attestation\n        verified\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/CheckTelegramStatus.js", "repo": "OriginProtocol_origin"}, "arguments": "($identity: String!, $maxTries: Int)"}, {"type": "query", "name": "Sales", "content": "{\n    marketplace {\n      user(id: $id) {\n        id\n        sales(first: $first, after: $after, filter: $filter) {\n          totalCount\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n            endCursor\n          }\n          nodes {\n            ...basicOfferFields\n            listing {\n              ...basicListingFields\n            }\n          }\n        }\n      }\n    }\n  }\n  ${fragments.Listing.basic}\n  ${fragments.Offer.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Sales.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!, $first: Int, $after: String, $filter: String)"}, {"type": "query", "name": "Listing", "content": "{\n    web3 {\n      primaryAccount {\n        id\n      }\n    }\n    marketplace {\n      listing(id: $listingId) {\n        ...basicListingFields\n        ... on Listing {\n          events {\n            id\n            event\n            blockNumber\n            block {\n              id\n              timestamp\n            }\n            returnValues {\n              ipfsHash\n              party\n              offerID\n              listingID\n            }\n          }\n        }\n      }\n    }\n  }\n  ${fragments.Listing.basic}", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Listing.js", "repo": "OriginProtocol_origin"}, "arguments": "($listingId: ID!)"}, {"type": "query", "name": "CanConverseWith", "content": "{\n    messaging(id: \"defaultAccount\") {\n      id\n      enabled\n      isKeysLoading\n      canConverseWith(id: $account)\n      forwardTo(id: $account)\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/CanConverseWith.js", "repo": "OriginProtocol_origin"}, "arguments": "($account: String!)"}, {"type": "query", "name": "Notifications", "content": "{\n    web3 {\n      metaMaskAccount {\n        id\n      }\n    }\n    notifications {\n      totalCount\n      totalUnread\n      nodes {\n        id\n        title\n        timestamp\n        content\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/queries/Notifications.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "GetTokens", "content": "{\n    tokens {\n      id\n      symbol\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/hoc/withTokens.js", "repo": "OriginProtocol_origin"}}, {"type": "mutation", "name": "SwapToToken", "content": "{\n    swapToToken(from: $from, token: $token, tokenValue: $tokenValue) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SwapToToken.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String!, $token: String!, $tokenValue: String!)"}, {"type": "mutation", "name": "SetNetwork", "content": "{\n    setNetwork(network: $network, customConfig: $customConfig)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/SetNetwork.js", "repo": "OriginProtocol_origin"}, "arguments": "($network: String!, $customConfig: ConfigInput)"}, {"type": "mutation", "name": "CreateListing", "content": "{\n    createListing(\n      from: $from\n      deposit: $deposit\n      depositManager: $depositManager\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n      version: $version\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/CreateListing.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $from: String!\n    $deposit: String\n    $depositManager: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n    $version: String\n  )"}, {"type": "mutation", "name": "MarkConversationRead", "content": "{\n    markConversationRead(id: $id) {\n      success\n      messagesRead\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/MarkConversationRead.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "DisputeOffer", "content": "{\n    disputeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/DisputeOffer.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $from: String)"}, {"type": "mutation", "name": "AllowToken", "content": "{\n    updateTokenAllowance(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/AllowToken.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )"}, {"type": "mutation", "name": "invite", "content": "{\n    invite(emails: $emails)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/InviteFriends.js", "repo": "OriginProtocol_origin"}, "arguments": "($emails: [String!]!)"}, {"type": "mutation", "name": "AcceptOffer", "content": "{\n    acceptOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/AcceptOffer.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $from: String)"}, {"type": "mutation", "name": "VerifyOAuthAttestation", "content": "{\n    verifyOAuthAttestation(\n      provider: $provider\n      identity: $identity\n      authUrl: $authUrl\n      redirect: $redirect\n      code: $code\n    ) {\n      success\n      reason\n      data\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/VerifyOAuthAttestation.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $provider: String!\n    $identity: String!\n    $authUrl: String\n    $redirect: String\n    $code: String\n  )"}, {"type": "mutation", "name": "VerifyPhoneCode", "content": "{\n    verifyPhoneCode(\n      identity: $identity\n      prefix: $prefix\n      phone: $phone\n      code: $code\n    ) {\n      success\n      reason\n      data\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/mutations/VerifyPhoneCode.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $identity: String!\n    $prefix: String!\n    $phone: String!\n    $code: String!\n  )"}, {"type": "query", "name": "WalletStatus", "content": "{\n    web3 {\n      metaMaskAccount {\n        id\n      }\n    }\n    messaging(id: \"defaultAccount\") {\n      id\n      pubKey\n      pubSig\n      enabled\n      synced\n      syncProgress\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "dapps/marketplace/src/components/EnableMessagingModal.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "GetAllOffers", "content": "{\n    marketplace {\n      listing(id: $id) {\n        ... on Listing {\n          id\n          title\n          allOffers {\n            id\n            status\n            statusStr\n            valid\n            validationError\n            commission\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_queries.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "DeployToken", "content": "{\n    deployToken(\n      name: $name\n      symbol: $symbol\n      decimals: $decimals\n      supply: $supply\n      type: $type\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $name: String\n    $symbol: String\n    $decimals: String\n    $supply: String\n    $type: String\n    $from: String\n  )"}, {"type": "mutation", "name": "UpdateListing", "content": "{\n    updateListing(\n      listingID: $listingID\n      from: $from\n      additionalDeposit: $additionalDeposit\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $listingID: ID!\n    $from: String!\n    $additionalDeposit: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )"}, {"type": "mutation", "name": "AcceptOffer", "content": "{\n    acceptOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $from: String)"}, {"type": "mutation", "name": "WithdrawOffer", "content": "{\n    withdrawOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $from: String)"}, {"type": "mutation", "name": "DisputeOffer", "content": "{\n    disputeOffer(offerID: $offerID, data: $data, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $data: String!, $from: String)"}, {"type": "mutation", "name": "TransferToken", "content": "{\n    transferToken(token: $token, from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/test/_mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $token: String!\n    $from: String!\n    $to: String!\n    $value: String!\n  )"}, {"type": "mutation", "name": "AddAffiliate", "content": "{\n    addAffiliate(affiliate: $affiliate, from: $from, version: $version) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($affiliate: String!, $from: String, $version: String)"}, {"type": "mutation", "name": "CreateWallet", "content": "{\n    createWallet(role: $role, name: $name) {\n      id\n      role\n      name\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($role: String, $name: String)"}, {"type": "mutation", "name": "ImportWallet", "content": "{\n    importWallet(role: $role, name: $name, privateKey: $privateKey) {\n      id\n      role\n      name\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($role: String, $name: String, $privateKey: String!)"}, {"type": "mutation", "name": "SendFromNode", "content": "{\n    sendFromNode(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String!, $to: String!, $value: String!)"}, {"type": "mutation", "name": "SendFromWallet", "content": "{\n    sendFromWallet(from: $from, to: $to, value: $value) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String, $to: String, $value: String)"}, {"type": "mutation", "name": "DeployProxyFactoryContract", "content": "{\n    deployProxyFactory(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String!)"}, {"type": "mutation", "name": "DeployIdentityProxy", "content": "{\n    deployIdentityProxy(from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($from: String!)"}, {"type": "mutation", "name": "CreateListing", "content": "{\n    createListing(\n      from: $from\n      version: $version\n      deposit: $deposit\n      depositManager: $depositManager\n      autoApprove: $autoApprove\n      data: $data\n      unitData: $unitData\n      fractionalData: $fractionalData\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $from: String!\n    $version: String\n    $deposit: String\n    $depositManager: String\n    $autoApprove: Boolean\n    $data: ListingInput!\n    $unitData: UnitListingInput\n    $fractionalData: FractionalListingInput\n  )"}, {"type": "mutation", "name": "AcceptOffer", "content": "{\n    acceptOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $from: String)"}, {"type": "mutation", "name": "AddFunds", "content": "{\n    addFunds(offerID: $offerID, amount: $amount, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $amount: String!, $from: String)"}, {"type": "mutation", "name": "FinalizeOffer", "content": "{\n    finalizeOffer(offerID: $offerID, from: $from) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($offerID: String!, $from: String)"}, {"type": "mutation", "name": "WithdrawListing", "content": "{\n    addData(\n      data: $data\n      listingID: $listingID\n      offerID: $offerID\n      from: $from\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $data: String!\n    $from: String!\n    $listingID: String\n    $offerID: String\n  )"}, {"type": "mutation", "name": "UniswapCreateExchange", "content": "{\n    uniswapCreateExchange(\n      from: $from\n      tokenAddress: $tokenAddress\n      factory: $factory\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "(\n    $from: String!\n    $tokenAddress: String!\n    $factory: String\n  )"}, {"type": "mutation", "name": "ToggleMetaMask", "content": "{\n    toggleMetaMask(enabled: $enabled)\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/fixtures/mutations.js", "repo": "OriginProtocol_origin"}, "arguments": "($enabled: Boolean)"}, {"type": "query", "name": "GetMetaMaskState", "content": "{\n    web3 {\n      useMetaMask\n      metaMaskAvailable\n      metaMaskApproved\n      metaMaskEnabled\n      metaMaskUnlocked\n      metaMaskNetworkId\n      metaMaskNetworkName\n      metaMaskAccount {\n        id\n        checksumAddress\n      }\n      primaryAccount {\n        id\n      }\n      walletType\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "packages/graphql/src/metaMaskSync.js", "repo": "OriginProtocol_origin"}}, {"type": "query", "name": "Balance", "content": "{\n    web3 {\n      account(id: $id) {\n        id\n        balance {\n          eth\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "mobile/src/graphql/queries.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Wallet", "content": "{\n    web3 {\n      account(id: $id) {\n        id\n        owner {\n          id\n        }\n        proxy {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "57c55c023188e3a53cb9ee3dfafe0bf3210e0cf8", "file": "mobile/src/graphql/queries.js", "repo": "OriginProtocol_origin"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "updateSchema", "content": "{\n        updateSchema(input: $input) {\n          id\n        }\n      }", "metadata": {"commit_hash": "bf0bc8482f62b4b9e0c6a5c4fccb6e79a497848d", "file": "src/App.js", "repo": "nerdify_db-schema-diagram"}, "arguments": "($input: UpdateSchemaInput!)"}, {"type": "query", "name": "getSchema", "content": "{\n        getSchema(id: $id) {\n          id\n          schema\n          graph\n        }\n      }", "metadata": {"commit_hash": "bf0bc8482f62b4b9e0c6a5c4fccb6e79a497848d", "file": "src/App.js", "repo": "nerdify_db-schema-diagram"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "updateSchema", "content": "{\n        updateSchema(input: $input) {\n          id\n        }\n      }", "metadata": {"commit_hash": "bf0bc8482f62b4b9e0c6a5c4fccb6e79a497848d", "file": "src/App.js", "repo": "nerdify_db-schema-diagram"}, "arguments": "($input: UpdateSchemaInput!)"}, {"type": "query", "name": "H2", "content": "{\n                match(\n                    match_id: $match_id,\n                    match_uuid: $match_uuid,\n                ) {\n                    match_id\n                    leaderboard_id\n                    name\n                    map_type\n                    speed\n                    num_players\n                    started\n                    finished\n                    checked\n                    players {\n                        profile_id\n                        steam_id\n                        name\n                        country\n                        rating\n                        civ\n                        slot\n                        slot_type\n                        color\n                        won\n                        team\n                        wins\n                        games\n                    }\n                }\n            }", "metadata": {"commit_hash": "c39579d68a7ed2ab1e6ee05fadf5c42013d30f3e", "file": "data/src/api/player-matches.ts", "repo": "denniske_aoe2companion"}, "arguments": "($match_id: String, $match_uuid: String)"}, {"type": "query", "name": "ProfileQuery", "content": "{\n    profile(profile_id: $profileId) {\n      profile_id\n      name\n      last_match_time\n      country\n      games\n      drops\n      leaderboards {\n        leaderboard_id\n        profile_id\n        steam_id\n        name\n        country\n        clan\n        icon\n        rating\n        highest_rating\n        previous_rating\n        games\n        wins\n        losses\n        drops\n        streak\n        lowest_streak\n        highest_streak\n        last_match\n        last_match_time\n        rank\n      }\n      stats {\n        leaderboard_id\n        allies {\n          name\n          games\n          wins\n          country\n          profile_id\n        }\n        opponents {\n          name\n          games\n          wins\n          country\n          profile_id\n        }\n        civ {\n          civ\n          games\n          wins\n        }\n        map_type {\n          map_type\n          games\n          wins\n        }\n      }\n      rating_history {\n        leaderboard_id\n        profile_id\n        history {\n          rating\n          timestamp\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c39579d68a7ed2ab1e6ee05fadf5c42013d30f3e", "file": "website/src/pages/profile/[id].tsx", "repo": "denniske_aoe2companion"}, "arguments": "($profileId: Int!)"}, {"type": "query", "name": "MatchesQuery", "content": "{\n        matches(\n            start: 0,\n            count: 5,\n            profile_ids: $profileIds,\n            leaderboard_id: $leaderboardId\n            search: $search\n        ) {\n            total\n            matches {\n                match_id\n                leaderboard_id\n                name\n                map_type\n                started\n                finished\n                players {\n                    profile_id\n                    name\n                    rating\n                    civ\n                    slot\n                    slot_type\n                    color\n                    won\n                    team\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "c39579d68a7ed2ab1e6ee05fadf5c42013d30f3e", "file": "website/src/components/profile-matches.tsx", "repo": "denniske_aoe2companion"}, "arguments": "($profileIds: [Int!], $leaderboardId: Int, $search: String)"}, {"type": "query", "name": "Orders", "content": "{\n  orders(offset:$offset){\n    _id\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n    }\n    items{\n      _id\n      title\n      food\n      description\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n    }\n    user{\n      _id\n      name\n      phone\n    }\n    rider{\n      _id\n      name\n    }\n    review{\n      _id\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    tipping\n    taxationAmount\n    createdAt\n    completionTime\n    orderDate\n    expectedTime\n    isPickedUp\n    deliveryCharges\n    acceptedAt\n    pickedAt\n    deliveredAt\n    cancelledAt\n    assignedAt\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/context/User.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($offset:Int)"}, {"type": "subscription", "name": "OrderStatusChanged", "content": "{\n    orderStatusChanged(userId:$userId){\n      userId\n      origin\n      order{\n        _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      orderDate\n      expectedTime\n      isPickedUp\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/context/User.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($userId:String!)"}, {"type": "mutation", "name": "SaveNotificationTokenWeb", "content": "{\n  saveNotificationTokenWeb(token:$token){\n    success\n    message\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/context/User.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($token:String!)"}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/context/Configuration.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "SendOtpToPhoneNumber", "content": "{\n    sendOtpToPhoneNumber(phone: $phone, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyPhone/VerifyPhone.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($phone: String!, $otp: String!)"}, {"type": "query", "name": "Restaurants", "content": "{\n  nearByRestaurants(latitude:$latitude,longitude:$longitude){\n    offers{\n      _id\n      name\n      tag\n      restaurants\n    }\n    sections{\n      _id\n      name\n      restaurants\n    }\n    restaurants{\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      reviewData{\n          total\n          ratings\n          reviews{\n            _id\n            order{\n              user{\n                _id\n                name\n                email\n              }\n            }\n            rating\n            description\n            createdAt\n          }\n      }\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          image\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      rating\n      isAvailable\n      openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/Pickup/Pickup.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($latitude:Float,$longitude:Float)"}, {"type": "mutation", "name": "SendOtpToEmail", "content": "{\n    sendOtpToEmail(email: $email, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyEmail/VerifyEmail.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($email: String!, $otp: String!)"}, {"type": "mutation", "name": "CreateUser", "content": "{\n        createUser(userInput:{\n            phone:$phone,\n            email:$email,\n            password:$password,\n            name:$name,\n            notificationToken:$notificationToken,\n            appleId:$appleId\n        }){\n            userId\n            token\n            tokenExpiration\n            name\n            email\n            phone\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyEmail/VerifyEmail.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)"}, {"type": "mutation", "name": "ForgotPassword", "content": "{\n    forgotPassword(email:$email,otp:$otp){\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/screens/VerifyForgotOtp/VerifyForgotOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($email:String!,$otp:String!)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/hooks/useRegistration.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)"}, {"type": "query", "name": "Chat", "content": "{\n  chat(order: $order) {\n    id\n    message\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/hooks/useChat.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($order: ID!)"}, {"type": "query", "name": "Restaurant", "content": "{\n  restaurant(id:$id){\n    _id\n    orderId\n    orderPrefix\n    name\n    image\n    address\n    location{coordinates}\n    deliveryTime\n    minimumOrder\n    tax\n    reviewData{\n      total\n      ratings\n      reviews{\n        _id\n        order{\n          user{\n            _id\n            name\n            email\n          }\n        }\n        rating\n        description\n        createdAt\n      }\n    }\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        image\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n      }\n    }\n    options{\n      _id\n      title\n      description\n      price\n    }\n    addons{\n      _id\n      options\n      title\n      description\n      quantityMinimum\n      quantityMaximum\n    }\n    zone{\n      _id\n      title\n      tax\n    }\n    rating\n    isAvailable\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/hooks/useRestaurant.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String)"}, {"type": "subscription", "name": "SubscriptionRiderLocation", "content": "{\n    subscriptionRiderLocation(riderId:$riderId) {\n      _id\n      location {coordinates}\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Orders/OrderDetail/TrackingRider.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($riderId:String!)"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Profile/ProfileCard/ProfileCard.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)"}, {"type": "mutation", "name": "Coupon", "content": "{\n    coupon(coupon:$coupon){\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Checkout/CartItemCard.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($coupon:String!)"}, {"type": "mutation", "name": "DeleteAddress", "content": "{\n    deleteAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/Checkout/DeliveryCard.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:ID!)"}, {"type": "query", "name": "Taxes", "content": "{\n  taxes {\n    _id\n    taxationCharges\n    enabled\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-web/src/components/RestaurantDetailComponent/RestaurantCart/MRestaurantCart.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "UpdateRiderLocation", "content": "{\nupdateRiderLocation(latitude:$latitude,longitude:$longitude){\n  _id\n}\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/utilities/location.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($latitude:String!,$longitude:String!)"}, {"type": "query", "name": "Chat", "content": "{\n  chat(order: $order) {\n    id\n    message\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/screens/ChatWithCustomer/useChatScreen.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($order: ID!)"}, {"type": "subscription", "name": "SubscriptionNewMessage", "content": "{\n  subscriptionNewMessage(order:$order){\n    id\n    message\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/screens/ChatWithCustomer/useChatScreen.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($order:ID!)"}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AssignOrder", "content": "{\n  assignOrder(id:$id){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "query", "name": "RiderOrders", "content": "{\n  riderOrders{\n        _id\n      orderId\n      createdAt\n      acceptedAt\n      pickedAt\n      assignedAt\n      isPickedUp\n      deliveredAt\n      expectedTime\n      deliveryCharges\n      restaurant{\n        _id\n        name\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        label\n        details\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n        isActive\n        createdAt\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      paymentStatus\n      orderStatus\n      tipping\n      taxationAmount\n      reason\n      isRiderRinged\n      preparationTime\n      rider{\n        _id\n        name\n        username\n      }\n    }\n    }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "subscription", "name": "SubscriptionOrder", "content": "{\n    subscriptionOrder(id:$id){\n        _id\n        orderStatus\n        rider{\n            _id\n        }\n        completionTime\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "AssignOrder", "content": "{\n  assignOrder(id:$id){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-rider/src/components/Order/useOrder.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/context/configuration.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "ToggleAvailability", "content": "{\n  toggleAvailability{\n    _id\n    isAvailable\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useAccount.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "subscription", "name": "SubscribeOrderStatus", "content": "{\n    subscribeOrderStatus(_id:$_id){\n        _id\n        orderId\n        orderStatus\n        rider{\n            name\n        }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useOrderStatus.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($_id:String!)"}, {"type": "mutation", "name": "OrderPickedUp", "content": "{\n  orderPickedUp(_id:$_id){\n        _id\n      orderStatus\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useOrderPickedUp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($_id:String!)"}, {"type": "mutation", "name": "AcceptOrder", "content": "{\n    acceptOrder(_id:$_id, time:$time){\n        _id\n      orderStatus\n      preparationTime\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/ui/hooks/useAcceptOrder.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($_id:String!, $time:String)"}, {"type": "query", "name": "Orders", "content": "{\n    restaurantOrders{\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        details\n        label\n      }\n      items{\n        _id\n        title\n        description\n        image\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          description\n          title\n          quantityMinimum\n          quantityMaximum\n        }\n        specialInstructions\n        isActive\n        createdAt\n        updatedAt\n      }\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      status\n      paymentStatus\n      reason\n      isActive\n      createdAt\n      orderDate\n      deliveryCharges\n      isPickedUp\n      preparationTime\n      acceptedAt\n      isRinged\n      rider{\n        _id\n        name\n        username\n        available\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/navigation/mainStack.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "AcceptOrder", "content": "{\n    acceptOrder(_id:$_id, time:$time){\n        _id\n      orderStatus\n      preparationTime\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($_id:String!, $time:String)"}, {"type": "query", "name": "Restaurant", "content": "{\n  restaurant(id:$id){\n    _id\n    orderId\n    orderPrefix\n    name\n    image\n    address\n    location{coordinates}\n    deliveryTime\n    minimumOrder\n    tax\n    reviewData{\n      total\n      ratings\n      reviews{\n        _id\n        order{\n          user{\n            _id\n            name\n            email\n          }\n        }\n        rating\n        description\n        createdAt\n      }\n    }\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        image\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n      }\n    }\n    options{\n      _id\n      title\n      description\n      price\n    }\n    addons{\n      _id\n      options\n      title\n      description\n      quantityMinimum\n      quantityMaximum\n    }\n    zone{\n      _id\n      title\n      tax\n    }\n    rating\n    isAvailable\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/ui/hooks/useRestaurant.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/CreateAccount/useCreateAccount.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)"}, {"type": "mutation", "name": "EditAddress", "content": "{\n    editAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/EditAddress/EditAddress.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($addressInput:AddressInput!)"}, {"type": "mutation", "name": "SendOtpToPhoneNumber", "content": "{\n    sendOtpToPhoneNumber(phone: $phone, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Otp/Phone/usePhoneOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($phone: String!, $otp: String!)"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Otp/Phone/usePhoneOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)"}, {"type": "mutation", "name": "SendOtpToEmail", "content": "{\n    sendOtpToEmail(email: $email, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Otp/Email/useEmailOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($email: String!, $otp: String!)"}, {"type": "mutation", "name": "CreateUser", "content": "{\n        createUser(userInput:{\n            phone:$phone,\n            email:$email,\n            password:$password,\n            name:$name,\n            notificationToken:$notificationToken,\n            appleId:$appleId\n        }){\n            userId\n            token\n            tokenExpiration\n            name\n            email\n            phone\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Otp/Email/useEmailOtp.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)"}, {"type": "mutation", "name": "SendChatMessage", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/ChatWithRider/useChatScreen.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($orderId: ID!, $messageInput: ChatMessageInput!)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Login/useLogin.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)"}, {"type": "mutation", "name": "SelectAddress", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Main/Main.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "query", "name": "Orders", "content": "{\n  orders(offset:$offset){\n    _id\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n    }\n    items{\n      _id\n      title\n      food\n      description\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n    }\n    user{\n      _id\n      name\n      phone\n    }\n    rider{\n      _id\n      name\n    }\n    review{\n      _id\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    tipping\n    taxationAmount\n    createdAt\n    completionTime\n    orderDate\n    expectedTime\n    isPickedUp\n    deliveryCharges\n    acceptedAt\n    pickedAt\n    deliveredAt\n    cancelledAt\n    assignedAt\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Stripe/StripeCheckout.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($offset:Int)"}, {"type": "mutation", "name": "Coupon", "content": "{\n    coupon(coupon:$coupon){\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Coupon/Coupon.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($coupon:String!)"}, {"type": "query", "name": "UserFavourite", "content": "{\n    userFavourite(latitude:$latitude,longitude:$longitude) {\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      reviewData{\n        total\n        ratings\n        reviews{\n          _id\n          order{\n            user{\n              _id\n              name\n              email\n            }\n          }\n          rating\n          description\n          createdAt\n        }\n      }\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          image\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      rating\n      isAvailable\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n     }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Favourite/Favourite.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($latitude:Float,$longitude:Float)"}, {"type": "mutation", "name": "SelectAddress", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/CartAddress/CartAddress.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "DeleteAddress", "content": "{\n    deleteAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Addresses/Addresses.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:ID!)"}, {"type": "mutation", "name": "deactivated", "content": "{\n    Deactivate(isActive: $isActive,email: $email) {\n      isActive\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($isActive: Boolean!, $email: String!)"}, {"type": "query", "name": "Rider", "content": "{\n  rider(id:$id){\n    _id\n    location {coordinates}\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/components/OrderDetail/TrackingRider/TrackingRider.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String)"}, {"type": "subscription", "name": "SubscriptionOrder", "content": "{\n    subscriptionOrder(id:$id){\n        _id\n        orderStatus\n        rider{\n            _id\n        }\n        completionTime\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/components/Main/ActiveOrders/ActiveOrders.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "subscription", "name": "SubscriptionOrder", "content": "{\n    subscriptionOrder(id:$id){\n        _id\n        orderStatus\n        rider{\n            _id\n        }\n        completionTime\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-app/src/components/MyOrders/ActiveOrders.js", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "UPDATE_DELIVERY_BOUNDS_AND_LOCATION", "content": "{\n  result :updateDeliveryBoundsAndLocation(id:$id,location:$location,bounds:$bounds){\n    success\n    message\n    data{\n      _id\n      deliveryBounds{\n        coordinates\n      }\n      location{\n        coordinates\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/DeliveryBoundsAndLocation.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:ID!,$bounds:[[[Float!]]],$location:CoordinatesInput!)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id)\n      {\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryBounds{\n        coordinates\n      }\n      username\n      password\n      deliveryTime\n      minimumOrder\n      tax\n      isAvailable\n      stripeDetailsSubmitted\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n      owner{\n        _id\n        email\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/DeliveryBoundsAndLocation.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String)"}, {"type": "query", "name": "GetActiveOrders", "content": "{\n  getActiveOrders(restaurantId:$restaurantId){\n    _id\n    zone{\n      _id\n    }\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n      details\n      label\n    }\n    items{\n      _id\n      title\n      description\n      image\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        description\n        title\n        quantityMinimum\n        quantityMaximum\n      }\n      specialInstructions\n      isActive\n      createdAt\n      updatedAt\n    }\n    user{\n      _id\n      name\n      phone\n      email\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    isPickedUp\n    status\n    paymentStatus\n    reason\n    isActive\n    createdAt\n    deliveryCharges\n    rider{\n      _id\n      name\n      username\n      available\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/DispatchRestaurant.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($restaurantId:ID)"}, {"type": "query", "name": "RidersByZone", "content": "{\n  ridersByZone(id:$id){\n    _id\n    name\n    username\n    password\n    phone\n    available\n    zone{\n      _id\n      title\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dispatch.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "query", "name": "GetActiveOrders", "content": "{\n  getActiveOrders(restaurantId:$restaurantId){\n    _id\n    zone{\n      _id\n    }\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n      details\n      label\n    }\n    items{\n      _id\n      title\n      description\n      image\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        description\n        title\n        quantityMinimum\n        quantityMaximum\n      }\n      specialInstructions\n      isActive\n      createdAt\n      updatedAt\n    }\n    user{\n      _id\n      name\n      phone\n      email\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    isPickedUp\n    status\n    paymentStatus\n    reason\n    isActive\n    createdAt\n    deliveryCharges\n    rider{\n      _id\n      name\n      username\n      available\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dispatch.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($restaurantId:ID)"}, {"type": "mutation", "name": "DeleteCoupon", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Coupons.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id)\n      {\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryBounds{\n        coordinates\n      }\n      username\n      password\n      deliveryTime\n      minimumOrder\n      tax\n      isAvailable\n      stripeDetailsSubmitted\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n      owner{\n        _id\n        email\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/VendorProfile.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "EditRestaurant", "content": "{\n    editRestaurant(restaurant:$restaurantInput){\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      slug\n      address\n      username\n      password\n      location{coordinates}\n      isAvailable\n      minimumOrder\n      tax\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/VendorProfile.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($restaurantInput:RestaurantProfileInput!)"}, {"type": "query", "name": "RestaurantByOwner", "content": "{\n  restaurantByOwner(id:$id){\n  _id\n  email\n  userType\n  restaurants{\n    _id\n    orderId\n    orderPrefix\n    name\n    slug\n    image\n    address\n    username\n    password\n    location{coordinates}\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Restaurant.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id)\n      {\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryBounds{\n        coordinates\n      }\n      username\n      password\n      deliveryTime\n      minimumOrder\n      tax\n      isAvailable\n      stripeDetailsSubmitted\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n      owner{\n        _id\n        email\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Timings.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String)"}, {"type": "query", "name": "Restaurants", "content": "{\n  restaurants{\n    _id\n    name\n    image\n    orderPrefix\n    slug\n    address\n    deliveryTime\n    minimumOrder\n    isActive\n    commissionRate\n    tax\n    owner{\n      _id\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/RestaurantList.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "GetDashboardTotal", "content": "{\n    getDashboardTotal(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      totalOrders\n      totalSales\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($startingDate: String, $endingDate: String,$restaurant:String!)"}, {"type": "query", "name": "GetDashboardOrders", "content": "{\n    getDashboardOrders(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      orders{\n        day\n        count\n      }\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($startingDate: String, $endingDate: String,$restaurant:String!)"}, {"type": "mutation", "name": "ResetPassword", "content": "{\n    resetPassword(password:$password,email:$email){\n      result\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/ForgotPassword.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($password:String!,$email:String!)"}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Configuration.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "DeleteFood", "content": "{\n        deleteFood(id:$id,restaurant:$restaurant,categoryId:$categoryId){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Food.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!,$restaurant:String!,$categoryId:String!)"}, {"type": "mutation", "name": "ownerLogin", "content": "{\n  ownerLogin(email:$email,password:$password){\n    userId\n    token\n    email\n    userType\n    restaurants{\n      _id\n      orderId\n      name\n      image\n      address\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Login.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($email:String!,$password:String!)"}, {"type": "query", "name": "GetWithdrawRequests", "content": "{\n      getAllWithdrawRequests(offset:$offset){\n          success\n          message\n          data{\n            _id\n            requestId\n            requestAmount\n            requestTime\n            rider{\n              _id\n              name\n              currentWalletAmount\n            }\n            status\n          }\n          pagination{\n            total\n          }\n      }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($offset:Int)"}, {"type": "mutation", "name": "UpdateWithdrawRequest", "content": "{\n  updateWithdrawReqStatus(id:$id,status:$status){\n    success\n    message\n    data{\n      rider{\n        _id\n        currentWalletAmount\n      }\n      withdrawRequest{\n        _id\n        status\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:ID!, $status:String!)"}, {"type": "mutation", "name": "DeleteAddon", "content": "{\n        deleteAddon(id:$id,restaurant:$restaurant){\n          _id\n          addons{\n            _id\n            options\n            title\n            description\n            quantityMinimum\n            quantityMaximum\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Addons.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String!,$restaurant:String!)"}, {"type": "query", "name": "Sections", "content": "{\n  sections{\n    _id\n    name\n    enabled\n    restaurants{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Sections.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/views/Category.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "editTipping", "content": "{\n  editTipping(tippingInput:$tippingInput){\n            _id\n            tipVariations\n            enabled\n              }\n            }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Tipping/Tipping.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($tippingInput:TippingInput!)"}, {"type": "mutation", "name": "CreateTipping", "content": "{\n        createTipping(tippingInput:$tippingInput){\n          _id\n          tipVariations\n          enabled\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Tipping/Tipping.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($tippingInput:TippingInput!)"}, {"type": "mutation", "name": "EditRider", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($riderInput:RiderInput!)"}, {"type": "mutation", "name": "CreateZone", "content": "{\n  createZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($zone:ZoneInput!)"}, {"type": "mutation", "name": "EditZone", "content": "{\n  editZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($zone:ZoneInput!)"}, {"type": "query", "name": "Zones", "content": "{\n    zones{\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "query", "name": "Zones", "content": "{\n    zones{\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "CreateCategory", "content": "{\n  createCategory(category:$category){\n    _id\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n        image\n        isActive\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($category:CategoryInput)"}, {"type": "subscription", "name": "SubscribePaceOrder", "content": "{\n    subscribePlaceOrder(restaurant:$restaurant){\n      userId\n      origin\n      order{\n        _id\n        orderId\n        restaurant{\n          _id\n          name\n          image\n          address\n          location{coordinates}\n        }\n        deliveryAddress{\n          location{coordinates}\n          deliveryAddress\n          details\n          label\n        }\n        items{\n          _id\n          title\n          description\n          image\n          quantity\n          variation{\n            _id\n            title\n            price\n            discounted\n          }\n          addons{\n            _id\n            options{\n              _id\n              title\n              description\n              price\n            }\n            description\n            title\n            quantityMinimum\n            quantityMaximum\n          }\n          specialInstructions\n          isActive\n          createdAt\n          updatedAt\n        }\n        user{\n          _id\n          name\n          phone\n          email\n        }\n        paymentMethod\n        paidAmount\n        orderAmount\n        orderStatus\n        status\n        paymentStatus\n        reason\n        isActive\n        createdAt\n        deliveryCharges\n        rider{\n          _id\n          name\n          username\n          available\n        }\n    }\n  }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Order/OrdersData.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($restaurant:String!)"}, {"type": "mutation", "name": "CreateVendor", "content": "{\n    createVendor(vendorInput:$vendorInput){\n      _id\n      email\n      userType\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Vendor/Vendor.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($vendorInput:VendorInput)"}, {"type": "mutation", "name": "EditVendor", "content": "{\n  editVendor(vendorInput:$vendorInput){\n    _id\n    email\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Vendor/Vendor.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($vendorInput:VendorInput)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "editAddon", "content": "{\n  editAddon(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($addonInput:editAddonInput)"}, {"type": "mutation", "name": "CreateOptions", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    options{\n      _id\n      title\n      description\n      price\n    }\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($optionInput:CreateOptionInput)"}, {"type": "mutation", "name": "CreateSection", "content": "{\n  createSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Section/Section.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($section:SectionInput!)"}, {"type": "query", "name": "Coupons", "content": "{\n    coupons {\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}}, {"type": "mutation", "name": "VendorResetPassword", "content": "{\n    vendorResetPassword(oldPassword: $oldPassword, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/ResetPassword/ResetPassword.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($oldPassword: String!, $newPassword: String!)"}, {"type": "mutation", "name": "SaveDeliveryRateConfiguration", "content": "{\n  saveDeliveryRateConfiguration(deliveryRate:$deliveryRate){\n    _id\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/DeliveryRate/DeliveryRate.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($deliveryRate: Float!)"}, {"type": "mutation", "name": "SaveStripeConfiguration", "content": "{\n  saveStripeConfiguration(configurationInput:$configurationInput){\n    _id\n    publishableKey\n    secretKey\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Stripe/Stripe.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($configurationInput:StripeConfigurationInput!)"}, {"type": "mutation", "name": "SavePaypalConfiguration", "content": "{\n  savePaypalConfiguration(configurationInput:$configurationInput){\n    _id\n    clientId\n    clientSecret\n    sandbox\n  }\n}", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Configuration/Paypal/Paypal.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($configurationInput:PaypalConfigurationInput!)"}, {"type": "mutation", "name": "CreateFood", "content": "{\n      createFood(\n          foodInput:$foodInput\n      ){\n        _id\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n        createdAt\n        updatedAt\n      }\n      }\n    }", "metadata": {"commit_hash": "fce866ce6d03fdf42e757da1796acb4b8fa12883", "file": "enatega-multivendor-admin/src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_Marketplace-Food-Delivery-Solution"}, "arguments": "($foodInput:FoodInput!)"}, {"type": "mutation", "name": "productVariantUpdate", "content": "{\n   productVariantUpdate(input: $input) {\n     product {\n       title\n     }\n     productVariant {\n       id\n       price\n     }\n   }\n }", "metadata": {"commit_hash": "dfd9ed5e2f54e77a091f6b15c25d68272e623d8b", "file": "pages/edit-products.js", "repo": "Shopify_shopify-demo-app-node-react"}, "arguments": "($input: ProductVariantInput!)"}, {"type": "query", "name": "getProducts", "content": "{\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "dfd9ed5e2f54e77a091f6b15c25d68272e623d8b", "file": "components/ResourceList.js", "repo": "Shopify_shopify-demo-app-node-react"}, "arguments": "($ids: [ID!]!)"}, {"type": "query", "name": "allReviews", "content": "{\n    allReviews(orderBy: createdAt_DESC) {\n      id\n      slug\n      rating\n      createdAt\n      title\n    }\n  }", "metadata": {"commit_hash": "0e0c08cd4600d3535e4d6651c5ece26b6e42c1f4", "file": "pages/index.js", "repo": "hygraph_example_01_nextjs_apollo"}}, {"type": "query", "name": "allRecords", "content": "{\n    allRecords(orderBy: createdAt_DESC) {\n      id\n      title\n      slug\n      createdAt\n      image: cover {\n        handle\n      }\n    }\n  }", "metadata": {"commit_hash": "0e0c08cd4600d3535e4d6651c5ece26b6e42c1f4", "file": "pages/records.js", "repo": "hygraph_example_01_nextjs_apollo"}}, {"type": "query", "name": "artistDetails", "content": "{\n    artist: Artist(slug: $slug) {\n      id\n      name\n      slug\n      bio\n      picture {\n        handle\n      }\n      records {\n        id\n        title\n        slug\n        image: cover {\n          handle\n        }\n      }\n    }\n}", "metadata": {"commit_hash": "0e0c08cd4600d3535e4d6651c5ece26b6e42c1f4", "file": "pages/artists/details.js", "repo": "hygraph_example_01_nextjs_apollo"}, "arguments": "($slug: String! )"}, {"type": "query", "name": "GetSearchE", "content": "{\n    search_e(id: $id, rid: $rid) {\n      inE {\n        class\n        color\n        count\n        alias\n      }\n      outE {\n        class\n        color\n        count\n        alias\n      }\n    }\n  }", "metadata": {"commit_hash": "c507be725bcade8c618ec274193badbc04909dcb", "file": "studio/webui/src/components/G6SearchGraph/G6Graph/Information/gql.js", "repo": "AISHU-Technology_kweaver"}, "arguments": "($id: ID!, $rid: String!)"}, {"type": "query", "name": "getExpandE", "content": "{\n    expand_e(id: $id, class: $class, io: $io, rid: $rid, page: $page, size: $size) {\n      id\n      class\n      color\n      name\n      alias\n      properties {\n        n\n        v\n      }\n      inV {\n        id\n        class\n        color\n        name\n        expand\n        analysis\n        alias\n        properties {\n          n\n          v\n        }\n      }\n      outV {\n        id\n        class\n        color\n        name\n        expand\n        analysis\n        alias\n        properties {\n          n\n          v\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c507be725bcade8c618ec274193badbc04909dcb", "file": "studio/webui/src/components/G6SearchGraph/G6Graph/Information/gql.js", "repo": "AISHU-Technology_kweaver"}, "arguments": "($id: ID!, $class: String!, $io: String!, $rid: String!, $page: Int = 1, $size: Int = -1)"}, {"type": "mutation", "name": "checkoutCustomerAssociateV2", "content": "{\n        checkoutCustomerAssociateV2(checkoutId: $checkoutId, customerAccessToken: $customerAccessToken) {\n            userErrors {\n                field\n                message\n            }\n            checkout {\n                ...ReturnFieldsCheckout\n            }\n            customer {\n                id\n            }\n        }\n    }\n    ${ReturnFieldsCheckout}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/AddToCart.js", "repo": "gil--_gatsby-starter-shopifypwa"}, "arguments": "($checkoutId: ID!, $customerAccessToken: String!)"}, {"type": "mutation", "name": "checkoutLineItemsRemove", "content": "{\n        checkoutLineItemsRemove(checkoutId: $checkoutId, lineItemIds: $lineItemIds) {\n            userErrors {\n                field\n                message\n            }\n            checkout {\n                ...ReturnFieldsCheckout\n            }\n        }\n    }\n    ${ReturnFieldsCheckout}", "metadata": {"commit_hash": "192b887683af993a96066dd58fed0a7b7d9a00e6", "file": "src/components/checkout/RemoveProduct.js", "repo": "gil--_gatsby-starter-shopifypwa"}, "arguments": "($checkoutId: ID!, $lineItemIds: [ID!]!)"}, {"type": "query", "name": "blocks", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "f7ad9b622ab5a2a96cf6cbf2cf1fde3ef7911252", "file": "src/components/ticker.js", "repo": "Uniswap_org-v1"}, "arguments": "($timestamp: Int!)"}, {"type": "query", "name": "$", "content": "{routeName} {\n      ...${fragmentName /*eslint-disable-line*/}\n    }\n    ${fragment}", "metadata": {"commit_hash": "70840c85c462b6676380dfe94892e2b78e7499f4", "file": "client/src/GraphQLRoute.js", "repo": "graphile_bootstrap-react-apollo"}}, {"type": "mutation", "name": "ForgotPassword", "content": "{\n    forgotPassword(input: { email: $email }) {\n      success\n    }\n  }", "metadata": {"commit_hash": "70840c85c462b6676380dfe94892e2b78e7499f4", "file": "client/src/components/ForgotPasswordPage.js", "repo": "graphile_bootstrap-react-apollo"}, "arguments": "($email: String!)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(input: { username: $username, password: $password }) {\n      user {\n        nodeId\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "70840c85c462b6676380dfe94892e2b78e7499f4", "file": "client/src/components/LoginPage.js", "repo": "graphile_bootstrap-react-apollo"}, "arguments": "($username: String!, $password: String!)"}, {"type": "mutation", "name": "VerifyUserEmail", "content": "{\n    verifyUserEmail(input: { token: $token }) {\n      userEmail {\n        nodeId\n        isVerified\n      }\n    }\n  }", "metadata": {"commit_hash": "70840c85c462b6676380dfe94892e2b78e7499f4", "file": "client/src/components/VerifyUserEmailPage.js", "repo": "graphile_bootstrap-react-apollo"}, "arguments": "($token: String!)"}, {"type": "query", "name": "HeroName", "content": "{\n    hero {\n      name\n    }\n  }", "metadata": {"commit_hash": "d2fe4441d6b7701626f652c326bd8d9433abdf88", "file": "packages/graphql-types-generator/test/fixtures/starwars/gqlQueries.js", "repo": "aws-amplify_amplify-codegen"}}, {"type": "query", "name": "Test", "content": "{\n    foo(id: $id) {\n      bar\n    }\n  }", "metadata": {"commit_hash": "70937795396931ac4c0a7c16db40e168fa2da38a", "file": "src/__tests__/index.ts", "repo": "apollographql_apollo-link-persisted-queries"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "B", "content": "{\n    a\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/presets/near-operation-file/tests/fixtures/issue-6439.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "MyFeed", "content": "{\n          feed {\n            ...FeedWithRepository\n          }\n        }\n\n        ${feedWithRepository}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/plugins/typescript/react-apollo/tests/react-apollo.spec.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "MyFeed", "content": "{\n          feed {\n            ...FeedWithRepository\n          }\n        }\n\n        ${feedWithRepository}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "packages/plugins/typescript/vue-apollo-smart-ops/tests/vue-apollo-smart-ops.spec.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "Comment", "content": "{\n    currentUser {\n      login\n      html_url\n    }\n    entry(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      comments(limit: $limit, offset: $offset) {\n        ...CommentsPageComment\n      }\n      commentCount\n      repository {\n        full_name\n        html_url\n        ... on Repository {\n          description\n          open_issues_count\n          stargazers_count\n        }\n      }\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $limit: Int, $offset: Int)"}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "Feed", "content": "{\n    currentUser {\n      login\n    }\n    feed(type: $type, offset: $offset, limit: $limit) {\n      ...FeedEntry\n    }\n  }\n  ${FeedEntryFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApollo.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($type: FeedType!, $offset: Int, $limit: Int)"}, {"type": "mutation", "name": "submitComment", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "query", "name": "Comment", "content": "{\n    currentUser {\n      login\n      html_url\n    }\n    entry(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      comments(limit: $limit, offset: $offset) {\n        ...CommentsPageComment\n      }\n      commentCount\n      repository {\n        full_name\n        html_url\n        ... on Repository {\n          description\n          open_issues_count\n          stargazers_count\n        }\n      }\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $limit: Int, $offset: Int)"}, {"type": "query", "name": "Feed", "content": "{\n    currentUser {\n      login\n    }\n    feed(type: $type, offset: $offset, limit: $limit) {\n      ...FeedEntry\n    }\n  }\n  ${FeedEntryFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($type: FeedType!, $offset: Int, $limit: Int)"}, {"type": "mutation", "name": "submitRepository", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.vueApolloSmartOps.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/jit-sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/jit-sdk.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "mutation", "name": "submitRepository", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "mutation", "name": "vote", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.apolloAngular.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $type: VoteType!)"}, {"type": "mutation", "name": "Approve", "content": "{\n    approve(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/test-message/documents.ts", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($id: ID!)"}, {"type": "subscription", "name": "onCommentAdded", "content": "{\n    commentAdded(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "query", "name": "Comment", "content": "{\n    currentUser {\n      login\n      html_url\n    }\n    entry(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      comments(limit: $limit, offset: $offset) {\n        ...CommentsPageComment\n      }\n      commentCount\n      repository {\n        full_name\n        html_url\n        ... on Repository {\n          description\n          open_issues_count\n          stargazers_count\n        }\n      }\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.preResolveTypes.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $limit: Int, $offset: Int)"}, {"type": "subscription", "name": "onCommentAdded", "content": "{\n    commentAdded(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.customSuffix.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "query", "name": "Feed", "content": "{\n    currentUser {\n      login\n    }\n    feed(type: $type, offset: $offset, limit: $limit) {\n      ...FeedEntry\n    }\n  }\n  ${FeedEntryFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.customSuffix.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($type: FeedType!, $offset: Int, $limit: Int)"}, {"type": "mutation", "name": "submitRepository", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.customSuffix.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "query", "name": "Comment", "content": "{\n    currentUser {\n      login\n      html_url\n    }\n    entry(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      comments(limit: $limit, offset: $offset) {\n        ...CommentsPageComment\n      }\n      commentCount\n      repository {\n        full_name\n        html_url\n        ... on Repository {\n          description\n          open_issues_count\n          stargazers_count\n        }\n      }\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.v2.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $limit: Int, $offset: Int)"}, {"type": "mutation", "name": "submitRepository", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.v2.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "mutation", "name": "vote", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.v2.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $type: VoteType!)"}, {"type": "query", "name": "Comment", "content": "{\n    currentUser {\n      login\n      html_url\n    }\n    entry(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      comments(limit: $limit, offset: $offset) {\n        ...CommentsPageComment\n      }\n      commentCount\n      repository {\n        full_name\n        html_url\n        ... on Repository {\n          description\n          open_issues_count\n          stargazers_count\n        }\n      }\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.urql.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $limit: Int, $offset: Int)"}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.urql.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.urql.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "mutation", "name": "vote", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.urql.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $type: VoteType!)"}, {"type": "subscription", "name": "onCommentAdded", "content": "{\n    commentAdded(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.hooks.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "query", "name": "Feed", "content": "{\n    currentUser {\n      login\n    }\n    feed(type: $type, offset: $offset, limit: $limit) {\n      ...FeedEntry\n    }\n  }\n  ${FeedEntryFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.hooks.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($type: FeedType!, $offset: Int, $limit: Int)"}, {"type": "mutation", "name": "submitRepository", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.hooks.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "mutation", "name": "vote", "content": "{\n    vote(repoFullName: $repoFullName, type: $type) {\n      score\n      id\n      vote {\n        vote_value\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.hooks.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $type: VoteType!)"}, {"type": "subscription", "name": "onCommentAdded", "content": "{\n    commentAdded(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "query", "name": "CurrentUserForProfile", "content": "{\n    currentUser {\n      login\n      avatar_url\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "mutation", "name": "submitRepository", "content": "{\n    submitRepository(repoFullName: $repoFullName) {\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "mutation", "name": "submitComment", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/types.reactApollo.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "subscription", "name": "onCommentAdded", "content": "{\n    commentAdded(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/__generated__/comment-added.subscription.stencil-component.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!)"}, {"type": "mutation", "name": "submitComment", "content": "{\n    submitComment(repoFullName: $repoFullName, commentContent: $commentContent) {\n      ...CommentsPageComment\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/__generated__/submit-comment.mutation.stencil-component.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "query", "name": "Feed", "content": "{\n    currentUser {\n      login\n    }\n    feed(type: $type, offset: $offset, limit: $limit) {\n      ...FeedEntry\n    }\n  }\n  ${FeedEntryFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/__generated__/feed.query.stencil-component.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($type: FeedType!, $offset: Int, $limit: Int)"}, {"type": "query", "name": "Comment", "content": "{\n    currentUser {\n      login\n      html_url\n    }\n    entry(repoFullName: $repoFullName) {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      comments(limit: $limit, offset: $offset) {\n        ...CommentsPageComment\n      }\n      commentCount\n      repository {\n        full_name\n        html_url\n        ... on Repository {\n          description\n          open_issues_count\n          stargazers_count\n        }\n      }\n    }\n  }\n  ${CommentsPageCommentFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/githunt/__generated__/comment.query.stencil-component.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($repoFullName: String!, $limit: Int, $offset: Int)"}, {"type": "query", "name": "HeroAppearsIn", "content": "{\n    hero {\n      name\n      appearsIn\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}}, {"type": "query", "name": "HeroDetails", "content": "{\n    hero(episode: $episode) {\n      name\n      ... on Human {\n        height\n      }\n      ... on Droid {\n        primaryFunction\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode)"}, {"type": "query", "name": "HeroDetailsWithFragment", "content": "{\n    hero(episode: $episode) {\n      ...HeroDetails\n    }\n  }\n  ${HeroDetailsFragmentDoc}", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode)"}, {"type": "query", "name": "HeroName", "content": "{\n    hero(episode: $episode) {\n      name\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode)"}, {"type": "query", "name": "HeroParentTypeDependentField", "content": "{\n    hero(episode: $episode) {\n      name\n      ... on Human {\n        friends {\n          name\n          ... on Human {\n            height(unit: FOOT)\n          }\n        }\n      }\n      ... on Droid {\n        friends {\n          name\n          ... on Human {\n            height(unit: METER)\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode)"}, {"type": "query", "name": "HeroTypeDependentAliasedField", "content": "{\n    hero(episode: $episode) {\n      ... on Human {\n        property: homePlanet\n      }\n      ... on Droid {\n        property: primaryFunction\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/types.refetchFn.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode)"}, {"type": "query", "name": "HeroTypeDependentAliasedField", "content": "{\n    hero(episode: $episode) {\n      ... on Human {\n        property: homePlanet\n      }\n      ... on Droid {\n        property: primaryFunction\n      }\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/__generated__/HeroTypeDependentAliasedField.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode)"}, {"type": "mutation", "name": "CreateReviewForEpisode", "content": "{\n    createReview(episode: $episode, review: $review) {\n      stars\n      commentary\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/__generated__/CreateReviewForEpisode.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode!, $review: ReviewInput!)"}, {"type": "query", "name": "HeroNameConditionalInclusion", "content": "{\n    hero(episode: $episode) {\n      name @include(if: $includeName)\n    }\n  }", "metadata": {"commit_hash": "6a13cbce50dd56741b9e402b1be2a3bc021ba9a8", "file": "dev-test/star-wars/__generated__/HeroNameConditional.tsx", "repo": "dotansimha_graphql-code-generator-community"}, "arguments": "($episode: Episode, $includeName: Boolean!)"}, {"type": "query", "name": "getThreadMessages", "content": "{\n    thread(id: $id) {\n      ...threadInfo\n      ...threadMessageConnection\n    }\n  }\n  ${threadInfoFragment}\n  ${threadMessageConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/thread/getThreadMessageConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "(\n    $id: ID!\n    $after: String\n    $first: Int\n    $before: String\n    $last: Int\n  )"}, {"type": "query", "name": "getThreadByMatch", "content": "{\n    thread(id: $id) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/thread/getThread.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "loadMoreChannelMembers", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelMemberConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelMemberConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/channel/getChannelMemberConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID, $first: Int, $after: String)"}, {"type": "query", "name": "getChannelThreadConnection", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelThreadConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelThreadConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/channel/getChannelThreadConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID, $after: String)"}, {"type": "query", "name": "getCommunityById", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/community/getCommunity.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCommunityBySlug", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/community/getCommunity.js", "repo": "withspectrum_spectrum"}, "arguments": "($slug: LowercaseString)"}, {"type": "query", "name": "loadMoreCommunityThreads", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityThreadConnection\n    }\n  }\n  ${threadInfoFragment}\n  ${communityInfoFragment}\n  ${communityThreadConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/community/getCommunityThreadConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "(\n    $after: String\n    $id: ID\n    $sort: CommunityThreadConnectionSort\n  )"}, {"type": "query", "name": "getCommunityThreadConnection", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityThreadConnection\n    }\n  }\n  ${threadInfoFragment}\n  ${communityInfoFragment}\n  ${communityThreadConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/community/getCommunityThreadConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "(\n    $id: ID\n    $after: String\n    $sort: CommunityThreadConnectionSort\n  )"}, {"type": "query", "name": "getCommunitiesCollection", "content": "{\n    communities(curatedContentType: $curatedContentType) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/community/getCommunities.js", "repo": "withspectrum_spectrum"}, "arguments": "($curatedContentType: String)"}, {"type": "query", "name": "loadMoreCommunityMembers", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityMembers\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityMembersFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/community/getCommunityMembers.js", "repo": "withspectrum_spectrum"}, "arguments": "(\n    $id: ID\n    $after: String\n    $first: Int\n    $filter: MembersFilter\n  )"}, {"type": "query", "name": "getCommunityChannels", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/community/getCommunityChannelConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getUserThreadConnection", "content": "{\n    user(id: $id) {\n      ...userInfo\n      ...userThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userThreadConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/user/getUserThreadConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "(\n    $id: ID\n    $after: String\n    $kind: ThreadConnectionType\n  )"}, {"type": "query", "name": "getUserGithubProfile", "content": "{\n    user(id: $id) {\n      id\n      username\n      githubProfile {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/user/getUserGithubProfile.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getUserByUsername", "content": "{\n    user(username: $username) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/user/getUser.js", "repo": "withspectrum_spectrum"}, "arguments": "($username: LowercaseString)"}, {"type": "query", "name": "loadMoreDirectMessageThreads", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userDirectMessageThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userDirectMessageThreadsConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/directMessageThread/getCurrentUserDMThreadConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "($after: String)"}, {"type": "query", "name": "loadMoreMessages", "content": "{\n    directMessageThread(id: $id) {\n      ...directMessageThreadInfo\n      ...directMessageThreadMessageConnection\n    }\n  }\n  ${directMessageThreadInfoFragment}\n  ${directMessageThreadMessageConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/directMessageThread/getDirectMessageThreadMessageConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID!, $after: String)"}, {"type": "query", "name": "getDirectMessageThreadMessages", "content": "{\n    directMessageThread(id: $id) {\n      ...directMessageThreadInfo\n      ...directMessageThreadMessageConnection\n    }\n  }\n  ${directMessageThreadInfoFragment}\n  ${directMessageThreadMessageConnectionFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/directMessageThread/getDirectMessageThreadMessageConnection.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID!, $after: String)"}, {"type": "query", "name": "getDirectMessageThread", "content": "{\n    directMessageThread(id: $id) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/directMessageThread/getDirectMessageThread.js", "repo": "withspectrum_spectrum"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getComposerCommunitiesAndChannels", "content": "{\n    user: currentUser {\n      ...userInfo\n      communityConnection {\n        edges {\n          node {\n            id\n            name\n            slug\n            profilePhoto\n            communityPermissions {\n              isMember\n              isBlocked\n              isOwner\n              isModerator\n            }\n          }\n        }\n      }\n      channelConnection {\n        edges {\n          node {\n            id\n            name\n            slug\n            isDefault\n            isPrivate\n            isArchived\n            community {\n              id\n            }\n            channelPermissions {\n              isMember\n              isPending\n              isBlocked\n              isOwner\n              isModerator\n            }\n          }\n        }\n      }\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/queries/composer/getComposerCommunitiesAndChannels.js", "repo": "withspectrum_spectrum"}}, {"type": "mutation", "name": "deleteCommunity", "content": "{\n    deleteCommunity(communityId: $communityId)\n  }", "metadata": {"commit_hash": "e8ebdcbba829ce067dd4e4b21c631b093299ef07", "file": "shared/graphql/mutations/community/deleteCommunity.js", "repo": "withspectrum_spectrum"}, "arguments": "($communityId: ID!)"}, {"type": "mutation", "name": "createTodo", "content": "{\n    createTodo(input: {title: $title, description: $description, version: $version, completed: $completed}) {\n      id\n      title\n      description\n      version\n      completed\n    }\n  }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "examples/react-native/src/gql/queries.js", "repo": "aerogear_offix"}, "arguments": "($description: String, $title: String, $version: Int!, $completed: Boolean)"}, {"type": "subscription", "name": "newTodo", "content": "{\n    newTodo {\n      id\n      title\n      description\n      version\n      completed\n    }\n  }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "examples/react-native/src/gql/queries.js", "repo": "aerogear_offix"}}, {"type": "subscription", "name": "updatedTodo", "content": "{\n    updatedTodo {\n      id\n      title\n      description\n      version\n      completed\n    }\n  }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "examples/react-native/src/gql/queries.js", "repo": "aerogear_offix"}}, {"type": "subscription", "name": "deletedTodo", "content": "{\n    deletedTodo {\n      id\n    }\n  }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "examples/react-native/src/gql/queries.js", "repo": "aerogear_offix"}}, {"type": "mutation", "name": "create$", "content": "{modelName}($input: Create${modelName}Input!) {\n                    create${modelName}(input: $input) {\n                        ${graphQLFields}\n                    }\n                }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "packages/datastore/src/replication/mutations/buildGraphQLCRUDMutations.ts", "repo": "aerogear_offix"}}, {"type": "mutation", "name": "update$", "content": "{modelName}($input: Mutate${modelName}Input!) {\n                    update${modelName}(input: $input) {\n                        ${graphQLFields}\n                    }\n                }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "packages/datastore/src/replication/mutations/buildGraphQLCRUDMutations.ts", "repo": "aerogear_offix"}}, {"type": "subscription", "name": "updated$", "content": "{modelName}($filter: ${modelName}SubscriptionFilter) {\n              updated${modelName}(filter: $filter) {\n                    ${graphQLFields}\n                }\n            }", "metadata": {"commit_hash": "8b8a475c50ce237d157f033bd118189e6e826912", "file": "packages/datastore/src/replication/subscriptions/buildGraphQLCRUDSubscriptions.ts", "repo": "aerogear_offix"}}, {"type": "query", "name": "Category", "content": "{\n    category(id: $id) {\n      id\n      name\n      articles {\n        id\n        title\n        content\n        image {\n          url\n        }\n        category {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8674ce93fe016737a61bd299d97a8d41147612da", "file": "src/app/apollo/queries/category/articles.js", "repo": "strapi_strapi-starter-angular-blog"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Articles", "content": "{\n    article(id: $id) {\n      id\n      title\n      content\n      image {\n        url\n      }\n      category {\n        id\n        name\n      }\n      published_at\n    }\n  }", "metadata": {"commit_hash": "8674ce93fe016737a61bd299d97a8d41147612da", "file": "src/app/apollo/queries/article/article.js", "repo": "strapi_strapi-starter-angular-blog"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Articles", "content": "{\n    articles {\n      id\n      title\n      category {\n        id\n        name\n      }\n      image {\n        url\n      }\n    }\n  }", "metadata": {"commit_hash": "8674ce93fe016737a61bd299d97a8d41147612da", "file": "src/app/apollo/queries/article/articles.js", "repo": "strapi_strapi-starter-angular-blog"}}, {"type": "query", "name": "PairsVolume", "content": "{\n    pairVolumes: pairs(first: $limit, where: { id_in: $pairIds }, block: { number: $blockNumber }) {\n      id\n      volumeToken0\n      volumeToken1\n    }\n  }", "metadata": {"commit_hash": "8bcfc4591ba8c5fb2d79e2399259bdee980e81bb", "file": "src/v2/apollo/queries.ts", "repo": "Uniswap_api-deprecated"}, "arguments": "($limit: Int!, $pairIds: [ID!]!, $blockNumber: Int!)"}, {"type": "query", "name": "SwapsByTokens", "content": "{\n    pairs(where: { token0: $token0, token1: $token1 }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "8bcfc4591ba8c5fb2d79e2399259bdee980e81bb", "file": "src/v2/apollo/queries.ts", "repo": "Uniswap_api-deprecated"}, "arguments": "($token0: String!, $token1: String!)"}, {"type": "mutation", "name": "removeCouponFromBasket", "content": "{\n        removeCouponFromBasket(couponItemId: $couponItemId) {\n            ${basketQuery}\n        }\n    }", "metadata": {"commit_hash": "d75976ca5a5746fe56fe814655bb3c33e88b042d", "file": "packages/storefront-lwc/src/modules/commerce/coupons/gqlMutations.js", "repo": "SalesforceCommerceCloud_sfcc-sample-apps"}, "arguments": "($couponItemId: String!)"}, {"type": "query", "name": "GetProducts", "content": "{\n    products(after: $cursor, first: $perPage, channel: $channel) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      edges {\n        node {\n          id\n          name\n          slug\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "52ea1dd236433466b7506c286c2f82488d35d883", "file": "src/sitemap/queries.ts", "repo": "saleor_saleor-storefront"}, "arguments": "($cursor: String, $perPage: Int, $channel: String)"}, {"type": "query", "name": "GetCollections", "content": "{\n    collections(after: $cursor, first: $perPage, channel: $channel) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      edges {\n        node {\n          id\n          name\n          slug\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "52ea1dd236433466b7506c286c2f82488d35d883", "file": "src/sitemap/queries.ts", "repo": "saleor_saleor-storefront"}, "arguments": "($cursor: String, $perPage: Int, $channel: String)"}, {"type": "query", "name": "Pages", "content": "{\n    pages(first: 50) {\n      edges {\n        node {\n          id\n          slug\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "52ea1dd236433466b7506c286c2f82488d35d883", "file": "src/views/Article/query.ts", "repo": "saleor_saleor-storefront"}}, {"type": "mutation", "name": "AccountConfirm", "content": "{\n    confirmAccount(email: $email, token: $token) {\n      errors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "52ea1dd236433466b7506c286c2f82488d35d883", "file": "src/views/Account/mutations.ts", "repo": "saleor_saleor-storefront"}, "arguments": "($email: String!, $token: String!)"}, {"type": "mutation", "name": "RegisterAccount", "content": "{\n    accountRegister(\n      input: {\n        email: $email\n        password: $password\n        redirectUrl: $redirectUrl\n        channel: $channel\n      }\n    ) {\n      errors {\n        field\n        message\n      }\n      requiresConfirmation\n    }\n  }", "metadata": {"commit_hash": "52ea1dd236433466b7506c286c2f82488d35d883", "file": "src/components/OverlayManager/Login/queries.ts", "repo": "saleor_saleor-storefront"}, "arguments": "(\n    $email: String!\n    $password: String!\n    $redirectUrl: String\n    $channel: String\n  )"}, {"type": "query", "name": "SearchResults", "content": "{\n    products(filter: { search: $query }, channel: $channel, first: 20) {\n      edges {\n        node {\n          id\n          name\n          slug\n          thumbnail {\n            url\n            alt\n          }\n          thumbnail2x: thumbnail(size: 510) {\n            url\n          }\n          category {\n            id\n            name\n          }\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }", "metadata": {"commit_hash": "52ea1dd236433466b7506c286c2f82488d35d883", "file": "src/components/OverlayManager/Search/queries.ts", "repo": "saleor_saleor-storefront"}, "arguments": "($query: String!, $channel: String)"}, {"type": "mutation", "name": "clearNotification", "content": "{\n    clearNotification @client\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/gql.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "sendNotification", "content": "{\n    sendNotification(\n      title: $title\n      content: $content\n      color: $color\n      icon: $icon\n      instanceName: $instanceName\n    ) @client {\n      title\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/gql.js", "repo": "kyma-project_console"}, "arguments": "(\n    $title: String!\n    $content: String!\n    $color: String!\n    $icon: String!\n    $instanceName: String!\n  )"}, {"type": "mutation", "name": "registerApplication", "content": "{\n    registerApplication(in: $in) {\n      name\n      providerName\n      description\n      labels\n      id\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Applications/gql.js", "repo": "kyma-project_console"}, "arguments": "($in: ApplicationRegisterInput!)"}, {"type": "query", "name": "applications", "content": "{\n    applications(filter: $filter) {\n      data {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Applications/gql.js", "repo": "kyma-project_console"}, "arguments": "($filter: [LabelFilter!])"}, {"type": "mutation", "name": "addPackage", "content": "{\n    addPackage(applicationID: $applicationId, in: $in) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/ApiPackages/gql.js", "repo": "kyma-project_console"}, "arguments": "($applicationId: ID!, $in: PackageCreateInput!)"}, {"type": "mutation", "name": "deleteApi", "content": "{\n    deleteAPIDefinition(id: $id) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Api/gql.js", "repo": "kyma-project_console"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "deleteApplicationLabel", "content": "{\n    deleteApplicationLabel(applicationID: $id, key: \"scenarios\") {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Application/gql.js", "repo": "kyma-project_console"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "requestOneTimeTokenForApplication", "content": "{\n    requestOneTimeTokenForApplication(id: $id) {\n      rawEncoded\n      legacyConnectorURL\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Application/gql.js", "repo": "kyma-project_console"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetRuntimes", "content": "{\n    runtimes(first: 30, after: $after) {\n      data {\n        id\n        name\n        description\n        status {\n          condition\n        }\n        labels\n      }\n      totalCount\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Runtimes/gql.js", "repo": "kyma-project_console"}, "arguments": "($after: PageCursor)"}, {"type": "mutation", "name": "setRuntimeLabel", "content": "{\n    setRuntimeLabel(runtimeID: $id, key: \"scenarios\", value: $scenarios) {\n      key\n      value\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "compass/src/components/Runtimes/gql.js", "repo": "kyma-project_console"}, "arguments": "($id: ID!, $scenarios: Any!)"}, {"type": "query", "name": "configMap", "content": "{\n    configMap(name: $name, namespace: $namespace) {\n      json\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($name: String!, $namespace: String!)"}, {"type": "subscription", "name": "triggerEvent", "content": "{\n    triggerEvent(namespace: $namespace, serviceName: $serviceName) {\n      type\n      trigger {\n        name\n        namespace\n        spec {\n          broker\n          filter\n          port\n          path\n        }\n        status {\n          reason\n          status\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/subscriptions.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!, $serviceName: String!)"}, {"type": "mutation", "name": "deleteFunction", "content": "{\n    deleteFunction(namespace: $namespace, function: $function) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $namespace: String!\n    $function: FunctionMetadataInput!\n  )"}, {"type": "mutation", "name": "updateGitRepository", "content": "{\n    updateGitRepository(namespace: $namespace, name: $name, spec: $spec) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $namespace: String!\n    $name: String!\n    $spec: GitRepositorySpecInput!\n  )"}, {"type": "mutation", "name": "createManyTriggers", "content": "{\n    createManyTriggers(\n      namespace: $namespace\n      triggers: $triggers\n      ownerRef: $ownerRef\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $namespace: String!\n    $triggers: [TriggerCreateInput!]!\n    $ownerRef: [OwnerReferenceInput!]\n  )"}, {"type": "mutation", "name": "deleteTrigger", "content": "{\n    deleteTrigger(namespace: $namespace, triggerName: $triggerName) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/components/Lambdas/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!, $triggerName: String!)"}, {"type": "query", "name": "Service", "content": "{\n    service(name: $name, namespace: $namespace) {\n      name\n      json\n      labels\n      clusterIP\n      UID\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($name: String!, $namespace: String!)"}, {"type": "query", "name": "ServiceInstances", "content": "{\n    serviceInstances(namespace: $namespace, status: $status) {\n      name\n      bindable\n      servicePlan {\n        bindingCreateParameterSchema\n      }\n      serviceBindings {\n        items {\n          name\n          parameters\n          secret {\n            name\n            data\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!, $status: InstanceStatusType)"}, {"type": "query", "name": "Services", "content": "{\n    services(namespace: $namespace, excludedLabels: $excludedLabels) {\n      name\n      clusterIP\n      creationTimestamp\n      labels\n      ports {\n        port\n        serviceProtocol\n      }\n      json\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!, $excludedLabels: [String!])"}, {"type": "query", "name": "APIRules", "content": "{\n    APIRules(namespace: $namespace, serviceName: $serviceName) {\n      name\n      generation\n      spec {\n        rules {\n          path\n          methods\n          accessStrategies {\n            name\n            config\n          }\n        }\n        service {\n          host\n          name\n          port\n        }\n      }\n      status {\n        apiRuleStatus {\n          code\n          description\n        }\n      }\n      ownerSubscription {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!, $serviceName: String)"}, {"type": "query", "name": "oAuthClients", "content": "{\n    oAuth2Clients(namespace: $namespace) {\n      name\n      error {\n        code\n        description\n      }\n      spec {\n        secretName\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!)"}, {"type": "query", "name": "oAuthClient", "content": "{\n    oAuth2Client(namespace: $namespace, name: $name) {\n      name\n      namespace\n      generation\n      error {\n        code\n        description\n      }\n      spec {\n        grantTypes\n        responseTypes\n        scope\n        secretName\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!, $name: String!)"}, {"type": "query", "name": "secrets", "content": "{\n    secrets(namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!)"}, {"type": "query", "name": "roleBindings", "content": "{\n    roleBindings(namespace: $namespace) {\n      name\n      roleRef {\n        name\n        kind\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!)"}, {"type": "query", "name": "roles", "content": "{\n    roles(namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!)"}, {"type": "query", "name": "clusterRole", "content": "{\n    clusterRole(name: $name) {\n      name\n      rules {\n        apiGroups\n        resources\n        verbs\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/queries.js", "repo": "kyma-project_console"}, "arguments": "($name: String!)"}, {"type": "subscription", "name": "Deployments", "content": "{\n    deploymentEvent(namespace: $namespace) {\n      type\n      deployment {\n        name\n        status {\n          replicas\n          readyReplicas\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/subscriptions.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!)"}, {"type": "subscription", "name": "secretEvent", "content": "{\n    secretEvent(namespace: $namespace) {\n      type\n      secret {\n        name\n        type\n        labels\n        creationTime\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/subscriptions.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!)"}, {"type": "subscription", "name": "subscriptionSubscription", "content": "{\n    subscriptionSubscription(ownerName: $ownerName, namespace: $namespace) {\n      type\n      subscription {\n        name\n        namespace\n        spec {\n          filter {\n            filters {\n              eventType {\n                property\n                type\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/subscriptions.js", "repo": "kyma-project_console"}, "arguments": "(\n    $ownerName: String!\n    $namespace: String!\n  )"}, {"type": "mutation", "name": "createFunction", "content": "{\n    createFunction(\n      name: $name\n      namespace: $namespace\n      labels: $labels\n      size: $size\n      runtime: $runtime\n    ) {\n      name\n      namespace\n      labels\n      size\n      runtime\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $name: String!\n    $namespace: String!\n    $labels: Labels!\n    $size: String!\n    $runtime: String!\n  )"}, {"type": "mutation", "name": "createLimitRange", "content": "{\n    createLimitRange(\n      namespace: $namespace\n      name: $name\n      limitRange: $limitRange\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $namespace: String!\n    $name: String!\n    $limitRange: LimitRangeInput!\n  )"}, {"type": "mutation", "name": "updateService", "content": "{\n    updateService(name: $name, namespace: $namespace, service: $service) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "($name: String!, $namespace: String!, $service: JSON!)"}, {"type": "mutation", "name": "deleteAPIRule", "content": "{\n    deleteAPIRule(name: $name, namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "($name: String!, $namespace: String!)"}, {"type": "mutation", "name": "updateOAuthClient", "content": "{\n    updateOAuth2Client(\n      name: $name\n      namespace: $namespace\n      generation: $generation\n      params: $params\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $namespace: String!\n    $name: String!\n    $generation: Int!\n    $params: OAuth2ClientSpecInput!\n  )"}, {"type": "mutation", "name": "deleteClusterRoleBinding", "content": "{\n    deleteClusterRoleBinding(name: $name) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "($name: String!)"}, {"type": "mutation", "name": "createRoleBinding", "content": "{\n    createRoleBinding(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $name: String!\n    $namespace: String!\n    $params: RoleBindingInput!\n  )"}, {"type": "mutation", "name": "updateSubscription", "content": "{\n    updateSubscription(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $namespace: String!\n    $name: String!\n    $params: EventSubscriptionSpecInput!\n  )"}, {"type": "mutation", "name": "createSubscription", "content": "{\n    createSubscription(name: $name, namespace: $namespace, params: $params) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "core-ui/src/gql/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $namespace: String!\n    $name: String!\n    $params: EventSubscriptionSpecInput!\n  )"}, {"type": "query", "name": "serviceInstances", "content": "{\n    serviceInstances(namespace: $namespace) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceClassDetails/CreateInstanceModal/queries.js", "repo": "kyma-project_console"}, "arguments": "($namespace: String!)"}, {"type": "mutation", "name": "DeleteServiceBindingUsage", "content": "{\n    deleteServiceBindingUsage(\n      serviceBindingUsageName: $serviceBindingUsageName\n      namespace: $namespace\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceInstanceDetails/ServiceInstanceBindings/mutations.js", "repo": "kyma-project_console"}, "arguments": "(\n    $serviceBindingUsageName: String!\n    $namespace: String!\n  )"}, {"type": "query", "name": "usageKinds", "content": "{\n    usageKinds {\n      name\n      displayName\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "service-catalog-ui/src/components/ServiceInstanceDetails/ServiceInstanceBindings/BindApplicationModal/queries.js", "repo": "kyma-project_console"}}, {"type": "mutation", "name": "updateClusterAddonsConfiguration", "content": "{\n    updateClusterAddonsConfiguration(\n      name: $name\n      urls: $urls\n      labels: $labels\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}, "arguments": "(\n    $name: String!\n    $urls: [String!]!\n    $labels: Labels\n  )"}, {"type": "mutation", "name": "updateAddonsConfiguration", "content": "{\n    updateAddonsConfiguration(\n      name: $name\n      namespace: $namespace\n      urls: $urls\n      labels: $labels\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}, "arguments": "(\n    $name: String!\n    $namespace: String!\n    $urls: [String!]!\n    $labels: Labels\n  )"}, {"type": "mutation", "name": "addAddonsConfigurationURLs", "content": "{\n    addAddonsConfigurationURLs(\n      name: $name\n      namespace: $namespace\n      urls: $urls\n    ) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}, "arguments": "(\n    $name: String!\n    $namespace: String!\n    $urls: [String!]!\n  )"}, {"type": "mutation", "name": "removeClusterAddonsConfigurationURLs", "content": "{\n    removeClusterAddonsConfigurationURLs(name: $name, urls: $urls) {\n      name\n    }\n  }", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Mutations.service.ts", "repo": "kyma-project_console"}, "arguments": "(\n    $name: String!\n    $urls: [String!]!\n  )"}, {"type": "query", "name": "addonsConfigurations", "content": "{\n    addonsConfigurations(namespace: $namespace) {\n      ...AddonsConfiguration\n    }\n  }\n\n  ${ADDONS_CONFIGURATION_FRAGMENT}", "metadata": {"commit_hash": "cd6b2e4a85aeca2e619abb16c869198a563969c0", "file": "add-ons/src/services/Queries.service.ts", "repo": "kyma-project_console"}, "arguments": "($namespace: String!)"}, {"type": "mutation", "name": "createMSA", "content": "{\n    createMSA(input: $input) {\n      ...MSA_ATTRIBUTES\n    }\n  }\n  ${MSA_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/msa.js", "repo": "eea-oasis_baseline"}, "arguments": "($input: inputMSA!)"}, {"type": "query", "name": "getMSAByProposal", "content": "{\n    msaByProposal(proposalId: $proposalId) {\n      ...MSA_ATTRIBUTES\n    }\n  }\n  ${MSA_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/msa.js", "repo": "eea-oasis_baseline"}, "arguments": "($proposalId: String!)"}, {"type": "query", "name": "msa", "content": "{\n    msa(id: $id) {\n      ...MSA_ATTRIBUTES\n    }\n  }\n  ${MSA_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/msa.js", "repo": "eea-oasis_baseline"}, "arguments": "($id: String!)"}, {"type": "query", "name": "getAllProposals", "content": "{\n    proposals {\n      ...PROPOSAL_ATTRIBUTES\n    }\n  }\n  ${PROPOSAL_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/proposal.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "proposal", "content": "{\n    getProposalsByRFPId(rfpId: $rfpId) {\n      ...PROPOSAL_ATTRIBUTES\n    }\n  }\n  ${PROPOSAL_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/proposal.js", "repo": "eea-oasis_baseline"}, "arguments": "($rfpId: String!)"}, {"type": "mutation", "name": "createProposal", "content": "{\n    createProposal(input: $input) {\n      ...PROPOSAL_ATTRIBUTES\n    }\n  }\n  ${PROPOSAL_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/proposal.js", "repo": "eea-oasis_baseline"}, "arguments": "($input: inputProposal!)"}, {"type": "query", "name": "proposal", "content": "{\n    proposal(id: $id) {\n      ...PROPOSAL_ATTRIBUTES\n    }\n  }\n  ${PROPOSAL_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/proposal.js", "repo": "eea-oasis_baseline"}, "arguments": "($id: String!)"}, {"type": "subscription", "name": "onNewRFP", "content": "{\n    newRFP {\n      ...RFP_ATTRIBUTES\n    }\n  }\n  ${RFP_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/rfp.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "getAllRFPs", "content": "{\n    rfps {\n      ...RFP_ATTRIBUTES\n    }\n  }\n  ${RFP_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/rfp.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "createRFP", "content": "{\n    createRFP(input: $input) {\n      ...RFP_ATTRIBUTES\n    }\n  }\n  ${RFP_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/rfp.js", "repo": "eea-oasis_baseline"}, "arguments": "($input: inputRFP!)"}, {"type": "query", "name": "rfp", "content": "{\n    rfp(sku: $sku) {\n      ...RFP_ATTRIBUTES\n    }\n  }\n  ${RFP_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/rfp.js", "repo": "eea-oasis_baseline"}, "arguments": "($sku: String!)"}, {"type": "query", "name": "GetServerSettings", "content": "{\n    getServerSettings {\n      globalRegistryAddress\n      orgRegistryAddress\n      organizationName\n      organizationRole\n      organizationAddress\n      organizationWhisperKey\n      rpcProvider\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/server-settings.js", "repo": "eea-oasis_baseline"}}, {"type": "mutation", "name": "RegisterOrganization", "content": "{\n    registerOrganization(input: $input){\n      organization {\n        name\n        address\n        role\n      }\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/server-settings.js", "repo": "eea-oasis_baseline"}, "arguments": "($input: RegisterOrganization!)"}, {"type": "query", "name": "getAllNotices", "content": "{\n    notices {\n      ...NOTICE_ATTRIBUTES\n    }\n  }\n  ${NOTICE_ATTRIBUTES}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/notices.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "partner", "content": "{\n    partner {\n      name\n      address\n      role\n      identity\n    }\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/partners.js", "repo": "eea-oasis_baseline"}, "arguments": "($address: Address!)"}, {"type": "query", "name": "myPartners", "content": "{\n    name\n    address\n    role\n    identity\n  }", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/partners.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "GetServerStatus", "content": "{\n  serverStatus {\n    balance\n  }\n}", "metadata": {"commit_hash": "0e40e2b9fdcb3684413a7c839d04df995def0343", "file": "examples/deprecated/radish34/ui/src/graphql/server-status.js", "repo": "eea-oasis_baseline"}}, {"type": "query", "name": "accountQuery", "content": "{\n            account(\n                domain: $domain\n                currentAddress: $currentAddress\n            ) {\n                account {\n                    ${requestedFields}\n                }\n                error {\n                    type\n                    key\n                    message\n                    response\n                }\n            }\n        }", "metadata": {"commit_hash": "a47d3d9ea38cd1363ede730998145da663df6091", "file": "packages/extension/src/background/services/GraphQLService/Queries/accountQuery.js", "repo": "AztecProtocol_aztec-v1"}, "arguments": "(\n            $domain: String!\n            $currentAddress: String!\n        )"}, {"type": "mutation", "name": "UpdatePhoto", "content": "{\n        updatePhoto(input: $input, condition: $condition) {\n            id\n            albumId\n            owner\n            uploadTime\n            bucket\n            SfnExecutionArn\n            ProcessingStatus\n        }\n    }", "metadata": {"commit_hash": "856a02a2c036a2e9f8222da10b1d79c45d5c5ed4", "file": "amplify/backend/function/S3Trigger984fb593/src/index.js", "repo": "aws-samples_lambda-refarch-imagerecognition"}, "arguments": "(\n        $input: UpdatePhotoInput!\n        $condition: ModelPhotoConditionInput\n    )"}, {"type": "mutation", "name": "CreatePhoto", "content": "{\n          createPhoto(input: $input, condition: $condition) {\n              id\n              albumId\n              owner\n              bucket\n              fullsize {\n                  key\n                  width\n                  height\n              }\n              thumbnail {\n                  key\n                  width\n                  height\n              }\n              album {\n                  id\n                  name\n                  owner\n              }\n          }\n      }", "metadata": {"commit_hash": "856a02a2c036a2e9f8222da10b1d79c45d5c5ed4", "file": "amplify/backend/function/S3Trigger984fb593/src/reference-index.js", "repo": "aws-samples_lambda-refarch-imagerecognition"}, "arguments": "(\n          $input: CreatePhotoInput!\n          $condition: ModelPhotoConditionInput\n      )"}, {"type": "mutation", "name": "CreateGameMessage", "content": "{\n  createGameMessage(input: $input) {\n    id\n    room\n    action\n    data\n    message\n    createdAt\n  }\n}", "metadata": {"commit_hash": "2529ca149d7f584ede780de1cb695a2f55b7031f", "file": "reinvent-2019/doodlechallenge/amplify/backend/function/S3Triggerc9eade68/src/index.js", "repo": "aws-samples_aws-builders-fair-projects"}, "arguments": "($input: CreateGameMessageInput!)"}, {"type": "query", "name": "Orders", "content": "{\n  orders(offset:$offset){\n    _id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    order_id\n    user{\n      _id\n      phone\n    }\n    \n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    payment_status\n    payment_method\n    order_amount\n    paid_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n    rider{\n      _id\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/context/User.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($offset:Int)"}, {"type": "mutation", "name": "ReviewOrder", "content": "{\n  reviewOrder(reviewInput:{\n    orderId:$orderId,\n    rating:$rating,\n    description:$description\n  }){\n    _id\n    order_id\n    review{\n      _id\n      rating\n      description\n    }\n    createdAt\n    updatedAt\n    is_active\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/RateAndReview/RateAndReview.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "(\n  $orderId:String!,\n  $rating:Int!,\n  $description:String\n)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(facebookId:$facebookId,email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     is_active\n     tokenExpiration\n     name\n     email\n     phone\n   }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Login/Login.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($facebookId:String,$email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)"}, {"type": "mutation", "name": "CreateUser", "content": "{\n      createUser(userInput:{\n          facebookId:$facebookId,\n          phone:$phone,\n          email:$email,\n          password:$password,\n          name:$name,\n          notificationToken:$notificationToken,\n          appleId:$appleId\n      }){\n          userId\n          token\n          tokenExpiration\n          name\n          email\n          phone\n          notificationToken\n      }\n    }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Register/Register.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($facebookId:String,$phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)"}, {"type": "mutation", "name": "SelectAddress", "content": "{\n  selectAddress(id:$id){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/CartAddress/CartAddress.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "UpdateNotificationStatus", "content": "{\n      updateNotificationStatus(offerNotification:$offerNotification,orderNotification:$orderNotification){\n        _id\n        notificationToken\n        is_order_notification\n        is_offer_notification\n      }\n    }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($offerNotification:Boolean!,$orderNotification:Boolean!)"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone,is_active:$is_active}){\n          _id\n          name\n          phone\n          is_active\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Settings/Settings.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($name:String!,$phone:String!,$is_active:Boolean!)"}, {"type": "mutation", "name": "CreateAddress", "content": "{\n  createAddress(addressInput:$addressInput){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/NewAddress/NewAddress.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($addressInput:AddressInput!)"}, {"type": "query", "name": "Orders", "content": "{\n  orders(offset:$offset){\n    _id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    order_id\n    user{\n      _id\n      phone\n    }\n    \n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    payment_status\n    payment_method\n    order_amount\n    paid_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n    rider{\n      _id\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "CustomerApp/src/screens/Cart/Cart.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($offset:Int)"}, {"type": "query", "name": "Rider", "content": "{\n    rider(id:$id){\n      _id\n      name\n      username\n      available\n    }\n  }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/context/user.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "UpdateOrderStatusRider", "content": "{\n    updateOrderStatusRider(id:$id,status:$status){\n      _id\n      order_status\n    }\n  }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/screens/OrderDetail/OrderDetail.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($id:String!,$status:String!)"}, {"type": "mutation", "name": "RiderLogin", "content": "{\n    riderLogin(username:$username,password:$password,notificationToken:$notificationToken){\n      userId\n      token\n    }\n  }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/screens/Login/Login.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($username:String,$password:String,$notificationToken:String)"}, {"type": "query", "name": "Rider", "content": "{\n    rider(id:$id){\n      _id\n      name\n      username\n      available\n    }\n  }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "RiderApp/src/components/Sidebar/Profile/Profile.js", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($id:String)"}, {"type": "query", "name": "Coupons", "content": "{\n        coupons {\n          _id\n          code\n          discount\n          enabled\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Coupons.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "DeleteRider", "content": "{\n        deleteRider(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Riders.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($id:String!)"}, {"type": "query", "name": "GetDashboardTotal", "content": "{\n  getDashboardTotal(starting_date: $startingDate, ending_date: $endingDate){\n    total_orders\n    total_users\n    total_sales\n    total_ratings\n    avg_ratings\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($startingDate: String, $endingDate: String)"}, {"type": "query", "name": "GetDashboardSales", "content": "{\n  getDashboardSales(starting_date: $startingDate, ending_date: $endingDate){\n    orders{\n      day\n      amount\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($startingDate: String, $endingDate: String)"}, {"type": "query", "name": "AllOptions", "content": "{\n  allOptions(page:$page) {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Options.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($page:Int)"}, {"type": "query", "name": "AllAddons", "content": "{\n  allAddons(page:$page){\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n  is_active\n}}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Addons.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($page:Int)"}, {"type": "mutation", "name": "DeleteAddon", "content": "{\n        deleteAddon(id:$id)\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/views/Addons.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "EditRider", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($riderInput:RiderInput!)"}, {"type": "mutation", "name": "EditCategory", "content": "{\n        editCategory(category:{_id:$_id,title:$title,description:$description,img_menu:$img_menu}){_id}\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "( $_id:String,$title:String!,$description:String!,$img_menu:String)"}, {"type": "mutation", "name": "AssignRider", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($id:String!,$riderId:String!)"}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currency_symbol\n    delivery_charges\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "subscription", "name": "SubscribePaceOrder", "content": "{\n  subscribePlaceOrder{\n      order{\n        _id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      order_amount\n      paid_amount\n      payment_method\n      order_id\n      user{\n        _id\n        name\n        email\n        phone\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n          description\n          img_url\n        }\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            price\n          }\n        }\n        quantity\n      }\n      reason\n      status\n      payment_status\n      order_status\n      createdAt\n      review{\n        _id\n        rating\n        description\n      }\n      rider{\n        _id\n        name\n      }\n    }\n    origin\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Order/OrderData.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "editOption", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          title\n          description\n          price\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($optionInput:OptionInput)"}, {"type": "mutation", "name": "editCoupon", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($couponInput:CouponInput!)"}, {"type": "query", "name": "Coupons", "content": "{\n        coupons {\n          _id\n          code\n          discount\n          enabled\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "SaveEmailConfiguration", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    password\n    enable_email\n  }\n}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($configurationInput:EmailConfigurationInput!)"}, {"type": "mutation", "name": "CreateFood", "content": "{\n      createFood(\n          foodInput:$foodInput\n      ){\n        _id\n        title\n        img_url\n        description\n        stock\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons{\n            _id\n            title\n            description\n            quantity_minimum\n            quantity_maximum\n            options{\n              _id\n              title\n              price\n            }\n          }\n        }\n        category{\n          _id\n          title\n      }\n      }\n    }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($foodInput:FoodInput!)"}, {"type": "mutation", "name": "EditFood", "content": "{\n        editFood(\n            foodInput:$foodInput\n        ){\n          _id\n          title\n          img_url\n          description\n          stock\n          tag\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons{\n              _id\n              title\n              description\n              quantity_minimum\n              quantity_maximum\n              options{\n                _id\n                title\n                price\n              }\n            }\n          }\n          category{\n            _id\n            title\n        }\n        }\n      }", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}, "arguments": "($foodInput:FoodInput!)"}, {"type": "query", "name": "Addons", "content": "{\n  addons{\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n}}", "metadata": {"commit_hash": "7eff2614d6d3d978f7207e228f51c3fdd846480f", "file": "Admin Dashboard/src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_Enatega-Restaurant-Solution"}}, {"type": "mutation", "name": "likePost", "content": "{\n    likePost(postId: $postId) {\n      id\n      likes {\n        id\n        username\n      }\n      likeCount\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/components/LikeButton.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}, "arguments": "($postId: ID!)"}, {"type": "mutation", "name": "deletePost", "content": "{\n    deletePost(postId: $postId)\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/components/DeleteButton.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}, "arguments": "($postId: ID!)"}, {"type": "mutation", "name": "deleteComment", "content": "{\n    deleteComment(postId: $postId, commentId: $commentId) {\n      id\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n      commentCount\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/components/DeleteButton.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}, "arguments": "($postId: ID!, $commentId: ID!)"}, {"type": "mutation", "name": "createPost", "content": "{\n    createPost(body: $body) {\n      id\n      body\n      createdAt\n      username\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n    }\n  }", "metadata": {"commit_hash": "1fb0744f4ef1485f2b51009f3c06d2f3295da18e", "file": "Projects/MERN-Stack-App/src/components/PostForm.js", "repo": "SashenJayathilaka_Unique-Project-Ideas"}, "arguments": "($body: String!)"}, {"type": "query", "name": "ListDatasetQualityRules", "content": "{\n      listDatasetQualityRules(datasetUri: $datasetUri, filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          ruleUri\n          name\n          label\n          description\n          created\n          query\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetQualityRule/listDatasetQualityRules.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $datasetUri: String!\n      $filter: DatasetQualityRuleFilter\n    )"}, {"type": "query", "name": "GetDatasetTable", "content": "{\n      getDatasetTable(tableUri: $tableUri) {\n        datasetUri\n        owner\n        created\n        tableUri\n        AwsAccountId\n        GlueTableName\n        profilingJobs {\n          count\n          page\n          pages\n          hasNext\n          hasPrevious\n          nodes {\n            jobUri\n            created\n            status\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/listDatasetTableProfilingJobs.js", "repo": "awslabs_aws-dataall"}, "arguments": "($tableUri: String!)"}, {"type": "mutation", "name": "publishDatasetTableUpdate", "content": "{\n      publishDatasetTableUpdate(tableUri: $tableUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/publishDatasetTableUpdate.js", "repo": "awslabs_aws-dataall"}, "arguments": "($tableUri: String!)"}, {"type": "mutation", "name": "startDatasetProfilingRun", "content": "{\n      startDatasetProfilingRun(input: $input) {\n        profilingRunUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/startProfilingRun.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: StartDatasetProfilingRunInput!)"}, {"type": "query", "name": "PreviewTable", "content": "{\n      previewTable(tableUri: $tableUri, queryExecutionId: $queryExecutionId) {\n        count\n        status\n        queryExecutionId\n        nodes {\n          data\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DatasetTable/previewTable.js", "repo": "awslabs_aws-dataall"}, "arguments": "($tableUri: String!, $queryExecutionId: String)"}, {"type": "query", "name": "countUpVotes", "content": "{\n      countUpVotes(targetUri: $targetUri, targetType: $targetType)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Vote/countUpVotes.js", "repo": "awslabs_aws-dataall"}, "arguments": "($targetUri: String!, $targetType: String!)"}, {"type": "mutation", "name": "DeployScheduledQuery", "content": "{\n      deployScheduledQuery(scheduledQueryUri: $scheduledQueryUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/deployScheduledQuery.js", "repo": "awslabs_aws-dataall"}, "arguments": "($scheduledQueryUri: String!)"}, {"type": "query", "name": "ListScheduledQueryExecutions", "content": "{\n      listScheduledQueryExecutions(scheduledQueryUri: $scheduledQueryUri) {\n        executionArn\n        status\n        startDate\n        stopDate\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/listScheduledQueryExecutions.js", "repo": "awslabs_aws-dataall"}, "arguments": "($scheduledQueryUri: String!)"}, {"type": "mutation", "name": "RunScheduledQuery", "content": "{\n      runScheduledQuery(scheduledQueryUri: $scheduledQueryUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/runScheduledQuery.js", "repo": "awslabs_aws-dataall"}, "arguments": "($scheduledQueryUri: String!)"}, {"type": "mutation", "name": "CreateSavedQuery", "content": "{\n      createSavedQuery(scheduledQueryUri: $scheduledQueryUri, input: $input) {\n        savedQueryUri\n        name\n        label\n        created\n        description\n        tags\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/createSavedQuery.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $scheduledQueryUri: String!\n      $input: NewSavedQueryInput\n    )"}, {"type": "mutation", "name": "UpdateSavedQuery", "content": "{\n      updateSavedQuery(queryUri: $queryUri, input: $input) {\n        savedQueryUri\n        name\n        description\n        label\n        created\n        sqlBody\n        tags\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/updateSavedQuery.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $queryUri: String!\n      $input: ModifySavedQueryInput\n    )"}, {"type": "query", "name": "getSavedQuery", "content": "{\n      getSavedQuery(queryUri: $queryUri) {\n        savedQueryUri\n        name\n        label\n        description\n        owner\n        description\n        sqlBody\n        label\n        created\n        tags\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SavedQuery/getSavedQuery.js", "repo": "awslabs_aws-dataall"}, "arguments": "($queryUri: String!)"}, {"type": "mutation", "name": "RemoveDatasetContributor", "content": "{\n      removeDatasetContributor(datasetUri: $datasetUri, userName: $userName) {\n        datasetUri\n        label\n        userRoleForDataset\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/removeDatasetContributor.js", "repo": "awslabs_aws-dataall"}, "arguments": "($datasetUri: String, $userName: String)"}, {"type": "query", "name": "ListDatasets", "content": "{\n      listDatasets(filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          datasetUri\n          owner\n          description\n          region\n          label\n          created\n          SamlAdminGroupName\n          userRoleForDataset\n          userRoleInEnvironment\n          GlueDatabaseName\n          tags\n          topics\n          organization {\n            organizationUri\n            label\n          }\n          AwsAccountId\n          environment {\n            label\n            AwsAccountId\n            region\n          }\n          stack {\n            status\n          }\n          statistics {\n            tables\n            locations\n            upvotes\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/listDatasets.js", "repo": "awslabs_aws-dataall"}, "arguments": "($filter: DatasetFilter)"}, {"type": "query", "name": "GetDataset", "content": "{\n                getDataset(datasetUri:$datasetUri){\n                    datasetUri\n                    locations(filter:$filer){\n                        count\n                        page\n                        pages\n                        hasNext\n                        hasPrevious\n                        nodes{\n                            locationUri\n                            created\n                            label\n                        }\n                    }\n\n                }\n                    tables(filter:$filter){\n                        count\n                        page\n                        pages\n                        hasNext\n                        hasPrevious\n                        nodes{\n                            datasetUri\n                            tableUri\n                            created\n                            GlueTableName\n                            label\n                        }\n                    }\n\n                }\n            }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/listDatasetObjects.js", "repo": "awslabs_aws-dataall"}, "arguments": "($datasetUri:String!,$filter:DatasetTableFilter)"}, {"type": "query", "name": "GetDataset", "content": "{\n      getDataset(datasetUri: $datasetUri) {\n        datasetUri\n        contributors(filter: $filter) {\n          count\n          page\n          pageSize\n          hasNext\n          hasPrevious\n          pages\n          nodes {\n            userName\n            userRoleForDataset\n            userRoleInEnvironment\n            created\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/listDatasetContributors.js", "repo": "awslabs_aws-dataall"}, "arguments": "($filter: DatasetContributorFilter, $datasetUri: String!)"}, {"type": "query", "name": "GetDataset", "content": "{\n      getDataset(datasetUri: $datasetUri) {\n        tables(filter: $filter) {\n          count\n          page\n          pages\n          hasNext\n          hasPrevious\n          nodes {\n            dataset {\n              datasetUri\n            }\n            terms {\n              nodes {\n                label\n              }\n            }\n            tableUri\n            name\n            created\n            GlueTableName\n            GlueDatabaseName\n            description\n            stage\n            S3Prefix\n            userRoleForTable\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/listDatasetTables.js", "repo": "awslabs_aws-dataall"}, "arguments": "($datasetUri: String!, $filter: DatasetTableFilter)"}, {"type": "mutation", "name": "StartGlueCrawler", "content": "{\n      startGlueCrawler(datasetUri: $datasetUri, input: $input) {\n        Name\n        AwsAccountId\n        region\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/startGlueCrawler.js", "repo": "awslabs_aws-dataall"}, "arguments": "($datasetUri: String, $input: CrawlerInput)"}, {"type": "query", "name": "GetDataset", "content": "{\n      getDataset(datasetUri: $datasetUri) {\n        datasetUri\n        locations(filter: $filter) {\n          count\n          nodes {\n            locationUri\n            created\n            S3Prefix\n            name\n            description\n            created\n            userRoleForStorageLocation\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/listDatasetStorageLocations.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $datasetUri: String!\n      $filter: DatasetStorageLocationFilter\n    )"}, {"type": "mutation", "name": "RemoveTablePermission", "content": "{\n      removeTablePermission(tableUri: $tableUri, userName: $userName)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/removeTablePermission.js", "repo": "awslabs_aws-dataall"}, "arguments": "($tableUri: String!, $userName: String!)"}, {"type": "mutation", "name": "RemoveDatasetLoader", "content": "{\n      removeDatasetLoader(loaderUri: $loaderUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/removeDatasetLoader.js", "repo": "awslabs_aws-dataall"}, "arguments": "($loaderUri: String)"}, {"type": "query", "name": "GetDataset", "content": "{\n      getDataset(datasetUri: $datasetUri) {\n        tables(filter: $filter) {\n          count\n          page\n          pages\n          hasNext\n          hasPrevious\n          nodes {\n            tableUri\n            created\n            GlueTableName\n            GlueDatabaseName\n            description\n            stage\n            userRoleForTable\n            columns {\n              count\n              page\n              pages\n              hasNext\n              hasPrevious\n              nodes {\n                name\n                columnUri\n                label\n                typeName\n                columnType\n              }\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/getDatasetSchema.js", "repo": "awslabs_aws-dataall"}, "arguments": "($datasetUri: String!, $filter: DatasetTableFilter)"}, {"type": "query", "name": "GetDataset", "content": "{\n      getDataset(datasetUri: $datasetUri) {\n        datasetUri\n        loaders(filter: $filter) {\n          count\n          page\n          pageSize\n          hasNext\n          hasPrevious\n          pages\n          nodes {\n            loaderUri\n            description\n            label\n            IAMPrincipalArn\n            description\n            label\n            tags\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/listDatasetLoaders.js", "repo": "awslabs_aws-dataall"}, "arguments": "($filter: DatasetLoaderFilter, $datasetUri: String!)"}, {"type": "mutation", "name": "publishDatasetUpdate", "content": "{\n      publishDatasetUpdate(datasetUri: $datasetUri, s3Prefix: $s3Prefix)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/publishDatasetUpdate.js", "repo": "awslabs_aws-dataall"}, "arguments": "($datasetUri: String!, $s3Prefix: String!)"}, {"type": "mutation", "name": "SaveDatasetSummary", "content": "{\n      saveDatasetSummary(datasetUri: $datasetUri, content: $content)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/saveDatasetSummary.js", "repo": "awslabs_aws-dataall"}, "arguments": "($datasetUri: String!, $content: String)"}, {"type": "mutation", "name": "createDatasetLoader", "content": "{\n      createDatasetLoader(datasetUri: $datasetUri, input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dataset/addDatasetLoader.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $datasetUri: String\n      $input: NewDatasetLoaderInput\n    )"}, {"type": "mutation", "name": "RejectShareObject", "content": "{\n      rejectShareObject(shareUri: $shareUri) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/rejectShareObject.js", "repo": "awslabs_aws-dataall"}, "arguments": "($shareUri: String!)"}, {"type": "query", "name": "getShareRequestsFromMe", "content": "{\n      getShareRequestsFromMe(filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          owner\n          created\n          deleted\n          shareUri\n          status\n          userRoleForShareObject\n          principal {\n            principalId\n            principalType\n            principalName\n            principalIAMRoleName\n            SamlGroupName\n            environmentUri\n            environmentName\n            AwsAccountId\n            region\n            organizationUri\n            organizationName\n          }\n          statistics {\n            sharedItems\n            revokedItems\n            failedItems\n            pendingItems\n          }\n          dataset {\n            datasetUri\n            datasetName\n            SamlAdminGroupName\n            environmentName\n            exists\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/getShareRequestsFromMe.js", "repo": "awslabs_aws-dataall"}, "arguments": "($filter: ShareObjectFilter)"}, {"type": "mutation", "name": "CreateShareObject", "content": "{\n        createShareObject(\n          datasetUri: $datasetUri\n          itemType: $itemType\n          itemUri: $itemUri\n          input: $input\n        ) {\n          shareUri\n          created\n        }\n      }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/createShareObject.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n        $datasetUri: String!\n        $itemType: String\n        $itemUri: String\n        $input: NewShareObjectInput\n      )"}, {"type": "mutation", "name": "approveShareObject", "content": "{\n      approveShareObject(shareUri: $shareUri) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/approveShareObject.js", "repo": "awslabs_aws-dataall"}, "arguments": "($shareUri: String!)"}, {"type": "mutation", "name": "DeleteShareObject", "content": "{\n      deleteShareObject(shareUri: $shareUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/deleteShareObject.js", "repo": "awslabs_aws-dataall"}, "arguments": "($shareUri: String!)"}, {"type": "query", "name": "ListDatasetShareObjects", "content": "{\n      getDataset(datasetUri: $datasetUri) {\n        shares(filter: $filter) {\n          page\n          pages\n          pageSize\n          hasPrevious\n          hasNext\n          count\n          nodes {\n            shareUri\n            created\n            owner\n            status\n            userRoleForShareObject\n            statistics {\n              tables\n              locations\n            }\n            principal {\n              principalId\n              principalType\n              principalName\n              principalIAMRoleName\n              SamlGroupName\n              environmentUri\n              environmentName\n              AwsAccountId\n              region\n              organizationUri\n              organizationName\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ShareObject/listDatasetShareObjects.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $datasetUri: String!\n      $filter: ShareObjectFilter\n    )"}, {"type": "query", "name": "getDataPipelineEnvironment", "content": "{\n      getDataPipelineEnvironment(envPipelineUri: $envPipelineUri) {\n        envPipelineUri       \n        environmentUri\n        environmentLabel\n        pipelineUri\n        pipelineLabel\n        stage\n        region\n        AwsAccountId\n        SamlGroupName\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/getDataPipelineEnvironment.js", "repo": "awslabs_aws-dataall"}, "arguments": "($envPipelineUri: String!)"}, {"type": "mutation", "name": "updateDataPipelineEnvironment", "content": "{\n      updateDataPipelineEnvironment(input: $input) {\n        envPipelineUri\n        environmentUri\n        environmentLabel\n        pipelineUri\n        pipelineLabel\n        stage\n        region\n        AwsAccountId\n        samlGroupName\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/updateDataPipelineEnvironment.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: NewDataPipelineEnvironmentInput)"}, {"type": "mutation", "name": "createDataPipelineEnvironment", "content": "{\n      createDataPipelineEnvironment(input: $input) {\n        envPipelineUri\n        environmentUri\n        environmentLabel\n        pipelineUri\n        pipelineLabel\n        stage\n        region\n        AwsAccountId\n        samlGroupName\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/createDataPipelineEnvironment.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: NewDataPipelineEnvironmentInput)"}, {"type": "query", "name": "ListDataPipelineBranches", "content": "{\n      listDataPipelineBranches(DataPipelineUri: $DataPipelineUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/listDataPipelineBranches.js", "repo": "awslabs_aws-dataall"}, "arguments": "($DataPipelineUri: String!)"}, {"type": "query", "name": "BrowseDataPipelineRepository", "content": "{\n      browseDataPipelineRepository(input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/DataPipeline/browseDataPipelineRepository.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: DataPipelineBrowseInput!)"}, {"type": "query", "name": "listAirflowClusterProjects", "content": "{\n      listAirflowClusterProjects(clusterUri: $clusterUri, filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          projectUri\n          name\n          packageName\n          codeRepositoryName\n          codeRepositoryLink\n          codeRepositoryStatus\n          codePipelineName\n          codePipelineArn\n          codePipelineLink\n          description\n          created\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/listClusterProjects.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $clusterUri: String!\n      $filter: AirflowProjectFilter\n    )"}, {"type": "mutation", "name": "createAirflowClusterProject", "content": "{\n      createAirflowClusterProject(\n        clusterUri: $clusterUri\n        projectInput: $projectInput\n      ) {\n        projectUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/AirflowCluster/createAirflowProject.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $clusterUri: String!\n      $projectInput: NewAirflowProjectInput!\n    )"}, {"type": "query", "name": "SearchPrincipal", "content": "{\n      searchPrincipal(filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          principalId\n          principalType\n          principalName\n          SamlGroupName\n          environmentUri\n          environmentName\n          AwsAccountId\n          region\n          organizationUri\n          organizationName\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Principal/searchPrincipal.js", "repo": "awslabs_aws-dataall"}, "arguments": "($filter: PrincipalFilter)"}, {"type": "mutation", "name": "approveDashboardShare", "content": "{\n      approveDashboardShare(shareUri: $shareUri) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/approveDashboardShare.js", "repo": "awslabs_aws-dataall"}, "arguments": "($shareUri: String!)"}, {"type": "query", "name": "listDashboardShares", "content": "{\n      listDashboardShares(dashboardUri: $dashboardUri, filter: $filter) {\n        count\n        nodes {\n          dashboardUri\n          shareUri\n          SamlGroupName\n          owner\n          created\n          status\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/listDashboardShares.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $dashboardUri: String!\n      $filter: DashboardShareFilter!\n    )"}, {"type": "mutation", "name": "requestDashboardShare", "content": "{\n      requestDashboardShare(\n        dashboardUri: $dashboardUri\n        principalId: $principalId\n      ) {\n        shareUri\n        status\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/requestDashboardShare.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $dashboardUri: String!\n      $principalId: String!\n    )"}, {"type": "query", "name": "searchDashboards", "content": "{\n      searchDashboards(filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          dashboardUri\n          name\n          owner\n          SamlGroupName\n          description\n          label\n          created\n          tags\n          userRoleForDashboard\n          upvotes\n          organization {\n            organizationUri\n            label\n            name\n          }\n          environment {\n            environmentUri\n            name\n            label\n            AwsAccountId\n            region\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/searchDashboards.js", "repo": "awslabs_aws-dataall"}, "arguments": "($filter: DashboardFilter)"}, {"type": "query", "name": "GetDashboard", "content": "{\n      getDashboard(dashboardUri: $dashboardUri) {\n        dashboardUri\n        name\n        owner\n        SamlGroupName\n        description\n        label\n        created\n        tags\n        userRoleForDashboard\n        DashboardId\n        upvotes\n        environment {\n          label\n          region\n        }\n        organization {\n          organizationUri\n          label\n          name\n        }\n        terms {\n          count\n          nodes {\n            nodeUri\n            path\n            label\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Dashboard/getDashboard.js", "repo": "awslabs_aws-dataall"}, "arguments": "($dashboardUri: String!)"}, {"type": "mutation", "name": "deleteNotification", "content": "{\n      deleteNotification(notificationUri: $notificationUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Notification/archiveNotification.js", "repo": "awslabs_aws-dataall"}, "arguments": "($notificationUri: String!)"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n      updateUser(input: $input) {\n        userName\n        userRoleInOrganization\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/updateUserRole.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: ModifyOrganizationUserInput)"}, {"type": "mutation", "name": "ArciveOrg", "content": "{\n      archiveOrganization(organizationUri: $organizationUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/archiveOrganization.js", "repo": "awslabs_aws-dataall"}, "arguments": "($organizationUri: String!)"}, {"type": "query", "name": "listOrganizationGroups", "content": "{\n      listOrganizationGroups(\n        organizationUri: $organizationUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          groupUri\n          invitedBy\n          created\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/listInvitedGroups.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $filter: GroupFilter\n      $organizationUri: String!\n    )"}, {"type": "query", "name": "getOrg", "content": "{\n        getOrganization(organizationUri: $organizationUri) {\n          organizationUri\n          label\n          userRoleInOrganization\n          users(filter: $filter) {\n            count\n            page\n            pageSize\n            pages\n            hasNext\n            hasPrevious\n            nodes {\n              userName\n              created\n              userRoleInOrganization\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/listOrganizationUsers.js", "repo": "awslabs_aws-dataall"}, "arguments": "($organizationUri: String, $filter: OrganizationUserFilter)"}, {"type": "query", "name": "ListOrg", "content": "{\n      listOrganizations(filter: $filter) {\n        count\n        nextPage\n        previousPage\n        pages\n        hasNext\n        hasPrevious\n        pageSize\n        page\n        nodes {\n          organizationUri\n          label\n          name\n          owner\n          created\n          description\n          SamlGroupName\n          tags\n          userRoleInOrganization\n          stats {\n            groups\n            users\n            environments\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/listOrganizations.js", "repo": "awslabs_aws-dataall"}, "arguments": "($filter: OrganizationFilter)"}, {"type": "query", "name": "listOrganizationGroups", "content": "{\n      listOrganizationGroups(\n        organizationUri: $organizationUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          groupUri\n          invitedBy\n          created\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Organization/listOrganizationGroups.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $filter: GroupFilter\n      $organizationUri: String!\n    )"}, {"type": "query", "name": "getEnvironment", "content": "{\n      getEnvironment(environmentUri: $environmentUri) {\n        environmentUri\n        userRoleInEnvironment\n        notMembers(filter: $filter) {\n          count\n          nodes {\n            userName\n            userRoleInEnvironment\n            created\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/listEnvironmentNotMembers.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $filter: OrganizationUserFilter\n      $environmentUri: String\n    )"}, {"type": "query", "name": "getPivotRoleName", "content": "{\n      getPivotRoleName(organizationUri: $organizationUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/getPivotRoleName.js", "repo": "awslabs_aws-dataall"}, "arguments": "($organizationUri: String!)"}, {"type": "query", "name": "GetEnvironment", "content": "{\n      getEnvironment(environmentUri: $environmentUri) {\n        environmentUri\n        created\n        userRoleInEnvironment\n        description\n        name\n        label\n        AwsAccountId\n        dashboardsEnabled\n        notebooksEnabled\n        mlStudiosEnabled\n        pipelinesEnabled\n        warehousesEnabled\n        region\n        owner\n        tags\n        SamlGroupName\n        EnvironmentDefaultBucketName\n        EnvironmentDefaultIAMRoleArn\n        EnvironmentDefaultIAMRoleName\n        EnvironmentDefaultIAMRoleImported\n        resourcePrefix\n        subscriptionsEnabled\n        subscriptionsProducersTopicImported\n        subscriptionsConsumersTopicImported\n        subscriptionsConsumersTopicName\n        subscriptionsProducersTopicName\n        organization {\n          organizationUri\n          label\n          name\n        }\n        stack {\n          stack\n          status\n          stackUri\n          targetUri\n          accountid\n          region\n          stackid\n          link\n          outputs\n          resources\n        }\n        dashboardsEnabled\n        notebooksEnabled\n        mlStudiosEnabled\n        pipelinesEnabled\n        warehousesEnabled\n        networks {\n          VpcId\n          privateSubnetIds\n          publicSubnetIds\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/getEnvironment.js", "repo": "awslabs_aws-dataall"}, "arguments": "($environmentUri: String)"}, {"type": "mutation", "name": "removeConsumptionRoleFromEnvironment", "content": "{\n      removeConsumptionRoleFromEnvironment(\n        environmentUri: $environmentUri\n        consumptionRoleUri: $consumptionRoleUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/removeConsumptionRole.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $environmentUri: String!\n      $consumptionRoleUri: String!\n    )"}, {"type": "query", "name": "getEnvironmentAssumeRoleUrl", "content": "{\n      getEnvironmentAssumeRoleUrl(\n        environmentUri: $environmentUri\n        groupUri: $groupUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/getEnvironmentAssumeRoleUrl.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $environmentUri: String!\n      $groupUri: String\n    )"}, {"type": "query", "name": "SearchEnvironmentDataItems", "content": "{\n      searchEnvironmentDataItems(\n        environmentUri: $environmentUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          shareUri\n          environmentName\n          environmentUri\n          organizationName\n          organizationUri\n          datasetUri\n          datasetName\n          itemType\n          itemAccess\n          GlueDatabaseName\n          GlueTableName\n          S3AccessPointName\n          created\n          principalId\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/listDatasetsPublishedInEnvironment.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $filter: EnvironmentDataItemFilter\n      $environmentUri: String\n    )"}, {"type": "mutation", "name": "removeGroupFromEnvironment", "content": "{\n      removeGroupFromEnvironment(\n        environmentUri: $environmentUri\n        groupUri: $groupUri\n      ) {\n        environmentUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/removeGroup.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $environmentUri: String!\n      $groupUri: String!\n    )"}, {"type": "mutation", "name": "deleteEnvironment", "content": "{\n      deleteEnvironment(\n        environmentUri: $environmentUri\n        deleteFromAWS: $deleteFromAWS\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/archiveEnvironment.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $environmentUri: String!\n      $deleteFromAWS: Boolean\n    )"}, {"type": "query", "name": "listEnvironmentNetworks", "content": "{\n      listEnvironmentNetworks(\n        environmentUri: $environmentUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          VpcId\n          vpcUri\n          label\n          name\n          default\n          SamlGroupName\n          publicSubnetIds\n          privateSubnetIds\n          region\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/listEnvironmentNetworks.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $filter: VpcFilter\n      $environmentUri: String!\n    )"}, {"type": "mutation", "name": "updateGroupEnvironmentPermissions", "content": "{\n      updateGroupEnvironmentPermissions(input: $input) {\n        environmentUri\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/updateGroupEnvironmentPermissions.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $input: InviteGroupOnEnvironmentInput!\n    )"}, {"type": "query", "name": "CheckEnvironment", "content": "{\n      checkEnvironment(input: $input)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/verifyEnvironment.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: AwsEnvironmentInput!)"}, {"type": "query", "name": "listEnvironmentConsumptionRoles", "content": "{\n      listEnvironmentConsumptionRoles(\n        environmentUri: $environmentUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          consumptionRoleUri\n          consumptionRoleName\n          environmentUri\n          groupUri\n          IAMRoleArn\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Environment/listEnvironmentConsumptionRoles.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $filter: ConsumptionRoleFilter\n      $environmentUri: String!\n    )"}, {"type": "query", "name": "runAthenaSqlQuery", "content": "{\n      runAthenaSqlQuery(environmentUri: $environmentUri, worksheetUri: $worksheetUri, sqlQuery: $sqlQuery) {\n        rows {\n          cells {\n            columnName\n            typeName\n            value\n          }\n        }\n        columns {\n          columnName\n          typeName\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/runAthenaSqlQuery.js", "repo": "awslabs_aws-dataall"}, "arguments": "($environmentUri: String!, $worksheetUri: String!, $sqlQuery: String!)"}, {"type": "query", "name": "GetWorksheet", "content": "{\n      getWorksheet(worksheetUri: $worksheetUri) {\n        worksheetUri\n        label\n        description\n        SamlAdminGroupName\n        tags\n        sqlBody\n        chartConfig {\n          dimensions {\n            columnName\n          }\n          measures {\n            columnName\n            aggregationName\n          }\n        }\n        owner\n        created\n        updated\n        userRoleForWorksheet\n        lastSavedQueryResult {\n          AthenaQueryId\n          ElapsedTimeInMs\n          Error\n          DataScannedInBytes\n          Status\n          columns {\n            columnName\n            typeName\n          }\n          rows {\n            cells {\n              value\n              columnName\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/getWorksheet.js", "repo": "awslabs_aws-dataall"}, "arguments": "($worksheetUri: String!)"}, {"type": "mutation", "name": "RemoveWorksheetShare", "content": "{\n      updateWorksheetShare(\n        worksheetShareUri: $worksheetShareUri\n        canEdit: $canEdit\n      ) {\n        worksheetShareUri\n        canEdit\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Worksheet/updateWorksheetShare.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $worksheetShareUri: String!\n      $canEdit: Boolean\n    )"}, {"type": "query", "name": "listRedshiftClusterAvailableDatasetTables", "content": "{\n      listRedshiftClusterAvailableDatasetTables(\n        clusterUri: $clusterUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        count\n        nodes {\n          datasetUri\n          tableUri\n          name\n          label\n          GlueDatabaseName\n          GlueTableName\n          S3Prefix\n          dataset {\n            S3BucketName\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/listAvailableDatasetTables.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $clusterUri: String!\n      $filter: DatasetTableFilter\n    )"}, {"type": "query", "name": "listEnvironmentClusters", "content": "{\n      listEnvironmentClusters(\n        environmentUri: $environmentUri\n        filter: $filter\n      ) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          clusterUri\n          environmentUri\n          name\n          label\n          description\n          tags\n          owner\n          created\n          updated\n          AwsAccountId\n          region\n          clusterArn\n          clusterName\n          created\n          databaseName\n          databaseUser\n          masterUsername\n          masterDatabaseName\n          nodeType\n          numberOfNodes\n          kmsAlias\n          status\n          subnetGroupName\n          CFNStackName\n          CFNStackStatus\n          CFNStackArn\n          port\n          endpoint\n          IAMRoles\n          subnetIds\n          securityGroupIds\n          userRoleForCluster\n          userRoleInEnvironment\n          imported\n          stack {\n            status\n          }\n          vpc\n          organization {\n            organizationUri\n            label\n            name\n          }\n          environment {\n            environmentUri\n            label\n            name\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/listEnvironmentClusters.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $environmentUri: String!\n      $filter: RedshiftClusterFilter\n    )"}, {"type": "mutation", "name": "createRedshiftCluster", "content": "{\n      createRedshiftCluster(\n        environmentUri: $environmentUri\n        clusterInput: $clusterInput\n      ) {\n        clusterUri\n        name\n        label\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/createCluster.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $environmentUri: String!\n      $clusterInput: NewClusterInput!\n    )"}, {"type": "mutation", "name": "disableRedshiftClusterDatasetTableCopy", "content": "{\n      disableRedshiftClusterDatasetTableCopy(\n        clusterUri: $clusterUri\n        datasetUri: $datasetUri\n        tableUri: $tableUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/disableClusterDatasetCopy.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $clusterUri: String\n      $datasetUri: String\n      $tableUri: String\n    )"}, {"type": "query", "name": "getRedshiftClusterConsoleAccess", "content": "{\n      getRedshiftClusterConsoleAccess(clusterUri: $clusterUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/RedshiftCluster/getClusterConsoleAccess.js", "repo": "awslabs_aws-dataall"}, "arguments": "($clusterUri: String!)"}, {"type": "query", "name": "getStack", "content": "{\n      getStack(environmentUri: $environmentUri, stackUri: $stackUri) {\n        status\n        stackUri\n        targetUri\n        accountid\n        region\n        stackid\n        link\n        outputs\n        resources\n        error\n        events\n        name\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Stack/getStack.js", "repo": "awslabs_aws-dataall"}, "arguments": "($environmentUri: String!, $stackUri: String!)"}, {"type": "mutation", "name": "deleteNetwork", "content": "{\n      deleteNetwork(vpcUri: $vpcUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Vpc/deleteNetwork.js", "repo": "awslabs_aws-dataall"}, "arguments": "($vpcUri: String!)"}, {"type": "mutation", "name": "createNetwork", "content": "{\n      createNetwork(input: $input) {\n        vpcUri\n        VpcId\n        label\n        description\n        tags\n        owner\n        SamlGroupName\n        privateSubnetIds\n        privateSubnetIds\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Vpc/createNetwork.js", "repo": "awslabs_aws-dataall"}, "arguments": "($input: NewVpcInput)"}, {"type": "mutation", "name": "StartSagemakerNotebook", "content": "{\n      startSagemakerNotebook(notebookUri: $notebookUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/startNotebookInstance.js", "repo": "awslabs_aws-dataall"}, "arguments": "($notebookUri: String!)"}, {"type": "mutation", "name": "StopSagemakerNotebook", "content": "{\n      stopSagemakerNotebook(notebookUri: $notebookUri)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/stopNotebookInstance.js", "repo": "awslabs_aws-dataall"}, "arguments": "($notebookUri: String!)"}, {"type": "query", "name": "ListSagemakerNotebooks", "content": "{\n      listSagemakerNotebooks(filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          notebookUri\n          name\n          owner\n          description\n          label\n          created\n          tags\n          NotebookInstanceStatus\n          userRoleForNotebook\n          SamlAdminGroupName\n          environment {\n            label\n            name\n            environmentUri\n            AwsAccountId\n            region\n          }\n          organization {\n            label\n            name\n            organizationUri\n          }\n          stack {\n            stack\n            status\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerNotebook/listSagemakerNotebooks.js", "repo": "awslabs_aws-dataall"}, "arguments": "($filter: SagemakerNotebookFilter)"}, {"type": "mutation", "name": "RequestLink", "content": "{\n      requestLink(\n        nodeUri: $nodeUri\n        targetUri: $targetUri\n        targetType: $targetType\n      ) {\n        linkUri\n        created\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/requestLink.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $nodeUri: String!\n      $targetUri: String!\n      $targetType: String!\n    )"}, {"type": "mutation", "name": "UpdateCategory", "content": "{\n      updateCategory(nodeUri: $nodeUri, input: $input) {\n        nodeUri\n        label\n        path\n        readme\n        created\n        owner\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/updateCategory.js", "repo": "awslabs_aws-dataall"}, "arguments": "($nodeUri: String!, $input: UpdateCategoryInput)"}, {"type": "query", "name": "GetTerm", "content": "{\n      getTerm(nodeUri: $nodeUri) {\n        nodeUri\n        label\n        readme\n        created\n        owner\n        status\n        path\n        stats {\n          categories\n          terms\n          associations\n        }\n        associations {\n          count\n          pages\n          hasNext\n          hasPrevious\n          nodes {\n            linkUri\n            targetUri\n            approvedByOwner\n            approvedBySteward\n            target {\n              __typename\n              ... on Dataset {\n                label\n              }\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Glossary/getTerm.js", "repo": "awslabs_aws-dataall"}, "arguments": "($nodeUri: String!)"}, {"type": "query", "name": "ListApiKeys", "content": "{\n      listApiKeys {\n        count\n        nodes {\n          ApiKeyId\n          expires\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ApiKeys/listApiKeys.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "CreateApiKey", "content": "{\n      createApiKey {\n        ApiKeyId\n        ApiKeySecret\n        expires\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/ApiKeys/createApiKey.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "listSagemakerStudioUserProfiles", "content": "{\n      listSagemakerStudioUserProfiles(filter: $filter) {\n        count\n        page\n        pages\n        hasNext\n        hasPrevious\n        nodes {\n          sagemakerStudioUserProfileUri\n          name\n          owner\n          description\n          label\n          created\n          tags\n          sagemakerStudioUserProfileStatus\n          userRoleForSagemakerStudioUserProfile\n          environment {\n            label\n            name\n            environmentUri\n            AwsAccountId\n            region\n            SamlGroupName\n          }\n          organization {\n            label\n            name\n            organizationUri\n          }\n          stack {\n            stack\n            status\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerStudio/listSagemakerStudioUserProfiles.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $filter: SagemakerStudioUserProfileFilter\n    )"}, {"type": "query", "name": "getSagemakerStudioUserProfilePresignedUrl", "content": "{\n      getSagemakerStudioUserProfilePresignedUrl(\n        sagemakerStudioUserProfileUri: $sagemakerStudioUserProfileUri\n      )\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/SagemakerStudio/getSagemakerStudioUserProfilePresignedUrl.js", "repo": "awslabs_aws-dataall"}, "arguments": "(\n      $sagemakerStudioUserProfileUri: String!\n    )"}, {"type": "query", "name": "getMonitoringVPCConnectionId", "content": "{\n      getMonitoringVPCConnectionId\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/getMonitoringVPCConnectionId.js", "repo": "awslabs_aws-dataall"}}, {"type": "query", "name": "getMonitoringDashboardId", "content": "{\n      getMonitoringDashboardId\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/getMonitoringDashboardId.js", "repo": "awslabs_aws-dataall"}}, {"type": "mutation", "name": "updateSSMParameter", "content": "{\n      updateSSMParameter(name: $name, value: $value)\n    }", "metadata": {"commit_hash": "a3a6bdeb16dca6c815494a3604afefc5dc760a6c", "file": "frontend/src/api/Tenant/updateSSMParameter.js", "repo": "awslabs_aws-dataall"}, "arguments": "($name: String!, $value: String!)"}, {"type": "query", "name": "usersPaginateQuery", "content": "{\n    users(\n      options: { limit: $first, skip: $offset, sort: $orderBy }\n      where: $filter\n    ) {\n      id: userId\n      name\n      avgStars\n      numReviews\n    }\n  }", "metadata": {"commit_hash": "02d98e091b43a073bbadd7ae87c456d8f4f737ea", "file": "web-react/src/components/UserList.js", "repo": "grand-stack_grand-stack-starter"}, "arguments": "(\n    $first: Int\n    $offset: Int\n    $orderBy: [UserSort]\n    $filter: UserWhere\n  )"}, {"type": "query", "name": "usersPaginateQuery", "content": "{\n    users(\n      options: { limit: $first, skip: $offset, sort: $orderBy }\n      where: $filter\n    ) {\n      id: userId\n      name\n      avgStars\n      numReviews\n    }\n  }", "metadata": {"commit_hash": "02d98e091b43a073bbadd7ae87c456d8f4f737ea", "file": "web-react-ts/src/components/UserList.tsx", "repo": "grand-stack_grand-stack-starter"}, "arguments": "(\n    $first: Int\n    $offset: Int\n    $orderBy: [UserSort]\n    $filter: UserWhere\n  )"}, {"type": "mutation", "name": "DeletePersonalAccessToken", "content": "{\n  deletePersonalAccessToken: deleteAuthRefreshToken(id: $patId) {\n    id\n    metadata\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($patId: uuid!)"}, {"type": "query", "name": "GetPostgresSettings", "content": "{\n  systemConfig(appID: $appId) {\n    postgres {\n      database\n    }\n  }\n  config(appID: $appId, resolve: true) {\n    id: __typename\n    __typename\n    postgres {\n      version\n    }\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!)"}, {"type": "mutation", "name": "ResetDatabasePassword", "content": "{\n  resetPostgresPassword(appID: $appId, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: String!, $newPassword: String!)"}, {"type": "query", "name": "GetStorageSettings", "content": "{\n  config(appID: $appId, resolve: true) {\n    id: __typename\n    __typename\n    storage {\n      version\n    }\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!)"}, {"type": "mutation", "name": "deleteApplication", "content": "{\n  deleteApp(id: $appId) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!)"}, {"type": "query", "name": "getAppPlanAndGlobalPlans", "content": "{\n  apps(where: {workspace: {slug: {_eq: $workspaceSlug}}, slug: {_eq: $appSlug}}) {\n    ...getAppPlanAndGlobalPlansApp\n  }\n  plans {\n    ...getAppPlanAndGlobalPlansPlan\n  }\n}\n    ${GetAppPlanAndGlobalPlansAppFragmentDoc}\n${GetAppPlanAndGlobalPlansPlanFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($workspaceSlug: String!, $appSlug: String!)"}, {"type": "query", "name": "getApplicationPlan", "content": "{\n  apps(where: {workspace: {slug: {_eq: $workspace}}, slug: {_eq: $slug}}) {\n    id\n    subdomain\n    plan {\n      name\n      price\n      upatedAt\n      featureMaxDbSize\n    }\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($workspace: String!, $slug: String!)"}, {"type": "query", "name": "GetProjectMetrics", "content": "{\n  logsVolume: getLogsVolume(appID: $appId, from: $from, to: $to) {\n    value\n  }\n  cpuSecondsUsage: getCPUSecondsUsage(appID: $appId, from: $from, to: $to) {\n    value\n  }\n  functionInvocations: getFunctionsInvocations(\n    appID: $appId\n    from: $from\n    to: $to\n  ) {\n    value\n  }\n  postgresVolumeCapacity: getPostgresVolumeCapacity(appID: $appId) {\n    value\n  }\n  postgresVolumeUsage: getPostgresVolumeUsage(appID: $appId) {\n    value\n  }\n  totalRequests: getTotalRequests(appID: $appId, from: $from, to: $to) {\n    value\n  }\n  egressVolume: getEgressVolume(\n    appID: $appId\n    subdomain: $subdomain\n    from: $from\n    to: $to\n  ) {\n    value\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: String!, $subdomain: String!, $from: Timestamp, $to: Timestamp)"}, {"type": "query", "name": "getRemoteAppRoles", "content": "{\n  authRoles {\n    role\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "query", "name": "PrefetchNewApp", "content": "{\n  regions(order_by: {city: asc}) {\n    ...PrefetchNewAppRegions\n  }\n  plans(order_by: {sort: asc}) {\n    ...PrefetchNewAppPlans\n  }\n  workspaces {\n    ...PrefetchNewAppWorkspace\n  }\n}\n    ${PrefetchNewAppRegionsFragmentDoc}\n${PrefetchNewAppPlansFragmentDoc}\n${PrefetchNewAppWorkspaceFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "mutation", "name": "UpdateSecret", "content": "{\n  updateSecret(appID: $appId, secret: $secret) {\n    name\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!, $secret: ConfigEnvironmentVariableInsertInput!)"}, {"type": "mutation", "name": "updateApplication", "content": "{\n  updateApp(pk_columns: {id: $appId}, _set: $app) {\n    name\n    id\n    slug\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!, $app: apps_set_input!)"}, {"type": "subscription", "name": "ScheduledOrPendingDeploymentsSub", "content": "{\n  deployments(\n    where: {deploymentStatus: {_in: [\"SCHEDULED\"]}, appId: {_eq: $appId}}\n  ) {\n    ...DeploymentRow\n  }\n}\n    ${DeploymentRowFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: uuid!)"}, {"type": "mutation", "name": "InsertDeployment", "content": "{\n  insertDeployment(object: $object) {\n    ...DeploymentRow\n  }\n}\n    ${DeploymentRowFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($object: deployments_insert_input!)"}, {"type": "subscription", "name": "getDeploymentsSub", "content": "{\n  deployments(\n    where: {appId: {_eq: $id}}\n    order_by: {deploymentStartedAt: desc}\n    limit: $limit\n    offset: $offset\n  ) {\n    ...DeploymentRow\n  }\n}\n    ${DeploymentRowFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($id: uuid!, $limit: Int!, $offset: Int!)"}, {"type": "query", "name": "getFiles", "content": "{\n  files(where: $where, limit: $limit, offset: $offset, order_by: $order_by) {\n    id\n    bucketId\n    createdAt\n    updatedAt\n    name\n    size\n    mimeType\n    etag\n    isUploaded\n    uploadedByUserId\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($where: files_bool_exp, $limit: Int, $offset: Int, $order_by: [files_order_by!])"}, {"type": "mutation", "name": "insertNewPaymentMethod", "content": "{\n  updatePaymentMethods(\n    where: {workspaceId: {_eq: $workspaceId}}\n    _set: {isDefault: false}\n  ) {\n    affected_rows\n  }\n  insertPaymentMethod(object: $paymentMethod) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($workspaceId: uuid!, $paymentMethod: paymentMethods_insert_input!)"}, {"type": "mutation", "name": "RestoreApplicationDatabase", "content": "{\n  restoreApplicationDatabase(appID: $appId, backupID: $backupId)\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($appId: String!, $backupId: String!)"}, {"type": "query", "name": "getAppFunctionsMetadata", "content": "{\n  app(id: $id) {\n    id\n    metadataFunctions\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($id: uuid!)"}, {"type": "query", "name": "getRemoteAppMetrics", "content": "{\n  filesAggregate {\n    aggregate {\n      count\n      sum {\n        size\n      }\n    }\n  }\n  usersAggregate {\n    aggregate {\n      count\n    }\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}}, {"type": "query", "name": "remoteAppGetUsers", "content": "{\n  users(\n    where: $where\n    limit: $limit\n    offset: $offset\n    order_by: {createdAt: desc}\n  ) {\n    ...RemoteAppGetUsers\n  }\n  filteredUsersAggreggate: usersAggregate(where: $where) {\n    aggregate {\n      count\n    }\n  }\n  usersAggregate {\n    aggregate {\n      count\n    }\n  }\n}\n    ${RemoteAppGetUsersFragmentDoc}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($where: users_bool_exp!, $limit: Int!, $offset: Int!)"}, {"type": "mutation", "name": "deleteRemoteAppUserRoles", "content": "{\n  deleteAuthUserRoles(\n    where: {_and: [{userId: {_eq: $userId}}, {role: {_in: $roles}}]}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($userId: uuid!, $roles: [String!]!)"}, {"type": "mutation", "name": "insertWorkspaceMemberInvite", "content": "{\n  insertWorkspaceMemberInvite(object: $workspaceMemberInvite) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($workspaceMemberInvite: workspaceMemberInvites_insert_input!)"}, {"type": "mutation", "name": "updateWorkspaceMember", "content": "{\n  updateWorkspaceMember(_set: $workspaceMember, pk_columns: {id: $id}) {\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($id: uuid!, $workspaceMember: workspaceMembers_set_input!)"}, {"type": "mutation", "name": "insertWorkspace", "content": "{\n  insertWorkspace(object: $workspace) {\n    name\n    id\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($workspace: workspaces_insert_input!)"}, {"type": "mutation", "name": "updateWorkspace", "content": "{\n  updateWorkspace(pk_columns: {id: $id}, _set: $workspace) {\n    id\n    name\n    email\n    companyName\n    addressLine1\n    addressLine2\n    addressPostalCode\n    addressCity\n    addressCountryCode\n    slug\n    taxIdType\n    taxIdValue\n  }\n}", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "dashboard/src/utils/__generated__/graphql.ts", "repo": "nhost_nhost"}, "arguments": "($id: uuid!, $workspace: workspaces_set_input!)"}, {"type": "query", "name": "securityKeys", "content": "{\n    authUserSecurityKeys(where: { userId: { _eq: $userId } }) {\n      id\n      nickname\n    }\n  }", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "examples/react-apollo/src/profile/security-keys.tsx", "repo": "nhost_nhost"}, "arguments": "($userId: uuid!)"}, {"type": "query", "name": "TodoList", "content": "{\n    todos {\n      id\n      contents\n    }\n  }", "metadata": {"commit_hash": "b0363a4f4cc0abb2bb7f20b72d5f8ece0b5f6ebe", "file": "examples/react-apollo/src/apollo/index.tsx", "repo": "nhost_nhost"}}, {"type": "query", "name": "RepoMemos", "content": "{\n    repo(id: $repoId) {\n      id\n      memos {\n        ...RepoMemo\n      }\n    }\n  }\n  ${MemoFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "packages/styleguide/src/components/Editor/Forms/Memo/graphql.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!)"}, {"type": "mutation", "name": "RepoMemoEdit", "content": "{\n    memo: unpublishMemo(id: $id) {\n      ...RepoMemo\n    }\n  }\n  ${MemoFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "packages/styleguide/src/components/Editor/Forms/Memo/graphql.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "hidePostfinancePayment", "content": "{\n    hidePostfinancePayment(id: $id) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/PostfinancePayments/List/index.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "manuallyMatchPostfinancePayment", "content": "{\n    manuallyMatchPostfinancePayment(id: $id) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/PostfinancePayments/List/index.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "user", "content": "{\n    user(slug: $id) {\n      id\n      accessGrants(withPast: true) {\n        id\n        status\n        createdAt\n        beginBefore\n        voucherCode\n        beginAt\n        endAt\n        revokedAt\n        invalidatedAt\n        followupAt\n        granter {\n          id\n          email\n          name\n        }\n        campaign {\n          id\n          title\n          endAt\n        }\n        events {\n          createdAt\n          event\n        }\n      }\n      accessCampaigns(withPast: true) {\n        id\n        title\n        endAt\n        slots {\n          total\n          free\n          used\n        }\n        grants(withRevoked: true, withInvalidated: true) {\n          id\n          status\n          createdAt\n          beginBefore\n          voucherCode\n          beginAt\n          endAt\n          revokedAt\n          invalidatedAt\n          followupAt\n          email\n          recipient {\n            id\n            email\n            name\n          }\n          events {\n            createdAt\n            event\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Access.js", "repo": "republik_plattform"}, "arguments": "($id: String)"}, {"type": "mutation", "name": "revokeAccess", "content": "{\n    revokeAccess(id: $id)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Access.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "user", "content": "{\n    user(slug: $id) {\n      id\n      sessions {\n        id\n        expiresAt\n        city\n        country\n        ipAddress\n        userAgent\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Sessions.js", "repo": "republik_plattform"}, "arguments": "($id: String)"}, {"type": "mutation", "name": "clearSessions", "content": "{\n    clearSessions(userId: $userId)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Sessions.js", "repo": "republik_plattform"}, "arguments": "($userId: ID!)"}, {"type": "mutation", "name": "updateAdminNotes", "content": "{\n    updateAdminNotes(notes: $notes, userId: $userId) {\n      id\n      adminNotes\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/AdminNotes.js", "repo": "republik_plattform"}, "arguments": "($notes: String, $userId: ID!)"}, {"type": "query", "name": "getAuthSettings", "content": "{\n    user(slug: $userId) {\n      id\n      ...FirstFactors\n    }\n  }\n  ${firstFactorFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/AuthSettings.js", "repo": "republik_plattform"}, "arguments": "($userId: String)"}, {"type": "mutation", "name": "resubscribeEmail", "content": "{\n    resubscribeEmail(userId: $userId) {\n      id\n      status\n      subscriptions {\n        id\n        name\n        subscribed\n        isEligible\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/NewsletterSubscriptions.js", "repo": "republik_plattform"}, "arguments": "($userId: ID!)"}, {"type": "query", "name": "getUserMailbox", "content": "{\n    user(slug: $id) {\n      id\n      email\n      mailbox(first: $first, after: $after) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          ...MailboxRecordFragment\n        }\n      }\n    }\n  }\n\n  ${fragments.record}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Mailbox.js", "repo": "republik_plattform"}, "arguments": "($id: String, $first: Int, $after: String)"}, {"type": "query", "name": "user", "content": "{\n    user(slug: $id) {\n      id\n      firstName\n      lastName\n      email\n      phoneNumber\n      username\n      portrait(size: SMALL)\n      activeMembership {\n        type {\n          name\n        }\n        overdue\n        renew\n      }\n      isListed\n      hasPublicProfile\n      memberships {\n        id\n        periods {\n          endDate\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/ProfileHeader.js", "repo": "republik_plattform"}, "arguments": "($id: String)"}, {"type": "query", "name": "user", "content": "{\n    user(slug: $id) {\n      id\n      name\n      phoneNumber\n      firstName\n      lastName\n      birthday\n      address {\n        id\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Particulars/index.js", "repo": "republik_plattform"}, "arguments": "($id: String)"}, {"type": "query", "name": "users", "content": "{\n    users: adminUsers(limit: $limit, offset: $offset, search: $search) {\n      count\n      items {\n        id\n        username\n        name\n        email\n        firstName\n        lastName\n        createdAt\n        updatedAt\n        activeMembership {\n          type {\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/List/index.js", "repo": "republik_plattform"}, "arguments": "($limit: Int!, $offset: Int, $search: String)"}, {"type": "mutation", "name": "cancelPledge", "content": "{\n    cancelPledge(pledgeId: $pledgeId) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Pledges/CancelPledge.js", "repo": "republik_plattform"}, "arguments": "($pledgeId: ID!)"}, {"type": "mutation", "name": "movePledge", "content": "{\n    movePledge(pledgeId: $pledgeId, userId: $userId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Pledges/MovePledge.js", "repo": "republik_plattform"}, "arguments": "($pledgeId: ID!, $userId: ID!)"}, {"type": "mutation", "name": "resolvePledgeToPayment", "content": "{\n    resolvePledgeToPayment(pledgeId: $pledgeId, reason: $reason) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Pledges/ResolvePledgeToPayment.js", "repo": "republik_plattform"}, "arguments": "($pledgeId: ID!, $reason: String!)"}, {"type": "query", "name": "actions", "content": "{\n    user(slug: $slug) {\n      id\n      deletedAt\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Actions/index.js", "repo": "republik_plattform"}, "arguments": "($slug: String)"}, {"type": "mutation", "name": "deleteUser", "content": "{\n    deleteUser(userId: $userId, unpublishComments: $unpublishComments) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Actions/DeleteUser.js", "repo": "republik_plattform"}, "arguments": "($userId: ID!, $unpublishComments: Boolean!)"}, {"type": "mutation", "name": "moveMembership", "content": "{\n    moveMembership(membershipId: $membershipId, userId: $userId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/MoveMembership.js", "repo": "republik_plattform"}, "arguments": "($membershipId: ID!, $userId: ID!)"}, {"type": "mutation", "name": "cancelMembership", "content": "{\n    cancelMembership(\n      id: $membershipId\n      immediately: $immediately\n      details: $details\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Memberships/CancelMembership.js", "repo": "republik_plattform"}, "arguments": "(\n    $membershipId: ID!\n    $immediately: Boolean\n    $details: CancellationInput!\n  )"}, {"type": "query", "name": "user", "content": "{\n    user(slug: $id) {\n      id\n      isSuspended\n      suspendedUntil\n      suspensions(withInactive: true) {\n        beginAt\n        endAt\n        reason\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Dialog/DiscussionSuspensions.js", "repo": "republik_plattform"}, "arguments": "($id: String)"}, {"type": "mutation", "name": "verifyCredential", "content": "{\n    verifyCredential(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Users/Dialog/Credentials.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "signIn", "content": "{\n    signIn(\n      email: $email\n      context: $context\n      consents: $consents\n      tokenType: $tokenType\n    ) {\n      phrase\n      tokenType\n      alternativeFirstFactors\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Auth/SignIn.js", "repo": "republik_plattform"}, "arguments": "(\n    $email: String!\n    $context: String\n    $consents: [String!]\n    $tokenType: SignInTokenType\n  )"}, {"type": "mutation", "name": "signOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/admin/components/Auth/SignOut.js", "repo": "republik_plattform"}}, {"type": "query", "name": "repoWithHistory", "content": "{\n    repo(id: $repoId) {\n      id\n      isArchived\n      isTemplate\n      commits(first: $first, after: $after) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          ...SimpleCommit\n          document {\n            id\n            type\n          }\n          derivatives {\n            ...SimpleDerivative\n          }\n          canDeriveSyntheticReadAloud: canDerive(type: SyntheticReadAloud)\n        }\n      }\n      milestones {\n        ...SimpleMilestone\n        commit {\n          ...SimpleCommit\n          derivatives {\n            ...SimpleDerivative\n          }\n          canDeriveSyntheticReadAloud: canDerive(type: SyntheticReadAloud)\n        }\n      }\n    }\n  }\n  ${fragments.SimpleMilestone}\n  ${fragments.SimpleDerivative}\n  ${fragments.SimpleCommit}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/pages/repo/[owner]/[repo]/tree.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!, $first: Int!, $after: String)"}, {"type": "query", "name": "TreeDiff", "content": "{\n    repo(id: $repoId) {\n      id\n\n      commit: commit(id: $commitId) {\n        id\n        markdown\n      }\n\n      parentCommit: commit(id: $parentCommitId) {\n        id\n        markdown\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Tree/Diff.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!, $commitId: ID!, $parentCommitId: ID!)"}, {"type": "query", "name": "TreeDiff", "content": "{\n    repo(id: $repoId) {\n      id\n\n      commit: commit(id: $commitId) {\n        id\n        document {\n          content\n        }\n      }\n\n      parentCommit: commit(id: $parentCommitId) {\n        id\n        document {\n          content\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Tree/Diff.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!, $commitId: ID!, $parentCommitId: ID!)"}, {"type": "query", "name": "repoWithPublications", "content": "{\n    repo(id: $repoId) {\n      id\n      latestPublications {\n        name\n        prepublication\n        live\n        scheduledAt\n        updateMailchimp\n        date\n        author {\n          name\n          email\n        }\n        commit {\n          id\n          derivatives {\n            ...SimpleDerivative\n          }\n          canDeriveSyntheticReadAloud: canDerive(type: SyntheticReadAloud)\n        }\n        document {\n          id\n          meta {\n            path\n            format {\n              id\n              meta {\n                externalBaseUrl\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ${fragments.SimpleDerivative}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Publication/Current.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!)"}, {"type": "query", "name": "repoWithCommit", "content": "{\n    repo(id: $repoId) {\n      id\n      isArchived\n      meta {\n        publishDate\n      }\n      latestPublications {\n        date\n        name\n        live\n        prepublication\n        scheduledAt\n      }\n      commit(id: $commitId) {\n        id\n        message\n        date\n        author {\n          email\n          name\n        }\n        document {\n          id\n          type\n          repoId\n          content\n          meta {\n            slug\n            emailSubject\n            template\n            title\n            description\n            image\n            facebookTitle\n            facebookDescription\n            facebookImage\n            twitterTitle\n            twitterDescription\n            twitterImage\n            shareText\n            format {\n              id\n              repoId\n              meta {\n                path\n                title\n                color\n                kind\n                externalBaseUrl\n              }\n            }\n            section {\n              id\n              repoId\n              meta {\n                path\n                title\n                color\n                kind\n              }\n            }\n            series {\n              title\n              description\n              logo\n              logoDark\n              overview {\n                id\n                repoId\n                meta {\n                  path\n                }\n              }\n              episodes {\n                title\n                publishDate\n                label\n                lead\n                image\n                document {\n                  id\n                  repoId\n                  meta {\n                    path\n                  }\n                }\n              }\n            }\n            audioSource {\n              mp3\n              kind\n            }\n          }\n          documentSubscribedBy: subscribedBy(\n            filters: [Document]\n            includeParents: true\n            onlyEligibles: true\n            uniqueUsers: true\n          ) {\n            totalCount\n          }\n          readAloudSubscribedBy: subscribedBy(\n            filters: [ReadAloud]\n            includeParents: true\n            onlyEligibles: true\n            uniqueUsers: true\n          ) {\n            totalCount\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Publication/index.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!, $commitId: ID!)"}, {"type": "query", "name": "repoWeek", "content": "{\n    reposSearch(first: 100, publishDateRange: $publishDateRange) {\n      nodes {\n        ...CalendarRepoFragment\n        currentPhase {\n          key\n          color\n          label\n        }\n      }\n    }\n  }\n  ${repoFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Calendar/graphql.js", "repo": "republik_plattform"}, "arguments": "($publishDateRange: RepoPublishDateRange)"}, {"type": "mutation", "name": "repoFileUploadCommit", "content": "{\n    repoFileUploadCommit(id: $id) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/Upload.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "repoFileMakePublic", "content": "{\n    repoFileMakePublic(id: $id) {\n      ...RepoFile\n    }\n  }\n\n  ${RepoFile}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Files/actions/Publish.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "generateDerivative", "content": "{\n    generateDerivative(commitId: $commitId) {\n      ...SimpleDerivative\n    }\n  }\n\n  ${fragments.SimpleDerivative}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Derivatives/index.js", "repo": "republik_plattform"}, "arguments": "($commitId: ID!)"}, {"type": "query", "name": "getZones", "content": "{\n    search(\n      first: 10\n      sort: { key: publishedAt, direction: DESC }\n      filters: $filters\n      search: $search\n      before: $before\n      after: $after\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      nodes {\n        entity {\n          ... on DocumentZone {\n            id\n            data\n            node\n            document {\n              id\n              repoId\n              meta {\n                title\n                path\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/editor/modules/chart/EditOverlay/ChartCatalog.js", "repo": "republik_plattform"}, "arguments": "(\n    $filters: [SearchGenericFilterInput!]\n    $search: String\n    $before: String\n    $after: String\n  )"}, {"type": "query", "name": "getRecommendationMeta", "content": "{\n        repoData: repo(id: $id) {\n          id\n          latestPublications {\n            live\n            prepublication\n            scheduledAt\n            document {\n              ...MetaDataForRepoId\n            }\n          }\n\n          meta {\n            publishDate\n          }\n          latestCommit {\n            id\n            document {\n              ...MetaDataForRepoId\n            }\n          }\n        }\n      }\n\n      fragment MetaDataForRepoId on Document {\n        id\n        meta {\n          path\n          title\n          description\n          publishDate\n          credits\n          format {\n            id\n            meta {\n              title\n              color\n              externalBaseUrl\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/editor/modules/meta/ArticleRecommendations/ArticleRecommendationItem.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getFrontFeed", "content": "{\n    feed: search(\n      filters: $filters\n      filter: {\n        feed: true\n        publishedAt: $minPublishDate\n        repoIds: $specificRepoIds\n      }\n      sort: { key: publishedAt, direction: DESC }\n      first: $first\n    ) {\n      totalCount\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      nodes {\n        entity {\n          ... on Document {\n            id\n            meta {\n              credits\n              shortTitle\n              title\n              description\n              publishDate\n              prepublication\n              path\n              kind\n              template\n              color\n              format {\n                id\n                repoId\n                meta {\n                  path\n                  title\n                  color\n                  kind\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Templates/withFrontData.js", "repo": "republik_plattform"}, "arguments": "(\n    $specificRepoIds: [ID!]\n    $filters: [SearchGenericFilterInput!]\n    $minPublishDate: DateRangeInput\n    $first: Int\n  )"}, {"type": "query", "name": "templateListSearch", "content": "{\n    reposSearch(isTemplate: true, first: 200) {\n      totalCount\n      nodes {\n        id\n        latestCommit {\n          id\n          document {\n            id\n            meta {\n              title\n              slug\n              template\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Repo/Add.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getCommitById", "content": "{\n    repo(id: $repoId) {\n      ...EditPageRepo\n      commit(id: $commitId) {\n        ...CommitWithDocument\n      }\n    }\n  }\n  ${fragments.EditPageRepo}\n  ${fragments.CommitWithDocument}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Edit/enhancers.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!, $commitId: ID!)"}, {"type": "subscription", "name": "onRepoChange", "content": "{\n    repoChange(repoId: $repoId) {\n      mutation\n      repo {\n        ...EditPageRepo\n      }\n      commit {\n        ...SimpleCommit\n      }\n    }\n  }\n  ${fragments.EditPageRepo}\n  ${fragments.SimpleCommit}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/VersionControl/index.js", "repo": "republik_plattform"}, "arguments": "($repoId: ID!)"}, {"type": "mutation", "name": "signIn", "content": "{\n    signIn(\n      email: $email\n      context: $context\n      consents: $consents\n      tokenType: $tokenType\n    ) {\n      phrase\n      tokenType\n      alternativeFirstFactors\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Auth/SignIn.js", "repo": "republik_plattform"}, "arguments": "(\n    $email: String!\n    $context: String\n    $consents: [String!]\n    $tokenType: SignInTokenType\n  )"}, {"type": "mutation", "name": "signOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/publikator/components/Auth/SignOut.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getCardGroup", "content": "{\n    cardGroup(slug: $slug) {\n      id\n      name\n      slug\n      discussion {\n        id\n        title\n      }\n      all: cards(first: 0) {\n        totalCount\n      }\n      cards(\n        first: 50\n        after: $after\n        focus: $top\n        filters: { mustHave: $mustHave, elected: $elected }\n        sort: { smartspider: $smartspider }\n      ) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          id\n          ...Card\n        }\n      }\n    }\n  }\n\n  ${cardFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/pages/wahltindaer/[group]/[[...suffix]].js", "repo": "republik_plattform"}, "arguments": "(\n    $slug: String!\n    $after: String\n    $top: [ID!]\n    $mustHave: [CardFiltersMustHaveInput!]\n    $smartspider: [Float]\n    $elected: Boolean\n  )"}, {"type": "query", "name": "getSpecialCards", "content": "{\n    all: cards(first: 0, filters: { elected: $elected }) {\n      totalCount\n    }\n    cards(\n      first: 50\n      after: $after\n      focus: $top\n      filters: { mustHave: $mustHave, elected: $elected }\n      sort: { smartspider: $smartspider }\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      nodes {\n        id\n        ...Card\n        group {\n          id\n          name\n          slug\n          discussion {\n            id\n          }\n        }\n      }\n    }\n  }\n\n  ${cardFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/pages/wahltindaer/[group]/[[...suffix]].js", "repo": "republik_plattform"}, "arguments": "(\n    $after: String\n    $top: [ID!]\n    $mustHave: [CardFiltersMustHaveInput!]\n    $smartspider: [Float]\n    $elected: Boolean\n  )"}, {"type": "query", "name": "me", "content": "{\n    me {\n      id\n      username\n      portrait\n      name\n      firstName\n      lastName\n      email\n      initials\n      roles\n      isListed\n      hasPublicProfile\n      discussionNotificationChannels\n      accessCampaigns {\n        id\n      }\n      hasDormantMembership\n      prolongBeforeDate\n      activeMembership {\n        id\n        type {\n          name\n        }\n        renew\n        endDate\n        graceEndDate\n        canProlong\n      }\n      ...ProgressConsent\n      ...ProlitterisConsent\n    }\n  }\n  ${userProgressConsentFragment}\n  ${userProlitterisConsentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/lib/apollo/withMe.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getElection", "content": "{\n    election(slug: $slug) {\n      id\n      userIsEligible\n      userHasSubmitted\n      userSubmitDate\n      description\n      beginDate\n      endDate\n      numSeats\n      discussion {\n        id\n        path\n        comments {\n          id\n          totalCount\n        }\n      }\n      candidacies {\n        id\n        isIncumbent\n        yearOfBirth\n        city\n        recommendation\n        comment {\n          id\n        }\n        election {\n          slug\n          discussion {\n            id\n          }\n        }\n        credential {\n          id\n          description\n          verified\n        }\n        user {\n          id\n          name\n          username\n          publicUrl\n          twitterHandle\n          facebookId\n          statement\n          portrait\n          disclosures\n          gender\n          birthday\n          biographyContent\n          credentials {\n            isListed\n            description\n          }\n        }\n        postalCodeGeo {\n          countryName\n          countryCode\n          postalCode\n          lat\n          lon\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/Election.js", "repo": "republik_plattform"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "VoteAddressEditor", "content": "{\n    voteMe: me {\n      id\n      name\n      address {\n        name\n        line1\n        line2\n        postalCode\n        city\n        country\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/AddressEditor.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getVoting", "content": "{\n    voting(slug: $slug) {\n      id\n      description\n      slug\n      beginDate\n      endDate\n      userSubmitDate\n      userHasSubmitted\n      userIsEligible\n      requireAddress\n      allowEmptyBallots\n      options {\n        id\n        label\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Vote/Voting.js", "repo": "republik_plattform"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "getEmployees", "content": "{\n    employees(withBoosted: $withBoosted, shuffle: $shuffle) {\n      title\n      name\n      group\n      subgroup\n      user {\n        id\n        portrait\n        slug\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Imprint/Employees.js", "repo": "republik_plattform"}, "arguments": "($shuffle: Int, $withBoosted: Boolean)"}, {"type": "mutation", "name": "revokeAccess", "content": "{\n    revokeAccess(id: $id)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Access/Campaigns/index.js", "repo": "republik_plattform"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "accessGrantQuery", "content": "{\n    accessGrantStats {\n      evolution(\n        accessCampaignId: \"${CAMPAIGN_IDS.first}\"\n        min: $min\n        max: $max\n      ) {\n        buckets {\n          date\n          active\n          activeUnconverted\n          converted\n        }\n        updatedAt\n      }\n      events(\n        accessCampaignId: \"${CAMPAIGN_IDS.first}\"\n        min: $min\n        max: $max\n      ) {\n        buckets {\n          pledges\n          claims\n          invites\n        }\n        updatedAt\n      }\n    }\n    accessGrantStats2: accessGrantStats {\n      evolution(\n        accessCampaignId: \"${CAMPAIGN_IDS.second}\"\n        min: $min\n        max: $max\n      ) {\n        buckets {\n          date\n          active\n          activeUnconverted\n          converted\n        }\n        updatedAt\n      }\n      events(\n        accessCampaignId: \"${CAMPAIGN_IDS.second}\"\n        min: $min\n        max: $max\n      ) {\n        buckets {\n          pledges\n          claims\n          invites\n        }\n        updatedAt\n      }\n    }\n    accessGrantStats3: accessGrantStats {\n      evolution(\n        accessCampaignId: \"${CAMPAIGN_IDS.third}\"\n        min: $min\n        max: $max\n      ) {\n        buckets {\n          date\n          active\n          activeUnconverted\n          converted\n        }\n        updatedAt\n      }\n      events(\n        accessCampaignId: \"${CAMPAIGN_IDS.third}\"\n        min: $min\n        max: $max\n      ) {\n        buckets {\n          pledges\n          claims\n          invites\n        }\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Access/Campaigns/ShareChart.js", "repo": "republik_plattform"}, "arguments": "($min: Date!, $max: Date!)"}, {"type": "mutation", "name": "updateMe", "content": "{\n    updateMe(\n      username: $username\n      hasPublicProfile: $hasPublicProfile\n      facebookId: $facebookId\n      twitterHandle: $twitterHandle\n      emailAccessRole: $emailAccessRole\n      publicUrl: $publicUrl\n      biography: $biography\n      statement: $statement\n      portrait: $portrait\n      phoneNumber: $phoneNumber\n      phoneNumberNote: $phoneNumberNote\n      phoneNumberAccessRole: $phoneNumberAccessRole\n      pgpPublicKey: $pgpPublicKey\n      isListed: $isListed\n      prolitterisId: $prolitterisId\n    ) {\n      id\n      username\n      hasPublicProfile\n      facebookId\n      twitterHandle\n      emailAccessRole\n      publicUrl\n      biography\n      biographyContent\n      statement\n      portrait\n      phoneNumber\n      phoneNumberNote\n      phoneNumberAccessRole\n      pgpPublicKey\n      pgpPublicKeyId\n      isListed\n      prolitterisId\n      credentials {\n        isListed\n        description\n        verified\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Profile/Edit.js", "repo": "republik_plattform"}, "arguments": "(\n    $username: String\n    $hasPublicProfile: Boolean\n    $facebookId: String\n    $twitterHandle: String\n    $emailAccessRole: AccessRole\n    $publicUrl: String\n    $biography: String\n    $statement: String\n    $portrait: String\n    $phoneNumber: String\n    $phoneNumberNote: String\n    $phoneNumberAccessRole: AccessRole\n    $pgpPublicKey: String\n    $isListed: Boolean\n    $prolitterisId: String\n  )"}, {"type": "query", "name": "getPublicUser", "content": "{\n    user(slug: $slug) {\n      id\n      slug\n      username\n      firstName\n      lastName\n      updatedAt\n      name\n      email\n      emailAccessRole\n      phoneNumber\n      phoneNumberNote\n      phoneNumberAccessRole\n      portrait\n      hasPublicProfile\n      isEligibleForProfile\n      statement\n      biography\n      biographyContent\n      isListed\n      isAdminUnlisted\n      sequenceNumber\n      pgpPublicKey\n      pgpPublicKeyId\n      credentials {\n        isListed\n        description\n        verified\n      }\n      facebookId\n      twitterHandle\n      publicUrl\n      badges\n      prolitterisId\n      documents(first: $firstDocuments, after: $afterDocument) {\n        ...DocumentListConnection\n      }\n      subscribedByMe {\n        id\n        active\n        filters\n        object {\n          ... on User {\n            id\n            name\n          }\n          ... on Document {\n            id\n            meta {\n              title\n            }\n          }\n        }\n      }\n      comments(first: $firstComments, after: $afterComment) {\n        totalCount\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n        nodes {\n          id\n          published\n          adminUnpublished\n          preview(length: 210) {\n            string\n            more\n          }\n          tags\n          parentIds\n          discussion {\n            id\n            title\n            path\n            document {\n              id\n              meta {\n                title\n                path\n                template\n                ownDiscussion {\n                  id\n                  closed\n                }\n                linkedDiscussion {\n                  id\n                  path\n                  closed\n                }\n              }\n            }\n          }\n          createdAt\n        }\n      }\n      cards(first: 1) {\n        nodes {\n          id\n          ...Card\n          group {\n            id\n            name\n            slug\n          }\n        }\n      }\n      # # uncomment to show candidacies during elections\n      # # and filter in backend to only return currently active elections\n      # candidacies {\n      #   election {\n      #     slug\n      #     description\n      #     beginDate\n      #     endDate\n      #     candidacyEndDate\n      #     discussion {\n      #       id\n      #     }\n      #   }\n      #   id\n      #   yearOfBirth\n      #   city\n      #   recommendation\n      #   comment {\n      #     id\n      #   }\n      # }\n    }\n  }\n  ${documentListQueryFragment}\n  ${cardFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Profile/Page.js", "repo": "republik_plattform"}, "arguments": "(\n    $slug: String!\n    $firstDocuments: Int!\n    $firstComments: Int!\n    $afterDocument: String\n    $afterComment: String\n  )"}, {"type": "query", "name": "getMyListCards", "content": "{\n    cards(focus: $cardIds, first: $first) {\n      nodes {\n        id\n        user {\n          id\n          name\n          slug\n        }\n        payload(\n          paths: [\n            \"party\"\n            \"yearOfBirth\"\n            \"nationalCouncil.candidacy\"\n            \"nationalCouncil.votes\"\n            \"nationalCouncil.elected\"\n            \"nationalCouncil.listNumbers\"\n            \"councilOfStates.candidacy\"\n            \"councilOfStates.votes\"\n            \"councilOfStates.elected\"\n            \"councilOfStates.secondBallotNecessary\"\n          ]\n        )\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/MyList.js", "repo": "republik_plattform"}, "arguments": "($cardIds: [ID!]!, $first: Int!)"}, {"type": "query", "name": "claimCardForm", "content": "{\n    cards(accessToken: $accessToken, first: 1) {\n      nodes {\n        id\n        payload\n        statement {\n          id\n        }\n        group {\n          id\n          slug\n          name\n        }\n        user(accessToken: $accessToken) {\n          id\n          name\n          email\n          isUserOfCurrentSession\n          portrait(properties: { width: 600, height: 800, bw: false })\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Card/Claim.js", "repo": "republik_plattform"}, "arguments": "($accessToken: ID!)"}, {"type": "mutation", "name": "payPledge", "content": "{\n    payPledge(\n      pledgePayment: {\n        pledgeId: $pledgeId\n        method: $method\n        sourceId: $sourceId\n        makeDefault: $makeDefault\n        pspPayload: $pspPayload\n        address: $address\n        paperInvoice: $paperInvoice\n      }\n    ) {\n      pledgeId\n      userId\n      emailVerify\n      stripePublishableKey\n      stripeClientSecret\n      stripePaymentIntentId\n      companyId\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Submit.js", "repo": "republik_plattform"}, "arguments": "(\n    $pledgeId: ID!\n    $method: PaymentMethod!\n    $sourceId: String\n    $pspPayload: JSON\n    $address: AddressInput\n    $paperInvoice: Boolean\n    $makeDefault: Boolean\n  )"}, {"type": "query", "name": "statementsShareRef", "content": "{\n    statements(focus: $id, first: 1) {\n      nodes {\n        id\n        name\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Pledge/Form.js", "repo": "republik_plattform"}, "arguments": "($id: String!)"}, {"type": "query", "name": "discussionCommentsCount", "content": "{\n    discussion(id: $discussionId) {\n      ...Discussion\n      comments(first: 0) {\n        totalCount\n      }\n    }\n  }\n  ${DISCUSSION_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}, "arguments": "($discussionId: ID!)"}, {"type": "query", "name": "discussionDisplayAuthor", "content": "{\n    discussion(id: $discussionId) {\n      ...Discussion\n    }\n  }\n  ${DISCUSSION_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}, "arguments": "($discussionId: ID!)"}, {"type": "mutation", "name": "downvoteComment", "content": "{\n    downvoteComment(id: $commentId) {\n      ...Comment\n    }\n  }\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}, "arguments": "($commentId: ID!)"}, {"type": "mutation", "name": "setDiscussionPreferences", "content": "{\n    setDiscussionPreferences(\n      id: $discussionId\n      discussionPreferences: $discussionPreferences\n    ) {\n      ...Discussion\n    }\n  }\n  ${DISCUSSION_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/documents.js", "repo": "republik_plattform"}, "arguments": "(\n    $discussionId: ID!\n    $discussionPreferences: DiscussionPreferencesInput!\n  )"}, {"type": "query", "name": "pendingAppSignIn", "content": "{\n    pendingAppSignIn {\n      title\n      body\n      expiresAt\n      verificationUrl\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/NativeApp/MessageSync.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getSectionNav", "content": "{\n    sections: documents(template: \"section\", feed: true) {\n      nodes {\n        id\n        meta {\n          title\n          path\n          color\n          kind\n        }\n        formats: linkedDocuments(feed: true) {\n          nodes {\n            id\n            meta {\n              title\n              path\n              color\n              kind\n            }\n            linkedDocuments(feed: true, first: 0) {\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Sections/Featured.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getSectionDocuments", "content": "{\n    documents: search(\n      filters: $filters\n      filter: $filter\n      sort: { key: publishedAt, direction: DESC }\n      first: 30\n      after: $cursor\n    ) {\n      totalCount\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      nodes {\n        entity {\n          ...FeedDocument\n        }\n      }\n    }\n  }\n  ${documentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Sections/SinglePageFeed.js", "repo": "republik_plattform"}, "arguments": "(\n    $cursor: String\n    $filter: SearchFilterInput\n    $filters: [SearchGenericFilterInput!]\n  )"}, {"type": "query", "name": "getCompleteFrontOverview", "content": "{\n    front: document(path: $path) {\n      id\n      content\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Overview/Page.js", "repo": "republik_plattform"}, "arguments": "($path: String!)"}, {"type": "query", "name": "Marketing", "content": "{\n    meGuidance: me {\n      id\n      activeMembership {\n        id\n      }\n      accessGrants {\n        id\n        campaign {\n          type\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Marketing/index.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "preferredFirstFactor", "content": "{\n    preferredFirstFactor(tokenType: $tokenType) {\n      id\n      enabledFirstFactors\n      preferredFirstFactor\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/AuthSettings.js", "repo": "republik_plattform"}, "arguments": "($tokenType: SignInTokenType)"}, {"type": "query", "name": "myAuthSettings", "content": "{\n    authSettings: me {\n      id\n      enabledFirstFactors\n      preferredFirstFactor\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/AuthSettings.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "submitConsent", "content": "{\n    submitConsent(name: \"${PROLITTERIS_OPT_OUT_CONSENT}\") {\n      id\n      ...ProlitterisConsent\n    }\n  }\n  ${userProlitterisConsentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/ProlitterisSettings.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "addPaymentMethod", "content": "{\n    addPaymentMethod(\n      stripePlatformPaymentMethodId: $stripePlatformPaymentMethodId\n      companyId: $companyId\n    ) {\n      stripePublishableKey\n      stripeClientSecret\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/PaymentSources.js", "repo": "republik_plattform"}, "arguments": "(\n    $stripePlatformPaymentMethodId: ID!\n    $companyId: ID!\n  )"}, {"type": "query", "name": "myNewsletterSettings", "content": "{\n    me {\n      id\n      newsletterSettings {\n        id\n        status\n        subscriptions(name: $onlyName) {\n          ...NewsletterInfo\n        }\n      }\n    }\n  }\n  ${newsletterFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/NewsletterSubscriptions/index.js", "repo": "republik_plattform"}, "arguments": "($onlyName: NewsletterName)"}, {"type": "mutation", "name": "updateName", "content": "{\n    updateMe(firstName: $firstName, lastName: $lastName) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Claim.js", "repo": "republik_plattform"}, "arguments": "($firstName: String!, $lastName: String!)"}, {"type": "mutation", "name": "cancelMembership", "content": "{\n    cancelMembership(id: $id, reason: $reason) {\n      id\n      active\n      renew\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Manage.js", "repo": "republik_plattform"}, "arguments": "($id: ID!, $reason: String)"}, {"type": "mutation", "name": "setMembershipAutoPay", "content": "{\n    setMembershipAutoPay(id: $id, autoPay: $autoPay) {\n      id\n      autoPay\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Manage.js", "repo": "republik_plattform"}, "arguments": "($id: ID!, $autoPay: Boolean!)"}, {"type": "query", "name": "cancellationCategories", "content": "{\n    cancellationCategories {\n      type\n      label\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Account/Memberships/Cancel.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "addDocumentToCollection", "content": "{\n    addDocumentToCollection(\n      documentId: $documentId\n      collectionName: $collectionName\n    ) {\n      id\n      document {\n        id\n        ...BookmarkOnDocument\n      }\n    }\n  }\n\n  ${onDocumentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/ActionBar/BookmarkButton.js", "repo": "republik_plattform"}, "arguments": "($documentId: ID!, $collectionName: String!)"}, {"type": "query", "name": "FaqList", "content": "{\n    faqs {\n      category\n      question\n      answer\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Faq/List.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getNotifications", "content": "{\n    me {\n      id\n      discussionNotificationChannels\n    }\n    notifications(first: 10, after: $after) {\n      totalCount\n      unreadCount\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n      nodes {\n        id\n        readAt\n        createdAt\n        object {\n          ... on Document {\n            ...FeedDocument\n          }\n          ... on Comment {\n            id\n            preview(length: 120) {\n              string\n              more\n            }\n            createdAt\n            displayAuthor {\n              id\n              name\n              slug\n              profilePicture\n              credential {\n                id\n                description\n                verified\n              }\n            }\n            published\n            updatedAt\n            tags\n            parentIds\n            discussion {\n              id\n              title\n              path\n              isBoard\n              document {\n                id\n                meta {\n                  title\n                  path\n                  credits\n                  template\n                  ownDiscussion {\n                    id\n                    closed\n                  }\n                  linkedDiscussion {\n                    id\n                    path\n                    closed\n                  }\n                }\n              }\n            }\n          }\n          __typename\n        }\n        subscription {\n          ...subInfo\n        }\n        content {\n          title\n          url\n        }\n        channels\n      }\n    }\n  }\n  ${documentFragment}\n  ${subInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}, "arguments": "($after: String)"}, {"type": "query", "name": "getSubscriptions", "content": "{\n    sections: documents(template: \"section\") {\n      nodes {\n        id\n        repoId\n        meta {\n          title\n          color\n          suggestSubscription\n        }\n        formats: linkedDocuments {\n          nodes {\n            id\n            subscribedByMe {\n              ...subInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${subInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getNotificationCount", "content": "{\n    notifications(onlyUnread: true) {\n      nodes {\n        ...notificationInfo\n      }\n    }\n  }\n  ${notificationInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "markAllNotificationsAsRead", "content": "{\n    markAllNotificationsAsRead {\n      ...notificationInfo\n    }\n  }\n  ${notificationInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}}, {"type": "mutation", "name": "unSubFromDoc", "content": "{\n    unsubscribe(subscriptionId: $subscriptionId, filters: $filters) {\n      ...subInfo\n    }\n  }\n  ${subInfo}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Notifications/enhancers.js", "repo": "republik_plattform"}, "arguments": "($subscriptionId: ID!, $filters: [EventObjectType!])"}, {"type": "mutation", "name": "submitAnswer", "content": "{\n    submitAnswer(\n      answer: { id: $answerId, questionId: $questionId, payload: $payload }\n    ) {\n      ... on QuestionInterface {\n        id\n        userAnswer {\n          id\n          payload\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/enhancers.js", "repo": "republik_plattform"}, "arguments": "($answerId: ID!, $questionId: ID!, $payload: JSON)"}, {"type": "query", "name": "getQuestionnaire", "content": "{\n    questionnaire(slug: $slug) {\n      id\n      beginDate\n      endDate\n      userHasSubmitted\n      userSubmitDate\n      resubmitAnswers\n      revokeSubmissions\n      userIsEligible\n      questions {\n        ... on QuestionInterface {\n          id\n          order\n          text\n          explanation\n          private\n          userAnswer {\n            id\n            payload\n          }\n        }\n        ... on QuestionTypeText {\n          maxLength\n        }\n        ... on QuestionTypeChoice {\n          cardinality\n          options {\n            label\n            value\n            category\n            requireAddress\n          }\n        }\n        ... on QuestionTypeImageChoice {\n          options {\n            label\n            value\n            category\n            requireAddress\n            imageUrl\n          }\n        }\n        ... on QuestionTypeRange {\n          kind\n          ticks {\n            label\n            value\n          }\n        }\n        ... on QuestionTypeDocument {\n          template\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/enhancers.js", "repo": "republik_plattform"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "getQuestionnaireResults", "content": "{\n    questionnaire(slug: $slug) {\n      id\n      slug\n      questions(orderFilter: $orderFilter) {\n        id\n        text\n        turnout {\n          skipped\n          submitted\n        }\n        __typename\n        ... on QuestionTypeRange {\n          ticks {\n            label\n            value\n          }\n          result {\n            median\n            histogram(ticks: 10) {\n              x0\n              x1\n              count\n            }\n          }\n        }\n        ... on QuestionTypeChoice {\n          results: result {\n            count\n            option {\n              label\n              category\n            }\n          }\n          options {\n            label\n          }\n        }\n        ... on QuestionTypeImageChoice {\n          results: result {\n            count\n            option {\n              label\n              category\n            }\n          }\n          options {\n            label\n          }\n        }\n        ... on QuestionTypeDocument {\n          results: result(min: 3, top: 20) {\n            count\n            document {\n              meta {\n                title\n                path\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Questionnaire/Results.js", "repo": "republik_plattform"}, "arguments": "($slug: String!, $orderFilter: [Int!])"}, {"type": "query", "name": "getMembershipPeriodStats", "content": "{\n    membershipStats {\n      periods(\n        minEndDate: \"01.01.2019\"\n        maxEndDate: \"15.01.2019\"\n        membershipTypes: [\"ABO\", \"BENEFACTOR_ABO\"]\n      ) {\n        id\n        totalMemberships\n        days {\n          id\n          date\n          prolongCount\n          cancelCount\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Stats/MembershipPeriods.js", "repo": "republik_plattform"}}, {"type": "query", "name": "getActiveDiscussions", "content": "{\n    activeDiscussions(lastDays: $lastDays, first: $first) {\n      discussion {\n        id\n        title\n        path\n        closed\n        document {\n          id\n          meta {\n            title\n            path\n            template\n            ownDiscussion {\n              id\n              closed\n            }\n          }\n        }\n        comments {\n          totalCount\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Dialog/enhancers.js", "repo": "republik_plattform"}, "arguments": "($lastDays: Int!, $first: Int)"}, {"type": "query", "name": "getSearchResults", "content": "{\n    search(\n      first: 25\n      after: $after\n      search: $searchQuery\n      sort: $sort\n      filters: $filters\n    ) {\n      totalCount\n      aggregations {\n        key\n        count\n        label\n        buckets {\n          value\n          count\n          label\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n        hasPreviousPage\n        startCursor\n      }\n      nodes {\n        entity {\n          __typename\n          ... on Document {\n            ...FeedDocument\n          }\n          ... on Comment {\n            id\n            content\n            text\n            preview(length: 240) {\n              string\n              more\n            }\n            createdAt\n            displayAuthor {\n              id\n              name\n              slug\n              profilePicture\n              credential {\n                id\n                description\n                verified\n              }\n            }\n            published\n            updatedAt\n            tags\n            parentIds\n            discussion {\n              id\n              title\n              path\n              document {\n                id\n                meta {\n                  title\n                  path\n                  template\n                  ownDiscussion {\n                    id\n                    closed\n                  }\n                }\n              }\n            }\n          }\n          ... on User {\n            id\n            slug\n            firstName\n            lastName\n            credentials {\n              verified\n              description\n              isListed\n            }\n            portrait\n          }\n        }\n        highlights {\n          path\n          fragments\n        }\n        score\n      }\n    }\n  }\n  ${documentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Search/enhancers.js", "repo": "republik_plattform"}, "arguments": "(\n    $searchQuery: String\n    $after: String\n    $sort: SearchSortInput\n    $filters: [SearchGenericFilterInput!]\n  )"}, {"type": "query", "name": "myPaymentSource", "content": "{\n    me(accessToken: $accessToken) {\n      id\n      defaultPaymentSource {\n        id\n        status\n        brand\n        last4\n        expMonth\n        expYear\n        isDefault\n        isExpired\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Payment/Form.js", "repo": "republik_plattform"}, "arguments": "($accessToken: ID)"}, {"type": "mutation", "name": "requestNewsletter", "content": "{\n    requestNewsletterSubscription(email: $email, name: $name, context: $context)\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/NewsletterSignUp.js", "repo": "republik_plattform"}, "arguments": "(\n    $email: String!\n    $name: NewsletterName!\n    $context: String!\n  )"}, {"type": "mutation", "name": "updateNewsletterSubscriptionWithMac", "content": "{\n    updateNewsletterSubscription(\n      name: $name\n      subscribed: $subscribed\n      email: $email\n      mac: $mac\n      consents: $consents\n    ) {\n      id\n      name\n      subscribed\n      isEligible\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Auth/MacNewsletterSubscription.js", "repo": "republik_plattform"}, "arguments": "(\n    $name: NewsletterName!\n    $subscribed: Boolean!\n    $email: String!\n    $mac: String!\n    $consents: [String!]\n  )"}, {"type": "query", "name": "SurviveStatusActions", "content": "{\n    actionMe: me(accessToken: $accessToken) {\n      id\n      ...SurviveActionsOnUser\n    }\n    questionnaire(slug: \"1-minute\") {\n      id\n      turnout {\n        submitted\n      }\n      userIsEligible\n      userHasSubmitted\n      endDate\n    }\n  }\n  ${userSurviveActionsFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Crowdfunding/withSurviveStatus.js", "repo": "republik_plattform"}, "arguments": "($accessToken: ID)"}, {"type": "query", "name": "getFront", "content": "{\n    front: document(path: $path) {\n      id\n      children(first: $first, after: $after, before: $before, only: $only) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          endCursor\n          startCursor\n        }\n        nodes {\n          id\n          body\n        }\n      }\n      meta {\n        path\n        title\n        description\n        image\n        facebookDescription\n        facebookImage\n        facebookTitle\n        twitterDescription\n        twitterImage\n        twitterTitle\n        prepublication\n        lastPublishedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Front/graphql/getFrontQuery.graphql.ts", "repo": "republik_plattform"}, "arguments": "(\n    $path: String!\n    $first: Int!\n    $after: ID\n    $before: ID\n    $only: ID\n  )"}, {"type": "query", "name": "getArticleRecommendations", "content": "{\n    article: document(path: $path) {\n      id\n      meta {\n        recommendations {\n          nodes {\n            ...FeedDocument\n          }\n        }\n      }\n    }\n  }\n  ${documentFragment}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Article/graphql/getArticleRecommendations.graphql.ts", "repo": "republik_plattform"}, "arguments": "($path: String!)"}, {"type": "query", "name": "discussion", "content": "{\n    me {\n      id\n      name\n      portrait\n    }\n    discussion(id: $discussionId) {\n      ...Discussion\n      allComments: comments(\n        parentId: $parentId\n        after: $after\n        orderBy: $orderBy\n        first: 100\n        flatDepth: $depth\n        focusId: $focusId\n        includeParent: $includeParent\n      ) {\n        totalCount\n      }\n      comments(\n        parentId: $parentId\n        after: $after\n        orderBy: $orderBy\n        first: 100\n        flatDepth: $depth\n        focusId: $focusId\n        includeParent: $includeParent\n        tag: $activeTag\n      ) {\n        totalCount\n        resolvedOrderBy\n        directTotalCount\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        focus {\n          id\n          parentIds\n          preview(length: 300) {\n            string\n          }\n          displayAuthor {\n            id\n            name\n          }\n        }\n        nodes {\n          ...Comment\n          comments {\n            totalCount\n            directTotalCount\n            pageInfo {\n              hasNextPage\n              endCursor\n            }\n          }\n        }\n      }\n    }\n  }\n  ${DISCUSSION_FRAGMENT}\n  ${COMMENT_FRAGMENT}", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/queries/DiscussionQuery.graphql.ts", "repo": "republik_plattform"}, "arguments": "(\n    $discussionId: ID!\n    $parentId: ID\n    $after: String\n    $orderBy: DiscussionOrder!\n    $depth: Int!\n    $focusId: ID\n    $includeParent: Boolean\n    $activeTag: String\n  )"}, {"type": "query", "name": "commentPreview", "content": "{\n    commentPreview(\n      content: $content\n      discussionId: $discussionId\n      parentId: $parentId\n      id: $id\n      tags: $tags\n    ) {\n      id\n      content\n      contentLength\n      tags\n      updatedAt\n      createdAt\n      embed {\n        ... on LinkPreview {\n          url\n          title\n          description\n          imageUrl\n          imageAlt\n          siteName\n          siteImageUrl\n          updatedAt\n          __typename\n        }\n        ... on TwitterEmbed {\n          id\n          url\n          text\n          html\n          userName\n          userScreenName\n          userProfileImageUrl\n          image\n          createdAt\n          __typename\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Discussion/graphql/queries/PreviewCommentQuery.graphql.ts", "repo": "republik_plattform"}, "arguments": "(\n    $discussionId: ID!\n    $content: String!\n    $parentId: ID\n    $id: ID\n    $tags: [String!]\n  )"}, {"type": "query", "name": "mediaProgress", "content": "{\n    mediaProgress(mediaId: $mediaId) {\n      id\n      mediaId\n      secs\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Audio/hooks/useMediaProgressQuery.ts", "repo": "republik_plattform"}, "arguments": "($mediaId: ID!)"}, {"type": "query", "name": "flyerNavi", "content": "{\n    prev: search(\n      first: 1\n      filter: {\n        publishedAt: {\n          to: $publishedAt\n        }\n      }\n      filters: [\n        { key: \"format\", value: \"${FORMAT_REPO_ID}\" }\n        { not: true, key: \"repoId\", value: $repoId }\n      ]\n      sort: {\n        key: publishedAt\n        direction: DESC\n      }\n    ) {\n      totalCount\n      nodes {\n        entity {\n          ... on Document {\n            id\n            meta {\n              path\n              title\n              publishDate\n            }\n          }\n        }\n      }\n    }\n    next: search(\n      first: 1\n      filter: {\n        publishedAt: {\n          from: $publishedAt\n        }\n      }\n      filters: [\n        { key: \"format\", value: \"${FORMAT_REPO_ID}\" }\n        { not: true, key: \"repoId\", value: $repoId }\n      ]\n      sort: {\n        key: publishedAt\n        direction: ASC\n      }\n    ) {\n      totalCount\n      nodes {\n        entity {\n          ... on Document {\n            id\n            meta {\n              path\n              title\n              publishDate\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f0cc7768aa667d2b173924a5a60987f55c0a40d3", "file": "apps/www/components/Flyer/Nav.tsx", "repo": "republik_plattform"}, "arguments": "($publishedAt: DateTime!, $repoId: String!)"}, {"type": "query", "name": "openAuthoringBranches", "content": "{\n    repository(owner: $owner, name: $name) {\n      ...RepositoryParts\n      refs(refPrefix: $refPrefix, last: 100) {\n        nodes {\n          ...BranchParts\n        }\n      }\n    }\n  }\n  ${fragments.repository}\n  ${fragments.branch}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/queries.ts", "repo": "starknet-io_starknet-website"}, "arguments": "($owner: String!, $name: String!, $refPrefix: String!)"}, {"type": "query", "name": "pullRequest", "content": "{\n    repository(owner: $owner, name: $name) {\n      id\n      ${pullRequestQueryPart}\n    }\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/queries.ts", "repo": "starknet-io_starknet-website"}, "arguments": "($owner: String!, $name: String!, $number: Int!)"}, {"type": "query", "name": "pullRequests", "content": "{\n    repository(owner: $owner, name: $name) {\n      id\n      pullRequests(last: 100, headRefName: $head, states: $states) {\n        nodes {\n          ...PullRequestParts\n        }\n      }\n    }\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/queries.ts", "repo": "starknet-io_starknet-website"}, "arguments": "($owner: String!, $name: String!, $head: String, $states: [PullRequestState!])"}, {"type": "mutation", "name": "deleteRef", "content": "{\n    ${deleteRefMutationPart}\n  }", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}, "arguments": "($deleteRefInput: DeleteRefInput!)"}, {"type": "mutation", "name": "createPullRequest", "content": "{\n    ${createPullRequestMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "f79f03c18ea4af28e858814b9fa5516ff30de32d", "file": "workspaces/netlify-cms-backend-github/src/mutations.ts", "repo": "starknet-io_starknet-website"}, "arguments": "($createPullRequestInput: CreatePullRequestInput!)"}, {"type": "query", "name": "getProductRatings", "content": "{\n    product(id: $productId) {\n      ratings: privateMetafield(\n        namespace: \"${METAFIELD_NAMESPACE.general}\",\n        key: \"${METAFIELD_KEY.ratings}\"\n      ) {\n        id\n        key\n        namespace\n        value\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "server/handlers/queries/get-product-ratings.js", "repo": "Shopify_product-reviews-sample-app"}, "arguments": "($productId: ID!)"}, {"type": "mutation", "name": "PrivateMetafieldUpsert", "content": "{\n    privateMetafieldUpsert(input: $input) {\n      privateMetafield {\n        id\n        key\n        value\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "server/handlers/mutations/update-product-ratings.js", "repo": "Shopify_product-reviews-sample-app"}, "arguments": "($input: PrivateMetafieldInput!)"}, {"type": "query", "name": "GetProductMetafields", "content": "{\n    product(id: $productId) {\n      id\n      metafields(namespace: $namespace, first: 10) {\n        edges {\n          node {\n            id\n            key\n            value\n            type\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "graphql/queries/getProductMetafields.js", "repo": "Shopify_product-reviews-sample-app"}, "arguments": "($productId: ID!, $namespace: String!)"}, {"type": "query", "name": "GetProductById", "content": "{\n    product(id: $productId) {\n      id\n      title\n      featuredImage {\n        id\n        originalSrc\n      }\n      avgRatingMetafield: metafield(\n        namespace: \"${METAFIELD_NAMESPACE.standardRating}\",\n        key: \"${METAFIELD_KEY.ratings}\"\n      ) {\n        id\n        value\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "graphql/queries/getProductById.js", "repo": "Shopify_product-reviews-sample-app"}, "arguments": "($productId: ID!)"}, {"type": "mutation", "name": "ProductMetafieldCreate", "content": "{\n    productUpdate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "ae0b13e0c8ecc46c6bc847cdd019222ecb08d4f7", "file": "graphql/mutations/productMetafieldCreate.js", "repo": "Shopify_product-reviews-sample-app"}, "arguments": "($input: ProductInput!)"}, {"type": "query", "name": "recipes", "content": "{\n    recipes(vegetarian: $vegetarian) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-3/src/Recipes.js", "repo": "nikgraf_graphql-apollo-client-course"}, "arguments": "($vegetarian: Boolean!)"}, {"type": "mutation", "name": "updateRecipeStarred", "content": "{\n    updateRecipeStarred(id: $id, isStarred: $isStarred) @client\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-5/src/Recipes.js", "repo": "nikgraf_graphql-apollo-client-course"}, "arguments": "($id: ID!, $isStarred: Boolean!)"}, {"type": "query", "name": "recipes", "content": "{\n    recipes(vegetarian: $vegetarian) {\n      id\n      title\n      isStarred @client\n    }\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-5/src/recipesQuery.js", "repo": "nikgraf_graphql-apollo-client-course"}, "arguments": "($vegetarian: Boolean!)"}, {"type": "mutation", "name": "addRecipe", "content": "{\n    addRecipe(recipe: $recipe) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-4/src/AddRecipe.js", "repo": "nikgraf_graphql-apollo-client-course"}, "arguments": "($recipe: RecipeInput!)"}, {"type": "query", "name": "recipes", "content": "{\n    recipes(vegetarian: $vegetarian) {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "fe667f5373a88b9366c30e50194d8bb92c80f8d5", "file": "lesson-4/src/recipesQuery.js", "repo": "nikgraf_graphql-apollo-client-course"}, "arguments": "($vegetarian: Boolean!)"}, {"type": "query", "name": "post", "content": "{\n    post(id: $id) {\n      viewerHasFavorited\n      viewerHasStarred\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/ArticleViwer/schema.js", "repo": "coderplanets_coderplanets_admin"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "user", "content": "{\n    user(login: $login) {\n      ${F.user}\n\n      achievement {\n        ${F.achievement}\n      }\n      ${F.userBackgrounds}\n      fromGithub\n      githubProfile {\n        htmlUrl\n        login\n      }\n      contributes {\n        ${F.userContributes}\n      }\n      subscribedCommunities {\n        entries {\n          id\n          title\n          logo\n          raw\n          index\n        }\n        pageSize\n        totalCount\n      }\n    }\n  }", "metadata": {"commit_hash": "1eb68fbe336b95fb2a9bde1a57659d53dd2f3d4b", "file": "containers/AccountViewer/schema.js", "repo": "coderplanets_coderplanets_admin"}, "arguments": "($login: String)"}, {"type": "mutation", "name": "comment", "content": "{\n    addComment(\n      input: { body: $body, subjectId: $subjectId }\n    ) {\n      subject {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "b72da2c6606a361d0160d5d78fb534018ba3ce91", "file": "apps/projects/app/utils/gql-queries.js", "repo": "aragon_aragon-apps"}, "arguments": "($body: String!, $subjectId: ID!)"}, {"type": "query", "name": "SearchTodos", "content": "{\n        searchTodos {\n          items {\n            id\n            groups\n            content\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthTests.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "SearchPosts", "content": "{\n        searchPosts {\n          items {\n            id\n            content\n            secret\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthTests.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreateTask", "content": "{\n        onCreateTask(filter: {\n          and: [\n            { priority: { eq: 8 } }\n            { severity: { gt: 5 } }\n          ]\n        }) {\n          id\n          title\n          description\n          priority\n          severity\n          owner\n          readOwners\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreateTask", "content": "{\n        onCreateTask(filter: $filter, owner: $owner) {\n          id\n          title\n          description\n          priority\n          severity\n          owner\n          readOwners\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "(\n        $filter: ModelSubscriptionTaskFilterInput\n        $owner: String\n      )"}, {"type": "subscription", "name": "OnCreateTodo", "content": "{\n        onCreateTodo(owner: \"${USERNAME2}\") {\n          id\n          name\n          description\n          level\n          owner\n          sharedOwners\n          status\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreateTodo", "content": "{\n        onCreateTodo(filter: {\n          or: [\n            {name: { notIn: [\"todo\", \"test\", \"Testing\"]}}\n            {level: { between: [5, 10]}}\n          ]\n        }) {\n          id\n          name\n          description\n          level\n          owner\n          sharedOwners\n          status\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "DeleteTask", "content": "{\n      deleteTask(input: $input) {\n        id\n        title\n        description\n        priority\n        severity\n        owner\n        readOwners\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: DeleteTaskInput!)"}, {"type": "mutation", "name": "CreateTodo", "content": "{\n      createTodo(input: $input) {\n        id\n        name\n        description\n        level\n        owner\n        sharedOwners\n        status\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsRuntimeFiltering.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreateTodoInput!)"}, {"type": "subscription", "name": "OnDeleteStudent", "content": "{\n        onDeleteStudent {\n          id\n          name\n          email\n          ssn\n          owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreateMember", "content": "{\n        onCreateMember {\n          id\n          name\n          createdAt\n          updatedAt\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnDeleteMember", "content": "{\n        onDeleteMember {\n          id\n          name\n          createdAt\n          updatedAt\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreateTodo", "content": "{\n        onCreateTodo {\n          id\n          description\n          name\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnUpdateTodo", "content": "{\n        onUpdateTodo {\n          id\n          description\n          name\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateMember", "content": "{\n      updateMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: UpdateMemberInput!)"}, {"type": "mutation", "name": "DeleteMember", "content": "{\n      deleteMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: DeleteMemberInput!)"}, {"type": "mutation", "name": "CreateStudent", "content": "{\n      createStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreateStudentInput!)"}, {"type": "mutation", "name": "UpdateStudent", "content": "{\n      updateStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: UpdateStudentInput!)"}, {"type": "mutation", "name": "CreateTodo", "content": "{\n      createTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthTest.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreateTodoInput!)"}, {"type": "mutation", "name": "CreateNote1", "content": "{\n        createNote1(input: $input) {\n            noteId\n            noteType\n            owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/IndexWithClaimFieldAsSortKeyAuth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreateNote1Input!)"}, {"type": "subscription", "name": "OnUpdateStudent", "content": "{\n        onUpdateStudent {\n          id\n          name\n          email\n          ssn\n          owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreateMember", "content": "{\n        onCreateMember {\n          id\n          name\n          createdAt\n          updatedAt\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreatePost", "content": "{\n        onCreatePost {\n          id\n          title\n          postOwner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreateTodo", "content": "{\n        onCreateTodo {\n          id\n          description\n          name\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnUpdateTodo", "content": "{\n        onUpdateTodo {\n          id\n          description\n          name\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "UpdateMember", "content": "{\n      updateMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: UpdateMemberInput!)"}, {"type": "mutation", "name": "CreateStudent", "content": "{\n      createStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreateStudentInput!)"}, {"type": "subscription", "name": "OnUpdateStudent", "content": "{\n        onUpdateStudent {\n          id\n          name\n          email\n          ssn\n          owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnDeleteStudent", "content": "{\n        onDeleteStudent {\n          id\n          name\n          email\n          ssn\n          owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnDeleteMember", "content": "{\n        onDeleteMember {\n          id\n          name\n          createdAt\n          updatedAt\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreatePost", "content": "{\n        onCreatePost(postOwner: \"${USERNAME2}\") {\n          id\n          title\n          postOwner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnDeleteTodo", "content": "{\n        onDeleteTodo {\n          id\n          description\n          name\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreateOwnerInvalidClaim", "content": "{\n        onCreateOwnerInvalidClaim(owner: \"${USERNAME2}\") {\n          id\n          description\n          owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreateNote", "content": "{\n        onCreateNote {\n          id\n          content\n          secretNote\n          taskNotesId\n          task {\n            id\n            name\n            description\n          }\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateMember", "content": "{\n      createMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreateMemberInput!)"}, {"type": "mutation", "name": "DeleteMember", "content": "{\n      deleteMember(input: $input) {\n        id\n        name\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: DeleteMemberInput!)"}, {"type": "mutation", "name": "CreateStudent", "content": "{\n      createStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreateStudentInput!)"}, {"type": "mutation", "name": "DeleteStudent", "content": "{\n      deleteStudent(input: $input) {\n        id\n        name\n        email\n        ssn\n        owner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: DeleteStudentInput!)"}, {"type": "mutation", "name": "CreatePost", "content": "{\n      createPost(input: $input) {\n        id\n        title\n        postOwner\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreatePostInput!)"}, {"type": "mutation", "name": "CreateTask", "content": "{\n      createTask(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreateTaskInput!)"}, {"type": "mutation", "name": "CreateNote", "content": "{\n      createNote(input: $input) {\n        id\n        content\n        secretNote\n        taskNotesId\n        task {\n          description\n        }\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreateNoteInput!)"}, {"type": "mutation", "name": "DeleteTodo", "content": "{\n      deleteTodo(input: $input) {\n        id\n        description\n        name\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SubscriptionsWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: DeleteTodoInput!)"}, {"type": "query", "name": "SearchTodos", "content": "{\n        searchTodos {\n          items {\n            id\n            groups\n            content\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "SearchPosts", "content": "{\n        searchPosts {\n          items {\n            id\n            content\n            secret\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "SearchPosts", "content": "{\n        searchPosts {\n          items {\n            id\n            content\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "SearchPosts", "content": "{\n          searchPosts {\n            items {\n              id\n              content\n              secret\n            }\n            nextToken\n          }\n        }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "CreateTodo", "content": "{\n      createTodo(input: $input) {\n        id\n        groups\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreateTodoInput!)"}, {"type": "mutation", "name": "CreatePost", "content": "{\n      createPost(input: $input) {\n        id\n        content\n      }\n    }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}, "arguments": "($input: CreatePostInput!)"}, {"type": "query", "name": "SearchComments", "content": "{\n        searchComments {\n          items {\n            id\n            content\n            owner\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "SearchComments", "content": "{\n        searchComments {\n          items {\n            id\n            content\n            owner\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "query", "name": "SearchComments", "content": "{\n        searchComments {\n          items {\n            id\n            content\n            owner\n          }\n          nextToken\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/graphql-transformers-e2e-tests/src/__tests__/SearchableWithAuthV2WithFF.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreateStudent", "content": "{\n        onCreateStudent {\n          id\n          name\n          email\n          ssn\n          owner\n        }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/amplify-util-mock/src/__e2e__/subscriptions-with-auth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnDeleteStudent", "content": "{\n          onDeleteStudent {\n            id\n            name\n            email\n            ssn\n            owner\n          }\n        }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/amplify-util-mock/src/__e2e__/subscriptions-with-auth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnUpdateMember", "content": "{\n          onUpdateMember {\n            id\n            name\n            createdAt\n            updatedAt\n          }\n        }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/amplify-util-mock/src/__e2e__/subscriptions-with-auth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "subscription", "name": "OnCreatePost", "content": "{\n          onCreatePost(postOwner: \"${USERNAME1}\") {\n              id\n              title\n              postOwner\n          }\n      }", "metadata": {"commit_hash": "f048c6d245ab19353c1cf838de45c4b308935c3f", "file": "packages/amplify-util-mock/src/__e2e__/subscriptions-with-auth.e2e.test.ts", "repo": "aws-amplify_amplify-category-api"}}, {"type": "mutation", "name": "removeName", "content": "{\n        delete_names(where: {_id: {_eq: $_id}}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "07231cecbda91b36f6d8088c9dd2e7f2fa54f365", "file": "graphdemo/src/constants/graphql.js", "repo": "malgamves_firebase2graphql-demo"}, "arguments": "($_id: String!)"}, {"type": "mutation", "name": "submitName", "content": "{\n        insert_names(objects: [{name: $name, _id: $_id}]) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "07231cecbda91b36f6d8088c9dd2e7f2fa54f365", "file": "graphdemo/src/constants/graphql.js", "repo": "malgamves_firebase2graphql-demo"}, "arguments": "($name: String!, $_id: String!)"}, {"type": "query", "name": "ModuleTxs", "content": "{\n          user_transactions(\n            where: { entry_function_id_str: { _like: $prefix } }\n            order_by: { timestamp: desc }\n          ) {\n            entry_function_id_str\n            sender\n            version\n            timestamp\n          }\n        }", "metadata": {"commit_hash": "fa7e183ed01a0371a99f9ee6b79ebae22d2cbf76", "file": "src/hooks/useGql.ts", "repo": "SeamMoney_seam-frontend"}, "arguments": "($prefix: String!)"}, {"type": "mutation", "name": "SendNotificationUser", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Notifications.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($notificationTitle:String, $notificationBody: String!)"}, {"type": "mutation", "name": "UpdateStatus", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/DispatchRestaurant.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String!,$orderStatus:String!)"}, {"type": "mutation", "name": "DeleteVendor", "content": "{\n  deleteVendor(id:$id)\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Vendors.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String!)"}, {"type": "query", "name": "RidersByZone", "content": "{\n  ridersByZone(id:$id){\n    _id\n    name\n    username\n    password\n    phone\n    available\n    zone{\n      _id\n      title\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Dispatch.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String!)"}, {"type": "query", "name": "RestaurantByOwner", "content": "{\n  restaurantByOwner(id:$id){\n  _id\n  email\n  userType\n  restaurants{\n    _id\n    orderId\n    orderPrefix\n    name\n    slug\n    image\n    address\n    username\n    password\n    location{coordinates}\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Restaurant.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "ToggleRider", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String)"}, {"type": "query", "name": "GetDashboardTotal", "content": "{\n    getDashboardTotal(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      totalOrders\n      totalSales\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($startingDate: String, $endingDate: String,$restaurant:String!)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Food.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "DeleteFood", "content": "{\n        deleteFood(id:$id,restaurant:$restaurant,categoryId:$categoryId){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Food.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String!,$restaurant:String!,$categoryId:String!)"}, {"type": "query", "name": "Zones", "content": "{\n    zones{\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Zone.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "ordersByRestId", "content": "{\n    ordersByRestId(restaurant:$restaurant,page:$page,rows:$rows,search:$search){\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        details\n        label\n      }\n      items{\n        _id\n        title\n        description\n        image\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          description\n          title\n          quantityMinimum\n          quantityMaximum\n        }\n        specialInstructions\n        isActive\n        createdAt\n        updatedAt\n      }\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      status\n      paymentStatus\n      reason\n      isActive\n      createdAt\n      deliveryCharges\n      tipping\n      taxationAmount\n      rider{\n        _id\n        name\n        username\n        available\n      }\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Orders.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($restaurant:String!,$page:Int,$rows:Int,$search:String)"}, {"type": "mutation", "name": "UpdateWithdrawRequest", "content": "{\n  updateWithdrawReqStatus(id:$id,status:$status){\n    success\n    message\n    data{\n      rider{\n        _id\n        currentWalletAmount\n      }\n      withdrawRequest{\n        _id\n        status\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:ID!, $status:String!)"}, {"type": "mutation", "name": "DeleteAddon", "content": "{\n        deleteAddon(id:$id,restaurant:$restaurant){\n          _id\n          addons{\n            _id\n            options\n            title\n            description\n            quantityMinimum\n            quantityMaximum\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Addons.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String!,$restaurant:String!)"}, {"type": "query", "name": "Sections", "content": "{\n  sections{\n    _id\n    name\n    enabled\n    restaurants{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Sections.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Category.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "DeleteCategory", "content": "{\n        deleteCategory(id:$id,restaurant:$restaurant){\n                _id\n                categories{\n                  _id\n                  title\n                  foods{\n                    _id\n                    title\n                    description\n                    variations{\n                      _id\n                      title\n                      price\n                      discounted\n                      addons\n                    }\n                    image\n                    isActive\n                    createdAt\n                    updatedAt\n                  }\n                  createdAt\n                  updatedAt\n                }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/views/Category.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String!,$restaurant:String!)"}, {"type": "mutation", "name": "EditRider", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($riderInput:RiderInput!)"}, {"type": "query", "name": "Zones", "content": "{\n    zones{\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "query", "name": "OrderCount", "content": "{\n  orderCount(restaurant:$restaurant)\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Order/OrdersData.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($restaurant:String!)"}, {"type": "mutation", "name": "UpdateOrderStatus", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($id:String!,$status:String!,$reason:String)"}, {"type": "query", "name": "GetConfiguration", "content": "{\n    configuration{\n      _id\n      email\n      emailName\n      password\n      enableEmail\n      clientId\n      clientSecret\n      sandbox\n      publishableKey\n      secretKey\n      currency\n      currencySymbol\n      deliveryRate\n    }\n  }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "EditVendor", "content": "{\n  editVendor(vendorInput:$vendorInput){\n    _id\n    email\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Vendor/Vendor.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($vendorInput:VendorInput)"}, {"type": "query", "name": "Vendors", "content": "{\n    vendors{\n      _id\n      email\n      userType\n      restaurants{\n        _id\n        orderId\n        orderPrefix\n        slug\n        name\n        image\n        address\n        location{coordinates}\n        zone{\n          _id\n          title\n        }\n      }\n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Vendor/Vendor.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}}, {"type": "mutation", "name": "CreateAddons", "content": "{\n  createAddons(addonInput:$addonInput){\n      _id\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($addonInput:AddonInput)"}, {"type": "mutation", "name": "CreateOptions", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    options{\n      _id\n      title\n      description\n      price\n    }\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($optionInput:CreateOptionInput)"}, {"type": "mutation", "name": "editOption", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($optionInput:editOptionInput)"}, {"type": "mutation", "name": "SaveDeliveryRateConfiguration", "content": "{\n  saveDeliveryRateConfiguration(deliveryRate:$deliveryRate){\n    _id\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Configuration/DeliveryRate/DeliveryRate.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($deliveryRate: Float!)"}, {"type": "mutation", "name": "SavePaypalConfiguration", "content": "{\n  savePaypalConfiguration(configurationInput:$configurationInput){\n    _id\n    clientId\n    clientSecret\n    sandbox\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Configuration/Paypal/Paypal.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($configurationInput:PaypalConfigurationInput!)"}, {"type": "mutation", "name": "SaveEmailConfiguration", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    emailName\n    password\n    enableEmail\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($configurationInput:EmailConfigurationInput!)"}, {"type": "mutation", "name": "SaveCurrencyConfiguration", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "24557f2a26ac2fc090147d10873efc35ee46ba8f", "file": "src/components/Configuration/Currency/Currency.jsx", "repo": "Ninjas-Code-official_enatega-multivendor-admin"}, "arguments": "($configurationInput:CurrencyConfigurationInput!)"}, {"type": "mutation", "name": "EnableTemplate", "content": "{\n    enableTemplate(name: $name)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Admin.js", "repo": "thomas81528262_wolf"}, "arguments": "($name: String!)"}, {"type": "query", "name": "GetPlayer", "content": "{\n    player(id: $id, pass: $pass) {\n      id\n      name\n      roleName\n    }\n    players {\n      id\n      name\n      isEmpty\n      revealedRole\n      isChief\n      isDie\n      vote\n      chiefVote\n      isValidCandidate\n      isVoteFinish\n      chiefVoteState {\n        isDropout\n        isCandidate\n      }\n    }\n\n    gameInfo(id: $id) {\n      uuid\n      isVoteFinish\n      chiefId\n      isDark\n      isChiefCandidateConfirmed\n      chiefVoteState {\n        isDropout\n        isCandidate\n      }\n    }\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Player.js", "repo": "thomas81528262_wolf"}, "arguments": "($id: Int!, $pass: String!)"}, {"type": "mutation", "name": "UpdatePlayerPass", "content": "{\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      id\n    }\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/Login.js", "repo": "thomas81528262_wolf"}, "arguments": "($id: Int!, $pass: String!)"}, {"type": "mutation", "name": "UpdateTempl", "content": "{\n    updateTemplateRole(name: $name, number: $number, roleId: $roleId)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/EditTemplateRole.js", "repo": "thomas81528262_wolf"}, "arguments": "($roleId: Int!, $number: Int!, $name: String!)"}, {"type": "mutation", "name": "UpdateRule", "content": "{\n    updateTemplateDescription(name: $name, description: $description)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/EditTemplateRole.js", "repo": "thomas81528262_wolf"}, "arguments": "($name: String!, $description: String!)"}, {"type": "mutation", "name": "Logoff", "content": "{\n    logoff\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/App.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "UpdatePlayerPass", "content": "{\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      name\n    }\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/App.js", "repo": "thomas81528262_wolf"}, "arguments": "($id: Int!, $pass: String!)"}, {"type": "mutation", "name": "ResetEvent", "content": "{\n    resetEvent\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "UpdatePlayerName", "content": "{\n    updatePlayerName(id: $id, name: $name)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}, "arguments": "($id: Int!, $name: String!)"}, {"type": "mutation", "name": "VoteStart", "content": "{\n    voteStart(targets: $targets)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}, "arguments": "($targets: [Int])"}, {"type": "mutation", "name": "SetGameEnded", "content": "{\n    setGameEnded\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/God.js", "repo": "thomas81528262_wolf"}}, {"type": "mutation", "name": "SetChiefId", "content": "{\n    setChiefId(id: $id)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/PlayerTable.js", "repo": "thomas81528262_wolf"}, "arguments": "($id: Int!)"}, {"type": "mutation", "name": "ResetChiefCandidate", "content": "{\n    resetChiefCaniddate(id: $id)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/PlayerTable.js", "repo": "thomas81528262_wolf"}, "arguments": "($id: Int!)"}, {"type": "mutation", "name": "UpdatePass", "content": "{\n    updatePass(id: $id, pass: $pass)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/PlayerTable.js", "repo": "thomas81528262_wolf"}, "arguments": "($id: Int!, $pass: String!)"}, {"type": "mutation", "name": "SetDarkDieStatus", "content": "{\n    setDarkDieStatus(targets: $targets)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/DarkPlayerTable.js", "repo": "thomas81528262_wolf"}, "arguments": "($targets: [Int]!)"}, {"type": "mutation", "name": "SetChiefId", "content": "{\n    setChiefId(id: $id)\n  }", "metadata": {"commit_hash": "23a9bd760733c54461bc021d8f5928949d9f2f3e", "file": "app/src/DarkPlayerTable.js", "repo": "thomas81528262_wolf"}, "arguments": "($id: Int!)"}, {"type": "mutation", "name": "deleteEvent", "content": "{\n        deleteEvent(eventId: $eventId) {\n            title\n        }\n    }", "metadata": {"commit_hash": "111a5a0fa557f4231951199e1a6f89c76f1c2c5a", "file": "src/gql/deleteEvent.js", "repo": "stack-guru_fullstack-graphql"}, "arguments": "($eventId: ID!)"}, {"type": "query", "name": "getAllCategory", "content": "{\n                getAllCategory(currentPage: $currentPage, searchList: $searchList){\n                 count\n                  categoryData{\n                      id\n                      categoryName\n                      categoryImage\n                      categoryMarkerImage\n                      basePrice\n                      minutePrice\n                      unitPrice\n                      riderFeeValue\n                      driverFeeValue\n                      isActive\n                      currency\n                      capacity\n                      createdAt\n                      updatedAt\n                  }\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateCategoryStatus.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($currentPage: Int, $searchList: String)"}, {"type": "mutation", "name": "updateCategoryStatus", "content": "{\n                updateCategoryStatus(id: $id, isActive: $isActive) {\n                  status\n                  errorMessage\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateCategoryStatus.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($id: Int, $isActive: Boolean)"}, {"type": "mutation", "name": "addCategory", "content": "{\n        addCategory(\n          categoryName: $categoryName,\n          capacity: $capacity,\n          isActive: $isActive,\n          categoryImage: $categoryImage,\n          categoryMarkerImage: $categoryMarkerImage\n        ){\n          status\n          errorMessage\n        }\n      }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/addCategory.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "(\n          $categoryName: String,\n          $capacity: Int,\n          $isActive: Boolean,\n          $categoryImage: String,\n          $categoryMarkerImage: String\n        )"}, {"type": "mutation", "name": "updateSiteSettings", "content": "{\n                    updateSiteSettings(\n                    siteName: $siteName\n                    siteTitle: $siteTitle\n                    metaDescription: $metaDescription\n                    facebookLink: $facebookLink\n                    twitterLink: $twitterLink\n                    instagramLink: $instagramLink\n                    logoHeight: $logoHeight\n                    logoWidth: $logoWidth\n                    metaKeyword: $metaKeyword\n                    homeLogo: $homeLogo\n                    youtubeLink: $youtubeLink\n                    appForceUpdate: $appForceUpdate\n                    riderAndroidVersion: $riderAndroidVersion\n                    riderIosVersion: $riderIosVersion\n                    driverAndroidVersion: $driverAndroidVersion\n                    driverIosVersion: $driverIosVersion\n                    ){\n                    status\n                    }\n                }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateSiteSettings.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "(\n                $siteName: String,\n                $siteTitle: String,\n                $metaDescription: String, \n                $facebookLink: String,\n                $twitterLink: String,\n                $instagramLink: String,\n                $logoHeight: Int,\n                $logoWidth: Int,\n                $metaKeyword: String,\n                $homeLogo: String,\n                $youtubeLink: String,\n                $appForceUpdate: String\n                $riderAndroidVersion: String\n                $riderIosVersion: String\n                $driverAndroidVersion: String\n                $driverIosVersion: String\n                )"}, {"type": "mutation", "name": "updateHomePageSafety", "content": "{\n                updateHomePageSafety (\n                  safetyGridImage1: $safetyGridImage1\n                  safetyGridImage2: $safetyGridImage2\n                  safetyGridImage3: $safetyGridImage3\n                  safetyGridTitle1: $safetyGridTitle1\n                  safetyGridContent1: $safetyGridContent1\n                  safetyGridLink1: $safetyGridLink1\n                  safetyGridLink2: $safetyGridLink2\n                ) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateHomepageSettingsSafety.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "(\n                $safetyGridImage1: String\n                $safetyGridImage2: String\n                $safetyGridImage3: String\n                $safetyGridTitle1: String\n                $safetyGridContent1: String\n                $safetyGridLink1: String\n                $safetyGridLink2: String\n              )"}, {"type": "mutation", "name": "updateCategory", "content": "{\n        updateCategory(\n          id: $id,\n          categoryName: $categoryName,\n          capacity: $capacity,\n          isActive: $isActive,\n          categoryImage: $categoryImage,\n          categoryMarkerImage: $categoryMarkerImage\n        ){\n          status\n          errorMessage\n        }\n      }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/editCategory.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "(\n        $id: Int, \n        $categoryName: String,\n        $capacity: Int,\n        $isActive: Boolean,\n        $categoryImage: String,\n        $categoryMarkerImage: String\n      )"}, {"type": "mutation", "name": "deleteContentPage", "content": "{\n                    deleteContentPage (id: $id) {\n                        status\n                    }\n                }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/ContentPageAction.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($id: Int!)"}, {"type": "mutation", "name": "updateContentPageStatus", "content": "{\n                updateContentPageStatus(id: $id, isEnable: $isEnable){\n                    status\n                }\n            }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/ContentPageAction.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($id: Int, $isEnable: Boolean)"}, {"type": "mutation", "name": "addLocation", "content": "{\n            addLocation(\n              LocationName: $LocationName\n              coordinates: $coordinates\n              description: $description\n            ){\n              status\n              errorMessage\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/addLocation.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "(\n  \t\t\t\t    $LocationName: String!,\n              $coordinates: String!,\n              $description: String!\n            )"}, {"type": "mutation", "name": "updateHomePageFooter", "content": "{\n                updateHomePageFooter (\n                  footerLogo1: $footerLogo1\n                  footerLogo2: $footerLogo2\n                  footerLogo3: $footerLogo3\n                  footerLogo4: $footerLogo4\n                  footerTitle1: $footerTitle1\n                  footerContent1: $footerContent1\n                  footerLink1: $footerLink1\n                  footerLink2: $footerLink2\n                  footerLink3: $footerLink3\n                  footerLink4: $footerLink4\n                  footerLinkName1: $footerLinkName1\n                  footerLinkName2: $footerLinkName2\n                  footerLinkName3: $footerLinkName3\n                  footerLinkName4: $footerLinkName4\n                  footerLinkTitle: $footerLinkTitle\n                  footerBottom: $footerBottom\n                ) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateHomepageSettingsFooter.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "(\n                $footerLogo1: String\n                $footerLogo2: String\n                $footerLogo3: String\n                $footerLogo4: String\n                $footerTitle1: String\n                $footerContent1: String\n                $footerLink1: String\n                $footerLink2: String\n                $footerLink3: String\n                $footerLink4: String\n                $footerLinkName1: String\n                $footerLinkName2: String\n                $footerLinkName3: String\n                $footerLinkName4: String\n                $footerLinkTitle: String\n                $footerBottom: String\n              )"}, {"type": "mutation", "name": "updateRider", "content": "{\n            updateRider(\n              id: $id\n              firstName: $firstName\n              lastName: $lastName\n              email:$email\n              password: $password\n              phoneDialCode: $phoneDialCode\n              phoneNumber: $phoneNumber\n              userStatus: $userStatus\n              isBan: $isBan\n              phoneCountryCode: $phoneCountryCode\n            )\n            {\n              status\n              errorMessage\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/editRider.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "(\n            $id: ID,\n            $firstName: String,\n            $lastName: String,\n            $email: String,\n            $password: String,\n            $phoneDialCode: String\n            $phoneNumber: String,\n              $userStatus: String,\n              $isBan: Int\n              $phoneCountryCode: String\n            )"}, {"type": "mutation", "name": "uploadRcbookImage", "content": "{\n                uploadRcbookImage(id:$id, vehicleRC:$vehicleRC) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/uploadRcbookImage.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($id: Int, $vehicleRC: String)"}, {"type": "mutation", "name": "updateLocation", "content": "{\n              updateLocation(\n              LocationName: $LocationName\n              coordinates: $coordinates,\n              id: $id,\n              description: $description,\n              isActive: $isActive\n            ){\n              status\n              errorMessage\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateLocation.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "(\n  \t\t\t\t    $LocationName: String!,\n              $coordinates: String!,\n              $id: Int!,\n              $description: String!,\n              $isActive: Boolean!\n            )"}, {"type": "query", "name": "getAllCategory", "content": "{\n                getAllCategory(currentPage: $currentPage, searchList: $searchList){\n                 count\n                  categoryData{\n                      id\n                      categoryName\n                      categoryImage\n                      categoryMarkerImage\n                      basePrice\n                      minutePrice\n                      unitPrice\n                      riderFeeValue\n                      driverFeeValue\n                      isActive\n                      currency\n                      capacity\n                      createdAt\n                      updatedAt\n                  }\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/deleteCategory.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($currentPage: Int, $searchList: String)"}, {"type": "mutation", "name": "uploadLicenceBackImage", "content": "{\n                uploadLicenceBackImage(userId:$userId, licenceBack:$licenceBack) {\n                  status\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/uploadLicenceBackImage.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($userId:ID,$licenceBack:String)"}, {"type": "mutation", "name": "updateCategoryMarker", "content": "{\n            updateCategoryMarker(\n              id: $id\n              fileName: $fileName\n            ){\n              status\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/updateCategoryMarker.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($id: Int, \n             $fileName: String\n             )"}, {"type": "query", "name": "getAllDrivers", "content": "{\n                    getAllDrivers(currentPage: $currentPage){\n                      count\n                      userData {\n                        email\n                        phoneDialCode\n                        phoneNumber\n                        isBan\n                        userStatus\n                        createdAt\n                        profile {\n                          profileId\n                          firstName\n                          lastName\n                          country\n                        }\n                      }   \n                    }\n                  }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/deleteUser.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($currentPage: Int)"}, {"type": "query", "name": "getAllRiders", "content": "{\n                    getAllRiders(currentPage: $currentPage){\n                     count\n                      userData {\n                        email\n                        phoneDialCode\n                        phoneNumber\n                        isBan\n                        userStatus\n                        createdAt\n                        profile {\n                          profileId\n                          firstName\n                          lastName\n                          country\n                        }\n                      }\n                    }\n                  }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/deleteUser.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($currentPage: Int)"}, {"type": "mutation", "name": "deleteUser", "content": "{\n                deleteUser(profileId: $profileId) {\n                  status\n                  errorMessage\n                }\n              }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/deleteUser.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($profileId: Int)"}, {"type": "query", "name": "getAllDriver", "content": "{\n            getAllDrivers(currentPage: $currentPage){\n             count\n              userData{\n                email\n                  phoneNumber\n                    createdAt\n                    profile{\n                      profileId\n                      firstName\n                      lastName\n                      country\n                    }\n              }\n            }\n          }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/editDriver.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($currentPage: Int)"}, {"type": "mutation", "name": "updateCashPayout", "content": "{\n          updateCashPayout(id: $id, payoutStatus: $payoutStatus){\n              status\n            }\n        }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Payout/updateCashPayout.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($id: Int, $payoutStatus: Boolean)"}, {"type": "mutation", "name": "setBaseCurrency", "content": "{\n              setBaseCurrency(id: $id){\n                    status\n                }\n            }", "metadata": {"commit_hash": "3751f32a5b087ffa0f2d98767c495e6287d309f0", "file": "WooberlyAdminPanel_V1.8.1/src/actions/siteadmin/Currency/updateCurrency.js", "repo": "gstech0322_Wooberly-Admin"}, "arguments": "($id: Int)"}, {"type": "query", "name": "Events", "content": "{\n    events {\n      time\n      name\n      description\n      status\n      link\n      venue {\n        name\n        lat\n        lon\n      }\n    }\n  }", "metadata": {"commit_hash": "effbc7d0bd31df6d8c365e44773a68b8396d8d0b", "file": "screens/schedule.js", "repo": "kkemple_RNGraphQLNYC"}}, {"type": "query", "name": "MyQuery", "content": "{\n    tokens(where: {chainId: {_like: $chainId}, userwallet: {_like: $userwallet}}) {\n      userwallet\n      totalSupply\n      tokenaddress\n      chainId\n      decimal\n      id\n      tokenName\n      tokenSymbol\n    }\n  }", "metadata": {"commit_hash": "ee32f3050e6809407130a613ee5622793dd94f76", "file": "src/components/tokens.tsx", "repo": "Contrax-co_contrax-web"}, "arguments": "($chainId:String!,$userwallet:String!)"}, {"type": "query", "name": "MyQuery", "content": "{\n    tokens(where: {chainId: {_like: $chainId}, userwallet: {_like: $userwallet}}) {\n      userwallet\n      totalSupply\n      tokenaddress\n      chainId\n      decimal\n      id\n      tokenName\n      tokenSymbol\n    }\n  }", "metadata": {"commit_hash": "ee32f3050e6809407130a613ee5622793dd94f76", "file": "src/components/TokenModal1.tsx", "repo": "Contrax-co_contrax-web"}, "arguments": "($chainId:String!,$userwallet:String!)"}, {"type": "mutation", "name": "generateNewResetPasswordTokenMutation", "content": "{\n    generateNewResetPasswordToken(email: $email)\n  }", "metadata": {"commit_hash": "281d357865d26cb238f40855bc145a25f5c37f7d", "file": "frontend/src/common/Dialogs/ResetPasswordDialog/constants.js", "repo": "Kichiyaki_gqlgen-nextjs-postgres-starter"}, "arguments": "($email: String!)"}, {"type": "mutation", "name": "signupMutation", "content": "{\n    signup(user: $user) {\n      id\n    }\n  }", "metadata": {"commit_hash": "281d357865d26cb238f40855bc145a25f5c37f7d", "file": "frontend/src/features/SignUpPage/components/SignUpForm/constants.js", "repo": "Kichiyaki_gqlgen-nextjs-postgres-starter"}, "arguments": "($user: UserInput!)"}, {"type": "query", "name": "ListAllCategories", "content": "{\n    allCategories {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/queries/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "upsertCategory", "content": "{\n    upsertCategory(name: $name, categoryId: $categoryId) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($name: String!, $categoryId: ID)"}, {"type": "mutation", "name": "upsertAttribute", "content": "{\n    upsertAttribute(value: $value, categoryId: $categoryId, attributeId: $attributeId) {\n      id\n      value\n      category {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($value: String!, $categoryId: ID!, $attributeId: ID)"}, {"type": "mutation", "name": "deleteBrand", "content": "{\n    deleteBrand(brandId: $brandId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($brandId: ID!)"}, {"type": "mutation", "name": "upsertNewProducts", "content": "{\n    upsertNewProducts(newProducts: $newProducts) {\n      id\n      newProducts(orderBy: position_ASC) {\n        id\n        position\n        product {\n          id\n          name\n          imageUrl\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "backoffice/src/graphql/mutations/index.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($newProducts: [OrderableProductInput!]!)"}, {"type": "query", "name": "dataForBrowsing", "content": "{\n    categories: allCategories {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/browse/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "query", "name": "filersForCategory", "content": "{\n    brands: allBrands(categoryId: $categoryId) {\n      id\n      name\n    }\n    attributes: allAttributes(categoryId: $categoryId) {\n      id\n      value\n    }\n    options: allOptions(categoryId: $categoryId) {\n      id\n      name\n      values {\n        id\n        name\n      }\n    }\n    categories: allCategories {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/filters/query.gql.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($categoryId: ID)"}, {"type": "mutation", "name": "updateUser", "content": "{\n    updateUser(firstName: $firstName, lastName: $lastName) {\n      id\n      firstName\n      lastName\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/username/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($firstName: String!, $lastName: String!)"}, {"type": "query", "name": "shops", "content": "{\n    allShops {\n      id\n      name\n      address\n      zipCode\n      city\n      phoneNumber\n      openingHours\n    }\n    me {\n      id\n      selectedShop {\n        id\n        name\n        address\n        zipCode\n        city\n        phoneNumber\n        openingHours\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/shops/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "updateSelectedShop", "content": "{\n    updateUser(selectedShopId: $selectedShopId) {\n      id\n      firstName\n      cart {\n        id\n        deletedAt\n        quantity\n        variant {\n          id\n          available\n          price\n          selectedOptions {\n            id\n            option {\n              id\n              name\n            }\n            value {\n              id\n              name\n            }\n          }\n          product {\n            ...ProductCardFragment\n          }\n        }\n      }\n      orders(first: 1, orderBy: createdAt_DESC) {\n        id\n        createdAt\n        lineItems {\n          id\n          quantity\n          variant {\n            id\n            price\n            product {\n              id\n              name\n            }\n          }\n        }\n        totalPrice\n      }\n      selectedShop {\n        id\n        MOTD\n        bestSellerProducts(orderBy: position_ASC, first: 5) {\n          id\n          product {\n            ...ProductCardFragment\n          }\n        }\n        newProducts(orderBy: position_ASC, first: 5) {\n          id\n          product {\n            ...ProductCardFragment\n          }\n        }\n      }\n    }\n  }\n  ${ProductCardFragment}", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/shops/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($selectedShopId: ID!)"}, {"type": "query", "name": "userOrders", "content": "{\n    me {\n      id\n      cart(first: 1) {\n        id\n      }\n      orders(orderBy: createdAt_DESC) {\n        id\n        receiver { id }\n        createdAt\n        lineItems {\n          id\n          quantity\n          variant {\n            id\n            price\n            product {\n              id\n              name\n            }\n            selectedOptions {\n              id\n              value {\n                id\n                name\n              }\n            }\n          }\n        }\n        totalPrice\n      }\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/profile/views/orders/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "subscription", "name": "waitFor3DSecure", "content": "{\n      waitFor3DSecure(orderId: $orderId) {\n        node {\n          id\n          createdAt\n          orderStatus\n        }\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/payment/query.gql.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($orderId: ID!)"}, {"type": "query", "name": "homeInformation", "content": "{\n    me {\n      id\n      firstName\n      oneSignalUserId\n      cart {\n        id\n        quantity\n        variant {\n          id\n          available\n          price\n          selectedOptions {\n            id\n            option {\n              id\n              name\n            }\n            value {\n              id\n              name\n            }\n          }\n        }\n      }\n      orders(first: 1, orderBy: createdAt_DESC) {\n        id\n        createdAt\n        lineItems {\n          id\n          quantity\n          variant {\n            id\n            price\n            product {\n              id\n              name\n            }\n            selectedOptions {\n              id\n              value {\n                id\n                name\n              }\n            }\n            \n          }\n        }\n        totalPrice\n      }\n      selectedShop {\n        id\n        MOTD\n        bestSellerProducts(orderBy: position_ASC, first: 5) {\n          id\n          product {\n            ...ProductCardFragment\n          }\n        }\n        newProducts(orderBy: position_ASC, first: 5) {\n          id\n          product {\n            ...ProductCardFragment\n          }\n        }\n      }\n    }\n  }\n  ${ProductCardFragment}", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/home/query.gql.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "mutation", "name": "updateOneSignalUserId", "content": "{\n    updateUser(oneSignalUserId: $oneSignalUserId) {\n      id\n      oneSignalUserId\n    }\n  }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/home/query.gql.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($oneSignalUserId: String!)"}, {"type": "mutation", "name": "signUp", "content": "{\n      signup(email: $email, password: $password, firstName: $firstName, lastName: $lastName, shopId: $shopId) {\n        token\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/sign-up/query.gql.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($email: String!, $password: String!, $firstName: String!, $lastName: String!, $shopId: ID!)"}, {"type": "query", "name": "product", "content": "{\n      product(id: $productId) {\n        id\n        name\n        description\n        available\n        imageUrl\n        displayPrice\n        brand {\n          id\n          name\n        }\n        options {\n          id\n          name\n          values {\n            id\n            name\n          }\n        }\n        variants(where: { deletedAt: $nullValue }) {\n          id\n          available\n          price\n          selectedOptions {\n            id\n            option {\n              id\n              name\n            }\n            value {\n              id\n              name\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/views/product/queries.gql.js", "repo": "greatWall627_prismaEcommerce"}, "arguments": "($productId: ID!, $nullValue: DateTime)"}, {"type": "query", "name": "userInformation", "content": "{\n      me {\n        id\n        email\n        oneSignalUserId\n        firstName\n        orders {\n          id\n        }\n        cart {\n          id\n          deletedAt\n          quantity\n          variant {\n            id\n            available\n            price\n            selectedOptions {\n              id\n              option {\n                id\n                name\n              }\n              value {\n                id\n                name\n              }\n            }\n            product {\n              id\n              name\n              imageUrl\n              available\n              unavailableOptionsValues {\n                id\n                name\n              }\n              brand {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "24b2b68f5bdbd9fbbc2f234b652abf528103d8d5", "file": "mobile/src/graphql/queries/index.js", "repo": "greatWall627_prismaEcommerce"}}, {"type": "query", "name": "blocks", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "4681890f08f098b8c444cb5afcfa278054c3f859", "file": "src/apollo/queries.js", "repo": "tDev0809_trisolaris-interface"}, "arguments": "($timestampFrom: Int!, $timestampTo: Int!)"}, {"type": "mutation", "name": "SaveNotificationTokenWeb", "content": "{\n  saveNotificationTokenWeb(token:$token){\n    success\n    message\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/context/User.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($token:String!)"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/VerifyPhone/VerifyPhone.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)"}, {"type": "subscription", "name": "SubscriptionOrder", "content": "{\n    subscriptionOrder(id:$id){\n        _id\n        orderStatus\n        rider{\n            _id\n        }\n        completionTime\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/OrderDetail/OrderDetail.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "query", "name": "OrderStripe", "content": "{\n  orderStripe(id:$id){\n    _id\n    restaurant{\n      _id\n      name\n      image\n      slug\n      address\n      location {\n        coordinates\n      }\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n      details\n      label\n    }\n    deliveryCharges\n    orderId\n    user{\n      _id\n      phone\n      email\n      name\n    }\n    items{\n      _id\n      food\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    taxationAmount\n    tipping\n    paymentStatus\n    paymentMethod\n    orderAmount\n    paidAmount\n    orderStatus\n    orderDate\n    expectedTime\n    isPickedUp\n    createdAt\n    preparationTime\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/Stripe/Stripe.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "query", "name": "Restaurants", "content": "{\n  nearByRestaurants(latitude:$latitude,longitude:$longitude){\n    offers{\n      _id\n      name\n      tag\n      restaurants\n    }\n    sections{\n      _id\n      name\n      restaurants\n    }\n    restaurants{\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      reviewData{\n          total\n          ratings\n          reviews{\n            _id\n            order{\n              user{\n                _id\n                name\n                email\n              }\n            }\n            rating\n            description\n            createdAt\n          }\n      }\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          image\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      rating\n      isAvailable\n      openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/Pickup/Pickup.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($latitude:Float,$longitude:Float)"}, {"type": "mutation", "name": "PlaceOrder", "content": "{\n    placeOrder(restaurant:$restaurant,orderInput: $orderInput,paymentMethod:$paymentMethod,couponCode:$couponCode,tipping:$tipping, taxationAmount: $taxationAmount, address:$address, orderDate: $orderDate,isPickedUp: $isPickedUp, deliveryCharges:$deliveryCharges) {\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      orderDate\n      expectedTime\n      isPickedUp\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/screens/Checkout/Checkout.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($restaurant:String!,$orderInput:[OrderInput!]!,$paymentMethod:String!,$couponCode:String,$tipping:Float!, $taxationAmount: Float!,$address:AddressInput!, $orderDate: String!,$isPickedUp: Boolean!, $deliveryCharges: Float!)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     isActive\n     name\n     email\n     phone\n     isNewUser\n   }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/hooks/useRegistration.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)"}, {"type": "subscription", "name": "SubscriptionNewMessage", "content": "{\n  subscriptionNewMessage(order:$order){\n    id\n    message\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/hooks/useChat.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($order:ID!)"}, {"type": "query", "name": "Restaurant", "content": "{\n  restaurant(id:$id){\n    _id\n    orderId\n    orderPrefix\n    name\n    image\n    address\n    location{coordinates}\n    deliveryTime\n    minimumOrder\n    tax\n    reviewData{\n      total\n      ratings\n      reviews{\n        _id\n        order{\n          user{\n            _id\n            name\n            email\n          }\n        }\n        rating\n        description\n        createdAt\n      }\n    }\n    categories{\n      _id\n      title\n      foods{\n        _id\n        title\n        image\n        description\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons\n        }\n      }\n    }\n    options{\n      _id\n      title\n      description\n      price\n    }\n    addons{\n      _id\n      options\n      title\n      description\n      quantityMinimum\n      quantityMaximum\n    }\n    zone{\n      _id\n      title\n      tax\n    }\n    rating\n    isAvailable\n    openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/hooks/useRestaurant.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String)"}, {"type": "query", "name": "Rider", "content": "{\n  rider(id:$id){\n    _id\n    location {coordinates}\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Orders/OrderDetail/TrackingRider.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Profile/ProfileCard/ProfileCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)"}, {"type": "mutation", "name": "EditAddress", "content": "{\n    editAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Checkout/AddressDetail.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($addressInput:AddressInput!)"}, {"type": "mutation", "name": "Coupon", "content": "{\n    coupon(coupon:$coupon){\n      _id\n      title\n      discount\n      enabled\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/Checkout/CartItemCard.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($coupon:String!)"}, {"type": "query", "name": "Taxes", "content": "{\n  taxes {\n    _id\n    taxationCharges\n    enabled\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-web/src/components/RestaurantDetailComponent/RestaurantCart/MRestaurantCart.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "RiderOrders", "content": "{\n  riderOrders{\n        _id\n      orderId\n      createdAt\n      acceptedAt\n      pickedAt\n      assignedAt\n      isPickedUp\n      deliveredAt\n      expectedTime\n      deliveryCharges\n      restaurant{\n        _id\n        name\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        label\n        details\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n        isActive\n        createdAt\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      paymentStatus\n      orderStatus\n      tipping\n      taxationAmount\n      reason\n      isRiderRinged\n      preparationTime\n      rider{\n        _id\n        name\n        username\n      }\n    }\n    }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/routes/index.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/context/configuration.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "RiderWithdrawRequests", "content": "{\n  riderWithdrawRequests(id: $riderWithdrawRequestsId, offset:$offset) {\n    _id\n    requestId\n    requestAmount\n    requestTime\n    rider {\n      name\n      email\n      accountNumber\n    }\n    status\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/WalletHistory/WalletHistory.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($riderWithdrawRequestsId: String, $offset:Int)"}, {"type": "mutation", "name": "SendChatMessage", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/ChatWithCustomer/useChatScreen.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($orderId: ID!, $messageInput: ChatMessageInput!)"}, {"type": "subscription", "name": "SubscriptionNewMessage", "content": "{\n  subscriptionNewMessage(order:$order){\n    id\n    message\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/screens/ChatWithCustomer/useChatScreen.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($order:ID!)"}, {"type": "mutation", "name": "AssignOrder", "content": "{\n  assignOrder(id:$id){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "UpdateOrderStatusRider", "content": "{\n  updateOrderStatusRider(id:$id,status:$status){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/components/OrderDetail/Details/useDetails.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!,$status:String!)"}, {"type": "mutation", "name": "AssignOrder", "content": "{\n  assignOrder(id:$id){\n    _id\n    orderStatus\n    rider{\n      _id\n      name\n      username\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/components/Order/useOrder.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "ToggleRider", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-rider/src/components/Sidebar/useSidebar.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String)"}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/context/configuration.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "subscription", "name": "SubscribeOrderStatus", "content": "{\n    subscribeOrderStatus(_id:$_id){\n        _id\n        orderId\n        orderStatus\n        rider{\n            name\n        }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useOrderStatus.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($_id:String!)"}, {"type": "mutation", "name": "AcceptOrder", "content": "{\n    acceptOrder(_id:$_id, time:$time){\n        _id\n      orderStatus\n      preparationTime\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/ui/hooks/useAcceptOrder.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($_id:String!, $time:String)"}, {"type": "query", "name": "Orders", "content": "{\n    restaurantOrders{\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        details\n        label\n      }\n      items{\n        _id\n        title\n        description\n        image\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          description\n          title\n          quantityMinimum\n          quantityMaximum\n        }\n        specialInstructions\n        isActive\n        createdAt\n        updatedAt\n      }\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      status\n      paymentStatus\n      reason\n      isActive\n      createdAt\n      orderDate\n      deliveryCharges\n      isPickedUp\n      preparationTime\n      acceptedAt\n      isRinged\n      rider{\n        _id\n        name\n        username\n        available\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/navigation/mainStack.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "AcceptOrder", "content": "{\n    acceptOrder(_id:$_id, time:$time){\n        _id\n      orderStatus\n      preparationTime\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-restaurant/src/apollo/mocks.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($_id:String!, $time:String)"}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/context/Configuration.js", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateUser", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/PhoneNumber/usePhoneNumber.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)"}, {"type": "mutation", "name": "ReviewOrder", "content": "{\n    reviewOrder(reviewInput:{\n      order:$order,\n      rating:$rating,\n      description:$description,\n    }){\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n      }\n      items{\n        _id\n        title\n        food\n        description\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          title\n          description\n          quantityMinimum\n          quantityMaximum\n        }\n      }\n      user{\n        _id\n        name\n        phone\n      }\n      rider{\n        _id\n        name\n      }\n      review{\n        _id\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      tipping\n      taxationAmount\n      createdAt\n      completionTime\n      orderDate\n      expectedTime\n      isPickedUp\n      deliveryCharges\n      acceptedAt\n      pickedAt\n      deliveredAt\n      cancelledAt\n      assignedAt\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/RateAndReview/RateAndReview.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "(\n    $order:String!,\n    $rating:Int!,\n    $description:String,\n  )"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n          updateUser(updateUserInput:{name:$name,phone:$phone,phoneIsVerified:$phoneIsVerified,emailIsVerified:$emailIsVerified}){\n            _id\n            name\n            phone\n            phoneIsVerified\n            emailIsVerified\n          }\n        }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Profile/Profile.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($name:String!,$phone:String!,$phoneIsVerified:Boolean,$emailIsVerified:Boolean)"}, {"type": "mutation", "name": "ChangePassword", "content": "{\n    changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Profile/ChangePassword.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($oldPassword:String!,$newPassword:String!)"}, {"type": "mutation", "name": "SendOtpToPhoneNumber", "content": "{\n    sendOtpToPhoneNumber(phone: $phone, otp: $otp) {\n      result\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Otp/Phone/usePhoneOtp.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($phone: String!, $otp: String!)"}, {"type": "query", "name": "Chat", "content": "{\n  chat(order: $order) {\n    id\n    message\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/ChatWithRider/useChatScreen.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($order: ID!)"}, {"type": "mutation", "name": "SendChatMessage", "content": "{\n    sendChatMessage(message: $messageInput, orderId: $orderId) {\n      success\n      message\n      data {\n        id\n        message\n        user {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/ChatWithRider/useChatScreen.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($orderId: ID!, $messageInput: ChatMessageInput!)"}, {"type": "mutation", "name": "EmailExist", "content": "{\n    emailExist(email: $email) {\n      userType\n      _id\n      email\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Login/useLogin.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($email: String!)"}, {"type": "query", "name": "Restaurants", "content": "{\n  nearByRestaurants(latitude:$latitude,longitude:$longitude){\n    offers{\n      _id\n      name\n      tag\n      restaurants\n    }\n    sections{\n      _id\n      name\n      restaurants\n    }\n    restaurants{\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      reviewData{\n          total\n          ratings\n          reviews{\n            _id\n            order{\n              user{\n                _id\n                name\n                email\n              }\n            }\n            rating\n            description\n            createdAt\n          }\n      }\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          image\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      rating\n      isAvailable\n      openingTimes{\n      day\n      times{\n        startTime\n        endTime\n      }\n    }\n  }\n}\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Main/Main.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($latitude:Float,$longitude:Float)"}, {"type": "mutation", "name": "SelectAddress", "content": "{\n    selectAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/CartAddress/CartAddress.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "DeleteAddress", "content": "{\n    deleteAddress(id:$id){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/Addresses/Addresses.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:ID!)"}, {"type": "mutation", "name": "CreateAddress", "content": "{\n    createAddress(addressInput:$addressInput){\n      _id\n      addresses{\n        _id\n        label\n        deliveryAddress\n        details\n        location{coordinates}\n        selected\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/screens/NewAddress/NewAddress.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($addressInput:AddressInput!)"}, {"type": "query", "name": "Rider", "content": "{\n  rider(id:$id){\n    _id\n    location {coordinates}\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/components/OrderDetail/TrackingRider/TrackingRider.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String)"}, {"type": "subscription", "name": "SubscriptionOrder", "content": "{\n    subscriptionOrder(id:$id){\n        _id\n        orderStatus\n        rider{\n            _id\n        }\n        completionTime\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-app/src/components/Main/ActiveOrders/ActiveOrders.js", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "SendNotificationUser", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Notifications.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($notificationTitle:String, $notificationBody: String!)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id)\n      {\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryBounds{\n        coordinates\n      }\n      username\n      password\n      deliveryTime\n      minimumOrder\n      tax\n      isAvailable\n      stripeDetailsSubmitted\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n      owner{\n        _id\n        email\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/DeliveryBoundsAndLocation.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String)"}, {"type": "subscription", "name": "SubscriptionOrder", "content": "{\n    subscriptionOrder(id:$id){\n        _id\n        orderStatus\n        rider{\n            _id\n        }\n        completionTime\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/DispatchRestaurant.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "UpdateStatus", "content": "{\n  updateStatus(id:$id,orderStatus:$orderStatus){\n    _id\n    orderStatus\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/DispatchRestaurant.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!,$orderStatus:String!)"}, {"type": "query", "name": "GetActiveOrders", "content": "{\n  getActiveOrders(restaurantId:$restaurantId){\n    _id\n    zone{\n      _id\n    }\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n      details\n      label\n    }\n    items{\n      _id\n      title\n      description\n      image\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        description\n        title\n        quantityMinimum\n        quantityMaximum\n      }\n      specialInstructions\n      isActive\n      createdAt\n      updatedAt\n    }\n    user{\n      _id\n      name\n      phone\n      email\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    isPickedUp\n    status\n    paymentStatus\n    reason\n    isActive\n    createdAt\n    deliveryCharges\n    rider{\n      _id\n      name\n      username\n      available\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/DispatchRestaurant.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($restaurantId:ID)"}, {"type": "query", "name": "RidersByZone", "content": "{\n  ridersByZone(id:$id){\n    _id\n    name\n    username\n    password\n    phone\n    available\n    zone{\n      _id\n      title\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Dispatch.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "query", "name": "GetActiveOrders", "content": "{\n  getActiveOrders(restaurantId:$restaurantId){\n    _id\n    zone{\n      _id\n    }\n    orderId\n    restaurant{\n      _id\n      name\n      image\n      address\n      location{coordinates}\n    }\n    deliveryAddress{\n      location{coordinates}\n      deliveryAddress\n      details\n      label\n    }\n    items{\n      _id\n      title\n      description\n      image\n      quantity\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        _id\n        options{\n          _id\n          title\n          description\n          price\n        }\n        description\n        title\n        quantityMinimum\n        quantityMaximum\n      }\n      specialInstructions\n      isActive\n      createdAt\n      updatedAt\n    }\n    user{\n      _id\n      name\n      phone\n      email\n    }\n    paymentMethod\n    paidAmount\n    orderAmount\n    orderStatus\n    isPickedUp\n    status\n    paymentStatus\n    reason\n    isActive\n    createdAt\n    deliveryCharges\n    rider{\n      _id\n      name\n      username\n      available\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Dispatch.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($restaurantId:ID)"}, {"type": "mutation", "name": "DeleteCoupon", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Coupons.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id)\n      {\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryBounds{\n        coordinates\n      }\n      username\n      password\n      deliveryTime\n      minimumOrder\n      tax\n      isAvailable\n      stripeDetailsSubmitted\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n      owner{\n        _id\n        email\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/VendorProfile.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "EditRestaurant", "content": "{\n    editRestaurant(restaurant:$restaurantInput){\n      _id\n      orderId\n      orderPrefix\n      name\n      image\n      slug\n      address\n      username\n      password\n      location{coordinates}\n      isAvailable\n      minimumOrder\n      tax\n      openingTimes{\n        day\n        times{\n          startTime\n          endTime\n        }\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/VendorProfile.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($restaurantInput:RestaurantProfileInput!)"}, {"type": "query", "name": "RestaurantByOwner", "content": "{\n  restaurantByOwner(id:$id){\n  _id\n  email\n  userType\n  restaurants{\n    _id\n    orderId\n    orderPrefix\n    name\n    slug\n    image\n    address\n    username\n    password\n    location{coordinates}\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Restaurant.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String)"}, {"type": "query", "name": "Restaurants", "content": "{\n  restaurants{\n    _id\n    name\n    image\n    orderPrefix\n    slug\n    address\n    deliveryTime\n    minimumOrder\n    isActive\n    commissionRate\n    tax\n    owner{\n      _id\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/RestaurantList.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "GetDashboardSales", "content": "{\n    getDashboardSales(starting_date: $startingDate, ending_date: $endingDate,restaurant:$restaurant){\n      orders{\n        day\n        amount\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Dashboard.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($startingDate: String, $endingDate: String,$restaurant:String!)"}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currencySymbol\n    deliveryRate\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Configuration.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "Reviews", "content": "{\n    reviews(restaurant:$restaurant){\n      _id\n      order{\n        _id\n        orderId\n        items{\n          title\n        }\n        user{\n          _id\n          name\n          email\n        }\n      }\n      restaurant{\n        _id\n        name\n        image\n      }\n      rating\n      description\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Rating.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($restaurant:String!)"}, {"type": "mutation", "name": "DeleteFood", "content": "{\n        deleteFood(id:$id,restaurant:$restaurant,categoryId:$categoryId){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!,$restaurant:String!,$categoryId:String!)"}, {"type": "query", "name": "Zones", "content": "{\n    zones{\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Zone.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "query", "name": "ordersByRestId", "content": "{\n    ordersByRestId(restaurant:$restaurant,page:$page,rows:$rows,search:$search){\n      _id\n      orderId\n      restaurant{\n        _id\n        name\n        image\n        address\n        location{coordinates}\n      }\n      deliveryAddress{\n        location{coordinates}\n        deliveryAddress\n        details\n        label\n      }\n      items{\n        _id\n        title\n        description\n        image\n        quantity\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n          description\n          title\n          quantityMinimum\n          quantityMaximum\n        }\n        specialInstructions\n        isActive\n        createdAt\n        updatedAt\n      }\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      paymentMethod\n      paidAmount\n      orderAmount\n      orderStatus\n      status\n      paymentStatus\n      reason\n      isActive\n      createdAt\n      deliveryCharges\n      tipping\n      taxationAmount\n      rider{\n        _id\n        name\n        username\n        available\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Orders.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($restaurant:String!,$page:Int,$rows:Int,$search:String)"}, {"type": "query", "name": "GetWithdrawRequests", "content": "{\n      getAllWithdrawRequests(offset:$offset){\n          success\n          message\n          data{\n            _id\n            requestId\n            requestAmount\n            requestTime\n            rider{\n              _id\n              name\n              currentWalletAmount\n            }\n            status\n          }\n          pagination{\n            total\n          }\n      }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/WithdrawRequest.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($offset:Int)"}, {"type": "mutation", "name": "UpdateWithdrawRequest", "content": "{\n  updateWithdrawReqStatus(id:$id,status:$status){\n    success\n    message\n    data{\n      rider{\n        _id\n        currentWalletAmount\n      }\n      withdrawRequest{\n        _id\n        status\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/WithdrawRequest.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:ID!, $status:String!)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Addons.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "editSection", "content": "{\n  editSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Sections.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($section:SectionInput!)"}, {"type": "query", "name": "Restaurants", "content": "{\n  restaurants{\n    _id\n    name\n    image\n    orderPrefix\n    slug\n    address\n    deliveryTime\n    minimumOrder\n    isActive\n    commissionRate\n    tax\n    owner{\n      _id\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Commission.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "UpdateCommission", "content": "{\n  updateCommission(id:$id,commissionRate:$commissionRate){\n    _id\n    commissionRate\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Commission.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String!,$commissionRate:Float!)"}, {"type": "query", "name": "Restaurant", "content": "{\n      restaurant(id:$id){\n      _id\n      orderId\n      orderPrefix\n      slug\n      name\n      image\n      address\n      location{coordinates}\n      deliveryTime\n      minimumOrder\n      tax\n      categories{\n        _id\n        title\n        foods{\n          _id\n          title\n          description\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons\n          }\n          image\n          isActive\n        }\n      }\n      options{\n        _id\n        title\n        description\n        price\n      }\n      addons{\n        _id\n        options\n        title\n        description\n        quantityMinimum\n        quantityMaximum\n      }\n      \n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/views/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($id:String)"}, {"type": "query", "name": "Tips", "content": "{\n    tips {\n      _id\n      tipVariations\n      enabled\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Tipping/Tipping.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditRider", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n          zone{\n            _id\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Rider/Rider.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($riderInput:RiderInput!)"}, {"type": "mutation", "name": "CreateZone", "content": "{\n  createZone(zone:$zone){\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Zone/Zone.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($zone:ZoneInput!)"}, {"type": "mutation", "name": "CreateRider", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n      zone{\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($riderInput:RiderInput!)"}, {"type": "query", "name": "Zones", "content": "{\n    zones{\n    _id\n    title\n    description\n    location{coordinates}\n    isActive\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/WithdrawRequest/WithdrawRequest.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "EditCategory", "content": "{\n        editCategory(category:$category){\n          _id\n          categories{\n            _id\n            title\n            foods{\n              _id\n              title\n              description\n              variations{\n                _id\n                title\n                price\n                discounted\n                addons\n              }\n              image\n              isActive\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Category/Category.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($category:CategoryInput)"}, {"type": "subscription", "name": "SubscribePaceOrder", "content": "{\n    subscribePlaceOrder(restaurant:$restaurant){\n      userId\n      origin\n      order{\n        _id\n        orderId\n        restaurant{\n          _id\n          name\n          image\n          address\n          location{coordinates}\n        }\n        deliveryAddress{\n          location{coordinates}\n          deliveryAddress\n          details\n          label\n        }\n        items{\n          _id\n          title\n          description\n          image\n          quantity\n          variation{\n            _id\n            title\n            price\n            discounted\n          }\n          addons{\n            _id\n            options{\n              _id\n              title\n              description\n              price\n            }\n            description\n            title\n            quantityMinimum\n            quantityMaximum\n          }\n          specialInstructions\n          isActive\n          createdAt\n          updatedAt\n        }\n        user{\n          _id\n          name\n          phone\n          email\n        }\n        paymentMethod\n        paidAmount\n        orderAmount\n        orderStatus\n        status\n        paymentStatus\n        reason\n        isActive\n        createdAt\n        deliveryCharges\n        rider{\n          _id\n          name\n          username\n          available\n        }\n    }\n  }\n  }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Order/OrdersData.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($restaurant:String!)"}, {"type": "mutation", "name": "EditVendor", "content": "{\n  editVendor(vendorInput:$vendorInput){\n    _id\n    email\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Vendor/Vendor.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($vendorInput:VendorInput)"}, {"type": "mutation", "name": "CreateOptions", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    options{\n      _id\n      title\n      description\n      price\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Option/Option.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($optionInput:CreateOptionInput)"}, {"type": "mutation", "name": "editOption", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Option/Option.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($optionInput:editOptionInput)"}, {"type": "mutation", "name": "CreateSection", "content": "{\n  createSection(section:$section){\n      _id\n      name\n      enabled\n      restaurants{\n        _id\n        name\n      }\n    }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Section/Section.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($section:SectionInput!)"}, {"type": "query", "name": "Sections", "content": "{\n  sections{\n    _id\n    name\n    enabled\n    restaurants{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Section/Section.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}}, {"type": "mutation", "name": "CreateRestaurant", "content": "{\n  createRestaurant(restaurant:$restaurant,owner:$owner){\n    _id\n    orderId\n    orderPrefix\n    name\n    slug\n    image\n    address\n    username\n    password\n    minimumOrder\n    tax\n    location{coordinates}\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Restaurant/CreateRestaurant.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($restaurant:RestaurantInput!,$owner:ID!)"}, {"type": "mutation", "name": "SaveStripeConfiguration", "content": "{\n  saveStripeConfiguration(configurationInput:$configurationInput){\n    _id\n    publishableKey\n    secretKey\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Configuration/Stripe/Stripe.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($configurationInput:StripeConfigurationInput!)"}, {"type": "mutation", "name": "SaveCurrencyConfiguration", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currencySymbol\n  }\n}", "metadata": {"commit_hash": "908da81963710704cce1ba237f27a24edb96ff15", "file": "enatega-multivendor-admin/src/components/Configuration/Currency/Currency.jsx", "repo": "MX56893_restaurant-food-delivery-v2"}, "arguments": "($configurationInput:CurrencyConfigurationInput!)"}, {"type": "mutation", "name": "refreshTokens", "content": "{\n            refreshTokens(token: $token) {\n              token\n              refreshToken\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($token: String!)"}, {"type": "mutation", "name": "signIn", "content": "{\n            signIn(email: $email, password: $password, generateRefreshToken: true) {\n              token\n              refreshToken\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "confirmEmail", "content": "{\n            confirmEmail(token: $token) {\n              _\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($token: String!)"}, {"type": "mutation", "name": "deleteChallenge", "content": "{\n            deleteChallenge(id: $id)\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "fetchUserIdeas", "content": "{\n            ideas(createdById: $userId) {\n              totalCount\n              edges {\n                node {\n                  id\n                  title\n                  description\n                  imageUrl\n\n                  challenge {\n                    id\n                    title\n                    closeDate\n                  }\n\n                  createdDate\n                  modifiedDate\n\n                  reactionsSummary {\n                    value\n                    totalCount\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($userId: String!)"}, {"type": "query", "name": "idea", "content": "{\n            idea(id: $id) {\n              id\n              title\n              description\n              imageUrl\n\n              myReaction {\n                id\n                value\n              }\n\n              reactions {\n                totalCount\n                edges {\n                  node {\n                    id\n                    value\n\n                    createdDate\n                    createdBy {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n              reactionsSummary {\n                value\n                totalCount\n              }\n\n              challenge {\n                id\n                title\n                closeDate\n              }\n\n              createdBy {\n                id\n                name\n                imageUrl\n              }\n              createdDate\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "createIdea", "content": "{\n            createIdea(challengeId: $challengeId, title: $title, description: $description, upload: $upload) {\n              id\n              title\n              description\n              imageUrl\n\n              challenge {\n                id\n                closeDate\n              }\n\n              createdBy {\n                id\n                name\n                imageUrl\n              }\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($challengeId: String!, $title: String!, $description: String, $upload: Upload)"}, {"type": "mutation", "name": "createReaction", "content": "{\n            createReaction(objectType: IDEA, objectId: $ideaId, value: \"LIKE\") {\n              id\n              value\n            }\n          }", "metadata": {"commit_hash": "b475a7dfc6f4591a519763f1bd74f096af792358", "file": "src/core/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-app"}, "arguments": "($ideaId: ID!)"}, {"type": "query", "name": "pool", "content": "{\n    pool(id: $poolAddress) {\n      tick\n      token0 {\n        symbol\n        id\n        decimals\n      }\n      token1 {\n        symbol\n        id\n        decimals\n      }\n      feeTier\n      sqrtPrice\n      liquidity\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/pools/tickData.ts", "repo": "21orangehat_upool-listagem"}, "arguments": "($poolAddress: String!)"}, {"type": "query", "name": "topPools", "content": "{\n    pools(first: 100, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/pools/topPools.ts", "repo": "21orangehat_upool-listagem"}}, {"type": "query", "name": "tokenHourDatas", "content": "{\n    tokenHourDatas(\n      first: 100\n      skip: $skip\n      where: { token: $address, periodStartUnix_gt: $startTime }\n      orderBy: periodStartUnix\n      orderDirection: asc\n    ) {\n      periodStartUnix\n      high\n      low\n      open\n      close\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/tokens/priceData.ts", "repo": "21orangehat_upool-listagem"}, "arguments": "($startTime: Int!, $skip: Int!, $address: Bytes!)"}, {"type": "query", "name": "topPools", "content": "{\n    tokens(first: 50, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/tokens/topTokens.ts", "repo": "21orangehat_upool-listagem"}}, {"type": "query", "name": "topPools", "content": "{\n    asToken0: pools(\n      first: 200\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      id\n    }\n    asToken1: pools(\n      first: 200\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/tokens/poolsForToken.ts", "repo": "21orangehat_upool-listagem"}, "arguments": "($address: Bytes!)"}, {"type": "query", "name": "health", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: $name, subgraphError: allow) {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6e891f27da0f48871f5adaddf769c732f12328ea", "file": "src/data/application/index.ts", "repo": "21orangehat_upool-listagem"}, "arguments": "($name: Bytes)"}, {"type": "query", "name": "forumPostsAndTagsPage", "content": "{\n    ${forumPostsPage}\n    ${forumTags}\n  }", "metadata": {"commit_hash": "e6e1bfc0a0da61eebccb78abd0c86c4564b47636", "file": "src/graphql/forum.js", "repo": "louisryoung_svelte-sapper-graphql"}, "arguments": "($pageSize:Int = 20, $cursor: Int = 0, $search: String = \"\", $tags: [String] = [])"}, {"type": "subscription", "name": "balances", "content": "{\n    balances(where: { account_name: { _eq: \"gaboesquivel\" } }) {\n      account_name\n      amount\n      currency\n      decimals\n    }\n  }", "metadata": {"commit_hash": "f4458b0c525643980ddba1515d369b639adea9cd", "file": "templates/cra/src/views/Wallet.tsx", "repo": "chaingraph_chaingraph-cli"}}, {"type": "query", "name": "GetBooks", "content": "{\n        books {\n        title\n        author\n        }\n    }", "metadata": {"commit_hash": "19af53c92c83a86de83efab4dec7e21d9f6cf9de", "file": "src/pages/Willkommen/index.tsx", "repo": "formstardev_miniadmin"}}, {"type": "subscription", "name": "location_moderators_by_location", "content": "{\n  location_moderators(\n    where: {\n      location_id: {_eq: $location_id}}\n  ) {\n    id\n    location_id\n    created_at\n    approved\n    approved_at\n    approved_by\n    user {\n      uid\n      name\n      username\n      biography\n      image\n    }\n  }\n}", "metadata": {"commit_hash": "ccd5f11eadcd16c0ea1232f165fbb0029a421c73", "file": "src/services/graphql/endpoints/maplocation_moderators.js", "repo": "Makermed_CleanAirMap"}, "arguments": "(\n  $location_id: Int!\n)"}, {"type": "subscription", "name": "FeedsSubscription", "content": "{\n  feeds (\n    where: {category_id: {_neq: \"deleted\"}}\n  ){\n    id\n    category_id\n    name\n    description\n    slug\n    image\n    tags\n    followers\n    created_at\n    created_by\n    approved\n    last_viewlog\n    private\n    op_comments\n    op_posts\n    op_members\n    op_payment\n    op_anonymity\n    tg_wallet\n    tg_address\n    tg_amount\n    token_address\n    token_amount\n    article_count\n    notifications\n    notif_date\n    updated_at\n    feed_sources {\n      id\n      source_id\n      keyword_filter\n      approved\n      created_at\n      create_user {\n        uid\n        username\n      }\n      source {\n        id\n        branch\n        throttle\n        last_updated\n        has_articles\n      }\n    }\n    feed_reports {\n      id\n      report\n      approved\n      reported_at\n    }\n    feed_moderators {\n      id\n      feed_id\n      user_id\n      created\n      owner\n      approved\n      user {\n        uid\n        name\n        username\n        biography\n        image\n        msgToken\n      }\n    }\n    feed_followers {\n      id\n      user_id\n      feed_id\n      created\n      user {\n        uid\n        name\n        username\n        biography\n        image\n        msgToken\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ccd5f11eadcd16c0ea1232f165fbb0029a421c73", "file": "src/services/graphql/endpoints/basedata.js", "repo": "Makermed_CleanAirMap"}}, {"type": "subscription", "name": "FeedsSubscription", "content": "{\n  feeds (\n    where: {category_id: {_neq: \"deleted\"}}\n  ){\n    id\n    category_id\n    name\n    description\n    slug\n    image\n    tags\n    followers\n    created_at\n    created_by\n    approved\n    comment_conf\n    last_viewlog\n    private\n    op_comments\n    op_posts\n    op_members\n    op_payment\n    op_anonymity\n    tg_wallet\n    tg_address\n    tg_amount\n    token_address\n    token_amount\n    article_count\n    notifications\n    notif_date\n    updated_at\n    feed_sources {\n      id\n      source_id\n      keyword_filter\n      approved\n      created_at\n      create_user {\n        uid\n        username\n      }\n      source {\n        id\n        branch\n        throttle\n        last_updated\n        has_articles\n      }\n    }\n    feed_reports {\n      id\n      report\n      approved\n      reported_at\n    }\n    feed_moderators {\n      id\n      feed_id\n      user_id\n      created\n      owner\n      approved\n      user {\n        uid\n        name\n        username\n        biography\n        image\n        msgToken\n      }\n    }\n    feed_followers {\n      id\n      user_id\n      feed_id\n      created\n      user {\n        uid\n        name\n        username\n        biography\n        image\n        msgToken\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ccd5f11eadcd16c0ea1232f165fbb0029a421c73", "file": "src/services/graphql/endpoints/basedata.js", "repo": "Makermed_CleanAirMap"}}, {"type": "subscription", "name": "UserSubscription", "content": "{\n  users(\n    where: {\n      uid: {_eq: $uid}\n    }\n  ) {\n    uid\n    name\n    username\n    biography\n    image\n    provider\n    email\n    emailVerified\n    phone\n    phoneVerified\n    state\n    country\n    links\n    role\n    approved\n    signMethod\n    skipProfile\n    msgToken\n    cryptoAddress\n    cryptoENS\n    cryptoAmount\n    paid\n    paid_until\n    subscribe_email\n    created_at\n    categories_moderated {\n      category_id\n      approved\n      owner\n    }\n    feeds_created {\n      id\n    }\n    feeds_followed {\n      feed_id\n    }\n    feeds_moderated {\n      feed_id\n      approved\n      owner\n    }\n    sources_created {\n      id\n    }\n    sources_followed {\n      source_id\n    }\n    tags {\n      tag {\n        name\n        tag_categories {\n          category_id\n        }\n      }\n    }\n    banned {\n      id\n      user_id\n      feed_id\n      type\n      banned_at\n      banned_till\n    }\n    preapproved {\n      id\n      feed_id\n    }\n    users_followed {\n      id\n      user_id\n      followed_at\n      user {\n        name\n        username\n        image\n        biography\n        approved\n        msgToken\n      }\n    }\n    user_followers {\n      id\n      follower_id\n      followed_at\n      follower {\n        name\n        username\n        image\n        biography\n        approved\n        msgToken\n      }\n    }\n    users_invites {\n      id\n      invitee\n      invited_to\n      invited_at\n      is_phone\n      inviter {\n        name\n        username\n        image\n        biography\n        approved\n        msgToken\n      }\n    }\n    feeds_subscribed {\n      feed_id\n    }\n    user_feed_showfirst {\n      feed_id\n    }\n    regions_moderated {\n      id\n      region_id\n      approved\n    }\n    locations_moderated {\n      id\n      location_id\n      approved\n    }\n    locations_followed {\n      location_id\n    }\n    location_banned {\n      id\n      user_id\n      location_id\n      banned_at\n      user {\n        uid\n        username\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ccd5f11eadcd16c0ea1232f165fbb0029a421c73", "file": "src/services/graphql/endpoints/user.js", "repo": "Makermed_CleanAirMap"}, "arguments": "(\n  $uid: String!\n)"}, {"type": "subscription", "name": "feed_moderators_by_feed", "content": "{\n  feed_moderators(\n    where: {\n      feed_id: {_eq: $feed_id}}\n  ) {\n    id\n    feed_id\n    created\n    approved\n    approved_at\n    approved_by\n    owner\n    user {\n      uid\n      name\n      username\n      biography\n      image\n    }\n  }\n}", "metadata": {"commit_hash": "ccd5f11eadcd16c0ea1232f165fbb0029a421c73", "file": "src/services/graphql/endpoints/feed_moderators.js", "repo": "Makermed_CleanAirMap"}, "arguments": "(\n  $feed_id: String!\n)"}, {"type": "query", "name": "findShops", "content": "{\n    findShops(fields: {id: $id, name: $name}) {\n      ...ShopFields\n    }\n  }\n\n  ${ShopFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/queries/findShop.ts", "repo": "aerogear_offix-react-native-example"}, "arguments": "($id: ID!, $name: String!)"}, {"type": "query", "name": "findAllPersons", "content": "{\n    findAllPersons {\n      ...PersonFields\n    }\n  }\n\n  ${PersonFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/queries/findAllPersons.ts", "repo": "aerogear_offix-react-native-example"}}, {"type": "mutation", "name": "updateShop", "content": "{\n    updateShop(id: $id, input: {name: $name}) {\n      ...ShopFields\n    }\n  }\n\n  ${ShopFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/updateShop.ts", "repo": "aerogear_offix-react-native-example"}, "arguments": "($id: ID!, $name: String!)"}, {"type": "mutation", "name": "createPerson", "content": "{\n    createPerson(input: {name: $name}) {\n      ...PersonFields\n    }\n  }\n\n  ${PersonFragment}", "metadata": {"commit_hash": "6c14c97443f840399d338b75832f5917f64dfcb4", "file": "server/client/src/graphql/mutations/createPerson.ts", "repo": "aerogear_offix-react-native-example"}, "arguments": "($id: ID!, $name: String!)"}, {"type": "mutation", "name": "updateLiftMutation", "content": "{\n    updateLift(id: $id, movement: $movement, units: $units, weight: $weight) {\n      id\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}, "arguments": "($id: ID!, $movement: String!, $units: String!, $weight: Float!)"}, {"type": "mutation", "name": "facebookLoginMutation", "content": "{\n    authenticateFacebookUser(facebookToken: $facebookToken) {\n      token\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}, "arguments": "($facebookToken: String!)"}, {"type": "query", "name": "currentUserQuery", "content": "{\n    user {\n      id\n      firstName\n      lastName\n      gender\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "graphcool-auth/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "query", "name": "allBooks", "content": "{\n    allBooks {\n      id\n      rating\n      author\n      image\n      description\n      title\n    }\n  }", "metadata": {"commit_hash": "210853409fdbb6efd11c5c1c920ab7b392e4c430", "file": "book-it/api/graphcool.js", "repo": "hansjhoffman_react-native"}}, {"type": "query", "name": "Homes", "content": "{\n    homes {\n      data {\n        attributes {\n          intro\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "461f66277eb04a0f121b50b83fe2e6efb59aecbd", "file": "src/queries/home/home.js", "repo": "bitethecode_blog-template"}}, {"type": "query", "name": "Articles", "content": "{\n    articles(sort: \"published:desc\") {\n      data {\n        attributes {\n          slug\n          title\n          published\n          category {\n            data {\n              attributes {\n                slug\n                name\n              }\n            }\n          }\n          image {\n            data {\n              attributes {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "461f66277eb04a0f121b50b83fe2e6efb59aecbd", "file": "src/queries/article/articles.js", "repo": "bitethecode_blog-template"}}, {"type": "query", "name": "Projects", "content": "{\n    projects {\n      data {\n        attributes {\n          name \n          description\n          content\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "461f66277eb04a0f121b50b83fe2e6efb59aecbd", "file": "src/queries/project/projects.js", "repo": "bitethecode_blog-template"}}, {"type": "query", "name": "tokenDayDatas", "content": "{\n    tokenDayDatas(first: 2, orderBy: date, orderDirection: desc, where: { token: $tokenId }) {\n      id\n      token {\n        id\n        name\n        symbol\n      }\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}, "arguments": "($tokenId: ID!)"}, {"type": "query", "name": "tokens", "content": "{\n    tokens(where: { id: $address }, block: { number: $block }) {\n      id\n      symbol\n      name\n      decimals\n      untrackedVolumeUSD\n      tradeVolumeUSD\n      totalLiquidity\n      txCount\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}, "arguments": "($address: ID!, $block: Int!)"}, {"type": "query", "name": "tokenDayDatas", "content": "{\n    tokenDayDatas(orderBy: date, orderDirection: desc, where: { token: $tokenId }) {\n      id\n      date\n      token {\n        id\n        symbol\n        name\n      }\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      dailyVolumeToken\n      dailyVolumeUSD\n      mostLiquidPairs {\n        id\n        date\n      }\n    }\n    pairs0: pairs(\n      where: { token0: $tokenId }\n      first: 50\n      orderBy: reserveUSD\n      orderDirection: desc\n    ) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n    }\n    pairs1: pairs(\n      where: { token1: $tokenId }\n      first: 50\n      orderBy: reserveUSD\n      orderDirection: desc\n    ) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}, "arguments": "($tokenId: ID!)"}, {"type": "query", "name": "tokens", "content": "{\n    tokens(where: { id_in: $id }, orderDirection: asc) {\n      id\n      name\n      symbol\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}, "arguments": "($id: [Bytes]!)"}, {"type": "query", "name": "transactions", "content": "{\n    mints(\n      first: $txAmount\n      where: { pair_in: $allPairs }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(\n      first: $txAmount\n      where: { pair_in: $allPairs }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(\n      first: $txAmount\n      where: { pair_in: $allPairs }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}, "arguments": "($txAmount: Int!, $allPairs: [Bytes]!)"}, {"type": "query", "name": "snapshots", "content": "{\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\n      timestamp\n      reserveUSD\n      liquidityTokenBalance\n      liquidityTokenTotalSupply\n      reserve0\n      reserve1\n      token0PriceUSD\n      token1PriceUSD\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "511a12557a696ebf2498b546fecf35a7b67d9186", "file": "src/pages/Market/Data/query.js", "repo": "ACY-Labs_acy-dex-interface"}, "arguments": "($user: Bytes!, $skip: Int!)"}, {"type": "mutation", "name": "customerUpdate", "content": "{\n      customerUpdate(input: $input) {\n        customer {\n          id\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }", "metadata": {"commit_hash": "5dcbe39560ea84d54883c7e27657773311319d25", "file": "server/handlers/mutations/add-customer-metafield.js", "repo": "CharmingDev777_shopipoints.com-custom-app-main"}, "arguments": "($input: CustomerInput!)"}, {"type": "query", "name": "getForums", "content": "{\n    forums {\n      id\n      name\n      slug\n    }\n  }", "metadata": {"commit_hash": "2cc48e5c2fae89fbdd2f9dc37fe1de9c3fc49983", "file": "src/browser/graphql/index.js", "repo": "Undeadlol1_boilerplate"}}, {"type": "query", "name": "CorporationInformation", "content": "{\n        information: corporationByCorporationID(id: $id) {\n            id\n            name\n            ticker\n            memberCount\n            alliance {\n                id\n                name\n                ticker\n            }\n        }\n    }", "metadata": {"commit_hash": "009b5eae048747488ab78334a7cb9f92e1ad888f", "file": "src/util/queries/information.js", "repo": "eveisesi_neo-ui"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "SystemInformation", "content": "{\n        information: solarSystemBySolarSystemID(id: $id) {\n            id\n            name\n            constellation {\n                id\n                name\n                region {\n                    id\n                    name\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "009b5eae048747488ab78334a7cb9f92e1ad888f", "file": "src/util/queries/information.js", "repo": "eveisesi_neo-ui"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "Killmails", "content": "{\n        killmails: killmailsByEntityID(entity: $entity, id: $id, page: $page) {\n            id\n            hash\n            killmailTime\n            totalValue\n            system {\n                id\n                name\n                security\n                constellation {\n                    id\n                    name\n                    region {\n                        id\n                        name\n                    }\n                }\n            }\n            attackers {\n                character {\n                    id\n                    name\n                }\n                alliance {\n                    id\n                    name\n                }\n                corporation {\n                    id\n                    name\n                }\n                ship {\n                    id\n                    name\n                }\n                weapon {\n                    id\n                    name\n                }\n                finalBlow\n            }\n            victim {\n                character {\n                    id\n                    name\n                }\n                alliance {\n                    id\n                    name\n                }\n                corporation {\n                    id\n                    name\n                }\n                ship {\n                    id\n                    name\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "009b5eae048747488ab78334a7cb9f92e1ad888f", "file": "src/util/queries/killmails.js", "repo": "eveisesi_neo-ui"}, "arguments": "($entity: Entity!, $id: Int!, $page: Int = 1)"}, {"type": "mutation", "name": "CreateProject", "content": "{\n    createEconomicEvent(\n      event: {\n        action: \"produce\"\n        provider: $agent\n        receiver: $agent\n        outputOf: $process\n        hasPointInTime: $creationTime\n        resourceClassifiedAs: $tags\n        resourceConformsTo: $resourceSpec\n        resourceQuantity: { hasNumericalValue: 1, hasUnit: $oneUnit }\n        toLocation: $location\n        resourceMetadata: $metadata\n      }\n      newInventoriedResource: { name: $name, note: $note, images: $images, repo: $repo, license: $license }\n    ) {\n      economicEvent {\n        id\n        resourceInventoriedAs {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "(\n    $name: String!\n    $note: String!\n    $metadata: JSONObject\n    $agent: ID!\n    $creationTime: DateTime!\n    $location: ID\n    $tags: [URI!]\n    $resourceSpec: ID!\n    $oneUnit: ID!\n    $images: [IFile!]\n    $repo: String\n    $process: ID!\n    $license: String!\n  )"}, {"type": "query", "name": "GetProjects", "content": "{\n    proposals(first: $first, after: $after, before: $before, last: $last, filter: $filter) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n        totalCount\n        pageLimit\n      }\n      edges {\n        cursor\n        node {\n          id\n          name\n          created\n          primaryIntents {\n            resourceClassifiedAs\n            action {\n              id\n            }\n            hasPointInTime\n            hasBeginning\n            hasEnd\n            resourceInventoriedAs {\n              conformsTo {\n                name\n              }\n              classifiedAs\n              primaryAccountable {\n                name\n                id\n              }\n              name\n              id\n              note\n              metadata\n              onhandQuantity {\n                hasUnit {\n                  label\n                }\n              }\n              images {\n                hash\n                name\n                mimeType\n                bin\n              }\n            }\n          }\n          reciprocalIntents {\n            resourceQuantity {\n              hasNumericalValue\n              hasUnit {\n                label\n                symbol\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($first: Int, $after: ID, $last: Int, $before: ID, $filter: ProposalFilterParams)"}, {"type": "mutation", "name": "CreateProcess", "content": "{\n    createProcess(process: { name: $name }) {\n      process {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($name: String!)"}, {"type": "mutation", "name": "LinkContributionAndProposalAndIntent", "content": "{\n    proposeCite: proposeIntent(publishedIn: $proposal, publishes: $citeIntent) {\n      proposedIntent {\n        id\n      }\n    }\n    proposeAccept: proposeIntent(publishedIn: $proposal, publishes: $acceptIntent) {\n      proposedIntent {\n        id\n      }\n    }\n    proposeModify: proposeIntent(publishedIn: $proposal, publishes: $modifyIntent) {\n      proposedIntent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "(\n    $proposal: ID!\n    $citeIntent: ID!\n    $acceptIntent: ID!\n    $modifyIntent: ID!\n  )"}, {"type": "mutation", "name": "contributeToProject", "content": "{\n    createEconomicEvent(\n      event: {\n        action: \"work\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceConformsTo: $conformsTo\n        hasPointInTime: $creationTime\n        effortQuantity: { hasNumericalValue: 1, hasUnit: $unitOne }\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "(\n    $agent: ID! # Agent.id\n    $creationTime: DateTime!\n    $process: ID! # Process.id\n    $unitOne: ID! # Unit.id\n    $conformsTo: ID!\n  )"}, {"type": "query", "name": "askResourcePrimaryAccountable", "content": "{\n    economicResource(id: $id) {\n      id\n      name\n      primaryAccountable {\n        id\n        name\n        images {\n          bin\n          mimeType\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "relocateProject", "content": "{\n    pickup: createEconomicEvent(\n      event: {\n        action: \"pickup\"\n        inputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceInventoriedAs: $resource\n        resourceQuantity: $quantity\n        hasPointInTime: $now\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n    dropoff: createEconomicEvent(\n      event: {\n        action: \"dropoff\"\n        outputOf: $process\n        provider: $agent\n        receiver: $agent\n        resourceInventoriedAs: $resource\n        resourceQuantity: $quantity\n        toLocation: $location\n        hasPointInTime: $now\n      }\n    ) {\n      economicEvent {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "(\n    $process: ID!\n    $agent: ID!\n    $resource: ID!\n    $quantity: IMeasure!\n    $now: DateTime!\n    $location: ID!\n  )"}, {"type": "mutation", "name": "SendEmailVerification", "content": "{\n    personRequestEmailVerification(template: $template)\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($template: EmailTemplate!)"}, {"type": "query", "name": "FetchSelf", "content": "{\n    personCheck(email: $email, eddsaPublicKey: $pubkey) {\n      name\n      user\n      email\n      primaryLocation {\n        id\n        name\n        mappableAddress\n        lat\n        long\n      }\n      id\n      isVerified\n      note\n      images {\n        bin\n        mimeType\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "lib/QueryAndMutation.ts", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($email: String!, $pubkey: String!)"}, {"type": "mutation", "name": "RegisterUser", "content": "{\n    keypairoomServer(firstRegistration: $firstRegistration, userData: $userData)\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "contexts/AuthContext.tsx", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($firstRegistration: Boolean!, $userData: JSONObject!)"}, {"type": "query", "name": "getProjectTrace", "content": "{\n    economicResource(id: $id) {\n      trace {\n        __typename\n        ... on EconomicEvent {\n          hasPointInTime\n          action {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/LoshImportedDate.tsx", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetTrace", "content": "{\n    economicResource(id: $id) {\n      trace {\n        __typename\n        ... on EconomicEvent {\n          hasPointInTime\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/ProjectTime.tsx", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetUserImages", "content": "{\n    person(id: $userId) {\n      id\n      name\n      images {\n        bin\n        mimeType\n        date\n        description\n        extension\n        hash\n        name\n        size\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/brickroom/BrUserAvatar.tsx", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($userId: ID!)"}, {"type": "query", "name": "GetUserLayout", "content": "{\n    person(id: $id) {\n      id\n      name\n      note\n      email\n      user\n      images {\n        hash\n        name\n        mimeType\n        bin\n        size\n        extension\n        description\n      }\n      ethereumAddress\n      primaryLocation {\n        id\n        name\n        mappableAddress\n        lat\n        long\n      }\n    }\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/layout/FetchUserLayout.tsx", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "PersonExists", "content": "{\n    personExists(email: $email, user: $user)\n  }", "metadata": {"commit_hash": "e89b2e6ad7f62816fc692b40f2e1b8351caf7337", "file": "components/partials/sign_up/UserData.tsx", "repo": "interfacerproject_interfacer-gui"}, "arguments": "($email: String, $user: String)"}, {"type": "query", "name": "profile", "content": "{\n    profile(username: $username) {\n      _id\n      username\n      email\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/queries.js", "repo": "RichardBaier_dundrag"}, "arguments": "($username: String!)"}, {"type": "query", "name": "getCharacter", "content": "{\n    character(_id: $_id) {\n      _id\n      characterName\n      characterClass\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/queries.js", "repo": "RichardBaier_dundrag"}, "arguments": "($_id: ID!)"}, {"type": "query", "name": "getCharacters", "content": "{\n    getCharacters {\n      _id\n      character_name\n      character_class\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/queries.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "RemoveCharacter", "content": "{\n    removeCharacter(characterId: $characterId) {\n      _id\n      character_name\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/mutations.js", "repo": "RichardBaier_dundrag"}, "arguments": "($characterId: ID!)"}, {"type": "mutation", "name": "deleteUser", "content": "{\n    deleteUser(userId: $userId) {\n      success\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/AlertDialog.jsx", "repo": "Dr169_Air-condition"}, "arguments": "($userId: ID!)"}, {"type": "mutation", "name": "login", "content": "{\n  login(email: $email password: $password ){\n    token\n  }\n}", "metadata": {"commit_hash": "fded8f5e0ee7b70172ed1cc0aa2b3e6e551ed2c1", "file": "src/graphql/mutations.js", "repo": "Umoren_Vue-auth"}, "arguments": "($email: String! $password: String! )"}, {"type": "mutation", "name": "createUser", "content": "{\n    createUser( name: $name, email: $email, password: $password) {\n      token\n    }\n}", "metadata": {"commit_hash": "fded8f5e0ee7b70172ed1cc0aa2b3e6e551ed2c1", "file": "src/graphql/mutations.js", "repo": "Umoren_Vue-auth"}, "arguments": "($name: String! $email: String! $password: String! )"}, {"type": "query", "name": "LoadProfile", "content": "{\n            user(id: \"${id}\") {\n              ${PROFILE_PROPS}\n              ${\n                id === this.username\n                  ?", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botCreate", "content": "{\n          botCreate {\n            messages {\n              field\n              message\n            }\n            successful\n            result {\n              id\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "loadBot", "content": "{\n          bot(id: $id) {\n            ${BOT_PROPS}\n            visitors: subscribers(first: 10, type: VISITOR) {\n              totalCount\n              edges {\n                cursor\n                node {\n                  ${PROFILE_PROPS}\n                }\n              }\n            }\n            posts: items(first: 10) {\n              ${BOT_POST_LIST_PROPS}\n            }\n\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($id: String!, $ownUsername: String!)"}, {"type": "mutation", "name": "userLocationGetToken", "content": "{\n          userLocationGetToken {\n            successful\n            messages {\n              message\n            }\n            result\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userLocationUpdate", "content": "{\n          userLocationUpdate(\n            input: $input\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "(\n          $input: UserLocationUpdateInput!\n        )"}, {"type": "query", "name": "loadBot", "content": "{\n          bot(id: $id) {\n            items(after: $cursor, first: $limit) {\n              ${BOT_POST_LIST_PROPS}\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($id: UUID!, $limit: Int, $cursor: String)"}, {"type": "mutation", "name": "botInvitationRespond", "content": "{\n          botInvitationRespond(input: $input) {\n            successful\n            result\n            messages {\n              message\n              field\n              code\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($input: BotInvitationRespondInput!)"}, {"type": "mutation", "name": "userUpdate", "content": "{\n          userUpdate(input: {values: $values}) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($values: UserParams!)"}, {"type": "mutation", "name": "userDelete", "content": "{\n          userDelete {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userBlock", "content": "{\n          userBlock(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($input: UserBlockInput!)"}, {"type": "mutation", "name": "botDelete", "content": "{\n          botDelete(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($input: BotDeleteInput!)"}, {"type": "mutation", "name": "botUpdate", "content": "{\n          botUpdate(input: {id: $id, userLocation: $userLocation, values: $values}) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "(\n          $id: String!\n          $userLocation: UserLocationUpdateInput\n          $values: BotParams\n        )"}, {"type": "mutation", "name": "botItemPublish", "content": "{\n          botItemPublish(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($input: BotItemPublishInput!)"}, {"type": "mutation", "name": "pushNotificationsEnable", "content": "{\n          pushNotificationsEnable(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($input: PushNotificationsEnableInput!)"}, {"type": "mutation", "name": "pushNotificationsDisable", "content": "{\n          pushNotificationsDisable(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($input: PushNotificationsDisableInput!)"}, {"type": "mutation", "name": "mediaDelete", "content": "{\n          mediaDelete(input: {url: $tros}) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($tros: String!)"}, {"type": "query", "name": "searchUsers", "content": "{\n          users(limit: 20, searchTerm: $text) {\n            ${PROFILE_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($text: String!)"}, {"type": "mutation", "name": "userInviteRedeemCode", "content": "{\n          userInviteRedeemCode(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($input: UserInviteRedeemCodeInput!)"}, {"type": "query", "name": "userBulkLookup", "content": "{\n            userBulkLookup(phoneNumbers: $phoneNumbers) {\n              e164PhoneNumber\n              phoneNumber\n              user {\n                ${PROFILE_PROPS}\n              }\n              relationship\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($phoneNumbers: [String]!)"}, {"type": "mutation", "name": "presenceStatus", "content": "{\n          presenceStatus(\n            input: {status: $status}\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "(\n          $status: PresenceStatus!\n        )"}, {"type": "mutation", "name": "userLocationRequestTrigger", "content": "{\n          userLocationRequestTrigger(\n            input: {userId: $userId}\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "(\n          $userId: String!\n        )"}, {"type": "mutation", "name": "userFullAudit", "content": "{\n          userFullAudit(\n            input: {enable: $enable}\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "(\n          $enable: Boolean!\n        )"}, {"type": "subscription", "name": "notifications", "content": "{\n            notifications {\n              ${NOTIFICATIONS_PROPS}\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($ownUsername: String!)"}, {"type": "subscription", "name": "subscribeBotVisitors", "content": "{\n            botGuestVisitors {\n              action\n              bot {\n                ${BOT_PROPS}\n                visitors: subscribers(first: 1, type: VISITOR) {\n                    edges {\n                      cursor\n                      node {\n                        ${PROFILE_PROPS}\n                      }\n                    }\n                  }\n              }\n              visitor {\n                id\n              }\n              updatedAt\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($ownUsername: String!)"}, {"type": "query", "name": "getBotProfiles", "content": "{\n          bot(id: $botId) {\n            id\n            subscribers(after: $cursor, first: $limit, type: ${relationship}) {\n              totalCount\n              edges {\n                cursor\n                node {\n                  ${PROFILE_PROPS}\n                }\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}, "arguments": "($botId: UUID!, $cursor: String, $limit: Int)"}, {"type": "mutation", "name": "updateTask", "content": "{\n    updateTask(data: $data, where: $where) {\n      completed\n      createdAt\n      id\n      text\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/tasks.js", "repo": "amplication_react-todos"}, "arguments": "($data: TaskUpdateInput!, $where: TaskWhereUniqueInput!)"}, {"type": "query", "name": "Editions", "content": "{EDITIONS_FILTERS}\n    ) {\n      editions(\n        where: {\n          active: true,\n          offersOnly: false,\n          remainingSupply_gt: 0,\n          priceInWei_gt: 0,\n          ${extraWhere.join('\\n')}\n        }\n        ${EDITIONS_ARGUMENTS}\n      ) {\n        ${isCount ? 'id' : '...editionFragment'}\n      }\n    }\n    ${isCount ? '' : editionFragment()}", "metadata": {"commit_hash": "2fd1d1f3f74ac208df61f6d211ee62b13e5727db", "file": "webapp/src/modules/vendor/known_origin/edition/api.ts", "repo": "sheriff-rango_nft-marketplace-practice"}, "arguments": "(\n      $"}, {"type": "query", "name": "EditionById", "content": "{\n    editions(where: { id: $id }, first: 1) {\n      ...editionFragment\n    }\n  }\n  ${editionFragment()}", "metadata": {"commit_hash": "2fd1d1f3f74ac208df61f6d211ee62b13e5727db", "file": "webapp/src/modules/vendor/known_origin/edition/api.ts", "repo": "sheriff-rango_nft-marketplace-practice"}, "arguments": "($id: String)"}, {"type": "query", "name": "allTestimonials", "content": "{\n    allTestimonialss {\n      edges {\n        node {\n          testimony\n          avatar\n          role\n          company\n          name\n          _meta {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d43fc12efb4e3b698bbd3519f51ff47302077561", "file": "lib/queries.ts", "repo": "simonsisay_portfolio-site"}}, {"type": "query", "name": "allPosts", "content": "{\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux/components/PostList.js", "repo": "neat-soft_next.js"}, "arguments": "($first: Int!, $skip: Int!)"}, {"type": "mutation", "name": "updatePost", "content": "{\n        updatePost(id: $id, votes: $votes) {\n          id\n          __typename\n          votes\n        }\n      }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo/components/PostUpvoter.js", "repo": "neat-soft_next.js"}, "arguments": "($id: ID!, $votes: Int)"}, {"type": "mutation", "name": "updatePost", "content": "{\n    updatePost(id: $id, votes: $votes) {\n      id\n      __typename\n      votes\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux-saga/components/PostVoteUp.js", "repo": "neat-soft_next.js"}, "arguments": "($id: ID!, $votes: Int)"}, {"type": "mutation", "name": "Signup", "content": "{\n    signup(signUpInput: $signUpInput) {\n      user {\n        username\n        id\n        email\n      }\n      refreshToken\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/signup.js", "repo": "competitivebidding_frontend"}, "arguments": "($signUpInput: SignUpInput!)"}, {"type": "query", "name": "GetAllMessagesByRoomId", "content": "{\n  getAllMessagesByRoomId(userMessage: $userMessage) {\n    content\n    createdAt\n    id\n    roomId\n    updatedAt\n    userId\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}, "arguments": "($userMessage: UserMessages!)"}, {"type": "mutation", "name": "JoinToRoom", "content": "{\n  joinToRoom(roomId: $roomId) {\n    username\n    firstname\n    lastname\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}, "arguments": "($roomId: Float!)"}, {"type": "query", "name": "GetAllRooms", "content": "{\n  getAllRooms {\n    id\n    ownerId\n    title\n    description\n    createdAt\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "GetAllUsersByRoomId", "content": "{\n      getAllUsersByRoomId(roomId: $roomId) {\n        username\n        firstname\n        lastname\n        avatarUrl\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}, "arguments": "($roomId: Float!)"}, {"type": "mutation", "name": "CreateMyBid", "content": "{\n      createMyBid(input: $input) {\n        id\n        userId\n        auctionId\n        bitPrice\n        createdAt\n        updatedAt\n        user {\n          username\n          firstname\n          lastname\n          avatarUrl\n        }\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/auctions.js", "repo": "competitivebidding_frontend"}, "arguments": "($input: CreateBidInput!)"}, {"type": "mutation", "name": "GetTokenById", "content": "{\n  updateToken(id: $updateTokenId, data: $data) {\n    createdAt\n    description\n    id\n    points\n    price\n    sortOrder\n    title\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/tokens.js", "repo": "competitivebidding_frontend"}, "arguments": "($updateTokenId: Int!, $data: UpdateTokenInput!)"}, {"type": "mutation", "name": "createSqlQuery", "content": "{\n        create_query {\n            success\n            error\n            result {\n                view_id\n                project {\n                    name\n                }\n                path\n                spec {\n                    ... on QuerySpec {\n                        query_text\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-web/create-query-button.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "query", "name": "formattedQueryText", "content": "{\n        formatted_query_text(query_text: $queryText)\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/query-editor-bar.tsx", "repo": "andrewsmike_jasmine"}, "arguments": "($queryText: String!)"}, {"type": "mutation", "name": "createHistoryTable", "content": "{\n        delete_view(id: $viewId) {\n            success\n            error\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/schema-settings.tsx", "repo": "andrewsmike_jasmine"}, "arguments": "(\n        $sourceDbName: String!\n        $sourceTableName: String!\n    )"}, {"type": "mutation", "name": "viewResultPreview", "content": "{\n        preview_view_result(id: $viewId) {\n            success\n            error\n            result\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/view-result-preview.tsx", "repo": "andrewsmike_jasmine"}, "arguments": "($viewId: ID!)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(email: $email, password: $password) {\n      id\n      email\n      firstName\n      lastName\n    }\n  }", "metadata": {"commit_hash": "1da721c31ef94e5172a7ed7719d575f484f67b1e", "file": "src/app/mutations/Login.js", "repo": "johncoffeeocean_with-nextjs-graphql-mongodb"}, "arguments": "($email: String, $password: String)"}, {"type": "mutation", "name": "Signup", "content": "{\n    signup(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      id\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "1da721c31ef94e5172a7ed7719d575f484f67b1e", "file": "src/app/mutations/Signup.js", "repo": "johncoffeeocean_with-nextjs-graphql-mongodb"}, "arguments": "($firstName: String, $lastName: String, $email: String, $password: String)"}, {"type": "query", "name": "FETCH", "content": "{\n    mp: nodes__mp(where: { item: { type_id: { _eq: $type_id } } }) { id item_id path_item_depth path_item_id root_id position_id by_position(order_by: { path_item_depth: asc }) { id item_id path_item_depth path_item_id root_id position_id } }\n    nodes(where: { type_id: { _eq: $type_id } }) { from_id id to_id type_id in { from_id id to_id type_id } out { from_id id to_id type_id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/check.ts", "repo": "deep-foundation_boilerplate"}, "arguments": "($type_id: Int)"}, {"type": "mutation", "name": "DeleteNode", "content": "{\n    delete_nodes(where: { id: { _eq: $id } }) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}, "arguments": "($id: Int)"}, {"type": "query", "name": "FIND_NO_PARENT", "content": "{\n    nodes(where: {\n      from_id: { _is_null: true },\n      to_id: { _is_null: true },\n      _not: { _by_path_item: { item_id: {_eq: $notId} } }\n    }) { id }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}, "arguments": "($notId: Int, $type_id: Int)"}, {"type": "query", "name": "Vessels", "content": "{\n    vessels(filter: {date: $date, vesselId: $vesselId}, offset: $offset, size: $size, sortBy: $sortBy, sortDirection: $sortDirection){\n      id\n      vesselId\n      exteriorMarking\n      administrativePower\n      lengthOverAll\n      creationDate\n      updateDate\n      vesselId\n      comments\n      basePortLocation {\n        id\n        label\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/vessel-service.ts", "repo": "blavenie_ionic4-starter-app"}, "arguments": "($date: Date, $vesselId: Int, $offset: Int, $size: Int, $sortBy: String, $sortDirection: String)"}, {"type": "mutation", "name": "saveAccount", "content": "{\n    saveAccount(account: $account){\n      id\n      updateDate\n      settings {\n        id\n        updateDate\n      }\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}, "arguments": "($account:AccountVOInput)"}, {"type": "mutation", "name": "sendAccountConfirmationEmail", "content": "{\n    sendAccountConfirmationEmail(email: $email, locale: $locale)\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}, "arguments": "($email:String, $locale:String)"}, {"type": "subscription", "name": "updateAccount", "content": "{\n          updateAccount(pubkey: $pubkey, interval: $interval) {\n            id\n            updateDate\n          }\n        }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}, "arguments": "($pubkey: String, $interval: Int)"}, {"type": "mutation", "name": "saveTrips", "content": "{\n    saveTrips(trips: $trips){\n      id\n      updateDate\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/trip-service.ts", "repo": "blavenie_ionic4-starter-app"}, "arguments": "($trips:[TripVOInput])"}, {"type": "query", "name": "user", "content": "{\n    user(username: $username) {\n      _id\n      username\n      email\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/queries.js", "repo": "Moses-Ian_letters"}, "arguments": "($username: String!)"}, {"type": "mutation", "name": "login", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n\t\t\t\tdailyHints\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "addFriend", "content": "{\n    addFriend(friendId: $id) {\n      _id\n      username\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "shareLobbyByEmail", "content": "{\n\t\tshareLobbyByEmail(room: $room, to: $to) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}, "arguments": "($room: String!, $to: [String]!)"}, {"type": "mutation", "name": "sendFeedback", "content": "{\n\t\tsendFeedback(input: $input) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}, "arguments": "($input: FeedbackInput!)"}, {"type": "mutation", "name": "createUser", "content": "{\n    createUser(input: $input) {\n      email\n    }\n  }", "metadata": {"commit_hash": "b51fb08011eb7f9872aff7c5266f46d15eec0047", "file": "s3-react-app/src/components/NewUser/NewUser.tsx", "repo": "sudopla_react-cognito-appsync"}, "arguments": "($input: UserInput!)"}, {"type": "mutation", "name": "createPurchase", "content": "{\n  purchase(\n    lines: $lines\n    deliveryMethodId: $deliveryMethodId\n    deliveryAddressId: $deliveryAddressId\n  ) {\n    id\n    buyerAddress\n    buyerProfile {\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n    sellerAddress\n    sellerProfile {\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n    purchaseId\n    lines {\n      id\n      amount\n      offer {\n        id\n        version\n        createdByAddress\n        createdByProfile {\n          id\n          circlesAddress\n          firstName\n          lastName\n          avatarUrl\n        }\n        pricePerUnit\n        title\n        description\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($lines: [PurchaseLineInput!]!, $deliveryMethodId: Int!, $deliveryAddressId: Int)"}, {"type": "mutation", "name": "setStringUpdateState", "content": "{\n  setStringUpdateState(key: $key) {\n    lang\n    key\n    createdBy\n    version\n    value\n    needsUpdate\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($key: String)"}, {"type": "mutation", "name": "claimInvitation", "content": "{\n  claimInvitation(code: $code) {\n    success\n    claimedInvitation {\n      createdAt\n      createdByProfileId\n      claimedAt\n      claimedByProfileId\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($code: String!)"}, {"type": "mutation", "name": "removeMember", "content": "{\n  removeMember(groupId: $groupId, memberAddress: $memberAddress) {\n    error\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($groupId: String!, $memberAddress: String!)"}, {"type": "mutation", "name": "redeemClaimedInvitation", "content": "{\n  redeemClaimedInvitation {\n    success\n    error\n    transactionHash\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertProfile", "content": "{\n  upsertProfile(\n    data: {id: $id, firstName: $firstName, lastName: $lastName, emailAddress: $emailAddress, askedForEmailAddress: $askedForEmailAddress, dream: $dream, country: $country, avatarUrl: $avatarUrl, avatarCid: $avatarCid, avatarMimeType: $avatarMimeType, circlesAddress: $circlesAddress, circlesSafeOwner: $circlesSafeOwner, newsletter: $newsletter, displayCurrency: $displayCurrency, displayTimeCircles: $displayTimeCircles, cityGeonameid: $cityGeonameid, status: $status, successorOfCirclesAddress: $successorOfCirclesAddress, gender: $gender, age: $age}\n  ) {\n    id\n    circlesAddress\n    displayCurrency\n    circlesSafeOwner\n    invitationLink\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    emailAddress\n    askedForEmailAddress\n    dream\n    country\n    avatarUrl\n    avatarCid\n    avatarMimeType\n    newsletter\n    displayTimeCircles\n    displayCurrency\n    cityGeonameid\n    age\n    gender\n    city {\n      geonameid\n      name\n      country\n      latitude\n      longitude\n      population\n    }\n    memberships {\n      isAdmin\n      organisation {\n        id\n        circlesAddress\n        displayCurrency\n        displayName\n        circlesSafeOwner\n        name\n        description\n        avatarUrl\n        cityGeonameid\n        city {\n          geonameid\n          country\n          name\n          population\n        }\n      }\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($id: Int, $firstName: String!, $lastName: String, $emailAddress: String, $askedForEmailAddress: Boolean!, $dream: String, $country: String, $avatarUrl: String, $avatarCid: String, $avatarMimeType: String, $circlesAddress: String, $circlesSafeOwner: String, $newsletter: Boolean, $displayCurrency: DisplayCurrency, $displayTimeCircles: Boolean, $cityGeonameid: Int, $status: String!, $successorOfCirclesAddress: String, $gender: Gender, $age: Int)"}, {"type": "mutation", "name": "importOrganisations", "content": "{\n  importOrganisationsOfAccount {\n    id\n    circlesAddress\n    name\n    description\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "revokeSafeVerification", "content": "{\n  revokeSafeVerification(safeAddress: $safeAddress) {\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($safeAddress: String!)"}, {"type": "mutation", "name": "confirmLegalAge", "content": "{\n  confirmLegalAge(age: $age)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($age: Int!)"}, {"type": "mutation", "name": "upsertOffer", "content": "{\n  upsertOffer(offer: $offer) {\n    id\n    version\n    createdAt\n    createdByAddress\n    title\n    description\n    pictureUrl\n    pricePerUnit\n    minAge\n    currentInventory\n    timeCirclesPriceShare\n    tags {\n      typeId\n      value\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($offer: OfferInput!)"}, {"type": "mutation", "name": "proofUniqueness", "content": "{\n  proofUniqueness(humanodeToken: $humanodeToken) {\n    existingSafe\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($humanodeToken: String!)"}, {"type": "query", "name": "lastAcknowledgedAt", "content": "{\n  lastAcknowledgedAt(safeAddress: $safeAddress)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($safeAddress: String!)"}, {"type": "query", "name": "invitationTransaction", "content": "{\n  invitationTransaction {\n    transaction_hash\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "hubSignupTransaction", "content": "{\n  hubSignupTransaction {\n    transaction_hash\n    payload {\n      ... on CrcSignup {\n        token\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "stats", "content": "{\n  stats {\n    profilesCount\n    verificationsCount\n    goals {\n      lastGoal\n      currentValue\n      nextGoal\n    }\n    myRank {\n      rank\n      redeemedInvitationsCount\n    }\n    leaderboard {\n      createdByCirclesAddress\n      inviteCount\n      createdByProfile {\n        id\n        circlesAddress\n        displayCurrency\n        circlesSafeOwner\n        displayName\n        firstName\n        lastName\n        dream\n        avatarUrl\n        cityGeonameid\n        provenUniqueness\n        city {\n          geonameid\n          name\n          country\n          latitude\n          longitude\n          population\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "myInvitations", "content": "{\n  myInvitations {\n    createdAt\n    claimedAt\n    claimedBy {\n      circlesAddress\n      displayCurrency\n      circlesSafeOwner\n      displayName\n      firstName\n      lastName\n      avatarUrl\n    }\n    name\n    address\n    balance\n    code\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "citiesByName", "content": "{\n  cities(query: {byName: {name_like: $name, languageCode: $languageCode}}) {\n    geonameid\n    name\n    country\n    population\n    latitude\n    longitude\n    feature_code\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($name: String!, $languageCode: String)"}, {"type": "query", "name": "profilesByCirclesAddress", "content": "{\n  profilesBySafeAddress(safeAddresses: $circlesAddresses) {\n    id\n    circlesAddress\n    displayCurrency\n    origin\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    dream\n    avatarUrl\n    provenUniqueness\n    city {\n      geonameid\n      name\n      country\n    }\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n      notificationEmail\n    }\n    memberships {\n      isAdmin\n      organisation {\n        id\n        circlesAddress\n        displayCurrency\n        displayName\n        circlesSafeOwner\n        name\n        description\n        avatarUrl\n        cityGeonameid\n        city {\n          geonameid\n          country\n          name\n          population\n        }\n      }\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        displayName\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($circlesAddresses: [String!]!)"}, {"type": "query", "name": "organisations", "content": "{\n  organisations(pagination: $pagination) {\n    id\n    circlesAddress\n    displayCurrency\n    createdAt\n    name\n    avatarUrl\n    city {\n      geonameid\n      name\n      country\n    }\n    shops {\n      id\n      name\n      description\n      legalText\n      largeBannerUrl\n      smallBannerUrl\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($pagination: PaginationArgs)"}, {"type": "query", "name": "regions", "content": "{\n  regions {\n    id\n    circlesAddress\n    displayCurrency\n    createdAt\n    name\n    avatarUrl\n    city {\n      geonameid\n      name\n      country\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "organisationsByAddress", "content": "{\n  organisationsByAddress(addresses: $addresses) {\n    id\n    circlesAddress\n    displayCurrency\n    createdAt\n    name\n    avatarUrl\n    displayName\n    city {\n      geonameid\n      name\n      country\n    }\n    shops {\n      id\n      name\n      description\n      legalText\n      smallBannerUrl\n      largeBannerUrl\n    }\n    members {\n      ... on Organisation {\n        id\n        circlesAddress\n        displayCurrency\n        createdAt\n        name\n        displayName\n        avatarUrl\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n      ... on Profile {\n        id\n        successorOfCirclesAddress\n        circlesSafeOwner\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        displayName\n        firstName\n        lastName\n        dream\n        provenUniqueness\n        city {\n          geonameid\n          country\n          name\n        }\n        shippingAddresses {\n          id\n          name\n          street\n          house\n          zip\n          city\n          state\n          country\n          notificationEmail\n        }\n        verifications {\n          createdAt\n          revokedAt\n          verifierSafeAddress\n          verifierProfile {\n            id\n            circlesAddress\n            displayCurrency\n            avatarUrl\n            name\n            city {\n              geonameid\n              name\n              country\n            }\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($addresses: [String!]!)"}, {"type": "query", "name": "tagById", "content": "{\n  tagById(id: $id) {\n    id\n    typeId\n    value\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "getAllStringsByMaxVersionAndLang", "content": "{\n  getAllStringsByMaxVersionAndLang(lang: $lang) {\n    lang\n    key\n    createdBy\n    version\n    value\n    needsUpdate\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($lang: String)"}, {"type": "query", "name": "getPaginatedStringsToUpdate", "content": "{\n  getPaginatedStringsToUpdate(\n    pagination_key: $pagination_key\n    key: $key\n    lang: $lang\n    value: $value\n  ) {\n    lang\n    key\n    createdBy\n    version\n    value\n    pagination_key\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($pagination_key: String, $key: String, $lang: String, $value: String)"}, {"type": "query", "name": "getAvailableLanguages", "content": "{\n  getAvailableLanguages {\n    lang\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "verifications", "content": "{\n  verifications(pagination: $pagination, filter: $filter) {\n    createdAt\n    revokedAt\n    verifierSafeAddress\n    verifierProfile {\n      id\n      circlesAddress\n      displayCurrency\n      avatarUrl\n      name\n      city {\n        geonameid\n        name\n        country\n      }\n    }\n    verifiedSafeAddress\n    verifiedProfile {\n      id\n      displayName\n      firstName\n      lastName\n      avatarUrl\n      circlesAddress\n      displayCurrency\n      provenUniqueness\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($pagination: PaginationArgs, $filter: VerifiedSafesFilter)"}, {"type": "query", "name": "offersByIdAndVersion", "content": "{\n  offersByIdAndVersion(query: $query) {\n    id\n    title\n    pictureUrl\n    pricePerUnit\n    currentInventory\n    version\n    tags {\n      typeId\n      value\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}, "arguments": "($query: [OfferByIdAndVersionInput!]!)"}, {"type": "query", "name": "ApplicationError", "content": "{\n        feedback @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/core/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "StartSubmision", "content": "{\n        startSubmission(articleType: $articleType) {\n            id\n            lastStepVisited\n            manuscriptDetails {\n                title\n            }\n            updated\n            articleType\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/dashboard/graphql.ts", "repo": "libero_reviewer-client"}, "arguments": "($articleType: String!)"}, {"type": "mutation", "name": "UploadManuscript", "content": "{\n        uploadManuscript(id: $id, file: $file, fileSize: $fileSize) {\n            id\n            suggestions {\n                fieldName\n                value\n            }\n            files {\n                manuscriptFile {\n                    filename\n                    url\n                    downloadLink\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}, "arguments": "($id: ID!, $file: Upload!, $fileSize: Int!)"}, {"type": "mutation", "name": "UploadSupportingFile", "content": "{\n        uploadSupportingFile(id: $id, file: $file, fileSize: $fileSize) {\n            id\n            filename\n            url\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}, "arguments": "($id: ID!, $file: Upload!, $fileSize: Int!)"}, {"type": "mutation", "name": "SaveDetailsPage", "content": "{\n        saveDetailsPage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            manuscriptDetails {\n                title\n                subjects\n                previouslyDiscussed\n                previouslySubmitted\n                cosubmission\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}, "arguments": "($id: ID!, $details: ManuscriptDetailsInput!)"}, {"type": "subscription", "name": "FileUploadProgress", "content": "{\n        fileUploadProgress(submissionId: $submissionId) {\n            filename\n            fileId\n            type\n            percentage\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}, "arguments": "($submissionId: ID!)"}, {"type": "mutation", "name": "DeleteSupportingFile", "content": "{\n        deleteSupportingFile(fileId: $fileId, submissionId: $submissionId)\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}, "arguments": "($fileId: ID!, $submissionId: ID!)"}, {"type": "query", "name": "startup", "content": "{\n  startup(selectedId: $id) {\n    id\n    name\n    valueProposition\n    colorScheme\n    keyword\n  }\n}", "metadata": {"commit_hash": "b1cd78e068ae27b14a38c22dd8e257ef8de5d1c5", "file": "frontend/src/generated/graphql.tsx", "repo": "jdiebold_foundst-rs"}, "arguments": "($id: Uuid!)"}, {"type": "query", "name": "listStartups", "content": "{\n  listStartups {\n    id\n    name\n    valueProposition\n    colorScheme\n    keyword\n  }\n}", "metadata": {"commit_hash": "b1cd78e068ae27b14a38c22dd8e257ef8de5d1c5", "file": "frontend/src/generated/graphql.tsx", "repo": "jdiebold_foundst-rs"}}, {"type": "query", "name": "checkHighScore", "content": "{\n    checkHighScore(player: $player, difficulty: $difficulty) {\n      value\n      highScore\n      difficulty\n      player {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/queries.js", "repo": "Group1Project3_Recall-Rumble"}, "arguments": "($player: ID!, $difficulty: String!)"}, {"type": "mutation", "name": "updateOldHigh", "content": "{\n    updateOldHigh(difficulty: $difficulty, player: $player) {\n      value\n      highScore\n      difficulty\n      player {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}, "arguments": "($difficulty: String, $player: ID!)"}, {"type": "mutation", "name": "lastScore", "content": "{\n    lastScore(_id: $_id, lastScore: $lastScore) {\n      _id\n      lastScore\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}, "arguments": "($_id: ID!, $lastScore: Int!)"}, {"type": "mutation", "name": "Register", "content": "{\n    registerUser(firstName: $firstName, lastName: $lastName, emailAddress: $emailAddress, phoneNumber: $phoneNumber, username: $username, password: $password) {\n      firstName\n      lastName\n      emailAddress\n      phoneNumber\n      username\n      password\n    }\n  }", "metadata": {"commit_hash": "4fe648cefe060e8df7f5238510ada4b7b1525ccf", "file": "src/graphql/mutations/index.js", "repo": "bitabs_fullstack-course"}, "arguments": "($firstName: String!, $lastName: String!, $emailAddress: String!, $phoneNumber: String!, $username: String!, $password: String!)"}, {"type": "mutation", "name": "AddInboxMutation", "content": "{\n        insert_inboxes(objects: {name: $name, email: $email, contact: $contact, message: $message}) {\n            affected_rows\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/mutations/inboxes.js", "repo": "v08nike_ESL-Learning-Center"}, "arguments": "($name: String!, $email: String!, $contact: String!, $message: String!)"}, {"type": "mutation", "name": "resyncRun", "content": "{\n  resyncRun(\n    startDate: $startDate\n    startTime: $startTime\n    duration: $duration\n    intensity: $intensityFeedback\n  ) {\n    userId\n    date\n    duration\n    heartRate\n    vo2max\n    intensityFeedback\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($startDate: String!, $startTime: String!, $duration: Int!, $intensityFeedback: Int!)"}, {"type": "mutation", "name": "AnalyticsObservation", "content": "{\n  createEvent(event: $event, payload: $payload) {\n    user\n    event\n    payload\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($event: String!, $payload: String)"}, {"type": "query", "name": "CustomSleepVariables", "content": "{\n  currentUser {\n    id\n    sleepVariables {\n      name\n      emoji\n      custom\n    }\n    trackedVariables\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "RemoveSleepVariable", "content": "{\n  removeSleepVariable(name: $name, sleepDate: $sleepDate) {\n    date\n    variables {\n      name\n      emoji\n      custom\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($name: String!, $sleepDate: String!)"}, {"type": "mutation", "name": "TrackVariable", "content": "{\n  trackVariable(name: $name)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($name: String!)"}, {"type": "mutation", "name": "UntrackVariable", "content": "{\n  untrackVariable(name: $name)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($name: String!)"}, {"type": "query", "name": "GetFriends", "content": "{\n  currentUser {\n    id\n    friends(limit: $limit) {\n      id\n      firstName\n      lastName\n      avatarUrl\n      xp\n      emblem\n    }\n    friendRequests {\n      id\n      firstName\n      lastName\n      avatarUrl\n      xp\n      emblem\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($limit: Int)"}, {"type": "query", "name": "GetXp", "content": "{\n  currentUser {\n    id\n    xp\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "GetAvailableEmblems", "content": "{\n  currentUser {\n    id\n    availableEmblems\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "UpdateDefaultRunDuration", "content": "{\n  updateDefaultRunDuration(duration: $duration)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($duration: Int!)"}, {"type": "mutation", "name": "sendFriendRequest", "content": "{\n  sendFriendRequest(friendId: $friendId)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($friendId: ID!)"}, {"type": "mutation", "name": "updateProfilePic", "content": "{\n  updateProfilePic(avatarUrl: $avatarUrl) {\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($avatarUrl: String!)"}, {"type": "mutation", "name": "UpdateEmblem", "content": "{\n  updateEmblem(emblem: $emblem)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}, "arguments": "($emblem: String!)"}, {"type": "query", "name": "blocks", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}, "arguments": "($timestampFrom: Int!, $timestampTo: Int!)"}, {"type": "query", "name": "lps", "content": "{\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\n      user {\n        id\n      }\n      pair {\n        id\n      }\n      liquidityTokenBalance\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}, "arguments": "($pair: Bytes!)"}, {"type": "query", "name": "events", "content": "{\n    mints(where: { to: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n    burns(where: { sender: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}, "arguments": "($user: Bytes!, $pair: Bytes!)"}, {"type": "query", "name": "transactions", "content": "{\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}, "arguments": "($user: Bytes!)"}, {"type": "query", "name": "pairDayDatas", "content": "{\n    pairDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { pairAddress: $pairAddress }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}, "arguments": "($pairAddress: Bytes!, $skip: Int!)"}, {"type": "query", "name": "transactions", "content": "{\n    transactions(first: 50, orderBy: timestamp, orderDirection: desc) {\n      mints(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        to\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      burns(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        amount0In\n        amount0Out\n        amount1In\n        amount1Out\n        amountUSD\n        to\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "tokens", "content": "{\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}, "arguments": "($value: String, $id: String)"}, {"type": "query", "name": "pairs", "content": "{\n    as0: pairs(where: { token0_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pairs(where: { token1_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pairs(where: { id: $id }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}, "arguments": "($tokens: [Bytes]!, $id: String)"}, {"type": "query", "name": "hello", "content": "{\n    hello\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/queries/hello.ts", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "hello", "content": "{\n    hello\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/queries/hello.ts", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "getFarm", "content": "{\n\t\tgetFarm(farmId: $farmId) {\n\t\t\tid\n\t\t\tfarmName\n\t\t\tfarmType\n\t\t\tmembers {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\tchunks {\n\t\t\t\tid\n\t\t\t\tcoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t}\n\t\t\tplants {\n\t\t\t\tid\n\t\t\t\tplantType\n\t\t\t\ttitle\n\t\t\t\tbody\n\t\t\t\tchunkCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tplantCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tauthor\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/queries.js", "repo": "timicienio_farm-by-RDOGS"}, "arguments": "($farmId: ID!)"}, {"type": "query", "name": "getInvitationList", "content": "{\n\t\tgetInvitationList( userId: $userId){\n\t\t\tid\n\t\t\tusername\n\t\t\temail\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/queries.js", "repo": "timicienio_farm-by-RDOGS"}, "arguments": "($userId: ID!)"}, {"type": "mutation", "name": "declineInvitation", "content": "{\n\t\tdeclineInvitation(friendName: $friendName)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}, "arguments": "($friendName: String!)"}, {"type": "mutation", "name": "deletePlant", "content": "{\n\t\tdeletePlant(farmId: $farmId, plantId: $plantId)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}, "arguments": "($farmId: ID!, $plantId: ID!)"}, {"type": "mutation", "name": "leaveFarm", "content": "{\n\t\tleaveFarm(farmId: $farmId)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}, "arguments": "($farmId: ID!)"}, {"type": "mutation", "name": "addChunk", "content": "{\n\t\taddChunk(\n\t\t\tfarmId: $farmId,\n\t\t\tchunkCoordinates: $chunkCoordinates\n\t\t)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}, "arguments": "($farmId: ID!, $chunkCoordinates: CoordinateInput!)"}, {"type": "mutation", "name": "notificationMarkAllRead", "content": "{\n    notificationMarkAllRead {\n      success\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/notifictionMarkAllRead.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "topNavbar", "content": "{\n    notifications {\n      id\n      read\n      readAt\n      notification {\n        id\n        actionType\n        causedBy {\n          username\n          fullname\n          id\n        }\n        createdAt\n      }\n    }\n    me {\n      user {\n        id\n        fullName\n        profileIcon {\n          initials\n          bgColor\n          url\n        }\n      }\n      teamRoles {\n        teamID\n        roleCode\n      }\n      projectRoles {\n        projectID\n        roleCode\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/topNavbar.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "toggleTaskWatch", "content": "{\n    toggleTaskWatch(input: { taskID: $taskID }) {\n      id\n      watched\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/toggleTaskWatcher.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskID: UUID!)"}, {"type": "mutation", "name": "updateTaskChecklistLocation", "content": "{\n    updateTaskChecklistLocation(input: { taskChecklistID: $taskChecklistID, position: $position }) {\n      checklist {\n        id\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistLocation.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskChecklistID: UUID!, $position: Float!)"}, {"type": "mutation", "name": "updateTaskChecklistName", "content": "{\n    updateTaskChecklistName(input: { taskChecklistID: $taskChecklistID, name: $name }) {\n      id\n      name\n      position\n      items {\n        id\n        name\n        taskChecklistID\n        complete\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistName.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskChecklistID: UUID!, $name: String!)"}, {"type": "mutation", "name": "createTaskChecklist", "content": "{\n    createTaskChecklist(input: { taskID: $taskID, name: $name, position: $position }) {\n      id\n      name\n      position\n      items {\n        id\n        name\n        taskChecklistID\n        complete\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/createTaskChecklist.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskID: UUID!, $name: String!, $position: Float!)"}, {"type": "mutation", "name": "deleteTaskComment", "content": "{\n    deleteTaskComment(input: { commentID: $commentID }) {\n      commentID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/deleteTaskComment.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($commentID: UUID!)"}, {"type": "mutation", "name": "sortTaskGroup", "content": "{\n    sortTaskGroup(input: { taskGroupID: $taskGroupID, tasks: $tasks }) {\n      taskGroupID\n      tasks {\n        id\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/sortTaskGroup.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($tasks: [TaskPositionUpdate!]!, $taskGroupID: UUID!)"}, {"type": "mutation", "name": "updateTaskGroupName", "content": "{\n  updateTaskGroupName(input:{taskGroupID:$taskGroupID, name:$name}) {\n    id\n    name\n  }\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/updateTaskGroupName.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskGroupID: UUID!, $name: String!)"}, {"type": "mutation", "name": "createTeam", "content": "{\n    createTeam(input: { name: $name, organizationID: $organizationID }) {\n      id\n      createdAt\n      name\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/createTeam.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($name: String!, $organizationID: UUID!)"}, {"type": "mutation", "name": "deleteInvitedUserAccount", "content": "{\n    deleteInvitedUserAccount(input: { invitedUserID: $invitedUserID }) {\n      invitedUser {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/deleteInvitedUser.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($invitedUserID: UUID!)"}, {"type": "mutation", "name": "updateUserInfo", "content": "{\n    updateUserInfo(input: { name: $name, initials: $initials, email: $email, bio: $bio }) {\n      user {\n        id\n        email\n        fullName\n        bio\n        profileIcon {\n          initials\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/updateUserInfo.ts", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($name: String!, $initials: String!, $email: String!, $bio: String!)"}, {"type": "mutation", "name": "createTaskGroup", "content": "{\n  createTaskGroup(\n    input: {projectID: $projectID, name: $name, position: $position}\n  ) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($projectID: UUID!, $name: String!, $position: Float!)"}, {"type": "query", "name": "labels", "content": "{\n  findProject(input: {projectID: $projectID}) {\n    labels {\n      id\n      createdDate\n      name\n      labelColor {\n        id\n        name\n        colorHex\n        position\n      }\n    }\n  }\n  labelColors {\n    id\n    position\n    colorHex\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($projectID: UUID!)"}, {"type": "query", "name": "me", "content": "{\n  me {\n    user {\n      id\n      fullName\n      username\n      email\n      bio\n      profileIcon {\n        initials\n        bgColor\n        url\n      }\n    }\n    teamRoles {\n      teamID\n      roleCode\n    }\n    projectRoles {\n      projectID\n      roleCode\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProject", "content": "{\n  deleteProject(input: {projectID: $projectID}) {\n    ok\n    project {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($projectID: UUID!)"}, {"type": "mutation", "name": "deleteProjectMember", "content": "{\n  deleteProjectMember(input: {projectID: $projectID, userID: $userID}) {\n    ok\n    member {\n      id\n    }\n    projectID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($projectID: UUID!, $userID: UUID!)"}, {"type": "mutation", "name": "updateProjectMemberRole", "content": "{\n  updateProjectMemberRole(\n    input: {projectID: $projectID, userID: $userID, roleCode: $roleCode}\n  ) {\n    ok\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($projectID: UUID!, $userID: UUID!, $roleCode: RoleCode!)"}, {"type": "mutation", "name": "createTaskChecklist", "content": "{\n  createTaskChecklist(input: {taskID: $taskID, name: $name, position: $position}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskID: UUID!, $name: String!, $position: Float!)"}, {"type": "mutation", "name": "createTaskComment", "content": "{\n  createTaskComment(input: {taskID: $taskID, message: $message}) {\n    taskID\n    comment {\n      id\n      message\n      pinned\n      createdAt\n      updatedAt\n      createdBy {\n        id\n        fullName\n        profileIcon {\n          initials\n          bgColor\n          url\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskID: UUID!, $message: String!)"}, {"type": "mutation", "name": "deleteTaskChecklistItem", "content": "{\n  deleteTaskChecklistItem(input: {taskChecklistItemID: $taskChecklistItemID}) {\n    ok\n    taskChecklistItem {\n      id\n      taskChecklistID\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskChecklistItemID: UUID!)"}, {"type": "mutation", "name": "updateTaskChecklistItemName", "content": "{\n  updateTaskChecklistItemName(\n    input: {taskChecklistItemID: $taskChecklistItemID, name: $name}\n  ) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskChecklistItemID: UUID!, $name: String!)"}, {"type": "mutation", "name": "updateTaskChecklistLocation", "content": "{\n  updateTaskChecklistLocation(\n    input: {taskChecklistID: $taskChecklistID, position: $position}\n  ) {\n    checklist {\n      id\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskChecklistID: UUID!, $position: Float!)"}, {"type": "mutation", "name": "duplicateTaskGroup", "content": "{\n  duplicateTaskGroup(\n    input: {projectID: $projectID, taskGroupID: $taskGroupID, name: $name, position: $position}\n  ) {\n    taskGroup {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskGroupID: UUID!, $name: String!, $position: Float!, $projectID: UUID!)"}, {"type": "mutation", "name": "deleteTeam", "content": "{\n  deleteTeam(input: {teamID: $teamID}) {\n    ok\n    team {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($teamID: UUID!)"}, {"type": "mutation", "name": "deleteTeamMember", "content": "{\n  deleteTeamMember(\n    input: {teamID: $teamID, userID: $userID, newOwnerID: $newOwnerID}\n  ) {\n    teamID\n    userID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($teamID: UUID!, $userID: UUID!, $newOwnerID: UUID)"}, {"type": "query", "name": "topNavbar", "content": "{\n  notifications {\n    id\n    read\n    readAt\n    notification {\n      id\n      actionType\n      causedBy {\n        username\n        fullname\n        id\n      }\n      createdAt\n    }\n  }\n  me {\n    user {\n      id\n      fullName\n      profileIcon {\n        initials\n        bgColor\n        url\n      }\n    }\n    teamRoles {\n      teamID\n      roleCode\n    }\n    projectRoles {\n      projectID\n      roleCode\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateProjectName", "content": "{\n  updateProjectName(input: {projectID: $projectID, name: $name}) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($projectID: UUID!, $name: String!)"}, {"type": "mutation", "name": "updateTaskLocation", "content": "{\n  updateTaskLocation(\n    input: {taskID: $taskID, taskGroupID: $taskGroupID, position: $position}\n  ) {\n    previousTaskGroupID\n    task {\n      id\n      createdAt\n      name\n      position\n      taskGroup {\n        id\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($taskID: UUID!, $taskGroupID: UUID!, $position: Float!)"}, {"type": "mutation", "name": "deleteInvitedUserAccount", "content": "{\n  deleteInvitedUserAccount(input: {invitedUserID: $invitedUserID}) {\n    invitedUser {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($invitedUserID: UUID!)"}, {"type": "mutation", "name": "updateUserInfo", "content": "{\n  updateUserInfo(\n    input: {name: $name, initials: $initials, email: $email, bio: $bio}\n  ) {\n    user {\n      id\n      email\n      fullName\n      bio\n      profileIcon {\n        initials\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($name: String!, $initials: String!, $email: String!, $bio: String!)"}, {"type": "mutation", "name": "updateUserPassword", "content": "{\n  updateUserPassword(input: {userID: $userID, password: $password}) {\n    ok\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}, "arguments": "($userID: UUID!, $password: String!)"}, {"type": "query", "name": "users", "content": "{\n  invitedUsers {\n    id\n    email\n    invitedOn\n  }\n  users {\n    id\n    email\n    fullName\n    username\n    role {\n      code\n      name\n    }\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "$", "content": "{this.entity}Connection($where: ProyectoWhereInput) {\n      ${this.entity}Connection(where: $where) {\n          aggregate {\n          count\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+dashboard/count-project/count-mproject.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pagos", "content": "{\n    pagos (where: $where, orderBy: $orderBy) {\n      id\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      integrante {\n        id\n        usuario {\n          id\n          firstname\n          lastname\n        }\n      }\n      calculo\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+profesor/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: PagoWhereInput, $orderBy: PagoOrderByInput)"}, {"type": "mutation", "name": "createIntegrante", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n      }\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/directory/directory.component.ts", "repo": "ysantalla_gespro"}, "arguments": "(\n    $data: IntegranteCreateInput!,\n    $whereInput: IntegranteWhereInput!)"}, {"type": "mutation", "name": "updateIntegrante", "content": "{\n    updateIntegrante(data: $data, where: $where, whereInput: $whereInput) {\n      id\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n        codigo\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/update/integrante-update.component.ts", "repo": "ysantalla_gespro"}, "arguments": "(\n    $data: IntegranteUpdateInput!\n    $where: IntegranteWhereUniqueInput!\n    $whereInput: IntegranteWhereInput!\n  )"}, {"type": "query", "name": "integrantes", "content": "{\n    integrantes (where: $where) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        fullname\n        username\n      }\n      proyecto {\n        id\n        codigo\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: IntegranteWhereInput)"}, {"type": "query", "name": "proyecto", "content": "{\n    proyecto(id: $id) {\n      id\n      nombre\n      codigo\n      inicia\n      finaliza\n      estado\n      tipo {\n        id\n        nombre\n      }\n      eje {\n        id\n        nombre\n      }\n      linea {\n        id\n        nombre\n      }\n      alcance {\n        id\n        nombre\n        valor\n      }\n      area {\n        id\n        nombre\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/project/details/project-details.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "deleteManyPagos", "content": "{\n    deleteManyPagos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: PagoWhereInput!)"}, {"type": "mutation", "name": "login", "content": "{\n    login(username: $username, password: $password) {\n      user {\n        firstname\n        username\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+auth/login/login.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($username: String!, $password: String!)"}, {"type": "mutation", "name": "createIntegrante", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n      }\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/directory/directory.component.ts", "repo": "ysantalla_gespro"}, "arguments": "(\n    $data: IntegranteCreateInput!,\n    $whereInput: IntegranteWhereInput!)"}, {"type": "mutation", "name": "createAnno", "content": "{\n    createAnno(data: $data) {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/create/anno-create.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($data: AnnoCreateInput!)"}, {"type": "mutation", "name": "deleteAnno", "content": "{\n    deleteAnno(where: $where) {\n      numero\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/list/anno-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: AnnoWhereUniqueInput!)"}, {"type": "query", "name": "anno", "content": "{\n    anno(id: $id) {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/details/anno-details.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "deleteArea", "content": "{\n    deleteArea(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/list/area-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: AreaWhereUniqueInput!)"}, {"type": "query", "name": "area", "content": "{\n    area(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/details/area-details.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "createLinea", "content": "{\n    createLinea(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/create/linea-create.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($data: LineaCreateInput!)"}, {"type": "mutation", "name": "deleteManyLineas", "content": "{\n    deleteManyLineas(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/list/linea-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: LineaWhereInput!)"}, {"type": "query", "name": "linea", "content": "{\n    linea(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/details/linea-details.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "query", "name": "role", "content": "{\n    role(id: $id) {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/update/role-update.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "query", "name": "roles", "content": "{\n    roles {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteRole", "content": "{\n    deleteRole(where: $where) {\n      name\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: RoleWhereUniqueInput!)"}, {"type": "query", "name": "role", "content": "{\n    role(id: $id) {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/details/role-details.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "deleteManyFiles", "content": "{\n    deleteManyFiles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: FileWhereInput!)"}, {"type": "query", "name": "alcance", "content": "{\n    alcance(id: $id) {\n      id\n      nombre\n      valor\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/update/alcance-update.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "deleteManyAlcances", "content": "{\n    deleteManyAlcances(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/list/alcance-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: AlcanceWhereInput!)"}, {"type": "mutation", "name": "updateMes", "content": "{\n    updateMes(data: $data, where: $where) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/update/mes-update.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($data: MesUpdateInput!, $where: MesWhereUniqueInput!)"}, {"type": "mutation", "name": "createMes", "content": "{\n    createMes(data: $data) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/create/mes-create.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($data: MesCreateInput!)"}, {"type": "query", "name": "mes", "content": "{\n    mes(id: $id) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/details/mes-details.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "createTipo", "content": "{\n    createTipo(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/create/tipo-create.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($data: TipoCreateInput!)"}, {"type": "mutation", "name": "deleteTipo", "content": "{\n    deleteTipo(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/list/tipo-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: TipoWhereUniqueInput!)"}, {"type": "query", "name": "user", "content": "{\n    user(id: $id) {\n      id\n      firstname\n      email\n      lastname\n      username\n      employeeNumber\n      roles {\n        id\n        name\n        description\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "createUser", "content": "{\n    createUser(data: $data) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/create/user-create.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($data: UserCreateInput!)"}, {"type": "query", "name": "users", "content": "{\n    users {\n      id\n      firstname\n      lastname\n      email\n      roles {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "user", "content": "{\n    user(id: $id) {\n      id\n      firstname\n      email\n      lastname\n      username\n      employeeNumber\n      roles {\n        name\n        description\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/details/user-details.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "query", "name": "areas", "content": "{\n    areas {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/create/project-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "lineas", "content": "{\n    lineas {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/create/project-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyecto", "content": "{\n    proyecto(id: $id) {\n      id\n      nombre\n      codigo\n      inicia\n      finaliza\n      estado\n      tipo {\n        id\n        nombre\n      }\n      eje {\n        id\n        nombre\n      }\n      linea {\n        id\n        nombre\n      }\n      alcance {\n        id\n        nombre\n        valor\n      }\n      area {\n        id\n        nombre\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/details/project-details.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "deleteEje", "content": "{\n    deleteEje(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: EjeWhereUniqueInput!)"}, {"type": "query", "name": "eje", "content": "{\n    eje(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/details/eje-details.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "query", "name": "pagos", "content": "{\n    pagos (where: $where, orderBy: $orderBy) {\n      id\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      integrante {\n        id\n        usuario {\n          id\n          firstname\n          lastname\n        }\n      }\n      calculo\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: PagoWhereInput, $orderBy: PagoOrderByInput)"}, {"type": "mutation", "name": "deletePago", "content": "{\n    deletePago(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: PagoWhereUniqueInput!)"}, {"type": "mutation", "name": "deleteManyPagos", "content": "{\n    deleteManyPagos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: PagoWhereInput!)"}, {"type": "query", "name": "pago", "content": "{\n    pago(id: $id) {\n      id\n      integrante {\n        id\n        usuario {\n          id\n          fullname\n        }\n      }\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      horas\n      presencia\n      incidencia\n      relevancia\n      complejidad\n      gestion\n      vinculacion\n      calidad\n      significacion\n      cumplimiento\n      calculo\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/details/pago-details.component.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "createArea", "content": "{\n      createArea(data: $data) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "($data: AreaCreateInput!)"}, {"type": "mutation", "name": "deleteManyAreas", "content": "{\n      deleteManyAreas(where: $where) {\n        count\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: AreaWhereInput!)"}, {"type": "mutation", "name": "updateArea", "content": "{\n      updateArea(data: $data, where: $where) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "(\n      $data: AreaUpdateInput!\n      $where: AreaWhereUniqueInput!\n    )"}, {"type": "mutation", "name": "deleteTipo", "content": "{\n      deleteTipo(where: $where) {\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "($where: TipoWhereUniqueInput!)"}, {"type": "mutation", "name": "login", "content": "{\n      login(username: $username, password: $password) {\n        user {\n          firstname\n          username\n          roles {\n            name\n          }\n        }\n        token\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "($username: String!, $password: String!)"}, {"type": "query", "name": "integrantes", "content": "{\n      integrantes(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        proyecto {\n          id\n          codigo\n        }\n        usuario {\n          id\n          firstname\n          lastname\n          fullname\n          email\n          username\n          employeeNumber\n          roles {\n            id\n            name\n          }\n        }\n        jefeProyecto\n        pagos {\n          id\n          integrante {\n            id\n            usuario {\n              id\n              fullname\n              employeeNumber\n            }\n          }\n          mes {\n            id\n            nombre\n          }\n          anno {\n            id\n            numero\n          }\n          horas\n          presencia\n          incidencia\n          relevancia\n          complejidad\n          gestion\n          vinculacion\n          calidad\n          significacion\n          cumplimiento\n          calculo\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "(\n      $where: IntegranteWhereInput\n      $orderBy: IntegranteOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )"}, {"type": "query", "name": "area", "content": "{\n      area(id: $id) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "query", "name": "areas", "content": "{\n      areas {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "tipo", "content": "{\n      tipo(id: $id) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "query", "name": "users", "content": "{\n      users(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        firstname\n        lastname\n        fullname\n        email\n        username\n        employeeNumber\n        roles {\n          id\n          name\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "(\n      $where: UserWhereInput\n      $orderBy: UserOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )"}, {"type": "query", "name": "file", "content": "{\n      file(id: $id) {\n        id\n        filename\n        path\n        encoding\n        mimetype\n        size\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}, "arguments": "($id: String!)"}, {"type": "query", "name": "surroundingTicks", "content": "{\n    ticks(\n      subgraphError: allow\n      first: 1000\n      skip: $skip\n      where: { poolAddress: $poolAddress, tickIdx_lte: $tickIdxUpperBound, tickIdx_gte: $tickIdxLowerBound }\n    ) {\n      tickIdx\n      liquidityGross\n      liquidityNet\n      price0\n      price1\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/pools/tickData.ts", "repo": "KyberNetwork_promm-analytics"}, "arguments": "($poolAddress: String!, $tickIdxLowerBound: BigInt!, $tickIdxUpperBound: BigInt!, $skip: Int!)"}, {"type": "query", "name": "poolByAddress", "content": "{\n    pool(id: $poolAddress) {\n      tick\n      token0 {\n        symbol\n        id\n        decimals\n      }\n      token1 {\n        symbol\n        id\n        decimals\n      }\n      feeTier\n      sqrtPrice\n      liquidity\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/pools/tickData.ts", "repo": "KyberNetwork_promm-analytics"}, "arguments": "($poolAddress: String!)"}, {"type": "query", "name": "transactionsByPool", "content": "{\n    mints(first: 1000, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 1000, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 1000, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/pools/transactions.ts", "repo": "KyberNetwork_promm-analytics"}, "arguments": "($address: Bytes!)"}, {"type": "query", "name": "transactions", "content": "{\n    mintsAs0: mints(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    mintsAs1: mints(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs0: swaps(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs1: swaps(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs0: burns(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs1: burns(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/tokens/transactions.ts", "repo": "KyberNetwork_promm-analytics"}, "arguments": "($address: Bytes!)"}, {"type": "query", "name": "tokens", "content": "{\n    asSymbol: tokens(\n      where: { symbol_contains: $value }\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asName: tokens(\n      where: { name_contains: $value }\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/search/index.ts", "repo": "KyberNetwork_promm-analytics"}, "arguments": "($value: String, $id: String)"}, {"type": "query", "name": "transactions", "content": "{\n    mints(first: 500, orderBy: timestamp, orderDirection: desc, where: { origin: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 500, orderBy: timestamp, orderDirection: desc, where: { origin: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 500, orderBy: timestamp, orderDirection: desc, where: { origin: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/wallets/walletData.ts", "repo": "KyberNetwork_promm-analytics"}, "arguments": "($address: Bytes!)"}, {"type": "mutation", "name": "SendNotificationUser", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Notifications.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($notificationTitle:String, $notificationBody: String!)"}, {"type": "mutation", "name": "DeleteRider", "content": "{\n        deleteRider(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "ToggleRider", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($id:String)"}, {"type": "mutation", "name": "AdminLogin", "content": "{\n  adminLogin(email:$email,password:$password){\n    userId\n    token\n    name\n    email\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Login.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($email:String!,$password:String!)"}, {"type": "mutation", "name": "DeleteOption", "content": "{\n        deleteOption(id:$id)\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Options.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($id:String!)"}, {"type": "query", "name": "Users", "content": "{\n  users(page:$page){\n    _id\n    name\n    email\n    phone\n    addresses{\n      _id\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Users.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($page:Int)"}, {"type": "query", "name": "AllAddons", "content": "{\n  allAddons(page:$page){\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n  is_active\n}}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Addons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($page:Int)"}, {"type": "query", "name": "categories", "content": "{\n      categories{\n          _id\n          title\n          description\n          img_menu\n    }}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Foods", "content": "{\n    foods(page:$page){\n      _id\n      title\n      description\n      stock\n      tag\n      img_url\n      variations{\n        _id\n        title\n        price\n        discounted\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      category{\n          _id\n          title\n      }\n    }\n  }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($page:Int)"}, {"type": "mutation", "name": "UpdatePaymentStatus", "content": "{\n  updatePaymentStatus(id:$id,status:$status){\n    _id\n    payment_status\n    paid_amount\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($id:String!,$status:String!)"}, {"type": "query", "name": "GetConfiguration", "content": "{\n  configuration{\n    _id\n    order_id_prefix\n    email\n    password\n    enable_email\n    client_id\n    client_secret\n    sandbox\n    publishable_key\n    secret_key\n    delivery_charges\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "editAddon", "content": "{\n  editAddon(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($addonInput:AddonInput)"}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Option/List/List.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Coupons", "content": "{\n        coupons {\n          _id\n          code\n          discount\n          enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SaveDeliveryConfiguration", "content": "{\n  saveDeliveryConfiguration(configurationInput:$configurationInput){\n    _id\n    delivery_charges\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Delivery/Delivery.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}, "arguments": "($configurationInput:DeliveryConfigurationInput!)"}, {"type": "query", "name": "categories", "content": "{\n      categories{\n          _id\n          title\n          description\n          img_menu\n    }}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "pairs", "content": "{\n    pairs(\n      first: 500\n      skip: $skip\n      orderBy: trackedReserveETH\n      orderDirection: desc\n    ) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}, "arguments": "($skip: Int!)"}, {"type": "query", "name": "pairs", "content": "{\n    pairs(first: 200, orderBy: reserveUSD, orderDirection: desc) {\n      id\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "transmutations", "content": "{\n    transmutations(where: { moloch: $contractAddress }) {\n      id\n      transmutation\n      moloch\n      distributionToken\n      minion\n      trust\n      capitalToken\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/boost-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($contractAddress: String!)"}, {"type": "query", "name": "tokens", "content": "{\n    tokens(where: { owner: $tokenHolder }) {\n      id\n      identifier\n      uri\n      registry {\n        id\n        name\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/boost-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($tokenHolder: String!)"}, {"type": "query", "name": "proposals", "content": "{\n    proposals(\n      where: { molochAddress: $molochAddress, createdAt_gt: $createdAt }\n    ) {\n      proposalId\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/proposal-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($molochAddress: String!, $createdAt: String!)"}, {"type": "query", "name": "molochActivities", "content": "{\n    proposals(\n      where: { molochAddress: $contractAddr, createdAt_gt: $createdAt, sponsored: true }\n      orderBy: createdAt\n      orderDirection: asc\n      first: 1000\n    ) {\n      ${proposalFields}\n    }\n    rageQuits {\n      id\n      createdAt\n      memberAddress\n      shares\n      loot\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($contractAddr: String!, $createdAt: String!)"}, {"type": "query", "name": "molochActivities", "content": "{\n    proposals(\n      where: { \n        molochAddress: $contractAddr\n        createdAt_gt: $createdAt\n        sponsored: false\n        tributeOffered_gte: $requiredTributeMin\n        tributeToken: $requiredTributeToken\n      }\n      orderBy: createdAt\n      orderDirection: asc\n      first: 1000\n    ) {\n      ${proposalFields}\n    }\n    rageQuits {\n      id\n      createdAt\n      memberAddress\n      shares\n      loot\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($contractAddr: String!, $createdAt: String!, $requiredTributeMin: String!, $requiredTributeToken: String!)"}, {"type": "query", "name": "molochActivities", "content": "{\n    proposals(\n      where: { molochAddress: $contractAddr, createdAt_gt: $createdAt, sponsored: false, guildkickOrWhitelistOrMinion: false }\n      orderBy: createdAt\n      orderDirection: asc\n      first: 1000\n    ) {\n      ${proposalFields}\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($contractAddr: String!, $createdAt: String!)"}, {"type": "query", "name": "moloch", "content": "{\n    moloch(id: $molochAddress) {\n      id\n      minions(where: { createdAt_gt: $createdAt }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($molochAddress: String!, $createdAt: String!)"}, {"type": "query", "name": "minions", "content": "{\n    minions(where: { minionAddress: $minionAddress }) {\n      id\n      proposals(where: { createdAt_gt: $createdAt }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($minionAddress: String!, $createdAt: String!)"}, {"type": "query", "name": "graphTX", "content": "{\n    molochTransaction(id: $id) {\n      id\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/general.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($id: String!)"}, {"type": "query", "name": "contents", "content": "{\n    contents(where: { transactionHash: $transactionHash }) {\n      id\n      createdAt\n      transactionHash\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/postQueries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($transactionHash: String!)"}, {"type": "query", "name": "outStreams", "content": "{\n    account(id: $ownerAddress) {\n      flowsOwned {\n        ${baseFlowFields}\n        recipient {\n          id\n        }\n      }\n      flowsReceived {\n        ${baseFlowFields}\n        owner {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($ownerAddress: String!)"}, {"type": "query", "name": "supertoken", "content": "{\n    tokens(\n      where: {\n        underlyingToken: $underlyingTokenAddress\n        createdAtTimestamp_gt: $createdAt\n      }\n    ) {\n      id\n      underlyingToken {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($underlyingTokenAddress: String!, $createdAt: String!)"}, {"type": "query", "name": "balances", "content": "{\n    balances(\n      where: { molochAddress: $molochAddress }\n      first: 1000\n      orderBy: timestamp\n      orderDirection: asc\n      skip: $skip\n    ) {\n      id\n      timestamp\n      balance\n      tokenAddress\n      tokenDecimals\n      currentShares\n      currentLoot\n      action\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/bank-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($molochAddress: String!, $skip: Int)"}, {"type": "query", "name": "membersHub", "content": "{\n    membersHub: members(\n      where: { memberAddress: $memberAddress, exists: true }\n    ) {\n      id\n      memberAddress\n      molochAddress\n      shares\n      loot\n      moloch {\n        id\n        version\n        summoner\n        proposals(orderBy: proposalId, orderDirection: desc, first: 10) {\n          id\n          createdAt\n          proposalId\n          proposalIndex\n          proposer\n          processed\n          processor\n          sponsored\n          sponsor\n          sponsoredAt\n          details\n          newMember\n          whitelist\n          guildkick\n          trade\n          cancelled\n          aborted\n          votingPeriodStarts\n          votingPeriodEnds\n          gracePeriodEnds\n          molochAddress\n          molochVersion\n          yesVotes\n          noVotes\n          votes(where: { memberAddress: $memberAddress }) {\n            id\n            memberAddress\n          }\n        }\n        rageQuits {\n          id\n          createdAt\n          shares\n          loot\n          memberAddress\n          molochAddress\n        }\n      }\n      tokenBalances {\n        tokenBalance\n        moloch {\n          id\n        }\n        token {\n          tokenAddress\n          symbol\n          decimals\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/member-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($memberAddress: String!)"}, {"type": "query", "name": "membersList", "content": "{\n    daoMembers: members(\n      where: { molochAddress: $contractAddr }\n      orderBy: shares\n      orderDirection: desc\n      first: 1000\n      skip: $skip\n    ) {\n      id\n      delegateKey\n      shares\n      loot\n      kicked\n      jailed\n      tokenTribute\n      didRagequit\n      memberAddress\n      exists\n      createdAt\n      isDao {\n        id\n      }\n      isSafeMinion {\n        id\n        minions {\n          minionAddress\n          molochAddress\n          safeMinionVersion\n        }\n      }\n      moloch {\n        id\n        totalShares\n        depositToken {\n          tokenAddress\n          symbol\n          decimals\n        }\n      }\n      highestIndexYesVote {\n        proposalId\n        proposalIndex\n      }\n      tokenBalances {\n        id\n        tokenBalance\n        token {\n          id\n          tokenAddress\n          symbol\n          decimals\n        }\n      }\n      submissions {\n        id\n        proposalIndex\n        yesVotes\n        noVotes\n        processed\n        didPass\n        cancelled\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/member-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($contractAddr: String!, $skip: Int)"}, {"type": "query", "name": "membersList", "content": "{\n    members(\n      where: { molochAddress: $contractAddr, memberAddress: $memberAddr }\n    ) {\n      memberAddress\n      loot\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/member-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}, "arguments": "($contractAddr: String!, $memberAddr: String!)"}, {"type": "query", "name": "listCandidates", "content": "{\n    listCandidates(\n      filter: { ownerAttendeeId: { eq: $ownerAttendeeId }, attendeeId: { eq: $attendeeId } }\n    ) {\n      items {\n        id\n        candidateType\n        attendee {\n          id\n          fullName\n          title\n          bio\n          company\n          pronouns\n          interests {\n            items {\n              id\n            }\n          }\n          ownIdentifiers {\n            items {\n              id\n            }\n          }\n          desiredIdentifiers {\n            items {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-candidates-by-attendees.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($ownerAttendeeId: ID!, $attendeeId: ID!)"}, {"type": "query", "name": "GetUserByOwner", "content": "{\n      getUserByOwner(\n        owner: $owner\n        sortDirection: $sortDirection\n        filter: $filter\n        limit: $limit\n        nextToken: $nextToken\n      ) {\n        items {\n          id\n          owner\n          termsAccepted\n          notificationConfig {\n            matches\n            messages\n            subscribe\n          }\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-user-by-owner.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "(\n      $owner: ID!\n      $sortDirection: ModelSortDirection\n      $filter: ModelUserFilterInput\n      $limit: Int\n      $nextToken: String\n    )"}, {"type": "query", "name": "listCandidates", "content": "{\n    listCandidates(filter: { eventId: { eq: $eventId }, candidateType: { eq: UNDECIDED } }) {\n      items {\n        id\n        candidateType\n        attendee {\n          id\n          fullName\n          title\n          bio\n          company\n          pronouns\n          interests {\n            items {\n              id\n            }\n          }\n          ownIdentifiers {\n            items {\n              id\n            }\n          }\n          desiredIdentifiers {\n            items {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-candidates-by-event.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($eventId: ID!)"}, {"type": "query", "name": "getCandidate", "content": "{\n    getCandidate(id: $id) {\n      id\n      candidateType\n      attendee {\n        id\n        fullName\n        title\n        bio\n        company\n        pronouns\n        interests {\n          items {\n            id\n          }\n        }\n        ownIdentifiers {\n          items {\n            id\n          }\n        }\n        desiredIdentifiers {\n          items {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-candidate.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getAttendee", "content": "{\n    getAttendee(id: $id) {\n      id\n      fullName\n      avatarUrl\n      title\n      company\n      pronouns\n      bio\n      interests {\n        items {\n          id\n          interest {\n            id\n            name\n          }\n        }\n      }\n      desiredIdentifiers {\n        items {\n          id\n          identifier {\n            id\n            name\n          }\n        }\n      }\n      ownIdentifiers {\n        items {\n          id\n          identifier {\n            id\n            name\n          }\n        }\n      }\n      linkedin\n      facebook\n      twitter\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-attendee.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "listReports", "content": "{\n    listReports(filter: { status: { eq: $reportStatus }, eventId: { eq: $eventId } }) {\n      items {\n        id\n        eventId\n        message\n        reason\n        status\n        reportedAttendee {\n          fullName\n          id\n          avatarUrl\n          title\n        }\n        reportingAttendee {\n          fullName\n          id\n          avatarUrl\n          title\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-reports.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($reportStatus: ReportStatus!, $eventId: ID!)"}, {"type": "mutation", "name": "CreateAttendee", "content": "{\n      createAttendee(input: $input) {\n        __typename\n        id\n        fullName\n        avatarUrl\n        title\n        company\n        pronouns\n        bio\n        newsletterSubscribed\n        linkedin\n        twitter\n        facebook\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/create-attendee.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($input: CreateAttendeeInput!)"}, {"type": "mutation", "name": "UpdateCandidate", "content": "{\n    updateCandidate(input: $input) {\n      id\n      attendeeId\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-candidate.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($input: UpdateCandidateInput!)"}, {"type": "mutation", "name": "UpdateMatch", "content": "{\n      updateMatch(input: $input) {\n        id\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-match.ts", "repo": "thisdot_lets-chat-with"}, "arguments": "($input: UpdateMatchInput!)"}, {"type": "query", "name": "GetClinics", "content": "{\n    states {\n      name\n      id\n      abbreviation\n      resources {\n        id\n        stateId\n        name\n        website\n        service\n        active\n        bipocFocus\n      }\n      misinformationCenters {\n        id\n        stateId\n        name\n        address\n        source\n        city\n        zip\n      }\n      authorizedClinics {\n        id\n        stateId\n        name\n        city\n        zip\n        phone\n        services\n        website\n        address\n        source\n      }\n    }\n  }", "metadata": {"commit_hash": "ffa1b76deaf9ee081b4e54118cd7213d63755e64", "file": "src/Utilities/queries.js", "repo": "Roe-dToAid_roed_to_aid_fe"}}, {"type": "query", "name": "GetPolicies", "content": "{\n    states {\n      name\n      legal\n      legalDescription\n      abbreviation\n    }\n  }", "metadata": {"commit_hash": "ffa1b76deaf9ee081b4e54118cd7213d63755e64", "file": "src/Utilities/queries.js", "repo": "Roe-dToAid_roed_to_aid_fe"}}, {"type": "mutation", "name": "UploadToken", "content": "{\n  uploadToken(pushToken:$pushToken){\n    _id\n    push_token\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/index.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($pushToken:String!)"}, {"type": "query", "name": "Orders", "content": "{\n  orders(offset:$offset){\n    _id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    order_id\n    user{\n      _id\n      phone\n    }\n    \n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    payment_status\n    payment_method\n    order_amount\n    paid_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n    rider{\n      _id\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/context/User.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($offset:Int)"}, {"type": "mutation", "name": "ReviewOrder", "content": "{\n  reviewOrder(reviewInput:{\n    orderId:$orderId,\n    rating:$rating,\n    description:$description\n  }){\n    _id\n    order_id\n    review{\n      _id\n      rating\n      description\n    }\n    createdAt\n    updatedAt\n    is_active\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/RateAndReview/RateAndReview.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "(\n  $orderId:String!,\n  $rating:Int!,\n  $description:String\n)"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone,is_active:$is_active}){\n          _id\n          name\n          phone\n          is_active\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Profile/Profile.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($name:String!,$phone:String!,$is_active:Boolean!)"}, {"type": "mutation", "name": "ChangePassword", "content": "{\n  changePassword(oldPassword:$oldPassword,newPassword:$newPassword)\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Profile/ChangePassword.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($oldPassword:String!,$newPassword:String!)"}, {"type": "mutation", "name": "CreateUser", "content": "{\n      createUser(userInput:{\n          facebookId:$facebookId,\n          phone:$phone,\n          email:$email,\n          password:$password,\n          name:$name,\n          notificationToken:$notificationToken,\n          appleId:$appleId\n      }){\n          userId\n          token\n          tokenExpiration\n          name\n          email\n          phone\n          notificationToken\n      }\n    }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Register/Register.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($facebookId:String,$phone:String,$email:String,$password:String,$name:String,$notificationToken:String,$appleId:String)"}, {"type": "mutation", "name": "SelectAddress", "content": "{\n  selectAddress(id:$id){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/CartAddress/CartAddress.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($id:String!)"}, {"type": "query", "name": "Orders", "content": "{\n  orders(offset:$offset){\n    _id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    order_id\n    user{\n      _id\n      phone\n    }\n    \n    items{\n      _id\n      food{\n        _id\n        title\n        category{\n          _id\n        }\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n      }\n      addons{\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n          _id\n          title\n          description\n          price\n        }\n      }\n      quantity\n    }\n    payment_status\n    payment_method\n    order_amount\n    paid_amount\n    order_status\n    status_queue{\n      pending\n      preparing\n      picked\n      delivered\n      cancelled\n    }\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n    rider{\n      _id\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/Paypal/Paypal.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($offset:Int)"}, {"type": "mutation", "name": "CreateAddress", "content": "{\n  createAddress(addressInput:$addressInput){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "CustomerApp/src/screens/NewAddress/NewAddress.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($addressInput:AddressInput!)"}, {"type": "query", "name": "AssignedOrders", "content": "{\n    assignedOrders(id:$id){\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          title\n          options{\n            title\n            price\n          }\n        }\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($id:String)"}, {"type": "subscription", "name": "SubscriptionAssignRider", "content": "{\n    subscriptionAssignRider(riderId:$riderId){\n      userId\n      origin\n      order{\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          title\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      createdAt\n     }\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($riderId:String!)"}, {"type": "query", "name": "UnAssignedOrders", "content": "{\n    unassignedOrders{\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          title\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "subscription", "name": "SubscriptionUnAssignedOrder", "content": "{\n    unassignedOrder{\n      userId\n      origin\n      order{\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          title\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      createdAt\n     }\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/context/user.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "Configuration", "content": "{\n    configuration{\n      _id\n      currency\n      currency_symbol\n      delivery_charges\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/context/configuration.js", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "UpdateOrderStatusRider", "content": "{\n    updateOrderStatusRider(id:$id,status:$status){\n      _id\n      order_status\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/screens/OrderDetail/OrderDetail.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($id:String!,$status:String!)"}, {"type": "query", "name": "AssignedOrders", "content": "{\n    assignedOrders(id:$id){\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          title\n          options{\n            title\n            price\n          }\n        }\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/screens/OrderDetail/OrderDetail.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($id:String)"}, {"type": "query", "name": "Rider", "content": "{\n    rider(id:$id){\n      _id\n      name\n      username\n      available\n    }\n  }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "RiderApp/src/components/Sidebar/Profile/Profile.js", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($id:String)"}, {"type": "query", "name": "AllReviews", "content": "{\n  allReviews(offset:$offset){\n    _id\n    rating\n    description\n    createdAt\n    updatedAt\n    is_active\n    order{\n      user{\n        name\n        email\n      }\n      items{\n        food{\n          title\n        }\n      }\n   }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Ratings.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($offset:Int)"}, {"type": "mutation", "name": "SendNotificationUser", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Notifications.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($notificationTitle:String, $notificationBody: String!)"}, {"type": "query", "name": "GetDashboardSales", "content": "{\n  getDashboardSales(starting_date: $startingDate, ending_date: $endingDate){\n    orders{\n      day\n      amount\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Dashboard.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($startingDate: String, $endingDate: String)"}, {"type": "query", "name": "GetDashboardOrders", "content": "{\n  getDashboardOrders(starting_date: $startingDate, ending_date: $endingDate){\n    orders{\n      day\n      count\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Dashboard.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($startingDate: String, $endingDate: String)"}, {"type": "mutation", "name": "ResetPassword", "content": "{\n  resetPassword(password:$password,token:$token){\n    result\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/ForgotPassword.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($password:String!,$token:String!)"}, {"type": "query", "name": "Configuration", "content": "{\n  configuration{\n    _id\n    currency\n    currency_symbol\n    delivery_charges\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Configuration.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "AllAddons", "content": "{\n  allAddons(page:$page){\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n  is_active\n}}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/views/Addons.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($page:Int)"}, {"type": "mutation", "name": "AssignRider", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Order/Order.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($id:String!,$riderId:String!)"}, {"type": "mutation", "name": "CreateAddons", "content": "{\n  createAddons(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($addonInput:[AddonInput])"}, {"type": "query", "name": "Addons", "content": "{\n  addons{\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n}}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Addon/Addon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Option/Option.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "CreateCoupon", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Coupon/Coupon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($couponInput:CouponInput!)"}, {"type": "mutation", "name": "editCoupon", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Coupon/Coupon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($couponInput:CouponInput!)"}, {"type": "query", "name": "Coupons", "content": "{\n        coupons {\n          _id\n          code\n          discount\n          enabled\n        }\n      }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Coupon/Coupon.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "SaveEmailConfiguration", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    password\n    enable_email\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Configuration/Email/Email.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($configurationInput:EmailConfigurationInput!)"}, {"type": "mutation", "name": "SaveCurrencyConfiguration", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Configuration/Currency/Currency.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($configurationInput:CurrencyConfigurationInput!)"}, {"type": "mutation", "name": "CreateFood", "content": "{\n      createFood(\n          foodInput:$foodInput\n      ){\n        _id\n        title\n        img_url\n        description\n        stock\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons{\n            _id\n            title\n            description\n            quantity_minimum\n            quantity_maximum\n            options{\n              _id\n              title\n              price\n            }\n          }\n        }\n        category{\n          _id\n          title\n      }\n      }\n    }", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Food/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}, "arguments": "($foodInput:FoodInput!)"}, {"type": "query", "name": "Addons", "content": "{\n  addons{\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n}}", "metadata": {"commit_hash": "be612092b3f20934d076f6b175db27b2a70186ef", "file": "Admin Dashboard/src/components/Food/Food.jsx", "repo": "MX56893_restaurant-food-delivery-v1"}}, {"type": "mutation", "name": "signIn", "content": "{\n        signIn(email: $email, password: $password)\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "recentlyUpdatedBlogs", "content": "{\n        recentlyUpdatedBlogs: blogs(\n            options: { limit: $limit, skip: $skip, sort: updatedAt_DESC }\n        ) {\n            id\n            name\n            creator {\n                id\n                email\n            }\n            updatedAt\n        }\n        hasNextBlogs: blogs(\n            options: { limit: 1, skip: $hasNextBlogsSkip, sort: updatedAt_DESC }\n        ) {\n            id\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "(\n        $skip: Int\n        $limit: Int\n        $hasNextBlogsSkip: Int\n    )"}, {"type": "mutation", "name": "commentOnPost", "content": "{\n        commentOnPost: createComments(\n            input: [\n                {\n                    content: $content\n                    post: { connect: { where: { id: $post } } }\n                    author: { connect: { where: { id: $user } } }\n                }\n            ]\n        ) {\n            comments {\n                id\n                content\n                author {\n                    id\n                    email\n                }\n                createdAt\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "($post: ID, $content: String!, $user: ID)"}, {"type": "query", "name": "postComments", "content": "{\n        postComments: comments(\n            where: { post: { id: $post } }\n            options: { skip: $skip, limit: $limit, sort: createdAt_ASC }\n        ) {\n            id\n            author {\n                id\n                email\n            }\n            content\n            createdAt\n            canDelete\n        }\n        hasNextComments: comments(\n            where: { post: { id: $post } }\n            options: {\n                skip: $hasNextCommentsSkip\n                limit: 1\n                sort: createdAt_ASC\n            }\n        ) {\n            id\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "(\n        $post: ID\n        $skip: Int\n        $limit: Int\n        $hasNextCommentsSkip: Int\n    )"}, {"type": "mutation", "name": "updateComment", "content": "{\n        updateComments(where: { id: $id }, update: { content: $content }) {\n            comments {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "($id: ID, $content: String)"}, {"type": "mutation", "name": "deleteComment", "content": "{\n        deleteComments(where: { id: $id }) {\n            nodesDeleted\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "($id: ID)"}, {"type": "mutation", "name": "revokeBlogAuthor", "content": "{\n        updateBlogs(\n            where: { id: $blog }\n            disconnect: { authors: { where: { email: $authorEmail } } }\n        ) {\n            blogs {\n                authors {\n                    email\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5620ce9a17f8643261d83474bf8205008cfe01cc", "file": "packages/client/src/queries.ts", "repo": "danstarns_neo-push"}, "arguments": "($blog: ID, $authorEmail: String)"}, {"type": "query", "name": "limitFarm", "content": "{\n    limitFarmings(\n      orderBy: createdAtTimestamp\n      orderDirection: desc\n      first: 1\n      where: { startTime_gt: $time, isDetached: false }\n    ) {\n      startTime\n      endTime\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($time: BigInt)"}, {"type": "query", "name": "fetchToken", "content": "{\n    tokens(where: { id: $tokenId }) {\n      id\n      symbol\n      name\n      decimals\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($tokenId: ID)"}, {"type": "query", "name": "fetchLimit", "content": "{\n    limitFarmings(where: { id: $limitFarmingId }) {\n      id\n      rewardToken\n      bonusRewardToken\n      pool\n      startTime\n      endTime\n      reward\n      bonusReward\n      multiplierToken\n      createdAtTimestamp\n      tier1Multiplier\n      tier2Multiplier\n      tier3Multiplier\n      tokenAmountForTier1\n      tokenAmountForTier2\n      tokenAmountForTier3\n      enterStartTime\n      isDetached\n      minRangeLength\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($limitFarmingId: ID)"}, {"type": "query", "name": "feeHourData", "content": "{\n    feeHourDatas(\n      first: 1000\n      where: {\n        pool: $pool\n        timestamp_gte: $startTimestamp\n        timestamp_lte: $endTimestamp\n      }\n    ) {\n      id\n      pool\n      fee\n      changesCount\n      timestamp\n      minFee\n      maxFee\n      startFee\n      endFee\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "(\n    $pool: String\n    $startTimestamp: BigInt\n    $endTimestamp: BigInt\n  )"}, {"type": "query", "name": "lastFeeHourData", "content": "{\n    feeHourDatas(\n      first: 1\n      orderBy: timestamp\n      orderDirection: desc\n      where: { pool: $pool }\n    ) {\n      id\n      pool\n      fee\n      changesCount\n      timestamp\n      minFee\n      maxFee\n      startFee\n      endFee\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($pool: String)"}, {"type": "query", "name": "futureEvents", "content": "{\n    limitFarmings(\n      orderBy: startTime\n      orderDirection: asc\n      where: { startTime_gt: $timestamp, isDetached: false }\n    ) {\n      id\n      createdAtTimestamp\n      rewardToken\n      bonusReward\n      bonusRewardToken\n      pool\n      startTime\n      endTime\n      reward\n      tier1Multiplier\n      tier2Multiplier\n      tier3Multiplier\n      tokenAmountForTier1\n      tokenAmountForTier2\n      tokenAmountForTier3\n      multiplierToken\n      enterStartTime\n      isDetached\n      minRangeLength\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($timestamp: BigInt)"}, {"type": "query", "name": "frozenStaked", "content": "{\n    stakeTxes(\n      where: { owner: $account, timestamp_gte: $timestamp }\n      orderBy: timestamp\n      orderDirection: asc\n    ) {\n      timestamp\n      stakedALGBAmount\n      xALGBAmount\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($account: String, $timestamp: Int)"}, {"type": "query", "name": "stake", "content": "{\n    histories(first: 1000, where: { date_gte: 1642626000 }) {\n      date\n      currentStakedAmount\n      ALGBbalance\n      xALGBminted\n      xALGBburned\n      xALGBtotalSupply\n      ALGBfromVault\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/utils/graphql-queries.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "allV3Ticks", "content": "{\n            ticks(\n              first: 1000\n              skip: $skip\n              where: { poolAddress: $poolAddress }\n              orderBy: tickIdx\n            ) {\n              tickIdx\n              liquidityNet\n              price0\n              price1\n            }\n          }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/state/data/slice.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($poolAddress: String!, $skip: Int!)"}, {"type": "query", "name": "feeTierDistribution", "content": "{\n            _meta {\n              block {\n                number\n              }\n            }\n            asToken0: pools(\n              orderBy: totalValueLockedToken0\n              orderDirection: desc\n              where: { token0: $token0, token1: $token1 }\n            ) {\n              fee\n              totalValueLockedToken0\n              totalValueLockedToken1\n            }\n            asToken1: pools(\n              orderBy: totalValueLockedToken0\n              orderDirection: desc\n              where: { token0: $token1, token1: $token0 }\n            ) {\n              fee\n              totalValueLockedToken0\n              totalValueLockedToken1\n            }\n          }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/state/data/slice.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($token0: String!, $token1: String!)"}, {"type": "query", "name": "topTokens", "content": "{\n    tokens(\n      first: ${count}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries-v3.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "tokenDayDatas", "content": "{\n    tokenDayDatas(\n      first: 1000\n      orderBy: date\n      orderDirection: desc\n      where: { token: $tokenAddr, date_gt: $startTime }\n    ) {\n      id\n      date\n      priceUSD\n      totalValueLocked\n      totalValueLockedUSD\n      volume\n      volumeUSD\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries-v3.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($tokenAddr: String!, $startTime: Int!)"}, {"type": "query", "name": "topPools", "content": "{\n    pools0: pools(\n      where: {token0_contains_nocase: \"${address}\", token1_contains_nocase: \"${address1}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n    pools1: pools(\n      first: 5\n      where: {token0_contains_nocase: \"${address}\", token1_not_contains_nocase: \"${address1}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n    pools2: pools(\n      first: 5\n      where: {token0_not_contains_nocase: \"${address}\", token1_contains_nocase: \"${address1}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n    pools3: pools(\n      first: 5\n      where: {token0_contains_nocase: \"${address1}\", token1_not_contains_nocase: \"${address}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n    pools4: pools(\n      first: 5\n      where: {token0_not_contains_nocase: \"${address1}\", token1_contains_nocase: \"${address}\"}\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries-v3.ts", "repo": "charnchai36_quickswap-interface"}}, {"type": "query", "name": "pairs", "content": "{\n    as0: pairs(where: { token0_in: $tokens }) {\n      id\n      trackedReserveETH\n      token0 {\n        id\n        symbol\n        decimals\n        name\n      }\n      token1 {\n        id\n        symbol\n        decimals\n        name\n      }\n    }\n    as1: pairs(where: { token1_in: $tokens }) {\n      id\n      trackedReserveETH\n      token0 {\n        id\n        symbol\n        decimals\n        name\n      }\n      token1 {\n        id\n        symbol\n        decimals\n        name\n      }\n    }\n    asAddress: pairs(where: { id: $id }) {\n      id\n      trackedReserveETH\n      token0 {\n        id\n        symbol\n        decimals\n        name\n      }\n      token1 {\n        id\n        symbol\n        decimals\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($tokens: [Bytes]!, $id: String)"}, {"type": "query", "name": "tokenDayDatas", "content": "{\n    tokenDayDatas(\n      first: 1000\n      orderBy: date\n      orderDirection: desc\n      where: { token: $tokenAddr, date_gt: $startTime }\n    ) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($tokenAddr: String!, $startTime: Int!)"}, {"type": "query", "name": "blocks", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "3de125f3c0620a307a07e245b9737441d7292434", "file": "src/apollo/queries.ts", "repo": "charnchai36_quickswap-interface"}, "arguments": "($timestampFrom: Int!, $timestampTo: Int!)"}, {"type": "query", "name": "getBlueprintRaw", "content": "{\n            blueprintRaw(fullPath: $fullPath, name: $name) @client \n        }", "metadata": {"commit_hash": "796db6472e3ea47ae233043133de6e102d4e3eab", "file": "packages/oc-pages/project_overview/store/modules/project.js", "repo": "onecommons_unfurl-gui"}, "arguments": "($fullPath: ID!, $name: String)"}, {"type": "query", "name": "GetDeploymentTemplateDictionaries", "content": "{\n              applicationBlueprintProject(fullPath: $fullPath, fetchPolicy: $fetchPolicy) @client {\n                  ResourceType\n                  ApplicationBlueprint\n                  ResourceTemplate\n                  DeploymentTemplate\n              }\n          }", "metadata": {"commit_hash": "796db6472e3ea47ae233043133de6e102d4e3eab", "file": "packages/oc-pages/project_overview/store/modules/project_application_blueprint.js", "repo": "onecommons_unfurl-gui"}, "arguments": "($fullPath: ID!)"}, {"type": "query", "name": "getApplicationBlueprintProject", "content": "{\n                applicationBlueprint(fullPath: $fullPath)  {\n                    json\n                }      \n            }", "metadata": {"commit_hash": "796db6472e3ea47ae233043133de6e102d4e3eab", "file": "packages/oc-pages/vue_shared/graphql.js", "repo": "onecommons_unfurl-gui"}, "arguments": "($fullPath: ID!)"}, {"type": "query", "name": "lookupJobs", "content": "{\n        project(fullPath: $fullPath){\n            name\n            pipelines {\n                count\n                nodes {\n                    id\n                    jobs {\n                        count\n                        nodes {\n                            id\n                            status\n                            cancelable\n                        }\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "796db6472e3ea47ae233043133de6e102d4e3eab", "file": "packages/oc-pages/dashboard/store/modules/deployment-info.js", "repo": "onecommons_unfurl-gui"}, "arguments": "($fullPath: ID!)"}, {"type": "query", "name": "GET_ATTRIBUTES", "content": "{\n        attributes {\n            list {\n                id\n                label\n                type\n                format\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/attributes/getAttributesQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "IS_ALLOWED", "content": "{\n        isAllowed(type: $type, actions: $actions, applyTo: $applyTo, target: $target) {\n            name\n            allowed\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/permissions/isAllowedQuery.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "(\n        $type: PermissionTypes!\n        $actions: [PermissionsActions!]!\n        $applyTo: ID\n        $target: PermissionTarget\n    )"}, {"type": "query", "name": "CHECK_LIBRARY_EXISTENCE", "content": "{\n        libraries(filters: {id: $id}) {\n            totalCount\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/libraries/checkLibraryExistenceQuery.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: [ID!])"}, {"type": "query", "name": "GET_APPLICATION_MODULES", "content": "{\n        applicationsModules {\n            id\n            description\n            version\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/applications/getApplicationsModulesQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "CHECK_TREE_EXISTENCE", "content": "{\n        trees(filters: {id: $id}) {\n            totalCount\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_queries/trees/checkTreeExistenceQuery.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: [ID!])"}, {"type": "query", "name": "GET_APPLICATION_BY_ID", "content": "{\n        applications(filters: {id: $id}) {\n            list {\n                ...DetailsApplication\n            }\n        }\n    }\n    ${DetailsApplicationFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "DELETE_ATTRIBUTE", "content": "{\n        deleteAttribute(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: ID)"}, {"type": "query", "name": "GET_ATTRIBUTES", "content": "{\n        attributes {\n            list {\n                id\n                label\n                type\n                format\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "mutation", "name": "SAVE_ATTRIBUTE", "content": "{\n        saveAttribute(attribute: $attribute) {\n            ...AttributeDetails\n        }\n    }\n    ${AttributeDetailsFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($attribute: AttributeInput!)"}, {"type": "query", "name": "CHECK_LIBRARY_EXISTENCE", "content": "{\n        libraries(filters: {id: $id}) {\n            totalCount\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: [ID!])"}, {"type": "query", "name": "GET_LIBRARY_BY_ID", "content": "{\n        libraries(filters: {id: $id}) {\n            list {\n                ...LibraryDetails\n            }\n        }\n    }\n    ${LibraryDetailsFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: [ID!])"}, {"type": "query", "name": "IS_ALLOWED", "content": "{\n        isAllowed(type: $type, actions: $actions, applyTo: $applyTo, target: $target) {\n            name\n            allowed\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "(\n        $type: PermissionTypes!\n        $actions: [PermissionsActions!]!\n        $applyTo: ID\n        $target: PermissionTarget\n    )"}, {"type": "mutation", "name": "SAVE_TREE", "content": "{\n        saveTree(tree: $tree) {\n            ...TreeDetails\n        }\n    }\n    ${TreeDetailsFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($tree: TreeInput!)"}, {"type": "query", "name": "USER_INFO", "content": "{\n        me {\n            login\n            ...RecordIdentity\n        }\n        permissions: isAllowed(type: $type, actions: $actions) {\n            name\n            allowed\n        }\n    }\n    ${RecordIdentityFragmentDoc}", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "libs/ui/src/_gqlTypes/index.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($type: PermissionTypes!, $actions: [PermissionsActions!]!)"}, {"type": "mutation", "name": "PURGE_RECORDS", "content": "{\n        purgeInactiveRecords(libraryId: $libraryId) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/records/purgeRecords.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($libraryId: String!)"}, {"type": "mutation", "name": "INDEX_RECORDS", "content": "{\n        indexRecords(libraryId: $libraryId, records: $records)\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/records/indexRecordsMutation.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($libraryId: String!, $records: [String!])"}, {"type": "mutation", "name": "DELETE_ATTRIBUTE", "content": "{\n        deleteAttribute(id: $attrId) {\n            id\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/attributes/deleteAttributeMutation.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($attrId: ID!)"}, {"type": "mutation", "name": "SAVE_ATTRIBUTE_EMBEDDED_FIELDS", "content": "{\n        saveAttribute(attribute: $attribute) {\n            id\n            label\n            format\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/attributes/saveAttributesEmbeddedFieldsQuery.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($attribute: AttributeInput)"}, {"type": "query", "name": "GET_PERMISSIONS", "content": "{\n        perm: permissions(\n            type: $type\n            applyTo: $applyTo\n            actions: $actions\n            usersGroup: $usersGroup\n            permissionTreeTarget: $permissionTreeTarget\n        ) {\n            name\n            allowed\n        }\n        inheritPerm: inheritedPermissions(\n            type: $type\n            applyTo: $applyTo\n            actions: $actions\n            userGroupNodeId: $usersGroup\n            permissionTreeTarget: $permissionTreeTarget\n        ) {\n            name\n            allowed\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/permissions/getPermissionsQuery.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "(\n        $type: PermissionTypes!\n        $applyTo: ID\n        $actions: [PermissionsActions!]!\n        $usersGroup: ID\n        $permissionTreeTarget: PermissionsTreeTargetInput\n    )"}, {"type": "query", "name": "GET_VERSION", "content": "{\n        version\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/version/getVersionQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "GET_VERSION_PROFILE_BY_ID", "content": "{\n        versionProfiles(filters: {id: $id}) {\n            list {\n                id\n                label\n                description\n                trees {\n                    id\n                    label\n                }\n                linkedAttributes {\n                    id\n                    label\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/versionProfiles/getVersionProfileByIdQuery.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GET_LIBRARIES_WITH_ATTRIBUTES", "content": "{\n        libraries {\n            totalCount\n            list {\n                id\n                label\n                gqlNames {\n                    query\n                    type\n                    list\n                    filter\n                    searchableFields\n                }\n                attributes {\n                    id\n                    label\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/libraries/getLibrariesWithAttributesQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "GET_ALL_PLUGINS", "content": "{\n        plugins {\n            name\n            description\n            version\n            author\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/plugins/getPluginsQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "GET_TREES", "content": "{\n        trees(filters: $filters) {\n            totalCount\n            list {\n                id\n                label\n                system\n                behavior\n                libraries {\n                    library {\n                        id\n                        label\n                    }\n                    settings {\n                        allowMultiplePositions\n                        allowedAtRoot\n                        allowedChildren\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/queries/trees/getTreesQuery.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($filters: TreesFiltersInput)"}, {"type": "query", "name": "GET_USER_DATA", "content": "{\n        userData(keys: $keys, global: $global) {\n            global\n            data\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/portal/src/queries/userData/getUserData.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($keys: [String!]!, $global: Boolean)"}, {"type": "query", "name": "NOOP", "content": "{\n        __typename\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/noopQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "GET_ATTRIBUTES_BY_LIB", "content": "{\n        attributes(filters: {libraries: [$library]}) {\n            list {\n                id\n                type\n                format\n                label\n                multiple_values\n                system\n                readonly\n                ... on LinkAttribute {\n                    linked_library {\n                        id\n                    }\n                }\n                ... on TreeAttribute {\n                    linked_tree {\n                        id\n                        label\n                        libraries {\n                            library {\n                                id\n                                label\n                            }\n                        }\n                    }\n                }\n                ... on StandardAttribute {\n                    embedded_fields {\n                        id\n                        format\n                        label\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/attributes/getAttributesByLib.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($library: String!)"}, {"type": "query", "name": "IS_ALLOWED", "content": "{\n        isAllowed(type: $type, actions: $actions, applyTo: $applyTo, target: $target) {\n            name\n            allowed\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/permissions/isAllowedQuery.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "(\n        $type: PermissionTypes!\n        $actions: [PermissionsActions!]!\n        $applyTo: ID\n        $target: PermissionTarget\n    )"}, {"type": "query", "name": "GET_LANGS", "content": "{\n        langs\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/core/getLangs.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "GET_AVAILABLE_LANGS", "content": "{\n        availableLangs @client\n        lang @client\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/cache/lang/getLangQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "GET_ACTIVE_LIBRARY", "content": "{\n        activeLib @client {\n            id @client\n            name @client\n            filter @client\n            behavior @client\n            attributes @client\n            gql @client {\n                searchableFields @client\n                query @client\n                type @client\n            }\n            trees\n            permissions @client {\n                access_library @client\n                access_record @client\n                create_record @client\n                edit_record @client\n                delete_record @client\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/cache/activeLibrary/getActiveLibraryQuery.ts", "repo": "leav-solutions_leav-engine"}}, {"type": "query", "name": "GET_TREE_ATTRIBUTES_QUERY", "content": "{\n        trees(filters: {id: $treeId}) {\n            list {\n                id\n                libraries {\n                    library {\n                        id\n                        label\n                        gqlNames {\n                            type\n                            type\n                        }\n                        attributes {\n                            id\n                            type\n                            format\n                            label\n                            multiple_values\n                            ... on StandardAttribute {\n                                embedded_fields {\n                                    id\n                                    format\n                                    label\n                                }\n                            }\n                            ... on LinkAttribute {\n                                linked_library {\n                                    id\n                                }\n                            }\n                            ... on TreeAttribute {\n                                linked_tree {\n                                    id\n                                    label\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/queries/trees/getTreeAttributesQuery.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($treeId: [ID!])"}, {"type": "mutation", "name": "DELETE_VALUE", "content": "{\n        deleteValue(library: $library, recordId: $recordId, attribute: $attribute, value: $value) {\n            id_value\n            attribute {\n                id\n                format\n                type\n                system\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/values/deleteValueMutation.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "($library: ID!, $recordId: ID!, $attribute: ID!, $value: ValueInput)"}, {"type": "mutation", "name": "FORCE_PREVIEWS_GENERATION", "content": "{\n        forcePreviewsGeneration(\n            libraryId: $libraryId\n            filters: $filters\n            recordIds: $recordIds\n            failedOnly: $failedOnly\n        )\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/data-studio/src/graphQL/mutations/files/forcePreviewsGenerationMutation.ts", "repo": "leav-solutions_leav-engine"}, "arguments": "(\n        $libraryId: ID!\n        $filters: [RecordFilterInput!]\n        $recordIds: [ID!]\n        $failedOnly: Boolean\n    )"}, {"type": "query", "name": "QUERY_LIBRARY_CONFIG", "content": "{\n        libraries(filters: {id: $id}) {\n            list {\n                id\n                label(lang: $lang)\n                gqlNames {\n                    query\n                    filter\n                }\n                attributes {\n                    id\n                    type\n                    format\n                    label(lang: $lang)\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "79d1932e2e10291158873b5f79b2eb4beb6bda95", "file": "apps/admin/src/components/navigator/MainPanel.tsx", "repo": "leav-solutions_leav-engine"}, "arguments": "($id: [ID!], $lang: [AvailableLanguage!])"}, {"type": "mutation", "name": "giveAnswer", "content": "{\n    checkAnswer(challengeId: $doorId, answer: $answer) {\n      correct\n      discussionUrl\n      remainingAttempts\n    }\n  }", "metadata": {"commit_hash": "b43642d07e7f391c685bd8839c42d2a33f42cfa4", "file": "client/src/components/GiveAnswer.js", "repo": "knowit_kodekalender"}, "arguments": "($doorId: String!, $answer: String!)"}, {"type": "mutation", "name": "signUp", "content": "{\n    signUp(\n      token: $token\n      email: $email\n      password: $password\n    ) {\n      status\n    }\n  }", "metadata": {"commit_hash": "cebe603e320fbfdc9ef167c45f87a7f383790754", "file": "apollo/auth/mutations/signUp.js", "repo": "JustShip_justship_web"}, "arguments": "(\n    $token: String!\n    $email: String!\n    $password: String!\n  )"}, {"type": "mutation", "name": "delete_todo", "content": "{\n    delete_todo(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "hasura_sample-apps"}, "arguments": "($todoId: Int)"}, {"type": "mutation", "name": "insert_message", "content": "{\n    insert_message_one(object: $message) {\n      id\n      timestamp\n      text\n      username\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-chat/src/components/Textbox.js", "repo": "hasura_sample-apps"}, "arguments": "($message: message_insert_input!)"}, {"type": "mutation", "name": "update_todos", "content": "{\n    update_todos(_set: {is_completed: $done}, where: {id: {_eq: $todoId}}) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n      }\n    }\n}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "vuetify-vuex-todo-graphql/src/store.js", "repo": "hasura_sample-apps"}, "arguments": "($todoId: Int!, $done: Boolean)"}, {"type": "mutation", "name": "delete_todos", "content": "{\n    delete_todos(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "vuetify-vuex-todo-graphql/src/store.js", "repo": "hasura_sample-apps"}, "arguments": "($todoId: Int!)"}, {"type": "query", "name": "fetch_todos", "content": "{\n    todos(\n      where: { is_public: { _eq: false }, user_id: { _eq: $userId } }\n      order_by: { created_at: desc }\n    ) {\n      ...TodoFragment\n    }\n  }\n  ${TODO_FRAGMENT}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "hasura_sample-apps"}, "arguments": "($userId: String!)"}, {"type": "mutation", "name": "update_todos", "content": "{\n    update_todos(where: { id: { _eq: $todoId } }, _set: $set) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "hasura_sample-apps"}, "arguments": "($todoId: Int, $set: todos_set_input!)"}, {"type": "subscription", "name": "getLocation", "content": "{\n        vehicle(where: {id: {_eq: $vehicleId}}) {\n            locations(order_by: {timestamp:desc}, limit: 1) {\n                location\n                timestamp\n            }\n        }\n    }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-location-tracking/src/App/App.js", "repo": "hasura_sample-apps"}, "arguments": "($vehicleId: String!)"}, {"type": "subscription", "name": "getResult", "content": "{\n    poll_results(\n      order_by: { option_id: desc }\n      where: { poll_id: { _eq: $pollId } }\n    ) {\n      option_id\n      option {\n        id\n        text\n      }\n      votes\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-poll/src/GraphQL.jsx", "repo": "hasura_sample-apps"}, "arguments": "($pollId: uuid!)"}, {"type": "subscription", "name": "getOnlineUsersCount", "content": "{\n    online_users {\n      count\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-poll/src/GraphQL.jsx", "repo": "hasura_sample-apps"}}, {"type": "mutation", "name": "userOnline", "content": "{\n    update_user(where: { id: { _eq: $uuid } }, _set: { online_ping: true }) {\n      affected_rows\n      returning {\n        last_seen_at\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-poll/src/GraphQL.jsx", "repo": "hasura_sample-apps"}, "arguments": "($uuid: uuid)"}, {"type": "mutation", "name": "newUser", "content": "{\n    insert_user(objects: [{ id: $uuid }]) {\n      returning {\n        id\n        created_at\n      }\n    }\n  }", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "realtime-poll/src/GraphQL.jsx", "repo": "hasura_sample-apps"}, "arguments": "($uuid: uuid)"}, {"type": "query", "name": "ExistingChatUsers", "content": "{\n    chat(where:{users:{user_id:{_eq:$userId}}, owner_id:{_is_null:true}}){\n      id\n      name\n      owner_id\n      users(order_by:[{user_id:desc}],where:{user_id:{_neq:$userId}}) {\n        user_id\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.user}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/UsersList.tsx", "repo": "hasura_sample-apps"}, "arguments": "($userId: Int)"}, {"type": "query", "name": "RemainingUsers", "content": "{\n    users(order_by:[{id:desc}],where:{id:{_nin:$existingUsersId}}){\n      ...user\n    }\n  }\n  ${fragments.user}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/UsersList.tsx", "repo": "hasura_sample-apps"}, "arguments": "($existingUsersId: [Int!])"}, {"type": "subscription", "name": "RemainingUsersSub", "content": "{\n    users(order_by:[{id:desc}],where:{id:{_nin:$existingUsersId}}){\n      ...user\n    }\n  }\n  ${fragments.user}", "metadata": {"commit_hash": "0e999feb31c85ff3ef2e94988d4df2bcb475821e", "file": "whatsapp-clone-typescript-react/react-app/src/components/UsersList.tsx", "repo": "hasura_sample-apps"}, "arguments": "($existingUsersId: [Int!])"}, {"type": "query", "name": "communities", "content": "{\n    communities {\n      id\n      url\n      image\n      name\n      author {\n        id\n      }\n      members {\n        id\n      }\n      notifications {\n        id\n      }\n      channels {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Community.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "followCommunity", "content": "{\n    followCommunity(url: $url) {\n      id\n      members {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Community.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($url: String)"}, {"type": "subscription", "name": "newNotification", "content": "{\n    newNotification(receiverId: $receiverId, tenant: $tenant) {\n      id\n      type\n      createdAt\n      isRead\n      message {\n        id\n        body\n        createdAt\n        author {\n          id\n          username\n        }\n      }\n      receiver {\n        id\n        username\n      }\n      sender {\n        id\n        username\n        isOnline\n      }\n      channel {\n        url\n        id\n      }\n      community {\n        url\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Notification.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($receiverId: String!, $tenant: String!)"}, {"type": "mutation", "name": "markNotificationAsRead", "content": "{\n    markNotificationAsRead(id: $id) {\n      count\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Notification.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "markChannelNotificationsAsRead", "content": "{\n    markChannelNotificationsAsRead(channelUrl: $channelUrl) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($channelUrl: String!)"}, {"type": "mutation", "name": "createChannel", "content": "{\n    createChannel(\n      name: $name\n      description: $description\n      url: $url\n      isPrivate: $isPrivate\n      communityUrl: $communityUrl\n    ) {\n      id\n      name\n      url\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "(\n    $name: String!\n    $description: String\n    $url: String!\n    $isPrivate: Boolean\n    $communityUrl: String!\n  )"}, {"type": "subscription", "name": "channelNewMessage", "content": "{\n    channelNewMessage(communityUrl: $communityUrl, tenant: $tenant) {\n      id\n      name\n      url\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Channel.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($communityUrl: String, $tenant: String)"}, {"type": "subscription", "name": "editMessage", "content": "{\n    editMessage(channelUrl: $channelUrl, tenant: $tenant) {\n      ...message\n    }\n  }\n  ${MessagesFragment}", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($channelUrl: String, $tenant: String)"}, {"type": "subscription", "name": "newReaction", "content": "{\n    newReaction(channelUrl: $channelUrl, tenant: $tenant) {\n      id\n      name\n      createdAt\n      updatedAt\n      users {\n        id\n        username\n        image\n      }\n      message {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($channelUrl: String, $tenant: String)"}, {"type": "mutation", "name": "sendNotification", "content": "{\n    sendNotification(\n      receiverName: $receiverName\n      messageId: $messageId\n      channelUrl: $channelUrl\n      communityUrl: $communityUrl\n      type: \"mention\"\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "(\n    $receiverName: String\n    $messageId: ID!\n    $channelUrl: String\n    $communityUrl: String\n  )"}, {"type": "query", "name": "getUnreadMessagesCount", "content": "{\n    getUnreadMessagesCount(channelUrl: $channelUrl, username: $username) {\n      messages {\n        body\n        createdAt\n        author {\n          username\n          image\n          isOnline\n          fullname\n        }\n      }\n      fromNewUser\n      user {\n        id\n        fullname\n        username\n        bio\n        email\n        social\n        image\n        isOnline\n        owner\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Message.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($channelUrl: String, $username: String)"}, {"type": "mutation", "name": "logout", "content": "{\n    logout {\n      isOnline\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/User.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "deleteRole", "content": "{\n    deleteRole(id: $id) {\n      id\n      roleSettings\n      title\n      color\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Role.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($id: String!)"}, {"type": "query", "name": "roles", "content": "{\n    roles {\n      id\n      title\n      roleSettings\n      color\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/Role.js", "repo": "ciscord_ciscord-frontend"}}, {"type": "mutation", "name": "uploadFile", "content": "{\n    uploadFile(file: $file) {\n      Key\n      filename\n      mimetype\n      encoding\n      filesize\n    }\n  }", "metadata": {"commit_hash": "ad630944093c01c2475afe849bae29b7cbc6e2c6", "file": "apis/File.js", "repo": "ciscord_ciscord-frontend"}, "arguments": "($file: File!)"}, {"type": "query", "name": "pageQuery", "content": "{\n        postsConnection(sort: \"createdAt:desc\", limit: $limit, start: $start){\n            values {\n                id\n                name\n                title\n                enable\n                body\n                description\n                publishedAt\n                views\n                banner {\n                    name\n                    url\n                }\n                author {\n                    username\n                    email\n                    page\n                }\n            }\n            aggregate {\n                count\n            }\n        }\n    }", "metadata": {"commit_hash": "33a1987b2320151ee0f3c5dce241aa9dca9f2404", "file": "src/app/core/graphql/queries/posts.ts", "repo": "binary-coffee-dev_dcs-admin-frontend"}, "arguments": "($limit: Int!, $start: Int!)"}, {"type": "mutation", "name": "updateUser", "content": "{\n        updateUser(input: { where: {id: $id},data: { email: $email, page: $page } }) {\n            user {\n                id\n                username\n                email\n                confirmed\n                blocked\n                role {\n                    name\n                }\n                page\n                avatar {\n                    url\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "33a1987b2320151ee0f3c5dce241aa9dca9f2404", "file": "src/app/core/graphql/mutations/update-profile.ts", "repo": "binary-coffee-dev_dcs-admin-frontend"}, "arguments": "($id: ID!, $email: String, $page: String)"}, {"type": "mutation", "name": "login", "content": "{\n        login(input: {identifier: $identifier, password: $password}){\n            jwt\n        }\n    }", "metadata": {"commit_hash": "33a1987b2320151ee0f3c5dce241aa9dca9f2404", "file": "src/app/core/graphql/mutations/login.ts", "repo": "binary-coffee-dev_dcs-admin-frontend"}, "arguments": "($identifier: String!, $password: String!)"}, {"type": "query", "name": "moloches", "content": "{\n    moloches(orderBy: summoningTime, first: 100, skip: $skip) {\n      id\n      title\n      version\n      totalShares\n      guildBankAddress\n      summoningTime\n      guildBankBalanceV1\n      guildBankValue @client\n      apiData @client\n      members(where: { exists: true }) {\n        id\n      }\n      proposals {\n        id\n      }\n      approvedTokens {\n        id\n      }\n      depositToken {\n        tokenAddress\n        symbol\n        decimals\n      }\n      tokenBalances(where: { guildBank: true }) {\n        id\n        tokenBalance\n        guildBank\n        token {\n          decimals\n          tokenAddress\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c9f05d8022506070d39119d721d3ac1ad23c8cf", "file": "src/util/queries.js", "repo": "mjtechworks_daohaus-web"}, "arguments": "($skip: Int)"}, {"type": "query", "name": "members", "content": "{\n    members(where: { molochAddress: $contractAddr }) {\n      id\n      delegateKey\n      molochAddress\n      shares\n      memberAddress\n    }\n  }", "metadata": {"commit_hash": "5c9f05d8022506070d39119d721d3ac1ad23c8cf", "file": "src/util/queries.js", "repo": "mjtechworks_daohaus-web"}, "arguments": "($contractAddr: String!)"}, {"type": "query", "name": "members", "content": "{\n    members(where: { memberAddress: $memberAddress, exists: true }) {\n      id\n      memberAddress\n      moloch {\n        id\n        title\n        version\n        proposals(orderBy: proposalId, orderDirection: desc, first: 10) {\n          id\n          createdAt\n          proposalId\n          proposalIndex\n          processed\n          sponsored\n          details\n          newMember\n          whitelist\n          guildkick\n          trade\n          cancelled\n          aborted\n          votingPeriodStarts\n          votingPeriodEnds\n          gracePeriodEnds\n          molochAddress\n          molochVersion\n          proposalType @client\n          description @client\n          title @client\n          activityFeed @client\n          votes(where: { memberAddress: $memberAddress }) {\n            id\n            memberAddress\n          }\n        }\n        rageQuits {\n          id\n          createdAt\n          shares\n          loot\n          memberAddress\n          molochAddress\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c9f05d8022506070d39119d721d3ac1ad23c8cf", "file": "src/util/queries.js", "repo": "mjtechworks_daohaus-web"}, "arguments": "($memberAddress: String!)"}, {"type": "query", "name": "featured", "content": "{\n    featured1: moloch(id: $featured1) {\n      ${featuredFields}\n    }\n    featured2: moloch(id: $featured2) {\n      ${featuredFields}\n    }\n    featured3: moloch(id: $featured3) {\n      ${featuredFields}\n    }\n    featured4: moloch(id: $featured4) {\n      ${featuredFields}\n    }\n    featured5: moloch(id: $featured5) {\n      ${featuredFields}\n    }\n  }", "metadata": {"commit_hash": "5c9f05d8022506070d39119d721d3ac1ad23c8cf", "file": "src/util/queries.js", "repo": "mjtechworks_daohaus-web"}, "arguments": "(\n    $featured1: String!\n    $featured2: String!\n    $featured3: String!\n    $featured4: String!\n    $featured5: String!\n  )"}, {"type": "query", "name": "Me", "content": "{\n    me {\n      discussions {\n        id\n        recipient {\n          id\n          profile {\n            photo {\n              url\n            }\n            personalInformation {\n              firstName\n              lastName\n            }\n          }\n          member {\n            interaction {\n              formOfWork\n              name\n            }\n          }\n        }\n        messages {\n          id\n          content\n          read\n          sendDate\n          member {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "fragments/chat/src/useChat.ts", "repo": "atls_serenity"}}, {"type": "mutation", "name": "AddDiscussionMessage", "content": "{\n    addDiscussionMessage(input: $input) {\n      result {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "fragments/chat/src/useChat.ts", "repo": "atls_serenity"}, "arguments": "($input: AddDiscussionMessageInput!)"}, {"type": "query", "name": "Categories", "content": "{\n    categories {\n      rows {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/main/src/useData.ts", "repo": "atls_serenity"}}, {"type": "query", "name": "SearchProjects", "content": "{\n    search {\n      projects(filters: $filters, query: $query) {\n        rows {\n          id\n          name\n          category {\n            id\n            name\n          }\n          description\n          budget\n          legalEntitiesOnly\n          views\n          replyCount\n          publicationDate\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/projects/src/useData.ts", "repo": "atls_serenity"}, "arguments": "($filters: SearchProjectsFilter, $query: String!)"}, {"type": "mutation", "name": "AddProjectReply", "content": "{\n    addProjectReply(input: $input) {\n      result {\n        id\n        discussion {\n          id\n          messages {\n            id\n            content\n            author {\n              photo {\n                url\n              }\n              personalInformation {\n                firstName\n                lastName\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}, "arguments": "($input: AddProjectReplyInput!)"}, {"type": "mutation", "name": "ChangeReplyStatus", "content": "{\n    changeReplyStatus(input: $input) {\n      result {\n        id\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/project-reply/src/useCreate.ts", "repo": "atls_serenity"}, "arguments": "($input: ChangeReplyStatusInput!)"}, {"type": "query", "name": "Me", "content": "{\n    me {\n      profile {\n        type\n        photo {\n          url\n        }\n        personalInformation {\n          firstName\n        }\n      }\n      member {\n        interaction {\n          formOfWork\n          name\n        }\n        account {\n          type\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/fragments/navigation/src/useProfile.ts", "repo": "atls_serenity"}}, {"type": "query", "name": "Me", "content": "{\n    me {\n      profile {\n        type\n        photo {\n          url\n        }\n      }\n      replies(projectId: $projectId) {\n        id\n        status\n        discussion {\n          id\n          messages {\n            id\n            content\n            author {\n              photo {\n                url\n              }\n              personalInformation {\n                firstName\n                lastName\n              }\n            }\n            member {\n              id\n              rating\n              interaction {\n                formOfWork\n                name\n              }\n              specialisation {\n                main {\n                  name\n                }\n                additional {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "937dc261592c7afe8c1abf9bb4a19a299237e07b", "file": "site/pages/projects-detail-page/src/useData.ts", "repo": "atls_serenity"}, "arguments": "($projectId: ID)"}, {"type": "mutation", "name": "CreateService", "content": "{\n    service: createService(service: $input) {\n      ...Service\n    }\n  }\n  ${ServiceFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "($input: CreateServiceInput!)"}, {"type": "mutation", "name": "AcceptInvite", "content": "{\n    service: acceptInvite(serviceId: $serviceID) {\n      ...Service\n    }\n  }\n  ${ServiceFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "($serviceID: ID!)"}, {"type": "mutation", "name": "SubmitRefund", "content": "{\n    refund: submitRefund(\n      paymentId: $paymentId\n      amount: $amount\n      reference: $reference\n    ) {\n      ...PaymentRefund\n    }\n  }\n  ${PaymentRefundFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "($paymentId: ID!, $amount: Int!, $reference: String)"}, {"type": "mutation", "name": "UpdateGatewayAccountCardTypes", "content": "{\n    gatewayAccount: updateGatewayAccountCardTypes(\n      gatewayAccountId: $gatewayAccountId\n      cardTypeIds: $cardTypeIds\n    ) {\n      ...GatewayAccount\n    }\n  }\n  ${GatewayAccountFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "(\n    $gatewayAccountId: ID!\n    $cardTypeIds: [ID!]!\n  )"}, {"type": "mutation", "name": "UpdateGatewayAccountCredentials", "content": "{\n    gatewayAccount: updateGatewayAccountCredentials(\n      gatewayAccountId: $gatewayAccountId\n      credentials: $input\n    ) {\n      credentials {\n        ...GatewayAccountCredentials\n      }\n    }\n  }\n  ${GatewayAccountCredentialsFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "(\n    $gatewayAccountId: ID!\n    $input: BamboraCredentialsInput!\n  )"}, {"type": "mutation", "name": "CreateProduct", "content": "{\n    product: createProduct(\n      gatewayAccountId: $gatewayAccountId\n      product: $input\n    ) {\n      ...Product\n    }\n  }\n  ${ProductFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "($gatewayAccountId: ID!, $input: CreateProductInput!)"}, {"type": "query", "name": "GetPaymentRefund", "content": "{\n    payment(id: $id) {\n      ...Payment\n      refunds {\n        ...PaymentRefund\n      }\n    }\n  }\n  ${PaymentFragmentDoc}\n  ${PaymentRefundFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetPaymentEvents", "content": "{\n    payment(id: $id) {\n      ...Payment\n      events {\n        ...PaymentEvent\n      }\n    }\n  }\n  ${PaymentFragmentDoc}\n  ${PaymentEventFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/console/__generated__/graphql.tsx", "repo": "govau_pay"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "CardTypes", "content": "{\n    cardTypes {\n      id\n      brand\n      label\n      type\n    }\n  }", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/platform-admin/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "query", "name": "CheckAuth", "content": "{\n    me {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "7f0d00fdcd920f4f3a10ff18842f5c0dbc722a15", "file": "assets/src/auth/__generated__/graphql.tsx", "repo": "govau_pay"}}, {"type": "query", "name": "users", "content": "{\n    user {\n        _id\n        username\n        score\n        createdAt\n        lastModified\n    }\n}", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/queries.js", "repo": "Morgoth27_pewpew_spaceman"}}, {"type": "mutation", "name": "login", "content": "{\n  login(username: $username, password: $password) {\n    token\n    user {\n        _id\n        username\n    }\n  }\n}", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/mutations.js", "repo": "Morgoth27_pewpew_spaceman"}, "arguments": "($username: String!, $password: String!)"}, {"type": "mutation", "name": "removeUser", "content": "{\n    removeUser(id: $id)\n}", "metadata": {"commit_hash": "f35e51dd4daa57edf0decdd11e6fc94ab4906e96", "file": "client/src/utils/mutations.js", "repo": "Morgoth27_pewpew_spaceman"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Editions", "content": "{EDITIONS_FILTERS}\n    ) {\n      editions(\n        where: {\n          active: true,\n          offersOnly: false,\n          remainingSupply_gt: 0,\n          priceInWei_gt: 0,\n          ${extraWhere.join('\\n')}\n        }\n        ${EDITIONS_ARGUMENTS}\n      ) {\n        ${isCount ? 'id' : '...editionFragment'}\n      }\n    }\n    ${isCount ? '' : editionFragment()}", "metadata": {"commit_hash": "6afba468cc1cd7fe436b644e3495c64403ac3048", "file": "webapp/src/modules/vendor/known_origin/edition/api.ts", "repo": "WhiteDragon001227_land-marketplace-erc1155"}, "arguments": "(\n      $"}, {"type": "query", "name": "Tokens", "content": "{TOKENS_FILTERS}\n    ) {\n      tokens(\n        where: {\n          ${extraWhere.join('\\n')}\n        }\n        ${TOKENS_ARGUMENTS}\n      ) {\n        ${isCount ? 'id' : '...tokenFragment'}\n      }\n    }\n    ${isCount ? '' : tokenFragment()}", "metadata": {"commit_hash": "6afba468cc1cd7fe436b644e3495c64403ac3048", "file": "webapp/src/modules/vendor/known_origin/token/api.ts", "repo": "WhiteDragon001227_land-marketplace-erc1155"}, "arguments": "(\n      $"}, {"type": "query", "name": "getUsersAndUser", "content": "{\n    posts{\n      id\n      userId\n      title\n      body\n    }\n    user(id: $userId) {\n      id\n      name\n      username\n      email\n      website\n      phone\n      address {\n        street\n        zipcode\n        geo{\n          lat\n          lng\n        }\n      }\n      company {\n        name\n        catchPhrase\n      }\n    }\n  }", "metadata": {"commit_hash": "101a4f9759f7ea66e3f926bf22434ed153e7d0d5", "file": "src/js/components/pages/Home.js", "repo": "pankajpatel_hapi-redux-graphql-rest"}, "arguments": "($userId: Int!)"}, {"type": "mutation", "name": "CreateCost", "content": "{\n    createCost(data: $data) {\n      ...Cost\n      ...Payer\n    }\n  }\n  ${Cost}\n  ${Payer}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split-app"}, "arguments": "($data: CostInput!)"}, {"type": "mutation", "name": "EditCost", "content": "{\n    editCost(costId: $costId, data: $data) {\n      ...Cost\n      ...Shares\n    }\n  }\n  ${Cost}\n  ${Shares}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split-app"}, "arguments": "($costId: String!, $data: CostInput!)"}, {"type": "mutation", "name": "DestroyCost", "content": "{\n    destroyCost(costId: $costId)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split-app"}, "arguments": "($costId: String!)"}, {"type": "mutation", "name": "GetSignedS3Url", "content": "{\n    getSignedS3Url(data: $data) {\n      url\n      signedRequest\n    }\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/shared/queries.ts", "repo": "NoQuarterTeam_split-app"}, "arguments": "($data: S3SignedUrlInput!)"}, {"type": "query", "name": "GetGroup", "content": "{\n    group {\n      ...Group\n      users {\n        ...User\n      }\n      invites {\n        ...Invite\n      }\n    }\n  }\n  ${Group}\n  ${User}\n  ${Invite}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/group/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "CreateGroup", "content": "{\n    createGroup(data: $data) {\n      ...Group\n      users {\n        ...User\n      }\n      invites {\n        ...Invite\n      }\n    }\n  }\n  ${Group}\n  ${User}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/group/queries.ts", "repo": "NoQuarterTeam_split-app"}, "arguments": "($data: GroupInput!)"}, {"type": "mutation", "name": "EditGroup", "content": "{\n    editGroup(groupId: $groupId, data: $data) {\n      ...Group\n    }\n  }\n  ${Group}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/group/queries.ts", "repo": "NoQuarterTeam_split-app"}, "arguments": "($groupId: String!, $data: GroupInput!)"}, {"type": "query", "name": "Me", "content": "{\n    me {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "CreateInvite", "content": "{\n    createInvite(data: $data) {\n      ...Invite\n    }\n  }\n  ${Invite}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/invite/queries.ts", "repo": "NoQuarterTeam_split-app"}, "arguments": "($data: InviteInput!)"}, {"type": "mutation", "name": "EditGroup", "content": "{\n    editGroup(groupId: $groupId, data: $data) {\n      ...Group\n    }\n  }\n  ${GroupFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}, "arguments": "($groupId: String!, $data: GroupInput!)"}, {"type": "mutation", "name": "CreateInvite", "content": "{\n    createInvite(data: $data) {\n      ...Invite\n    }\n  }\n  ${InviteFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}, "arguments": "($data: InviteInput!)"}, {"type": "mutation", "name": "DestroyInvite", "content": "{\n    destroyInvite(inviteId: $inviteId)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}, "arguments": "($inviteId: String!)"}, {"type": "query", "name": "Me", "content": "{\n    me {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}}, {"type": "mutation", "name": "ResetPassword", "content": "{\n    resetPassword(data: $data)\n  }", "metadata": {"commit_hash": "8bace98f58878dcce5f9853a85f676deeea45a66", "file": "src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split-app"}, "arguments": "($data: ResetPasswordInput!)"}, {"type": "query", "name": "getAppData @client", "content": "{\n    globalError\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/App.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "getReverseRecord", "content": "{\n    getReverseRecord(address: $address) {\n      name\n      address\n      avatar\n      match\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($address: String)"}, {"type": "query", "name": "singleName", "content": "{\n    singleName(name: $name) {\n      ...NodeFields\n      revealDate\n      registrationDate\n      migrationStartDate\n      currentBlockDate\n      transferEndDate\n      gracePeriodEndDate\n      value\n      highestBid\n      state\n      stateError\n      price\n      rent\n      referralFeePPM\n      available\n      expiryTime\n      deedOwner\n      registrant\n      isNewRegistrar\n      isDNSRegistrar\n      dnsOwner\n    }\n  }\n\n  ${NodeFields}", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String)"}, {"type": "query", "name": "getResolverMigrationInfo", "content": "{\n    getResolverMigrationInfo(name: $name, resolver: $resolver) {\n      name\n      isDeprecatedResolver\n      isOldPublicResolver\n      isPublicResolverReady\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String, $resolver: String)"}, {"type": "query", "name": "getTransactionHistory @client", "content": "{\n    transactionHistory\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "getFavourites", "content": "{\n    favourites @client {\n      name\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "getErrors", "content": "{\n    error {\n      message\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "getRegistrations", "content": "{\n    account(id: $id) {\n      registrations(\n        first: $first\n        skip: $skip\n        orderBy: $orderBy\n        orderDirection: $orderDirection\n        where: { expiryDate_gt: $expiryDate }\n      ) {\n        expiryDate\n        domain {\n          labelName\n          labelhash\n          name\n          isMigrated\n          parent {\n            name\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "(\n    $id: ID!\n    $first: Int\n    $skip: Int\n    $orderBy: Registration_orderBy\n    $orderDirection: OrderDirection\n    $expiryDate: Int\n  )"}, {"type": "query", "name": "getMinimumCommitmentAge", "content": "{\n    getMinimumCommitmentAge\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "checkCommitment", "content": "{\n    checkCommitment(\n      label: $label\n      secret: $secret\n      commitmentTimerRunning: $commitmentTimerRunning\n    )\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/queries.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "(\n    $label: String\n    $secret: String\n    $commitmentTimerRunning: String\n  )"}, {"type": "query", "name": "getweb3 @client", "content": "{\n    accounts\n    isReadOnly\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/localQueries.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "registerTestdomain", "content": "{\n    registerTestdomain(label: $label)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($label: String)"}, {"type": "mutation", "name": "setError", "content": "{\n    setError(message: $message) {\n      message\n    }\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($message: String)"}, {"type": "mutation", "name": "setResolver", "content": "{\n    setResolver(name: $name, address: $address)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String, $address: String)"}, {"type": "mutation", "name": "createSubdomain", "content": "{\n    createSubdomain(name: $name)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String)"}, {"type": "mutation", "name": "deleteSubdomain", "content": "{\n    deleteSubdomain(name: $name)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String)"}, {"type": "mutation", "name": "setName", "content": "{\n    setName(name: $name)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String)"}, {"type": "mutation", "name": "setAddress", "content": "{\n    setAddress(name: $name, recordValue: $recordValue)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String, $recordValue: String)"}, {"type": "mutation", "name": "migrateResolver", "content": "{\n    migrateResolver(name: $name)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String)"}, {"type": "mutation", "name": "reclaim", "content": "{\n    reclaim(name: $name, address: $address)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String, $address: String)"}, {"type": "mutation", "name": "renewDomains", "content": "{\n    renewDomains(labels: $labels, duration: $duration)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($labels: [String], $duration: Int)"}, {"type": "mutation", "name": "migrateRegistry", "content": "{\n    migrateRegistry(name: $name, address: $address)\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/graphql/mutations.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($name: String, $address: String)"}, {"type": "query", "name": "getAccounts @client", "content": "{\n    accounts\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/QueryAccount.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "singleNameQuery @client", "content": "{\n    isENSReady\n    networkId\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddReverseRecord.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "searchQuery", "content": "{\n    isENSReady @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/SearchName/Search.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "nameQuery", "content": "{\n    accounts @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/SingleName/Name.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "recordsQuery @client", "content": "{\n    accounts\n    isReadOnly\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/SingleName/ResolverAndRecords/Records.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "query", "name": "resetStateQuery @client", "content": "{\n    networkId\n    isENSReady\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/Address/Address.js", "repo": "smartdev1102_ANS-Frontend"}}, {"type": "mutation", "name": "AddSubDomainFavourite", "content": "{\n    addSubDomainFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($domain: Domain)"}, {"type": "mutation", "name": "DeleteSubDomainFavourite", "content": "{\n    deleteSubDomainFavourite(domain: $domain) @client\n  }", "metadata": {"commit_hash": "7bd7cff58263c0dc89ec2790b7207a3518879422", "file": "src/components/AddFavourite/AddFavourite.js", "repo": "smartdev1102_ANS-Frontend"}, "arguments": "($domain: Domain)"}, {"type": "mutation", "name": "loginWithLinkedIn", "content": "{\n        loginWithLinkedIn(code: $code redirectUri: $redirectUri) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/login-with-linkedIn.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}, "arguments": "($code: String! $redirectUri: String!)"}, {"type": "mutation", "name": "sendVerificationEmail", "content": "{\n        sendVerificationEmail(email: $email) {\n          success\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/send-verification-email.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}, "arguments": "($email: String)"}, {"type": "mutation", "name": "login", "content": "{\n        loginWithPassword (username: $username, email: $email, password: $password) {\n          id\n          token\n          tokenExpires\n        }\n      }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/apollo-client/auth/login-with-password.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}, "arguments": "($username: String, $email: String, $password: HashedPassword!)"}, {"type": "mutation", "name": "saveSubscription", "content": "{\n    saveSubscription(subscription: $subscription) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/components/smart/pwa/subscribe-btn.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}, "arguments": "($subscription: SubscriptionInput!)"}, {"type": "query", "name": "user", "content": "{\n    user {\n      ...userFragment\n    }\n  }\n  \n  ${userFragment}", "metadata": {"commit_hash": "6439818edf70de6ef0e66d15f5d8c9b5185d8ef2", "file": "app/ui/components/smart/route-wrappers/global-data-provider.js", "repo": "ceriverso_Meteor-apollo-stark-kit"}}, {"type": "query", "name": "health", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: \"uniswap/uniswap-v2\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}}, {"type": "query", "name": "uniswap", "content": "{\n    current: uniswap(id: \"1\") {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    oneDay: uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    twoDay: uniswapHistoricalDatas(\n      where: { timestamp_lt: $date2 }\n      first: 1\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    exchanges(first: 200, orderBy: ethBalance, orderDirection: desc) {\n      ethBalance\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}, "arguments": "($date: Int!, $date2: Int!)"}, {"type": "query", "name": "snapshots", "content": "{\n    liquidityPositionSnapshots(first: 1, where: { user: $user }, orderBy: timestamp, orderDirection: asc) {\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}, "arguments": "($user: Bytes!)"}, {"type": "query", "name": "snapshots", "content": "{\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\n      timestamp\n      reserveUSD\n      liquidityTokenBalance\n      liquidityTokenTotalSupply\n      reserve0\n      reserve1\n      token0PriceUSD\n      token1PriceUSD\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}, "arguments": "($user: Bytes!, $skip: Int!)"}, {"type": "query", "name": "transactions", "content": "{\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}, "arguments": "($user: Bytes!)"}, {"type": "query", "name": "tokens", "content": "{\n    tokens(first: 500, skip: $skip) {\n      id\n      name\n      symbol\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}, "arguments": "($skip: Int!)"}, {"type": "query", "name": "tokens", "content": "{\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}, "arguments": "($value: String, $id: String)"}, {"type": "query", "name": "pairs", "content": "{\n    pairs(first: 200, orderBy: reserveUSD, orderDirection: desc) {\n      id\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}}, {"type": "query", "name": "tokenDayDatas", "content": "{\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }", "metadata": {"commit_hash": "9b1fcbd65e97a04b96d862d151ae5e848905cef2", "file": "src/apollo/queries.js", "repo": "winter-sols_uniswap-info"}, "arguments": "($tokenAddr: String!, $skip: Int!)"}, {"type": "query", "name": "Editions", "content": "{EDITIONS_FILTERS}\n    ) {\n      editions(\n        where: {\n          active: true,\n          offersOnly: false,\n          remainingSupply_gt: 0,\n          priceInWei_gt: 0,\n          ${extraWhere.join('\\n')}\n        }\n        ${EDITIONS_ARGUMENTS}\n      ) {\n        ${isCount ? 'id' : '...editionFragment'}\n      }\n    }\n    ${isCount ? '' : editionFragment()}", "metadata": {"commit_hash": "c0e50bd262fa172e7b6384a02757580bdc5f6689", "file": "webapp/src/modules/vendor/known_origin/edition/api.ts", "repo": "dev-captain_land-marketplace-erc"}, "arguments": "(\n      $"}, {"type": "query", "name": "isLoggedIn", "content": "{\n    isLoggedIn @client\n  }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/index.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "loginVendor", "content": "{\n        loginVendor(input: $input){\n            vendor{\n                id\n                name\n                email\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}, "arguments": "($input: LoginInput!)"}, {"type": "mutation", "name": "emptyCart", "content": "{\n        emptyCart @client\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}}, {"type": "mutation", "name": "createOrder", "content": "{\n        createOrder(input: $input){\n            id\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}, "arguments": "($input: CreateOrderInput!)"}, {"type": "mutation", "name": "updateOrderBag", "content": "{\n        updateOrderBag(id: $id, input: $input){\n            id\n            type\n            status\n            delivery_date\n        }\n    }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/mutation.js", "repo": "sujoys10_food-at-you"}, "arguments": "($id: ID!, $input:UpdateOrderBagInput )"}, {"type": "query", "name": "vendorItems", "content": "{\n        items(filter: $filter, orderBy: $orderBy){\n            ...itemDetails\n        }\n    }\n    ${ITEM_DETAILS}", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/query.js", "repo": "sujoys10_food-at-you"}, "arguments": "($filter: ItemFilterInput, $orderBy: ItemOrderByInput)"}, {"type": "query", "name": "getItem", "content": "{\n        items(filter: $filter){\n            ...itemDetails\n            isInCart @client\n        }\n    }\n    ${ITEM_DETAILS}", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/query.js", "repo": "sujoys10_food-at-you"}, "arguments": "($filter: ItemFilterInput)"}, {"type": "query", "name": "getItem", "content": "{\n            items(filter: $filter){\n                id\n                type\n                price\n                isTimePassed @client\n                is_available\n                vendor{\n                    email\n                }\n            }\n        }", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/query.js", "repo": "sujoys10_food-at-you"}, "arguments": "($filter: ItemFilterInput)"}, {"type": "query", "name": "profile", "content": "{\n        users(filter: $filter){\n            id\n            name\n            email\n            address\n            phone\n            orders(orderBy: $orderBy){\n               id\n               total\n               vendor{\n                  name\n              }\n              order_date\n              delivery_address\n              order_bags(orderBy: $bagOrderBy){\n               ...orderBagsList\n              }\n            }\n        }\n    }\n    ${ORDER_BAG_DETAILS}", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/query.js", "repo": "sujoys10_food-at-you"}, "arguments": "($filter: UserFilterInput, $orderBy: OrderOrderByInput,$bagOrderBy: OrderBagOrderByInput)"}, {"type": "query", "name": "profile", "content": "{\n        vendors(filter: $filter){\n            id\n            name\n            email\n            address\n            phone\n            rating\n            orders(orderBy: $orderBy){\n                id\n                customer{\n                    name\n                }\n                order_date\n                total\n                delivery_address\n                order_bags(orderBy: $bagOrderBy){\n                    ...orderBagsList\n                }\n            }\n        }\n    }\n    ${ORDER_BAG_DETAILS}", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/query.js", "repo": "sujoys10_food-at-you"}, "arguments": "($filter: VendorFilterInput, $orderBy: OrderOrderByInput,$bagOrderBy: OrderBagOrderByInput)"}, {"type": "subscription", "name": "itemSubscription", "content": "{\n        subscribeToItem(filter: $filter){\n            ...itemDetails\n            isInCart @client\n        }\n    }\n    ${ITEM_DETAILS}", "metadata": {"commit_hash": "ba270c499433a672d06b8189ebd0025978a5f389", "file": "src/library/subscription.js", "repo": "sujoys10_food-at-you"}, "arguments": "($filter: ItemSubscriptionFilterInput)"}, {"type": "mutation", "name": "register", "content": "{\n        register(emailPhone: $email, firstName: $firstName, lastName: $lastName, password: $password)\n      }", "metadata": {"commit_hash": "74d2a328b7e10495b34cd88c0d88a5e79458a8a3", "file": "custom-api/customQueries.js", "repo": "wnprince_template-odoo"}, "arguments": "(\n        $email: String!\n        $firstName: String!\n        $lastName: String!\n        $password: String\n      )"}, {"type": "query", "name": "PositionStatus", "content": "{\n        positionStatus (symbol: $symbol) {\n            symbol\n            direction\n            conditionalEntryPrice\n            startingCapital\n            tradingId\n            value\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}, "arguments": "($symbol: String)"}, {"type": "mutation", "name": "UpdatePositionCapital", "content": "{\n        updatePositionCapital (symbol: $symbol, capital: $capital) {\n            symbol\n            direction\n            conditionalEntryPrice\n            startingCapital\n            tradingId\n            value\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}, "arguments": "($symbol: String, $capital: Float)"}, {"type": "mutation", "name": "ExitPosition", "content": "{\n        updatePositionStatusExit (symbol: $symbol) {\n            symbol\n            direction\n            conditionalEntryPrice\n            startingCapital\n            tradingId\n            value\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}, "arguments": "($symbol: String)"}, {"type": "mutation", "name": "PositionPosition", "content": "{\n        updatePositionStatusPosition (symbol: $symbol) {\n            symbol\n            direction\n            conditionalEntryPrice\n            startingCapital\n            tradingId\n            value\n        }\n    }", "metadata": {"commit_hash": "d52417fccbc32e3b11788a1d91854a8d9a558ae7", "file": "packages/cats-helper-gql/src/index.ts", "repo": "Seungwoo321_cats"}, "arguments": "($symbol: String)"}, {"type": "mutation", "name": "deleteCourse", "content": "{\n    deleteCourse(ids: $ids) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/courses.query.js", "repo": "SparkEdUAB_sparked-client"}, "arguments": "($ids: [String]!)"}, {"type": "mutation", "name": "deleteUser", "content": "{\n    deleteUser(ids: $ids) {\n      name\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/users.query.js", "repo": "SparkEdUAB_sparked-client"}, "arguments": "($ids: [String]!)"}, {"type": "query", "name": "getUnitTopics", "content": "{\n    getTopicsByUnitId(unitId: $unitId) {\n      _id\n      name\n      createdAt\n      createdByName\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/topics.query.js", "repo": "SparkEdUAB_sparked-client"}, "arguments": "($unitId: String!)"}, {"type": "query", "name": "getResource", "content": "{\n    getResource(id: $id) {\n      path\n      filename\n      _id\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/resources.query.js", "repo": "SparkEdUAB_sparked-client"}, "arguments": "($id: String!)"}, {"type": "query", "name": "getCourseUnits", "content": "{\n    getUnitsByCourseId(courseId: $courseId) {\n      _id\n      name\n      createdAt\n      createdByName\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/admin/queries/units.query.js", "repo": "SparkEdUAB_sparked-client"}, "arguments": "($courseId: String!)"}, {"type": "query", "name": "getResources", "content": "{\n    getResourceByTopicId($topicId: $topicId) {\n      _id\n      name\n      createdAt\n      topics {\n        _id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/client/queries/resource.query.js", "repo": "SparkEdUAB_sparked-client"}, "arguments": "($topicId: String!)"}, {"type": "query", "name": "getCourseUnits", "content": "{\n    getUnitsByCourseId(courseId: $courseId) {\n      _id\n      name\n      createdAt\n      topics {\n        _id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/client/queries/units.query.js", "repo": "SparkEdUAB_sparked-client"}, "arguments": "($courseId: String!)"}, {"type": "mutation", "name": "LoginUser", "content": "{\n    login(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "85f3dd4094d182f4437ab6ad7ab64af3854385d9", "file": "src/core/queries/login.mutation.js", "repo": "SparkEdUAB_sparked-client"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "Editions", "content": "{EDITIONS_FILTERS}\n    ) {\n      editions(\n        where: {\n          active: true,\n          offersOnly: false,\n          remainingSupply_gt: 0,\n          priceInWei_gt: 0,\n          ${extraWhere.join('\\n')}\n        }\n        ${EDITIONS_ARGUMENTS}\n      ) {\n        ${isCount ? 'id' : '...editionFragment'}\n      }\n    }\n    ${isCount ? '' : editionFragment()}", "metadata": {"commit_hash": "d5b063080460d1a0ecc626332125a37bc92e36c2", "file": "webapp/src/modules/vendor/known_origin/edition/api.ts", "repo": "naruhitokaide_land-martketplace-erc"}, "arguments": "(\n      $"}, {"type": "query", "name": "EditionById", "content": "{\n    editions(where: { id: $id }, first: 1) {\n      ...editionFragment\n    }\n  }\n  ${editionFragment()}", "metadata": {"commit_hash": "d5b063080460d1a0ecc626332125a37bc92e36c2", "file": "webapp/src/modules/vendor/known_origin/edition/api.ts", "repo": "naruhitokaide_land-martketplace-erc"}, "arguments": "($id: String)"}, {"type": "query", "name": "TokenById", "content": "{\n    tokens(where: { id: $id }, first: 1) {\n      ...tokenFragment\n    }\n  }\n  ${tokenFragment()}", "metadata": {"commit_hash": "d5b063080460d1a0ecc626332125a37bc92e36c2", "file": "webapp/src/modules/vendor/known_origin/token/api.ts", "repo": "naruhitokaide_land-martketplace-erc"}, "arguments": "($id: String)"}, {"type": "query", "name": "Listings", "content": "{\n    listings(location: $location, filter: $filter, limit: $limit, page: $page) {\n      region\n      total\n      result {\n        id\n        title\n        image\n        address\n        price\n        numOfGuests\n      }\n    }\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/queries/Listings/index.ts", "repo": "AllTwinkleStars_recat"}, "arguments": "($location: String, $filter: ListingsFilter!, $limit: Int!, $page: Int!)"}, {"type": "query", "name": "AuthUrl", "content": "{\n    authUrl\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/queries/AuthUrl/index.ts", "repo": "AllTwinkleStars_recat"}}, {"type": "mutation", "name": "CreateBooking", "content": "{\n    createBooking(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "693dfc8d2daf93e6aa922ccd8034ccf099bb587c", "file": "client/src/lib/graphql/mutations/CreateBooking/index.ts", "repo": "AllTwinkleStars_recat"}, "arguments": "($input: CreateBookingInput!)"}, {"type": "query", "name": "teachers", "content": "{\n    teachers(input: $in) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($in: LessonId)"}, {"type": "query", "name": "student", "content": "{\n    ${students}\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($in: LessonId)"}, {"type": "query", "name": "submissions", "content": "{\n    ${submissions}\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($in: LessonId)"}, {"type": "query", "name": "userSubmissions", "content": "{\n    userSubmissions(input: $in) {\n      status\n      mrUrl\n      diff\n      viewCount\n      comment\n      reviewer {\n        username\n        id\n      }\n      challenge {\n        title\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($in: LessonUserId)"}, {"type": "mutation", "name": "unapproveSubmission", "content": "{\n    unapproveSubmission(input: $in) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($in: SubmissionEdit)"}, {"type": "mutation", "name": "rejectSubmission", "content": "{\n    rejectSubmission(input: $in) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($in: SubmissionEdit)"}, {"type": "mutation", "name": "createSubmission", "content": "{\n    createSubmission(input: $in) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($in: SubmissionInput)"}, {"type": "mutation", "name": "adoptStudent", "content": "{\n    adoptStudent(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($input: LessonUserId)"}, {"type": "mutation", "name": "unAdoptStudent", "content": "{\n    unAdoptStudent(input: $input)\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($input: LessonUserId)"}, {"type": "query", "name": "userInfo", "content": "{\n    userInfo(input: $in){\n      name,\n      createdAt,\n      stars { studentId ,comment, lessonId },\n      lessons{\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}, "arguments": "($in: UserInput)"}, {"type": "query", "name": "getWaitListStudents", "content": "{\n    getWaitListStudents{\n      email, id, cohortId\n    },\n    getCohorts{ chatroomId, id }\n   }", "metadata": {"commit_hash": "0397b8e592aa360854f1c838cf28898ac87cc42c", "file": "src/db/queries.js", "repo": "garageScript_c0d3"}}, {"type": "subscription", "name": "onNotifyTransactionCreated", "content": "{\n          onNotifyTransactionCreated {\n            target\n            type\n            accountId\n            transaction {\n              id\n              balance\n              delta\n              description\n              date\n            }\n          }\n        }", "metadata": {"commit_hash": "e5ea650d524a01b7811e2e8e6daa8b7a6cdcd5ab", "file": "src/modules/notification/useCases/notifyFE/NotifyFE.e2e.ts", "repo": "s4nt14go_white-label"}}, {"type": "query", "name": "SampleQuery", "content": "{\n    author(authorId: $authorId) {\n      id\n      firstName\n    }\n  }", "metadata": {"commit_hash": "e65f9275fa83daf8c6816c358e73e3aa7b0c6fc8", "file": "packages/react-cosmos-apollo-proxy/src/__tests__/client.js", "repo": "react-cosmos_react-cosmos-classic"}, "arguments": "($authorId: Int!)"}, {"type": "query", "name": "tokens", "content": "{\n    tokens(where: { id: $tokenAddress }) {\n      derivedETH\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "4202e3dbff9a01b8b4c38cd45af7fa8ba421799e", "file": "src/components/App.js", "repo": "tashapais_graphql-dai-display"}, "arguments": "($tokenAddress: Bytes!)"}, {"type": "query", "name": "Repo", "content": "{\n    repo(id: $id) {\n      id\n      name\n      registryName\n      timestamp\n      txHash\n      sender\n      versionCount\n      lastVersion {\n        index\n      }\n      versions {\n        index\n        semanticVersion\n        contentUri\n        timestamp\n        txHash\n        sender\n      }\n    }\n  }", "metadata": {"commit_hash": "fe2e041cb933b5cd5acb5049391afb2f80ba8502", "file": "src/query.ts", "repo": "dappnode_explorer"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Count", "content": "{\n    registries {\n      name\n      repoCount\n      versionCount\n    }\n  }", "metadata": {"commit_hash": "fe2e041cb933b5cd5acb5049391afb2f80ba8502", "file": "src/query.ts", "repo": "dappnode_explorer"}}, {"type": "query", "name": "Activity", "content": "{\n    versions(first: 1000) {\n      timestamp\n    }\n    repos(first: 1000) {\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "fe2e041cb933b5cd5acb5049391afb2f80ba8502", "file": "src/query.ts", "repo": "dappnode_explorer"}}, {"type": "query", "name": "Repos", "content": "{\n  repos(first: 1000) {\n    id\n    name\n    registryName\n    versionCount\n    lastVersion {\n      semanticVersion\n      contentUri\n      timestamp\n    }\n  }\n}", "metadata": {"commit_hash": "fe2e041cb933b5cd5acb5049391afb2f80ba8502", "file": "src/generated/graphql.tsx", "repo": "dappnode_explorer"}}, {"type": "query", "name": "Repo", "content": "{\n  repo(id: $id) {\n    id\n    name\n    registryName\n    timestamp\n    txHash\n    sender\n    versionCount\n    lastVersion {\n      index\n    }\n    versions {\n      index\n      semanticVersion\n      contentUri\n      timestamp\n      txHash\n      sender\n    }\n  }\n}", "metadata": {"commit_hash": "fe2e041cb933b5cd5acb5049391afb2f80ba8502", "file": "src/generated/graphql.tsx", "repo": "dappnode_explorer"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "blocks", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "7cfb2295695fa507e5c60fba270e11568078823f", "file": "src/apollo/queries.js", "repo": "tigerony_Trisolaris-frontend"}, "arguments": "($timestampFrom: Int!, $timestampTo: Int!)"}, {"type": "mutation", "name": "AddTodo_CreateTodo", "content": "{\n    createTodo(body: $body) {\n      id\n      __typename\n      body\n      status\n    }\n  }", "metadata": {"commit_hash": "1031aa444ebf354ed13eb74c16f02d76b09f3302", "file": "fixtures/example-todo-master/web/src/components/AddTodo/AddTodo.js", "repo": "decoupled_redwood-core"}, "arguments": "($body: String!)"}, {"type": "mutation", "name": "TodoListCell_CheckTodo", "content": "{\n    updateTodoStatus(id: $id, status: $status) {\n      id\n      __typename\n      status\n    }\n  }", "metadata": {"commit_hash": "1031aa444ebf354ed13eb74c16f02d76b09f3302", "file": "fixtures/example-todo-master/web/src/components/TodoListCell/TodoListCell.js", "repo": "decoupled_redwood-core"}, "arguments": "($id: Int!, $status: String!)"}, {"type": "mutation", "name": "AddTodo_CreateTodo", "content": "{\n    createTodo(body: $body) {\n      id\n      __typename\n      body\n      status\n    }\n  }", "metadata": {"commit_hash": "1031aa444ebf354ed13eb74c16f02d76b09f3302", "file": "fixtures/example-todo-master-with-errors/web/src/components/AddTodo/AddTodo.js", "repo": "decoupled_redwood-core"}, "arguments": "($body: String!)"}, {"type": "mutation", "name": "TodoListCell_CheckTodo", "content": "{\n    updateTodoStatus(id: $id, status: $status) {\n      id\n      __typename\n      status\n    }\n  }", "metadata": {"commit_hash": "1031aa444ebf354ed13eb74c16f02d76b09f3302", "file": "fixtures/example-todo-master-with-errors/web/src/components/TodoListCell/TodoListCell.js", "repo": "decoupled_redwood-core"}, "arguments": "($id: Int!, $status: String!)"}, {"type": "query", "name": "checkInvoice", "content": "{\n    checkInvoice(paymentId: $paymentId, invoiceId: $invoiceId)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/queries.ts", "repo": "erxes_erxes-community"}, "arguments": "($paymentId: String!, $invoiceId: String!)"}, {"type": "mutation", "name": "paymentAdd", "content": "{commonPaymentParamDefs}) {\n  paymentAdd(${commonPaymentParams}) {\n    _id\n  }\n}", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}, "arguments": "($"}, {"type": "mutation", "name": "createInvoice", "content": "{createInvoiceParamDefs}) {\n  createInvoice(${createInvoiceParams})\n}", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}, "arguments": "($"}, {"type": "mutation", "name": "SetPaymentConfig", "content": "{\n    setPaymentConfig(contentType: $contentType, contentTypeId: $contentTypeId) {\n      _id\n      paymentIds\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-payment-ui/src/graphql/mutations.ts", "repo": "erxes_erxes-community"}, "arguments": "($contentType: String!, $contentTypeId: String!)"}, {"type": "mutation", "name": "tagsTag", "content": "{\n    tagsTag(type: $type, targetIds: $targetIds, tagIds: $tagIds)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/ui-tags/src/containers/Tagger.tsx", "repo": "erxes_erxes-community"}, "arguments": "(\n    $type: String!\n    $targetIds: [String!]!\n    $tagIds: [String!]!\n  )"}, {"type": "query", "name": "ForumCpMySubscriptionOrders", "content": "{\n    forumCpMySubscriptionOrders {\n      _id\n      cpUserId\n      createdAt\n      state\n      price\n      multiplier\n      invoiceId\n      contentType\n      unit\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-forum-ui/src/containers/subscriptionProducts/PaymentTest/CpUserOrderList.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "GenerateInvoiceUrl", "content": "{\n    generateInvoiceUrl(\n      amount: $amount\n      contentType: $contentType\n      contentTypeId: $contentTypeId\n      customerId: $customerId\n    )\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-forum-ui/src/containers/subscriptionProducts/PaymentTest/index.tsx", "repo": "erxes_erxes-community"}, "arguments": "(\n    $amount: Float!\n    $contentType: String\n    $contentTypeId: String\n    $customerId: String\n  )"}, {"type": "query", "name": "notificationsModules", "content": "{\n          notificationsModules\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-notifications-ui/src/containers/NotificationSettings.tsx", "repo": "erxes_erxes-community"}}, {"type": "query", "name": "notificationsGetConfigurations", "content": "{\n          notificationsGetConfigurations {\n            _id\n            notifType\n            isAllowed\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-notifications-ui/src/containers/NotificationSettings.tsx", "repo": "erxes_erxes-community"}}, {"type": "mutation", "name": "notificationsSaveConfig", "content": "{\n          notificationsSaveConfig(\n            notifType: $notifType\n            isAllowed: $isAllowed\n          ) {\n            _id\n          }\n        }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "packages/plugin-notifications-ui/src/containers/NotificationSettings.tsx", "repo": "erxes_erxes-community"}, "arguments": "(\n          $notifType: String!\n          $isAllowed: Boolean\n        )"}, {"type": "query", "name": "ClientPortalNotificationDetail", "content": "{\n    clientPortalNotificationDetail(_id: $id) {\n      _id\n      content\n      createdAt\n      link\n      notifType\n      title\n      isRead\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/main/containers/notifications/Detail.tsx", "repo": "erxes_erxes-community"}, "arguments": "($id: String!)"}, {"type": "query", "name": "ClientPortalNotifications", "content": "{\n    clientPortalNotifications(\n      endDate: $endDate\n      limit: $limit\n      notifType: $notifType\n      page: $page\n      perPage: $perPage\n      requireRead: $requireRead\n      search: $search\n      startDate: $startDate\n    ) {\n      _id\n      createdAt\n      isRead\n      title\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/main/containers/notifications/List.tsx", "repo": "erxes_erxes-community"}, "arguments": "(\n    $endDate: String\n    $limit: Int\n    $notifType: NotificationType\n    $page: Int\n    $perPage: Int\n    $requireRead: Boolean\n    $search: String\n    $startDate: String\n  )"}, {"type": "mutation", "name": "ClientPortalNotificationsMarkAsRead", "content": "{\n    clientPortalNotificationsMarkAsRead(_ids: $ids)\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/main/containers/notifications/List.tsx", "repo": "erxes_erxes-community"}, "arguments": "($ids: [String])"}, {"type": "query", "name": "pipelineLabels", "content": "{\n    pipelineLabels(pipelineId: $pipelineId) {\n      _id\n      name\n      colorCode\n    }\n  }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "client-portal/modules/publicTask/containers/Form.tsx", "repo": "erxes_erxes-community"}, "arguments": "($pipelineId: String!)"}, {"type": "mutation", "name": "widgetsSaveCustomerGetNotified", "content": "{\n            widgetsSaveCustomerGetNotified(\n              customerId: $customerId\n              visitorId: $visitorId\n              type: $type\n              value: $value\n            )\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "widgets/client/messenger/containers/AppContext.tsx", "repo": "erxes_erxes-community"}, "arguments": "(\n            $customerId: String\n            $visitorId: String\n            $type: String!\n            $value: String!\n          )"}, {"type": "mutation", "name": "widgetGetBotInitialMessage", "content": "{\n            widgetGetBotInitialMessage(integrationId: $integrationId)\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "widgets/client/messenger/containers/AppContext.tsx", "repo": "erxes_erxes-community"}, "arguments": "($integrationId: String)"}, {"type": "mutation", "name": "widgetsInsertMessage", "content": "{connection.queryVariables}\n              $message: String\n              $contentType: String\n              $conversationId: String\n              $attachments: [AttachmentInput]\n              $skillId: String\n            ) {\n\n            widgetsInsertMessage(\n              ${connection.queryParams}\n              contentType: $contentType\n              message: $message\n              conversationId: $conversationId\n              attachments: $attachments\n              skillId: $skillId\n            ) {\n              ${graphqlTypes.messageFields}\n            }\n          }", "metadata": {"commit_hash": "7d090233da0024735744636fe5e2d713e59e9b2f", "file": "widgets/client/messenger/containers/AppContext.tsx", "repo": "erxes_erxes-community"}, "arguments": "(\n              $"}, {"type": "mutation", "name": "DeleteProduct", "content": "{\n  deleteProduct(id: $deleteProductId) {\n    id\n    name\n    description\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}, "arguments": "($deleteProductId: ID!)"}, {"type": "mutation", "name": "Login", "content": "{\n  login(input: $input) {\n    id\n    firstName\n    lastName\n    email\n    role\n    token\n    store {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}, "arguments": "($input: LoginInput)"}, {"type": "query", "name": "GetAllCarts", "content": "{\n  getAllCarts {\n    id\n    userId {\n      firstName\n      lastName\n    }\n    orderIds {\n      id\n      userId {\n        id\n        lastName\n      }\n      productId {\n        id\n        name\n        price\n        image\n        uuid\n      }\n      quantity\n    }\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "query", "name": "GetAllProducts", "content": "{\n  getAllProducts {\n    id\n    name\n    description\n    image\n    price\n    uuid\n    storeId {\n      options {\n        primaryColor\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "query", "name": "GetAllBrands", "content": "{\n  getAllBrands {\n    id\n    name\n    description\n    image\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}}, {"type": "query", "name": "GetProductByUuid", "content": "{\n  getProductByUuid(uuid: $uuid) {\n    id\n    name\n    description\n    image\n    price\n    storeId {\n      id\n      name\n      address\n      productIds {\n        id\n        name\n        description\n        image\n        price\n        uuid\n      }\n      options {\n        primaryColor\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}, "arguments": "($uuid: String!)"}, {"type": "query", "name": "GetStoreById", "content": "{\n  getStoreById(id: $getStoreByIdId) {\n    id\n    name\n    phone\n    image\n    description\n    userId {\n      id\n      firstName\n      lastName\n    }\n    options {\n      id\n      slider\n      bgColor\n      primaryColor\n      whatsapp\n      ourBrands\n      bestProducts\n      slider_image\n      popup\n      popupImage\n    }\n    productIds {\n      id\n      name\n      description\n      image\n      price\n      uuid\n      categoryIds {\n        id\n        name\n        description\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "f857db18ead66f4807308048e20ede6d6467174f", "file": "graphql/generated/graphql.tsx", "repo": "imane-0208_Megastore_front"}, "arguments": "($getStoreByIdId: ID!)"}, {"type": "query", "name": "FormsMetrics", "content": "{\n\t\tform(\n\t\t\tassetId: $assetId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tchannelId: $channelId\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tsubmissionsMetric {\n\t\t\t\t...browserFragment\n\t\t\t\t...deviceFragment\n\n\t\t\t\tpreviousValue\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n\n\t${BROWSER_FRAGMENT}\n\t${DEVICE_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/assets/form/hocs/DevicesCard.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$assetId: String!\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)"}, {"type": "query", "name": "DXPEntitiesList", "content": "{\n\t\t\t${entityName}(\n\t\t\t\tchannelId: $channelId\n\t\t\t\tkeywords: $keywords\n\t\t\t\tsize: $size\n\t\t\t\tsort: $sort\n\t\t\t\tstart: $start\n\t\t\t) {\n\t\t\t\tdxpEntities {\n\t\t\t\t\tdataSourceName\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\ttotal\n\t\t\t}\n\t\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/segment/segment-editor/dynamic/queries/DXPEntitiesQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t\t$channelId: String\n\t\t\t$keywords: String\n\t\t\t$size: Int!\n\t\t\t$sort: Sort!\n\t\t\t$start: Int!\n\t\t)"}, {"type": "query", "name": "RecommendationPageAssets", "content": "{\n\t\tpageAssets(\n\t\t\tkeywords: $keywords\n\t\t\tpropertyFilters: $propertyFilters\n\t\t\tsize: $size\n\t\t\tsort: $sort\n\t\t\tstart: $start\n\t\t) {\n\t\t\tpageAssets {\n\t\t\t\tcanonicalUrl\n\t\t\t\tdescription\n\t\t\t\tkeywords {\n\t\t\t\t\ttype\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tid\n\t\t\t\ttitle\n\t\t\t\turl\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationPageAssetsQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$keywords: String\n\t\t$propertyFilters: [PropertyFilter]\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t\t$start: Int!\n\t)"}, {"type": "query", "name": "RecommendationActivities", "content": "{\n\t\tactivities(\n\t\t\tapplicationId: $applicationId\n\t\t\teventContextPropertyFilters: $eventContextPropertyFilters\n\t\t\teventId: $eventId\n\t\t\trangeKey: $rangeKey\n\t\t\tsize: $size\n\t\t\tstart: $start\n\t\t) {\n\t\t\tactivities {\n\t\t\t\tapplicationId\n\t\t\t\teventContext\n\t\t\t\teventId\n\t\t\t\teventProperties\n\t\t\t\townerId\n\t\t\t\tstartTime\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationActivitiesQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$applicationId: String!\n\t\t$eventContextPropertyFilters: [PropertyFilter]\n\t\t$eventId: String!\n\t\t$rangeKey: Int!\n\t\t$size: Int!\n\t\t$start: Int!\n\t)"}, {"type": "query", "name": "RecommendationList", "content": "{\n\t\tjobs(keywords: $keywords, size: $size, sort: $sort, start: $start) {\n\t\t\tjobs {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\trunDataPeriod\n\t\t\t\trunDate\n\t\t\t\trunFrequency\n\t\t\t\tstatus\n\t\t\t\ttype\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationListQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$keywords: String\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t\t$start: Int!\n\t)"}, {"type": "mutation", "name": "RecommendationDeleteMutation", "content": "{\n\t\tdeleteJobs(jobIds: $jobIds)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationMutation.js", "repo": "samuelkong_liferay-portal"}, "arguments": "($jobIds: [String]!)"}, {"type": "mutation", "name": "RecommendationUpdateMutation", "content": "{\n\t\tupdateJob(\n\t\t\tjobId: $jobId\n\t\t\tname: $name\n\t\t\tparameters: $parameters\n\t\t\trunDataPeriod: $runDataPeriod\n\t\t\trunFrequency: $runFrequency\n\t\t\trunNow: $runNow\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tparameters {\n\t\t\t\tname\n\t\t\t\tvalue\n\t\t\t}\n\t\t\tstatus\n\t\t\trunDataPeriod\n\t\t\trunDate\n\t\t\trunFrequency\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/recommendations/queries/RecommendationMutation.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$jobId: String!\n\t\t$name: String!\n\t\t$parameters: [JobParameterInput]\n\t\t$runDataPeriod: JobRunDataPeriod\n\t\t$runFrequency: JobRunFrequency\n\t\t$runNow: Boolean\n\t)"}, {"type": "mutation", "name": "Preference", "content": "{\n\t\tpreference(key: $key, value: $value) {\n\t\t\tkey\n\t\t\tvalue\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/data-privacy/queries/PreferenceMutation.js", "repo": "samuelkong_liferay-portal"}, "arguments": "($key: String!, $value: String!)"}, {"type": "query", "name": "Preference", "content": "{\n\t\tpreference(key: $key) {\n\t\t\tkey\n\t\t\tvalue\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/data-privacy/queries/PreferenceQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "($key: String!)"}, {"type": "query", "name": "SuppressedUsersList", "content": "{\n\t\tsuppressions(\n\t\t\tkeywords: $keywords\n\t\t\tsize: $size\n\t\t\tsort: $sort\n\t\t\tstart: $start\n\t\t) {\n\t\t\tsuppressions {\n\t\t\t\tcreateDate\n\t\t\t\tdataControlTaskBatchId\n\t\t\t\tdataControlTaskCreateDate\n\t\t\t\tdataControlTaskStatus\n\t\t\t\temailAddress\n\t\t\t\tid\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/data-privacy/queries/SuppressedUsersListQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$keywords: String\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t\t$start: Int!\n\t)"}, {"type": "mutation", "name": "DataControlRequest", "content": "{\n\t\tdataControlTasks(\n\t\t\temailAddresses: $emailAddresses\n\t\t\tfileName: $fileName\n\t\t\townerId: $ownerId\n\t\t\ttypes: $types\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/data-privacy/queries/DataControlRequestMutation.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$emailAddresses: [String]\n\t\t$fileName: String\n\t\t$ownerId: String!\n\t\t$types: [DataControlTaskType]!\n\t)"}, {"type": "query", "name": "Interests", "content": "{\n\t\t${queryName}(\n\t\t\tactive: $active\n\t\t\tchannelId: $channelId\n\t\t\t${INTERESTS_ID_MAP[queryName]}: $id\n\t\t\tkeywords: $keywords\n\t\t\tsize: $size\n\t\t\tsort: $sort\n\t\t\tstart: $start\n\t\t) {\n\t\t\t...compositionFragment\n\t\t}\n\t}\n\n\t${COMPOSITION_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/contacts/queries/InterestsQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$active: Boolean!\n\t\t$channelId: String\n\t\t$id: String!\n\t\t$keywords: String\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t\t$start: Int!\n\t)"}, {"type": "query", "name": "KnownIndividualsListAssetQuery", "content": "{\n\t\t\t${queryName}(\n\t\t\t\tassetId: $assetId\n\t\t\t\tcanonicalUrl: $touchpoint\n\t\t\t\tchannelId: $channelId\n\t\t\t\tcountry: $location\n\t\t\t\tdeviceType: $devices\n\t\t\t\trangeEnd: $rangeEnd\n\t\t\t\trangeKey: $rangeKey\n\t\t\t\trangeStart: $rangeStart\n\t\t\t\ttitle: $title\n\t\t\t) {\n\t\t\t\t${metricName} {\n\t\t\t\t\t...individualsFragment\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t${INDIVIDUALS_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/knownIndividualsListAssetQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t\t$assetId: String!\n\t\t\t$channelId: String\n\t\t\t$devices: String\n\t\t\t$keywords: String\n\t\t\t$location: String\n\t\t\t$rangeEnd: String\n\t\t\t$rangeKey: Int\n\t\t\t$rangeStart: String\n\t\t\t$size: Int!\n\t\t\t$start: Int!\n\t\t\t$title: String\n\t\t\t$touchpoint: String\n\t\t)"}, {"type": "query", "name": "DocumentsAndMediaList", "content": "{\n\t\tdocuments(\n\t\t\tchannelId: $channelId\n\t\t\tkeywords: $keywords\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\tsize: $size\n\t\t\tsort: $sort\n\t\t\tstart: $start\n\t\t) {\n\t\t\tassetMetrics {\n\t\t\t\t... on DocumentMetric {\n\t\t\t\t\tassetId\n\t\t\t\t\tassetTitle\n\t\t\t\t\tcommentsMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tdownloadsMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tpreviewsMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tratingsMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\turls\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/DocumentsAndMediaListQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String\n\t\t$keywords: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t\t$start: Int!\n\t)"}, {"type": "query", "name": "AssetsQuery", "content": "{\n\t\tassets(\n\t\t\tchannelId: $channelId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t) {\n\t\t\tassetId\n\t\t\tassetTitle\n\t\t\tassetType\n\t\t\tdefaultMetric {\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/AssetsQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$touchpoint: String\n\t)"}, {"type": "mutation", "name": "CustomAssetsReportMutation", "content": "{\n\t\tdashboard(\n\t\t\tdashboardId: $dashboardId\n\t\t\tdefinition: $definition\n\t\t\tmodifiedByUserName: $modifiedByUserName\n\t\t\tmodifiedByUserId: $modifiedByUserId\n\t\t) {\n\t\t\tassetId\n\t\t\tassetTitle\n\t\t\tdefinition\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/CustomAssetsReportMutation.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$dashboardId: String!\n\t\t$definition: String!\n\t\t$modifiedByUserName: String!\n\t\t$modifiedByUserId: String!\n\t)"}, {"type": "query", "name": "GlobalFilterTouchpointQuery", "content": "{\n\t\t\t${queryName}(\n\t\t\t\tchannelId: $channelId\n\t\t\t\tcanonicalUrl: $touchpoint\n\t\t\t\trangeKey: $rangeKey\n\t\t\t\ttitle: $title\n\t\t\t) {\n\t\t\t\t${metricName} {\n\t\t\t\t\t...deviceFragment\n\t\t\t\t\t...geolocationFragment\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t${DEVICE_FRAGMENT}\n\t\t${GEOLOCATION_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/globalFilterTouchpointQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t\t$channelId: String\n\t\t\t$touchpoint: String\n\t\t\t$rangeKey: Int!\n\t\t\t$title: String\n\t\t)"}, {"type": "query", "name": "BlogsMetrics", "content": "{\n\t\tblog(\n\t\t\tassetId: $assetId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tchannelId: $channelId\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tassetId\n\t\t\tassetTitle\n\t\t\turls\n\t\t\tcommentsMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\tratingsMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\treadingTimeMetric {\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t\tviewsMetric {\n\t\t\t\t...browserFragment\n\t\t\t\t...deviceFragment\n\t\t\t\t...geolocationFragment\n\t\t\t\t...metricFragment\n\n\t\t\t\tpreviousValue\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n\n\t${BROWSER_FRAGMENT}\n\t${DEVICE_FRAGMENT}\n\t${GEOLOCATION_FRAGMENT}\n\t${METRIC_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/BlogMetricsQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$assetId: String!\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)"}, {"type": "query", "name": "IndividualMetrics", "content": "{\n\t\tindividualMetric(\n\t\t\tchannelId: $channelId\n\t\t\tinterval: $interval\n\t\t\trangeKey: $rangeKey\n\t\t) {\n\t\t\tanonymousIndividualsMetric {\n\t\t\t\t...trendFragment\n\t\t\t}\n\t\t\tknownIndividualsMetric {\n\t\t\t\t...trendFragment\n\t\t\t}\n\t\t\ttotalIndividualsMetric {\n\t\t\t\t...trendFragment\n\t\t\t}\n\t\t}\n\t}\n\n\tfragment trendFragment on Metric {\n\t\tvalue\n\t\ttrend {\n\t\t\tpercentage\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/IndividualMetricsQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String!\n\t\t$interval: String!\n\t\t$rangeKey: Int!\n\t)"}, {"type": "query", "name": "CohortHeatMap", "content": "{\n\t\tcohort(channelId: $channelId, interval: $interval) {\n\t\t\tanonymousCohortHeatMapMetrics {\n\t\t\t\tretention\n\t\t\t\trowKey\n\t\t\t\trowDimension\n\t\t\t\tcolDimension\n\t\t\t\tvalue\n\t\t\t}\n\t\t\tknownCohortHeatMapMetrics {\n\t\t\t\tretention\n\t\t\t\trowKey\n\t\t\t\trowDimension\n\t\t\t\tcolDimension\n\t\t\t\tvalue\n\t\t\t}\n\t\t\tvisitorsCohortHeatMapMetrics {\n\t\t\t\tretention\n\t\t\t\trowKey\n\t\t\t\trowDimension\n\t\t\t\tcolDimension\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/CohortQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "($channelId: String, $interval: String!)"}, {"type": "query", "name": "BlogsList", "content": "{\n\t\tblogs(\n\t\t\tchannelId: $channelId\n\t\t\tkeywords: $keywords\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\tsize: $size\n\t\t\tsort: $sort\n\t\t\tstart: $start\n\t\t) {\n\t\t\tassetMetrics {\n\t\t\t\t... on BlogMetric {\n\t\t\t\t\tassetId\n\t\t\t\t\tassetTitle\n\t\t\t\t\tcommentsMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tratingsMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\treadingTimeMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\turls\n\t\t\t\t\tviewsMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/BlogsListQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String\n\t\t$keywords: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t\t$start: Int!\n\t)"}, {"type": "query", "name": "FormsList", "content": "{\n\t\tforms(\n\t\t\tchannelId: $channelId\n\t\t\tkeywords: $keywords\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\tsize: $size\n\t\t\tsort: $sort\n\t\t\tstart: $start\n\t\t) {\n\t\t\tassetMetrics {\n\t\t\t\t... on FormMetric {\n\t\t\t\t\tabandonmentsMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tassetId\n\t\t\t\t\tassetTitle\n\t\t\t\t\tcompletionTimeMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsubmissionsMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\turls\n\t\t\t\t\tviewsMetric {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/FormsListQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String\n\t\t$keywords: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t\t$start: Int!\n\t)"}, {"type": "query", "name": "WebContentMetrics", "content": "{\n\t\tjournal(\n\t\t\tassetId: $assetId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tchannelId: $channelId\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tassetId\n\t\t\tassetTitle\n\t\t\turls\n\t\t\tviewsMetric {\n\t\t\t\t...audienceReportFragment\n\t\t\t\t...browserFragment\n\t\t\t\t...deviceFragment\n\t\t\t\t...geolocationFragment\n\t\t\t\t...metricFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${AUDIENCE_REPORT_FRAGMENT}\n\t${BROWSER_FRAGMENT}\n\t${DEVICE_FRAGMENT}\n\t${GEOLOCATION_FRAGMENT}\n\t${METRIC_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/WebContentMetricsQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$assetId: String!\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)"}, {"type": "mutation", "name": "ExperimentMutation", "content": "{\n\t\texperiment(\n\t\t\texperimentId: $experimentId\n\t\t\texperimentSettings: $experimentSettings\n\t\t\tpublishedDXPVariantId: $publishedDXPVariantId\n\t\t\tstatus: $status\n\t\t) {\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/experiments/queries/ExperimentMutation.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$experimentId: String!\n\t\t$experimentSettings: ExperimentSettings\n\t\t$publishedDXPVariantId: String\n\t\t$status: String!\n\t)"}, {"type": "mutation", "name": "ExperimentDeleteMutation", "content": "{\n\t\tdeleteExperiment(experimentId: $experimentId)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/experiments/queries/ExperimentMutation.js", "repo": "samuelkong_liferay-portal"}, "arguments": "($experimentId: String!)"}, {"type": "query", "name": "Experiment", "content": "{\n\t\texperiment(experimentId: $experimentId) {\n\t\t\tbestVariant @client\n\t\t\tdescription\n\t\t\tdxpSegmentName\n\t\t\tdxpExperienceName\n\t\t\tdxpVariants {\n\t\t\t\tchanges\n\t\t\t\tcontrol\n\t\t\t\tdxpVariantId\n\t\t\t\tdxpVariantName\n\t\t\t\ttrafficSplit\n\t\t\t\tuniqueVisitors\n\t\t\t}\n\t\t\tfinishedDate\n\t\t\tgoal {\n\t\t\t\tmetric\n\t\t\t}\n\t\t\tid\n\t\t\tmetrics {\n\t\t\t\tcompletion\n\t\t\t\telapsedDays\n\t\t\t\testimatedDaysLeft\n\t\t\t\tvariantMetrics {\n\t\t\t\t\tconfidenceInterval\n\t\t\t\t\tdxpVariantId\n\t\t\t\t\timprovement\n\t\t\t\t\tmedian\n\t\t\t\t\tprobabilityToWin\n\t\t\t\t}\n\t\t\t}\n\t\t\tmodifiedDate\n\t\t\tname\n\t\t\tpageURL\n\t\t\tpublishedDXPVariantId\n\t\t\tsessions\n\t\t\tstartedDate\n\t\t\tstatus\n\t\t\ttype\n\t\t\twinnerDXPVariantId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/experiments/queries/ExperimentQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "($experimentId: String!)"}, {"type": "query", "name": "ExperimentDraft", "content": "{\n\t\texperiment(experimentId: $experimentId) {\n\t\t\tdescription\n\t\t\tdxpSegmentName\n\t\t\tdxpExperienceName\n\t\t\tdxpVariants {\n\t\t\t\tcontrol\n\t\t\t\tdxpVariantName\n\t\t\t\tdxpVariantId\n\t\t\t\ttrafficSplit\n\t\t\t}\n\t\t\tgoal {\n\t\t\t\tmetric\n\t\t\t\ttarget\n\t\t\t}\n\t\t\tid\n\t\t\tpageURL\n\t\t\tstatus\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/experiments/queries/ExperimentQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "($experimentId: String!)"}, {"type": "query", "name": "Experiments", "content": "{\n\t\texperiments(\n\t\t\tchannelId: $channelId\n\t\t\tsize: $size\n\t\t\tstart: $start\n\t\t\tsort: $sort\n\t\t\tkeywords: $keywords\n\t\t) {\n\t\t\texperiments {\n\t\t\t\tcreateDate\n\t\t\t\tdescription\n\t\t\t\tid\n\t\t\t\tmodifiedDate\n\t\t\t\tname\n\t\t\t\tpageURL\n\t\t\t\tstatus\n\t\t\t\ttype\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/experiments/queries/ExperimentQuery.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String\n\t\t$size: Int!\n\t\t$start: Int!\n\t\t$keywords: String\n\t\t$sort: Sort!\n\t)"}, {"type": "query", "name": "TouchpointDevicesQuery", "content": "{\n\t\tpage(\n\t\t\tchannelId: $channelId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tviewsMetric {\n\t\t\t\t...browserFragment\n\t\t\t\t...deviceFragment\n\n\t\t\t\tpreviousValue\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n\n\t${BROWSER_FRAGMENT}\n\t${DEVICE_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/sites/touchpoints/hocs/DevicesCard.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)"}, {"type": "mutation", "name": "updateAccountSubscriptionGroup", "content": "{\n\t\tupdateAccountSubscriptionGroup(\n\t\t\taccountSubscriptionGroupId: $accountSubscriptionGroupId\n\t\t\tinput: $AccountSubscriptionGroup\n\t\t)\n\t\t\t@rest(\n\t\t\t\tmethod: \"PUT\"\n\t\t\t\ttype: \"C_AccountSubscriptionGroup\"\n\t\t\t\tpath: \"/c/accountsubscriptiongroups/{args.accountSubscriptionGroupId}\"\n\t\t\t) {\n\t\t\taccountSubscriptionGroupId\n\t\t\taccountKey\n\t\t\tactivationStatus\n\t\t\texternalReferenceCode\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/account-subscription-groups/queries/useUpdateAccountSubscriptionGroup.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$accountSubscriptionGroupId: Long!\n\t\t$AccountSubscriptionGroup: InputC_AccountSubscriptionGroup!\n\t)"}, {"type": "query", "name": "getAccountSubscriptionUsage", "content": "{\n\t\tgetAccountSubscriptionUsage(\n\t\t\taccountKey: $accountKey\n\t\t\tproductKey: $productKey\n\t\t)\n\t\t\t@rest(\n\t\t\t\ttype: \"R_AccountSubscriptionUsage\"\n\t\t\t\tpath: \"/accounts/{args.accountKey}/product/{args.productKey}/usage\"\n\t\t\t\tmethod: \"GET\"\n\t\t\t) {\n\t\t\tannualSubscriptions {\n\t\t\t\tyear\n\t\t\t\tmaxConcurrentConsumption\n\t\t\t\tmaxConcurrentQuantity\n\t\t\t}\n\t\t\tcurrentConsumption\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/account-subscription-usage/queries/useGetAccountSubscriptionUsage.js", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$accountKey: String!\n\t\t$productKey: String!\n\t)"}, {"type": "query", "name": "DocumentsAndMediaMetrics", "content": "{\n\t\tdocument(\n\t\t\tassetId: $assetId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tchannelId: $channelId\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\tassetId\n\t\t\tassetTitle\n\t\t\tdownloadsMetric {\n\t\t\t\t...browserFragment\n\t\t\t\t...deviceFragment\n\n\t\t\t\tpreviousValue\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n\n\t${BROWSER_FRAGMENT}\n\t${DEVICE_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/assets/document-and-media/hocs/DevicesCard.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$assetId: String!\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)"}, {"type": "query", "name": "BlockedCustomEventDefinitions", "content": "{\n\t\tblockedCustomEventDefinitions(\n\t\t\tkeyword: $keyword\n\t\t\tpage: $page\n\t\t\tsize: $size\n\t\t\tsort: $sort\n\t\t) {\n\t\t\tblockedCustomEventDefinitions {\n\t\t\t\thidden\n\t\t\t\tid\n\t\t\t\tlastSeenDate\n\t\t\t\tlastSeenURL\n\t\t\t\tname\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/settings/definitions/events/queries/BlockedCustomEventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$keyword: String\n\t\t$page: Int!\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t)"}, {"type": "query", "name": "UserSession", "content": "{\n\t\teventsByUserSessions(\n\t\t\tchannelId: $channelId\n\t\t\tentityId: $entityId\n\t\t\tentityType: $entityType\n\t\t\tkeywords: $keywords\n\t\t\tpage: $page\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\tsize: $size\n\t\t) {\n\t\t\tuserSessions {\n\t\t\t\t... on UserSession {\n\t\t\t\t\tbrowserName\n\t\t\t\t\tcompleteDate\n\t\t\t\t\tcontentLanguageId\n\t\t\t\t\tcreateDate\n\t\t\t\t\tdevicePixelRatio\n\t\t\t\t\tdeviceType\n\t\t\t\t\tevents {\n\t\t\t\t\t\tcanonicalUrl\n\t\t\t\t\t\tcreateDate\n\t\t\t\t\t\tname\n\t\t\t\t\t\tpageDescription\n\t\t\t\t\t\tpageKeywords\n\t\t\t\t\t\tpageTitle\n\t\t\t\t\t\treferrer\n\t\t\t\t\t\turl\n\t\t\t\t\t}\n\t\t\t\t\tlanguageId\n\t\t\t\t\tscreenHeight\n\t\t\t\t\tscreenWidth\n\t\t\t\t\ttimezoneOffset\n\t\t\t\t\tuserAgent\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalEvents\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/queries/UserSessionQuery.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String!\n\t\t$entityId: String!\n\t\t$entityType: EntityType!\n\t\t$keywords: String\n\t\t$page: Int!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$size: Int!\n\t)"}, {"type": "query", "name": "$", "content": "{name}AudienceReportQuery(\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t) {\n\t\t${name}(\n\t\t\tchannelId: $channelId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\t${metricName} {\n\t\t\t\t...audienceReportFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${AudienceReportFragment}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/components/audience-report/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "$", "content": "{queryMetricName(queryName)}(\n\t\t$assetId: String!\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t) {\n\t\t${queryName}(\n\t\t\tassetId: $assetId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tchannelId: $channelId\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\t${metricName} {\n\t\t\t\t...HistogramFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${METRIC_HISTOGRAM_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/components/metric-card/queries.ts", "repo": "samuelkong_liferay-portal"}}, {"type": "query", "name": "SitesMetricTabsQuery", "content": "{\n\t\tsite(\n\t\t\tchannelId: $channelId\n\t\t\tinterval: $interval\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t) {\n\t\t\tbounceRateMetric {\n\t\t\t\t...TabsFragment\n\t\t\t}\n\t\t\tsessionDurationMetric {\n\t\t\t\t...TabsFragment\n\t\t\t}\n\t\t\tsessionsPerVisitorMetric {\n\t\t\t\t...TabsFragment\n\t\t\t}\n\t\t\tvisitorsMetric {\n\t\t\t\t...TabsFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${METRIC_TABS_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/components/metric-card/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String\n\t\t$interval: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t)"}, {"type": "query", "name": "PageMetricQuery", "content": "{\n\t\tpage(\n\t\t\tchannelId: $channelId\n\t\t\tcanonicalUrl: $touchpoint\n\t\t\tcountry: $location\n\t\t\tdeviceType: $devices\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\ttitle: $title\n\t\t) {\n\t\t\t${metricName} {\n\t\t\t\t...HistogramFragment\n\t\t\t}\n\t\t}\n\t}\n\n\t${METRIC_HISTOGRAM_FRAGMENT}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/shared/components/metric-card/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String\n\t\t$devices: String\n\t\t$location: String\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$title: String\n\t\t$touchpoint: String\n\t)"}, {"type": "query", "name": "CommerceAverageOrderValue", "content": "{\n\t\torderAverageCurrencyValues(\n\t\t\tchannelId: $channelId\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t) {\n\t\t\tcurrencyCode\n\t\t\ttrend {\n\t\t\t\ttrendClassification\n\t\t\t\tpercentage\n\t\t\t}\n\t\t\tvalue\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/commerce/queries/AverageOrderValueQuery.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t)"}, {"type": "query", "name": "EventAnalysisList", "content": "{\n\t\teventAnalyses(\n\t\t\tchannelId: $channelId\n\t\t\tkeywords: $keywords\n\t\t\tpage: $page\n\t\t\tsize: $size\n\t\t\tsort: $sort\n\t\t) {\n\t\t\teventAnalyses {\n\t\t\t\t... on EventAnalysis {\n\t\t\t\t\tdateModified: modifiedDate\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tuserName: createdByUserName\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventAnalysisQuery.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$channelId: String!\n\t\t$keywords: String\n\t\t$page: Int!\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t)"}, {"type": "mutation", "name": "UpdateEventAnalysis", "content": "{\n\t\tupdateEventAnalysis(\n\t\t\tanalysisType: $analysisType\n\t\t\tchannelId: $channelId\n\t\t\tcompareToPrevious: $compareToPrevious\n\t\t\teventAnalysisBreakdowns: $eventAnalysisBreakdowns\n\t\t\teventAnalysisFilters: $eventAnalysisFilters\n\t\t\teventAnalysisId: $eventAnalysisId\n\t\t\teventDefinitionId: $eventDefinitionId\n\t\t\tname: $name\n\t\t\trangeEnd: $rangeEnd\n\t\t\trangeKey: $rangeKey\n\t\t\trangeStart: $rangeStart\n\t\t\tuserId: $userId\n\t\t\tuserName: $userName\n\t\t) {\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventAnalysisQuery.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$analysisType: AnalysisType!\n\t\t$channelId: String!\n\t\t$compareToPrevious: Boolean!\n\t\t$eventAnalysisBreakdowns: [EventAnalysisBreakdownInput]\n\t\t$eventAnalysisFilters: [EventAnalysisFilterInput]\n\t\t$eventAnalysisId: String!\n\t\t$eventDefinitionId: String!\n\t\t$name: String!\n\t\t$rangeEnd: String\n\t\t$rangeKey: Int\n\t\t$rangeStart: String\n\t\t$userId: String!\n\t\t$userName: String!\n\t)"}, {"type": "query", "name": "EventDefinitions", "content": "{\n\t\teventDefinitions(\n\t\t\teventType: $eventType\n\t\t\thidden: $hidden\n\t\t\tkeyword: $keyword\n\t\t\tpage: $page\n\t\t\tsize: $size\n\t\t\tsort: $sort\n\t\t) {\n\t\t\teventDefinitions {\n\t\t\t\tdescription\n\t\t\t\tdisplayName\n\t\t\t\thidden\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\ttype\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$eventType: EventDefinitionType!\n\t\t$hidden: Boolean\n\t\t$keyword: String\n\t\t$page: Int!\n\t\t$size: Int!\n\t\t$sort: Sort!\n\t)"}, {"type": "mutation", "name": "UnhideEventDefinitions", "content": "{\n\t\tunhideEventDefinitions(eventDefinitionIds: $eventDefinitionIds) {\n\t\t\tdescription\n\t\t\tdisplayName\n\t\t\thidden\n\t\t\tid\n\t\t\tname\n\t\t\ttype\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventDefinitionsQuery.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "($eventDefinitionIds: [String]!)"}, {"type": "mutation", "name": "UnblockCustomEventDefinitions", "content": "{\n\t\tunblockCustomEventDefinitions(eventDefinitionIds: $eventDefinitionIds)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/CustomEventDefinitions.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "($eventDefinitionIds: [String]!)"}, {"type": "query", "name": "EventAttributeDefinition", "content": "{\n\t\teventAttributeDefinition(displayName: $displayName, id: $id) {\n\t\t\tdataType\n\t\t\tdescription\n\t\t\tdisplayName\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-faro/osb-faro-web/src/main/js/event-analysis/queries/EventAttributeDefinitionQuery.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "($displayName: String, $id: String)"}, {"type": "query", "name": "getDXPCloudPageInfo", "content": "{\n\t\tc {\n\t\t\taccountSubscriptions(filter: $accountSubscriptionsFilter) {\n\t\t\t\titems {\n\t\t\t\t\taccountKey\n\t\t\t\t\texternalReferenceCode\n\t\t\t\t\thasDisasterDataCenterRegion\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\ttotalCount\n\t\t\t}\n\n\t\t\tdXPCDataCenterRegions(sort: \"name:asc\") {\n\t\t\t\titems {\n\t\t\t\t\tdxpcDataCenterRegionId\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\ttotalCount\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "($accountSubscriptionsFilter: String)"}, {"type": "query", "name": "getCommerceOrderItems", "content": "{\n\t\torderItems(filter: $filter, page: $page, pageSize: $pageSize) {\n\t\t\titems {\n\t\t\t\texternalReferenceCode\n\t\t\t\tquantity\n\t\t\t\tcustomFields {\n\t\t\t\t\tname\n\t\t\t\t\tcustomValue {\n\t\t\t\t\t\tdata\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toptions\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$filter: String\n\t\t$page: Int = 1\n\t\t$pageSize: Int = 20\n\t)"}, {"type": "mutation", "name": "patchOrderItemByExternalReferenceCode", "content": "{\n\t\tpatchOrderItemByExternalReferenceCode(\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t\torderItem: $orderItem\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$externalReferenceCode: String\n\t\t$orderItem: InputOrderItem\n\t)"}, {"type": "query", "name": "getBannedEmailDomains", "content": "{\n\t\tc {\n\t\t\tbannedEmailDomains(\n\t\t\t\taggregation: $aggregation\n\t\t\t\tfilter: $filter\n\t\t\t\tpage: $page\n\t\t\t\tpageSize: $pageSize\n\t\t\t\tsearch: $search\n\t\t\t\tsort: $sort\n\t\t\t) {\n\t\t\t\titems {\n\t\t\t\t\tbannedEmailDomainId\n\t\t\t\t\tdomain\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$aggregation: [String]\n\t\t$filter: String\n\t\t$page: Int = 1\n\t\t$pageSize: Int = 20\n\t\t$search: String\n\t\t$sort: String\n\t)"}, {"type": "mutation", "name": "addDXPCloudEnvironment", "content": "{\n\t\tcreateDXPCloudEnvironment(input: $DXPCloudEnvironment)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_DXPCloudEnvironment\"\n\t\t\t\tpath: \"/c/dxpcloudenvironments/\"\n\t\t\t) {\n\t\t\taccountKey\n\t\t\tdataCenterRegion\n\t\t\tdisasterDataCenterRegion\n\t\t\tid\n\t\t\tprojectId\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$DXPCloudEnvironment: InputC_DXPCloudEnvironment!\n\t)"}, {"type": "query", "name": "getAnalyticsCloudWorkspace", "content": "{\n\t\tc {\n\t\t\tanalyticsCloudWorkspaces(filter: $filter) {\n\t\t\t\titems {\n\t\t\t\t\tanalyticsCloudWorkspaceId\n\t\t\t\t\tworkspaceGroupId\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "($filter: String)"}, {"type": "mutation", "name": "addTeamMembersInvitation", "content": "{\n\t\tcreateTeamMembersInvitation(input: $TeamMembersInvitation)\n\t\t\t@rest(\n\t\t\t\tmethod: \"POST\"\n\t\t\t\ttype: \"C_TeamMembersInvitation\"\n\t\t\t\tpath: \"/c/teammembersinvitations/batch\"\n\t\t\t) {\n\t\t\temail\n\t\t\trole\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$TeamMembersInvitation: [InputC_TeamMembersInvitation]!\n\t)"}, {"type": "mutation", "name": "associateUserAccountWithAccount", "content": "{\n\t\tcreateAccountUserAccountByExternalReferenceCodeByEmailAddress(\n\t\t\texternalReferenceCode: $accountKey\n\t\t\temailAddress: $emailAddress\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$emailAddress: String!\n\t\t$accountKey: String!\n\t)"}, {"type": "mutation", "name": "patchUserAccount", "content": "{\n\t\tpatchUserAccount(\n\t\t\tuserAccountId: $userAccountId\n\t\t\tuserAccount: $userAccount\n\t\t) {\n\t\t\talternateName\n\t\t\tfamilyName\n\t\t\tgivenName\n\t\t\tid\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$userAccountId: Long!\n\t\t$userAccount: InputUserAccount!\n\t)"}, {"type": "query", "name": "getListTypeDefinitions", "content": "{\n\t\tlistTypeDefinitions(filter: $filter) {\n\t\t\titems {\n\t\t\t\tlistTypeEntries {\n\t\t\t\t\tkey\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "($filter: String)"}, {"type": "mutation", "name": "deleteAccountUserAccountByExternalReferenceCodeByEmailAddress", "content": "{\n\t\tdeleteAccountUserAccountByExternalReferenceCodeByEmailAddress(\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $accountKey\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$emailAddress: String!\n\t\t$accountKey: String!\n\t)"}, {"type": "mutation", "name": "createNotificationQueueEntry", "content": "{\n\t\tcreateNotificationQueueEntry(\n\t\t\tnotificationQueueEntry: $notificationQueueEntry\n\t\t) {\n\t\t\tbody\n\t\t\tid\n\t\t\trecipients\n\t\t\tsubject\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/queries.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$notificationQueueEntry: InputNotificationQueueEntry!\n\t)"}, {"type": "mutation", "name": "putAccountSubscriptionGroups", "content": "{\n\t\tc {\n\t\t\tupdateAccountSubscriptionGroup(\n\t\t\t\taccountSubscriptionGroupId: $id\n\t\t\t\tAccountSubscriptionGroup: $accountSubscriptionGroup\n\t\t\t) {\n\t\t\t\taccountSubscriptionGroupId\n\t\t\t\taccountKey\n\t\t\t\tactivationStatus\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/account-subscription-groups/queries/putAccountSubscriptionGroups.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$id: Long!\n\t\t$accountSubscriptionGroup: InputC_AccountSubscriptionGroup!\n\t)"}, {"type": "query", "name": "getLiferayExperienceCloudEnvironments", "content": "{\n\t\tc {\n\t\t\tliferayExperienceCloudEnvironments(\n\t\t\t\tfilter: $filter\n\t\t\t\tpage: $page\n\t\t\t\tpageSize: $pageSize\n\t\t\t) {\n\t\t\t\titems {\n\t\t\t\t\tliferayExperienceCloudEnvironmentId\n\t\t\t\t\tprojectId\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/liferay-experience-cloud-environments/queries/useGetLiferayExperienceEnvironments.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$filter: String\n\t\t$page: Int = 1\n\t\t$pageSize: Int = 20\n\t)"}, {"type": "mutation", "name": "replaceAccountRoleByUserAccountEmailAddress", "content": "{\n\t\tdeleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress(\n\t\t\taccountRoleId: $currentAccountRoleId\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t)\n\t\tcreateAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress(\n\t\t\taccountRoleId: $newAccountRoleId\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/account-roles/mutations/useReplaceAccountRoleByUserAccountEmailAddress.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$currentAccountRoleId: Long!\n\t\t$emailAddress: String!\n\t\t$externalReferenceCode: String!\n\t\t$newAccountRoleId: Long!\n\t)"}, {"type": "mutation", "name": "deleteUserAccountByEmailAddress", "content": "{\n\t\tdeleteAccountUserAccountByExternalReferenceCodeByEmailAddress(\n\t\t\temailAddress: $emailAddress\n\t\t\texternalReferenceCode: $externalReferenceCode\n\t\t)\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/services/liferay/graphql/user-accounts/mutations/useDeleteUserAccountByEmailAddress.ts", "repo": "samuelkong_liferay-portal"}, "arguments": "(\n\t\t$emailAddress: String!\n\t\t$externalReferenceCode: String!\n\t)"}, {"type": "query", "name": "getDXPCloudPageInfo", "content": "{\n\t\tc {\n\t\t\taccountSubscriptions(filter: $accountSubscriptionsFilter) {\n\t\t\t\titems {\n\t\t\t\t\taccountKey\n\t\t\t\t\texternalReferenceCode\n\t\t\t\t\thasDisasterDataCenterRegion\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\ttotalCount\n\t\t\t}\n\n\t\t\tdXPCDataCenterRegions(sort: \"name:asc\") {\n\t\t\t\titems {\n\t\t\t\t\tdxpcDataCenterRegionId\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\ttotalCount\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "7a743f9fe56f8b22bb40d2a0d3697c89ce73d21b", "file": "modules/dxp/apps/osb/osb-site-initializer/osb-site-initializer-customer-portal/extra/remote-app/src/common/containers/setup-forms/SetupDXPCloudForm/SetupDXPCloudForm.test.jsx", "repo": "samuelkong_liferay-portal"}, "arguments": "($accountSubscriptionsFilter: String)"}, {"type": "mutation", "name": "adminUpdatePost", "content": "{\n    adminUpdatePost(input: { title_: $title, id_: $id, body_: $body }) {\n      news {\n        updatedAt\n        title\n        thumbnail\n        status\n        slug\n        profileId\n        nodeId\n        intro\n        id\n        createdAt\n        body\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($title: String!, $id: UUID!, $body: String!)"}, {"type": "mutation", "name": "changeUserRole", "content": "{\n    changeUserRole(input: { userid_: $userId, role_: $role }) {\n      profile {\n        role\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($userId: UUID!, $role: UserRole!)"}, {"type": "mutation", "name": "companyAdminAddPremiumToGroup", "content": "{\n    companyAdminAddPremiumToGroup(\n      input: { groupId_: $groupId, premiumId_: $premiumId }\n    ) {\n      companyGroupPremium {\n        premiumId\n        companyGroupId\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($groupId: UUID!, $premiumId: UUID!)"}, {"type": "mutation", "name": "companyAdminRemoveMonthFromGroup", "content": "{\n    companyAdminRemoveMonthFromGroup(input: { monthId_: $monthId }) {\n      companyGroupMonth {\n        groupId\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($monthId: UUID!)"}, {"type": "mutation", "name": "instructorUpdateBio", "content": "{\n    instructorUpdateBio(input: { biography_: $bio }) {\n      instructor {\n        id\n        biography\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($bio: String!)"}, {"type": "mutation", "name": "registerAvatar", "content": "{\n    registerNewAvatar(input: { avatar_: $avatar }) {\n      profile {\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($avatar: String!)"}, {"type": "mutation", "name": "registerNewBanner", "content": "{\n    registerNewBanner(input: { banner_: $banner }) {\n      profile {\n        banner\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($banner: String!)"}, {"type": "mutation", "name": "registerNews", "content": "{\n    registerNews(\n      input: {\n        title_: $title\n        intro_: $paragraph\n        body_: $body\n        thumbnail_: $thumbnail\n        proContent_: $proContent\n        videoUrl_: $videoUrl\n      }\n    ) {\n      news {\n        id\n        body\n        createdAt\n        intro\n        nodeId\n        profileId\n        slug\n        thumbnail\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "(\n    $title: String!\n    $paragraph: String!\n    $body: String!\n    $thumbnail: String!\n    $proContent: String\n    $videoUrl: String\n  )"}, {"type": "mutation", "name": "registerProfile", "content": "{\n    __typename\n    registerProfile(\n      input: { username: $username, email: $email, pass: $password }\n    ) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "(\n    $username: String!\n    $email: String!\n    $password: String!\n  )"}, {"type": "mutation", "name": "registerSocial", "content": "{\n    registerSocial(\n      input: {\n        www_: $www\n        youtube_: $youtube\n        vimeo_: $vimeo\n        twitter_: $twitter\n        instagram_: $instagram\n        linkedin_: $linkedin\n        facebook_: $facebook\n        artstation_: $artstation\n      }\n    ) {\n      profileSocial {\n        linkedin\n        instagram\n        facebook\n        artstation\n        profileId\n        twitter\n        vimeo\n        www\n        youtube\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "(\n    $www: String\n    $youtube: String\n    $vimeo: String\n    $twitter: String\n    $instagram: String\n    $linkedin: String\n    $facebook: String\n    $artstation: String\n  )"}, {"type": "mutation", "name": "requestProfeedback", "content": "{\n    requestProfeedback(input: { animationdId_: $animationId }) {\n      boolean\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($animationId: String!)"}, {"type": "mutation", "name": "updateAnimationTitle", "content": "{\n    updateAnimationTitle(\n      input: { animationId_: $animationId, title_: $title }\n    ) {\n      animation {\n        title\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($animationId: String!, $title: String!)"}, {"type": "mutation", "name": "UpdateOwnNote", "content": "{\n    updateOwnNote(input: { body_: $body, paragraph_: $paragraph, id_: $id }) {\n      note {\n        id\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($id: String!, $paragraph: String!, $body: String!)"}, {"type": "mutation", "name": "updateReel", "content": "{\n    __typename\n    registerReel(input: { reelDescription_: $reelDescription, reel_: $reel }) {\n      clientMutationId\n      profile {\n        reel\n        reelDescription\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($reelDescription: String, $reel: String)"}, {"type": "query", "name": "acceptedAgreement", "content": "{\n    __typename\n    currentProfile {\n      instructorByProfileId {\n        acceptedAgreement\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "getAllAdminInstructors", "content": "{\n    __typename\n    allVAdminInstructors(first: $first, offset: $offset) {\n      nodes {\n        status\n        availability\n        profileByProfileId {\n          id\n          username\n          firstname\n          lastname\n          avatar\n          organisation\n          occupation\n        }\n      }\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($first: Int!, $offset: Int!)"}, {"type": "query", "name": "getAllAnimation", "content": "{\n    allVAnimationPreviews(\n      first: 24\n      offset: $offset\n      orderBy: UPDATED_AT_DESC\n    ) {\n      nodes {\n        updatedAt\n        title\n        thumbnailUrl\n        submissions\n        submissionId\n        profileId\n        id\n        createdAt\n        shortComment\n        startFrame\n        endFrame\n        notes\n        profileByProfileId {\n          id\n          avatar\n          premiumType\n          role\n          username\n          isInstructor\n        }\n        feedbackCount\n        audio\n      }\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($offset: Int!)"}, {"type": "query", "name": "getAllCompanyAdminGroups", "content": "{\n    allVCompanyAdminGroups(first: 10, offset: $offset) {\n      nodes {\n        slug\n        totalmembers\n        id\n        groupName\n        description\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($offset: Int!)"}, {"type": "query", "name": "getAllFeedback", "content": "{\n    allVInstructorFeedbacks(first: 50, offset: $offset) {\n      nodes {\n        username\n        title\n        submissionId\n        startFrame\n        status\n        endFrame\n        id\n        createdAt\n        shortComment\n        avatar\n        animationId\n      }\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($offset: Int!)"}, {"type": "query", "name": "getAllHeadlines", "content": "{\n    allHeadlines(first: 42, offset: $offset, orderBy: CREATED_AT_DESC) {\n      nodes {\n        id\n        createdAt\n        link\n        thumbnail\n        title\n      }\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($offset: Int!)"}, {"type": "query", "name": "getAllMembers", "content": "{\n    allVAdminMembers(offset: $offset, first: $first, orderBy: USERNAME_ASC) {\n      nodes {\n        avatar\n        username\n        firstname\n        lastname\n        id\n        createdAt\n        role\n        isInstructor\n      }\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($first: Int!, $offset: Int!)"}, {"type": "query", "name": "getAllNews", "content": "{\n    allVPosts(first: 10, offset: $offset, orderBy: CREATED_AT_DESC) {\n      nodes {\n        body\n        thumbnail\n        createdAt\n        title\n        id\n        slug\n        intro\n        proContent\n      }\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($offset: Int!)"}, {"type": "query", "name": "getAllPool", "content": "{\n    allVInstructorPools(first: 50, offset: $offset, orderBy: CREATED_AT_ASC) {\n      nodes {\n        id\n        thumbnailUrl\n        submissionId\n        createdAt\n        shortComment\n        title\n        animationId\n        avatar\n        endFrame\n        startFrame\n        responseStatus\n        requestStatus\n        latestSubmission\n        username\n        updatedAt\n      }\n      totalCount\n    }\n    currentInstructor {\n      currentlyResponding\n      isTilted\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}, "arguments": "($offset: Int!)"}, {"type": "query", "name": "getClaimedPendingFeedback", "content": "{\n    getClaimedPendingFeedback {\n      id\n      createdAt\n      status\n      submissionBySubmissionId {\n        animationId\n        id\n        shortComment\n        thumbnailUrl\n        videoUrl\n        frameRate\n        endFrame\n        startFrame\n        updatedAt\n        audio\n        animationByAnimationId {\n          title\n          profileByProfileId {\n            avatar\n            username\n          }\n          submissionsByAnimationId {\n            totalCount\n          }\n        }\n        notesBySubmissionId {\n          totalCount\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "getCompanyAdminPage", "content": "{\n    allVCompanyAdmins(first: 1) {\n      nodes {\n        createdAt\n        address\n        description\n        id\n        link\n        logo\n        name\n        nameUrlSafe\n        updatedAt\n        members\n        groups\n        companyById {\n          companyProGroupsByCompanyId {\n            nodes {\n              groupName\n              id\n              slug\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "query", "name": "getRole", "content": "{\n    currentProfile {\n      id\n      role\n      premiumType\n      isInstructor\n      username\n      avatar\n      getAdminCompany\n    }\n  }", "metadata": {"commit_hash": "177f44ec5fc23068a040a84ee9c1151666e3a5c5", "file": "packages/pwa/src/graphql/generated/hooks.tsx", "repo": "JakobJK_framethrower"}}, {"type": "mutation", "name": "PostComment", "content": "{\n  postComment(input: $input) {\n    _id\n    comment\n    user {\n      givenName\n      surName\n      displayName\n    }\n    createdAt\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/comment-gql.js", "repo": "Duke-MatSci_materialsmine"}, "arguments": "($input: postCommentInput)"}, {"type": "mutation", "name": "EditComment", "content": "{\n  editComment(input: $input) {\n    _id\n    comment\n    user {\n      givenName\n      surName\n      displayName\n    }\n    createdAt\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/comment-gql.js", "repo": "Duke-MatSci_materialsmine"}, "arguments": "($input: editCommentInput!)"}, {"type": "query", "name": "PixelData", "content": "{\n  pixelData(input: $input) {\n    totalItems\n    data {\n      symmetry\n      unit_cell_x_pixels\n      C11\n      C12\n      C22\n      C16\n      C26\n      C66\n      CM0\n      CM0_C11\n      CM0_C12\n      CM0_C22\n      CM0_C16\n      CM0_C26\n      CM0_C66\n      CM1\n      CM1_C11\n      CM1_C12\n      CM1_C22\n      CM1_C16\n      CM1_C26\n      CM1_C66\n      geometry_full\n    }\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/metamaterial-gql.js", "repo": "Duke-MatSci_materialsmine"}, "arguments": "($input: pixelDataQueryInput!)"}, {"type": "query", "name": "searchAllImages", "content": "{\n    searchImages(input: $input) {\n\t\ttotalItems\n    pageSize\n    pageNumber\n    totalPages\n    hasPreviousPage\n    hasNextPage\n\t\timages {\n\t\t\tfile\n\t\t\tdescription\n\t\t\tmicroscopyType\n      type\n      dimension {\n        width\n        height\n      }\n\t\t\tmetaData {\n        title\n        doi\n        id\n        keywords\n      }\n\t\t}\n\t}\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/image-gql.js", "repo": "Duke-MatSci_materialsmine"}, "arguments": "($input: imageExplorerInput!)"}, {"type": "query", "name": "getSingleImage", "content": "{\n    getSingleImages(input: $input) {\n      totalItems\n      pageSize\n      pageNumber\n      totalPages\n      hasPreviousPage\n      hasNextPage\n      images {\n        file\n        description\n        microscopyType\n        type\n        dimension {\n          width\n          height\n        }\n        metaData {\n          title\n          id\n          doi\n          keywords\n          authors\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/image-gql.js", "repo": "Duke-MatSci_materialsmine"}, "arguments": "($input: singleImageQueryInput!)"}, {"type": "query", "name": "GetUserDataset", "content": "{\n  getUserDataset(input: $input) {\n    totalItems\n    pageSize\n    pageNumber\n    totalPages\n    hasNextPage\n    hasPreviousPage\n    datasets {\n      datasetGroupId\n      status\n      title\n      filesetInfo {\n        filesetName\n        files {\n          id\n          filename\n          contentType\n        }\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/dataset-gql.js", "repo": "Duke-MatSci_materialsmine"}, "arguments": "($input: datasetStatusInput)"}, {"type": "query", "name": "User", "content": "{\n  users(input: $input) {\n    totalItems\n    pageSize\n    pageNumber\n    totalPages\n    hasPreviousPage\n    hasNextPage\n    data {\n      _id\n      alias\n      givenName\n      surName\n      displayName\n      email\n      apiAccess\n      roles\n    }\n  }\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/user-gql.js", "repo": "Duke-MatSci_materialsmine"}, "arguments": "($input: usersQueryInput)"}, {"type": "mutation", "name": "DeleteUser", "content": "{\n  deleteUser(input: $input)\n}", "metadata": {"commit_hash": "7c16cb1d4340b0682d7a1a91d987a5e96db75f78", "file": "app/src/modules/gql/user-gql.js", "repo": "Duke-MatSci_materialsmine"}, "arguments": "($input: deleteUsersInput)"}, {"type": "query", "name": "Quests", "content": "{\n    quests {\n      data {\n        id\n        attributes {\n          Name\n          Description\n          Image {\n            data {\n              id\n              attributes {\n                url\n                name\n              }\n            }\n          }\n          Music {\n            data {\n              id\n              attributes {\n                url\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Quest.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "CreateQuest", "content": "{\n    createQuest(\n      data: { Name: $name, Description: $description, Image: $image }\n    ) {\n      data {\n        id\n        attributes {\n          Name\n          Description\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Quest.ts", "repo": "h3lpkey_fibber"}, "arguments": "($name: String!, $description: String, $image: ID)"}, {"type": "query", "name": "Uploads", "content": "{\n    uploadFiles(\n      filters: { name: { contains: $search }, ext: { eq: $ext } }\n      pagination: { pageSize: $pageSize, page: $page }\n    ) {\n      meta {\n        pagination {\n          total\n          page\n        }\n      }\n      data {\n        id\n        attributes {\n          name\n          url\n          formats\n          ext\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Upload.ts", "repo": "h3lpkey_fibber"}, "arguments": "($search: String, $ext: String, $page: Int, $pageSize: Int)"}, {"type": "query", "name": "Uploads", "content": "{\n    uploadFiles {\n      data {\n        id\n        attributes {\n          url\n          name\n          ext\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Upload.ts", "repo": "h3lpkey_fibber"}}, {"type": "query", "name": "Chapters", "content": "{\n    chapters {\n      data {\n        id\n        attributes {\n          Name\n          Description\n          processing\n          Image {\n            data {\n              id\n              attributes {\n                url\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}}, {"type": "mutation", "name": "updateChapter", "content": "{\n    updateChapter(id: $chapterId, data: { firstScene: $firstScene }) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}, "arguments": "($chapterId: ID!, $firstScene: String!)"}, {"type": "mutation", "name": "updateChapter", "content": "{\n    updateChapter(\n      id: $id\n      data: {\n        Name: $name\n        Description: $description\n        Image: $image\n        processing: $processing\n      }\n    ) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "constructor/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}, "arguments": "(\n    $id: ID!\n    $name: String!\n    $description: String\n    $processing: Boolean!\n    $image: ID\n  )"}, {"type": "mutation", "name": "deleteScene", "content": "{\n    deleteScene(id: $id) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Scene.ts", "repo": "h3lpkey_fibber"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Quest", "content": "{\n    quest(id: $id) {\n      data {\n        id\n        attributes {\n          Name\n          Description\n          Image {\n            data {\n              attributes {\n                name\n                url\n              }\n            }\n          }\n          Music {\n            data {\n              attributes {\n                name\n                url\n              }\n            }\n          }\n          chapters {\n            data {\n              id\n              attributes {\n                Name\n                Description\n                firstScene\n                Image {\n                  data {\n                    attributes {\n                      name\n                      url\n                    }\n                  }\n                }\n                scenes {\n                  data {\n                    id\n                    attributes {\n                      Person {\n                        Name\n                        Image {\n                          data {\n                            attributes {\n                              name\n                              url\n                            }\n                          }\n                        }\n                        AlignLeft\n                      }\n                      Background {\n                        Image {\n                          data {\n                            id\n                            attributes {\n                              name\n                              url\n                              formats\n                            }\n                          }\n                        }\n\n                        filter\n                        animate\n                        speed\n                      }\n                      Music {\n                        data {\n                          attributes {\n                            name\n                            url\n                          }\n                        }\n                      }\n                      Text\n                      Link {\n                        id\n                        scene {\n                          data {\n                            id\n                          }\n                        }\n                        Text\n                        TriggerSetter\n                        TriggerGetter\n                        TriggerDelete\n                      }\n                      Notification\n                      lastScene\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Quest.ts", "repo": "h3lpkey_fibber"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "deleteChapter", "content": "{\n    deleteChapter(id: $id) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "updateChapter", "content": "{\n    updateChapter(\n      id: $id\n      data: { Name: $name, Description: $description, Image: $image }\n    ) {\n      data {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "3eb39ee95ab113cf8eaae111c216bd3d43b03434", "file": "game/src/api/Chapter.ts", "repo": "h3lpkey_fibber"}, "arguments": "(\n    $id: ID!\n    $name: String!\n    $description: String\n    $image: ID!\n  )"}, {"type": "query", "name": "pools", "content": "{\n    pools(first: $first, orderBy: liquidity, orderDirection: desc, where: $where) {\n      id\n      token0 {\n        id\n        decimals\n        symbol\n        name\n      }\n      token1 {\n        id\n        decimals\n        symbol\n        name\n      }\n      feeTier\n      sqrtPrice\n      liquidity\n      tick\n      ticks {\n        id\n        tickIdx\n        liquidityGross\n        liquidityNet\n      }\n    }\n  }", "metadata": {"commit_hash": "b7b9c43058b8bc05dedf45a952c856f892071f89", "file": "src/apollo/elixirPools.ts", "repo": "pangolindex_components"}, "arguments": "($where: Pool_filter, $first: Int)"}, {"type": "query", "name": "pairs", "content": "{\n    pairs(where: { id_in: $pairAddresses }) {\n      id\n      token0Price\n      token1Price\n      totalSupply\n      trackedReserveETH\n      untrackedVolumeUSD\n      txCount\n      volumeToken0\n      volumeToken1\n      volumeUSD\n      createdAtTimestamp\n      createdAtBlockNumber\n      reserve0\n      reserve1\n      reserveETH\n      token0 {\n        id\n        name\n        symbol\n        derivedUSD\n        decimals\n      }\n      token1 {\n        id\n        name\n        symbol\n        derivedUSD\n        decimals\n      }\n    }\n  }", "metadata": {"commit_hash": "b7b9c43058b8bc05dedf45a952c856f892071f89", "file": "src/apollo/pairs.ts", "repo": "pangolindex_components"}, "arguments": "($pairAddresses: [String])"}, {"type": "query", "name": "blocks", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "b7b9c43058b8bc05dedf45a952c856f892071f89", "file": "src/apollo/block.ts", "repo": "pangolindex_components"}, "arguments": "($timestampFrom: Int!, $timestampTo: Int!)"}, {"type": "query", "name": "tokens", "content": "{\n    tokens(where: { id_in: $tokenAddresses }) {\n      id\n      name\n      symbol\n      derivedUSD\n      decimals\n      derivedETH\n    }\n  }", "metadata": {"commit_hash": "b7b9c43058b8bc05dedf45a952c856f892071f89", "file": "src/apollo/tokens.ts", "repo": "pangolindex_components"}, "arguments": "($tokenAddresses: [String])"}, {"type": "mutation", "name": "CreateJobsMutation", "content": "{\n      job: createJobs(input: $input) {\n       ...JobDetail   // Fragment Name\n      }\n    }\n    ${jobDetailFragment}    // imp todo", "metadata": {"commit_hash": "acccc18590a18fe78d1cc1dc18ea038bfad4f28d", "file": "backend/GraphQL/job-board/client/src/requests.js", "repo": "shikhar360_MyLearnings"}, "arguments": "($input: CreateJobsInput)"}, {"type": "mutation", "name": "requestResetPassword", "content": "{\n            requestResetPassword(email: $email) {\n              _\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}, "arguments": "($email: String!)"}, {"type": "query", "name": "me", "content": "{\n            me {\n              id\n              name\n              imageUrl\n              email\n\n              createdDate\n              modifiedDate\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}}, {"type": "mutation", "name": "updateUser", "content": "{\n            updateUser(id: $id, name: $name, upload: $image) {\n              id\n              name\n              imageUrl\n              email\n\n              createdDate\n              modifiedDate\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}, "arguments": "($id: ID!, $name: String, $image: Upload)"}, {"type": "mutation", "name": "createChallenge", "content": "{\n            createChallenge(title: $title, description: $description, closeDate: $closeDate, endDate: $endDate, upload: $upload, privacyMode: $privacyMode) {\n              id\n              title\n              description\n              imageUrl\n              closeDate\n              endDate\n              privacyData\n              privacyMode\n\n              createdDate\n              createdBy {\n                id\n                name\n                imageUrl\n              }\n              modifiedDate\n              modifiedBy {\n                id\n                name\n                imageUrl\n              }\n\n              ideas {\n                totalCount\n                edges {\n                  node {\n                    id\n                    title\n                    description\n                    imageUrl\n\n                    reactionsSummary {\n                      value\n                      totalCount\n                    }\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}, "arguments": "($title: String!, $description: String, $closeDate: DateTime, $endDate: DateTime, $upload: Upload, $privacyMode: ChallengePrivacyMode)"}, {"type": "query", "name": "fetchIdeasWithUserReaction", "content": "{\n            ideas(withReactionByUserId: $userId) {\n              totalCount\n              edges {\n                node {\n                  id\n                  title\n                  description\n                  imageUrl\n                  challenge {\n                    id\n                    title\n                    closeDate\n                  }\n\n                  reactionsSummary {\n                    value\n                    totalCount\n                  }\n\n                  myReaction {\n                    id\n                    value\n                  }\n\n                  createdDate\n                  modifiedDate\n                  modifiedBy {\n                    id\n                    name\n                    imageUrl\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "ed7d36aed14a53ecea8652b0ae6707d52eaf3ff6", "file": "src/services/apiclient/APIClient.ts", "repo": "orangeloops_public-phoenix-web"}, "arguments": "($userId: String!)"}, {"type": "mutation", "name": "Sport", "content": "{\n    sport {\n      icon\n      text\n    }\n  }", "metadata": {"commit_hash": "e7a757ca1e82e3c718266d58c64fa587078177fe", "file": "client/src/components/Publisher/Publisher.tsx", "repo": "mihailgaberov_redis-pubsub-visualized"}}, {"type": "query", "name": "manuscript", "content": "{\n    manuscript(id: $id) {\n      acknowledgements\n      authors {\n        affiliations\n        credit\n        email\n        name\n        submittingAuthor\n        WBId\n      }\n      comments\n      dataType\n      decisionLetter\n      disclaimer\n      funding\n      geneExpression {\n        antibodyUsed\n        backboneVector {\n          name\n          WBId\n        }\n        coinjected\n        constructComments\n        constructionDetails\n        detectionMethod\n        dnaSequence {\n          name\n          WBId\n        }\n        expressionPattern {\n          name\n          WBId\n        }\n        fusionType {\n          name\n          WBId\n        }\n        genotype\n        injectionConcentration\n        inSituDetails\n        integratedBy {\n          name\n          WBId\n        }\n        observeExpression {\n          certainly {\n            certainly {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          partially {\n            partially {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          possibly {\n            possibly {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          not {\n            not {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n        }\n        reporter {\n          name\n          WBId\n        }\n        species {\n          name\n          WBId\n        }\n        strain\n        transgeneName\n        transgeneUsed {\n          name\n          WBId\n        }\n        utr {\n          name\n          WBId\n        }\n        variation {\n          name\n          WBId\n        }\n      }\n      id\n      image {\n        name\n        url\n      }\n      imageCaption\n      laboratory {\n        name\n        WBId\n      }\n      methods\n      patternDescription\n      reagents\n      references\n      status {\n        decision {\n          accepted\n          rejected\n          revise\n        }\n        scienceOfficer {\n          approved\n          pending\n        }\n        submission {\n          initial\n          datatypeSelected\n          full\n        }\n      }\n      suggestedReviewer {\n        name\n        WBId\n      }\n      title\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/queries/manuscripts.js", "repo": "PREreview_PREreview-2"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "manuscripts", "content": "{\n    manuscripts {\n      id\n      status {\n        decision {\n          accepted\n          rejected\n          revise\n        }\n        scienceOfficer {\n          approved\n          pending\n        }\n        submission {\n          initial\n          datatypeSelected\n          full\n        }\n      }\n      title\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/queries/manuscripts.js", "repo": "PREreview_PREreview-2"}}, {"type": "query", "name": "GetTeamsForArticle", "content": "{\n    teamsForArticle(id: $id) {\n      id\n      members {\n        id\n        username\n      }\n      name\n      teamType\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/queries/teamsForArticle.js", "repo": "PREreview_PREreview-2"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetGlobalTeams", "content": "{\n    globalTeams {\n      id\n      members {\n        id\n        username\n      }\n      teamType\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/queries/getGlobalTeams.js", "repo": "PREreview_PREreview-2"}}, {"type": "mutation", "name": "CreateTeam", "content": "{\n    createTeam(input: $data) {\n      id\n      members {\n        id\n        username\n      }\n      object {\n        objectId\n        objectType\n      }\n      name\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/createTeam.js", "repo": "PREreview_PREreview-2"}, "arguments": "($data: TeamInput!)"}, {"type": "mutation", "name": "UploadFile", "content": "{\n    upload(file: $file) {\n      url\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/uploadFile.js", "repo": "PREreview_PREreview-2"}, "arguments": "($file: Upload!)"}, {"type": "mutation", "name": "submitManuscript", "content": "{\n    updateManuscript(data: $data) {\n      acknowledgements\n      authors {\n        affiliations\n        credit\n        email\n        name\n        submittingAuthor\n        WBId\n      }\n      comments\n      communicationHistory {\n        content\n        timestamp\n        user {\n          id\n          username\n        }\n      }\n      dataType\n      decisionLetter\n      disclaimer\n      funding\n      geneExpression {\n        antibodyUsed\n        backboneVector {\n          name\n          WBId\n        }\n        coinjected\n        constructComments\n        constructionDetails\n        detectionMethod\n        dnaSequence {\n          name\n          WBId\n        }\n        expressionPattern {\n          name\n          WBId\n        }\n        fusionType {\n          name\n          WBId\n        }\n        genotype\n        injectionConcentration\n        inSituDetails\n        integratedBy {\n          name\n          WBId\n        }\n        observeExpression {\n          certainly {\n            certainly {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          partially {\n            partially {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          possibly {\n            possibly {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n          not {\n            not {\n              name\n              WBId\n            }\n            during {\n              name\n              WBId\n            }\n            id\n            subcellularLocalization {\n              name\n              WBId\n            }\n          }\n        }\n        reporter {\n          name\n          WBId\n        }\n        species {\n          name\n          WBId\n        }\n        strain\n        transgeneName\n        transgeneUsed {\n          name\n          WBId\n        }\n        utr {\n          name\n          WBId\n        }\n        variation {\n          name\n          WBId\n        }\n      }\n      id\n      image {\n        name\n        url\n      }\n      imageCaption\n      laboratory {\n        name\n        WBId\n      }\n      methods\n      patternDescription\n      reagents\n      references\n      status {\n        decision {\n          accepted\n          rejected\n          revise\n        }\n        scienceOfficer {\n          approved\n          pending\n        }\n        submission {\n          initial\n          datatypeSelected\n          full\n        }\n      }\n      suggestedReviewer {\n        name\n        WBId\n      }\n      title\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/mutations/submitManuscript.js", "repo": "PREreview_PREreview-2"}, "arguments": "($data: ManuscriptInput!)"}, {"type": "mutation", "name": "InviteReviewer", "content": "{\n    inviteReviewer(articleId: $articleId, reviewerId: $reviewerId)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/inviteReviewer.js", "repo": "PREreview_PREreview-2"}, "arguments": "($articleId: ID!, $reviewerId: ID!)"}, {"type": "mutation", "name": "ManuscriptMetadataUpdate", "content": "{\n    manuscriptMetadataUpdate(manuscriptId: $manuscriptId, data: $data)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/manuscriptMetadataUpdate.js", "repo": "PREreview_PREreview-2"}, "arguments": "($manuscriptId: ID!, $data: MetadataInput!)"}, {"type": "mutation", "name": "UpdateCurrentlyWith", "content": "{\n    updateManuscript(data: $data) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/updateCurrentlyWith.js", "repo": "PREreview_PREreview-2"}, "arguments": "($data: ManuscriptInput!)"}, {"type": "query", "name": "GetArticleReviewers", "content": "{\n    manuscript(id: $id) {\n      id\n      suggestedReviewer {\n        name\n        WBId\n      }\n    }\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/getArticleReviewers.js", "repo": "PREreview_PREreview-2"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "CreateReview", "content": "{\n    createReview(input: $input)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/createReview.js", "repo": "PREreview_PREreview-2"}, "arguments": "($input: CreateReviewInput!)"}, {"type": "mutation", "name": "UpdateReview", "content": "{\n    updateReview(id: $id, input: $input)\n  }", "metadata": {"commit_hash": "e04a72726194d855793cdcc694b72a6ddecd0577", "file": "app/components/compose/pieces/updateReview.js", "repo": "PREreview_PREreview-2"}, "arguments": "($id: ID!, $input: UpdateReviewInput!)"}, {"type": "mutation", "name": "updateTool", "content": "{\n    updateTool(updatedTool: $tool) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}, "arguments": "($tool: UpdatedTool!)"}, {"type": "mutation", "name": "updateConfigurableItem", "content": "{\n    updateConfigurableItem(updatedConfigurableItem: $item) {\n      id\n      type\n      name\n      sanctioned\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}, "arguments": "($item: UpdatedConfigurableItem!)"}, {"type": "mutation", "name": "newTool", "content": "{\n    createTool(newTool: $newTool) {\n      id\n      brand {\n        id\n        name\n      }\n      type {\n        id\n        name\n      }\n      year\n      status\n      model_number\n      serial_number\n      purchased_from {\n        id\n        name\n      }\n      date_purchased\n      price\n      photo\n      tagged\n      owner {\n        ... on Location {\n          id\n          name\n          type\n        }\n        ... on User {\n          id\n          first_name\n          last_name\n          email\n          phone_number\n          type\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}, "arguments": "($newTool: NewTool!)"}, {"type": "query", "name": "checkResetCode", "content": "{\n    isPasswordResetCodeValid(password_reset_code: $password_reset_code)\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}, "arguments": "($password_reset_code: ID!)"}, {"type": "query", "name": "users", "content": "{\n    searchUser(query: $query) {\n      id\n      first_name\n      last_name\n      role\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}, "arguments": "($query: String!)"}, {"type": "mutation", "name": "transferTools", "content": "{\n    transferMultipleTool (tool_id_list: $tool_id_list, to_owner_id: $to_owner_id) {\n      id\n      type {\n        id\n        name\n      }\n      brand {\n        id\n        name\n      }\n      status\n      tagged\n      owner {\n        ... on Location {\n           id\n           name\n           type\n        }\n        ... on User {\n           id\n           first_name\n           last_name\n           type\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}, "arguments": "($tool_id_list: [ID!]!, $to_owner_id: ID!)"}, {"type": "mutation", "name": "deleteUser", "content": "{\n    updateUser(updatedUser: $updatedUser) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}, "arguments": "($updatedUser: UpdatedUser!)"}, {"type": "mutation", "name": "updateStatus", "content": "{\n    updateUser(updatedUser: $user) {\n      id\n      first_name\n      last_name\n      email\n      phone_number\n      role\n      status\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}, "arguments": "($user: UpdatedUser!)"}, {"type": "query", "name": "getToolSnapshot", "content": "{\n    getToolSnapshot(tool_snapshot_id: $id) {\n      id\n      metadata {\n        action_note\n        actor {\n          id\n          first_name\n          last_name\n        }\n      }\n      tool {\n        id\n        status\n        photo\n        model_number\n        serial_number\n        brand {\n          id\n          name\n        }\n        type {\n          id\n          name\n        }\n        purchased_from {\n          id\n          name\n        }\n        tagged\n        owner {\n          ... on Location {\n            id\n            name\n            type\n          }\n          ... on User {\n            id\n            first_name\n            last_name\n            type\n          }\n        }\n        date_purchased\n        price\n        year\n      }\n      previous_tool_snapshot {\n        tool {\n          id\n          status\n          model_number\n          serial_number\n          brand {\n            id\n            name\n          }\n          type {\n            id\n            name\n          }\n          purchased_from {\n            id\n            name\n          }\n          tagged\n          owner {\n            ... on Location {\n              id\n              name\n              type\n            }\n            ... on User {\n              id\n              first_name\n              last_name\n              type\n            }\n          }\n          date_purchased\n          price\n          year\n          photo\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5f5bc232e911ab4c51cf178a4f4dc1a3136fa2a3", "file": "src/utils/gql.js", "repo": "Renascentinc_retina"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "Modular", "content": "{\n    modular(pin: $pin, state: $state) {\n      state\n      pin\n    }\n  }", "metadata": {"commit_hash": "6779ec1650cf05b3e2b7c27a818719ac909e9510", "file": "src/graphql/mutations/MODULAR.ts", "repo": "venancioavila_action"}, "arguments": "($pin: Int, $state: Int)"}, {"type": "mutation", "name": "Digital", "content": "{\n    digital(pin: $pin, state: $state) {\n      state\n      pin\n    }\n  }", "metadata": {"commit_hash": "6779ec1650cf05b3e2b7c27a818719ac909e9510", "file": "src/graphql/mutations/DIGITAL.ts", "repo": "venancioavila_action"}, "arguments": "($pin: Int, $state: Int)"}, {"type": "mutation", "name": "Servo", "content": "{\n    servo(pin: $pin, state: $state) {\n      state\n      pin\n    }\n  }", "metadata": {"commit_hash": "6779ec1650cf05b3e2b7c27a818719ac909e9510", "file": "src/graphql/mutations/SERVO.ts", "repo": "venancioavila_action"}, "arguments": "($pin: Int, $state: Int)"}, {"type": "query", "name": "leaderboards", "content": "{\n        leaderboards(first: $limit, where: $where, orderBy: $orderBy, orderDirection: desc) {\n            id\n            address\n            githubUsername\n            name\n            userType\n            tokenName\n            totalBounties\n            totalAmount\n        }\n    }", "metadata": {"commit_hash": "e3688b77e34b87f0aa102c7a6d996480612450b8", "file": "frontend/src/App.js", "repo": "santteegt_gitcoin-subgraph"}, "arguments": "($where: Leaderboard_filter! , $orderBy: Leaderboard_orderBy!, $limit: Int)"}, {"type": "query", "name": "cookbooks_list", "content": "{\n    cookbooks {\n    \t_id\n      title\n      author{\n        username\n      }\n      tags\n      thumbnail(width:${Math.max(height, width)}, height:85)\n    }\n  }", "metadata": {"commit_hash": "b9554032689eaaafe4336ace48ee512da4e1e070", "file": "app/containers/Cookbooks.js", "repo": "nature613_do-ws-2016-app"}}, {"type": "query", "name": "cookbook", "content": "{\n    cookbook(_id: $id) {\n      recipes {\n        _id\n        title\n        author{\n          username\n        }\n        tags\n        thumbnail(width:${Math.max(height, width)}, height:85)\n      }\n    }\n  }", "metadata": {"commit_hash": "b9554032689eaaafe4336ace48ee512da4e1e070", "file": "app/containers/Recipes.js", "repo": "nature613_do-ws-2016-app"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "signUp", "content": "{\n  signUp(\n    input: {\n      name: $name\n      lastname: $lastname\n      email: $email\n      password: $password\n    }\n  ) {\n    name\n    lastname\n    email\n  }\n}", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/ejemplo03/bookshop-frontend/src/page/Signup.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}, "arguments": "($name: String, $lastname: String, $email: String!, $password: String!)"}, {"type": "mutation", "name": "signIn", "content": "{\n    signIn(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/postwork/bedulives-frontend/src/page/Signin.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "signIn", "content": "{\n    signIn(email: $email, password: $password)\n  }", "metadata": {"commit_hash": "48227feea0270c0dfca0cc9e05e950b10a3b419b", "file": "sesion08/reto02/bookshop-frontend/src/page/Signin.jsx", "repo": "beduExpert_Backend-con-NodeJS-2022"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "login", "content": "{\n    login(loginInput: $input) {\n      message\n      accessToken\n      refreshToken\n    }\n  }", "metadata": {"commit_hash": "a9041359d3e97fb0bc9b8bd85512416ebe859345", "file": "client/src/App.tsx", "repo": "mohsenasadi501_GraphqlSampleApp"}, "arguments": "($input: LoginInput!)"}, {"type": "mutation", "name": "createPerson", "content": "{\n    createPerson(\n      email: $email,\n      name: $name,\n      picture: $picture,\n      headline: $headline\n      currentPosition: $currentPosition\n      ) {\n      ${personFields}\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/persons.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "(\n    $email: String!,\n    $name: String!,\n    $picture: String,\n    $headline: String,\n    $currentPosition: String\n  )"}, {"type": "mutation", "name": "updatePerson", "content": "{\n    updatePerson(\n      id: $id,\n      email: $email,\n      name: $name,\n      picture: $picture,\n      headline: $headline\n      currentPosition: $currentPosition\n      ) {\n      ${personFields}\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/persons.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "(\n    $id: ID!,\n    $email: String,\n    $name: String,\n    $picture: String,\n    $headline: String,\n    $currentPosition: String\n  )"}, {"type": "mutation", "name": "createTag", "content": "{\n    createTag(name: $name, description: $description) {\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($name: String!, $description: String!)"}, {"type": "mutation", "name": "updateTagging", "content": "{\n    updateTagging(id: $id, level: $level, description: $description) {\n      id\n      level\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: ID!, $level: Int, $description: String)"}, {"type": "query", "name": "User", "content": "{\n  user(id:${id}){ name }\n}", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/prettier/tests/multiparser_js_graphql/graphql-tag.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "User", "content": "{\n  user(id:5){ name }\n}\n# comment", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/prettier/tests/multiparser_js_graphql/graphql-tag.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "}", "content": "{ ${x}", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Q", "content": "{ sum(a: 1, b: 2) } query Q { sum(a: 2, b: 3) }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GetMovies", "content": "{\n    getMovies {\n      title\n      tagline\n      released\n      actors {\n        name\n      }\n      directors {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-apollo-neo4j-graphql/pages/index.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Entries", "content": "{\n      entries(_size: $size) {\n        data {\n          _id\n          _ts\n          name\n          message\n          createdAt\n        }\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-fauna/lib/fauna.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($size: Int)"}, {"type": "mutation", "name": "CreateGuestbookEntry", "content": "{\n      createGuestbookEntry(data: $input) {\n        _id\n        _ts\n        name\n        message\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-fauna/lib/fauna.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($input: GuestbookEntryInput!)"}, {"type": "mutation", "name": "createPost", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-apollo-and-redux/components/Submit.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($title: String!, $url: String!)"}, {"type": "mutation", "name": "deleteItem", "content": "{\n    delete_items_by_pk(id: $item_id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-nhost-auth-realtime-graphql/pages/index.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($item_id: uuid!)"}, {"type": "mutation", "name": "votePost", "content": "{\n    votePost(id: $id) {\n      id\n      votes\n      __typename\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-apollo/components/PostUpvoter.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: String!)"}, {"type": "query", "name": "allPosts", "content": "{\n    allPosts(orderBy: { createdAt: desc }, first: $first, skip: $skip) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/next.js/examples/with-apollo/components/PostList.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int!, $skip: Int!)"}, {"type": "query", "name": "AllCountries", "content": "{\n    countries {\n      code\n      name\n      emoji\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/examples/bundling/tree-shaking/rollup-ac3/src/App.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "AllCountries", "content": "{\n    countries {\n      code\n      name\n      emoji\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/examples/bundling/no-tree-shaking/rollup-ac3/src/App.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "deleteVote", "content": "{\n    deleteVote(id: $id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/geeksblabla.com/src/components/Suggest/graphql/mutation.js", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "CachedLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\")\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(input: { id: \"5\" }) {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\") {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n        makeListPrivate(id: \"5\") {\n          id\n          isPrivate\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\", id: $id) {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "nestedData", "content": "{\n          people {\n            id\n            friends {\n              id\n              type\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/ApolloClient.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "stuff", "content": "{ key1: [\"value\", \"value2\"], key2: { key3: 4 } }\n      ) {\n        allStuff(test: $test) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "(\n        $test: Input ="}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int = 1)"}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: 1) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n        name\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "todoList", "content": "{\n      __typename\n      todoList(id: 5) {\n        __typename\n        id\n        todos {\n          id\n          __typename\n          text\n          completed\n        }\n        filteredTodos: todos(completed: true) {\n          id\n          __typename\n          text\n          completed\n        }\n      }\n      noIdList: todoList(id: 6) {\n        __typename\n        id\n        todos {\n          __typename\n          text\n          completed\n        }\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName) {\n        comments {\n          postedBy {\n            login\n            html_url\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($repoName: String!)"}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName) {\n        comments {\n          ...authorFields\n        }\n      }\n    }\n\n    fragment authorFields on User {\n      postedBy {\n        login\n        html_url\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($repoName: String!)"}, {"type": "mutation", "name": "submitComment", "content": "{\n      submitComment(\n        repoFullName: $repoFullName\n        commentContent: $commentContent\n      ) {\n        postedBy {\n          login\n          html_url\n        }\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "query", "name": "thing", "content": "{\n      entry {\n        value\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "thing", "content": "{\n      entry(requiredVar: $requiredVar, optionalVar: $optionalVar) {\n        value\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($requiredVar: String!, $optionalVar: String)"}, {"type": "query", "name": "NewComments", "content": "{\n      comments(start: $start, limit: $limit) {\n        text\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($start: Int!, $limit: Int!)"}, {"type": "query", "name": "todoList", "content": "{\n      todoList(id: 5) {\n        id\n        todos {\n          id\n          text\n          completed\n        }\n        filteredTodos: todos(completed: true) {\n          id\n          text\n          completed\n        }\n      }\n      noIdList: todoList(id: 6) {\n        id\n        todos {\n          text\n          completed\n        }\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "upload", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($signature: String!)"}, {"type": "mutation", "name": "mut", "content": "{\n            mut(inline: 5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($in: Int!)"}, {"type": "mutation", "name": "mut", "content": "{\n            mut(inline: 5.5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($in: Float!)"}, {"type": "mutation", "name": "mut", "content": "{\n            mut(inline: { a: 1 }, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($in: Object!)"}, {"type": "query", "name": "LazyLoad", "content": "{\n          id\n          expensive @defer\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "someBigQuery", "content": "{\n        id\n        stringField(arg: $stringArg)\n        numberField(intArg: $intArg, floatArg: $floatArg)\n        nullField\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/readFromStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "(\n        $stringArg: String = \"This is a default string!\"\n        $intArg: Int = 0\n        $floatArg: Float\n      )"}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int = 1, $second: String!)"}, {"type": "mutation", "name": "complexStuff", "content": "{ key1: [\"value\", \"value2\"], key2: { key3: 4 } }\n        ) {\n          complexStuff(test: $test) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "(\n          $test: Input ="}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field @storage(if: true)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field @storage(if: true)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        keep\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        keep\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n          }\n        }\n      }\n\n      fragment friendFields on User {\n        firstName\n        lastName\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Feed", "content": "{\n        # Eventually move this into a no fetch query right on the entry\n        # since we literally just need this info to determine whether to\n        # show upvote/downvote buttons\n        currentUser {\n          login\n        }\n        feed(type: $type) {\n          createdAt\n          score\n          commentCount\n          id\n          postedBy {\n            login\n            html_url\n          }\n          repository {\n            name\n            full_name\n            description\n            html_url\n            stargazers_count\n            open_issues_count\n            created_at\n            owner {\n              avatar_url\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($type: FeedType!)"}, {"type": "query", "name": "nameOfQuery", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/getFromAST.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/fragments.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        network\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        field(usingVariable: $variable) @client\n        networkField(usingVariable: $variable)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($variable: String!)"}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        ...inDirection\n      }\n\n      fragment inDirection on Thing {\n        field @storage\n        bar\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        field @storage\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n            __typename\n          }\n          __typename\n        }\n      }\n\n      fragment friendFields on User {\n        firstName\n        lastName\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Feed", "content": "{\n        # Eventually move this into a no fetch query right on the entry\n        # since we literally just need this info to determine whether to\n        # show upvote/downvote buttons\n        currentUser {\n          login\n        }\n        feed(type: $type) {\n          createdAt\n          score\n          commentCount\n          id\n          postedBy {\n            login\n            html_url\n          }\n          repository {\n            name\n            full_name\n            description\n            html_url\n            stargazers_count\n            open_issues_count\n            created_at\n            owner {\n              avatar_url\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($type: FeedType!)"}, {"type": "query", "name": "Author", "content": "{\n        name\n        isLoggedIn @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/graphql/__tests__/transform.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Test", "content": "{\n    foo(id: $id) {\n      bar\n      ${makeAliasFields('title', 1000)}\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/persisted-queries/__tests__/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "SampleQuery", "content": "{\n                stub {\n                    id\n                }\n            }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/utils/__tests__/validateOperation.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Foo", "content": "{\n      foo {\n        bar\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/error/__tests__/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "IntrospectionQuery", "content": "{\n        __schema {\n          types {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/schema/__tests__/schemaLink.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "SampleQuery", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/http/__tests__/selectHttpOptionsAndBody.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "SampleQuery", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/http/__tests__/parseAndCheckHttpResponse.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "One", "content": "{\n        user {\n          name\n        }\n      }\n\n      query Two {\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/parser/__tests__/parser.test.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/parser/__tests__/parser.test.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/parser/__tests__/parser.test.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "One", "content": "{\n        user(t: $t) {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/parser/__tests__/parser.test.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($t: String!)"}, {"type": "subscription", "name": "One", "content": "{\n        user(t: $t) {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/parser/__tests__/parser.test.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($t: String!)"}, {"type": "query", "name": "FetchLuke", "content": "{\n          hero(id: $id) @client {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/fetchPolicies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: String)"}, {"type": "query", "name": "CachedLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n            allPeople(first: 1) {\n              people {\n                name\n              }\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "primeQuery", "content": "{\n        luke: people_one(id: 1) {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n        makeListPrivate(id: \"5\") {\n          id\n          isPrivate\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "One", "content": "{\n          one\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Three", "content": "{\n          three\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Four", "content": "{\n          four\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GetBook", "content": "{\n    book(isbn: $isbn) {\n      title\n      author {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/cache.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($isbn: String!)"}, {"type": "query", "name": "BestFriend", "content": "{\n        bestFriend {\n          id\n          ...AnimalName\n        }\n      }\n      fragment AnimalName on Animal {\n        name\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/fragmentMatcher.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "AllPeople", "content": "{\n        people {\n          id\n          name\n        }\n        ...PeopleTypes\n      }\n      fragment PeopleTypes on Query {\n        __type(name: \"Person\") {\n          name\n          kind\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/fragmentMatcher.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "mut", "content": "{\n            mut(inline: 5.5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($in: Float!)"}, {"type": "mutation", "name": "mut", "content": "{\n            mut(inline: \"abc\", variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/writeToStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($in: String!)"}, {"type": "query", "name": "getMessageList", "content": "{\n          messageList {\n            id\n            __typename\n            message\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/diffAgainstStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getMessageList", "content": "{\n          # This field needs a selection set because its value is an array\n          # of non-scalar objects.\n          messageList\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/diffAgainstStore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "TodoQuery", "content": "{\n          todos {\n            totalCount\n            extraMetaData\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Items", "content": "{\n        __typename\n        items {\n          id\n          query {\n            id\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/cache/inmemory/__tests__/policies.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "nestedData", "content": "{\n          people {\n            id\n            friends {\n              id\n              type\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/ApolloClient.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "subscription", "name": "createdEntry", "content": "{\n          name\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/subscribeToMore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "stuff", "content": "{ key1: [\"value\", \"value2\"], key2: { key3: 4 } }\n      ) {\n        allStuff(test: $test) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "(\n        $test: Input ="}, {"type": "query", "name": "items", "content": "{\n        items {\n          ...ItemFragment\n          __typename\n        }\n      }\n\n      fragment ItemFragment on Item {\n        id\n        __typename\n        ... on ColorItem {\n          color\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "items", "content": "{\n        items {\n          ...ItemFragment\n          __typename\n        }\n      }\n\n      fragment ItemFragment on Item {\n        id\n        ... on ColorItem {\n          color\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "items", "content": "{\n        items {\n          ...ItemFragment\n          __typename\n        }\n      }\n\n      fragment ItemFragment on Item {\n        id\n        ... on ColorItem {\n          color\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            id\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "somethingelse", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/client.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "todoList", "content": "{\n        todoList(id: 5) {\n          __typename\n          id\n          todos {\n            id\n            __typename\n            text\n            completed\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo(text: $text) {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($text: String)"}, {"type": "mutation", "name": "AddItem", "content": "{\n          addItem(item: $item) {\n            text\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($item: Item!)"}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName) {\n        comments {\n          ...authorFields\n        }\n      }\n    }\n\n    fragment authorFields on User {\n      postedBy {\n        login\n        html_url\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($repoName: String!)"}, {"type": "mutation", "name": "submitComment", "content": "{\n      submitComment(\n        repoFullName: $repoFullName\n        commentContent: $commentContent\n      ) {\n        postedBy {\n          login\n          html_url\n        }\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/optimistic.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "query", "name": "thing", "content": "{\n      entry {\n        value\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/fetchMore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName) {\n        comments(start: $start, limit: $limit) {\n          text\n          __typename\n        }\n        __typename\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/fetchMore.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($repoName: String!, $start: Int!, $limit: Int!)"}, {"type": "query", "name": "todoList", "content": "{\n      todoList(id: 5) {\n        id\n        todos {\n          id\n          text\n          completed\n        }\n        filteredTodos: todos(completed: true) {\n          id\n          text\n          completed\n        }\n      }\n      noIdList: todoList(id: 6) {\n        id\n        todos {\n          text\n          completed\n        }\n      }\n    }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "setCompleted", "content": "{\n        setCompleted(todoId: \"3\") {\n          id\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "getMini", "content": "{\n        mini(id: $id) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "upload", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($signature: String!)"}, {"type": "query", "name": "todos", "content": "{\n        todos {\n          id\n          name\n          description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/mutationResults.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "subscription", "name": "UserInfo", "content": "{\n          user(name: $name) {\n            name\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($name: String)"}, {"type": "subscription", "name": "UserInfo", "content": "{\n          user(name: $name) {\n            name\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($name: String = \"Changping Chen\")"}, {"type": "query", "name": "Test", "content": "{\n        foo @client {\n          bar\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Mixed", "content": "{\n        foo @client {\n          bar\n        }\n        bar {\n          baz\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "author", "content": "{\n          author {\n            name\n            stats {\n              totalPosts\n              postsToday @client\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "CartDetails", "content": "{\n        isInCart @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Test", "content": "{\n          fie: foo @client {\n            bar\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "IsUserLoggedIn", "content": "{\n          isUserLoggedIn @client(always: true)\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "IsUserLoggedIn", "content": "{\n          isUserLoggedIn @client\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Member", "content": "{\n        isLoggedIn @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Author", "content": "{\n            name\n            isLoggedIn @client(always: true)\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/resolvers.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "currentAuthorPostCount", "content": "{\n          currentAuthorId @client @export(as: \"authorId\")\n          postCount(authorId: $authorId) @client\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/export.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($authorId: Int!)"}, {"type": "query", "name": "currentAuthorPostCount", "content": "{\n          currentAuthor @client {\n            name\n            authorId @export(as: \"authorId\")\n          }\n          postCount(authorId: $authorId) @client\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/export.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($authorId: Int!)"}, {"type": "query", "name": "currentAuthorPostCount", "content": "{\n          appContainer @client {\n            systemDetails {\n              currentAuthor {\n                name\n                authorId @export(as: \"authorId\")\n              }\n            }\n          }\n          postCount(authorId: $authorId)\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/export.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($authorId: Int!)"}, {"type": "query", "name": "currentAuthorPostCount", "content": "{\n        currentAuthor {\n          name\n          authorId @export(as: \"authorId\")\n        }\n        postCount(authorId: $authorId)\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/export.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($authorId: Int!)"}, {"type": "query", "name": "GetListItems", "content": "{\n        lessonCollection(where: $where) {\n          items {\n            title\n            slug\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/export.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($where: LessonFilter)"}, {"type": "mutation", "name": "start", "content": "{\n        start(field: $id) @client {\n          field\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "FetchInitialData", "content": "{\n        serverData {\n          id\n          title\n        }\n        selectedItemId @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "Select", "content": "{\n        select(itemId: $id) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GetClientData", "content": "{\n        clientEntity(id: $id) @client(always: true) {\n          id\n          title\n          titleLength @client(always: true)\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: ID)"}, {"type": "mutation", "name": "Increment", "content": "{\n        increment(amount: $amount) @client\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($amount: Int = 1)"}, {"type": "query", "name": "GetCount", "content": "{\n        count @client\n        lastCount\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/__tests__/local-state/general.ts", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "GetUser", "content": "{\n    user(username: $username) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/testing/mocking/__tests__/MockedProvider.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($username: String!)"}, {"type": "query", "name": "OtherQuery", "content": "{\n              otherQuery {\n                id\n              }\n            }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/utilities/testing/mocking/__tests__/MockedProvider.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Test", "content": "{\n    foo(filter: $filter) {\n      bar\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/link/persisted-queries/__tests__/react.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($filter: FilterObject)"}, {"type": "mutation", "name": "addPerson", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/shared-operations.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: 1) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/shared-operations.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/client-option.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int)"}, {"type": "query", "name": "getUser", "content": "{\n          user(id: $id) {\n            firstName\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/ssr/getDataFromTree.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: String)"}, {"type": "query", "name": "pollingPeople", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/loading.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "remount", "content": "{\n        allPeople(name: $name) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/loading.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($name: String)"}, {"type": "query", "name": "thing", "content": "{\n        getThing {\n          thing\n        }\n        other\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/reducer.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/api.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first, skip: $skip) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/queries/api.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($skip: Int, $first: Int)"}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "todos", "content": "{\n        todo_list {\n          id\n          title\n          tasks {\n            id\n            text\n            completed\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "addPerson", "content": "{\n    allPeople(first: 1) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/index.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "addPerson", "content": "{\n    allPeople(id: $id) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/lifecycle.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: Int)"}, {"type": "query", "name": "todos", "content": "{\n        todo_list {\n          id\n          title\n          tasks {\n            id\n            text\n            completed\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/recycled-queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "todos", "content": "{\n        todo_list(id: $id) {\n          id\n          title\n          tasks {\n            id\n            text\n            completed\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/mutations/recycled-queries.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: ID!)"}, {"type": "subscription", "name": "UserInfo", "content": "{\n        user(name: $name) {\n          name\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hoc/__tests__/subscriptions/subscriptions.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($name: String)"}, {"type": "query", "name": "car", "content": "{\n        car {\n          id\n          make\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useLazyQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "TestQuery", "content": "{\n          rates(currency: \"USD\") {\n            rate\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "cars", "content": "{\n          cars(id: $id) {\n            id\n            make\n            model\n            vin\n            __typename\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($id: Int)"}, {"type": "query", "name": "AllPeople", "content": "{\n            allPeople(name: $name) {\n              people {\n                name\n              }\n            }\n          }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($name: String!)"}, {"type": "query", "name": "car", "content": "{\n          car {\n            id\n            make\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "A", "content": "{ a { id name }}", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/hooks/__tests__/useQuery.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "somethingelse", "content": "{\n          allPeople(first: 1, yetisArePeople: $variable) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Query.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($variable: Boolean)"}, {"type": "query", "name": "Things", "content": "{\n          allThings {\n            thing {\n              description\n            }\n          }\n        }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Query.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/apollo-client/src/react/components/__tests__/client/Mutation.test.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}, "arguments": "($first: Int)"}, {"type": "mutation", "name": "logout", "content": "{\n    logout {\n      ...UserResponseFragment\n    }\n  }\n  ${UserResponseFragmentFragmentDoc}", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/auth-ts-next-boilerplate/src/generated/graphql.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "query", "name": "Me", "content": "{\n    me {\n      ...UserResponseFragment\n    }\n  }\n  ${UserResponseFragmentFragmentDoc}", "metadata": {"commit_hash": "3c69be8cd5f84e63f97ec657d0264cb2bd9ecf01", "file": "NEW/auth-ts-next-boilerplate/src/generated/graphql.tsx", "repo": "BGOOONZ-BLOG_JAMSTACK-TEMPLATES"}}, {"type": "mutation", "name": "login", "content": "{\n        login(username: $username, password: $password) {\n            id\n            email\n            username\n            createdAt\n            token\n        }\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/pages/Login.js", "repo": "rimijoker_Social-Media-App"}, "arguments": "($username: String!, $password: String!)"}, {"type": "mutation", "name": "deletePost", "content": "{\n        deletePost(postId: $postId)\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/components/DeleteButton.js", "repo": "rimijoker_Social-Media-App"}, "arguments": "($postId: ID!)"}, {"type": "mutation", "name": "createPost", "content": "{\n        createPost(body: $body) {\n            id\n            body\n            createdAt\n            username\n            likes {\n                id\n                username\n                createdAt\n            }\n            likeCount\n            comments {\n                id\n                body\n                username\n                createdAt\n            }\n            commentCount\n        }\n    }", "metadata": {"commit_hash": "45881b39122e01675346b71385f0504ebe015576", "file": "client/src/components/PostForm.js", "repo": "rimijoker_Social-Media-App"}, "arguments": "($body: String!)"}, {"type": "query", "name": "uniswap", "content": "{\n    current: uniswap(id: \"1\") {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    oneDay: uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    twoDay: uniswapHistoricalDatas(\n      where: { timestamp_lt: $date2 }\n      first: 1\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    exchanges(first: 200, orderBy: ethBalance, orderDirection: desc) {\n      ethBalance\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($date: Int!, $date2: Int!)"}, {"type": "query", "name": "lps", "content": "{\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\n      user {\n        id\n      }\n      pair {\n        id\n      }\n      liquidityTokenBalance\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($pair: Bytes!)"}, {"type": "query", "name": "snapshots", "content": "{\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\n      timestamp\n      reserveUSD\n      liquidityTokenBalance\n      liquidityTokenTotalSupply\n      reserve0\n      reserve1\n      token0PriceUSD\n      token1PriceUSD\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($user: Bytes!, $skip: Int!)"}, {"type": "query", "name": "transactions", "content": "{\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($user: Bytes!)"}, {"type": "query", "name": "pairDayDatas", "content": "{\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      totalSupply\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($pairAddress: Bytes!, $date: Int!)"}, {"type": "query", "name": "pairs", "content": "{\n    pairs(first: 100, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($skip: Int!)"}, {"type": "query", "name": "tokenDayDatas", "content": "{\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n      mostLiquidPairs {\n        id\n        token0 {\n          id\n          derivedETH\n        }\n        token1 {\n          id\n          derivedETH\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "142875e9e673843feba547fabb63ab6208b61ec7", "file": "src/apollo/queries.js", "repo": "jewelas_fastswap-swap-interface"}, "arguments": "($tokenAddr: String!, $skip: Int!)"}, {"type": "query", "name": "pool", "content": "{\n    pool(id: $poolAddress) {\n      tick\n      token0 {\n        symbol\n        id\n        decimals\n      }\n      token1 {\n        symbol\n        id\n        decimals\n      }\n      feeTier\n      sqrtPrice\n      liquidity\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/pools/tickData.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($poolAddress: String!)"}, {"type": "query", "name": "transactions", "content": "{\n    mints(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/pools/transactions.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($address: Bytes!)"}, {"type": "query", "name": "tokenDayDatas", "content": "{\n    tokenDayDatas(\n      first: 1000\n      skip: $skip\n      where: { token: $address, date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n    ) {\n      date\n      volumeUSD\n      totalValueLockedUSD\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/tokens/chartData.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($startTime: Int!, $skip: Int!, $address: Bytes!)"}, {"type": "query", "name": "feeEstimationData", "content": "{\n    bundle(id: \"1\") {\n      ethPriceUSD\n    }\n    pool(id: $pool) {\n      token0 {\n        id\n        decimals\n        derivedETH\n      }\n      token1 {\n        id\n        decimals\n        derivedETH\n      }\n      feeTier\n      liquidity\n      sqrtPrice\n      tick\n      feeGrowthGlobal0X128\n      feeGrowthGlobal1X128\n    }\n    tickLower: tick(id: $tickLower) {\n      tickIdx\n      feeGrowthOutside0X128\n      feeGrowthOutside1X128\n    }\n    tickUpper: tick(id: $tickUpper) {\n      tickIdx\n      feeGrowthOutside0X128\n      feeGrowthOutside1X128\n    }\n    poolOld: pool(id: $pool, block: { number: $block }) {\n      token0 {\n        id\n        decimals\n        derivedETH\n      }\n      token1 {\n        id\n        decimals\n        derivedETH\n      }\n      feeTier\n      liquidity\n      sqrtPrice\n      tick\n      feeGrowthGlobal0X128\n      feeGrowthGlobal1X128\n    }\n    tickLowerOld: tick(id: $tickLower, block: { number: $block }) {\n      tickIdx\n      feeGrowthOutside0X128\n      feeGrowthOutside1X128\n    }\n    tickUpperOld: tick(id: $tickUpper, block: { number: $block }) {\n      tickIdx\n      feeGrowthOutside0X128\n      feeGrowthOutside1X128\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/simulator/feeEstimation.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($pool: String, $tickLower: String, $tickUpper: String, $block: Int)"}, {"type": "query", "name": "tokens", "content": "{\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/search/index.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($value: String, $id: String)"}, {"type": "query", "name": "tickIds", "content": "{\n    position(id: $positionId) {\n      id\n      pool {\n        id\n      }\n      tickLower {\n        tickIdx\n        feeGrowthOutside0X128\n        feeGrowthOutside1X128\n      }\n      tickUpper {\n        tickIdx\n        feeGrowthOutside0X128\n        feeGrowthOutside1X128\n      }\n    }\n    positionSnapshots(where: { position: $positionId }, orderBy: timestamp, orderDirection: asc) {\n      position {\n        id\n      }\n      timestamp\n      liquidity\n      feeGrowthInside0LastX128\n      feeGrowthInside1LastX128\n    }\n  }", "metadata": {"commit_hash": "7be552937611b87363216636af8d934bae76e29a", "file": "src/data/dashboard/dailyFees.ts", "repo": "croco-finance_frontend-v3"}, "arguments": "($positionId: String)"}, {"type": "query", "name": "Stores", "content": "{\n  stores(first: 25, after: $cursor, tagged: $tagged) {\n    edges {\n      node {\n        id\n        name\n        description\n        address\n        tags {\n          name\n        }\n        latitude\n        longitude\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}", "metadata": {"commit_hash": "9b8d3bbb00c1789761f4809ef30fdb6293effbf7", "file": "app/javascript/packs/stores/query.js", "repo": "elct9620_FiveFood"}, "arguments": "($cursor: String, $tagged: String)"}, {"type": "query", "name": "GetFlags", "content": "{\n      getFlags(\n        offset: $offset\n        limit: $limit\n        flag: $flag\n        sploit: $sploit\n        team: $team\n        since: $since\n        until: $until\n        status: $status\n        checksystem_response: $checksystem_response\n      ) {\n        flag\n        sploit\n        team\n        timestamp\n        status\n        checksystem_response\n      }\n      getFlagCount(\n        flag: $flag\n        sploit: $sploit\n        team: $team\n        since: $since\n        until: $until\n        status: $status\n        checksystem_response: $checksystem_response\n      )\n      getSearchValues {\n        sploits\n        teams\n        statuses\n      }\n      getGameInfo {\n        flagFormat\n      }\n    }", "metadata": {"commit_hash": "5d4ba443dca65ed9d3135e1db563195f782ae847", "file": "src/next/lib/graphql.ts", "repo": "Giotino_LessDestructiveFarm"}, "arguments": "(\n      $offset: Int = 0\n      $limit: Int = 30\n      $flag: String\n      $sploit: String\n      $team: String\n      $since: DateTime\n      $until: DateTime\n      $status: String\n      $checksystem_response: String\n    )"}, {"type": "query", "name": "FetchUser", "content": "{\n    User(id: $id) {\n      createdBy {\n        id\n        username\n      }\n      firstName\n      lastName\n      email\n      password\n      displayName\n      gender\n      birthdate\n      city\n      country\n      mobile\n      username\n      photoURL\n      registrationDate\n      lastSeen\n      onlineStatus\n      group\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/users/EditUser.js", "repo": "vecnazmaga_place-management"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n    updateUser (\n      id: $id\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n      displayName: $displayName\n      gender: $gender\n      birthdate: $birthdate\n      country: $country\n      city: $city\n      mobile: $mobile\n      username: $username\n      photoURL: $photoURL\n      bio: $bio\n      group: $group\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/users/EditUser.js", "repo": "vecnazmaga_place-management"}, "arguments": "(\n    $id: ID!,\n    $firstName: String!,\n    $lastName: String!,\n    $email: String!,\n    $password: String!,\n    $displayName: String\n    $gender: Gender,\n    $birthdate: String,\n    $country: String,\n    $city: String,\n    $mobile: String,\n    $username: String,\n    $photoURL: String,\n    $bio: String,\n    $group: [UserGroup!]\n  )"}, {"type": "mutation", "name": "DeleteUser", "content": "{\n    deleteUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/users/EditUser.js", "repo": "vecnazmaga_place-management"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "DeleteCampaign", "content": "{\n    deleteCampaign(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCampaign.js", "repo": "vecnazmaga_place-management"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "FetchUsers", "content": "{\n    allUsers {\n      id\n      displayName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCampaign.js", "repo": "vecnazmaga_place-management"}}, {"type": "query", "name": "FetchEventTables", "content": "{\n    allEventTables(filter: {\n      campaign: {\n        id: $campaignId\n      }\n    }) {\n      id\n      name\n      fromDateTime\n      toDateTime\n      active\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCampaign.js", "repo": "vecnazmaga_place-management"}, "arguments": "($campaignId: ID)"}, {"type": "mutation", "name": "UpdateCampaign", "content": "{\n    updateCampaign (\n      id: $id\n      name: $name\n      availableCities: $availableCities\n      description: $description\n      defaultPlaceId: $defaultPlaceId\n      active: $active\n      partnerId: $partnerId\n      pushNotificationActive: $pushNotificationActive\n      pushNotificationMsg: $pushNotificationMsg,\n      feedNotificationActive: $feedNotificationActive,\n      feedNotificationImg: $feedNotificationImg,\n      feedNotificationMsg: $feedNotificationMsg,\n      photoUrl: $photoUrl,\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCampaign.js", "repo": "vecnazmaga_place-management"}, "arguments": "(\n    $id: ID!,\n    $name: String!,\n    $availableCities: [String!],\n    $description: String,\n    $defaultPlaceId: ID,\n    $active: Boolean,\n    $partnerId: ID,\n    $pushNotificationActive: Boolean,\n    $pushNotificationMsg: String,\n    $feedNotificationActive: Boolean,\n    $feedNotificationImg: String,\n    $feedNotificationMsg: String,\n    $photoUrl: String!,\n  )"}, {"type": "query", "name": "FetchEventTable", "content": "{\n    EventTable(id: $id) {\n      id\n      name\n      fromDateTime\n      toDateTime\n      active\n      description\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditEvent.js", "repo": "vecnazmaga_place-management"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "FetchPlaces", "content": "{\n    allPlaces {\n      id\n      placeName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/NewCondition.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "CreateCondition", "content": "{\n    createCondition(\n      name: $name\n      pointReward: $pointReward\n      active: $active\n      distance: $distance\n      notificationType: $notificationType\n      type: $type\n      badgeReward: {\n        name: \"badge\",\n        photoURL: $badgeReward\n      }\n      places: $places\n      dates: $dates\n      campaignId: $campaignId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/NewCondition.js", "repo": "vecnazmaga_place-management"}, "arguments": "(\n    $name: String!,\n    $pointReward: Int!,\n    $active: Boolean,\n    $distance: Int!,\n    $notificationType: NotificatiionType,\n    $type: ConditionTypes!,\n    $badgeReward: String!,\n    $places: [ConditionplacesConditionPlace!]!,\n    $dates: [ConditiondatesConditionDate!]!,\n    $campaignId: ID,\n  )"}, {"type": "query", "name": "FetchUsers", "content": "{\n    allUsers {\n      id\n      displayName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/NewCampaign.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "CreateCampaign", "content": "{\n    createCampaign(\n      name: $name\n      availableCities: $availableCities\n      description: $description\n      defaultPlaceId: $defaultPlaceId\n      active: $active\n      partnerId: $partnerId\n      pushNotificationActive: $pushNotificationActive\n      pushNotificationMsg: $pushNotificationMsg\n      feedNotificationActive: $feedNotificationActive\n      feedNotificationImg: $feedNotificationImg\n      feedNotificationMsg: $feedNotificationMsg\n      photoUrl: $photoUrl\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/NewCampaign.js", "repo": "vecnazmaga_place-management"}, "arguments": "(\n    $name: String!,\n    $availableCities: [String!],\n    $description: String,\n    $defaultPlaceId: ID,\n    $active: Boolean,\n    $partnerId: ID,\n    $pushNotificationActive: Boolean,\n    $pushNotificationMsg: String,\n    $feedNotificationActive: Boolean,\n    $feedNotificationImg: String,\n    $feedNotificationMsg: String,\n    $photoUrl: String!,\n  )"}, {"type": "mutation", "name": "UpdateCondition", "content": "{\n    updateCondition (\n      id: $id\n      name: $name\n      pointReward: $pointReward\n      active: $active\n      distance: $distance\n      notificationType: $notificationType\n      badgeReward: {\n        name: \"badge\",\n        photoURL: $badgeReward\n      }\n      dates: $dates\n      places: $places\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCondition.js", "repo": "vecnazmaga_place-management"}, "arguments": "(\n    $id: ID!,\n    $name: String!,\n    $pointReward: Int!,\n    $active: Boolean,\n    $distance: Int!,\n    $notificationType: NotificatiionType,\n    $badgeReward: String!,\n    $dates: [ConditiondatesConditionDate!]!,\n    $places: [ConditionplacesConditionPlace!]!,\n  )"}, {"type": "mutation", "name": "DeleteCondition", "content": "{\n    deleteCondition(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/campaigns/EditCondition.js", "repo": "vecnazmaga_place-management"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "FetchUsers", "content": "{\n    allUsers {\n      id\n      displayName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/NewStory.js", "repo": "vecnazmaga_place-management"}}, {"type": "query", "name": "FetchPlaces", "content": "{\n    allPlaces {\n      id\n      placeName\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/EditStory.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "DeleteStory", "content": "{\n    deleteStory(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/EditStory.js", "repo": "vecnazmaga_place-management"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "FetchStory", "content": "{\n    Story(id: $id) {\n      id\n      createdAt\n      updatedAt\n      title\n      story\n      pictureURL\n      hashtag\n      status\n      createdBy {\n        id\n        displayName\n      }\n      place {\n        id\n        placeName\n      }\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/stories/EditStory.js", "repo": "vecnazmaga_place-management"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "LoggedInUserQuery", "content": "{\n    loggedInUser {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/shared/components/Header.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "UpdatePlace", "content": "{\n    updatePlace (\n      id: $id\n      placeName: $placeName\n      description: $description\n      address: $address\n      addressStreet: $addressStreet\n      addressAreaDistrict: $addressAreaDistrict\n      addressCityTown: $addressCityTown\n      addressStateProvince: $addressStateProvince\n      addressCountry: $addressCountry\n      addressPostalCode: $addressPostalCode\n      locationLat: $locationLat\n      locationLong: $locationLong\n      source: $source\n      sourceId: $sourceId\n      pictureURL: $pictureURL\n      status: $status\n    ) {\n      placeName\n      description\n      address\n      addressStreet\n      addressAreaDistrict\n      addressCityTown\n      addressStateProvince\n      addressCountry\n      addressPostalCode\n      locationLat\n      locationLong\n      source\n      sourceId\n      pictureURL\n      createdAt\n      status\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/places/EditPlace.js", "repo": "vecnazmaga_place-management"}, "arguments": "(\n    $id: ID!,\n    $placeName: String!,\n    $description: String,\n    $address: String,\n    $addressStreet: String,\n    $addressAreaDistrict: String,\n    $addressCityTown: String,\n    $addressStateProvince: String,\n    $addressCountry: String,\n    $addressPostalCode: String,\n    $locationLat: Float,\n    $locationLong: Float,\n    $source: PlaceSource!,\n    $sourceId: String,\n    $pictureURL: [String!],\n    $status: PlaceStatus!,\n  )"}, {"type": "query", "name": "LoggedInUserQuery", "content": "{\n    loggedInUser {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/places/NewPlace.js", "repo": "vecnazmaga_place-management"}}, {"type": "mutation", "name": "CreatePlace", "content": "{\n    createPlace(\n      placeName: $placeName\n      description: $description\n      createSide: $createSide\n      address: $address\n      addressStreet: $addressStreet\n      addressAreaDistrict: $addressAreaDistrict\n      addressCityTown: $addressCityTown\n      addressStateProvince: $addressStateProvince\n      addressCountry: $addressCountry\n      addressPostalCode: $addressPostalCode\n      locationLat: $locationLat\n      locationLong: $locationLong\n      source: $source\n      sourceId: $sourceId\n      pictureURL: $pictureURL\n      createdById: $createdById\n      status: $status\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "cdb853312129892fe6d7297e71df3e5fb2a9137e", "file": "src/places/NewPlace.js", "repo": "vecnazmaga_place-management"}, "arguments": "(\n    $placeName: String!,\n    $description: String,\n    $createSide: CreateSide!,\n    $address: String,\n    $addressStreet: String,\n    $addressAreaDistrict: String,\n    $addressCityTown: String,\n    $addressStateProvince: String,\n    $addressCountry: String,\n    $addressPostalCode: String,\n    $locationLat: Float,\n    $locationLong: Float,\n    $source: PlaceSource!,\n    $sourceId: String,\n    $pictureURL: [String!],\n    $createdById: ID,\n    $status: PlaceStatus!\n  )"}, {"type": "query", "name": "GetPost", "content": "{\n    post(id: $id, post_header: $post_header) {\n      id\n      post_header\n      post_body\n      short_description\n      thumnail\n      open_yn\n      series_id\n      released_at\n      tags\n      comments_count\n      series_posts {\n        series_id\n        series_name\n        post_id\n        post_header\n      }\n    }\n  }", "metadata": {"commit_hash": "985c3c6103b6fbdf208cc69007a81fc1cd62cd31", "file": "graphql/post.ts", "repo": "rlawnsxo131_devlog-client"}, "arguments": "($id: ID!, $post_header: String!)"}, {"type": "query", "name": "GetPosts", "content": "{\n    posts(tag: $tag) {\n      id\n      post_header\n      short_description\n      thumnail\n      open_yn\n      series_id\n      released_at\n      tags\n    }\n  }", "metadata": {"commit_hash": "985c3c6103b6fbdf208cc69007a81fc1cd62cd31", "file": "graphql/post.ts", "repo": "rlawnsxo131_devlog-client"}, "arguments": "($tag: String)"}, {"type": "query", "name": "GetComments", "content": "{\n    comments(post_id: $post_id) {\n      id\n      post_id\n      level\n      has_replies\n      reply_comment_id\n      deleted\n      writer\n      comment\n      created_at\n      updated_at\n      edited_at\n      replies {\n        id\n        post_id\n        level\n        has_replies\n        reply_comment_id\n        deleted\n        writer\n        comment\n        created_at\n        updated_at\n        edited_at\n        replies {\n          id\n          post_id\n          level\n          has_replies\n          reply_comment_id\n          deleted\n          writer\n          comment\n          created_at\n          updated_at\n          edited_at\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "985c3c6103b6fbdf208cc69007a81fc1cd62cd31", "file": "graphql/comment.ts", "repo": "rlawnsxo131_devlog-client"}, "arguments": "($post_id: ID!)"}, {"type": "mutation", "name": "RemoveComment", "content": "{\n    removeComment(comment_id: $comment_id)\n  }", "metadata": {"commit_hash": "985c3c6103b6fbdf208cc69007a81fc1cd62cd31", "file": "graphql/comment.ts", "repo": "rlawnsxo131_devlog-client"}, "arguments": "($comment_id: ID!)"}, {"type": "mutation", "name": "addRecipe", "content": "{\n    createRecipe(title: $title) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "e9993e4d62a7beeddd51eb9f9b9891683a682e73", "file": "apollo-client-demo/components/CreateRecipeForm.tsx", "repo": "nfactorial-incubator_2018-react-native"}, "arguments": "($title: String!)"}, {"type": "mutation", "name": "createTask", "content": "{\n    createTask(input: {title: $title, description: $description, version: 1, status: \"open\"}) {\n       ...TaskFields\n    }\n  }\n\n${TaskFragment}", "metadata": {"commit_hash": "3b9a94dfb9cecb604197dee1a0614d9b39aec46c", "file": "template/client/src/graphql/mutations/TaskMutation.ts", "repo": "aerogear_modern-appdev-workshop"}, "arguments": "($title: String!, $description: String)"}, {"type": "mutation", "name": "CreateUser", "content": "{\n    createUser(firstName: $firstName, lastName: $lastName, email: $email) {\n      id\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "cf7a3ac37afda95dcf803843b62b87229d2ec447", "file": "src/app/users/_common/stores/users.queries.ts", "repo": "codilime_mobx-in-react-scalable-state-management"}, "arguments": "(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n  )"}, {"type": "mutation", "name": "SkillForceImportServer", "content": "{\n    skillForceImportServer(\n      projectId: $projectId\n      type: $type\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/skillforce_import_server.js", "repo": "bump44_rf-online-gs-editor"}, "arguments": "(\n    $projectId: String!\n    $type: String!\n    $blocks: JSON\n    $importType: String\n  )"}, {"type": "mutation", "name": "MapSptUpdate", "content": "{\n    mapSptUpdate(id: $id, values: $values) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/mapspt_update.js", "repo": "bump44_rf-online-gs-editor"}, "arguments": "($id: String!, $values: JSON)"}, {"type": "mutation", "name": "StoreCopy", "content": "{\n    storeCopy(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/store_copy.js", "repo": "bump44_rf-online-gs-editor"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "StoreUpdate", "content": "{\n    storeUpdate(id: $id, values: $values) {\n      id\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/store_update.js", "repo": "bump44_rf-online-gs-editor"}, "arguments": "($id: String!, $values: JSON)"}, {"type": "mutation", "name": "MapBlockImportServer", "content": "{\n    mapBlockImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n      mapName: $mapName\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/mapblock_import_server.js", "repo": "bump44_rf-online-gs-editor"}, "arguments": "(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n    $mapName: String!\n  )"}, {"type": "mutation", "name": "BoxItemOutImportServer", "content": "{\n    boxItemOutImportServer(\n      projectId: $projectId\n      blocks: $blocks\n      importType: $importType\n    ) {\n      total\n    }\n  }", "metadata": {"commit_hash": "400944160e673aeba0631bfea123b25027d19fc0", "file": "src/apollo/mutations/boxItemOut_import_server.js", "repo": "bump44_rf-online-gs-editor"}, "arguments": "(\n    $projectId: String!\n    $blocks: JSON\n    $importType: String\n  )"}, {"type": "query", "name": "GetUser", "content": "{\n  users{\n    first_name\n    last_name\n    gender\n    id\n    date_of_birth\n  }\n}", "metadata": {"commit_hash": "ce43433d771a9c0d484f1d8e9f002676444d8055", "file": "src/components/PersonalInformationEdit.js", "repo": "ghmeec_Mental-Health-Therapy-2020"}}, {"type": "query", "name": "Server", "content": "{\n  server {\n    title\n  }\n}", "metadata": {"commit_hash": "bb65ac9bd047c336c18bcb23bdb496aebd5ecc98", "file": "src/graphql/server.js", "repo": "qiujun8023_gallery-client"}}, {"type": "query", "name": "getMessagesByGroup", "content": "{\n            getMessagesByGroup(username: $username, groupId: $chatId, userToken: $userToken) {\n                key\n                value{\n                    text\n                    timestamp\n                    user{\n                        username\n                        profilePicture\n                    }\n                    group{\n                        individual\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $chatId: Int!, $userToken: String!)"}, {"type": "mutation", "name": "createIndividualGroup", "content": "{\n            createIndividualGroup(username: $username, users: $users, userToken: $userToken) {\n                group{\n                    id\n                    name\n                    individual\n                    users {\n                        username\n                        profilePicture\n                    }\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $users: [String!]!, $userToken: String!)"}, {"type": "query", "name": "getInappropiateLanguage", "content": "{\n            getInappropiateLanguage(username: $username, userToken: $userToken) {\n                word\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/chatsAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $userToken: String!)"}, {"type": "query", "name": "getAllTag", "content": "{\n            getAllTag(userToken: $userToken){\n                id\n                name\n                color\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/tagsAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($userToken: String!)"}, {"type": "query", "name": "getTagsByType", "content": "{\n            getTagsByType(tagType: $type, userToken: $userToken){\n                id\n                name\n                color\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/tagsAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($type: String!, $userToken: String!)"}, {"type": "query", "name": "getPetitions", "content": "{\n        getPetitionsByStatusAndUsernameAndDates(username: $username, status: $status, startDate: $startDate, endDate: $endDate, userToken: $userToken){\n          id\n          status\n          message\n          property{\n            maxCapacity\n            id\n            title\n          }\n          requester{\n            firstName\n            lastName\n            averageRating\n            username\n            profilePicture\n          }\n        }\n      }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertyRequestsAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $status: String, $startDate: String, $endDate: String, $userToken: String!)"}, {"type": "mutation", "name": "createUser", "content": "{\n                    createUser (username: $username, password: $password, firstName: $firstName, lastName: $lastName, email: $email, roles: $roles, genre: $genre, code: $code){\n                        user{\n                            username\n                        }\n                    }\n\n                    tokenAuth(username: $username, password: $password){\n                        token\n                        user{\n                          username\n                          roles{\n                            role\n                          }\n                          userpreferences{\n                            inappropiateLanguage\n                          }\n                        }\n                      }\n                }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $password: String!, $firstName: String!, $lastName: String!, $email: String!, $roles: String!, $genre: String!, $code: String)"}, {"type": "query", "name": "getUserByUsername", "content": "{\n                getUserByUsername(username: $username){\n                    username\n                    profilePicture\n    \t\t\t\tflatterCoins\n                }\n            }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!)"}, {"type": "query", "name": "getPublicProfileByUsername", "content": "{\n                getUserByUsername(username: $username){\n                    firstName\n                    lastName\n                    profilePicture\n                    age\n                    biography\n                    profession\n                    birthday\n                    averageRating\n                    roles{\n                        role\n                    }\n                    tags{\n                        name\n                        color\n                    }\n                    valuedReviews{\n                        text\n                        evaluatorUser{\n                            username\n                            firstName\n                            lastName\n                            profilePicture\n                            genre\n                        }\n                        rating\n                        relationship\n                    }\n                }\n                getContractByUsername(username: $username, userToken: $userToken){\n                    plan {\n                        chatCreation\n                        viewSelfProfileOpinions\n                        tagsNumber\n                        visitsNumber\n                    }\n                }\n            }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $userToken: String!)"}, {"type": "mutation", "name": "changePassword", "content": "{\n            changeUserPassword(username: $username, newPassword: $newPassword, oldPassword: $oldPassword, userToken: $userToken){\n                user{\n                    username\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $newPassword: String!, $oldPassword: String!, $userToken: String!)"}, {"type": "query", "name": "getRecomendedUsers", "content": "{\n            getUsersRecommendations(username: $username, userToken: $userToken){\n                id\n                username\n                profilePicture\n                firstName\n                lastName\n                profession\n                averageRating\n                tags{\n                    name\n                    color\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $userToken: String!)"}, {"type": "query", "name": "getAllContractsByUsername", "content": "{\n            getAllContractsByUsername(username: $username, userToken: $userToken){\n                id\n                initialDate\n                endDate\n                obsolete\n                choices\n                plan {\n                    planType\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $userToken: String!)"}, {"type": "mutation", "name": "changeContract", "content": "{\n            changeContract(numDaysSelected: $numDaysSelected, planType: $planType, token: $token, username: $username) {\n                contract {\n                    endDate\n                    plan{\n                        visitsNumber\n                    }\n                }         \n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($numDaysSelected: Int!, $planType: String!, $token: String!, $username: String!)"}, {"type": "mutation", "name": "editUserFlatterCoins", "content": "{\n            editUserFlatterCoins(username: $username, token: $token, flatterCoins: $flatterCoins){\n                user{\n                    username\n                    flatterCoins\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $token: String!, $flatterCoins: Int!)"}, {"type": "query", "name": "getReferralProgramController", "content": "{\n            getReferralProgramController{\n                maxDays\n                maxUsers\n                quantity\n                quantityReferred\n                isDisabled\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/usersAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "mutation", "name": "createProperty", "content": "{\n      createProperty(\n        title: $title\n        description: $description\n        dimensions: $dimensions\n        ownerUsername: $ownerUsername\n        location: $location\n        bedroomsNumber: $bedroomsNumber\n        bathroomsNumber: $bathroomsNumber\n        province: $province\n        municipality: $municipality\n        price: $price\n        images: $images\n        maxCapacity: $maxCapacity\n        tags: $tags\n        userToken: $userToken\n      ) {\n        property {\n          title\n          description\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "(\n      $title: String!\n      $description: String!\n      $province: String!\n      $bathroomsNumber: Int!\n      $bedroomsNumber: Int!\n      $dimensions: Int!\n      $location: String!\n      $municipality: String!\n      $ownerUsername: String!\n      $price: Float!\n      $images: [String]\n      $maxCapacity: Int!\n      $tags: [String]!\n      $userToken: String!\n    )"}, {"type": "mutation", "name": "deletePropertyById", "content": "{\n      deleteProperty(propertyId: $propertyId, userToken: $userToken) {\n        property {\n          title\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($propertyId: Int!, $userToken: String!)"}, {"type": "mutation", "name": "makePropertyOutstanding", "content": "{\n      makePropertyOutstanding(propertyId: $propertyId, userToken: $userToken) {\n        property {\n          isOutstanding\n          title\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($propertyId: Int!, $userToken: String!)"}, {"type": "query", "name": "getOutstanding", "content": "{\n      getOutstandingProperties(userToken: $userToken) {\n        id\n        owner {\n          firstName\n          lastName\n          profilePicture\n        }\n        images {\n          image\n        }\n      }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($userToken: String!)"}, {"type": "query", "name": "getPropertyRequestsByUsername", "content": "{\n            getPetitionByRequesterToProperty(username: $requesterUsername, propertyId: $propertyId, userToken: $userToken) {\n                id\n                status\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($requesterUsername: String!, $propertyId: Int!, $userToken: String!)"}, {"type": "mutation", "name": "createPropertyRequest", "content": "{\n            createPetition(message: $message, requesterUsername: $requesterUsername, propertyId: $propertyId, userToken: $userToken) {\n                petition {\n                    status\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($message: String!, $requesterUsername: String!, $propertyId: Int!, $userToken: String!)"}, {"type": "mutation", "name": "removePropertyRequest", "content": "{\n            deletePetition(petitionId: $requestId, userToken: $userToken) {\n                petition {\n                    status\n                }\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($requestId: Int!, $userToken: String!)"}, {"type": "mutation", "name": "addUsersToFavouriteProperty", "content": "{\n        addUsersToFavouriteProperty(username: $username, propertyId: $propertyId, userToken: $userToken){\n            user{\n                username\n            }\n        }\n    }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/propertiesAPI.js", "repo": "ISPP-G10_flatter"}, "arguments": "($username: String!, $propertyId: Int!, $userToken: String!)"}, {"type": "query", "name": "getAllProvinces", "content": "{\n            getProvinces(name: \"\"){\n                name\n            }\n        }", "metadata": {"commit_hash": "4c3044640863aed1b9d74dd1c21e8deb8db2ac41", "file": "client/src/api/provincesAPI.js", "repo": "ISPP-G10_flatter"}}, {"type": "query", "name": "zatSearch", "content": "{\n    adminUsers(search: $search, limit: 5) {\n      ...UsersFragment\n    }\n    mailbox(first: 5, filters: { email: $search }) {\n      ...MailsFragment\n    }\n  }\n\n  ${UsersFragments}\n  ${MailsFragments}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "pages/zat.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($search: String!)"}, {"type": "query", "name": "me", "content": "{\n    me {\n      id\n      name\n      firstName\n      lastName\n      email\n      roles\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "lib/withMe.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "updatePostfinancePayment", "content": "{\n    updatePostfinancePayment(\n      pfpId: $id\n      mitteilung: $message\n    ) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "(\n    $id: ID!\n    $message: String!\n  )"}, {"type": "mutation", "name": "importPostfinanceCSV", "content": "{\n    importPostfinanceCSV(csv: $csv)\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($csv: String!)"}, {"type": "mutation", "name": "hidePostfinancePayment", "content": "{\n    hidePostfinancePayment(id: $id) {\n      id\n      hidden\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/PostfinancePayments/List/index.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "payments", "content": "{\n    payments(\n      limit: $limit\n      offset: $offset\n      orderBy: $orderBy\n      dateRangeFilter: $dateRange\n      stringArrayFilter: $stringArray\n      search: $search\n    ) {\n      count\n      items {\n        id\n        method\n        dueDate\n        paperInvoice\n        total\n        status\n        hrid\n        user {\n          id\n          name\n          firstName\n          lastName\n          address {\n            id\n            name\n            line1\n            line2\n            postalCode\n            city\n            country\n          }\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Payments/List/index.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "(\n    $limit: Int!\n    $offset: Int\n    $orderBy: OrderBy\n    $search: String\n    $dateRange: DateRangeFilter\n    $stringArray: StringArrayFilter\n  )"}, {"type": "query", "name": "paymentsCSV", "content": "{\n    paymentsCSV(companyName: $companyName)\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Payments/List/CsvDownloader.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($companyName: String!)"}, {"type": "query", "name": "users", "content": "{\n    users: adminUsers(limit: 5, search: $search) {\n      count\n      items {\n        id\n        name\n        email\n        firstName\n        lastName\n      }\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Form/SearchUser.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($search: String)"}, {"type": "query", "name": "user", "content": "{\n    user(slug: $id) {\n      id\n      roles\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Roles.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($id: String)"}, {"type": "mutation", "name": "addUserToRole", "content": "{\n    addUserToRole(userId: $userId, role: $role) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Roles.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($userId: ID!, $role: String!)"}, {"type": "query", "name": "user", "content": "{\n  user(slug: $id) {\n    id\n    accessGrants(withPast: true) {\n      id\n      status\n      createdAt\n      beginBefore\n      voucherCode\n      beginAt\n      endAt\n      revokedAt\n      invalidatedAt\n      granter {\n        id\n        email\n        name\n      }\n      campaign {\n        id\n        title\n        endAt\n      }\n      events {\n        createdAt\n        event\n      }\n    }\n    accessCampaigns(withPast: true) {\n      id\n      title\n      endAt\n      slots {\n        total\n        free\n        used\n      }\n      grants(withRevoked: true, withInvalidated: true) {\n        id\n        status\n        createdAt\n        beginBefore\n        voucherCode\n        beginAt\n        endAt\n        revokedAt\n        invalidatedAt\n        email\n        recipient {\n          id\n          email\n          name\n        }\n        events {\n          createdAt\n          event\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Access.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($id: String)"}, {"type": "mutation", "name": "clearSession", "content": "{\n    clearSession(\n      sessionId: $sessionId\n      userId: $userId\n    )\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Sessions.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "(\n    $sessionId: ID!\n    $userId: ID!\n  )"}, {"type": "mutation", "name": "updateAdminNotes", "content": "{\n    updateAdminNotes(\n      notes: $notes\n      userId: $userId\n    ) {\n      id\n      adminNotes\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/AdminNotes.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "(\n    $notes: String\n    $userId: ID!\n  )"}, {"type": "query", "name": "getAuthSettings", "content": "{\n    user(slug: $userId) {\n      id\n      ...FirstFactors\n    }\n  }\n  ${firstFactorFragment}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/AuthSettings.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($userId: String)"}, {"type": "query", "name": "newsletterSubscriptions", "content": "{\n    user(slug: $id) {\n      id\n      newsletterSettings {\n        id\n        status\n        subscriptions {\n          id\n          name\n          subscribed\n          isEligible\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/NewsletterSubscriptions.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($id: String)"}, {"type": "query", "name": "getUserMailbox", "content": "{\n    user(slug: $id) {\n      id\n      email\n      mailbox(first: $first, after: $after) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          ...MailboxRecordFragment\n        }\n      }\n    }\n  }\n\n  ${fragments.record}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Mailbox.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($id: String, $first: Int, $after: String)"}, {"type": "mutation", "name": "movePledge", "content": "{\n    movePledge(pledgeId: $pledgeId, userId: $userId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Pledges/MovePledge.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($pledgeId: ID!, $userId: ID!)"}, {"type": "mutation", "name": "resolvePledgeToPayment", "content": "{\n    resolvePledgeToPayment(pledgeId: $pledgeId, reason: $reason) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Pledges/ResolvePledgeToPayment.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($pledgeId: ID!, $reason: String!)"}, {"type": "mutation", "name": "mergeUsers", "content": "{\n    mergeUsers(\n      sourceUserId: $sourceId\n      targetUserId: $targetId\n    ) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Merge/index.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($sourceId: ID!, $targetId: ID!)"}, {"type": "query", "name": "actions", "content": "{\n    user(slug: $slug) {\n      id\n      deletedAt\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Actions/index.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($slug: String)"}, {"type": "mutation", "name": "resetMembership", "content": "{\n    resetMembership(id: $membershipId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/ResetMembership.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($membershipId: ID!)"}, {"type": "mutation", "name": "moveMembership", "content": "{\n    moveMembership(membershipId: $membershipId, userId: $userId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/MoveMembership.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($membershipId: ID!, $userId: ID!)"}, {"type": "query", "name": "cancellationCategories", "content": "{\n    cancellationCategories(showMore: true) {\n      type\n      label\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Memberships/CancelMembership.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "mutation", "name": "verifyCredential", "content": "{\n    verifyCredential(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Dialog/Credentials.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "removeCredentialVerification", "content": "{\n    removeCredentialVerification(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Users/Dialog/Credentials.js", "repo": "orbiting_republik-admin-frontend"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "signOut", "content": "{\n  signOut\n}", "metadata": {"commit_hash": "4feb285962d3aff7f52f7872618853c6a556884a", "file": "components/Auth/SignOut.js", "repo": "orbiting_republik-admin-frontend"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fieldFragment\n      }\n\n      fragment fieldFragment on Field {\n        foo @live\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/directives.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "nameOfQuery", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/getFromAST.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "nameOfMutation", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/getFromAST.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/getFromAST.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($first: Int, $second: String)"}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/getFromAST.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($first: Int = 1, $second: String!)"}, {"type": "query", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/fragments.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Simple", "content": "{\n        field {\n          child\n          foo\n        }\n        network\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Simple", "content": "{\n        network\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Simple", "content": "{\n        ...FragmentSpread\n        property\n        ...ValidSpread\n      }\n\n      fragment FragmentSpread on Thing {\n        foo\n        bar\n        baz\n      }\n\n      fragment ValidSpread on Thing {\n        oof\n        rab\n        zab\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Simple", "content": "{\n        networkField\n        field @client {\n          ...ClientFragment\n        }\n      }\n\n      fragment ClientFragment on Thing {\n        otherField\n        bar\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Simple", "content": "{\n        field\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Simple", "content": "{\n        field\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        ...inDirection\n      }\n\n      fragment inDirection on Thing {\n        field @storage\n        bar\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        ...inDirection\n      }\n\n      fragment inDirection on Thing {\n        bar\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n            __typename\n          }\n          __typename\n        }\n      }\n\n      fragment friendFields on User {\n        firstName\n        lastName\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Feed", "content": "{\n        # Eventually move this into a no fetch query right on the entry\n        # since we literally just need this info to determine whether to\n        # show upvote/downvote buttons\n        currentUser {\n          login\n        }\n        feed(type: $type) {\n          createdAt\n          score\n          commentCount\n          id\n          postedBy {\n            login\n            html_url\n          }\n          repository {\n            name\n            full_name\n            description\n            html_url\n            stargazers_count\n            open_issues_count\n            created_at\n            owner {\n              avatar_url\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($type: FeedType!)"}, {"type": "query", "name": "Author", "content": "{\n        name\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/utilities/graphql/__tests__/transform.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/ws/__tests__/webSocketLink.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Foo", "content": "{\n      foo {\n        bar\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/error/__tests__/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "SampleQuery", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/http/__tests__/selectHttpOptionsAndBody.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SampleMutation", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/http/__tests__/HttpLink.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "SampleQuery", "content": "{\n    stub {\n      id\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/link/http/__tests__/selectURI.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/parser/__tests__/parser.test.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/parser/__tests__/parser.test.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "One", "content": "{\n        user(t: $t) {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/parser/__tests__/parser.test.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($t: String!)"}, {"type": "mutation", "name": "One", "content": "{\n        user(t: $t) {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/parser/__tests__/parser.test.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($t: String!)"}, {"type": "subscription", "name": "One", "content": "{\n        user(t: $t) {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/parser/__tests__/parser.test.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($t: String!)"}, {"type": "query", "name": "UsersQuery", "content": "{\n          users {\n            id\n            name\n            posts(page: $page) {\n              title\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($page: Int)"}, {"type": "query", "name": "MixedQuery", "content": "{\n          counter @client(always: true)\n          name\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "QueryWithVariablesVar", "content": "{\n            getVars(variables: $variables) {\n              __typename\n              name\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/ObservableQuery.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($variables: [String!])"}, {"type": "query", "name": "people", "content": "{\n            allPeople(first: 1) {\n              people {\n                name\n              }\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "primeQuery", "content": "{\n        luke: people_one(id: 1) {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "complexQuery", "content": "{\n        luke: people_one(id: 1) {\n          name\n        }\n        vader: people_one(id: 4) {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(id: \"5\") {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "B", "content": "{ info { b } }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "queryA", "content": "{\n        person(id: \"abc\") {\n          __typename\n          id\n          firstName\n          lastName\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "queryB", "content": "{\n        person(id: \"abc\") {\n          __typename\n          id\n          lastName\n          age\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "GetAuthor", "content": "{\n          author {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "GetAuthor2", "content": "{\n          author2 {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\", id: $id) {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "One", "content": "{\n          one\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Two", "content": "{\n          two\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Four", "content": "{\n          four\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/core/__tests__/QueryManager/index.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Book", "content": "{\n        book(isbn: $isbn) {\n          title\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/entityStore.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($isbn: string)"}, {"type": "query", "name": "GetThread", "content": "{\n        thread {\n          tid\n          comments(offset: $offset, limit: $limit) {\n            id\n            text\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/cache.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($offset: Int, $limit: Int)"}, {"type": "query", "name": "someBigQuery", "content": "{\n        id\n        stringField(arg: $stringArg)\n        numberField(intArg: $intArg, floatArg: $floatArg)\n        nullField\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "(\n        $stringArg: String = \"This is a default string!\"\n        $intArg: Int\n        $floatArg: Float\n      )"}, {"type": "mutation", "name": "mut", "content": "{\n            mut(inline: [1, 2], variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($in: Array!)"}, {"type": "mutation", "name": "mut", "content": "{\n            mut(inline: true, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($in: Boolean!)"}, {"type": "query", "name": "ABCQuery", "content": "{\n        __typename\n        a {\n          __typename\n          id\n          ...SharedFragment\n          b {\n            __typename\n            c {\n              __typename\n              title\n              titleSize\n            }\n          }\n        }\n      }\n      fragment SharedFragment on AShared {\n        __typename\n        b {\n          __typename\n          id\n          c {\n            __typename\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "LazyLoad", "content": "{\n          id\n          expensive @defer\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/writeToStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "foo", "content": "{\n            ...root\n          }\n\n          fragment root on Query {\n            nestedObj {\n              innerArray {\n                id\n                someField\n              }\n            }\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/diffAgainstStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getMessageList", "content": "{\n          # This field needs a selection set because its value is an array\n          # of non-scalar objects.\n          messageList\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/diffAgainstStore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "AuthorWritings", "content": "{\n          author {\n            name\n            writings(b: 4, type: $type, unrelated: \"oyez\") {\n              ... on Book {\n                title\n                isbn\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($type: String)"}, {"type": "query", "name": "ArtsySearch", "content": "{\n          search(\n            query: $query,\n            after: $after, first: $first,\n            before: $before, last: $last,\n          ) {\n            edges {\n              __typename\n              node {\n                __typename\n                displayLabel\n                ... on Artist { __typename href bio }\n                ... on SearchableItem { __typename description }\n              }\n            }\n            pageInfo {\n              __typename\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n            }\n            totalCount\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "(\n          $query: String!,\n          $after: String, $first: Int,\n          $before: String, $last: Int,\n        )"}, {"type": "query", "name": "GetName", "content": "{\n          viewer {\n            name\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Items", "content": "{\n        __typename\n        items {\n          id\n          query {\n            id\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/cache/inmemory/__tests__/policies.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "nestedData", "content": "{\n          people {\n            id\n            friends {\n              id\n              type\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/ApolloClient.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "aQuery", "content": "{\n      entry {\n        value\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/subscribeToMore.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "test1", "content": "{\n        test(x: $x)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/client.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($x: String)"}, {"type": "query", "name": "books", "content": "{\n        books(skip: 0, limit: 2, order: $order) {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/client.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($order: string)"}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          __typename\n          id\n          todos {\n            id\n            text\n            completed\n            __typename\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo(text: $text) {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($text: String)"}, {"type": "mutation", "name": "submitComment", "content": "{\n      submitComment(\n        repoFullName: $repoFullName\n        commentContent: $commentContent\n      ) {\n        postedBy {\n          login\n          html_url\n        }\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/optimistic.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "query", "name": "A", "content": "{ a }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/refetchQueries.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "B", "content": "{ b }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/refetchQueries.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "DELAYED", "content": "{ d e l a y e d }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/refetchQueries.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName) {\n        comments(start: $start, limit: $limit) {\n          text\n          __typename\n        }\n        __typename\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/fetchMore.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($repoName: String!, $start: Int!, $limit: Int!)"}, {"type": "query", "name": "NewComments", "content": "{\n      comments(start: $start, limit: $limit) {\n        text\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/fetchMore.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($start: Int!, $limit: Int!)"}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName, start: $start, limit: $limit)\n        @connection(key: \"repoName\") {\n        comments {\n          text\n        }\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/fetchMore.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($repoName: String!, $start: Int!, $limit: Int!)"}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName, start: $start, limit: $limit) {\n        comments {\n          text\n          __typename\n        }\n        __typename\n      }\n    }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/fetchMore.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($repoName: String!, $start: Int!, $limit: Int!)"}, {"type": "mutation", "name": "upload", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($signature: String!)"}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          name\n          # missing field: description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "DoSomething", "content": "{\n        doSomething {\n          time\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Echo", "content": "{\n        echo(message: $message)\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/mutationResults.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($message: String)"}, {"type": "subscription", "name": "UserInfo", "content": "{\n          user(name: $name) {\n            name\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/graphqlSubscriptions.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($name: String = \"Changping Chen\")"}, {"type": "query", "name": "author", "content": "{\n          author {\n            name\n            stats {\n              totalPosts\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Test", "content": "{\n        fie: foo @client {\n          fum: bar\n        }\n        baz: bar {\n          foo\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "UserDetails", "content": "{\n          name @client\n          isLoggedIn @client(always: true)\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "IsUserLoggedIn", "content": "{\n          isUserLoggedIn @client(always: true)\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Author", "content": "{\n            name\n            isLoggedIn @client(always: true)\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Author", "content": "{\n            name\n            isLoggedIn @client\n          }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/resolvers.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "currentAuthorPostCount", "content": "{\n          appContainer @client {\n            systemDetails {\n              currentAuthor {\n                name\n                authorId @export(as: \"authorId\")\n              }\n            }\n          }\n          postCount(authorId: $authorId)\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($authorId: Int!)"}, {"type": "query", "name": "postRequiringReview", "content": "{\n          postRequiringReview {\n            id\n            title\n            loggedInReviewerId @client @export(as: \"reviewerId\")\n          }\n          reviewerDetails(reviewerId: $reviewerId) {\n            name\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($reviewerId: Int!)"}, {"type": "query", "name": "postRequiringReview", "content": "{\n          postRequiringReview {\n            id\n            title\n            currentReviewer @client {\n              id @export(as: \"reviewerId\")\n            }\n          }\n          reviewerDetails(reviewerId: $reviewerId) {\n            name\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($reviewerId: Int!)"}, {"type": "query", "name": "GetListItems", "content": "{\n        lessonCollection(where: $where) {\n          items {\n            title\n            slug\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($where: LessonFilter)"}, {"type": "query", "name": "DoubleWidgets", "content": "{\n          widgetCount @client @export(as: \"widgetCount\")\n          doubleWidgets(widgetCount: $widgetCount) @client\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/export.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($widgetCount: Int!)"}, {"type": "query", "name": "FetchInitialData", "content": "{\n        serverData {\n          id\n          title\n        }\n        selectedItemId @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "Select", "content": "{\n        select(itemId: $id) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "GetClientData", "content": "{\n        clientEntity(id: $id) @client(always: true) {\n          id\n          title\n          titleLength @client(always: true)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($id: ID)"}, {"type": "query", "name": "GetCount", "content": "{\n        count @client\n        lastCount # stored in db on server\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "GetTasks", "content": "{\n        todos @client {\n          message\n          title\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}}, {"type": "mutation", "name": "SelectItem", "content": "{\n        touchIllegally(id: $id) @client\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/__tests__/local-state/general.ts", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: 1) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/shared-operations.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/client-option.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($first: Int)"}, {"type": "query", "name": "data", "content": "{\n          ship(id: $id) {\n            name\n            films {\n              id\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/ssr/server.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "data", "content": "{\n          allShips {\n            id\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/ssr/server.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "remount", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/queries/loading.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($first: Int)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(cursor: $cursor) {\n          cursor\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/queries/api.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($cursor: Int)"}, {"type": "query", "name": "Q", "content": "{\n        books {\n          name\n          __typename\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/queries/lifecycle.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "getMini", "content": "{\n        mini(id: $id) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "todos", "content": "{\n        todo_list {\n          id\n          title\n          tasks {\n            id\n            text\n            completed\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/recycled-queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "todos", "content": "{\n        todo_list(id: $id) {\n          id\n          title\n          tasks {\n            id\n            text\n            completed\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/mutations/recycled-queries.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($id: ID!)"}, {"type": "subscription", "name": "UserInfo", "content": "{\n        user(name: $name) {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hoc/__tests__/subscriptions/subscriptions.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($name: String)"}, {"type": "query", "name": "getTodos", "content": "{\n        todos {\n          id\n          description\n          priority\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useMutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "car", "content": "{\n        car {\n          id\n          make\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useLazyQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: 1) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "Things", "content": "{\n          allThings {\n            thing {\n              description\n            }\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "AllCars", "content": "{\n          cars {\n            id\n            make\n            model\n          }\n        }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/hooks/__tests__/useQuery.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "UserInfo", "content": "{\n    user {\n      name\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Subscription.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "HeroInfo", "content": "{\n        hero {\n          name\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Subscription.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "people", "content": "{\n    allPeople(first: 1) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "subscription", "name": "onCommentAdded", "content": "{\n        commentAdded(repoFullName: $repoFullName) {\n          id\n          content\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($repoFullName: String!)"}, {"type": "query", "name": "somethingelse", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Query.test.tsx", "repo": "TopDeveloper705_apollo-client"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "a3e46f882047e969bfc5e2c91d28fecb76c44a2a", "file": "src/react/components/__tests__/client/Mutation.test.tsx", "repo": "TopDeveloper705_apollo-client"}, "arguments": "($first: Int)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(email: $email, password: $hash) {\n      code\n      token\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}, "arguments": "($email: String!, $hash: String!)"}, {"type": "mutation", "name": "Logout", "content": "{\n    logout {\n      code\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "query", "name": "Me", "content": "{\n    me {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "query", "name": "UserBuilds", "content": "{\n    userBuilds {\n      id\n      title\n      cores\n      tags\n      cover\n      desc\n      avatars {\n        avatarId\n        level\n        promoteLevel\n        talentLevel\n        attackLevel\n        eLevel\n        qLevel\n        artifacts {\n          typeId\n          level\n          attrs {\n            type\n            value\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}}, {"type": "mutation", "name": "SetUserBuild", "content": "{\n    setUserBuild(data: $data) {\n      id\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}, "arguments": "($data: UserBuildInput!)"}, {"type": "mutation", "name": "RemoveUserWeapon", "content": "{\n    removeUserWeapon(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "9160be4e9ded2840f8d4a10cc5d14a28fc6a9fd7", "file": "api/generated/graphql.ts", "repo": "pa001024_genshin-mirror"}, "arguments": "($id: String!)"}, {"type": "query", "name": "me", "content": "{\n          me {\n            id\n            username\n            roles\n          }\n        }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/app.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "mutation", "name": "SignUp", "content": "{\n            signUp(input: $input) {\n              id\n              username\n            }\n          }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/views/sign-up/sign-up.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}, "arguments": "($input: CreateAccountInput!)"}, {"type": "query", "name": "tradeData", "content": "{\n    trades(searchInput: $searchInput) {\n      buyItemPrice {\n        id\n        unitPrice\n        type\n      }\n      sellItemPrice {\n        id\n        unitPrice\n        type\n      }\n      item {\n        id\n        name\n        ... on Commodity {\n          commodityCategory {\n            id\n            name\n          }\n        }\n      }\n      startLocation {\n        id\n        name\n        type {\n          id\n          name\n        }\n        parentLocation {\n          id\n          name\n        }\n      }\n      endLocation {\n        id\n        name\n        type {\n          id\n          name\n        }\n        parentLocation {\n          id\n          name\n        }\n      }\n      profit\n      margin\n      scanTime\n    }\n  }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/views/trading/trading.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}, "arguments": "($searchInput: TradeSearchInput)"}, {"type": "query", "name": "gameVersions", "content": "{\n          gameVersions {\n            id\n            identifier\n          }\n        }", "metadata": {"commit_hash": "ece94fef8cc1056146e2687e83c4495a159d5e3e", "file": "src/components/create-commodity/create-commodity.ts", "repo": "Shinigami92_star-citizen-trade-market-frontend"}}, {"type": "query", "name": "searchPlugin", "content": "{\n        search @pdbPlugin @search(query: \"bob\", fields: [\"name\"]) {\n          rows {\n            id\n            score\n          }\n          total_rows\n        }\n      }", "metadata": {"commit_hash": "0984105b45bada32b8c0b0ac70a6847570781221", "file": "src/resolvers/queries/plugin/plugin.spec.ts", "repo": "mattjennings_apollo-link-pouch"}}, {"type": "query", "name": "getDoc", "content": "{\n        doc @pdbGet(id: \"conflict\", conflicts: true) {\n          _id\n          _rev\n          _conflicts\n          name\n        }\n      }", "metadata": {"commit_hash": "0984105b45bada32b8c0b0ac70a6847570781221", "file": "src/resolvers/queries/get/get.spec.ts", "repo": "mattjennings_apollo-link-pouch"}}, {"type": "mutation", "name": "createCard", "content": "{\n  createCard\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "CreateTransaction", "content": "{\n  createTransaction(currency: $currency)\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}, "arguments": "($currency: String!)"}, {"type": "mutation", "name": "DeleteAccount", "content": "{\n  deleteAccount(currency: $currency)\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}, "arguments": "($currency: String!)"}, {"type": "mutation", "name": "DestroyAccount", "content": "{\n  destroyAccount\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}}, {"type": "mutation", "name": "Exchange", "content": "{\n  exchange(selectedAccountCurrency: $selectedAccountCurrency, toAccountCurrency: $toAccountCurrency, amount: $amount) {\n    account {\n      id\n      balance\n    }\n    message\n  }\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}, "arguments": "($selectedAccountCurrency: String!, $toAccountCurrency: String!, $amount: Float!)"}, {"type": "mutation", "name": "UpdatePassword", "content": "{\n  updatePassword(oldPassword: $oldPassword, newPassword: $newPassword)\n}", "metadata": {"commit_hash": "4bfa51443e77b2933972eb55a253d493c5c322a2", "file": "client/src/generated/graphql.tsx", "repo": "elitedev201_Bank-app"}, "arguments": "($oldPassword: String!, $newPassword: String!)"}, {"type": "query", "name": "Deathwish", "content": "{\n    deathwish(id: $id) {\n      id\n      type\n      title\n      description\n      cost\n      recipients\n      owner {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/graphql/queries/index.ts", "repo": "aaronmcadam_deathwish"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "CreateDeathwish", "content": "{\n    createDeathwish(input: $input) {\n      deathwish {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/graphql/mutations/index.ts", "repo": "aaronmcadam_deathwish"}, "arguments": "($input: CreateDeathwishInput!)"}, {"type": "mutation", "name": "CreateDeathwish", "content": "{\n  createDeathwish(input: $input) {\n    deathwish {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}, "arguments": "($input: CreateDeathwishInput!)"}, {"type": "mutation", "name": "DeleteDeathwish", "content": "{\n  deleteDeathwish(input: $input) {\n    deathwish {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}, "arguments": "($input: DeleteDeathwishInput!)"}, {"type": "query", "name": "CurrentUser", "content": "{\n  me @client {\n    id\n    email\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}}, {"type": "query", "name": "Deathwishes", "content": "{\n  deathwishes(ownerEmail: $ownerEmail) {\n    id\n    type\n    title\n    description\n    cost\n    recipients\n    owner {\n      id\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}, "arguments": "($ownerEmail: String!)"}, {"type": "query", "name": "Deathwish", "content": "{\n  deathwish(id: $id) {\n    id\n    type\n    title\n    description\n    cost\n    recipients\n    owner {\n      id\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "4522feaa15bf4a381fa2843d613bf903d6c24855", "file": "packages/deathwish-client/src/types/graphql.tsx", "repo": "aaronmcadam_deathwish"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "DeleteUser", "content": "{\n        deleteUser(input: $input, condition: $condition) {\n            id\n            cognitoId\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAdminAddNewUser/src/deleteUser.js", "repo": "platelet-app_platelet"}, "arguments": "(\n        $input: DeleteUserInput!\n        $condition: ModelUserConditionInput\n    )"}, {"type": "query", "name": "ListTenants", "content": "{\n        listTenants(filter: $filter, limit: $limit, nextToken: $nextToken) {\n            items {\n                id\n                name\n                referenceIdentifier\n                createdAt\n                updatedAt\n                _version\n                _deleted\n                _lastChangedAt\n            }\n            nextToken\n            startedAt\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/listTenants.js", "repo": "platelet-app_platelet"}, "arguments": "(\n        $filter: ModelTenantFilterInput\n        $limit: Int\n        $nextToken: String\n    )"}, {"type": "mutation", "name": "DeleteTenant", "content": "{\n        deleteTenant(input: $input, condition: $condition) {\n            id\n            name\n            referenceIdentifier\n            admin {\n                id\n                username\n                cognitoId\n                tenantId\n                contact {\n                    name\n                    telephoneNumber\n                    mobileNumber\n                    emailAddress\n                    ward\n                    line1\n                    line2\n                    line3\n                    town\n                    county\n                    state\n                    country\n                    postcode\n                    what3words\n                }\n                displayName\n                name\n                roles\n                dateOfBirth\n                riderResponsibility\n                profilePictureThumbnailURL\n                profilePicture {\n                    bucket\n                    key\n                    region\n                }\n                profilePictureThumbnail {\n                    bucket\n                    key\n                    region\n                }\n                comments {\n                    nextToken\n                    startedAt\n                }\n                assignments {\n                    nextToken\n                    startedAt\n                }\n                createdTasks {\n                    nextToken\n                    startedAt\n                }\n                active\n                createdAt\n                updatedAt\n                _version\n                _deleted\n                _lastChangedAt\n            }\n            createdAt\n            updatedAt\n            _version\n            _deleted\n            _lastChangedAt\n            tenantAdminId\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/deleteTenant.js", "repo": "platelet-app_platelet"}, "arguments": "(\n        $input: DeleteTenantInput!\n        $condition: ModelTenantConditionInput\n    )"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n        updateUser(input: $input, condition: $condition) {\n            id\n            cognitoId\n            tenantId\n            _version\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAddNewTenant/src/updateUser.js", "repo": "platelet-app_platelet"}, "arguments": "(\n        $input: UpdateUserInput!\n        $condition: ModelUserConditionInput\n    )"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n        updateUser(input: $input, condition: $condition) {\n            id\n            username\n            cognitoId\n            tenantId\n            contact {\n                name\n                telephoneNumber\n                mobileNumber\n                emailAddress\n                ward\n                line1\n                line2\n                line3\n                town\n                county\n                state\n                country\n                postcode\n                what3words\n            }\n            displayName\n            name\n            roles\n            dateOfBirth\n            riderResponsibility\n            possibleRiderResponsibilities {\n                items {\n                    id\n                    tenantId\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                    userPossibleRiderResponsibilitiesId\n                    riderResponsibilityPossibleUsersId\n                }\n                nextToken\n                startedAt\n            }\n            profilePicture {\n                bucket\n                key\n                region\n            }\n            comments {\n                items {\n                    id\n                    parentId\n                    tenantId\n                    body\n                    visibility\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                    userCommentsId\n                    owner\n                }\n                nextToken\n                startedAt\n            }\n            assignments {\n                items {\n                    id\n                    tenantId\n                    role\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                }\n                nextToken\n                startedAt\n            }\n            createdTasks {\n                items {\n                    id\n                    tenantId\n                    timeOfCall\n                    timePickedUp\n                    timeDroppedOff\n                    timeCancelled\n                    timeRejected\n                    timeRiderHome\n                    pickUpLocationId\n                    dropOffLocationId\n                    establishmentLocationId\n                    riderResponsibility\n                    priority\n                    status\n                    createdAt\n                    updatedAt\n                    _version\n                    _deleted\n                    _lastChangedAt\n                    userCreatedTasksId\n                }\n                nextToken\n                startedAt\n            }\n            disabled\n            createdAt\n            updatedAt\n            _version\n            _deleted\n            _lastChangedAt\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAdminChangeUserRoles/src/updateUserRoles.js", "repo": "platelet-app_platelet"}, "arguments": "(\n        $input: UpdateUserInput!\n        $condition: ModelUserConditionInput\n    )"}, {"type": "query", "name": "GetUser", "content": "{\n        getUser(id: $id) {\n            id\n            tenantId\n            cognitoId\n            displayName\n            roles\n            username\n            createdAt\n            updatedAt\n            _lastChangedAt\n            _version\n        }\n    }", "metadata": {"commit_hash": "c6867cabf2f5c3b8f8e5389c8d903a6c802c0710", "file": "amplify/backend/function/plateletAdminChangeUserRoles/src/getUser.js", "repo": "platelet-app_platelet"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetTemplates", "content": "{\n\t\tmeme_templates {\n\t\t\tid\n\t\t\ttitle\n\t\t\timage_link\n\t\t}\n\t}", "metadata": {"commit_hash": "7e76f037fc9dbe61667d7061250517a686c51ffe", "file": "client/src/HasuraTest.jsx", "repo": "Evavic44_rocketmeme"}}, {"type": "mutation", "name": "deleteTask", "content": "{\n  deleteTask(id:$id){\n    id\n  }\n}", "metadata": {"commit_hash": "14889afbfcb5ab2a27c2baac51dd35453797c1f1", "file": "react-fundamentals/3-react-graphql-apollo-solution/src/App.js", "repo": "udacity_live-codings-react-nanodegree"}, "arguments": "($id:ID!)"}, {"type": "query", "name": "CoursesOfCategory", "content": "{\n  categoryCollection(where: {slug: $slug}) {\n    items {\n      title\n      linkedFrom {\n        entryCollection {\n          items {\n            ...CoursePreviewFragment\n          }\n        }\n      }\n    }\n  }\n}\n${coursePreviewFragment}", "metadata": {"commit_hash": "6596c93efeed0a973287c39fce82a1002950fd5f", "file": "src/schema.js", "repo": "contentful_the-example-app.graphql.js"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "Data", "content": "{\n  pageBuilder {\n    listPublishedPages {\n      data {\n        title\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/scully-webiny-blog/src/app/app.component.ts", "repo": "webiny_write-with-webiny"}}, {"type": "mutation", "name": "CreateFormSubmission", "content": "{\n      formBuilder {\n        createFormSubmission(revision: $revision, data: $data) {\n          data {\n            id\n            data\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "cdca905d2f81707f7043075437ed151889a66e16", "file": "tutorials/react-marketingsite/src/components/Form.jsx", "repo": "webiny_write-with-webiny"}, "arguments": "($revision: ID!, $data: JSON!)"}, {"type": "query", "name": "GRAPH_LIST", "content": "{\n    user {\n      id\n      graphs {\n        id\n        name\n        stats(to: $to, from: $from, traceFilters: $traceFilters) {\n          errorCount\n          errorPercent\n          count\n          duration\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/graph/index.js", "repo": "craigmulligan_clementine"}, "arguments": "(\n    $traceFilters: [TraceFilter]\n    $to: DateTime\n    $from: DateTime\n  )"}, {"type": "query", "name": "GRAPH_SHOW", "content": "{\n    graph(graphId: $graphId) {\n      id\n      name\n      stats(traceFilters: $traceFilters, from: $from, to: $to) {\n        count\n        duration\n        errorCount\n        errorPercent\n      }\n    }\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/graph/index.js", "repo": "craigmulligan_clementine"}, "arguments": "(\n    $graphId: ID!\n    $traceFilters: [TraceFilter]\n    $from: DateTime\n    $to: DateTime\n  )"}, {"type": "query", "name": "GRAPH_SETTINGS", "content": "{\n    graph(graphId: $graphId) {\n      id\n      name\n      keys {\n        id\n        secret\n        prefix\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/graph/index.js", "repo": "craigmulligan_clementine"}, "arguments": "($graphId: ID!)"}, {"type": "mutation", "name": "revokeApiKey", "content": "{\n    keyRevoke(keyId: $keyId)\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/key/index.js", "repo": "craigmulligan_clementine"}, "arguments": "($keyId: ID!)"}, {"type": "query", "name": "RPM", "content": "{\n    rpm(\n      graphId: $graphId\n      operationId: $operationId\n      to: $to\n      from: $from\n      traceFilters: $traceFilters\n    ) {\n      nodes {\n        startTime\n        count\n        errorCount\n      }\n      cursor\n    }\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/timeline/rpm.js", "repo": "craigmulligan_clementine"}, "arguments": "(\n    $graphId: ID!\n    $operationId: ID\n    $to: DateTime\n    $from: DateTime\n    $traceFilters: [TraceFilter]\n  )"}, {"type": "query", "name": "traceFilterOptions", "content": "{\n    traceFilterOptions(graphId: $graphId) {\n      clientName\n      clientVersion\n      schemaTag\n      hasErrors\n    }\n  }", "metadata": {"commit_hash": "759f8f35204e8599faeef4e6929d87509b3c0e06", "file": "client/src/trace/filters.js", "repo": "craigmulligan_clementine"}, "arguments": "($graphId: ID!)"}, {"type": "mutation", "name": "createServicesDetail", "content": "{\n        createServicesDetail(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/service-detail.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($input: ServicesDetailCreateInput!)"}, {"type": "mutation", "name": "deleteServicesDetail", "content": "{\n        deleteServicesDetail(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/service-detail.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getBookings", "content": "{\n        bookings {\n            id\n            bookCheckInTime\n            bookCheckOutTime\n            realCheckInTime\n            realCheckOutTime\n            status\n            patrons {\n                id\n                name\n            }\n            bill {\n                id\n            }\n            room {\n                id\n                name\n                isClean\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/booking.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "getSimpleBookings", "content": "{\n        bookings {\n            id\n            status\n            room {\n                id\n                name\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/booking.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "checkOut", "content": "{\n        checkOut(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/booking.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "cancel", "content": "{\n        cancel(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/booking.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "addBookingToBill", "content": "{\n        addBookingToBill(bill: $bill, booking: $booking) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/bill.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($bill: BillId!, $booking: BookingCreateInput!)"}, {"type": "mutation", "name": "updateBillDiscount", "content": "{\n        updateBillDiscount(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/bill.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($input: BillUpdateDiscountInput!)"}, {"type": "query", "name": "getPriceVolatility", "content": "{\n        priceVolatility(id: $id) {\n            id\n            name\n            hourPrice\n            dayPrice\n            nightPrice\n            effectiveStartDate\n            effectiveEndDate\n            effectiveOnMonday\n            effectiveOnTuesday\n            effectiveOnWednesday\n            effectiveOnThursday\n            effectiveOnFriday\n            effectiveOnSaturday\n            effectiveOnSunday\n            createDate\n            employee {\n                id\n            }\n            roomKind {\n                id\n                name\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/priceVolatility.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "createPatron", "content": "{\n        createPatron(input: $input) {\n            id\n            identification\n            name\n            birthdate\n            email\n            gender\n            residence\n            domicile\n            phoneNumber\n            nationality\n            company\n            note\n            patronKind {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/patron.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($input: PatronCreateInput!)"}, {"type": "mutation", "name": "createPosition", "content": "{\n        createPosition(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/position.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($input: PositionCreateInput!)"}, {"type": "mutation", "name": "setIsActivePosition", "content": "{\n        setIsActivePosition(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/position.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!, $isActive: Boolean!)"}, {"type": "mutation", "name": "setIsActivePositionAndMoveEmployee", "content": "{\n        setIsActivePositionAndMoveEmployee(\n            id: $id\n            newId: $newId\n            isActive: $isActive\n        )\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/position.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "(\n        $id: ID!\n        $newId: ID!\n        $isActive: Boolean!\n    )"}, {"type": "mutation", "name": "createService", "content": "{\n        createService(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/service.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($input: ServiceCreateInput!)"}, {"type": "mutation", "name": "deleteFloor", "content": "{\n        deleteFloor(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/floor.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getPatronsAndRooms", "content": "{\n        patrons {\n            id\n            identification\n            name\n            birthdate\n            email\n            gender\n            residence\n            domicile\n            phoneNumber\n            nationality\n            company\n            note\n            patronKind {\n                id\n            }\n        }\n        rooms {\n            id\n            name\n            isActive\n            isClean\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/share.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "getRooms", "content": "{\n        rooms {\n            id\n            name\n            isActive\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "mutation", "name": "deleteRoom", "content": "{\n        deleteRoom(id: $id)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "setIsActiveRoom", "content": "{\n        setIsActiveRoom(id: $id, isActive: $isActive)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/room.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!, $isActive: Boolean!)"}, {"type": "query", "name": "getReceipts", "content": "{\n        receipts {\n            id\n            money\n            time\n            bill {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/receipt.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "getReceipt", "content": "{\n        receipt(id: $id) {\n            id\n            time\n            kind\n            status\n            statusText\n            payUrl\n            money\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/receipt.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "createReceipt", "content": "{\n        createReceipt(input: $input) {\n            id\n        }\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/receipt.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($input: ReceiptCreateInput!)"}, {"type": "mutation", "name": "initializeAdminAccount", "content": "{\n        initializeAdminAccount(email: $email, password: $password)\n    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/graphql/documents/initialize.ts", "repo": "phamhongphuc_uit.hotel"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "isInitialized", "content": "{\n                        isInitialized\n                    }", "metadata": {"commit_hash": "9e0d05cc501fda8f247d72f9dd4bc15814e255b9", "file": "uit.hotel.client/store/user.ts", "repo": "phamhongphuc_uit.hotel"}}, {"type": "query", "name": "getPosts", "content": "{\n        posts {\n        \ttitle\n      \t}\n      }", "metadata": {"commit_hash": "5c2bcc5ed8229b1da33546fa5871153145a110e6", "file": "src/app/app.component.ts", "repo": "launchscout_graphql-admin"}}, {"type": "query", "name": "ItemListQuery", "content": "{\n    items {\n      id\n      name,\n      owner {\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "08a950231ef190e1d66641a34d1071e427c4a6b9", "file": "client/src/queries/item.queries.js", "repo": "theogravity_graphql-apollo-server-client-example"}}, {"type": "mutation", "name": "addNewItem", "content": "{\n    addItem(name: $name, desc: $desc, ownerId: $ownerId) {\n      id\n    }\n  }", "metadata": {"commit_hash": "08a950231ef190e1d66641a34d1071e427c4a6b9", "file": "client/src/queries/item.queries.js", "repo": "theogravity_graphql-apollo-server-client-example"}, "arguments": "($name: String!, $desc: String, $ownerId: ID!)"}, {"type": "query", "name": "searchResults", "content": "{\n    searchPeople(input:$input, first:2){\n        name  \n        verseCount\n        slug\n        verses(orderBy:verseId_asc, first:1){\n            verseId\n            fullRef\n            osisRef\n        }\n    }\n    searchPlaces(input:$input, first:2){\n        name\n        verseCount\n        slug\n        verses(orderBy:verseId_asc, first:1){\n            verseId\n            fullRef\n            osisRef\n        }\n    }              \n    searchVerses(input:$input, first:10){\n        verseText  \n        verseId\n        fullRef\n        osisRef\n    }\n}", "metadata": {"commit_hash": "c4fdea2406a264324af8f9417579ec95262a1a41", "file": "src/components/search/PrincipalComponent.js", "repo": "robertrouse_theographic-web"}, "arguments": "($input:String!)"}, {"type": "mutation", "name": "refreshTokens", "content": "{\n          refreshTokens(token: $token) {\n            token\n            refreshToken\n            expiresAt\n          }\n        }", "metadata": {"commit_hash": "a33eec57a5308fc4435a3c8a388bce6c30cb13fe", "file": "src/core/apiclients/graphql/GraphQLAPIClient.ts", "repo": "orangeloops_public-ol-native-template"}, "arguments": "($token: String!)"}, {"type": "query", "name": "listUsers", "content": "{\n    users(search: $search, offset: $offset, limit: $limit) {\n      users {\n        id\n        context\n        updatedAt\n      }\n      total\n    }\n  }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/UserList/queries.js", "repo": "uw-labs_flaggio"}, "arguments": "($search: String, $offset: Int, $limit: Int)"}, {"type": "mutation", "name": "deleteVariant", "content": "{\n        deleteVariant(id: $id, flagId: $flagId)\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}, "arguments": "($id: ID!, $flagId: ID!)"}, {"type": "mutation", "name": "createFlagRule", "content": "{\n        createFlagRule(flagId: $flagId, input: $input) {\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n            distributions {\n                percentage\n                variant {\n                    id\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagForm/queries.js", "repo": "uw-labs_flaggio"}, "arguments": "($flagId: ID!, $input: NewFlagRule!)"}, {"type": "mutation", "name": "toggleFlag", "content": "{\n    updateFlag(id: $id, input: $input) {\n      id\n      enabled\n    }\n  }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/FlagList/queries.js", "repo": "uw-labs_flaggio"}, "arguments": "($id: ID!, $input: UpdateFlag!)"}, {"type": "query", "name": "operations", "content": "{\n        operations: __type(name: \"Operation\") {\n            enumValues {\n                name\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}}, {"type": "mutation", "name": "createSegmentRule", "content": "{\n        createSegmentRule(segmentId: $segmentId, input: $input) {\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}, "arguments": "($segmentId: ID!, $input: NewSegmentRule!)"}, {"type": "mutation", "name": "updateSegmentRule", "content": "{\n        updateSegmentRule(id: $id, segmentId: $segmentId, input: $input) {\n            id\n            constraints {\n                id\n                operation\n                property\n                values\n            }\n        }\n    }", "metadata": {"commit_hash": "1151cb37af63897ba7d6f7bbe179e50cd9c055c4", "file": "web/src/views/SegmentForm/queries.js", "repo": "uw-labs_flaggio"}, "arguments": "($id: ID!, $segmentId: ID!, $input: UpdateSegmentRule!)"}, {"type": "query", "name": "AllCosts", "content": "{\n    allCosts(groupId: $groupId, search: $search, skip: $skip) {\n      costs {\n        ...Cost\n        ...Payer\n      }\n      count\n    }\n  }\n  ${Cost}\n  ${Payer}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split"}, "arguments": "($groupId: String!, $search: String, $skip: Int)"}, {"type": "mutation", "name": "EditCost", "content": "{\n    editCost(costId: $costId, data: $data) {\n      ...Cost\n      ...Shares\n    }\n  }\n  ${Cost}\n  ${Shares}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/cost/queries.ts", "repo": "NoQuarterTeam_split"}, "arguments": "($costId: String!, $data: CostInput!)"}, {"type": "mutation", "name": "GetSignedS3Url", "content": "{\n    getSignedS3Url(data: $data) {\n      url\n      signedRequest\n    }\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/shared/queries.ts", "repo": "NoQuarterTeam_split"}, "arguments": "($data: S3SignedUrlInput!)"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n    updateUser(data: $data) {\n      ...User\n    }\n  }\n  ${User}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split"}, "arguments": "($data: UpdateInput!)"}, {"type": "mutation", "name": "Logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/user/queries.ts", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "CreateInvite", "content": "{\n    createInvite(data: $data) {\n      ...Invite\n    }\n  }\n  ${Invite}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/invite/queries.ts", "repo": "NoQuarterTeam_split"}, "arguments": "($data: InviteInput!)"}, {"type": "query", "name": "GetGroup", "content": "{\n    group {\n      ...Group\n      users {\n        ...User\n      }\n      invites {\n        ...Invite\n      }\n    }\n  }\n  ${GroupFragmentDoc}\n  ${UserFragmentDoc}\n  ${InviteFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "CreateGroup", "content": "{\n    createGroup(data: $data) {\n      ...Group\n      users {\n        ...User\n      }\n      invites {\n        ...Invite\n      }\n    }\n  }\n  ${GroupFragmentDoc}\n  ${UserFragmentDoc}\n  ${InviteFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}, "arguments": "($data: GroupInput!)"}, {"type": "mutation", "name": "CreateInvite", "content": "{\n    createInvite(data: $data) {\n      ...Invite\n    }\n  }\n  ${InviteFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}, "arguments": "($data: InviteInput!)"}, {"type": "mutation", "name": "GetSignedS3Url", "content": "{\n    getSignedS3Url(data: $data) {\n      url\n      signedRequest\n    }\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}, "arguments": "($data: S3SignedUrlInput!)"}, {"type": "query", "name": "Me", "content": "{\n    me {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "UpdateUser", "content": "{\n    updateUser(data: $data) {\n      ...User\n    }\n  }\n  ${UserFragmentDoc}", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}, "arguments": "($data: UpdateInput!)"}, {"type": "mutation", "name": "Logout", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}}, {"type": "mutation", "name": "ForgotPassword", "content": "{\n    forgotPassword(email: $email)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}, "arguments": "($email: String!)"}, {"type": "mutation", "name": "ResetPassword", "content": "{\n    resetPassword(data: $data)\n  }", "metadata": {"commit_hash": "70fd136f3cce4016c9de0c0b96f16b5ee4ea8217", "file": "packages/web/src/lib/graphql/types.tsx", "repo": "NoQuarterTeam_split"}, "arguments": "($data: ResetPasswordInput!)"}, {"type": "mutation", "name": "AddAddressToOrder", "content": "{\n    setOrderShippingAddress(input: $input) {\n      ...ActiveOrder\n    }\n  }\n  ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/pages/checkout.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}, "arguments": "($input: CreateAddressInput!)"}, {"type": "mutation", "name": "AdjustItemQuantity", "content": "{\n    adjustItemQuantity(orderItemId: $id, quantity: $quantity) {\n      ...ActiveOrder\n    }\n  }\n  ${ORDER_FRAGMENT}", "metadata": {"commit_hash": "933758eb6c240b8323a9d8c20548d69defee4d42", "file": "src/components/ShoppingCart/ShoppingCart.vendure.ts", "repo": "vendure-ecommerce_gatsby-storefront"}, "arguments": "($id: ID!, $quantity: Int!)"}, {"type": "mutation", "name": "CreateTag", "content": "{\n  tag_Create(input: $input) {\n    id\n    name\n    createdAt\n    updatedAt\n    source\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($input: TagInput!)"}, {"type": "query", "name": "GetTags", "content": "{\n  tags {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "UpdateTag", "content": "{\n  tag_Update(input: $input) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($input: TagUpdateInput!)"}, {"type": "mutation", "name": "attachOrganizationToContact", "content": "{\n  contact_AddOrganizationById(input: $input) {\n    ...ContactPersonalDetails\n  }\n}\n    ${ContactPersonalDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($input: ContactOrganizationInput!)"}, {"type": "mutation", "name": "createContact", "content": "{\n  contact_Create(input: $input) {\n    ...ContactPersonalDetails\n    ...ContactCommunicationChannelsDetails\n  }\n}\n    ${ContactPersonalDetailsFragmentDoc}\n${ContactCommunicationChannelsDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($input: ContactInput!)"}, {"type": "mutation", "name": "createContactNote", "content": "{\n  note_CreateForContact(contactId: $contactId, input: $input) {\n    ...NoteContent\n  }\n}\n    ${NoteContentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($contactId: ID!, $input: NoteInput!)"}, {"type": "query", "name": "GetContact", "content": "{\n  contact(id: $id) {\n    ...ContactPersonalDetails\n    owner {\n      id\n      firstName\n      lastName\n    }\n    ...ContactCommunicationChannelsDetails\n    jobRoles {\n      ...JobRole\n    }\n    source\n    locations {\n      ...LocationBaseDetails\n      rawAddress\n    }\n  }\n}\n    ${ContactPersonalDetailsFragmentDoc}\n${ContactCommunicationChannelsDetailsFragmentDoc}\n${JobRoleFragmentDoc}\n${LocationBaseDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetContactNameById", "content": "{\n  contact(id: $id) {\n    id\n    ...ContactNameFragment\n  }\n}\n    ${ContactNameFragmentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetContactNameByPhoneNumber", "content": "{\n  contact_ByPhone(e164: $e164) {\n    id\n    ...ContactNameFragment\n  }\n}\n    ${ContactNameFragmentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($e164: String!)"}, {"type": "mutation", "name": "mergeContacts", "content": "{\n  contact_Merge(\n    primaryContactId: $primaryContactId\n    mergedContactIds: $mergedContactIds\n  ) {\n    id\n    ...ContactPersonalDetails\n  }\n}\n    ${ContactPersonalDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($primaryContactId: ID!, $mergedContactIds: [ID!]!)"}, {"type": "mutation", "name": "updateJobRole", "content": "{\n  jobRole_Update(contactId: $contactId, input: $input) {\n    ...JobRole\n    organization {\n      id\n      name\n    }\n  }\n}\n    ${JobRoleFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($contactId: ID!, $input: JobRoleUpdateInput!)"}, {"type": "mutation", "name": "updateContactPersonalDetails", "content": "{\n  contact_Update(input: $input) {\n    id\n    title\n    firstName\n    lastName\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($input: ContactUpdateInput!)"}, {"type": "mutation", "name": "addLocationToOrganization", "content": "{\n  organization_AddNewLocation(organizationId: $organzationId) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organzationId: ID!)"}, {"type": "mutation", "name": "deleteOrganization", "content": "{\n  organization_Delete(id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetOrganizationCommunicationChannels", "content": "{\n  organization(id: $id) {\n    id\n    name\n    emails {\n      id\n      email\n      primary\n      label\n    }\n    phoneNumbers {\n      id\n      e164\n      rawPhoneNumber\n      label\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetOrganizationNotes", "content": "{\n  organization(id: $id) {\n    notes(pagination: $pagination) {\n      content {\n        ...NoteContent\n      }\n    }\n  }\n}\n    ${NoteContentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($id: ID!, $pagination: Pagination)"}, {"type": "mutation", "name": "mergeOrganizations", "content": "{\n  organization_Merge(\n    primaryOrganizationId: $primaryOrganizationId\n    mergedOrganizationIds: $mergedOrganizationIds\n  ) {\n    id\n    ...OrganizationDetails\n  }\n}\n    ${OrganizationDetailsFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($primaryOrganizationId: ID!, $mergedOrganizationIds: [ID!]!)"}, {"type": "mutation", "name": "RemoveHealthIndicator", "content": "{\n  organization_RemoveHealthIndicator(organizationId: $organizationId) {\n    id\n    healthIndicator {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!)"}, {"type": "mutation", "name": "removeOrganizationOwner", "content": "{\n  organization_UnsetOwner(organizationId: $organizationId) {\n    id\n    owner {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!)"}, {"type": "mutation", "name": "removePhoneNumberFromOrganization", "content": "{\n  phoneNumberRemoveFromOrganizationById(organizationId: $organizationId, id: $id) {\n    result\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!, $id: ID!)"}, {"type": "mutation", "name": "SetHealthIndicator", "content": "{\n  organization_SetHealthIndicator(\n    organizationId: $organizationId\n    healthIndicatorId: $healthIndicatorId\n  ) {\n    id\n    healthIndicator {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!, $healthIndicatorId: ID!)"}, {"type": "mutation", "name": "updateOrganizationDescription", "content": "{\n  organization_Update(input: $input) {\n    id\n    description\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($input: OrganizationUpdateInput!)"}, {"type": "mutation", "name": "updateOrganizationIndustry", "content": "{\n  organization_Update(input: $input) {\n    id\n    industry\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($input: OrganizationUpdateInput!)"}, {"type": "mutation", "name": "updateOrganizationOwner", "content": "{\n  organization_SetOwner(organizationId: $organizationId, userId: $userId) {\n    id\n    owner {\n      id\n      firstName\n      lastName\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($organizationId: ID!, $userId: ID!)"}, {"type": "mutation", "name": "createMeeting", "content": "{\n  meeting_Create(meeting: $meeting) {\n    id\n    attendedBy {\n      ... on ContactParticipant {\n        contactParticipant {\n          id\n          name\n          firstName\n          lastName\n        }\n      }\n      ... on UserParticipant {\n        userParticipant {\n          id\n          lastName\n          firstName\n        }\n      }\n    }\n    conferenceUrl\n    meetingStartedAt: startedAt\n    meetingEndedAt: endedAt\n    name\n    agenda\n    agendaContentType\n    note {\n      id\n      html\n      appSource\n    }\n    createdBy {\n      ... on ContactParticipant {\n        contactParticipant {\n          id\n        }\n      }\n      ... on UserParticipant {\n        userParticipant {\n          id\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($meeting: MeetingInput!)"}, {"type": "query", "name": "GetHealthIndicators", "content": "{\n  healthIndicators {\n    id\n    name\n    order\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}}, {"type": "mutation", "name": "linkMeetingAttachment", "content": "{\n  meeting_LinkAttachment(meetingId: $meetingId, attachmentId: $attachmentId) {\n    id\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($meetingId: ID!, $attachmentId: ID!)"}, {"type": "mutation", "name": "linkMeetingAttendee", "content": "{\n  meeting_LinkAttendedBy(meetingId: $meetingId, participant: $participant) {\n    id\n    attendedBy {\n      ... on ContactParticipant {\n        contactParticipant {\n          id\n          name\n          firstName\n          lastName\n        }\n      }\n      ... on UserParticipant {\n        userParticipant {\n          id\n          lastName\n          firstName\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($meetingId: ID!, $participant: MeetingParticipantInput!)"}, {"type": "mutation", "name": "meetingLinkRecording", "content": "{\n  meeting_LinkRecording(meetingId: $meetingId, attachmentId: $attachmentId) {\n    id\n    attendedBy {\n      ... on UserParticipant {\n        userParticipant {\n          id\n          firstName\n          lastName\n        }\n      }\n      ... on ContactParticipant {\n        contactParticipant {\n          id\n          firstName\n          lastName\n          name\n        }\n      }\n    }\n    recording {\n      id\n    }\n    meetingStartedAt: startedAt\n    agenda\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($meetingId: ID!, $attachmentId: ID!)"}, {"type": "mutation", "name": "meetingUnlinkRecording", "content": "{\n  meeting_UnlinkRecording(meetingId: $meetingId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($meetingId: ID!, $attachmentId: ID!)"}, {"type": "mutation", "name": "noteLinkAttachment", "content": "{\n  note_LinkAttachment(noteId: $noteId, attachmentId: $attachmentId) {\n    id\n    includes {\n      id\n      name\n      mimeType\n    }\n  }\n}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($noteId: ID!, $attachmentId: ID!)"}, {"type": "mutation", "name": "updateNote", "content": "{\n  note_Update(input: $input) {\n    ...NoteContent\n  }\n}\n    ${NoteContentFragmentDoc}", "metadata": {"commit_hash": "ebf41c9344c332bbe4a5797a70797cb4bc200bc1", "file": "packages/apps/spaces/graphQL/__generated__/generated.ts", "repo": "openline-ai_openline-customer-os"}, "arguments": "($input: NoteUpdateInput!)"}, {"type": "query", "name": "Validators", "content": "{\n    validators(where: { session: { index: $sessionIndex } }, last: 220) {\n      controller\n      stash\n      preferences\n    }\n  }", "metadata": {"commit_hash": "e5afc027dbb1be260cb6b280eb1f583d97e6b0ef", "file": "front/gatsby/src/util/graphql.ts", "repo": "paritytech_Nomidot"}, "arguments": "($sessionIndex: Int!)"}, {"type": "mutation", "name": "UserLogin", "content": "{\n      user {\n        login(req: $req) {\n          session { token },\n          user { id, email, name }\n        }\n      }\n    }", "metadata": {"commit_hash": "9bf4b6b06d091c6c3363cf2c91dc9e88692e3c91", "file": "yeditor_client/src/app/website/shared/services/api/graphql.service.ts", "repo": "xuwaters_editor.sh"}, "arguments": "($req: ApiReqUserLogin!)"}, {"type": "query", "name": "LatestDiscussionPosts", "content": "{\n        posts(order_by: {last_update: {last_update: desc}}, limit: $limit, where: {type: {id: {_eq: 1}}}) {\n            ...postFields\n        }\n    }\n    ${postFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Discussions/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($limit: Int! = 20)"}, {"type": "query", "name": "DiscussionPostsIdAsc", "content": "{\n        posts(order_by: {id: asc}, limit: $limit, where: {type: {id: {_eq: 1}}}) {\n            ...postFields\n        }\n    }\n    ${postFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Discussions/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($limit: Int! = 20)"}, {"type": "query", "name": "AllReferendaPosts", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            onchain_link: {\n                onchain_referendum_id: {\n                    _is_null: false\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_referendum_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_referendum_id\n                onchain_referendum(where: {}) {\n                    id\n                    end\n                    referendumStatus(last: 1) {\n                        id\n                        status\n                    }\n                    preimage {\n                        id\n                        method\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n    ${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Referenda/ReferendaContainer/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $limit: Int! = 5)"}, {"type": "mutation", "name": "undoEmailChange", "content": "{\n        undoEmailChange(token: $token){\n            message,\n            token,\n            email\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/UndoEmailChange/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($token: String!)"}, {"type": "mutation", "name": "changeNotificationPreference", "content": "{\n\t\tchangeNotificationPreference(\n\t\t\tnotificationPreferences: {\n\t\t\t\tpostParticipated: $postParticipated,\n\t\t\t\tpostCreated: $postCreated,\n\t\t\t\tnewProposal: $newProposal,\n\t\t\t\townProposal: $ownProposal\n\t\t\t}\n\t\t) {\n            message\n            token\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/NotificationSettings/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "(\n\t\t$postParticipated: Boolean\n\t\t$postCreated: Boolean\n\t\t$newProposal: Boolean\n\t\t$ownProposal: Boolean\n\t)"}, {"type": "query", "name": "AllBountyPosts", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            topic: {\n                id: {\n                    _eq: $postTopic\n                }\n            },\n            onchain_link: {\n                onchain_bounty_id: {\n                    _is_null: false\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_bounty_id\n                onchain_bounty(where: {}) {\n                    id\n                    value\n                    bountyStatus(last: 1) {\n                        id\n                        status\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n    ${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Bounties/BountyContainer/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $postTopic: Int!, $limit: Int! = 5 )"}, {"type": "query", "name": "AllTechCommitteeProposalPosts", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            onchain_link: {\n                onchain_tech_committee_proposal_id: {\n                    _is_null: false\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_tech_committee_proposal_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_tech_committee_proposal_id\n                onchain_tech_committee_proposal(where: {}) {\n                    id\n                    method\n                    status(last: 1) {\n                        id\n                        status\n                    }\n                    preimage {\n                        id\n                        method\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n    ${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/TechCommitteeProposals/TechCommitteeProposalsContainer/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $limit: Int! = 5 )"}, {"type": "query", "name": "PROFILE", "content": "{\n        profile(username: $username) {\n            id\n            username\n            kusama_default_address\n            polkadot_default_address\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/UserProfile/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($username: String!)"}, {"type": "query", "name": "AllDemocracyTreasuryProposalPosts", "content": "{\n        posts(limit: $limit, where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            topic: {\n                id: {\n                    _eq: $postTopic\n                }\n            },\n            onchain_link: {\n                onchain_treasury_proposal_id: {\n                    _is_null: false\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_treasury_proposal_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_treasury_proposal_id\n                onchain_treasury_spend_proposal(where: {}) {\n                    id\n                    treasuryStatus(last: 1) {\n                        id\n                        status\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Treasury/TreasuryContainer/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $postTopic: Int!, $limit: Int! = 5 )"}, {"type": "query", "name": "TechCommitteeProposalPostAndComments", "content": "{\n        posts(where: {onchain_link: {onchain_tech_committee_proposal_id: {_eq: $id}}}) {\n            ...techCommitteeProposalPost\n        }\n    }\n    ${techCommitteeProposalPost}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/TechCommitteeProposalPost/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($id:Int!)"}, {"type": "mutation", "name": "changeEmail", "content": "{\n\t\tchangeEmail(email: $email, password: $password) {\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "addressLinkConfirm", "content": "{\n    \taddressLinkConfirm(address_id: $address_id, signature: $signature) {\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($address_id: Int!, $signature: String!)"}, {"type": "mutation", "name": "resendVerifyEmailToken", "content": "{\n\t\tresendVerifyEmailToken {\n\t\t\tmessage\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "setDefaultAddress", "content": "{\n\t\tsetDefaultAddress(address: $address) {\n\t\t\tmessage\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Settings/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($address: String!)"}, {"type": "query", "name": "TrackerBountyPosts", "content": "{\n        posts(where: {\n            type: {\n                id: {\n                    _eq: $postType\n                }\n            },\n            onchain_link: {\n                onchain_bounty_id: {\n                    _in: $onchainBountyIds\n                }\n            }\n        }, order_by: {\n            onchain_link: {\n                onchain_bounty_id: desc\n            }\n        }) {\n            id\n            title\n            author {\n                ...authorFields\n            }\n            created_at\n            updated_at\n            comments_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            type {\n                name\n                id\n            }\n            topic {\n                id\n                name\n            }\n            onchain_link {\n                id\n                onchain_bounty_id\n                onchain_bounty(where: {}) {\n                    id\n                    bountyStatus(last: 1) {\n                        id\n                        status\n                    }\n                }\n                proposer_address\n            }\n        }\n    }\n    ${authorFields}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/screens/Tracker/Bounties/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $onchainBountyIds: [Int!]! )"}, {"type": "mutation", "name": "EditComment", "content": "{\n        update_comments(where: {id: {_eq: $id}}, _set: {content: $content}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Comment/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($id: uuid!, $content: String!)"}, {"type": "mutation", "name": "AddressSignupStart", "content": "{\n        addressSignupStart(address: $address){\n            message\n            signMessage\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Signup/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($address: String!)"}, {"type": "mutation", "name": "AddCommentReaction", "content": "{\n        __typename\n        insert_comment_reactions(objects: {comment_id: $commentId, user_id: $userId, reaction: $reaction}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($commentId: uuid!, $userId: Int!, $reaction: bpchar!)"}, {"type": "mutation", "name": "DeleteCommentReaction", "content": "{\n        delete_comment_reactions(where: {_and: [{comment_id: {_eq: $commentId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Reactionbar/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($commentId: uuid!, $userId: Int!, $reaction: bpchar!)"}, {"type": "mutation", "name": "DeleteVote", "content": "{\n        delete_poll_votes(\n            where: {\n                _and: [\n                    {poll_id: {_eq: $pollId}},\n                    {user_id: {_eq: $userId}}\n                ]\n            }\n        ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Post/Poll/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($pollId: Int!, $userId: Int!)"}, {"type": "mutation", "name": "PostUnsubscribe", "content": "{\n        postUnsubscribe(post_id: $postId) {\n            message\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/SubscriptionButton/query.ts", "repo": "paritytech_polkassembly"}, "arguments": "($postId: Int!)"}, {"type": "subscription", "name": "proposalSubscription", "content": "{\n\t\tproposal (\n\t\t\twhere: {\n\t\t\t\tnode: {\n\t\t\t\t\tproposalStatus_some: {\n\t\t\t\t\t\tAND: [\n\t\t\t\t\t\t\t{ status: \"Proposed\" }\n\t\t\t\t\t\t\t{ blockNumber: { number_gte: $startBlock } }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t) {\n\t\t\tmutation\n\t\t\tnode {\n\t\t\t\tid\n\t\t\t\tauthor\n\t\t\t\tproposalId\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "subscription", "name": "referendumSubscription", "content": "{\n\t\treferendum (\n\t\t\twhere: {\n\t\t\t\tnode: {\n\t\t\t\t\treferendumStatus_some: {\n\t\t\t\t\t\tAND: [\n\t\t\t\t\t\t\t{ status: \"Started\" }\n\t\t\t\t\t\t\t{ blockNumber: { number_gte: $startBlock } }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t) {\n\t\t\tmutation\n\t\t\tnode {\n\t\t\t\tid\n\t\t\t\treferendumId\n\t\t\t\treferendumStatus(orderBy: id_DESC) {\n\t\t\t\t\tblockNumber {\n\t\t\t\t\t\tnumber\n\t\t\t\t\t}\n\t\t\t\t\tstatus\n\t\t\t\t}\n\t\t\t\tpreimageHash\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "subscription", "name": "motionSubscription", "content": "{\n        motion (\n            where: {\n\t\t\t\tnode: {\n\t\t\t\t\tmotionStatus_some: {\n\t\t\t\t\t\tAND: [\n\t\t\t\t\t\t\t{ status: \"Proposed\" },\n\t\t\t\t\t\t\t{ blockNumber: { number_gte: $startBlock } }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n        ){\n            mutation\n            node {\n                author\n                id\n                motionProposalId\n                motionStatus(orderBy: id_DESC) {\n                    blockNumber {\n                        number\n                    }\n                    status\n                }\n                preimage {\n                    hash\n                }\n                section\n                motionProposalArguments{\n                    name\n                    value\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "subscription", "name": "treasurySpendProposalSubscription", "content": "{\n        treasurySpendProposal (\n            where: {\n\t\t\t\tnode: {\n\t\t\t\t\ttreasuryStatus_some: {\n\t\t\t\t\t\tAND: [\n\t\t\t\t\t\t\t{ status: \"Proposed\" },\n\t\t\t\t\t\t\t{ blockNumber: { number_gte: $startBlock } }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n        ){\n            mutation\n            node {\n                id\n                proposer\n\t\t\t\ttreasuryProposalId\n                treasuryStatus(orderBy: id_DESC) {\n                    blockNumber {\n                        number\n                    }\n                    status\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "subscription", "name": "bountySubscription", "content": "{\n        bounty (\n            where: {\n\t\t\t\tnode: {\n\t\t\t\t\tbountyStatus_some: {\n\t\t\t\t\t\tAND: [\n\t\t\t\t\t\t\t{ status: \"BountyProposed\" },\n\t\t\t\t\t\t\t{ blockNumber: { number_gte: $startBlock } }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n        ){\n            mutation\n            node {\n                id\n                proposer\n\t\t\t\tbountyId\n                bountyStatus(orderBy: id_DESC) {\n                    blockNumber {\n                        number\n                    }\n                    status\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "subscription", "name": "techCommitteeProposalSubscription", "content": "{\n        techCommitteeProposal (\n            where: {\n\t\t\t\tnode: {\n\t\t\t\t\tstatus_some: {\n\t\t\t\t\t\tAND: [\n\t\t\t\t\t\t\t{ status: \"Proposed\" },\n\t\t\t\t\t\t\t{ blockNumber: { number_gte: $startBlock } }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n        ){\n            mutation\n            node {\n                id\n                author\n\t\t\t\tproposalId\n                status(orderBy: id_DESC) {\n                    blockNumber {\n                        number\n                    }\n                    status\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "query", "name": "getDiscussionBounties", "content": "{\n        onchain_links(where: {onchain_bounty_id: {_is_null: false}}){\n            ...discussionBounty\n        }\n    }\n    fragment discussionBounty on onchain_links {\n        id\n        onchain_bounty_id\n        proposer_address\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/sync/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getDiscussionTips", "content": "{\n        onchain_links(where: {onchain_tip_id: {_is_null: false}}){\n            ...discussionTip\n        }\n    }\n    fragment discussionTip on onchain_links {\n        id\n        onchain_tip_id\n        proposer_address\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/sync/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getOnchainTreasuryProposals", "content": "{\n        treasurySpendProposals (\n            where: {\n                treasuryStatus_some: {\n                    AND: [\n                        { status: \"Proposed\" }\n                        { blockNumber: { number_gte: $startBlock } }\n                    ]\n                }\n            }\n        ){\n            ...onchainTreasuryProposal\n        }\n    }\n    fragment onchainTreasuryProposal on TreasurySpendProposal {\n        proposer\n        id\n        treasuryProposalId\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/sync/queries/chain-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "query", "name": "getOnchainTips", "content": "{\n        tips (\n            where: {\n                tipStatus_some: {\n                    AND: [\n                        { status: \"TipOpened\" }\n                        { blockNumber: { number_gte: $startBlock } }\n                    ]\n                }\n            }\n        ){\n            ...onchainTip\n        }\n    }\n    fragment onchainTip on Tip {\n        finder\n        id\n        hash\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/sync/queries/chain-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "mutation", "name": "addPostAndProposalMutation", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_proposal_id: $onchainProposalId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "(\n        $onchainProposalId:Int!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )"}, {"type": "mutation", "name": "addPostAndTreasurySpendProposalMutation", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_treasury_proposal_id: $onchainTreasuryProposalId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "(\n        $onchainTreasuryProposalId:Int!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )"}, {"type": "mutation", "name": "addPostAndMotionMutation", "content": "{\n        __typename\n        insert_onchain_links(objects: {\n            onchain_motion_id: $onchainMotionProposalId,\n            proposer_address: $proposerAddress,\n            post: {data: {\n                author_id: $authorId,\n                content: $content,\n                topic_id: $topicId,\n                type_id: $typeId\n            }\n        }}) {\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "(\n        $onchainMotionProposalId:Int!,\n        $authorId: Int!,\n        $proposerAddress: String!,\n        $content: String!,\n        $topicId: Int!,\n        $typeId: Int!\n        )"}, {"type": "mutation", "name": "addReferendumIdToProposalMutation", "content": "{\n        update_onchain_links(\n            where: {\n                onchain_proposal_id: {_eq: $proposalId}\n            },\n            _set: {\n                onchain_referendum_id: $referendumId\n            }\n        ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($proposalId: Int!, $referendumId: Int!)"}, {"type": "mutation", "name": "addMotionIdToTreasuryProposalMutation", "content": "{\n        update_onchain_links(\n            where: {\n                onchain_treasury_proposal_id: {_eq: $treasuryProposalId}\n            },\n            _set: {\n                onchain_motion_id: $motionId\n            }\n        ) {\n            affected_rows\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($treasuryProposalId: Int!, $motionId: Int!)"}, {"type": "mutation", "name": "loginMutation", "content": "{\n        login(password: $password, username: $username) {\n            token\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($password: String!, $username: String!)"}, {"type": "query", "name": "getDiscussionProposalById", "content": "{\n        onchain_links(where: {onchain_proposal_id: {_eq: $onchainProposalId}}) {\n            id\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainProposalId: Int!)"}, {"type": "query", "name": "getDiscussionMotionProposalById", "content": "{\n        onchain_links(where: {onchain_motion_id: {_eq: $onchainMotionProposalId}}) {\n            id\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainMotionProposalId: Int!)"}, {"type": "query", "name": "getDiscussionTreasurySpendProposalById", "content": "{\n        onchain_links(where: {onchain_treasury_proposal_id: {_eq: $onchainTreasuryProposalId}}) {\n            id\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/discussions-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainTreasuryProposalId: Int!)"}, {"type": "query", "name": "getExecutedMotionsWithPreimageHash", "content": "{\n        motions(\n            where: {\n                AND: [\n                    { motionStatus_some : {blockNumber: {number_lt : $blockNumber}}}\n                    { motionStatus_some: { status: \"Executed\" } }\n                    { preimageHash: $preimageHash }\n                ]\n            }\n            orderBy: id_DESC\n        ) {\n            motionProposalId\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/chain-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($preimageHash: String!, $blockNumber: Int!)"}, {"type": "query", "name": "getTabledProposalAtBlock", "content": "{\n        proposals(\n            where: {\n                proposalStatus_some: {\n                    AND: [\n                        {\n                            blockNumber: {\n                                number: $blockNumber\n                            }\n                        },\n                        { status: \"Tabled\" }\n                    ]\n                }\n            }\n        ) {\n            proposalId\n                preimage {\n                    hash\n                }\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/queries/chain-db.queries.ts", "repo": "paritytech_polkassembly"}, "arguments": "($blockNumber: Int!)"}, {"type": "mutation", "name": "addPostAndProposalMutation", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_proposal_id: $onchainProposalId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainProposalId: Int!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)"}, {"type": "mutation", "name": "addPostAndBountyMutation", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_bounty_id: $onchainBountyId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainBountyId: Int!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)"}, {"type": "mutation", "name": "addPostAndTechCommitteeProposalMutation", "content": "{\n  __typename\n  insert_onchain_links(objects: {onchain_tech_committee_proposal_id: $onchainTechCommitteeProposalId, proposer_address: $proposerAddress, post: {data: {author_id: $authorId, content: $content, topic_id: $topicId, type_id: $typeId}}}) {\n    returning {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainTechCommitteeProposalId: Int!, $authorId: Int!, $proposerAddress: String!, $content: String!, $topicId: Int!, $typeId: Int!)"}, {"type": "mutation", "name": "addReferendumIdToProposalMutation", "content": "{\n  update_onchain_links(where: {onchain_proposal_id: {_eq: $proposalId}}, _set: {onchain_referendum_id: $referendumId}) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($proposalId: Int!, $referendumId: Int!)"}, {"type": "mutation", "name": "loginMutation", "content": "{\n  login(password: $password, username: $username) {\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($password: String!, $username: String!)"}, {"type": "query", "name": "getDiscussionProposalById", "content": "{\n  onchain_links(where: {onchain_proposal_id: {_eq: $onchainProposalId}}) {\n    id\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainProposalId: Int!)"}, {"type": "query", "name": "getDiscussionTreasurySpendProposalById", "content": "{\n  onchain_links(where: {onchain_treasury_proposal_id: {_eq: $onchainTreasuryProposalId}}) {\n    id\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainTreasuryProposalId: Int!)"}, {"type": "query", "name": "getDiscussionBountyById", "content": "{\n  onchain_links(where: {onchain_bounty_id: {_eq: $onchainBountyId}}) {\n    id\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($onchainBountyId: Int!)"}, {"type": "query", "name": "getDiscussionProposals", "content": "{\n  onchain_links(where: {onchain_proposal_id: {_is_null: false}}) {\n    ...discussionProposal\n  }\n}\n    ${DiscussionProposalFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getDiscussionReferenda", "content": "{\n  onchain_links(where: {onchain_referendum_id: {_is_null: false}}) {\n    ...discussionReferendum\n  }\n}\n    ${DiscussionReferendumFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getDiscussionTreasuryProposals", "content": "{\n  onchain_links(where: {onchain_treasury_proposal_id: {_is_null: false}}) {\n    ...discussionTreasuryProposal\n  }\n}\n    ${DiscussionTreasuryProposalFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getDiscussionBounties", "content": "{\n  onchain_links(where: {onchain_bounty_id: {_is_null: false}}) {\n    ...discussionBounty\n  }\n}\n    ${DiscussionBountyFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getDiscussionTips", "content": "{\n  onchain_links(where: {onchain_tip_id: {_is_null: false}}) {\n    ...discussionTip\n  }\n}\n    ${DiscussionTipFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/discussion-db-graphql.ts", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "getOnchainReferenda", "content": "{\n  referendums(where: {referendumStatus_some: {AND: [{status: \"Started\"}, {blockNumber: {number_gte: $startBlock}}]}}) {\n    ...onchainReferendum\n  }\n}\n    ${OnchainReferendumFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/chain-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "query", "name": "getOnchainProposals", "content": "{\n  proposals(where: {proposalStatus_some: {AND: [{status: \"Proposed\"}, {blockNumber: {number_gte: $startBlock}}]}}) {\n    ...onchainProposal\n  }\n}\n    ${OnchainProposalFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/chain-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "query", "name": "getOnchainTechCommitteeProposals", "content": "{\n  techCommitteeProposals(where: {status_some: {AND: [{status: \"Proposed\"}, {blockNumber: {number_gte: $startBlock}}]}}) {\n    ...onchainTechCommitteeProposal\n  }\n}\n    ${OnchainTechCommitteeProposalFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/chain-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "query", "name": "getOnchainTips", "content": "{\n  tips(where: {tipStatus_some: {AND: [{status: \"TipOpened\"}, {blockNumber: {number_gte: $startBlock}}]}}) {\n    ...onchainTip\n  }\n}\n    ${OnchainTipFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "chain-db-watcher/src/generated/chain-db-graphql.ts", "repo": "paritytech_polkassembly"}, "arguments": "($startBlock: Int!)"}, {"type": "mutation", "name": "LOGIN", "content": "{\n  login(password: $password, username: $username) {\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($password: String!, $username: String!)"}, {"type": "query", "name": "OptionPoll", "content": "{\n  option_poll(where: {post_id: {_eq: $postId}}) {\n    ...optionPollFields\n  }\n}\n    ${OptionPollFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postId: Int!)"}, {"type": "mutation", "name": "DeleteOptionPollVote", "content": "{\n  delete_option_poll_votes(\n    where: {_and: [{option_poll_id: {_eq: $optionPollId}}, {user_id: {_eq: $userId}}]}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($optionPollId: Int!, $userId: Int!)"}, {"type": "query", "name": "getCouncilMembers", "content": "{\n  councils(last: 1) {\n    members {\n      id\n      address\n    }\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "PollVotes", "content": "{\n  poll_votes(where: {poll_id: {_eq: $pollId}}) {\n    ...pollVotesFields\n  }\n}\n    ${PollVotesFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($pollId: Int!)"}, {"type": "mutation", "name": "AddPollVote", "content": "{\n  __typename\n  insert_poll_votes_one(object: {poll_id: $pollId, user_id: $userId, vote: $vote}) {\n    id\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($pollId: Int!, $userId: Int!, $vote: bpchar!)"}, {"type": "mutation", "name": "DeleteVote", "content": "{\n  delete_poll_votes(\n    where: {_and: [{poll_id: {_eq: $pollId}}, {user_id: {_eq: $userId}}]}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($pollId: Int!, $userId: Int!)"}, {"type": "mutation", "name": "AddCommentReaction", "content": "{\n  __typename\n  insert_comment_reactions(\n    objects: {comment_id: $commentId, user_id: $userId, reaction: $reaction}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($commentId: uuid!, $userId: Int!, $reaction: bpchar!)"}, {"type": "mutation", "name": "DeletePostReaction", "content": "{\n  delete_post_reactions(\n    where: {_and: [{post_id: {_eq: $postId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}\n  ) {\n    affected_rows\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postId: Int!, $userId: Int!, $reaction: bpchar!)"}, {"type": "mutation", "name": "PostSubscribe", "content": "{\n  postSubscribe(post_id: $postId) {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postId: Int!)"}, {"type": "query", "name": "GET_REFRESH_TOKEN", "content": "{\n  token {\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "query", "name": "AllBountyPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, topic: {id: {_eq: $postTopic}}, onchain_link: {onchain_bounty_id: {_is_null: false}}}\n    order_by: {onchain_link: {id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_bounty_id\n      onchain_bounty(where: {}) {\n        id\n        value\n        bountyStatus(last: 1) {\n          id\n          status\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $postTopic: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "DiscussionPostAndComments", "content": "{\n  posts(where: {id: {_eq: $id}}) {\n    ...discussionPost\n  }\n}\n    ${DiscussionPostFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "AllMotionPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, onchain_link: {onchain_motion_id: {_is_null: false}}}\n    order_by: {onchain_link: {onchain_motion_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_motion_id\n      onchain_motion(where: {}) {\n        id\n        motionStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "LatestBountyPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, onchain_link: {onchain_bounty_id: {_is_null: false}}}\n    order_by: {onchain_link: {onchain_bounty_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_bounty_id\n      onchain_bounty(\n        where: {NOT: {bountyStatus_some: {OR: [{status: \"BountyCanceled\"}, {status: \"BountyRejected\"}, {status: \"BountyAwarded\"}, {status: \"BountyClaimed\"}]}}}\n      ) {\n        id\n        bountyStatus(last: 1) {\n          id\n          status\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "LatestMotionPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, onchain_link: {onchain_motion_id: {_is_null: false}, onchain_referendum_id: {_is_null: true}}}\n    order_by: {onchain_link: {onchain_motion_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_motion_id\n      onchain_motion(\n        where: {NOT: {motionStatus_some: {OR: [{status: \"Executed\"}, {status: \"Disapproved\"}]}}}\n      ) {\n        id\n        motionStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "LatestDemocracyProposalPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, topic: {id: {_eq: $postTopic}}, onchain_link: {onchain_proposal_id: {_is_null: false}, onchain_referendum_id: {_is_null: true}}}\n    order_by: {onchain_link: {onchain_proposal_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_proposal_id\n      onchain_proposal(\n        where: {NOT: {proposalStatus_some: {OR: [{status: \"Tabled\"}, {status: \"Cleared\"}]}}}\n      ) {\n        id\n        proposalStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $postTopic: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "LatestReferendaPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, onchain_link: {onchain_referendum_id: {_is_null: false}}}\n    order_by: {onchain_link: {onchain_referendum_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_referendum_id\n      onchain_referendum(\n        where: {NOT: {referendumStatus_some: {OR: [{status: \"Passed\"}, {status: \"Executed\"}, {status: \"NotPassed\"}, {status: \"Cancelled\"}, {status: \"Vetoed\"}]}}}\n      ) {\n        id\n        end\n        referendumStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "LatestTechCommitteeProposalPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, onchain_link: {onchain_tech_committee_proposal_id: {_is_null: false}}}\n    order_by: {onchain_link: {onchain_tech_committee_proposal_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_tech_committee_proposal_id\n      onchain_tech_committee_proposal(\n        where: {NOT: {status_some: {OR: [{status: \"Closed\"}, {status: \"Approved\"}, {status: \"Executed\"}, {status: \"Disapproved\"}]}}}\n      ) {\n        id\n        status(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "LatestTipPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, topic: {id: {_eq: $postTopic}}, onchain_link: {onchain_tip_id: {_is_null: false}}}\n    order_by: {onchain_link: {id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_tip_id\n      onchain_tip(\n        where: {NOT: {tipStatus_some: {OR: [{status: \"TipClosed\"}, {status: \"TipClosing\"}, {status: \"TipRetracted\"}]}}}\n      ) {\n        id\n        reason\n        tipStatus(last: 1) {\n          id\n          status\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $postTopic: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "ProposalPostAndComments", "content": "{\n  posts(where: {onchain_link: {onchain_proposal_id: {_eq: $id}}}) {\n    ...proposalPost\n  }\n}\n    ${ProposalPostFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "AllDemocracyProposalPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, topic: {id: {_eq: $postTopic}}, onchain_link: {onchain_proposal_id: {_is_null: false}}}\n    order_by: {onchain_link: {onchain_proposal_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_proposal_id\n      onchain_proposal(where: {}) {\n        id\n        proposalStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $postTopic: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "AllReferendaPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, onchain_link: {onchain_referendum_id: {_is_null: false}}}\n    order_by: {onchain_link: {onchain_referendum_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_referendum_id\n      onchain_referendum(where: {}) {\n        id\n        end\n        referendumStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "SearchPosts", "content": "{\n  posts(\n    order_by: {id: desc}\n    limit: 20\n    where: {_or: [{title: {_ilike: $term}}, {content: {_ilike: $term}}]}\n  ) {\n    ...searchPostFields\n  }\n}\n    ${SearchPostFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($term: String!)"}, {"type": "mutation", "name": "changeUsername", "content": "{\n  changeUsername(username: $username, password: $password) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($username: String!, $password: String!)"}, {"type": "mutation", "name": "changePassword", "content": "{\n  changePassword(oldPassword: $oldPassword, newPassword: $newPassword) {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($oldPassword: String!, $newPassword: String!)"}, {"type": "mutation", "name": "addressLinkStart", "content": "{\n  addressLinkStart(network: $network, address: $address) {\n    sign_message\n    message\n    address_id\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($network: String!, $address: String!)"}, {"type": "mutation", "name": "resendVerifyEmailToken", "content": "{\n  resendVerifyEmailToken {\n    message\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}}, {"type": "mutation", "name": "setDefaultAddress", "content": "{\n  setDefaultAddress(address: $address) {\n    message\n    token\n  }\n}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($address: String!)"}, {"type": "query", "name": "TechCommitteeProposalPostAndComments", "content": "{\n  posts(where: {onchain_link: {onchain_tech_committee_proposal_id: {_eq: $id}}}) {\n    ...techCommitteeProposalPost\n  }\n}\n    ${TechCommitteeProposalPostFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "AllTechCommitteeProposalPosts", "content": "{\n  posts(\n    limit: $limit\n    where: {type: {id: {_eq: $postType}}, onchain_link: {onchain_tech_committee_proposal_id: {_is_null: false}}}\n    order_by: {onchain_link: {onchain_tech_committee_proposal_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_tech_committee_proposal_id\n      onchain_tech_committee_proposal(where: {}) {\n        id\n        method\n        status(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $limit: Int! = 5)"}, {"type": "query", "name": "TrackerDemocracyProposalPosts", "content": "{\n  posts(\n    where: {type: {id: {_eq: $postType}}, onchain_link: {onchain_proposal_id: {_in: $onchainProposalIds}}}\n    order_by: {onchain_link: {onchain_proposal_id: desc}}\n  ) {\n    id\n    title\n    author {\n      ...authorFields\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_proposal_id\n      onchain_proposal(where: {}) {\n        id\n        proposalStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    ${AuthorFieldsFragmentDoc}", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/generated/graphql.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($postType: Int!, $onchainProposalIds: [Int!]!)"}, {"type": "mutation", "name": "AddressLogin", "content": "{\n        addressLogin(address: $address, signature:$signature){\n            token\n        }\n    }", "metadata": {"commit_hash": "0249cf16929343c7f516942ddabca4e77cc7b70d", "file": "front-end/src/components/Login/query.tsx", "repo": "paritytech_polkassembly"}, "arguments": "($address: String!, $signature: String!)"}, {"type": "mutation", "name": "EditInstrument", "content": "{\n  editInstrument(\n    exchangeId: $exchangeId\n    instrumentId: $instrumentId\n    instrument: {instrumentType: $instrumentType, name: $name, positionLimit: $positionLimit, tickSizeMin: $tickSize, bondFixedPrice: $bondFixedPrice, bondVolatility: $bondVolatility}\n  ) {\n    id\n    name\n    tickSizeMin\n    positionLimit\n    bondFixedPrice\n    bondVolatility\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}, "arguments": "($exchangeId: String!, $instrumentId: String!, $instrumentType: String!, $name: String!, $positionLimit: Int!, $tickSize: Int!, $bondFixedPrice: Int!, $bondVolatility: Int!)"}, {"type": "mutation", "name": "CreateInvite", "content": "{\n  createInvite(createInviteInput: {exchangeId: $exchangeId, userId: $userId}) {\n    exchangeId\n    userId\n    id\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}, "arguments": "($exchangeId: String!, $userId: String!)"}, {"type": "query", "name": "CheckInvite", "content": "{\n  checkInvite(id: $id)\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "GenerateApiKey", "content": "{\n  generateApiKey(exchangeId: $exchangeId, forceNew: $forceNew) {\n    apiKey\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}, "arguments": "($exchangeId: String!, $forceNew: Boolean!)"}, {"type": "query", "name": "GetProfitLoss", "content": "{\n  exchange(id: $exchangeId) {\n    profitLoss {\n      instrument\n      profitLoss\n    }\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}, "arguments": "($exchangeId: ID!)"}, {"type": "query", "name": "CurrentUser", "content": "{\n  currentUser {\n    name\n    profilePicUrl\n    userPermissions {\n      id\n      apiKey\n      permission\n      exchange {\n        id\n        name\n        colour\n        profitLoss {\n          profitLoss\n        }\n        userPermissions {\n          id\n        }\n        instruments {\n          name\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0e1ca36bbee786a943ea538781bac3625d236722", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "UOA-CS732-SE750-Students-2022_project-group-magenta-mice"}}, {"type": "query", "name": "getMembers", "content": "{\n    members {\n      members(after: $after, orderBy: FIRSTNAME, pageSize: 20) {\n        cursor\n        members {\n          id\n          firstName\n          lastName\n          profileSlug\n          jobTitle\n          company\n          profileImage\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/members.js", "repo": "ThatConference_that-website"}, "arguments": "($after: String)"}, {"type": "query", "name": "getEvent", "content": "{\n    events {\n      event(findBy: { id: $eventId }) {\n        get {\n          id\n          name\n          slogan\n          startDate\n          endDate\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/[markdown].js", "repo": "ThatConference_that-website"}, "arguments": "($eventId: ID!)"}, {"type": "mutation", "name": "updateMember", "content": "{\n    members {\n      member {\n        update(profile: $profile) {\n          id\n          profileSlug\n          firstName\n          lastName\n          email\n          canFeature\n          createdAt\n          lastUpdatedAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/member/edit.js", "repo": "ThatConference_that-website"}, "arguments": "($profile: ProfileUpdateInput!)"}, {"type": "query", "name": "getEvent", "content": "{\n    events {\n      event(findBy: { id: $eventId }) {\n        get {\n          id\n          name\n          slogan\n          startDate\n          endDate\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/wi/2021/[markdown].js", "repo": "ThatConference_that-website"}, "arguments": "($eventId: ID!)"}, {"type": "query", "name": "getEvent", "content": "{\n    events {\n      event(findBy: { slug: $slug }) {\n        get {\n          id\n          milestones {\n            title\n            description\n            dueDate\n          }\n          notifications {\n            id\n            shouldFeature\n            title\n            message\n            startDate\n            endDate\n            link\n            linkText\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/wi/2021/important-dates.js", "repo": "ThatConference_that-website"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "getPartners", "content": "{\n    events {\n      event(findBy: { slug: $slug }) {\n        get {\n          id\n          name\n          slug\n          year\n          partners {\n            id\n            slug\n            level\n            placement\n            companyName\n            companyLogo\n            heroImage\n            website\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/wi/2021/partners.js", "repo": "ThatConference_that-website"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "getPartnerBySlug", "content": "{\n    partners {\n      partner(findBy: { slug: $slug }) {\n        id\n        slug\n        companyName\n        companyLogo\n        heroImage\n        website\n        goals\n        aboutUs\n        city\n        state\n        contactNumber\n        linkedIn\n        github\n        youtube\n        instagram\n        twitter\n        facebook\n        twitch\n        chat\n        blog\n        vlog\n        city\n        state\n        jobListings(isFeatured: true) {\n          id\n          title\n          description\n          slug\n        }\n        members {\n          id\n          firstName\n          lastName\n          jobTitle\n          partnerFeaturedOrder\n          profileImage\n        }\n        sessions {\n          id\n          title\n          shortDescription\n          speakers {\n            id\n            firstName\n            lastName\n            profileImage\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "pages/partner/[slug].js", "repo": "ThatConference_that-website"}, "arguments": "($slug: Slug!)"}, {"type": "query", "name": "getEvent", "content": "{\n    events {\n      event(findBy: { id: $eventId }) {\n        get {\n          id\n          slug\n          notifications {\n            id\n            shouldFeature\n            title\n            message\n            startDate\n            endDate\n            link\n            linkText\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Header/default.js", "repo": "ThatConference_that-website"}, "arguments": "($eventId: ID!)"}, {"type": "query", "name": "getSessionById", "content": "{\n    sessions {\n      me {\n        session(id: $sessionId) {\n          id\n          type\n          category\n          status\n          title\n          shortDescription\n          longDescription\n          primaryCategory\n          secondaryCategory\n          targetAudience\n          supportingArtifacts {\n            name\n            url\n          }\n          prerequisites\n          agenda\n          takeaways\n          canRecord\n          mentorship\n          whyAreYou\n          otherComments\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/shared/SessionPreview.js", "repo": "ThatConference_that-website"}, "arguments": "($sessionId: ID!)"}, {"type": "mutation", "name": "castVote", "content": "{\n    sessions {\n      voting(eventId: $eventId) {\n        cast(vote: $vote) {\n          id\n          notes\n          memberId\n          vote\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Voting/Shared/SlimSession.js", "repo": "ThatConference_that-website"}, "arguments": "($eventId: ID!, $vote: VoteInput!)"}, {"type": "mutation", "name": "updateSession", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            type\n            title\n            category\n            status\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Session/Submit/Intro.js", "repo": "ThatConference_that-website"}, "arguments": "($sessionId: ID!, $session: SessionUpdateInput!)"}, {"type": "mutation", "name": "updateSession", "content": "{\n    sessions {\n      session(id: $sessionId) {\n        update {\n          update(session: $session) {\n            id\n            title\n            status\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Member/MySessions/Current.js", "repo": "ThatConference_that-website"}, "arguments": "($sessionId: ID!, $session: SessionUpdateInput!)"}, {"type": "query", "name": "getSessionById", "content": "{\n    sessions {\n      me {\n        session(id: $sessionId) {\n          id\n          type\n          category\n          status\n          title\n          shortDescription\n          longDescription\n          primaryCategory\n          secondaryCategory\n          targetAudience\n          supportingArtifacts {\n            name\n            url\n          }\n          prerequisites\n          agenda\n          takeaways\n          canRecord\n          mentorship\n          whyAreYou\n          otherComments\n          status\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/Member/SessionEdit/Details.js", "repo": "ThatConference_that-website"}, "arguments": "($sessionId: ID!)"}, {"type": "query", "name": "getEvent", "content": "{\n    events {\n      event(findBy: { slug: $slug }) {\n        get {\n          id\n          name\n          slogan\n          description\n          slug\n          startDate\n          endDate\n          isVotingOpen\n          isCallForSpeakersOpen\n          venues {\n            id\n            name\n            address\n            city\n            state\n            zip\n          }\n          milestones {\n            title\n            description\n            dueDate\n          }\n          notifications {\n            id\n            shouldFeature\n            title\n            message\n            startDate\n            endDate\n            link\n            linkText\n          }\n          theme {\n            primary\n            secondary\n            heroSlug\n          }\n          partners {\n            id\n            slug\n            level\n            placement\n            companyName\n            companyLogo\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/EventPages/OneDayEvent.js", "repo": "ThatConference_that-website"}, "arguments": "($slug: String!)"}, {"type": "mutation", "name": "updateMember", "content": "{\n    members {\n      member {\n        update(profile: $profile) {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "582ade4659fe025b61d78b3451fb4336700a8acc", "file": "components/CounselorAgreement/Acknowledgment.js", "repo": "ThatConference_that-website"}, "arguments": "($profile: ProfileUpdateInput!)"}, {"type": "mutation", "name": "UpdateProfile", "content": "{\n    profile(\n      update: {\n        primaryUsername: $primaryUsername\n        alternativeName: $alternativeName\n        description: $description\n        firstName: $firstName\n        funTitle: $funTitle\n        identities: $identities\n        lastName: $lastName\n        location: $location\n        phoneNumbers: $phoneNumbers\n        picture: $picture\n        pronouns: $pronouns\n        timezone: $timezone\n        languages: $languages\n        tags: $tags\n        uris: $uris\n        custom1PrimaryEmail: $custom1PrimaryEmail\n        custom2PrimaryEmail: $custom2PrimaryEmail\n        accessInformationMozilliansorgDisplay: $accessInformationMozilliansorgDisplay\n        accessInformationLdapDisplay: $accessInformationLdapDisplay\n        staffInformationTitleDisplay: $staffInformationTitleDisplay\n        staffInformationOfficeLocationDisplay: $staffInformationOfficeLocationDisplay\n        primaryEmailDisplay: $primaryEmailDisplay\n      }\n    ) {\n      uuid {\n        value\n        metadata {\n          display\n        }\n      }\n      primaryUsername {\n        value\n        metadata {\n          display\n        }\n      }\n      alternativeName {\n        value\n        metadata {\n          display\n        }\n      }\n      description {\n        value\n        metadata {\n          display\n        }\n      }\n      firstName {\n        value\n        metadata {\n          display\n        }\n      }\n      funTitle {\n        value\n        metadata {\n          display\n        }\n      }\n      identities {\n        githubIdV3 {\n          value\n          metadata {\n            display\n          }\n        }\n        bugzillaMozillaOrgId {\n          value\n          metadata {\n            display\n          }\n        }\n        bugzillaMozillaOrgPrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n        custom1PrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n        custom2PrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n      }\n      lastName {\n        value\n        metadata {\n          display\n        }\n      }\n      location {\n        value\n        metadata {\n          display\n        }\n      }\n      phoneNumbers {\n        values\n        metadata {\n          display\n        }\n      }\n      picture {\n        value\n        metadata {\n          display\n        }\n      }\n      primaryEmail {\n        value\n        metadata {\n          display\n        }\n      }\n      pronouns {\n        value\n        metadata {\n          display\n        }\n      }\n      timezone {\n        value\n        metadata {\n          display\n        }\n      }\n      uris {\n        values\n        metadata {\n          display\n        }\n      }\n      languages {\n        values\n        metadata {\n          display\n        }\n      }\n      tags {\n        values\n        metadata {\n          display\n        }\n      }\n      accessInformation {\n        mozilliansorg {\n          values\n          metadata {\n            display\n          }\n        }\n        ldap {\n          values\n          metadata {\n            display\n          }\n        }\n      }\n      staffInformation {\n        staff {\n          value\n          metadata {\n            display\n          }\n        }\n        team {\n          value\n          metadata {\n            display\n          }\n        }\n        title {\n          value\n          metadata {\n            display\n          }\n        }\n        officeLocation {\n          value\n          metadata {\n            display\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "22138104b54eba7aea621a502e3a1d9396d6a92d", "file": "src/queries/profile.js", "repo": "mozilla-iam_dino-park-front-end"}, "arguments": "(\n    $primaryUsername: StringWithDisplay\n    $alternativeName: StringWithDisplay\n    $description: StringWithDisplay\n    $firstName: StringWithDisplay\n    $funTitle: StringWithDisplay\n    $identities: IdentitiesWithDisplay\n    $lastName: StringWithDisplay\n    $location: StringWithDisplay\n    $phoneNumbers: KeyValuesWithDisplay\n    $picture: StringWithDisplay\n    $pronouns: StringWithDisplay\n    $timezone: StringWithDisplay\n    $languages: KeyValuesWithDisplay\n    $tags: KeyValuesWithDisplay\n    $uris: KeyValuesWithDisplay\n    $custom1PrimaryEmail: StringWithDisplay\n    $custom2PrimaryEmail: StringWithDisplay\n    $accessInformationMozilliansorgDisplay: Display\n    $accessInformationLdapDisplay: Display\n    $staffInformationTitleDisplay: Display\n    $staffInformationOfficeLocationDisplay: Display\n    $primaryEmailDisplay: Display\n  )"}, {"type": "query", "name": "DisplayProfile", "content": "{\n    profile(username: $username, viewAs: $viewAs) {\n      uuid {\n        value\n      }\n      accessInformation {\n        mozilliansorg {\n          values\n          metadata {\n            display\n          }\n        }\n        ldap {\n          values\n          metadata {\n            display\n          }\n        }\n      }\n      alternativeName {\n        value\n        metadata {\n          display\n        }\n      }\n      description {\n        value\n        metadata {\n          display\n        }\n      }\n      uuid {\n        value\n        metadata {\n          display\n        }\n      }\n      firstName {\n        value\n        metadata {\n          display\n        }\n      }\n      funTitle {\n        value\n        metadata {\n          display\n        }\n      }\n      identities {\n        githubIdV3 {\n          value\n          metadata {\n            display\n          }\n        }\n        bugzillaMozillaOrgId {\n          value\n          metadata {\n            display\n          }\n        }\n        bugzillaMozillaOrgPrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n        custom1PrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n        custom2PrimaryEmail {\n          value\n          metadata {\n            display\n          }\n        }\n      }\n      lastName {\n        value\n        metadata {\n          display\n        }\n      }\n      location {\n        value\n        metadata {\n          display\n        }\n      }\n      picture {\n        value\n        metadata {\n          display\n        }\n      }\n      primaryEmail {\n        value\n        metadata {\n          display\n        }\n      }\n      pronouns {\n        value\n        metadata {\n          display\n        }\n      }\n      timezone {\n        value\n        metadata {\n          display\n        }\n      }\n      primaryUsername {\n        value\n        metadata {\n          display\n        }\n      }\n      phoneNumbers {\n        values\n        metadata {\n          display\n        }\n      }\n      staffInformation {\n        staff {\n          value\n          metadata {\n            display\n          }\n        }\n        team {\n          value\n          metadata {\n            display\n          }\n        }\n        title {\n          value\n          metadata {\n            display\n          }\n        }\n        officeLocation {\n          value\n          metadata {\n            display\n          }\n        }\n        workerType {\n          value\n          metadata {\n            display\n          }\n        }\n        costCenter {\n          value\n          metadata {\n            display\n          }\n        }\n      }\n      tags {\n        values\n        metadata {\n          display\n        }\n      }\n      languages {\n        values\n        metadata {\n          display\n        }\n      }\n      uris {\n        values\n        metadata {\n          display\n        }\n      }\n      pgpPublicKeys {\n        values\n        metadata {\n          display\n        }\n      }\n      sshPublicKeys {\n        values\n        metadata {\n          display\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "22138104b54eba7aea621a502e3a1d9396d6a92d", "file": "src/queries/profile.js", "repo": "mozilla-iam_dino-park-front-end"}, "arguments": "($username: String, $viewAs: Display = null)"}, {"type": "query", "name": "Shops", "content": "{\n    shops(country: $country, nameIsLike: $name, reverse: $reverse) {\n      id\n      domain\n      storefrontAccessToken\n    }\n  }", "metadata": {"commit_hash": "70998b427ad850d5beb881dce7d48219ca142e0d", "file": "pages/index.js", "repo": "Shopify_shopify-marketplaces-buyer-app"}, "arguments": "($country: String, $name: String, $reverse: Boolean)"}, {"type": "query", "name": "ShopDetails", "content": "{\n      shop {\n        name\n        description\n        primaryDomain {\n          url\n          host\n        }\n        paymentSettings {\n          currencyCode\n        }\n      }\n      productTypes(first: 250) {\n        edges {\n          node\n        }\n      }\n    }", "metadata": {"commit_hash": "70998b427ad850d5beb881dce7d48219ca142e0d", "file": "pages/shops/[id].js", "repo": "Shopify_shopify-marketplaces-buyer-app"}}, {"type": "mutation", "name": "cartCreate", "content": "{\n    cartCreate(input: $input) {\n      cart {\n        id\n        checkoutUrl\n      }\n      userErrors {\n        code\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "70998b427ad850d5beb881dce7d48219ca142e0d", "file": "helpers/cartHelpers.js", "repo": "Shopify_shopify-marketplaces-buyer-app"}, "arguments": "($input: CartInput)"}, {"type": "query", "name": "getMyTimeline", "content": "{\n      getMyTimeline(limit: $limit, nextToken: $nextToken) {\n        nextToken\n        tweets {\n          id\n          createdAt\n          text\n        }\n      }\n    }", "metadata": {"commit_hash": "cdc3e383299f4b6e33541d9a79562fcfa59301a7", "file": "aws/Burning-Monk/Testing-Serverless-Apps/ch01-04-e2e-troubleshoot/__tests__/steps/when.js", "repo": "muratkeremozcan_books"}, "arguments": "($limit: Int!, $nextToken: String)"}, {"type": "mutation", "name": "tweet", "content": "{\n      tweet(text: $text) {\n        id\n        createdAt\n        text\n      }\n    }", "metadata": {"commit_hash": "cdc3e383299f4b6e33541d9a79562fcfa59301a7", "file": "aws/Burning-Monk/Testing-Serverless-Apps/ch03-test-appsync/__tests__/steps/when.js", "repo": "muratkeremozcan_books"}, "arguments": "($text: String!)"}, {"type": "query", "name": "system", "content": "{\n    system(order_by: { timestamp: desc }, limit: 1) {\n      block_height\n      chain\n      node_name\n      node_version\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "fd1f463c94d6865ebe5e62b0e024d7455f603a0a", "file": "store/system.js", "repo": "Colm3na_polkastats-v3"}}, {"type": "query", "name": "byFilter", "content": "{\n                languages(filter: $filter) {\n                    ${LANGUAGE_COMPLETE}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/language/LanguageClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($filter: String!)"}, {"type": "mutation", "name": "writeSettings", "content": "{\n                languageWriteSettings(languageAddress: $languageAddress, settings: $settings)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/language/LanguageClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($languageAddress: String!, $settings: String!)"}, {"type": "query", "name": "languageMeta", "content": "{\n                languageMeta(address: $address) {\n                    ${LANGUAGE_META}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/language/LanguageClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "(\n                $address: String!,\n            )"}, {"type": "query", "name": "perspectives", "content": "{\n                perspectives {\n                    ${PERSPECTIVE_HANDLE_FIELDS}\n                }\n                \n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "perspectivePublishSnapshot", "content": "{\n                perspectivePublishSnapshot(uuid: $uuid)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($uuid: String!)"}, {"type": "query", "name": "perspectiveQueryLinks", "content": "{\n                perspectiveQueryLinks(query: $query, uuid: $uuid) {\n                    ${LINK_EXPRESSION_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($uuid: String!, $query: LinkQuery!)"}, {"type": "mutation", "name": "perspectiveAddLinks", "content": "{\n                perspectiveAddLinks(links: $links, uuid: $uuid) {\n                    ${LINK_EXPRESSION_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($uuid: String!, $links: [LinkInput!]!)"}, {"type": "mutation", "name": "perspectiveLinkMutations", "content": "{\n                perspectiveLinkMutations(mutations: $mutations, uuid: $uuid) {\n                    additions {\n                        ${LINK_EXPRESSION_FIELDS}\n                    }\n                    removals {\n                        ${LINK_EXPRESSION_FIELDS}\n                    }\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/perspectives/PerspectiveClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($uuid: String!, $mutations: LinkMutations!)"}, {"type": "mutation", "name": "runtimeQuit", "content": "{ runtimeQuit }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "addTrustedAgents", "content": "{\n                addTrustedAgents(agents: $agents)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($agents: [String!]!)"}, {"type": "mutation", "name": "runtimeAddKnownLinkLanguageTemplates", "content": "{\n                runtimeAddKnownLinkLanguageTemplates(addresses: $addresses)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($addresses: [String!]!)"}, {"type": "mutation", "name": "runtimeAddFriends", "content": "{\n                runtimeAddFriends(dids: $dids)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($dids: [String!]!)"}, {"type": "mutation", "name": "runtimeHcAddAgentInfos", "content": "{\n                runtimeHcAddAgentInfos(agentInfos: $agentInfos)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($agentInfos: String!)"}, {"type": "mutation", "name": "runtimeSetStatus", "content": "{\n                runtimeSetStatus(status: $status)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($status: PerspectiveInput!)"}, {"type": "mutation", "name": "runtimeFriendSendMessage", "content": "{\n                runtimeFriendSendMessage(did: $did, message: $message)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/runtime/RuntimeClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($did: String!, $message: PerspectiveInput!)"}, {"type": "mutation", "name": "agentLock", "content": "{\n                agentLock(passphrase: $passphrase) {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($passphrase: String!)"}, {"type": "mutation", "name": "agentUnlock", "content": "{\n                agentUnlock(passphrase: $passphrase) {\n                    ${AGENT_STATUS_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($passphrase: String!)"}, {"type": "query", "name": "agentByDID", "content": "{\n                agentByDID(did: $did) {\n                    ${AGENT_SUBITEMS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($did: String!)"}, {"type": "mutation", "name": "agentUpdatePublicPerspective", "content": "{\n                agentUpdatePublicPerspective(perspective: $perspective) {\n                    ${AGENT_SUBITEMS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($perspective: PerspectiveInput!)"}, {"type": "mutation", "name": "agentUpdateDirectMessageLanguage", "content": "{\n                agentUpdateDirectMessageLanguage(directMessageLanguage: $directMessageLanguage) {\n                    ${AGENT_SUBITEMS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($directMessageLanguage: String!)"}, {"type": "mutation", "name": "agentDeleteEntanglementProofs", "content": "{\n                agentDeleteEntanglementProofs(proofs: $proofs) {\n                    ${ENTANGLEMENT_PROOF_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($proofs: [EntanglementProofInput!]!)"}, {"type": "mutation", "name": "agentRequestCapability", "content": "{\n            agentRequestCapability(authInfo: $authInfo)\n          }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($authInfo: AuthInfoInput!)"}, {"type": "mutation", "name": "agentPermitCapability", "content": "{\n            agentPermitCapability(auth: $auth)\n          }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($auth: String!)"}, {"type": "mutation", "name": "agentGenerateJwt", "content": "{\n            agentGenerateJwt(requestId: $requestId, rand: $rand)\n          }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($requestId: String!, $rand: String!)"}, {"type": "mutation", "name": "agentRevokeToken", "content": "{\n                agentRevokeToken(requestId: $requestId) {\n                    ${Apps_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($requestId: String!)"}, {"type": "query", "name": "agentIsLocked", "content": "{\n            agentIsLocked\n          }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}}, {"type": "mutation", "name": "agentSignMessage", "content": "{\n                agentSignMessage(message: $message) {\n                    ${AGENT_SIGNATURE_FIELDS}\n                }\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/agent/AgentClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($message: String!)"}, {"type": "mutation", "name": "expressionInteract", "content": "{\n                expressionInteract(url: $url, interactionCall: $interactionCall)\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/expression/ExpressionClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "($url: String!, $interactionCall: InteractionCall!)"}, {"type": "mutation", "name": "neighbourhoodSendBroadcast", "content": "{\n                neighbourhoodSendBroadcast(\n                    perspectiveUUID: $perspectiveUUID,\n                    payload: $payload\n                )\n            }", "metadata": {"commit_hash": "8c4965bebd696ac455175c75dc24d04031eceda6", "file": "core/src/neighbourhood/NeighbourhoodClient.ts", "repo": "perspect3vism_ad4m"}, "arguments": "(\n                $perspectiveUUID: String!,\n                $payload: PerspectiveInput!\n            )"}, {"type": "query", "name": "IsUserLoggedIn", "content": "{\n    isLoggedIn @client\n  }", "metadata": {"commit_hash": "b665a32a216dd9c3439369fb59e665b3b8d05e74", "file": "frontend/src/index.tsx", "repo": "zzy_actix-graphql-react"}}, {"type": "mutation", "name": "login", "content": "{\n    login(email: $email)\n  }", "metadata": {"commit_hash": "b665a32a216dd9c3439369fb59e665b3b8d05e74", "file": "frontend/src/pages/login.tsx", "repo": "zzy_actix-graphql-react"}, "arguments": "($email: String!)"}, {"type": "query", "name": "GetLaunch", "content": "{\n    launch(id: $launchId) {\n      ...LaunchTile\n    }\n  }\n  ${LAUNCH_TILE_DATA}", "metadata": {"commit_hash": "b665a32a216dd9c3439369fb59e665b3b8d05e74", "file": "frontend/src/containers/cart-item.tsx", "repo": "zzy_actix-graphql-react"}, "arguments": "($launchId: ID!)"}, {"type": "mutation", "name": "addPost", "content": "{\n          addPost1: addPost(post: $post1) {\n            code\n            message\n          }\n          addPost2: addPost(post: $post2) {\n            code\n            message\n          }\n        }", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/client-batching-query/__tests__/index.integration.spec.ts", "repo": "mrdulin_apollo-graphql-tutorial"}, "arguments": "($post1: PostInput!, $post2: PostInput!)"}, {"type": "query", "name": "Posts", "content": "{\n      posts {\n        ...PostWithAuthor\n      }\n    }\n\n    ${Fragment.PostWithAuthor}", "metadata": {"commit_hash": "db127c2033c628016a6be64047f634e98981b860", "file": "src/resolve-fields-in-one-resolver/__tests__/resolvers.spec.ts", "repo": "mrdulin_apollo-graphql-tutorial"}}, {"type": "query", "name": "fetchUser", "content": "{\n          me {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "f03e1a5786db0afe7dcf0191ee25097b4385f90e", "file": "src/core/apiclients/graphql/GraphQLAPIClient.ts", "repo": "orangeloops_public-ol-web-template"}}, {"type": "mutation", "name": "refreshTokens", "content": "{\n          refreshTokens(token: $token) {\n            token\n            refreshToken\n            expiresAt\n          }\n        }", "metadata": {"commit_hash": "f03e1a5786db0afe7dcf0191ee25097b4385f90e", "file": "src/core/apiclients/graphql/GraphQLAPIClient.ts", "repo": "orangeloops_public-ol-web-template"}, "arguments": "($token: String!)"}, {"type": "query", "name": "GetRepoBySlug", "content": "{\n    repo(slug: $slug) {\n      name\n      slug\n      owner\n      benchmarks {\n        name\n        measurements {\n          collectedAt\n          result {\n            average\n            ips\n            maximum\n            median\n            minimum\n            mode\n            runTimes\n            sampleSize\n            stdDev\n            stdDevIps\n            stdDevRatio\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "51ed43ee1f30cf3fbf441f2623f1bf6322c0486b", "file": "web/src/graphql/queries/index.js", "repo": "spawnfest_elixirbench"}, "arguments": "($slug: String)"}, {"type": "mutation", "name": "ScheduleJob", "content": "{\n    scheduleJob(repoSlug: $repoSlug, branchName: $branchName, commitSha: $commitSha) {\n      id\n    }\n  }", "metadata": {"commit_hash": "51ed43ee1f30cf3fbf441f2623f1bf6322c0486b", "file": "web/src/graphql/mutations/index.js", "repo": "spawnfest_elixirbench"}, "arguments": "($repoSlug: String!, $branchName: String!, $commitSha: String!)"}, {"type": "query", "name": "members", "content": "{\n    members(where: { molochAddress: $contractAddr }) {\n      id\n      delegateKey\n      molochAddress\n      shares\n      memberAddress\n    }\n  }", "metadata": {"commit_hash": "51995b7c5a268264235aee2f64af86f691ad7a6b", "file": "src/util/queries.js", "repo": "HausDAO_daohaus-web"}, "arguments": "($contractAddr: String!)"}, {"type": "query", "name": "members", "content": "{\n    members(where: { memberAddress: $memberAddress, exists: true }) {\n      id\n      memberAddress\n      moloch {\n        id\n        title\n        version\n        proposals(orderBy: proposalId, orderDirection: desc, first: 10) {\n          id\n          createdAt\n          proposalId\n          proposalIndex\n          processed\n          sponsored\n          details\n          newMember\n          whitelist\n          guildkick\n          trade\n          cancelled\n          aborted\n          votingPeriodStarts\n          votingPeriodEnds\n          gracePeriodEnds\n          molochAddress\n          molochVersion\n          proposalType @client\n          description @client\n          title @client\n          activityFeed @client\n          votes(where: { memberAddress: $memberAddress }) {\n            id\n            memberAddress\n          }\n        }\n        rageQuits {\n          id\n          createdAt\n          shares\n          loot\n          memberAddress\n          molochAddress\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "51995b7c5a268264235aee2f64af86f691ad7a6b", "file": "src/util/queries.js", "repo": "HausDAO_daohaus-web"}, "arguments": "($memberAddress: String!)"}, {"type": "query", "name": "celoAccountBalances", "content": "{\n  celoAccountBalances(address: $address) {\n    address\n    height\n    availableGoldBalance\n    totalLockedGoldBalance\n    nonVotingLockedGoldBalance\n    votingLockedGoldBalance\n    pendingWithdrawalBalance\n    celoUSDValue\n    delegations {\n      group\n      totalVotes\n      activeVotes\n      pendingVotes\n    }\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($address: String!)"}, {"type": "query", "name": "celoGovernanceTransactions", "content": "{\n  celoGovernanceTransactions(address: $address) {\n    blockNumber\n    timestamp\n    hash\n    from\n    to\n    details {\n      nonce\n      gasLimit\n      gasPrice\n      gasUsed\n      feeCurrency\n      gatewayFeeRecipient\n      gatewayFee\n      to\n      value\n    }\n    tags {\n      eventname\n      source\n      parameters\n    }\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($address: String!)"}, {"type": "query", "name": "celoTransaction", "content": "{\n  celoTransaction(hash: $hash) {\n    blockNumber\n    timestamp\n    hash\n    from\n    to\n    details {\n      nonce\n      gasLimit\n      gasPrice\n      gasUsed\n      feeCurrency\n      gatewayFeeRecipient\n      gatewayFee\n      to\n      value\n    }\n    tags {\n      eventname\n      source\n      parameters\n    }\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($hash: String!)"}, {"type": "query", "name": "cosmosAccountHistory", "content": "{\n  cosmosAccountHistory(address: $address, fiat: $fiat) {\n    balanceHistory {\n      address\n      denom\n      balance\n      height\n      timestamp\n      chain\n    }\n    delegations {\n      balance\n      address\n      timestamp\n    }\n    unbondings {\n      balance\n      address\n      timestamp\n    }\n    delegatorRewards {\n      balance\n      height\n      address\n      timestamp\n      denom\n    }\n    validatorCommissions {\n      balance\n      height\n      validator\n      timestamp\n      denom\n    }\n    fiatPriceHistory {\n      price\n      timestamp\n    }\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($address: String!, $fiat: String!)"}, {"type": "query", "name": "cosmosDistributionParameters", "content": "{\n  cosmosDistributionParameters(network: $network) {\n    base_proposer_reward\n    bonus_proposer_reward\n    community_tax\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($network: String!)"}, {"type": "query", "name": "cosmosGovernanceParametersDeposit", "content": "{\n  cosmosGovernanceParametersDeposit(network: $network) {\n    min_deposit {\n      denom\n      amount\n    }\n    max_deposit_period\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($network: String!)"}, {"type": "query", "name": "cosmosValidatorDistribution", "content": "{\n  cosmosValidatorDistribution(validatorAddress: $validatorAddress) {\n    operator_address\n    self_bond_rewards {\n      denom\n      amount\n    }\n    val_commission {\n      denom\n      amount\n    }\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($validatorAddress: String!)"}, {"type": "query", "name": "cosmosValidatorSets", "content": "{\n  cosmosValidatorSets(network: $network) {\n    block_height\n    validators {\n      address\n      pub_key\n      voting_power\n      proposer_priority\n    }\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($network: String!)"}, {"type": "query", "name": "fiatPriceHistory", "content": "{\n  fiatPriceHistory(fiat: $fiat, network: $network) {\n    price\n    timestamp\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($fiat: String!, $network: String!)"}, {"type": "query", "name": "oasisAccountBalances", "content": "{\n  oasisAccountBalances(address: $address) {\n    available\n    staked {\n      balance\n      shares\n    }\n    unbonding {\n      balance\n      shares\n    }\n    rewards\n    commissions\n    meta {\n      is_validator\n      is_delegator\n    }\n    delegations {\n      delegator\n      validator\n      amount\n    }\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($address: String!)"}, {"type": "query", "name": "oasisAccountHistory", "content": "{\n  oasisAccountHistory(address: $address, fiat: $fiat) {\n    date\n    height\n    address\n    rewards\n    balance\n    meta {\n      is_validator\n      is_delegator\n    }\n    delegations {\n      delegator\n      validator\n      amount\n    }\n    debonding_balance {\n      balance\n      shares\n    }\n    staked_balance {\n      balance\n      shares\n    }\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}, "arguments": "($address: String!, $fiat: String!)"}, {"type": "query", "name": "oasisValidators", "content": "{\n  oasisValidators {\n    address\n    name\n    commission\n    website\n    iconUrl\n    keybase\n    email\n    twitter\n    active\n  }\n}", "metadata": {"commit_hash": "f1d95f4b660fb0c7b9aa2176c0032162d48fbc00", "file": "packages/utils/src/graphql/types.tsx", "repo": "ChorusOne_anthem"}}, {"type": "query", "name": "AllDraftPages", "content": "{\n\t\tpages: draftPages {\n\t\t\t${selection}\n\t\t}\n\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/graphql.js", "repo": "WestpacGEL_GEL"}}, {"type": "mutation", "name": "name", "content": "{\n\t\tcreateImage(data: $data) {\n\t\t\tid\n\t\t\timage {\n\t\t\t\tid\n\t\t\t\tfilename\n\t\t\t\tpublicUrl\n\t\t\t\tencoding\n\t\t\t\tpath\n\t\t\t}\n\t\t\tcaption\n\t\t}\n\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/dynamic-blocks/image.js", "repo": "WestpacGEL_GEL"}, "arguments": "($data: ImageCreateInput!)"}, {"type": "query", "name": "article", "content": "{\n\t\t\t\tarticles(where: { url: { equals: $url } }) {\n\t\t\t\t\tid\n\t\t\t\t\tcontent {\n\t\t\t\t\t\tdocument(hydrateRelationships: true)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/src/pages/articles/index.js", "repo": "WestpacGEL_GEL"}, "arguments": "($url: String!)"}, {"type": "query", "name": "article", "content": "{\n\t\t\t\tarticles(where: { url: { equals: $url } }) {\n\t\t\t\t\tid\n\t\t\t\t\turl\n\t\t\t\t\tpageTitle\n\t\t\t\t\tauthor {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tpageImage {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tfilename\n\t\t\t\t\t\tpublicUrl\n\t\t\t\t\t}\n\t\t\t\t\tcontent {\n\t\t\t\t\t\tdocument\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "30e2909c11bd3ec434bdb0b43b98589aaa099037", "file": "website/src/pages/articles/[slug].js", "repo": "WestpacGEL_GEL"}, "arguments": "($url: String!)"}, {"type": "mutation", "name": "signin", "content": "{\n        auth: authenticateUserWithPassword(email: $identity, password: $secret) {\n            user: item {\n                id\n            }\n            token\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/apollo-server-client/lib/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($identity: String, $secret: String)"}, {"type": "mutation", "name": "authenticateUserWithPhoneAndPassword", "content": "{\n        obj: authenticateUserWithPhoneAndPassword(data: { phone: $phone, password: $password }) {\n            item {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/keystone/test.utils.js", "repo": "open-condo-software_condo"}, "arguments": "($phone: String!, $password: String!)"}, {"type": "query", "name": "getAll$", "content": "{MODELS}($where: ${whereName}, $first: Int = ${DEFAULT_PAGE_SIZE}, $skip: Int, $sortBy: [${sortName}!]) {\n             objs: ${queryName}(where: $where, first: $first, skip: $skip, sortBy: $sortBy) ${fields}\n             meta: ${metaQueryName}(where: $where) { count }\n         }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "create$", "content": "{MODELS}($data: [${inputName}]) {\n             objs: ${mutationName}(data: $data) ${fields}\n         }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "packages/codegen/generate.gql.js", "repo": "open-condo-software_condo"}}, {"type": "mutation", "name": "setMessageStatus", "content": "{\n        result: setMessageStatus(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/notification/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: SetMessageStatusInput!)"}, {"type": "mutation", "name": "sendMessageToResidentScopes", "content": "{\n        result: sendMessageToResidentScopes(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/resident/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: SendMessageToResidentScopesServiceInput!)"}, {"type": "query", "name": "predictTicketClassification", "content": "{\n        obj: predictTicketClassification(data: $data) { id place { id name } category { id name }  }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: PredictTicketClassificationInput!)"}, {"type": "mutation", "name": "createBankAccountRequest", "content": "{\n        result: createBankAccountRequest(data: $data) { status id }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/banking/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: CreateBankAccountRequestInput!)"}, {"type": "query", "name": "ticketAnalyticsReport", "content": "{\n        result: ticketAnalyticsReport(data: $data) { groups { count status property dayGroup categoryClassifier executor assignee } ticketLabels { color label } }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/analytics/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: TicketAnalyticsReportInput!)"}, {"type": "mutation", "name": "sigin", "content": "{\n        obj: authenticateUserWithPassword(email: $identity, password: $secret) {\n            item {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($identity: String, $secret: String)"}, {"type": "mutation", "name": "startConfirmPhoneAction", "content": "{\n        result: startConfirmPhoneAction(data: $data) { token }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: StartConfirmPhoneActionInput!)"}, {"type": "mutation", "name": "resendConfirmPhoneActionSms", "content": "{\n        result: resendConfirmPhoneActionSms(data: $data) { status }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: ResendConfirmPhoneActionSmsInput!)"}, {"type": "mutation", "name": "registerNewServiceUser", "content": "{\n        result: registerNewServiceUser(data: $data) { id email password }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: RegisterNewServiceUserInput!)"}, {"type": "query", "name": "getAccessTokenByUserId", "content": "{\n        result: getAccessTokenByUserId(data: $data) { accessToken, ttl }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/user/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: GetAccessTokenByUserIdInput!)"}, {"type": "mutation", "name": "registerMultiPayment", "content": "{\n        result: registerMultiPayment(data: $data) { dv multiPaymentId webViewUrl feeCalculationUrl directPaymentUrl getCardTokensUrl }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/acquiring/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: RegisterMultiPaymentInput!)"}, {"type": "query", "name": "exportPaymentsToExcel", "content": "{\n        result: exportPaymentsToExcel(data: $data) { status, linkToFile }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/acquiring/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: ExportPaymentsToExcelInput!)"}, {"type": "query", "name": "getAllOrganizationEmployeesWithMeta", "content": "{\n        meta: _allOrganizationEmployeesMeta { count }\n        objs: allOrganizationEmployees(where: $where) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($where: OrganizationEmployeeWhereInput)"}, {"type": "query", "name": "getOrganizationEmployeeByIdWithInviteCode", "content": "{\n        objs: allOrganizationEmployees(\n            where: {\n                id: $id\n            }\n            first: 1\n        ) {\n            id\n            inviteCode\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}, "arguments": "(\n        $id: ID!\n    )"}, {"type": "mutation", "name": "inviteNewOrganizationEmployee", "content": "{\n        obj: inviteNewOrganizationEmployee(data: $data) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: InviteNewOrganizationEmployeeInput!)"}, {"type": "mutation", "name": "acceptOrRejectOrganizationInviteByCode", "content": "{\n        obj: acceptOrRejectOrganizationInviteByCode(inviteCode: $inviteCode, data: $data) ${ORGANIZATION_EMPLOYEE_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/organization/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($inviteCode: String!, $data: AcceptOrRejectOrganizationInviteInput!)"}, {"type": "mutation", "name": "_internalScheduleTaskByName", "content": "{\n        result: _internalScheduleTaskByName(data: $data) { id }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/common/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: _internalScheduleTaskByNameInput!)"}, {"type": "mutation", "name": "registerBillingReceipts", "content": "{\n        result: registerBillingReceipts(data: $data) ${BILLING_RECEIPT_FIELDS}\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/billing/gql.js", "repo": "open-condo-software_condo"}, "arguments": "($data: RegisterBillingReceiptsInput!)"}, {"type": "query", "name": "GetPropertyByIdQuery", "content": "{\n        objs: allProperties(where: {id: $propertyId, organization: { id: $organizationId }}) {\n            id\n            address\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "($propertyId: ID!, $organizationId: ID)"}, {"type": "query", "name": "selectSource", "content": "{\n        objs: allTicketClassifiers(where: {name_contains_i: $value, organization_is_null: true, parent_is_null: true}) {\n            id\n            name\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "($value: String)"}, {"type": "query", "name": "selectOrganizationEmployee", "content": "{\n        objs: allOrganizationEmployees(where: {name_contains_i: $value, organization: { id: $organizationId }}) {\n            isBlocked\n            name\n            id\n            user {\n                id\n            }\n            role {\n                id\n                name\n                canBeAssignedAsExecutor\n                canBeAssignedAsResponsible\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "($value: String, $organizationId: ID)"}, {"type": "query", "name": "selectTickets", "content": "{\n        objs: allTickets(where: $where, first: $first, skip: $skip) {\n            id\n            number\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "($where: TicketWhereInput, $first: Int, $skip: Int)"}, {"type": "query", "name": "selectTicketsCount", "content": "{\n        all: _allTicketsMeta(where: $where) {\n            count\n        }\n        ${TicketStatusTypeType.NewOrReopened}: _allTicketsMeta(where: { AND: [$whereWithoutStatuses, { status: { type: ${TicketStatusTypeType.NewOrReopened} } }]}) {\n            count\n        }\n        ${TicketStatusTypeType.Processing}: _allTicketsMeta(where: { AND: [$whereWithoutStatuses, { status: { type: ${TicketStatusTypeType.Processing} } }]}) {\n            count\n        }\n        ${TicketStatusTypeType.Deferred}: _allTicketsMeta(where: { AND: [$whereWithoutStatuses, { status: { type: ${TicketStatusTypeType.Deferred} } }]}) {\n            count\n        }\n        ${TicketStatusTypeType.Canceled}: _allTicketsMeta(where: { AND: [$whereWithoutStatuses, { status: { type: ${TicketStatusTypeType.Canceled} } }]}) {\n            count\n        }\n        ${TicketStatusTypeType.Completed}: _allTicketsMeta(where: { AND: [$whereWithoutStatuses, { status: { type: ${TicketStatusTypeType.Completed} } }]}) {\n            count\n        }\n        ${TicketStatusTypeType.Closed}: _allTicketsMeta(where: { AND: [$whereWithoutStatuses, { status: { type: ${TicketStatusTypeType.Closed} } }]}) {\n            count\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/ticket/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "($where: TicketWhereInput, $whereWithoutStatuses: TicketWhereInput)"}, {"type": "query", "name": "selectProperty", "content": "{\n        objs: allProperties(where: $where, orderBy: $orderBy, first: $first, skip: $skip) {\n            id\n            address\n            map { sections { floors { units { type label } } } parking { floors { units { type label } } } }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/property/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "($where: PropertyWhereInput, $orderBy: String, $first: Int, $skip: Int)"}, {"type": "query", "name": "getMeterResource", "content": "{\n        objs: allMeterResources(\n            where: {\n                id: $id\n            }\n        ) {\n            id\n            number\n            unitName\n            organization {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/meter/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "(\n        $id: ID,\n        $organizationId: ID,\n        $propertyId: ID,\n        $unitName: String\n    )"}, {"type": "query", "name": "selectMeterResources", "content": "{\n        objs: allMeterResources(where: $where, orderBy: $orderBy, first: $first, skip: $skip) {\n            id\n            name\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/meter/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "($where: MeterResourceWhereInput, $orderBy: String, $first: Int, $skip: Int)"}, {"type": "query", "name": "selectProperty", "content": "{\n        objs: allProperties(where: $where, orderBy: $orderBy, first: $first, skip: $skip) {\n            id\n            address\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/scope/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "($where: PropertyWhereInput, $orderBy: String, $first: Int, $skip: Int)"}, {"type": "query", "name": "selectAcquiringIntegrationContext", "content": "{\n        objs: allAcquiringIntegrationContexts(where: $where, orderBy: $orderBy, first: $first, skip: $skip) {\n            id\n            integration {\n               id\n               name\n            }\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/acquiring/utils/clientSchema/search.ts", "repo": "open-condo-software_condo"}, "arguments": "($where: AcquiringIntegrationContextWhereInput, $orderBy: String, $first: Int, $skip: Int)"}, {"type": "query", "name": "searchByPhone", "content": "{\n        contacts: allContacts(\n          where: {\n            organization: { id: $organizationId },\n            property_is_null: false,\n            property: { deletedAt: null },\n            phone_contains: $phone\n          }, first: 10) {\n            id\n            name\n            phone\n            property { ${TICKET_PROPERTY_FIELDS} }\n            unitName\n            unitType\n        }\n      \n        tickets: allTickets(\n          where: $ticketsWhere, first: 10) {\n          id\n          property { ${TICKET_PROPERTY_FIELDS} }\n          clientName\n          clientPhone\n          unitName\n          unitType\n          number\n      }\n      \n        employees: allOrganizationEmployees(\n          where: {\n            organization: { id: $organizationId },\n            phone_contains: $phone,\n          }, first: 10) {\n            id\n            name\n            phone\n        }\n    }", "metadata": {"commit_hash": "efd6e6eeb2bfaffd076e61596e373cd1dc2720c1", "file": "apps/condo/domains/contact/utils/clientCard.tsx", "repo": "open-condo-software_condo"}, "arguments": "($organizationId: ID, $phone: String, $ticketsWhere: TicketWhereInput)"}, {"type": "mutation", "name": "sign_up", "content": "{\n        sign_up(\n          email: $email\n          name: $name\n          password: $password\n          admin: $admin\n        ) {\n          email\n          name\n          admin\n        }\n      }", "metadata": {"commit_hash": "dcbf455cda4fa1257c7ac458a41b1c86232ffa65", "file": "pages/sign_up.tsx", "repo": "PabloSzx_Next-Now-Apollo-TypeGraphQL-TypeORM-Passport"}, "arguments": "(\n        $email: String!\n        $name: String!\n        $password: String!\n        $admin: Boolean!\n      )"}, {"type": "mutation", "name": "remove$", "content": "{resource}($id: ID!) {\n                    remove${resource}(id: $id)\n                }", "metadata": {"commit_hash": "972973ec52aa9e555621581361412f2c10d1ca2f", "file": "src/dataProvider/graphql.js", "repo": "myshine112_react-admin-with-material-ui-next"}}, {"type": "mutation", "name": "addSshKey", "content": "{\n    addSshKey(input: $input) {\n      id\n      name\n      keyType\n      created\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/mutation/AddSshKey.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($input: AddSshKeyInput!)"}, {"type": "subscription", "name": "subscribeToBackups", "content": "{\n    backupChanged(environment: $environment) {\n      id\n      source\n      backupId\n      created\n      restore {\n        id\n        status\n        restoreLocation\n      }\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/subscription/Backups.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($environment: Int!)"}, {"type": "subscription", "name": "subscribeToDeployments", "content": "{\n    deploymentChanged(environment: $environment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      buildLog\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/subscription/Deployments.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($environment: Int!)"}, {"type": "subscription", "name": "subscribeToTasks", "content": "{\n    taskChanged(environment: $environment) {\n      id\n      name\n      status\n      created\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/subscription/Tasks.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($environment: Int!)"}, {"type": "query", "name": "getEnvironment", "content": "{\n    environment: environmentByOpenshiftProjectName(openshiftProjectName: $openshiftProjectName) {\n      id\n      name\n      openshiftProjectName\n      project {\n        id\n        name\n        problemsUi\n        factsUi\n      }\n      insights {\n        id\n        file\n        fileId\n        service\n        type\n        size\n        downloadUrl\n        created\n      }\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/EnvironmentWithInsights.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($openshiftProjectName: String!)"}, {"type": "query", "name": "getEnvironment", "content": "{\n    environment: environmentByOpenshiftProjectName(openshiftProjectName: $openshiftProjectName) {\n      openshiftProjectName\n      project {\n        name\n        problemsUi\n        factsUi\n      }\n      deployments(name: $deploymentName) {\n        id\n        name\n        status\n        created\n        started\n        completed\n        buildLog\n        bulkId\n        priority\n      }\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/EnvironmentWithDeployment.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($openshiftProjectName: String!, $deploymentName: String!)"}, {"type": "query", "name": "getEnvironment", "content": "{\n    environment: environmentByOpenshiftProjectName(openshiftProjectName: $openshiftProjectName) {\n      id\n      name\n      created\n      updated\n      deployType\n      environmentType\n      routes\n      openshiftProjectName\n      project {\n        name\n        gitUrl\n        productionRoutes\n        standbyRoutes\n        productionEnvironment\n        standbyProductionEnvironment\n        problemsUi\n        factsUi\n      }\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/EnvironmentByOpenshiftProjectName.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($openshiftProjectName: String!)"}, {"type": "query", "name": "getEnvironment", "content": "{\n    environment: environmentByOpenshiftProjectName(openshiftProjectName: $openshiftProjectName) {\n      id\n      openshiftProjectName\n      project {\n        id\n        name\n        problemsUi\n        factsUi\n      }\n      backups(limit: $limit) {\n        id\n        source\n        backupId\n        created\n        restore {\n          id\n          status\n          restoreLocation\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/EnvironmentWithBackups.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($openshiftProjectName: String!, $limit: Int)"}, {"type": "query", "name": "getEnvironment", "content": "{\n    environment: environmentByOpenshiftProjectName(openshiftProjectName: $openshiftProjectName) {\n      id\n      name\n      openshiftProjectName\n      project {\n        id\n        name\n        problemsUi\n        factsUi\n      }\n      facts {\n        ...factFields\n      }\n    }\n  }\n  ${FactsFragment}", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/EnvironmentWithFacts.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($openshiftProjectName: String!)"}, {"type": "query", "name": "getEnvironment", "content": "{\n    environment: environmentByOpenshiftProjectName(openshiftProjectName: $openshiftProjectName) {\n      id\n      name\n      openshiftProjectName\n      project {\n        name\n        problemsUi\n        factsUi\n      }\n      services {\n        name\n      }\n      advancedTasks {\n        ... on AdvancedTaskDefinitionCommand {\n          id\n          type\n          name\n          description\n          environment\n          project\n          service\n          created\n          deleted\n          confirmationText\n          advancedTaskDefinitionArguments {\n            id\n            name\n            displayName\n            type\n            range\n          }\n        }\n        ... on AdvancedTaskDefinitionImage {\n          id\n          type\n          name\n          description\n          environment\n          project\n          service\n          created\n          deleted\n          confirmationText\n          advancedTaskDefinitionArguments {\n            id\n            name\n            displayName\n            type\n            range\n          }\n        }\n      }\n      tasks(limit: $limit) {\n        id\n        name\n        taskName\n        status\n        created\n        service\n        adminOnlyView\n      }\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/lib/query/EnvironmentWithTasks.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($openshiftProjectName: String!, $limit: Int)"}, {"type": "mutation", "name": "deployEnvironmentLatest", "content": "{\n    deployEnvironmentLatest(input: { environment: { id: $environmentId } })\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/DeployLatest/index.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($environmentId: Int!)"}, {"type": "query", "name": "getProblemSources", "content": "{\n    sources: problemSources\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/Filters/helpers.js", "repo": "uselagoon_lagoon-ui"}}, {"type": "mutation", "name": "cancelDeployment", "content": "{\n    cancelDeployment(input: { deployment: { id: $deploymentId } })\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/CancelDeployment/index.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($deploymentId: Int!)"}, {"type": "mutation", "name": "taskDrushCacheClear", "content": "{\n    taskDrushCacheClear(environment: $environment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/DrushCacheClear.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($environment: Int!)"}, {"type": "mutation", "name": "taskDrushRsyncFiles", "content": "{\n    taskDrushRsyncFiles(sourceEnvironment: $sourceEnvironment, destinationEnvironment: $destinationEnvironment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/DrushRsyncFiles.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($sourceEnvironment: Int!, $destinationEnvironment: Int!)"}, {"type": "mutation", "name": "taskDrushArchiveDump", "content": "{\n    taskDrushArchiveDump(environment: $environment) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/DrushArchiveDump.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "($environment: Int!)"}, {"type": "mutation", "name": "invokeRegisteredTask", "content": "{\n    invokeRegisteredTask(\n      environment: $environment\n      advancedTaskDefinition: $taskRegistration\n      argumentValues: $argumentValues\n    ) {\n      id\n      name\n      status\n      created\n      started\n      completed\n      remoteId\n      command\n      service\n    }\n  }", "metadata": {"commit_hash": "080ae99350c4eccaaf1992b1db549e0d7e760edc", "file": "src/components/AddTask/components/InvokeRegisteredTask.js", "repo": "uselagoon_lagoon-ui"}, "arguments": "(\n    $environment: Int!\n    $taskRegistration: Int!\n    $argumentValues: [AdvancedTaskDefinitionArgumentValueInput]\n  )"}, {"type": "mutation", "name": "AddBook", "content": "{\n        addBook(name: $name, genre: $genre, authorId: $authorId){\n            name\n            id\n        }\n    }", "metadata": {"commit_hash": "b1d1012ce4f4f5b16ea44e5d3e55882295026518", "file": "client/src/queries/queries.js", "repo": "Mironshoh1603_GraphQlBooks"}, "arguments": "($name: String!, $genre: String!, $authorId: ID!)"}, {"type": "mutation", "name": "LoginMutation", "content": "{\n    login(email: $email, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "f787b31d5bf36dc74ea6030ce1982f331c8cf362", "file": "src/screens/Login/Login.js", "repo": "vctormb_react-todolist-apollo-prisma"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "MarkTodoAsDone", "content": "{\n    markTodoAsDone(todoId: $todoId, isDone: $isDone) {\n      id\n      isDone\n    }\n  }", "metadata": {"commit_hash": "f787b31d5bf36dc74ea6030ce1982f331c8cf362", "file": "src/screens/Todo/TodoItem.js", "repo": "vctormb_react-todolist-apollo-prisma"}, "arguments": "($todoId: String!, $isDone: Boolean!)"}, {"type": "mutation", "name": "DeleteTodoMutation", "content": "{\n    deleteManyTodoes(todoIds: $todoIds) {\n      count\n    }\n  }", "metadata": {"commit_hash": "f787b31d5bf36dc74ea6030ce1982f331c8cf362", "file": "src/screens/Todo/TodoItem.js", "repo": "vctormb_react-todolist-apollo-prisma"}, "arguments": "($todoIds: [String!])"}, {"type": "query", "name": "TodoesQuery", "content": "{\n    todoes {\n      id\n      description\n      isDone\n    }\n  }", "metadata": {"commit_hash": "f787b31d5bf36dc74ea6030ce1982f331c8cf362", "file": "src/graphql/queries.js", "repo": "vctormb_react-todolist-apollo-prisma"}}, {"type": "query", "name": "fetchUser", "content": "{\n        fetchUser(id: $id) {\n          name\n          email\n          wins\n          losses\n          gameCount\n          activityCount\n          daysInCurrentActiveStreak\n          daysInLongestStreak\n          games{\n            id\n            win\n            completedActivities {\n              name\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "ce63327cdc13d8d5323b232a3f9891fb949a0f52", "file": "src/Views/DashboardView.js", "repo": "Swolify_swolify-fe"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(facebookId:$facebookId,email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     name\n     email\n     phone\n   }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/CreateAccount/CreateAccount.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}, "arguments": "($facebookId:String,$email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)"}, {"type": "query", "name": "FoodByCategory", "content": "{\n    foodByCategory(category:$category,onSale:$onSale,inStock:$inStock,min:$min,max:$max,search:$search){\n      _id\n      title\n      description\n      variations{\n        _id\n        title\n        price\n        discounted\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            description\n            price\n          }\n        }\n      }\n      category{_id}\n      img_url\n      stock\n    }\n  }", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/MenuItems/MenuItems.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}, "arguments": "($category:String!,$onSale:Boolean,$inStock:Boolean,$min:Float,$max:Float,$search:String)"}, {"type": "mutation", "name": "UpdateUser", "content": "{\n        updateUser(updateUserInput:{name:$name,phone:$phone}){\n          _id\n          name\n          phone\n        }\n      }", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Profile/Profile.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}, "arguments": "($name:String!,$phone:String!)"}, {"type": "mutation", "name": "Login", "content": "{\n    login(facebookId:$facebookId,email:$email,password:$password,type:$type,appleId:$appleId,name:$name,notificationToken:$notificationToken){\n     userId\n     token\n     tokenExpiration\n     name\n     email\n     phone\n   }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Login/Login.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}, "arguments": "($facebookId:String,$email:String,$password:String,$type:String!,$appleId:String,$name:String,$notificationToken:String)"}, {"type": "mutation", "name": "SelectAddress", "content": "{\n  selectAddress(id:$id){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/CartAddress/CartAddress.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}, "arguments": "($id:String!)"}, {"type": "mutation", "name": "PushToken", "content": "{\n  pushToken(token:$token){\n    _id\n    notificationToken\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Settings/Settings.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}, "arguments": "($token:String!)"}, {"type": "mutation", "name": "CreateAddress", "content": "{\n  createAddress(addressInput:$addressInput){\n    _id\n    addresses{\n      _id\n      label\n      delivery_address\n      details\n      longitude\n      latitude\n      selected\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/NewAddress/NewAddress.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}, "arguments": "($addressInput:AddressInput!)"}, {"type": "query", "name": "FoodByIds", "content": "{\n  foodByIds(ids: $ids) {\n    _id\n    title\n    description\n    img_url\n    stock\n    category {\n      _id\n    }\n    variations {\n      _id\n      title\n      price\n      discounted\n      addons {\n        _id\n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options {\n          _id\n          title\n          description\n          price\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "4163430244a17deee51134272ab2ae00c2285e6b", "file": "src/screens/Cart/Cart.js", "repo": "SharanGoharKhan_enatega-singlevendor-app"}, "arguments": "($ids:[String!]!)"}, {"type": "mutation", "name": "RemoveFromCart", "content": "{\n    removeCartItem(command: $command) {\n      itemsCount\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/removeFromCart/removeFromCartMutation.ts", "repo": "vuestorefront-community_virto-commerce"}, "arguments": "($command: InputRemoveItemType!)"}, {"type": "query", "name": "GetMyOrders", "content": "{\n    orders(userId: $userId, filter: $filter, after: $after, first: $first) {\n      totalCount\n      items {\n        id\n        createdDate\n        status\n        items {\n          sku\n          name\n          quantity\n          price { amount }\n        }\n        currency {\n          code\n        }\n        total {\n          amount\n        }\n        number\n        customerId\n      }\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/getMyOrders/getMyOrdersQuery.ts", "repo": "vuestorefront-community_virto-commerce"}, "arguments": "(\n    $userId: String!\n    $filter: String!\n    $after: String\n    $first: Int\n  )"}, {"type": "mutation", "name": "AddOrUpdateCartPayment", "content": "{\n    addOrUpdateCartPayment(command: $command) {\n      name\n    }\n  }", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/addOrUpdateCartPayment/addOrUpdateCartPaymentMutation.ts", "repo": "vuestorefront-community_virto-commerce"}, "arguments": "($command: InputAddOrUpdateCartPaymentType!)"}, {"type": "query", "name": "getCart", "content": "{\n    cart(\n      storeId: $storeId\n      userId: $userId\n      currencyCode: $currencyCode\n      cultureName: $cultureName\n    ) {\n      id\n      name\n      itemsCount\n      itemsQuantity\n      isValid\n      shipments\n      {\n        id\n        shipmentMethodCode\n        deliveryAddress \n        {\n          ...addressFields\n        }\n      }\n      payments\n      { \n        id\n        paymentGatewayCode\n        billingAddress\n        {\n          ...addressFields\n        }\n      }\n      availableShippingMethods {\n        code\n        logoUrl\n        optionName\n        price {\n          ...moneyFields\n        }\n      }\n      availablePaymentMethods {\n        code\n        name\n        logoUrl\n        price {\n          ...moneyFields\n        }\n      }\n      addresses {\n        ...addressFields\n      }\n      items {\n        ...lineItemFields\n      }\n      currency {\n        ...currencyFields\n      }\n      total {\n        ...moneyFields\n      }\n      subTotal {\n        ...moneyFields\n      }\n      shippingTotal {\n        ...moneyFields\n      }\n      shippingPrice {\n        ...moneyFields\n      }\n      taxTotal {\n        ...moneyFields\n      }\n      extendedPriceTotal {\n        ...moneyFields\n      }\n      extendedPriceTotalWithTax {\n        ...moneyFields\n      }\n      validationErrors {\n        errorCode\n        errorMessage\n        errorParameters {\n          key\n          value\n        }\n        objectId\n      }\n    }\n  }\n  ${AddressFields}\n  ${CurrencyFields}\n  ${MoneyFields}\n  ${LineItemFields}", "metadata": {"commit_hash": "673b8e40c0b8d0792fdf40b9a20efd0b0fed6793", "file": "packages/api-client/src/api/getCart/getCartQuery.ts", "repo": "vuestorefront-community_virto-commerce"}, "arguments": "(\n    $storeId: String!\n    $userId: String!\n    $currencyCode: String!\n    $cultureName: String\n  )"}, {"type": "mutation", "name": "updateUser", "content": "{\n    updateUser(id: $id) {\n      id\n      likes\n    }\n  }", "metadata": {"commit_hash": "09dc9553d02ee66df50dd5df12f0d4aef0b324c4", "file": "client/src/queries/users.js", "repo": "mPooja-15_graphql-api-backend"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "deleteUser", "content": "{\n    deleteUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "09dc9553d02ee66df50dd5df12f0d4aef0b324c4", "file": "client/src/queries/users.js", "repo": "mPooja-15_graphql-api-backend"}, "arguments": "($id: ID!)"}, {"type": "subscription", "name": "likedUser", "content": "{\n    User(\n      filter: {\n        mutation_in: [UPDATED]\n        updatedFields_contains: \"likes\"\n      }\n    ) {\n      mutation\n      node {\n        id\n        likes\n      }\n    }\n  }", "metadata": {"commit_hash": "09dc9553d02ee66df50dd5df12f0d4aef0b324c4", "file": "client/src/queries/users.js", "repo": "mPooja-15_graphql-api-backend"}}, {"type": "mutation", "name": "productJoinSellingPlanGroups", "content": "{\n        productVariantJoinSellingPlanGroups(\n            id: $id\n            sellingPlanGroupIds: $sellingPlanGroupIds\n        ) {\n            productVariant {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "lib/sellingPlanGraphQL.ts", "repo": "mr-perseus_permaculture"}, "arguments": "(\n        $id: ID!\n        $sellingPlanGroupIds: [ID!]!\n    )"}, {"type": "mutation", "name": "productLeaveSellingPlanGroups", "content": "{\n        productLeaveSellingPlanGroups(\n            id: $id\n            sellingPlanGroupIds: $sellingPlanGroupIds\n        ) {\n            product {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n        sellingPlanGroupRemoveProductVariants(\n            id: $sellingPlanGroupId\n            productVariantIds: $productVariantIds\n        ) {\n            removedProductVariantIds\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "admin-extension/RemoveSellingPlan.tsx", "repo": "mr-perseus_permaculture"}, "arguments": "(\n        $id: ID!\n        $productVariantIds: [ID!]!\n        $sellingPlanGroupIds: [ID!]!\n        $sellingPlanGroupId: ID!\n    )"}, {"type": "mutation", "name": "sellingPlanGroupRemoveProductVariants", "content": "{\n        sellingPlanGroupRemoveProductVariants(\n            id: $id\n            productVariantIds: $productVariantIds\n        ) {\n            removedProductVariantIds\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "admin-extension/RemoveSellingPlan.tsx", "repo": "mr-perseus_permaculture"}, "arguments": "(\n        $id: ID!\n        $productVariantIds: [ID!]!\n    )"}, {"type": "query", "name": "sellingPlanGroups", "content": "{\n        sellingPlanGroups(first: 10) {\n            edges {\n                node {\n                    id\n                    name\n                    appliesToProduct(productId: $productId)\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "admin-extension/AddSellingPlan.tsx", "repo": "mr-perseus_permaculture"}, "arguments": "($productId: ID!)"}, {"type": "query", "name": "sellingPlanGroups", "content": "{\n        sellingPlanGroups(first: 10) {\n            edges {\n                node {\n                    id\n                    name\n                    appliesToProductVariant(productVariantId: $productVariantId)\n                    appliesToProduct(productId: $productId)\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "3d5fa1d535847ef1578c9dfce16bad9036c5134b", "file": "admin-extension/AddSellingPlan.tsx", "repo": "mr-perseus_permaculture"}, "arguments": "($productVariantId: ID!, $productId: ID!)"}, {"type": "query", "name": "Query", "content": "{\n    me {\n      _id\n      username\n      email\n      reviews {\n        _id\n        company\n        interviewExperience\n        role\n        interviewerInfo\n        reviewAuthor\n        rating\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "e0a8e6f7b5ccf7d913dae3006e6e54762ae76e25", "file": "client/src/utils/queries.js", "repo": "daisyle0203_UPIN"}}, {"type": "mutation", "name": "addUser", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "e0a8e6f7b5ccf7d913dae3006e6e54762ae76e25", "file": "client/src/utils/mutations.js", "repo": "daisyle0203_UPIN"}, "arguments": "($username: String!, $email: String!, $password: String!)"}, {"type": "mutation", "name": "AddReview", "content": "{\n    addReview(\n      company: $company\n      interviewExperience: $interviewExperience\n      role: $role\n      interviewerInfo: $interviewerInfo\n      rating: $rating\n    ) {\n      _id\n      company\n      role\n      interviewExperience\n      interviewerInfo\n      rating\n      reviewAuthor\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "e0a8e6f7b5ccf7d913dae3006e6e54762ae76e25", "file": "client/src/utils/mutations.js", "repo": "daisyle0203_UPIN"}, "arguments": "(\n    $company: String!\n    $interviewExperience: String!\n    $role: String!\n    $interviewerInfo: String!\n    $rating: Float!\n  )"}, {"type": "subscription", "name": "SubscriptionAssignRider", "content": "{\n    subscriptionAssignRider(riderId:$riderId){\n      userId\n      origin\n      order{\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          title\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      createdAt\n     }\n    }\n  }", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/context/user.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}, "arguments": "($riderId:String!)"}, {"type": "subscription", "name": "SubscriptionUnAssignedOrder", "content": "{\n    unassignedOrder{\n      userId\n      origin\n      order{\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          _id\n          title\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      createdAt\n     }\n    }\n  }", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/context/user.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}}, {"type": "mutation", "name": "AssignOrder", "content": "{\n    assignOrder(id:$id){\n      _id\n      rider{\n        _id\n      }\n    }\n}", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/screens/OrderDetail/OrderDetail.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}, "arguments": "($id:String!)"}, {"type": "query", "name": "AssignedOrders", "content": "{\n    assignedOrders(id:$id){\n      _id\n      rider{\n        _id\n      }\n      order_id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      payment_method\n      order_amount\n      paid_amount\n      order_status\n      payment_status\n      user{\n        _id\n        name\n        phone\n        email\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n        }\n        quantity\n        variation{\n          _id\n          title\n          price\n        }\n        addons{\n          title\n          options{\n            title\n            price\n          }\n        }\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "99f754193142d59ee3022327fd3fa6093b554d6e", "file": "src/screens/OrderDetail/OrderDetail.js", "repo": "SharanGoharKhan_enatega-singlevendor-rider"}, "arguments": "($id:String)"}, {"type": "query", "name": "deploymentsForServices", "content": "{\n  deploymentsForServices(serviceIds: $serviceIds) {\n    ${DEPLOYMENT_WITH_ENVIRONMENT_NAME}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/deployment/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($serviceIds: [Int!]!)"}, {"type": "query", "name": "logs", "content": "{\n  logs(query: $query) {\n    time\n    message\n    context\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/logs/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($query: LogQuery)"}, {"type": "mutation", "name": "deployService", "content": "{\n    deployService(deployment:$deployment){\n        ${SERVICE}\n    }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($deployment: DeploymentCreate!)"}, {"type": "query", "name": "downloadProject", "content": "{\n  downloadProject(serviceId:$id){\n    data\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($id: Int!)"}, {"type": "mutation", "name": "promoteServiceByUniqueName", "content": "{\n  promoteServiceByUniqueName(uniqueName: $uniqueName) {\n    ${SERVICE}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($uniqueName: String!)"}, {"type": "mutation", "name": "promoteService", "content": "{\n  promoteService(id: $id){\n    ${SERVICE}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "getServiceMigrations", "content": "{\n  getServiceMigrations(base64Service:$base64Service){\n    data\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/service/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($base64Service: String!)"}, {"type": "mutation", "name": "deleteProject", "content": "{\n  deleteProject(id: $id)\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "projects", "content": "{\n  projects(pagination:$pagination){\n    author{\n      email\n    }\n    ${PROJECT}\n    services {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($pagination: PaginationOptions)"}, {"type": "query", "name": "project", "content": "{\n  project(uniqueName: $uniqueName) {\n    ${PROJECT}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($uniqueName: String!)"}, {"type": "query", "name": "project", "content": "{\n  project(id:$id){\n    ${PROJECT}\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "project", "content": "{\n  project(id:$id){\n    ${PROJECT}\n    services {\n    ${SERVICE}\n    }\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($id: Int!)"}, {"type": "mutation", "name": "promote", "content": "{\n  promoteServiceInProject(input:$data){\n    id\n    commitId\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($data: PromoteServiceInProject!)"}, {"type": "mutation", "name": "promote", "content": "{\n  promoteServiceInProjectByUniqueName(input:$data){\n    id\n    commitId\n  }\n}", "metadata": {"commit_hash": "8b1a4b8c3765713b6981b9ea30954b2b7ddc0086", "file": "src/lib/api-services/project/queries.ts", "repo": "code-store-platform_cli"}, "arguments": "($data: PromoteServiceInProjectByUniqueName!)"}, {"type": "mutation", "name": "updateTaskChecklistItemName", "content": "{\n    updateTaskChecklistItemName(input: { taskChecklistItemID: $taskChecklistItemID, name: $name }) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/updateTaskChecklistItemName.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskChecklistItemID: UUID!, $name: String!)"}, {"type": "mutation", "name": "createTaskChecklistItem", "content": "{\n    createTaskChecklistItem(input: { taskChecklistID: $taskChecklistID, name: $name, position: $position }) {\n      id\n      name\n      taskChecklistID\n      position\n      complete\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/createTaskChecklistItem.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskChecklistID: UUID!, $name: String!, $position: Float!)"}, {"type": "mutation", "name": "setTaskChecklistItemComplete", "content": "{\n    setTaskChecklistItemComplete(input: { taskChecklistItemID: $taskChecklistItemID, complete: $complete }) {\n      id\n      complete\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/setTaskChecklistItemComplete.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskChecklistItemID: UUID!, $complete: Boolean!)"}, {"type": "mutation", "name": "setTaskComplete", "content": "{\n  setTaskComplete(input: { taskID: $taskID, complete: $complete }) {\n    ...TaskFields\n  }\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/setTaskComplete.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskID: UUID!, $complete: Boolean!)"}, {"type": "mutation", "name": "updateTaskChecklistLocation", "content": "{\n    updateTaskChecklistLocation(input: { taskChecklistID: $taskChecklistID, position: $position }) {\n      checklist {\n        id\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/updateTaskChecklistLocation.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskChecklistID: UUID!, $position: Float!)"}, {"type": "mutation", "name": "deleteTaskChecklist", "content": "{\n    deleteTaskChecklist(input: { taskChecklistID: $taskChecklistID }) {\n      ok\n      taskChecklist {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/deleteTaskChecklist.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskChecklistID: UUID!)"}, {"type": "mutation", "name": "createTaskChecklist", "content": "{\n    createTaskChecklist(input: { taskID: $taskID, name: $name, position: $position }) {\n      id\n      name\n      position\n      items {\n        id\n        name\n        taskChecklistID\n        complete\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/createTaskChecklist.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskID: UUID!, $name: String!, $position: Float!)"}, {"type": "mutation", "name": "deleteTaskChecklistItem", "content": "{\n    deleteTaskChecklistItem(input: { taskChecklistItemID: $taskChecklistItemID }) {\n      ok\n      taskChecklistItem {\n        id\n        taskChecklistID\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/task/deleteTaskChecklistItem.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskChecklistItemID: UUID!)"}, {"type": "mutation", "name": "duplicateTaskGroup", "content": "{\n  duplicateTaskGroup(\n  input: {\n    projectID: $projectID\n    taskGroupID: $taskGroupID\n    name: $name\n    position: $position\n  }\n  ) {\n    taskGroup {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/taskGroup/duplicateTaskGroup.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskGroupID: UUID!, $name: String!, $position: Float!, $projectID: UUID!)"}, {"type": "mutation", "name": "updateTeamMemberRole", "content": "{\n    updateTeamMemberRole(input: { teamID: $teamID, userID: $userID, roleCode: $roleCode }) {\n      member {\n        id\n        role {\n          code\n          name\n        }\n      }\n      teamID\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/team/updateTeamMemberRole.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)"}, {"type": "mutation", "name": "createTeamMember", "content": "{\n    createTeamMember(input: { userID: $userID, teamID: $teamID }) {\n      team {\n        id\n      }\n      teamMember {\n        id\n        username\n        fullName\n        role {\n          code\n          name\n        }\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/team/createTeamMember.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($userID: UUID!, $teamID: UUID!)"}, {"type": "query", "name": "getTeam", "content": "{\n    findTeam(input: { teamID: $teamID }) {\n      id\n      createdAt\n      name\n      members {\n        id\n        fullName\n        username\n        role {\n          code\n          name\n        }\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n        owned {\n          teams {\n            id\n            name\n          }\n          projects {\n            id\n            name\n          }\n        }\n        member {\n          teams {\n            id\n            name\n          }\n          projects {\n            id\n            name\n          }\n        }\n      }\n    }\n    projects(input: { teamID: $teamID }) {\n      id\n      name\n      team {\n        id\n        name\n      }\n    }\n    users {\n      id\n      email\n      fullName\n      username\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      owned {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n      member {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/team/getTeam.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($teamID: UUID!)"}, {"type": "mutation", "name": "deleteTeamMember", "content": "{\n    deleteTeamMember(input: { teamID: $teamID, userID: $userID, newOwnerID: $newOwnerID }) {\n      teamID\n      userID\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/team/deleteTeamMember.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($teamID: UUID!, $userID: UUID!, $newOwnerID: UUID)"}, {"type": "mutation", "name": "deleteUserAccount", "content": "{\n    deleteUserAccount(input: { userID: $userID, newOwnerID: $newOwnerID }) {\n      ok\n      userAccount {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/user/deleteUser.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($userID: UUID!, $newOwnerID: UUID)"}, {"type": "mutation", "name": "updateUserPassword", "content": "{\n    updateUserPassword(input: { userID: $userID, password: $password }) {\n      ok\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/user/updateUserPassword.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($userID: UUID!, $password: String!)"}, {"type": "mutation", "name": "deleteInvitedProjectMember", "content": "{\n    deleteInvitedProjectMember(input: { projectID: $projectID, email: $email }) {\n      invitedMember {\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/project/deleteProjectInvitedMember.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($projectID: UUID!, $email: String!)"}, {"type": "mutation", "name": "updateProjectMemberRole", "content": "{\n    updateProjectMemberRole(input: { projectID: $projectID, userID: $userID, roleCode: $roleCode }) {\n      ok\n      member {\n        id\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/graphql/project/updateProjectMemberRole.ts", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($projectID: UUID!, $userID: UUID!, $roleCode: RoleCode!)"}, {"type": "mutation", "name": "assignTask", "content": "{\n  assignTask(input: {taskID: $taskID, userID: $userID}) {\n    id\n    assigned {\n      id\n      fullName\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskID: UUID!, $userID: UUID!)"}, {"type": "mutation", "name": "clearProfileAvatar", "content": "{\n  clearProfileAvatar {\n    id\n    fullName\n    profileIcon {\n      initials\n      bgColor\n      url\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "mutation", "name": "createProject", "content": "{\n  createProject(input: {teamID: $teamID, name: $name}) {\n    id\n    name\n    team {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($teamID: UUID, $name: String!)"}, {"type": "mutation", "name": "createProjectLabel", "content": "{\n  createProjectLabel(\n    input: {projectID: $projectID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($projectID: UUID!, $labelColorID: UUID!, $name: String!)"}, {"type": "mutation", "name": "deleteTask", "content": "{\n  deleteTask(input: {taskID: $taskID}) {\n    taskID\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskID: UUID!)"}, {"type": "mutation", "name": "deleteProject", "content": "{\n  deleteProject(input: {projectID: $projectID}) {\n    ok\n    project {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($projectID: UUID!)"}, {"type": "mutation", "name": "deleteProjectMember", "content": "{\n  deleteProjectMember(input: {projectID: $projectID, userID: $userID}) {\n    ok\n    member {\n      id\n    }\n    projectID\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($projectID: UUID!, $userID: UUID!)"}, {"type": "mutation", "name": "updateProjectMemberRole", "content": "{\n  updateProjectMemberRole(\n    input: {projectID: $projectID, userID: $userID, roleCode: $roleCode}\n  ) {\n    ok\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($projectID: UUID!, $userID: UUID!, $roleCode: RoleCode!)"}, {"type": "mutation", "name": "deleteTaskChecklist", "content": "{\n  deleteTaskChecklist(input: {taskChecklistID: $taskChecklistID}) {\n    ok\n    taskChecklist {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskChecklistID: UUID!)"}, {"type": "mutation", "name": "updateTaskChecklistName", "content": "{\n  updateTaskChecklistName(input: {taskChecklistID: $taskChecklistID, name: $name}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskChecklistID: UUID!, $name: String!)"}, {"type": "mutation", "name": "sortTaskGroup", "content": "{\n  sortTaskGroup(input: {taskGroupID: $taskGroupID, tasks: $tasks}) {\n    taskGroupID\n    tasks {\n      id\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($tasks: [TaskPositionUpdate!]!, $taskGroupID: UUID!)"}, {"type": "mutation", "name": "updateTaskGroupName", "content": "{\n  updateTaskGroupName(input: {taskGroupID: $taskGroupID, name: $name}) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskGroupID: UUID!, $name: String!)"}, {"type": "mutation", "name": "updateTeamMemberRole", "content": "{\n  updateTeamMemberRole(\n    input: {teamID: $teamID, userID: $userID, roleCode: $roleCode}\n  ) {\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n    teamID\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)"}, {"type": "mutation", "name": "updateTaskDueDate", "content": "{\n  updateTaskDueDate(\n    input: {taskID: $taskID, dueDate: $dueDate, hasTime: $hasTime}\n  ) {\n    id\n    dueDate\n    hasTime\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskID: UUID!, $dueDate: Time, $hasTime: Boolean!)"}, {"type": "mutation", "name": "updateTaskGroupLocation", "content": "{\n  updateTaskGroupLocation(input: {taskGroupID: $taskGroupID, position: $position}) {\n    id\n    position\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskGroupID: UUID!, $position: Float!)"}, {"type": "mutation", "name": "updateTaskLocation", "content": "{\n  updateTaskLocation(\n    input: {taskID: $taskID, taskGroupID: $taskGroupID, position: $position}\n  ) {\n    previousTaskGroupID\n    task {\n      id\n      createdAt\n      name\n      position\n      taskGroup {\n        id\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskID: UUID!, $taskGroupID: UUID!, $position: Float!)"}, {"type": "mutation", "name": "updateTaskName", "content": "{\n  updateTaskName(input: {taskID: $taskID, name: $name}) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($taskID: UUID!, $name: String!)"}, {"type": "mutation", "name": "createUserAccount", "content": "{\n  createUserAccount(\n    input: {roleCode: $roleCode, username: $username, email: $email, fullName: $fullName, initials: $initials, password: $password}\n  ) {\n    id\n    email\n    fullName\n    initials\n    username\n    bio\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    role {\n      code\n      name\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($username: String!, $roleCode: String!, $email: String!, $fullName: String!, $initials: String!, $password: String!)"}, {"type": "mutation", "name": "updateUserInfo", "content": "{\n  updateUserInfo(\n    input: {name: $name, initials: $initials, email: $email, bio: $bio}\n  ) {\n    user {\n      id\n      email\n      fullName\n      bio\n      profileIcon {\n        initials\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}, "arguments": "($name: String!, $initials: String!, $email: String!, $bio: String!)"}, {"type": "query", "name": "users", "content": "{\n  invitedUsers {\n    id\n    email\n    invitedOn\n  }\n  users {\n    id\n    email\n    fullName\n    username\n    role {\n      code\n      name\n    }\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "7d5542c6278e503ca08a175d604761b5b925369e", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "meanttobe25_react-elegant-task-manager"}}, {"type": "query", "name": "votingActions", "content": "{\n    votingActions(where: { sender: $user }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}, "arguments": "($user: String!)"}, {"type": "query", "name": "pollVotes", "content": "{\n    pollVotes(where: { voter: $user }) {\n      id\n      voter\n    }\n  }", "metadata": {"commit_hash": "e4a141da2f43be26aa7c70117c328c6f82ea8c11", "file": "src/apollo/queries.js", "repo": "scottrepreneur_og-rh"}, "arguments": "($user: String!)"}, {"type": "mutation", "name": "signup", "content": "{\n  signup(name: $name, email: $email, password: $password) {\n    name\n    email\n  }\n}", "metadata": {"commit_hash": "2c4335dade177e2649f4f38c42838e56b0bbff7f", "file": "frontend/src/GraphQL/Mutations.js", "repo": "riggedCoinflip_lol-friendfinder"}, "arguments": "(\n  $name: String!\n  $email: String!\n  $password: String! \n)"}, {"type": "mutation", "name": "userUpdateSelf", "content": "{\n    userUpdateSelf(\n      aboutMe: $aboutMe\n      languages: $languages\n      dateOfBirth: $dateOfBirth\n      gender: $gender\n      blocked: $blocked\n      ingameRole: $ingameRole\n\n    ) {\n      name\n      aboutMe\n      gender\n      languages\n      dateOfBirth\n      ingameRole\n      friends {\n        user\n      }\n      blocked\n    }\n  }", "metadata": {"commit_hash": "2c4335dade177e2649f4f38c42838e56b0bbff7f", "file": "frontend/src/GraphQL/Mutations.js", "repo": "riggedCoinflip_lol-friendfinder"}, "arguments": "(\n    $aboutMe: String\n    $languages: [String]\n    $dateOfBirth: Date\n    $gender: EnumUserPrivateGender\n    $blocked: UserPrivateBlockedMutation\n    $ingameRole: [EnumUserPrivateIngameRole]\n  )"}, {"type": "mutation", "name": "sendMessage", "content": "{\n    sendMessage(\n        chatID: $chatID\n        content: $content\n    )\n}", "metadata": {"commit_hash": "2c4335dade177e2649f4f38c42838e56b0bbff7f", "file": "frontend/src/GraphQL/Mutations.js", "repo": "riggedCoinflip_lol-friendfinder"}, "arguments": "(\n$chatID: MongoID!\n$content: String!\n)"}, {"type": "mutation", "name": "MarkOrderDelivered", "content": "{\n    markDelivered(orderId: $orderId) {\n      id\n      delivery\n      delivered\n      items {\n        id\n        name\n        price\n      }\n    }\n  }", "metadata": {"commit_hash": "b6d96035d668b9480ff20fb4a7df628fa97a9250", "file": "3_examples/react/src/apollo/mutations.js", "repo": "systek_graphql-workshop"}, "arguments": "($orderId: String!)"}, {"type": "query", "name": "IngredientsList", "content": "{\n    ingredients {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "b6d96035d668b9480ff20fb4a7df628fa97a9250", "file": "1_starter/react/src/components/example/Example.js", "repo": "systek_graphql-workshop"}}, {"type": "query", "name": "patchTypeQuery", "content": "{\n    __type(name: $name){\n      inputFields{\n        name\n        defaultValue\n        type{\n          name\n          kind\n          ofType{\n            name\n            kind\n          }\n        }\n      } \n    }\n  }", "metadata": {"commit_hash": "48f5b9a3230b58c797060c62b67054bebfc83634", "file": "src/components/Form/queries.ts", "repo": "hansololai_graphql_form"}, "arguments": "($name: String!)"}, {"type": "mutation", "name": "deleteList", "content": "{\n    deleteList(listId: $listId, url: $url) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "ed5240cdb9b9cc9983a76ad20a57dafa16f0e6f3", "file": "modules/blockwishlist/_dev/front/js/graphql/mutations/deletelist.js", "repo": "Marikita1007_prestashop_youtube"}, "arguments": "($listId: Int!, $url: String!)"}, {"type": "mutation", "name": "RemoveFromCartClient", "content": "{\n    removeFromCartClient(id: $id) @client\n  }", "metadata": {"commit_hash": "5dd0189183c913410137e8fc9b14e96fcac09baf", "file": "client/src/apollo/queries/index.js", "repo": "vctormb_apollo-shopping-cart-caching"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "LocaleCountries", "content": "{\n    localeCountries {\n      id\n      name\n      flag\n    }\n  }", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/countries.js", "repo": "endeavorb2b_websites"}}, {"type": "mutation", "name": "LogoutAppUser", "content": "{\n    logoutAppUser(input: $input)\n  }", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/logout.js", "repo": "endeavorb2b_websites"}, "arguments": "($input: LogoutAppUserMutationInput!)"}, {"type": "query", "name": "LoginCheckAppUser", "content": "{\n    appUser(input: { email: $email }) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/login.js", "repo": "endeavorb2b_websites"}, "arguments": "($email: String!)"}, {"type": "mutation", "name": "LoginSendLoginLink", "content": "{\n    sendAppUserLoginLink(input: $input)\n  }", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/routes/login.js", "repo": "endeavorb2b_websites"}, "arguments": "($input: SendAppUserLoginLinkMutationInput!)"}, {"type": "query", "name": "CheckContentAccess", "content": "{\n  checkContentAccess(input: $input) {\n    canAccess\n    isLoggedIn\n    hasRequiredAccessLevel\n    requiresAccessLevel\n    requiredAccessLevels {\n      id\n      name\n    }\n    messages\n  }\n}", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/api/queries/check-content-access.js", "repo": "endeavorb2b_websites"}, "arguments": "($input: CheckContentAccessQueryInput!)"}, {"type": "query", "name": "GetActiveAppContext", "content": "{\n  activeAppContext {\n    user {\n      ...ActiveUserFragment\n    }\n    mergedTeams {\n      id\n      name\n      photoURL\n    }\n    mergedAccessLevels {\n      id\n      name\n    }\n    hasTeams\n    hasUser\n  }\n}\n\n${userFragment}", "metadata": {"commit_hash": "dd5889da6ed9ea11483387cff99deb749fe733bc", "file": "packages/identity-x/api/queries/get-active-context.js", "repo": "endeavorb2b_websites"}}, {"type": "mutation", "name": "invitedUsers", "content": "{\n      invitedUsers (\n        invitedId: $invitedId\n      )\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-taro-mall/src/pages/home/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}, "arguments": "(\n      $invitedId: ID!\n    )"}, {"type": "mutation", "name": "generateAccessTokenByLoginWithWeChatCode", "content": "{\n      accessToken: generateAccessTokenByLoginWithWeChatCode(\n        code: $code\n        imageUrl: $imageUrl\n        nickname: $nickname\n      )\n    }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/home/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}, "arguments": "(\n      $code: String!\n      $imageUrl: String\n      $nickname: String\n    )"}, {"type": "mutation", "name": "toApplyForCashWithdrawals", "content": "{\n        toApplyForCashWithdrawals (\n          input: {\n            remark: $remark\n          }) {\n                id\n                price\n              }\n      }", "metadata": {"commit_hash": "bdc851d526c468e3fae40889a571ef397a0db826", "file": "projects/taotao-cloud-react-mall/src/pages/withdrawal/service.ts", "repo": "shuigedeng_taotao-cloud-ui"}, "arguments": "(\n        $remark:String\n        )"}, {"type": "query", "name": "productQuery", "content": "{ \n        category(input: {title: $title}){\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n\n            attributes{\n              id\n              type\n              name\n\n              items{\n                id\n                value\n                displayValue\n              }\n            }\n          \n            prices{\n              amount\n              currency{\n                label\n                symbol\n              }\n            }\n          }\n      }\n    }", "metadata": {"commit_hash": "7d5e42b621e629c96a4c6e0522a8603598a6462a", "file": "src/Data/GraphqlData.js", "repo": "til2to_ecommerce"}, "arguments": "($title: String!)"}, {"type": "query", "name": "CurrentUserQuery", "content": "{\n          self {\n              id\n              firstName\n              lastName\n              email\n              phone\n          }\n      }", "metadata": {"commit_hash": "bc6e01dc618e83918faa66d5823011ac213793be", "file": "client/src/app/services/auth.service.ts", "repo": "MitchTalmadge_CometCrate"}}, {"type": "mutation", "name": "SignOutMutation", "content": "{\n          signOut\n      }", "metadata": {"commit_hash": "bc6e01dc618e83918faa66d5823011ac213793be", "file": "client/src/app/services/auth.service.ts", "repo": "MitchTalmadge_CometCrate"}}, {"type": "query", "name": "GetCharacter", "content": "{\n    hero(episode: $episode) {\n      name\n      id\n      friends {\n        name\n        id\n        appearsIn\n      }\n    }\n  }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "examples/flow/src/App.js", "repo": "Shopify_react-apollo"}, "arguments": "($episode: Episode!)"}, {"type": "query", "name": "GetCharacter", "content": "{\n    hero(episode: $episode) {\n      name\n      id\n      friends {\n        name\n        id\n        appearsIn\n      }\n    }\n  }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/flow-usage.js", "repo": "Shopify_react-apollo"}, "arguments": "($episode: Episode!)"}, {"type": "mutation", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/parser.test.ts", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "One", "content": "{\n        user {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/parser.test.ts", "repo": "Shopify_react-apollo"}}, {"type": "subscription", "name": "UserInfo", "content": "{\n    user {\n      name\n    }\n  }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/Subscription.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "people", "content": "{\n    allPeople(first: 1) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/Query.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "ships", "content": "{\n        allships(first: 1) {\n          ships {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/shared-operations.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "ships", "content": "{\n        allships(first: 1) {\n          ships {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/shared-operations.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "addPerson", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/shared-operations.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          __typename\n          ...person\n        }\n      }\n\n      fragment person on PeopleConnection {\n        people {\n          name\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/fragments.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/client-option.test.tsx", "repo": "Shopify_react-apollo"}, "arguments": "($first: Int)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/queries/loading.test.tsx", "repo": "Shopify_react-apollo"}, "arguments": "($first: Int)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n            friends(id: $first) {\n              name\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/queries/observableQuery.test.tsx", "repo": "Shopify_react-apollo"}, "arguments": "($first: Int!)"}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/queries/api.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "foo", "content": "{\n            bar\n          }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/queries/index.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/queries/lifecycle.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "pollingPeople", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/queries/lifecycle.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "todos", "content": "{\n        todo_list {\n          id\n          title\n          tasks {\n            id\n            text\n            completed\n          }\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          text\n          completed\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "getMini", "content": "{\n        mini(id: $id) {\n          __typename\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n        }\n      }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/queries.test.tsx", "repo": "Shopify_react-apollo"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "addPerson", "content": "{\n    allPeople(first: 1) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/index.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "mutation", "name": "addPerson", "content": "{\n    allPeople(id: $id) {\n      people {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/lifecycle.test.tsx", "repo": "Shopify_react-apollo"}, "arguments": "($id: Int)"}, {"type": "query", "name": "todos", "content": "{\n          todo_list {\n            id\n            title\n            tasks {\n              id\n              text\n              completed\n            }\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/client/graphql/mutations/recycled-queries.test.tsx", "repo": "Shopify_react-apollo"}}, {"type": "query", "name": "data", "content": "{\n          film(id: $id) {\n            title\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/server/server.test.tsx", "repo": "Shopify_react-apollo"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "data", "content": "{\n          ship(id: $id) {\n            name\n            films {\n              id\n            }\n          }\n        }", "metadata": {"commit_hash": "8ac3af818d55d7216500e424d1d77ba16d837e3a", "file": "test/server/server.test.tsx", "repo": "Shopify_react-apollo"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "PostSong", "content": "{\n\t\tinsert_songs(\n\t\t\tobjects: {\n\t\t\t\ttitle: $title\n\t\t\t\tartist: $artist\n\t\t\t\turl: $url\n\t\t\t\tgenre_id: $genre_id\n\t\t\t}\n\t\t) {\n\t\t\treturning {\n\t\t\t\tid\n\t\t\t\ttitle\n\t\t\t\tartist\n\t\t\t\turl\n\t\t\t\tgenre_id\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "5470ca0cda52c34bc1477a8bced74aaced212903", "file": "src/containers/CreateSongs.js", "repo": "JulienDemarque_JAMstack-hackathon-video-audio-matcher"}, "arguments": "(\n\t\t$title: String!\n\t\t$artist: String!\n\t\t$url: String!\n\t\t$genre_id: Int!\n\t)"}, {"type": "query", "name": "summary", "content": "{\n    stakingSummaryEntity(id: $id) {\n      id\n      totalValueLocked\n      balancerLocked\n      sDeaLocked\n      sDeusLocked\n      timeLocked\n    }\n  }", "metadata": {"commit_hash": "bd96647a279c97610800dad2b433464673f9c0c3", "file": "src/api/query.js", "repo": "deusfinance_deus-statistics"}, "arguments": "($id: String)"}, {"type": "query", "name": "QUERY_GET_CART", "content": "{\n    cart {\n      id\n      cartItems {\n        id\n        title\n        description\n        handle\n        categoryHandle\n        quantityAvailable\n        quantity\n        image\n        price\n        note\n      }\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/checkout/queries/QUERY_GET_CART.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_ADD_TO_CART", "content": "{\n    addToCart(variantId: $variantId, quantity: $quantity, note: $note) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/checkout/mutations/MUTATION_ADD_TO_CART.ts", "repo": "JohnMichael746_shopify-nextjs"}, "arguments": "($variantId: String!, $quantity: Int!, $note: String)"}, {"type": "mutation", "name": "MUTATION_UPDATE_QUANTITY", "content": "{\n    updateCartQuantity(itemId: $itemId, quantity: $quantity) {\n        success\n        message\n        data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/checkout/mutations/MUTATION_UPDATE_CART_ITEM.ts", "repo": "JohnMichael746_shopify-nextjs"}, "arguments": "($itemId: String!, $quantity: Int!)"}, {"type": "mutation", "name": "MUTATION_REMOVE_FROM_CART", "content": "{\n        removeFromCart(itemId: $itemId) {\n            success\n            message\n            data\n        }\n    }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/checkout/mutations/MUTATION_REMOVE_FROM_CART.ts", "repo": "JohnMichael746_shopify-nextjs"}, "arguments": "($itemId: String!)"}, {"type": "query", "name": "CURRENT_USER_QUERY", "content": "{\n        me {\n            id\n            firstName\n            lastName\n            email\n            displayName\n        }\n    }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/user/queries/QUERY_GET_CUSTOMER.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_SIGNUP_CUSTOMER", "content": "{\n    signupCustomer(email: $email, password: $password) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/user/mutations/MUTATION_SIGNUP_EMAIL.ts", "repo": "JohnMichael746_shopify-nextjs"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "QUERY_GET_ADDRESSES", "content": "{\n  addresses {\n    id\n    address1\n    address2\n    city\n    country\n    province\n    zip\n    firstName\n    lastName\n    active\n  }\n}", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/address/queries/QUERY_GET_ADDRESSES.ts", "repo": "JohnMichael746_shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_CHECKOUT_ADDRESS", "content": "{\n    populateCheckout(shippingAddress: $shippingAddress) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "090f79aa3115d0d985ceda774c22e0593e72ad1d", "file": "frontend-structure/address/mutations/MUTATION_CHECKOUT_ADDRESS.ts", "repo": "JohnMichael746_shopify-nextjs"}, "arguments": "($shippingAddress: ShippingAddressInput)"}, {"type": "query", "name": "players", "content": "{\n    players(offset: $offset, limit:10) {\n      id\n      first_name\n      last_name\n      hand\n      birthday\n      country\n    }\n  }", "metadata": {"commit_hash": "8bd364de0baa22569a0498ff94d8fa67e905e52b", "file": "client/src/app/players/players.component.ts", "repo": "oktadev_okta-graphql-angular-example"}, "arguments": "($offset:Int)"}, {"type": "mutation", "name": "deleteItem", "content": "{\n    deleteItem(id: $id){\n      title\n    }\n  }", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "allItems", "content": "{\n    allItems(first: $first) {\n      id\n      title\n    }\n}", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}, "arguments": "($first: Int)"}, {"type": "query", "name": "somethingFake", "content": "{\n    somethingFake(first: $first) {\n      id\n      title\n    }\n}", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}, "arguments": "($first: Int)"}, {"type": "subscription", "name": "itemUpdated", "content": "{\n    itemUpdated {\n      id\n      title\n    }\n}", "metadata": {"commit_hash": "dab606f5c3f6557995662f88d0ae884361c232bb", "file": "packages/sync/test/mock/mutations.ts", "repo": "aerogear_aerogear-js-sdk"}}, {"type": "query", "name": "Query", "content": "{\n        getGameById(gameId: $id) {\n            gameId\n            title\n            categories {\n                catgId\n                categoryName\n                questions {\n                    quesId\n                    catgId\n                    points\n                    categoryName\n                    question\n                    answer\n                    state\n                }\n            }\n            contestants {\n              gameId\n              login\n              name\n              organization\n              score\n            }\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}, "arguments": "($id: Int!)"}, {"type": "subscription", "name": "Subscription", "content": "{\n        questionStateChange {\n            quesId\n            state\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "mod", "content": "{\n        nominateSelf(quesId: $quesId) {\n            quesId\n            login\n            name\n            organization\n            timebuzzed\n        }\n    }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/graphqlQueries.js", "repo": "ralberth_quizshow"}, "arguments": "($quesId: Int!)"}, {"type": "query", "name": "GetQuestionByQuesId", "content": "{\n    getQuestionByQuesId(quesId: $quesId) {\n      answer\n      catgId\n      points\n      quesId\n      categoryName\n      question\n      state\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/queries.js", "repo": "ralberth_quizshow"}, "arguments": "($quesId: Int!)"}, {"type": "query", "name": "ListContestants", "content": "{\n    listContestants {\n      gameId\n      login\n      name\n      organization\n      score\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/queries.js", "repo": "ralberth_quizshow"}}, {"type": "query", "name": "ListGames", "content": "{\n    listGames {\n      categories {\n        categoryName\n        catgId\n        gameId\n      }\n      contestants {\n        gameId\n        login\n        name\n        organization\n        score\n      }\n      emcee\n      gameId\n      title\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/queries.js", "repo": "ralberth_quizshow"}}, {"type": "subscription", "name": "AddContestantScore", "content": "{\n    addContestantScore {\n      gameId\n      login\n      name\n      organization\n      score\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/subscriptions.js", "repo": "ralberth_quizshow"}}, {"type": "mutation", "name": "RemoveNominee", "content": "{\n    removeNominee(login: $login, quesId: $quesId) {\n      login\n      name\n      organization\n      quesId\n      timebuzzed\n    }\n  }", "metadata": {"commit_hash": "35208ce1b78d8f004f289d694a722a0ec079428d", "file": "website/src/graphql/schema/mutations.js", "repo": "ralberth_quizshow"}, "arguments": "($login: String!, $quesId: Int!)"}, {"type": "query", "name": "EventApp", "content": "{\n            allEvents {\n              id\n              title\n              description\n              location\n              images {\n                id\n                url\n              }\n            }\n          }", "metadata": {"commit_hash": "a00c77abf8b4d3c451121db38368cb017e9dd0d4", "file": "src/components/App.js", "repo": "hygraph_graphcms-event-app-demo"}}, {"type": "query", "name": "GetTransactions", "content": "{\n      txnsByAddr(addr: $addr) {\n        ID\n      }\n    }", "metadata": {"commit_hash": "24af70d737f1bd2764e1bbb0198f9d57b7fa85c7", "file": "src/components/DetailsPages/AddressDetailsPage/AccountDetailsPage/RowTransactions.tsx", "repo": "Zilliqa_devex"}, "arguments": "($addr: String!)"}, {"type": "query", "name": "getUser", "content": "{\n    me(id: $id) {\n      id\n      name\n      email\n      address {\n        id\n        type\n        name\n        info\n      }\n      contact {\n        id\n        type\n        number\n      }\n      card {\n        id\n        type\n        cardType\n        name\n        lastFourDigit\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/query/customer.query.ts", "repo": "mdhafiz_PickBazar"}, "arguments": "($id: String = \"1\")"}, {"type": "query", "name": "getVendor", "content": "{\n    vendor(slug: $slug) {\n      id\n      slug\n      name\n      categories\n      previewUrl\n      thumbnailUrl\n      type\n      deliveryDetails {\n        charge\n        minimumOrder\n        isFree\n      }\n      address\n      products {\n        id\n        name\n        type\n        description\n        price\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/query/vendor.query.ts", "repo": "mdhafiz_PickBazar"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "getRelatedProducts", "content": "{\n    relatedProducts(type: $type, slug: $slug) {\n      id\n      title\n      slug\n      weight\n      price\n      type\n      image\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/query/product.query.ts", "repo": "mdhafiz_PickBazar"}, "arguments": "($type: String!, $slug: String!)"}, {"type": "query", "name": "getVendors", "content": "{\n    vendors(\n      type: $type\n      text: $text\n      category: $category\n      offset: $offset\n      limit: $limit\n    ) {\n      items {\n        id\n        slug\n        type\n        categories\n        name\n        thumbnailUrl\n        description\n        promotion\n        deliveryDetails {\n          charge\n          minimumOrder\n          isFree\n        }\n      }\n      totalCount\n      hasMore\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/graphql/query/vendors.query.ts", "repo": "mdhafiz_PickBazar"}, "arguments": "(\n    $type: String\n    $text: String\n    $category: String\n    $offset: Int\n    $limit: Int\n  )"}, {"type": "mutation", "name": "createCoupon", "content": "{\n    createCoupon(coupon: $coupon) {\n      id\n      title\n      code\n      number_of_used_coupon\n      number_of_coupon\n      expiration_date\n      creation_date\n      status\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CampaingForm/CampaingForm.tsx", "repo": "mdhafiz_PickBazar"}, "arguments": "($coupon: AddCouponInput!)"}, {"type": "query", "name": "getOrders", "content": "{\n    orders(status: $status, limit: $limit, searchText: $searchText) {\n      id\n      customer_id\n      creation_date\n      delivery_address\n      amount\n      payment_method\n      contact_number\n      status\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/Orders/Orders.tsx", "repo": "mdhafiz_PickBazar"}, "arguments": "($status: String, $limit: Int, $searchText: String)"}, {"type": "query", "name": "getCategories", "content": "{\n    categories(type: $type, searchBy: $searchBy) {\n      id\n      icon\n      name\n      slug\n      type\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/Category/Category.tsx", "repo": "mdhafiz_PickBazar"}, "arguments": "($type: String, $searchBy: String)"}, {"type": "query", "name": "getCategories", "content": "{\n    categories(type: $type, searchBy: $searchBy) {\n      id\n      icon\n      name\n      slug\n      type\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CategoryForm/CategoryForm.tsx", "repo": "mdhafiz_PickBazar"}, "arguments": "($type: String, $searchBy: String)"}, {"type": "mutation", "name": "createCategory", "content": "{\n    createCategory(category: $category) {\n      id\n      name\n      type\n      icon\n      # creation_date\n      slug\n      # number_of_product\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/admin/src/containers/CategoryForm/CategoryForm.tsx", "repo": "mdhafiz_PickBazar"}, "arguments": "($category: AddCategoryInput!)"}, {"type": "query", "name": "getAllOrders", "content": "{\n    orders(text: $text, limit: $limit, user: $user) {\n      id\n      status\n      deliveryAddress\n      amount\n      date\n      subtotal\n      deliveryFee\n      discount\n      deliveryTime\n      products {\n        title\n        price\n        total\n        image\n        weight\n        quantity\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "915683735a4d7511247be78373829d4d1e864182", "file": "packages/shop/src/features/user-profile/order/order.tsx", "repo": "mdhafiz_PickBazar"}, "arguments": "($text: String, $user: Int!, $limit: Int)"}, {"type": "mutation", "name": "tryReconnectNow", "content": "{\n    tryReconnect @client\n  }", "metadata": {"commit_hash": "84310c5144bbd0fa4d5e6c70f0c0bfa36e63fb92", "file": "example/src/client.js", "repo": "D1plo1d_graphql-things"}}, {"type": "query", "name": "firstcustomer", "content": "{\n              customer(where: { id: { eq: $id } }) {\n                id\n                name\n                since\n                revenue\n                orders {\n                  id\n                  description\n                }\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}, "arguments": "($id: ID)"}, {"type": "mutation", "name": "DeleteProducts", "content": "{\n              product: deleteProduct(where: { id: { eq: $id } }) {\n                id\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}, "arguments": "($id: ID)"}, {"type": "mutation", "name": "CreateOrderProduct", "content": "{\n              orderproduct: createOrderproduct(input: $orderproduct) {\n                productId\n                orderId\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}, "arguments": "(\n              $orderproduct: _inputCreateOrderproduct\n            )"}, {"type": "mutation", "name": "OrderProduct", "content": "{\n              deleteOrderproduct(\n                where: {\n                  productId: { eq: $productId }\n                  orderId: { eq: $orderId }\n                }\n              ) {\n                productId\n                orderId\n              }\n            }", "metadata": {"commit_hash": "57ec919fe08964be5341b3747f39ae60b816cc79", "file": "test/resolvers.js", "repo": "stvkoch_graphqlizejs"}, "arguments": "($productId: ID, $orderId: ID)"}, {"type": "query", "name": "Odds", "content": "{\n  match(id: $match_id) {\n    id\n    odds {\n      teams { wins losses percent }\n      teams_and_civilizations { wins losses percent }\n      civilizations { wins losses percent }\n      civilizations_and_map { wins losses percent }\n      teams_and_map { wins losses percent }\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Odds.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($match_id: Int!)"}, {"type": "query", "name": "Units", "content": "{\n  match(id: $match_id) {\n    id\n    team_size\n    duration_secs\n    players {\n      name\n      color_id\n      timeseries {\n        timestamp_secs\n        kills\n        deaths\n        razes\n        kd_delta\n      }\n      units_trained {\n        timestamp_secs\n        name\n        count\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Military.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($match_id: Int!)"}, {"type": "query", "name": "Graph", "content": "{\n  match(id: $match_id) {\n    id\n    graph {\n      nodes {\n        id\n        name\n        color_id\n      }\n      links {\n        source\n        target\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Graph.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($match_id: Int!)"}, {"type": "query", "name": "Person", "content": "{\n  person(id: $id) {\n    id\n    name\n    country\n    first_name\n    last_name\n    age\n    aoeelo_rank\n    aoeelo_rate\n    aoeelo_id\n    esportsearnings_id\n    earnings\n    liquipedia\n    portrait_link\n    twitch\n    mixer\n    douyu\n    youtube\n    discord\n    accounts {\n      id\n      name\n      platform_id\n      platform {\n        id\n        name\n      }\n    }\n    events {\n      id\n      name\n      year\n    }\n    aliases\n    matches(order: $order, offset: $offset, limit: $limit) {\n      count\n      hits {\n        ...MatchFragment\n      }\n    }\n  }\n}\n${MatchFragment}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Person.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($id: Int!, $order: [String], $offset: Int!, $limit: Int!)"}, {"type": "query", "name": "Map", "content": "{\n  map(name: $name) {\n    name\n    top_civilizations {\n      id\n      dataset_id\n      name\n    }\n    preview_url\n    matches(order: $order, offset: $offset, limit: $limit) {\n      count\n      hits {\n        ...MatchFragment\n      }\n    }\n  }\n}\n${MatchFragment}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Map.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($name: String!, $order: [String], $offset: Int!, $limit: Int!)"}, {"type": "query", "name": "Civilization", "content": "{\n  civilization(id: $id, dataset_id: $dataset_id) {\n    name\n    bonuses {\n      type\n      description\n    }\n    matches(order: $order, offset: $offset, limit: $limit) {\n      count\n      hits {\n        ...MatchFragment\n      }\n    }\n  }\n}\n${MatchFragment}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Civilization.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($id: Int!, $dataset_id: Int!, $order: [String], $offset: Int!, $limit: Int!)"}, {"type": "query", "name": "Stats", "content": "{\n    search_options {\n      ladders(platform_id: $platform_id) { value label }\n    }\n  }", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/SearchOptionsPlatform.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($platform_id: String!)"}, {"type": "query", "name": "Charts", "content": "{\n  match(id: $match_id) {\n    id\n    players {\n      name\n      color_id\n      timeseries {\n        timestamp_secs\n        population\n        military\n        percent_explored\n        value_objects_destroyed\n        value_current_units\n      }\n      apm {\n        timestamp_secs\n        actions\n      }\n      map_control {\n        timestamp_secs\n        control_percent\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Charts.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($match_id: Int!)"}, {"type": "query", "name": "Series", "content": "{\n  series(id: $id) {\n    name\n    played\n    sides {\n      name\n      winner\n      score\n      users {\n        id\n        name\n        platform_id\n      }\n    }\n    tournament {\n      id\n      name\n      event {\n        id\n        name\n      }\n    }\n    matches(order: $order, offset: $offset, limit: $limit) {\n      count\n      hits {\n        ...MatchFragment\n      }\n    }\n  }\n}\n${MatchFragment}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Series.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($id: String!, $order: [String], $offset: Int!, $limit: Int!)"}, {"type": "query", "name": "Stats", "content": "{\n    search_options {\n      civilizations(dataset_id: $dataset_id) { value label }\n      versions(dataset_id: $dataset_id) { value label }\n    }\n  }", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/SearchOptionsDataset.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($dataset_id: Int!)"}, {"type": "query", "name": "Latest", "content": "{\n  latest {\n    matches(dataset_id: $dataset_id, order: $order, offset: $offset, limit: $limit) {\n      count\n      hits {\n        ...MatchFragment\n      }\n    }\n  }\n}\n${MatchFragment}", "metadata": {"commit_hash": "2f03ece75e7367a99e5f36874727cd5bb90508f7", "file": "js/src/graphql/Latest.js", "repo": "SiegeEngineers_aocrecs.com"}, "arguments": "($dataset_id: Int!, $order: [String], $offset: Int!, $limit: Int!)"}, {"type": "query", "name": "getPost", "content": "{\n    getPost(post: $post) {\n      id\n      slug\n      postId\n      content\n      cover\n      likes\n      community {\n        id\n        name\n        slug\n        communityId\n        description\n        logo\n        cover\n        type\n        category {\n          id\n          name\n        }\n        createdAt\n      }\n      user {\n        id\n        userId\n        fullName\n        photo\n        totalLikes\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($post: String!)"}, {"type": "mutation", "name": "setVote", "content": "{\n    setVote(input: $input)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($input: VoteInputType!)"}, {"type": "query", "name": "getPostVote", "content": "{\n    getPostVote(post: $post) {\n      vote\n      voted\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($post: String!)"}, {"type": "mutation", "name": "addPost", "content": "{\n    addPost(input: $input) {\n      id\n      postId\n      slug\n      content\n      cover\n      likes\n      comments\n      user {\n        id\n        fullName\n        photo\n        totalLikes\n      }\n      tags {\n        id\n        tagName\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($input: PostInputType!)"}, {"type": "mutation", "name": "addComment", "content": "{\n    addComment(input: $input) {\n      id\n      commentId\n      message\n      isReply\n      cover\n      likes\n      user {\n        id\n        fullName\n        photo\n        totalLikes\n        createdAt\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($input: CommentInput!)"}, {"type": "query", "name": "userPosts", "content": "{\n    userPosts(pagination: $pagination) {\n      page\n      total\n      total_pages\n      data {\n        id\n        postId\n        slug\n        content\n        cover\n        likes\n        user {\n          id\n          fullName\n          photo\n          totalLikes\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($pagination: PaginationInputType!)"}, {"type": "query", "name": "userComments", "content": "{\n    userComments(pagination: $pagination) {\n      page\n      per_page\n      total\n      data {\n        id\n        post {\n          postId\n        }\n        commentId\n        message\n        isReply\n        cover\n        likes\n        user {\n          id\n          fullName\n          photo\n          totalLikes\n          createdAt\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($pagination: PaginationInputType!)"}, {"type": "query", "name": "userPublicComments", "content": "{\n    userPublicComments(pagination: $pagination, user: $user) {\n      page\n      per_page\n      total\n      data {\n        id\n        commentId\n        message\n        isReply\n        cover\n        likes\n        user {\n          id\n          userId\n          fullName\n          photo\n          totalLikes\n          createdAt\n        }\n        post {\n          postId\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($pagination: PaginationInputType!, $user: String!)"}, {"type": "mutation", "name": "isNameDuplicate", "content": "{\n    isNameDuplicate(name: $name)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($name: String!)"}, {"type": "mutation", "name": "leaveCommunity", "content": "{\n    leaveCommunity(input: $input)\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($input: String!)"}, {"type": "query", "name": "topCommunities", "content": "{\n    topCommunities(pagination: $pagination, cat: $cat) {\n      data {\n        id\n        name\n        slug\n        logo\n        category {\n          id\n          name\n          catId\n          createdAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "85c2fbdb9aa527caec16c7aabc40ec7aea3f34d8", "file": "web/src/queries/index.ts", "repo": "amenabe22_chewata"}, "arguments": "($pagination: PaginationInputType!, $cat: String)"}, {"type": "mutation", "name": "sendResetAccountPasswordEmail", "content": "{\n    sendResetAccountPasswordEmail(input: $input) {\n      email\n    }\n  }", "metadata": {"commit_hash": "9e343dc90ff483f0c7273a9fa6ad2a30c5aff1a8", "file": "client/components/ForgotPassword.js", "repo": "reactioncommerce_reaction-identity"}, "arguments": "($input: SendResetAccountPasswordEmailInput!)"}, {"type": "query", "name": "oneMusicalStyleOption", "content": "{\n    oneMusicalStyleOption(id: $id) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/queries/musicalGenres.query.js", "repo": "midianinja_som-web"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "allMusicalStyleOptions", "content": "{\n    allMusicalStyleOptions(\n      musical_style_option: $musical_style_option\n      paginator: $paginator\n    ) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/queries/musicalGenres.query.js", "repo": "midianinja_som-web"}, "arguments": "(\n    $musical_style_option: MusicalStyleOptionInput\n    $paginator: PaginatorInput\n  )"}, {"type": "mutation", "name": "createArtist", "content": "{\n    createArtist(\n      artist: $artist\n    ) {\n      id\n      name\n      members_number\n      stage_map\n      tec_rider\n      kit\n      avatar_image {\n        mimified\n        thumbnail\n      }\n      about\n      country\n      state\n      city\n      songs {\n        id\n        title\n        url\n      }\n      musical_styles {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/mutations/artist.mutation.js", "repo": "midianinja_som-web"}, "arguments": "(\n    $artist: ArtistInput!\n  )"}, {"type": "query", "name": "allStates", "content": "{\n        allStates(state: $state) {\n        name\n        id\n        short_name\n        }\n    }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/handle-artist/handleArtist.queries.js", "repo": "midianinja_som-web"}, "arguments": "($state: StateInput)"}, {"type": "mutation", "name": "deleteSong", "content": "{\n          deleteSong(\n            song_id: $song_id\n          ) {\n            id\n            url\n            title\n            image {\n              mimified\n            }\n          }\n        }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/artist/ArtistController.js", "repo": "midianinja_som-web"}, "arguments": "(\n          $song_id: ID!\n        )"}, {"type": "mutation", "name": "updateSong", "content": "{\n          updateSong(\n            song_id: $song_id\n            song: $song\n          ) {\n            id\n            url\n            title\n            image {\n              mimified\n            }\n          }\n        }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/artist/ArtistController.js", "repo": "midianinja_som-web"}, "arguments": "(\n          $song_id: ID!\n          $song: SongInput!\n        )"}, {"type": "query", "name": "searchArtists", "content": "{\n        searchArtists(\n          artist: $artist\n          paginator: $paginator\n        ) {\n          id\n          name\n          avatar_image {\n            mimified\n            thumbnail\n          }\n        }\n      }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/artist/ArtistController.js", "repo": "midianinja_som-web"}, "arguments": "(\n      $artist: JSON\n      $paginator: PaginatorInput\n      )"}, {"type": "query", "name": "allCities", "content": "{\n        allCities(city: $city) {\n        name\n        id\n        }\n    }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-productor/registerProduct.queries.js", "repo": "midianinja_som-web"}, "arguments": "($city: CityInput)"}, {"type": "query", "name": "allStates", "content": "{\n        allStates(state: $state) {\n        name\n        id\n        short_name\n        }\n    }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/register-event/registerEvent.queries.js", "repo": "midianinja_som-web"}, "arguments": "($state: StateInput)"}, {"type": "query", "name": "allCountries", "content": "{\n        allCountries(country: $country) {\n        name\n        id\n        short_name\n        shortName\n        pattern\n        pattern_name\n        }\n    }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/my-events/myEvents.queries.js", "repo": "midianinja_som-web"}, "arguments": "($country: CountryInput)"}, {"type": "query", "name": "allCities", "content": "{\n        allCities(city: $city) {\n        name\n        id\n        }\n    }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/my-events/myEvents.queries.js", "repo": "midianinja_som-web"}, "arguments": "($city: CityInput)"}, {"type": "query", "name": "allStates", "content": "{\n        allStates(state: $state) {\n        name\n        id\n        short_name\n        }\n    }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/my-events/myEvents.queries.js", "repo": "midianinja_som-web"}, "arguments": "($state: StateInput)"}, {"type": "mutation", "name": "subscribe", "content": "{\n    subscribeEvent(id: $id, artistID: $artistID) {\n      id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n        mimified\n      }\n      photo {\n        mimified\n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event/event.mutations.js", "repo": "midianinja_som-web"}, "arguments": "($id: String!, $artistID: String!)"}, {"type": "mutation", "name": "subscribe", "content": "{\n    subscribeEvent(id: $id, artistID: $artistID) {\n       id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers @defer {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists @defer {\n        id\n      }\n      cover @defer {\n       mimified\n      }\n      photo {\n       mimified\n      }\n      productor @defer {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/events/events.mutations.js", "repo": "midianinja_som-web"}, "arguments": "($id: String!, $artistID: String!)"}, {"type": "mutation", "name": "reproveArtist", "content": "{\n  reproveArtist(\n    event_id: $event_id\n    artist_id: $artist_id\n  ){\n    ${eventType}\n  }\n}", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event-curatorship/eventCuratorship.mutations.js", "repo": "midianinja_som-web"}, "arguments": "(\n  $event_id: String!\n  $artist_id: String!\n)"}, {"type": "mutation", "name": "aproveArtist", "content": "{\n    aproveArtist(\n      event_id: $event_id\n      artist_id: $artist_id\n    )\n    {\n      ${eventType}\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/modules/event-curatorship/eventCuratorship.mutations.js", "repo": "midianinja_som-web"}, "arguments": "(\n    $event_id: String!\n    $artist_id: String!\n  )"}, {"type": "mutation", "name": "unsubscribe", "content": "{\n    unsubscribeEvent(id: $id, artistID: $artistID) {\n      id\n      name\n      about\n      event_date\n      has_food\n      has_money_paid\n      subscribe_closing_date\n      has_accommodation\n      has_city_transportation\n      has_local_transportation\n      location {\n        number\n        address\n        district\n        city\n        state\n      }\n      subscribers {\n        id\n        avatar_image {\n          mimified\n          thumbnail\n        }\n        name\n      }\n      approved_artists {\n        id\n      }\n      cover {\n        mimified\n      }\n      photo {\n        mimified\n      }\n      productor {\n        id\n        photo\n        name\n        description\n        followers {\n          id\n        }\n        following {\n          id\n        }\n        location {\n          city\n          state\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "2972409acc40c2af8d3f8bd23610a16de6f856da", "file": "src/app/components/organisms/subscribe-button/subscribeButton.mutations.js", "repo": "midianinja_som-web"}, "arguments": "($id: String!, $artistID: String!)"}, {"type": "query", "name": "IssuesSearch", "content": "{\n  search(query:$query,type:ISSUE,last:10) {\n    nodes {\n      ... on Issue {\n        ...issueFields\n        ...popularityFields\n        ...commentFields\n      }\n    }\n  }\n}\n\n${issueFragment}\n${popularityFragment}\n${commentFragment}", "metadata": {"commit_hash": "5358526a9bb7c3ab826658a613e5b487b064a682", "file": "src/server/apis/issues.ts", "repo": "PolymerLabs_project-health"}, "arguments": "($query: String!)"}, {"type": "query", "name": "PRState", "content": "{\n  nodes(ids: $prIds) {\n    ...on PullRequest {\n      id\n      state\n    }\n  }\n}", "metadata": {"commit_hash": "5358526a9bb7c3ab826658a613e5b487b064a682", "file": "src/server/apis/check-pr-state.ts", "repo": "PolymerLabs_project-health"}, "arguments": "($prIds: [ID!]!)"}, {"type": "query", "name": "ViewerLogin", "content": "{\n  viewer {\n    login\n    avatarUrl\n    name\n  }\n}", "metadata": {"commit_hash": "5358526a9bb7c3ab826658a613e5b487b064a682", "file": "src/server/models/userModel.ts", "repo": "PolymerLabs_project-health"}}, {"type": "mutation", "name": "CreateProfile", "content": "{\n    createProfile(\n      request: {\n        handle: \"jptestdev\"\n        profilePictureUri: null\n        followNFTURI: null\n        followModule: null\n      }\n    ) {\n      ... on RelayerResult {\n        txHash\n      }\n      ... on RelayError {\n        reason\n      }\n      __typename\n    }\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/createProfile.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}}, {"type": "query", "name": "defaultProfile", "content": "{\n    defaultProfile(request: $request) {\n      id\n      handle\n    }\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/clientApi/lens/getDefaultProfile.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}, "arguments": "($request: DefaultProfileRequest!)"}, {"type": "query", "name": "GetFonts", "content": "{\n    fontProjects {\n      metaData {\n        name\n        description\n      }\n      id\n      perCharacterMintPrice\n      launchDateTime\n      createdAt\n      updatedAt\n      fontFilesCID\n    }\n  }", "metadata": {"commit_hash": "d7a5965dee74d3aa10c15086b534c04da1473ed5", "file": "frontend/components/app/Gallery/Gallery.js", "repo": "interplanetaryfonts_interplanetaryfonts.xyz"}}, {"type": "query", "name": "getBackupReposByProviderID", "content": "{\n  \t\t\t\tbackupRepos(provider_id: $providerID) {\n    \t\t\t\tid\n    \t\t\t\tsite_id\n    \t\t\t\tprovider_id\n    \t\t\t\thash\n  \t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}, "arguments": "($providerID: String)"}, {"type": "mutation", "name": "updateBackupSnapshot", "content": "{\n\t\t\t\tupdateBackupSnapshot(id: $snapshotID, hash: $resticSnapshotHash, status: $status, config: $metaData) {\n\t\t\t\t\tid\n\t\t\t\t\trepo_id\n\t\t\t\t\thash\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}, "arguments": "($snapshotID: Int!, $resticSnapshotHash: String, $status: String!, $metaData: Mixed)"}, {"type": "query", "name": "backupSnapshots", "content": "{\n\t\t\t\tbackupSnapshots(\n\t\t\t\t\tbackup_repo_id: $backup_repo_id,\n\t\t\t\t\tfirst: $first,\n\t\t\t\t\tpage: $page,\n\t\t\t\t\torderBy: [{ column: \"updated_at\", order: DESC }]\n\t\t\t\t) {\n\t\t\t\t\tdata {\n\t\t\t\t\t\tid\n\t\t\t\t\t\trepo_id\n\t\t\t\t\t\thash\n\t\t\t\t\t\tupdated_at\n\t\t\t\t\t\tcreated_at\n\t\t\t\t\t\tconfig\n\t\t\t\t\t}\n\t\t\t\t\tpaginatorInfo {\n\t\t\t\t\t\tcurrentPage\n\t\t\t\t\t\tlastPage\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}", "metadata": {"commit_hash": "b6cd881001a4c5b9ede986a0da0b5b2fb8d7ba43", "file": "src/main/hubQueries.ts", "repo": "getflywheel_local-addon-backups"}, "arguments": "($backup_repo_id: Int, $first: Int!, $page: Int!)"}, {"type": "mutation", "name": "InsertUsers", "content": "{\n            insert_user(objects: { uuid: $uuid }) {\n              returning {\n                uuid\n              }\n            }\n          }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "functions/src/index.ts", "repo": "Hizuraky_shiftmaker"}, "arguments": "($uuid: String)"}, {"type": "query", "name": "shifts", "content": "{\n    shiftDate(order_by: { year: desc, month: desc }) {\n      id\n      month\n      year\n      shifts(order_by: { createdAt: asc }) {\n        id\n        shiftDateId\n        shiftName\n        isCompleted\n        createdAt\n        updatedAt\n        shiftEmployees {\n          id\n          name\n          canWorkingIds\n          workIds\n        }\n        shiftWorkingTimes {\n          id\n          timeName\n          color\n          startHour\n          startMinute\n          endHour\n          endMinute\n          isNextDayoff\n          maxEmployee\n          minEmployee\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/query.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "query", "name": "employeesAndWorkingTimes", "content": "{\n    employee {\n      id\n      userId\n      name\n      canWorkingIds\n    }\n    workingTime {\n      color\n      isNextDayoff\n      id\n      maxEmployee\n      minEmployee\n      startHour\n      startMinute\n      endHour\n      endMinute\n      timeName\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/query.ts", "repo": "Hizuraky_shiftmaker"}}, {"type": "mutation", "name": "deleteShift", "content": "{\n    delete_shift(where: { id: { _eq: $shiftId } }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "e9b291c74313ae3723aac486bf16bad95219635e", "file": "app/graphql/mutation.ts", "repo": "Hizuraky_shiftmaker"}, "arguments": "($shiftId: Int!)"}, {"type": "query", "name": "authUser", "content": "{\n    authUser(email: $email, password: $password, deviceToken: $deviceToken) {\n      _id\n      username\n      name\n      email\n      role\n      token\n      vehical {\n        vehicalTypeId\n        brand\n        color\n        model\n        plateNumber\n        valuePerKm\n      }\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/queries.js", "repo": "whitehorse21_Vehicle"}, "arguments": "($email: String, $password: String, $deviceToken: String)"}, {"type": "query", "name": "facebookLogin", "content": "{\n    facebookLogin(token: $token) {\n       _id\n      username\n      name\n      email\n      role\n      token\n      vehical {\n        vehicalTypeId\n        brand\n        color\n        model\n        plateNumber\n        valuePerKm\n      }\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/queries.js", "repo": "whitehorse21_Vehicle"}, "arguments": "($token: String)"}, {"type": "query", "name": "sendFreightRequest", "content": "{\n    sendFreightRequest(userId: $userId, shipmentId: $shipmentId)\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/queries.js", "repo": "whitehorse21_Vehicle"}, "arguments": "($userId: String, $shipmentId: String)"}, {"type": "query", "name": "startTrip", "content": "{\n    startTrip(shipmentId: $shipmentId)\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/queries.js", "repo": "whitehorse21_Vehicle"}, "arguments": "($shipmentId: String)"}, {"type": "mutation", "name": "addShipment", "content": "{\n    addShipment(origin: $origin, destination: $destination, distance: $distance, description: $description, fromDate: $fromDate, toDate: $toDate, dimensions: $dimensions, weight: $weight) {\n      _id\n      origin {\n        address \n        location {\n          lat\n          lng\n        }\n      }\n      destination {\n        address \n        location {\n          lat\n          lng\n        }\n      }\n      distance\n      description\n      fromDate\n      toDate\n      dimensions {\n        width\n        height\n        length\n      }\n      weight\n      userId\n    }\n  }", "metadata": {"commit_hash": "4a39d3f9f82d7a4aeb4b499379d82725e015ac06", "file": "src/graphql/mutations.js", "repo": "whitehorse21_Vehicle"}, "arguments": "($origin: String, $destination: String, $distance: Float, $description: String, $fromDate: Date, $toDate: Date, $dimensions: dimensionInput, $weight: String)"}, {"type": "query", "name": "test", "content": "{\n    user {\n      id\n    }\n  }", "metadata": {"commit_hash": "ac847cb1bcda5dce599e5cf206cfb8928e850732", "file": "services/site/tests/lib/apollo-client/create-forward-cookies-to-client-link.spec.ts", "repo": "a11yphant_a11yphant"}}, {"type": "query", "name": "test", "content": "{\n    user {\n      id\n    }\n  }", "metadata": {"commit_hash": "ac847cb1bcda5dce599e5cf206cfb8928e850732", "file": "services/site/tests/lib/apollo-client/create-forward-cookies-to-server-link.spec.ts", "repo": "a11yphant_a11yphant"}}, {"type": "query", "name": "User", "content": "{\n    me {\n      id\n      karma\n    }\n  }", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "src/data/queries/me-query.ts", "repo": "Superdev0103_react-graph-demo"}}, {"type": "mutation", "name": "UpvoteNewsItem", "content": "{\n    upvoteNewsItem(id: $id) {\n      id\n      upvoteCount\n      upvoted\n    }\n  }", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "src/data/mutations/upvote-news-item-mutation.ts", "repo": "Superdev0103_react-graph-demo"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "bestNewsItems", "content": "{\n    feed(type: $type, first: $first, skip: $skip) {\n      ...NewsFeed\n    }\n  }\n  ${newsFeedNewsItemFragment}", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "pages/best.tsx", "repo": "Superdev0103_react-graph-demo"}, "arguments": "($type: FeedType!, $first: Int!, $skip: Int!)"}, {"type": "query", "name": "User", "content": "{\n    user(id: $id) {\n      id\n      about\n      creationTime\n      email\n      karma\n    }\n    me {\n      id\n    }\n  }", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "pages/user.tsx", "repo": "Superdev0103_react-graph-demo"}, "arguments": "($id: String!)"}, {"type": "query", "name": "NewestFeed", "content": "{\n    feed(type: $type, first: $first, skip: $skip) {\n      ...NewsFeed\n    }\n  }\n  ${newsFeedNewsItemFragment}", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "pages/favorites.tsx", "repo": "Superdev0103_react-graph-demo"}, "arguments": "($type: FeedType!, $first: Int!, $skip: Int!)"}, {"type": "query", "name": "NewestFeed", "content": "{\n    feed(type: $type, first: $first, skip: $skip) {\n      ...NewsFeed\n    }\n  }\n  ${newsFeedNewsItemFragment}", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "pages/newest.tsx", "repo": "Superdev0103_react-graph-demo"}, "arguments": "($type: FeedType!, $first: Int!, $skip: Int!)"}, {"type": "query", "name": "topNewsItems", "content": "{\n    feed(type: $type, first: $first, skip: $skip) {\n      ...NewsFeed\n    }\n  }\n  ${newsFeedNewsItemFragment}", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "pages/index.tsx", "repo": "Superdev0103_react-graph-demo"}, "arguments": "($type: FeedType!, $first: Int!, $skip: Int!)"}, {"type": "query", "name": "topNewsItems", "content": "{\n    feed(type: $type, first: $first, skip: $skip) {\n      ...NewsFeed\n    }\n  }\n  ${newsFeedNewsItemFragment}", "metadata": {"commit_hash": "3775c0c8f991abe00d9f6e5cd8fd153c6da19895", "file": "pages/shownew.tsx", "repo": "Superdev0103_react-graph-demo"}, "arguments": "($type: FeedType!, $first: Int!, $skip: Int!)"}, {"type": "query", "name": "GetOrder", "content": "{\n    OrderQuery {\n      orders(where: { id: $orderId }) {\n        nodes {\n          id\n          priority\n          car {\n            id\n            name\n          }\n          from {\n            id\n            name\n          }\n          to {\n            id\n            name\n          }\n          status\n          arrive\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/queries.js", "repo": "bringauto_fleet"}, "arguments": "($orderId: Int!)"}, {"type": "query", "name": "Logout", "content": "{\n    UserQuery {\n      logout\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/queries.js", "repo": "bringauto_fleet"}}, {"type": "mutation", "name": "DeleteOrder", "content": "{\n    OrderMutation {\n      deleteOrder(orderId: $id) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}, "arguments": "($id: Int!)"}, {"type": "mutation", "name": "UpdateCar", "content": "{\n    CarMutation {\n      updateCar(\n        car: {\n          id: $id\n          name: $name\n          requireNewToken: false\n          status: $status\n          companyName: $companyName\n          button: NORMAL\n          hwId: $hwId\n          underTest: $underTest\n          routeId: $routeId\n          carAdminPhone: $carAdminPhone\n        }\n      ) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}, "arguments": "(\n    $id: Int!\n    $name: String!\n    $status: String!\n    $companyName: String\n    $hwId: String\n    $carAdminPhone: String\n    $routeId: Int\n    $underTest: Boolean!\n  )"}, {"type": "mutation", "name": "DeleteRoute", "content": "{\n    RouteMutation {\n      deleteRoute(routeId: $id) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7b00b999cd7992f50bc7de95075710d217086dd2", "file": "FE/src/code/graphql/mutations.js", "repo": "bringauto_fleet"}, "arguments": "($id: Int!)"}, {"type": "query", "name": "getProducts", "content": "{\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "431e234a68b01d0d05d27ee18a24c833959a86e5", "file": "components/ResourceList.js", "repo": "IncredibleMaster_shopify-webhook"}, "arguments": "($ids: [ID!]!)"}, {"type": "query", "name": "LoggedInUserQuery", "content": "{\n    me {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "868e58e4a19847fd9104e13922229edb96e4dda7", "file": "packages/components/me/me.js", "repo": "dferber90_lovely-webapp"}}, {"type": "mutation", "name": "CreateUserMutation", "content": "{\n    signup(email: $email, password: $password, name: $name) {\n      token\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "868e58e4a19847fd9104e13922229edb96e4dda7", "file": "packages/components/signup-form/signup-form.js", "repo": "dferber90_lovely-webapp"}, "arguments": "(\n    $email: String!\n    $password: String!\n    $name: String!\n  )"}, {"type": "query", "name": "getTrackedValueByNameOnlyValue", "content": "{\n                trackedValue(name: $name) {\n                  value\n                }\n              }", "metadata": {"commit_hash": "250ab0a498427e76eca51949ed2b840c1c256fa6", "file": "frontend/src/decorators/TrackedValueSubscription.ts", "repo": "alufers_biedaprint"}, "arguments": "($name: String!)"}, {"type": "mutation", "name": "createTag", "content": "{\n    createTag(name: $name, description: $description) {\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($name: String!, $description: String!)"}, {"type": "mutation", "name": "setTagOn", "content": "{\n    setTagOn(\n      tagName: $tagName\n      on: $on\n      targetType: $targetType\n      targetId: $targetId\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $tagName: String!\n    $on: String!\n    $targetType: String!\n    $targetId: ID!\n  )"}, {"type": "mutation", "name": "setTagParent", "content": "{\n    setTagParent(tagName: $tagName, parentName: $parentName) {\n      tagName\n      parentName\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/teamvision.co/ui/src/gql/tags.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($tagName: String!, $parentName: String)"}, {"type": "query", "name": "User", "content": "{\n  user(id:5){ name }\n}\n# comment", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/prettier/tests/multiparser_js_graphql/graphql-tag.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "usurpUser", "content": "{\n    usurpUser(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/argos/src/review/routes/admin/Admin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: UsurpUserInputType!)"}, {"type": "query", "name": "Q1", "content": "{ sum(a: 1, b: 2) } query Q2 { sum(a: 2, b: 3) }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Q", "content": "{ sum(a: 1, b: 2) } query Q { sum(a: 2, b: 3) }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Test", "content": "{ sum(a: 1, b: 2) }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/eslint-plugin-graphql/test/makeRule.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "CombosQuery", "content": "{\n    allComboes {\n      id\n      entry {\n        text\n      }\n      meaning {\n        id\n        definition\n        type\n        key\n      }\n      picture {\n        id\n        arangoKey\n        hash\n        sourceName\n        sourceUrl\n        authorName\n        authorUrl\n        licenceName\n        licenceUrl\n      }\n      spot {\n        id\n        height\n        width\n        x\n        y\n        key\n      }\n      sentences {\n        id\n        text\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/a-whole-bunch-o-gatsby-templates/demo.lazywill.com/src/AppContainer.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getTweets", "content": "{\n    getTweets {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/React_Notes_V3/React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "updateTweet", "content": "{\n    updateTweet(\n      _id: $_id,\n      tweet: $tweet\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/React_Notes_V3/React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $_id: String!,\n    $tweet: String!\n  )"}, {"type": "query", "name": "ViewerQuery", "content": "{\n    viewer {\n      id\n      name\n      status\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/api-routes-apollo-server-and-client/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "allPosts", "content": "{\n    allPosts(orderBy: { createdAt: desc }, first: $first, skip: $skip) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/with-apollo-and-redux/components/PostList.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($first: Int!, $skip: Int!)"}, {"type": "mutation", "name": "createPost", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/EXAMPLES/with-apollo/components/Submit.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($title: String!, $url: String!)"}, {"type": "query", "name": "GetActor", "content": "{\n    getActor(filter: { name: $actorName }) {\n      name\n      born\n      movies {\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo-neo4j-graphql/pages/actor/[name].js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($actorName: String)"}, {"type": "query", "name": "ViewerQuery", "content": "{\n    viewer {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/api-routes-apollo-server-and-client-auth/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "SignInMutation", "content": "{\n    signIn(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/api-routes-apollo-server-and-client-auth/pages/signin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "SignOutMutation", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/api-routes-apollo-server-and-client-auth/pages/signout.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "allPosts", "content": "{\n    allPosts(orderBy: { createdAt: desc }, first: $first, skip: $skip) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo-and-redux/components/PostList.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($first: Int!, $skip: Int!)"}, {"type": "mutation", "name": "deleteItem", "content": "{\n    delete_items_by_pk(id: $item_id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-nhost-auth-realtime-graphql/pages/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($item_id: uuid!)"}, {"type": "mutation", "name": "votePost", "content": "{\n    votePost(id: $id) {\n      id\n      votes\n      __typename\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-apollo/components/PostUpvoter.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "deleteTweet", "content": "{\n    deleteTweet(\n      _id: $_id\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/React-Cookbook/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($_id: String!)"}, {"type": "mutation", "name": "updateTweet", "content": "{\n    updateTweet(\n      _id: $_id,\n      tweet: $tweet\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/React-Cookbook/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $_id: String!,\n    $tweet: String!\n  )"}, {"type": "query", "name": "user", "content": "{\n    user(username: $username) {\n      ...userInfo\n      ...userCommunities\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunitiesFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/admin/src/api/queries.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($username: String)"}, {"type": "query", "name": "isAdmin", "content": "{\n    meta {\n      isAdmin\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/admin/src/api/queries.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "recentCommunities", "content": "{\n      recentCommunities {\n        ...communityInfo\n        ...communityMembers\n      }\n    }\n    ${communityInfoFragment}\n    ${communityMemberConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/admin/src/api/community.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($filter: MemberConnectionFilter)"}, {"type": "mutation", "name": "saveUserCommunityPermissions", "content": "{\n    saveUserCommunityPermissions(input: $input) {\n      ...userInfo\n      ...userCommunities\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunitiesFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/admin/src/api/mutations.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $input: SaveUserCommunityPermissionsInput!\n  )"}, {"type": "query", "name": "getNotifications", "content": "{\n    notifications {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...notificationInfo\n        }\n      }\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/notification/getNotifications.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getDMNotifications", "content": "{\n    directMessageNotifications(after: $after) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...notificationInfo\n        }\n      }\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/notification/getDirectMessageNotifications.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($after: String)"}, {"type": "query", "name": "searchCommunities", "content": "{\n    search(queryString: $queryString, type: $type) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on Community {\n              ...communityInfo\n              ...communityMetaData\n            }\n          }\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/search/searchCommunities.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($queryString: String!, $type: SearchType!)"}, {"type": "query", "name": "searchCommunityMembers", "content": "{\n    search(queryString: $queryString, type: $type, filter: $filter) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on CommunityMember {\n              ...communityMemberInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/search/searchCommunityMembers.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $queryString: String!\n    $type: SearchType!\n    $filter: SearchFilter\n  )"}, {"type": "query", "name": "getChannelSettings", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/channel/getChannelSettings.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID)"}, {"type": "query", "name": "loadMoreChannelThreads", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelThreadConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelThreadConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/channel/getChannelThreadConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID, $after: String)"}, {"type": "query", "name": "getCommunityTopMembers", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      topMembers {\n        ...communityMemberInfo\n      }\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunityTopMembers.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCommunityBySlug", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunity.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($slug: LowercaseString)"}, {"type": "query", "name": "getCommunityByMatch", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunity.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($slug: LowercaseString)"}, {"type": "query", "name": "loadMoreCommunityThreads", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityThreadConnection\n    }\n  }\n  ${threadInfoFragment}\n  ${communityInfoFragment}\n  ${communityThreadConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunityThreadConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $after: String\n    $id: ID\n    $sort: CommunityThreadConnectionSort\n  )"}, {"type": "query", "name": "getCommunitySettingsById", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunitySettings.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCommunityChannelsWithSlackSettings", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      slackSettings {\n        slackChannelList {\n          id\n          name\n        }\n      }\n      ...communityChannelConnectionWithSlackSettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communityChannelConnectionWithSlackSettingsFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunityChannelsSlackSettings.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCommunityTopAndNewThreads", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      topAndNewThreads {\n        topThreads {\n          ...threadInfo\n        }\n        newThreads {\n          ...threadInfo\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunityTopAndNewThreads.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getSlackSettings", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      slackSettings {\n        teamName\n        isConnected\n        hasSentInvites\n        memberCount\n        invitesSentAt\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/community/getCommunitySlackSettings.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getCurrentUserCommunityConnection", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userCommunityConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunityConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/user/getUserCommunityConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "getUserGithubProfile", "content": "{\n    user(id: $id) {\n      id\n      username\n      githubProfile {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/user/getUserGithubProfile.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCurrentUserSettings", "content": "{\n    user: currentUser {\n      ...userInfo\n      email\n      pendingEmail\n      ...userSettings\n    }\n  }\n  ${userInfoFragment}\n  ${userSettingsFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/user/getCurrentUserSettings.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "loadMoreDirectMessageThreads", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userDirectMessageThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userDirectMessageThreadsConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getCurrentUserDMThreadConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($after: String)"}, {"type": "query", "name": "currentUserDirectMessageThreads", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userDirectMessageThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userDirectMessageThreadsConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getCurrentUserDMThreadConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($after: String)"}, {"type": "query", "name": "loadMoreMessages", "content": "{\n    directMessageThread(id: $id) {\n      ...directMessageThreadInfo\n      ...directMessageThreadMessageConnection\n    }\n  }\n  ${directMessageThreadInfoFragment}\n  ${directMessageThreadMessageConnectionFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getDirectMessageThreadMessageConnection.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!, $after: String)"}, {"type": "query", "name": "getDirectMessageThreadByUserIds", "content": "{\n    directMessageThreadByUserIds(userIds: $userIds) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getDirectMessageThreadByUserIds.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($userIds: [ID!])"}, {"type": "query", "name": "getMediaMessagesForThread", "content": "{\n    getMediaMessagesForThread(threadId: $threadId) {\n      id\n      content {\n        body\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/queries/message/getMediaMessagesForThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($threadId: ID!)"}, {"type": "mutation", "name": "markDirectMessageNotificationsSeen", "content": "{\n    markDirectMessageNotificationsSeen\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/notification/markDirectMessageNotificationsSeen.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "markSingleNotificationSeen", "content": "{\n    markSingleNotificationSeen(id: $id)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/notification/markSingleNotificationSeen.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "addCommunityMemberWithToken", "content": "{\n    addCommunityMemberWithToken(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityMemberWithToken.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $input: AddCommunityMemberWithTokenInput!\n  )"}, {"type": "mutation", "name": "blockCommunityMember", "content": "{\n    blockCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/blockCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: BlockCommunityMemberInput!)"}, {"type": "mutation", "name": "removePendingCommunityMember", "content": "{\n    removePendingCommunityMember(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/communityMember/removePendingCommunityMember.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $input: RemovePendingCommunityMemberInput!\n  )"}, {"type": "mutation", "name": "setThreadLock", "content": "{\n    setThreadLock(threadId: $threadId, value: $value) {\n      id\n      isLocked\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/lockThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($threadId: ID!, $value: Boolean!)"}, {"type": "mutation", "name": "addThreadReaction", "content": "{\n    addThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/addThreadReaction.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: AddThreadReactionInput!)"}, {"type": "mutation", "name": "deleteThread", "content": "{\n    deleteThread(threadId: $threadId)\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/deleteThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($threadId: ID!)"}, {"type": "mutation", "name": "publishThread", "content": "{\n    publishThread(thread: $thread) {\n      ...threadInfo\n      channel {\n        id\n        slug\n        community {\n          id\n          slug\n        }\n      }\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/thread/publishThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($thread: ThreadInput!)"}, {"type": "mutation", "name": "updateChannelSlackBotLinks", "content": "{\n    updateChannelSlackBotLinks(input: $input) {\n      ...channelInfo\n      slackSettings {\n        botLinks {\n          threadCreated\n        }\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/channel/updateChannelSlackBotLinks.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: UpdateChannelSlackBotLinksInput)"}, {"type": "mutation", "name": "sendSlackInvites", "content": "{\n    sendSlackInvites(input: $input) {\n      ...communityInfo\n      slackSettings {\n        teamName\n        isConnected\n        hasSentInvites\n        memberCount\n        invitesSentAt\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/sendSlackInvites.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: SendSlackInvitesInput!)"}, {"type": "mutation", "name": "pinThread", "content": "{\n    pinThread(threadId: $threadId, communityId: $communityId, value: $value) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/pinCommunityThread.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($threadId: ID!, $communityId: ID!, $value: String)"}, {"type": "mutation", "name": "enableBrandedLogin", "content": "{\n    enableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/enableBrandedLogin.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: EnableBrandedLoginInput!)"}, {"type": "mutation", "name": "disableCommunityWatercooler", "content": "{\n    disableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/community/disableCommunityWatercooler.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $input: DisableCommunityWatercoolerInput!\n  )"}, {"type": "mutation", "name": "toggleNotificationSettings", "content": "{\n    toggleNotificationSettings(input: $input) {\n      ...userInfo\n      ...userSettings\n    }\n  }\n  ${userInfoFragment}\n  ${userSettingsFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/user/toggleUserNotificationSettings.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: ToggleNotificationSettingsInput)"}, {"type": "mutation", "name": "updateUserEmail", "content": "{\n    updateUserEmail(email: $email) {\n      ...userInfo\n      email\n      pendingEmail\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/user/updateUserEmail.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($email: LowercaseString!)"}, {"type": "mutation", "name": "setLastSeen", "content": "{\n    setLastSeen(id: $id) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/directMessageThread/setDMThreadLastSeen.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "editMessage", "content": "{\n    editMessage(input: $input) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/message/editMessage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: EditMessageInput!)"}, {"type": "mutation", "name": "sendDirectMessage", "content": "{\n    addMessage(message: $message) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/message/sendDirectMessage.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($message: MessageInput!)"}, {"type": "mutation", "name": "toggleReaction", "content": "{\n    toggleReaction(reaction: $reaction) {\n      ...messageInfo\n      __typename\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/mutations/reaction/toggleReaction.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($reaction: ReactionInput!)"}, {"type": "subscription", "name": "subscribeToDirectMessageNotifications", "content": "{\n    dmNotificationAdded {\n      ...notificationInfo\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_REACT/React_Notes_V3/my-other-notes-n-projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "UserPortfolios", "content": "{\n    userPortfolios {\n      _id\n      title\n      jobTitle\n      startDate\n      endDate\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "CreatePortfolio", "content": "{\n    createPortfolio(\n      input: {\n        title: $title\n        company: $company\n        companyWebsite: $companyWebsite\n        location: $location\n        jobTitle: $jobTitle\n        description: $description\n        startDate: $startDate\n        endDate: $endDate\n      }\n    ) {\n      _id\n      title\n      company\n      companyWebsite\n      location\n      jobTitle\n      description\n      startDate\n      endDate\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $title: String\n    $company: String\n    $companyWebsite: String\n    $location: String\n    $jobTitle: String\n    $description: String\n    $startDate: String\n    $endDate: String\n  )"}, {"type": "mutation", "name": "SignUp", "content": "{\n    signUp(\n      input: {\n        avatar: $avatar\n        username: $username\n        email: $email\n        password: $password\n        passwordConfirmation: $passwordConfirmation\n      }\n    )\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $avatar: String\n    $username: String!\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n  )"}, {"type": "mutation", "name": "SignIn", "content": "{\n    signIn(input: { email: $email, password: $password }) {\n      _id\n      username\n      role\n      avatar\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "SignOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "ForumCategories", "content": "{\n    forumCategories {\n      slug\n      title\n      subTitle\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "TopicsByCategory", "content": "{\n    topicsByCategory(category: $category) {\n      ${topicResponse}\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($category: String)"}, {"type": "query", "name": "TopicBySlug", "content": "{\n    topicBySlug(slug: $slug) {\n      ${topicResponse}\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/Jerga/nextjs-portfolio-course/apollo/queries/index.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($slug: String)"}, {"type": "mutation", "name": "AuthenticateUserMutation", "content": "{ \n    authenticateUser(email: $email, password: $password) {\n      token\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-email-and-apollo/src/components/LoginUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "LoggedInUserQuery", "content": "{\n    loggedInUser {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-email-and-apollo/src/components/LoginUser.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "LoggedInUserQuery", "content": "{\n    loggedInUser {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-email-and-apollo/src/components/App.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "allLocations", "content": "{\n    allLocations {\n      id\n      latitude\n      longitude\n      traveller {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/WorldChat.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "travellerForId", "content": "{\n    Traveller(id: $id) {\n      id\n      name\n      location {\n        id\n        latitude\n        longitude\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/WorldChat.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "updateLocation", "content": "{\n    updateLocation(id: $locationId, latitude: $latitude, longitude: $longitude) {\n      traveller {\n        id\n        name\n      }\n      id\n      latitude\n      longitude\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/WorldChat.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($locationId: ID!, $latitude: Float!, $longitude: Float!)"}, {"type": "mutation", "name": "createMessage", "content": "{\n    createMessage(text: $text, sentById: $sentById) {\n      id\n      text\n      createdAt\n      sentBy {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-worldchat/src/components/Chat.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($text: String!, $sentById: ID!)"}, {"type": "query", "name": "LoggedInUser", "content": "{\n    loggedInUser {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/authentication-with-facebook-and-apollo/src/components/CreatePost.js", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "deletePost", "content": "{\n    deletePost(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/react-graphql/subscriptions-with-apollo-instagram/src/components/Post.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "toggleGoal", "content": "{\n    toggleGoal(_id: $id) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/graphql-list/imports/ui/resolutions/Goal.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "UploadImage", "content": "{\n    uploadImage(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/cloudinary-upload-prisma2/client/src/Uploader.js", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($input: ImageInput!)"}, {"type": "query", "name": "openAuthoringBranches", "content": "{\n    repository(owner: $owner, name: $name) {\n      ...RepositoryParts\n      refs(refPrefix: $refPrefix, last: 100) {\n        nodes {\n          ...BranchParts\n        }\n      }\n    }\n  }\n  ${fragments.repository}\n  ${fragments.branch}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/queries.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($owner: String!, $name: String!, $refPrefix: String!)"}, {"type": "mutation", "name": "deleteRef", "content": "{\n    ${deleteRefMutationPart}\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($deleteRefInput: DeleteRefInput!)"}, {"type": "mutation", "name": "closePullRequestAndDeleteBranch", "content": "{\n    ${closePullRequestMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($closePullRequestInput: ClosePullRequestInput!)"}, {"type": "mutation", "name": "createPullRequest", "content": "{\n    ${createPullRequestMutationPart}\n  }\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($createPullRequestInput: CreatePullRequestInput!)"}, {"type": "mutation", "name": "createBranchAndPullRequest", "content": "{\n    createRef(input: $createRefInput) {\n      branch: ref {\n        ...BranchParts\n      }\n    }\n    ${createPullRequestMutationPart}\n  }\n  ${fragments.branch}\n  ${fragments.pullRequest}", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "_ORGS/NETLIFY/netlify-cms/packages/netlify-cms-backend-github/src/mutations.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n    $createRefInput: CreateRefInput!\n    $createPullRequestInput: CreatePullRequestInput!\n  )"}, {"type": "mutation", "name": "CreateUser", "content": "{\n      createUser(data: $data) {\n        name\n        email\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/DANIELRES/whoswho/src/api/graphql/queries/User.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($data: UserInput!)"}, {"type": "query", "name": "query", "content": "{\n      people_one(id: $id) {\n        name\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/ObservableQuery.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "CachedLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Three", "content": "{\n          three\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Four", "content": "{\n          four\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "aQuery", "content": "{\n      entry {\n        value\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/subscribeToMore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "stuff", "content": "{ key1: [\"value\", \"value2\"], key2: { key3: 4 } }\n      ) {\n        allStuff(test: $test) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n        $test: Input ="}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: $first) {\n          people {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($first: Int = 1)"}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: 1) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "items", "content": "{\n        items {\n          ...ItemFragment\n          __typename\n        }\n      }\n\n      fragment ItemFragment on Item {\n        id\n        __typename\n        ... on ColorItem {\n          color\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "books", "content": "{\n        books(skip: 0, limit: 2, order: $order)\n          @connection(key: \"abc\", filter: [\"order\"]) {\n          name\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($order: string)"}, {"type": "query", "name": "todoList", "content": "{\n      __typename\n      todoList(id: 5) {\n        __typename\n        id\n        todos {\n          id\n          __typename\n          text\n          completed\n        }\n        filteredTodos: todos(completed: true) {\n          id\n          __typename\n          text\n          completed\n        }\n      }\n      noIdList: todoList(id: 6) {\n        __typename\n        id\n        todos {\n          __typename\n          text\n          completed\n        }\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "submitComment", "content": "{\n      submitComment(\n        repoFullName: $repoFullName\n        commentContent: $commentContent\n      ) {\n        postedBy {\n          login\n          html_url\n        }\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($repoFullName: String!, $commentContent: String!)"}, {"type": "query", "name": "NewComments", "content": "{\n      comments(start: $start, limit: $limit) {\n        text\n        __typename\n      }\n      __typename\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($start: Int!, $limit: Int!)"}, {"type": "query", "name": "getMini", "content": "{\n        mini(id: $id) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "Reset", "content": "{\n        reset {\n          echo\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "subscription", "name": "UserInfo", "content": "{\n            user(name: $name) {\n              name\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($name: String)"}, {"type": "query", "name": "B", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-client/src/scheduler/__tests__/scheduler.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "someBigQuery", "content": "{\n        id\n        stringField(arg: $stringArg)\n        numberField(intArg: $intArg, floatArg: $floatArg)\n        nullField\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "(\n        $stringArg: String = \"This is a default string!\"\n        $intArg: Int\n        $floatArg: Float\n      )"}, {"type": "mutation", "name": "some_mutation", "content": "{\n        some_mutation(\n          input: {\n            id: \"5\"\n            arr: [1, { a: \"b\" }]\n            obj: { a: \"b\" }\n            num: 5.5\n            nil: $nil\n            bo: true\n          }\n        ) {\n          id\n        }\n        some_mutation_with_variables(input: $in) {\n          id\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($nil: ID, $in: Object)"}, {"type": "query", "name": "LazyLoad", "content": "{\n          id\n          expensive @defer\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Failure", "content": "{\n            item {\n              stringField\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Directive", "content": "{\n        mutate {\n          field {\n            subField {\n              hello @live\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "subscription", "name": "LiveDirective", "content": "{\n        sub {\n          field {\n            subField {\n              hello @live\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($first: Int, $second: String)"}, {"type": "query", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        ...inDirection\n      }\n\n      fragment inDirection on Thing {\n        field @storage\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        ...inDirection\n      }\n\n      fragment inDirection on Thing {\n        field @storage\n        bar\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        ...inDirection\n      }\n\n      fragment inDirection on Thing {\n        bar\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n          }\n        }\n      }\n\n      fragment friendFields on User {\n        firstName\n        lastName\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/JAMSTACK-TEMPLATES/_EVENMOAR/USERS/GREGBER/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Question", "content": "{\n    question(id: $id) {\n      id\n      code\n      title\n      options {\n        text\n        correct\n      }\n      explanation\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/jsquiz/client/graphql/query.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "query", "content": "{\n      people_one(id: $id) {\n        name\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/ObservableQuery.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "updateName", "content": "{\n    updateName(id: $id, firstName: $firstName) {\n      __typename\n      id\n      firstName\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/fetchPolicies.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!, $firstName: String!)"}, {"type": "query", "name": "CachedLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "WatchedLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "WatchedLuke", "content": "{\n        people_one(id: 1) {\n          name\n          friends {\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/links.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "complexQuery", "content": "{\n        luke: people_one(id: 1) {\n          name\n        }\n        vader: people_one(id: 4) {\n          name\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "makeListPrivate", "content": "{\n          makeListPrivate(input: { id: \"5\" }) {\n            id\n            isPrivate\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "queryA", "content": "{\n        person(id: \"abc\") {\n          __typename\n          id\n          firstName\n          lastName\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "changeAuthorName", "content": "{\n          changeAuthorName(newName: \"Jack Smith\", id: $id) {\n            firstName\n            lastName\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Two", "content": "{\n          two\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/core/__tests__/QueryManager/index.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            name\n            __typename\n          }\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "items", "content": "{\n        items {\n          ...ItemFragment\n          __typename\n        }\n      }\n\n      fragment ItemFragment on Item {\n        id\n        __typename\n        ... on ColorItem {\n          color\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "myQueryName", "content": "{\n        fortuneCookie\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "people", "content": "{\n        allPeople(first: 1) {\n          people {\n            id\n            name\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/client.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "todoList", "content": "{\n      __typename\n      todoList(id: 5) {\n        __typename\n        id\n        todos {\n          id\n          __typename\n          text\n          completed\n        }\n        filteredTodos: todos(completed: true) {\n          id\n          __typename\n          text\n          completed\n        }\n      }\n      noIdList: todoList(id: 6) {\n        __typename\n        id\n        todos {\n          __typename\n          text\n          completed\n        }\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo(text: $text) {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($text: String)"}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName) {\n        comments {\n          postedBy {\n            login\n            html_url\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/optimistic.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($repoName: String!)"}, {"type": "query", "name": "Comment", "content": "{\n      entry(repoFullName: $repoName, start: $start, limit: $limit)\n        @connection(key: \"repoName\") {\n        comments {\n          text\n        }\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/fetchMore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($repoName: String!, $start: Int!, $limit: Int!)"}, {"type": "mutation", "name": "setCompleted", "content": "{\n        setCompleted(todoId: \"3\") {\n          id\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "upload", "content": "{\n        mini: submitMiniCoverS3DirectUpload(signature: $signature) {\n          id\n          cover(maxWidth: 600, maxHeight: 400)\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($signature: String!)"}, {"type": "mutation", "name": "createTodo", "content": "{\n        createTodo {\n          id\n          name\n          # missing field: description\n          __typename\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Echo", "content": "{\n        echo(message: $message)\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($message: String)"}, {"type": "mutation", "name": "createTodo", "content": "{\n        # skipping arguments in the test since they don't matter\n        createTodo {\n          id\n          text\n          completed\n          __typename\n        }\n        __typename\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/mutationResults.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "subscription", "name": "UserInfo", "content": "{\n            user(name: $name) {\n              name\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($name: String)"}, {"type": "subscription", "name": "UserInfo", "content": "{\n          user(name: $name) {\n            name\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-client/src/__tests__/graphqlSubscriptions.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($name: String = \"Changping Chen\")"}, {"type": "mutation", "name": "mut", "content": "{\n            mut(inline: 5, variable: $in) {\n              id\n            }\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-cache-inmemory/src/__tests__/writeToStore.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($in: Int!)"}, {"type": "subscription", "name": "LiveDirective", "content": "{\n        sub {\n          field {\n            subField {\n              hello @live\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/directives.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($first: Int, $second: String)"}, {"type": "query", "name": "people", "content": "{\n          allPeople(first: $first) {\n            people {\n              name\n            }\n          }\n        }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/getFromAST.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($first: Int = 1, $second: String!)"}, {"type": "query", "name": "Named", "content": "{\n            a\n            b\n            c\n          }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/fragments.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        property\n        ...ValidSpread\n      }\n\n      fragment ValidSpread on Thing {\n        oof\n        rab\n        zab\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        networkField\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        networkField\n        field @client {\n          ...ClientFragment\n        }\n      }\n\n      fragment ClientFragment on Thing {\n        otherField\n        bar\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        networkField\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        networkField {\n          ...ClientFragment\n        }\n      }\n\n      fragment ClientFragment on Thing {\n        otherField\n        bar\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        field @storage(if: true)\n        other: field @storage\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        field\n        other: field\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        ...inDirection\n      }\n\n      fragment inDirection on Thing {\n        bar\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "withFragments", "content": "{\n        user(id: 4) {\n          friends(first: 10) {\n            ...friendFields\n          }\n        }\n      }\n\n      fragment friendFields on User {\n        firstName\n        lastName\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        maybe @skip(if: false)\n        field @storage(if: true)\n        other @storage\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        user {\n          firstName @client\n        }\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "Simple", "content": "{\n        ...fragmentSpread\n        ...anotherFragmentSpread\n      }\n\n      fragment fragmentSpread on Thing {\n        field @client\n      }\n\n      fragment anotherFragmentSpread on AnotherThing {\n        user @client\n      }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/apollo-client/packages/apollo-utilities/src/__tests__/transform.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "mutation", "name": "Logout", "content": "{\n    logout {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/SidePane/Menu/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "query", "name": "UserProfile", "content": "{\n    user(id: $id) {\n      id\n      email\n      firstName\n      lastName\n      gender\n      profile {\n        userName\n        img\n        title\n        skills {\n          lang\n          value\n        }\n        level\n        description\n        complete\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/Profile/query.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "User", "content": "{\n    user(id: $id) {\n      id\n      firstName \n      lastName \n      profile {\n        title\n        img\n      }\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/DashboardView/query.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Messages", "content": "{\n    messages(id: $id) {\n      id \n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/DashboardView/query.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "CreateMessage", "content": "{\n    createMessage(id: $id, message: $message) {\n      id\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/Dashboard/Messages/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($id: String, $message: String)"}, {"type": "mutation", "name": "Signup", "content": "{\n    signup(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "GIT-USERS/lydia/CodeBuddy/client/src/components/LandingPage/Form/mutation.ts", "repo": "bgoonz_UsefulResourceRepo2.0"}, "arguments": "($firstName: String! $lastName: String! $email: String! $password: String!)"}, {"type": "query", "name": "Viewer", "content": "{\n      viewer {\n        id\n        name\n        status\n      }\n    }", "metadata": {"commit_hash": "2cb4b45dd14a230aa0e800042e893f8dfb23beda", "file": "MY_REPOS/learning-nextjs/next.js-master/examples/with-typescript-graphql/test/index.test.tsx", "repo": "bgoonz_UsefulResourceRepo2.0"}}, {"type": "subscription", "name": "onUserAdded", "content": "{\n    user {\n      mutation\n      node {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "27327705aff1ce63cab00c125c8b4f760df39789", "file": "client/graphql/subscriptions/user.js", "repo": "greatWall627_chatting-pro"}}, {"type": "subscription", "name": "onTextAdded", "content": "{\n    text {\n      mutation\n      node {\n        id\n        text\n        createdAt\n        author {\n          id\n          username\n        }\n        conversation {\n          id\n          name\n          participants {\n            id\n            username\n          }\n          texts {\n            id\n            text\n            createdAt\n            author {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "27327705aff1ce63cab00c125c8b4f760df39789", "file": "client/graphql/subscriptions/text.js", "repo": "greatWall627_chatting-pro"}}, {"type": "mutation", "name": "createInvite", "content": "{\n          createInvite(invite: $invite) {\n            hash\n          }\n        }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/Home.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($invite: InviteInput!)"}, {"type": "query", "name": "getCampaignMessages", "content": "{\n      campaign(id: $campaignId) {\n        id\n        contacts {\n          id\n          firstName\n          lastName\n          cell\n          messageStatus\n          messages {\n            text\n            isFromContact\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminReplySender.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($campaignId: String!)"}, {"type": "mutation", "name": "editCampaignContactMessageStatus", "content": "{\n        editCampaignContactMessageStatus(messageStatus:$messageStatus, campaignContactId: $campaignContactId) {\n          id\n          messageStatus\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AssignmentTexterContact.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($messageStatus: String!, $campaignContactId: String!)"}, {"type": "mutation", "name": "deleteQuestionResponses", "content": "{\n        deleteQuestionResponses(interactionStepIds: $interactionStepIds, campaignContactId: $campaignContactId) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AssignmentTexterContact.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($interactionStepIds:[String], $campaignContactId: String!)"}, {"type": "query", "name": "getCurrentUserForLoader", "content": "{\n      currentUser {\n        id\n        organizations {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/DashboardLoader.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "mutation", "name": "createBlankCampaign", "content": "{\n        createCampaign(campaign: $campaign) {\n          id\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($campaign: CampaignInput!)"}, {"type": "mutation", "name": "archiveCampaign", "content": "{\n      archiveCampaign(id: $campaignId) {\n        id\n        isArchived\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignStats.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($campaignId: String!)"}, {"type": "mutation", "name": "exportCampaign", "content": "{\n      exportCampaign(id: $campaignId) {\n        id\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignStats.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($campaignId: String!)"}, {"type": "mutation", "name": "copyCampaign", "content": "{\n      copyCampaign(id: $campaignId){\n       id\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignStats.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($campaignId: String!)"}, {"type": "mutation", "name": "editUser", "content": "{\n          editUser(organizationId: $organizationId, userId: $userId, userData: $userData) {\n            id,\n            firstName,\n            lastName,\n            cell,\n            email\n          }\n        }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/UserEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($organizationId: String!, $userId: Int!, $userData: UserInput)"}, {"type": "query", "name": "getCampaignJobs", "content": "{\n      campaign(id: $campaignId) {\n        id\n        pendingJobs {\n          id\n          jobType\n          assigned\n          status\n          resultMessage\n        }\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($campaignId: String!)"}, {"type": "query", "name": "getCampaign", "content": "{\n      campaign(id: $campaignId) {\n        ${campaignInfoFragment}\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($campaignId: String!)"}, {"type": "mutation", "name": "deleteJob", "content": "{\n        deleteJob(campaignId: $campaignId, id: $id) {\n          id\n        }\n      },", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminCampaignEdit.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($campaignId: String!, $id: String!)"}, {"type": "query", "name": "getPeople", "content": "{\n      organization(id: $organizationId) {\n        ${organizationFragment}\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminPersonList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($organizationId: String!)"}, {"type": "query", "name": "getCurrentUserAndRoles", "content": "{\n      currentUser {\n        id\n        roles(organizationId: $organizationId)\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/AdminPersonList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($organizationId: String!)"}, {"type": "query", "name": "getContacts", "content": "{\n      assignment(id: $assignmentId) {\n        id\n        userCannedResponses {\n          id\n          title\n          text\n          isUserCreated\n        }\n        campaignCannedResponses {\n          id\n          title\n          text\n          isUserCreated\n        }\n        texter {\n          id\n          firstName\n          lastName\n          assignedCell\n        }\n        campaign {\n          id\n          isArchived\n          useDynamicAssignment\n          organization {\n            id\n            textingHoursEnforced\n            textingHoursStart\n            textingHoursEnd\n            threeClickEnabled\n          }\n          customFields\n          interactionSteps {\n            id\n            question {\n              text\n              answerOptions {\n                value\n                nextInteractionStep {\n                  id\n                  script\n                }\n              }\n            }\n          }\n        }\n        contacts(contactsFilter: $contactsFilter) {\n          id\n          customFields\n        }\n        allContacts: contacts {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/TexterTodo.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($assignmentId: String!, $contactsFilter: ContactsFilter!)"}, {"type": "mutation", "name": "findNewCampaignContact", "content": "{\n        findNewCampaignContact(assignmentId: $assignmentId, numberContacts: $numberContacts) {\n          found\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/TexterTodo.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($assignmentId: String!, $numberContacts: Int!)"}, {"type": "query", "name": "getCurrentUser", "content": "{\n      currentUser {\n        id\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/containers/CreateOrganization.jsx", "repo": "WorkingFamilies_Spoke_legacy"}}, {"type": "query", "name": "Q", "content": "{\n        conversations(\n          cursor: $cursor\n          organizationId: $organizationId\n          campaignsFilter: $campaignsFilter\n          contactsFilter: $contactsFilter\n          assignmentsFilter: $assignmentsFilter\n          utc: $utc\n        ) {\n          pageInfo {\n            limit\n            offset\n            total\n          }\n          conversations {\n            texter {\n              id\n              displayName\n            }\n            contact {\n              id\n              firstName\n              lastName\n              messageStatus\n              messages {\n                id\n                text\n                isFromContact\n              }\n            }\n            campaign {\n              id\n              title\n            }\n          }\n        }\n      }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/components/IncomingMessageList.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "(\n        $organizationId: String!\n        $cursor: OffsetLimitCursor!\n        $contactsFilter: ContactsFilter\n        $campaignsFilter: CampaignsFilter\n        $assignmentsFilter: AssignmentsFilter\n        $utc: String\n      )"}, {"type": "query", "name": "getCurrentUserRoles", "content": "{\n      currentUser {\n        id\n        roles(organizationId: $organizationId)\n      }\n    }", "metadata": {"commit_hash": "3ed6ab8f786cf6c50ce7bf3536291c335ca71bb6", "file": "src/components/AdminDashboard.jsx", "repo": "WorkingFamilies_Spoke_legacy"}, "arguments": "($organizationId: String!)"}, {"type": "query", "name": "CurrentUserQuery", "content": "{\n        me {\n            id\n            email\n            name\n            role\n            hasVerifiedEmail\n            hasCompletedOnboarding\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/queries/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "mutation", "name": "DeleteAccountMutation", "content": "{\n        deleteAccount(id: $id) {\n            id\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "LoginMutation", "content": "{\n        login(email: $email, password: $password) {\n            email\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "CompleteOnboardingMutation", "content": "{\n        completeOnboarding\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/graphql/mutations/index.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}}, {"type": "query", "name": "users", "content": "{ name: desc }\n        $first: Int = 10000\n        $skip: Int\n    ) {\n        users(first: $first, skip: $skip, orderBy: $orderBy) {\n            nodes {\n                id,\n                name,\n                email,\n                status,\n                role\n            }\n            totalCount\n        }\n    }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/User/UserQuery.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}, "arguments": "(\n        $orderBy: QueryUsersOrderByInput ="}, {"type": "mutation", "name": "UPDATE_PRODUCT_MUTATION", "content": "{\n    updateProduct(\n      id: $id\n      name: $name\n      description: $description\n      discount: $discount\n      salePrice: $salePrice\n      sku: $sku\n      price: $price\n      unit: $unit\n      categoryId: $categoryId\n      images: $images\n      alreadyUploadedImages: $alreadyUploadedImages\n    ) {\n      id\n      name\n      description\n      price\n      discount\n      salePrice\n      sku\n      unit\n      Category {\n        name\n        parent\n      }\n      ProductImages {\n        id\n        image\n      }\n    }\n  }", "metadata": {"commit_hash": "fc9bfa44ac48c827c484d9e198e4c3fc5f6a227d", "file": "web-app/components/Product/ProductMutation.ts", "repo": "CoCo-27_-nextjs-graphql-adminpanel"}, "arguments": "(\n    $id: ID!\n    $name: String!\n    $description: String!\n    $price: Int!\n    $discount: Int!\n    $salePrice: Int!\n    $sku: String!\n    $unit: String!\n    $categoryId: ID!\n    $images: [ProductImageCreateWithoutProductInput!]!\n    $alreadyUploadedImages: [ProductImageCreateWithoutProductInput!]!\n  )"}, {"type": "mutation", "name": "logout", "content": "{\n      logout {\n        result\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/UserHooks.ts", "repo": "marian2js_finsharing"}}, {"type": "mutation", "name": "resetPassword", "content": "{\n      resetPassword(username: $username, password: $password, code: $code) {\n        result\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/UserHooks.ts", "repo": "marian2js_finsharing"}, "arguments": "($username: String!, $password: String!, $code: String!)"}, {"type": "mutation", "name": "completeSocialAuthentication", "content": "{\n      completeSocialAuthentication(provider: $provider, code: $code, username: $username) {\n        user {\n          id\n          username\n        }\n        tokens {\n          accessToken\n          refreshToken\n        }\n      }\n    }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/UserHooks.ts", "repo": "marian2js_finsharing"}, "arguments": "($provider: String!, $code: String!, $username: String)"}, {"type": "query", "name": "Posts", "content": "{\n    posts (\n      first: 10,\n      orderBy: [{ createdAt: DESC }],\n      filter: { market: { value: $marketId }, votes: { value: $minVotes, comparator: GREATER_THAN_OR_EQUAL } }\n    ) {\n      ...RssPosts\n    }\n  }\n  ${RSS_POSTS_FRAGMENT}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/src/services/RssService.ts", "repo": "marian2js_finsharing"}, "arguments": "($marketId: ID!, $minVotes: Int!)"}, {"type": "mutation", "name": "CreateUser", "content": "{\n    createUser(input: { email: $email, username: $username, password: $password }) {\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/pages/register.tsx", "repo": "marian2js_finsharing"}, "arguments": "($email: String!, $username: String!, $password: String!)"}, {"type": "query", "name": "Post", "content": "{\n    post (slug: $slug) {\n      id\n      title\n      slug\n      body\n      lgImageUrl\n      ...PostVotes\n      ...PostActions\n      ...PostHeader\n      market {\n        ...MarketHeader\n      }\n    }\n  }\n  ${PostVotes.fragments.post}\n  ${PostActions.fragments.post}\n  ${PostHeader.fragments.post}\n  ${MarketHeader.fragments.market}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/pages/posts/[slug].tsx", "repo": "marian2js_finsharing"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "Post", "content": "{\n    post (slug: $slug) {\n      id\n      title\n      slug\n      body\n      market {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/pages/posts/[slug]/edit.tsx", "repo": "marian2js_finsharing"}, "arguments": "($slug: String!)"}, {"type": "query", "name": "Posts", "content": "{\n    posts (first: ${POSTS_PER_PAGE}, after: $after, filter: { market: { value: $marketId } }, orderBy: [{ createdAt: DESC }]) {\n      ...PostList\n    }\n  }\n  ${PostList.fragments.postList}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/lists/MarketPostList.tsx", "repo": "marian2js_finsharing"}, "arguments": "($marketId: ID!, $after: String)"}, {"type": "query", "name": "Posts", "content": "{\n    posts (first: ${POSTS_PER_PAGE}, filter: $filter, after: $after, orderBy: [{ createdAt: DESC }]) {\n      ...PostList\n    }\n  }\n  ${PostList.fragments.postList}", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/posts/lists/FollowingPostList.tsx", "repo": "marian2js_finsharing"}, "arguments": "($after: String, $filter: PostFilterInput)"}, {"type": "query", "name": "Post", "content": "{\n                post (slug: $slug) {\n                  id\n                  slug\n                  numberOfComments\n                }\n              }", "metadata": {"commit_hash": "1bdbc46078a9da87f8a12c39d5bd688385e29562", "file": "frontend/components/comments/CommentForm.tsx", "repo": "marian2js_finsharing"}, "arguments": "($slug: String!)"}, {"type": "mutation", "name": "AddSongMutation", "content": "{\n\taddSong(title: $title, events: $events) {\n\t\tid\n\t\ttitle\n\t\tevents{\n\t\t\tactiveNotes\n\t\t\tduration\n\t\t}\n\t}\n}", "metadata": {"commit_hash": "df111640a137171512c3e8b4c934814a270395d4", "file": "codingChallenges/piano/src/components/saveSong.js", "repo": "hacknlove_onGet"}, "arguments": "($title: String!, $events: [EventInput]!)"}, {"type": "query", "name": "synthesizeText", "content": "{\n    synthesizeText(text: $text, voice: $voice) {\n      url\n    }\n  }", "metadata": {"commit_hash": "3f352fc4b08df4ae6216907473182c93d3a6bb16", "file": "examples/with-next/apollo/queries.ts", "repo": "spokestack_node-spokestack"}, "arguments": "($text: String!, $voice: String!)"}, {"type": "query", "name": "nluInfer", "content": "{\n    nluInfer(input: $input, model: $model, source: $source) {\n      confidence\n      intent\n      slots {\n        confidence\n        key\n        text\n        value\n      }\n    }\n  }", "metadata": {"commit_hash": "3f352fc4b08df4ae6216907473182c93d3a6bb16", "file": "examples/with-next/apollo/queries.ts", "repo": "spokestack_node-spokestack"}, "arguments": "($input: String!, $model: String!, $source: NluModelSource = ACCOUNT)"}, {"type": "query", "name": "Countries", "content": "{\n    countries {\n      name\n      code\n    }\n  }", "metadata": {"commit_hash": "67ebc89d5dd9103cd70c7c085ddd55c908c61398", "file": "templates/default/src/graphql/queries/countries.js", "repo": "amclin_react-project-boilerplate"}}, {"type": "subscription", "name": "userUpdated", "content": "{\n      userUpdated {\n        id\n        engageScore\n        activeMilestone {\n          id\n          title\n          requiredScore\n          userCount\n          description\n        }\n      }\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "login", "content": "{\n      login(input: $input) {\n        ...sessionFields\n      }\n    }\n    ${SESSION_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($input: LoginCredentialsInput!)"}, {"type": "mutation", "name": "verifyAccount", "content": "{\n      verifyAccount(username: $username, code: $code) {\n        ...sessionFields\n      }\n    }\n    ${SESSION_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($username: String!, $code: String!)"}, {"type": "mutation", "name": "upateMyCompany", "content": "{\n      upateMyCompany(input: $input) {\n        ...companyFields\n      }\n    }\n    ${COMPANY_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($input: MyCompanyUpdateInput!)"}, {"type": "mutation", "name": "logout", "content": "{\n      logout\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "query", "name": "session", "content": "{\n      session {\n        ...sessionFields\n      }\n    }\n    ${SESSION_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}}, {"type": "mutation", "name": "userSetDeviceToken", "content": "{\n      userSetDeviceToken(input: $input)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($input: UserDeviceTokenInput!)"}, {"type": "mutation", "name": "changeUserIdeaIntro", "content": "{\n      userIdeaIntroUpdate(input: $input) {\n        profileIdeaIntro\n      }\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/auth.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($input: UserProfileIdeaIntro!)"}, {"type": "query", "name": "issueFindAll", "content": "{\n      issueFindAll(filter: $filter) {\n        ...issueFields\n      }\n    }\n    ${ISSUE_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($filter: Filter)"}, {"type": "query", "name": "issueFindById", "content": "{\n      issueFindById(id: $id) {\n        ...issueFullFields\n      }\n    }\n    ${ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "issueUpdate", "content": "{\n      issueUpdate(id: $id, input: $input) {\n        ...issueFullFields\n      }\n    }\n    ${ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!, $input: IssueUpdateInput!)"}, {"type": "mutation", "name": "issueChangeStatus", "content": "{\n      issueChangeStatus(input: $input) {\n        ...issueFullFields\n      }\n    }\n    ${ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($input: IssueChangeStatusInput!)"}, {"type": "mutation", "name": "issueDelete", "content": "{\n      issueDelete(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/issue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "projectFindById", "content": "{\n      projectFindById(id: $id) {\n        ...projectFullFields\n      }\n    }\n    ${PROJECT_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/project.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "projectEvaluateIdea", "content": "{\n      projectEvaluateIdea(input: $input) {\n        ...projectEvaluationRecordFields\n      }\n    }\n    ${PROJECT_EVALUATION_RECORD}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/project.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($input: ProjectEvaluationRecordInput!)"}, {"type": "query", "name": "userFindById", "content": "{\n      userFindById(id: $id) {\n        ...userFullFields\n      }\n    }\n    ${USER_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "userResetPassword", "content": "{\n      userResetPassword(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/user.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "ideaContentFindById", "content": "{\n      ideaContentFindById(id: $id) {\n        ...ideaContentFullFields\n      }\n    }\n    ${IDEA_CONTENT_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaContent.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "ideaContentCreate", "content": "{\n      ideaContentCreate(input: $input) {\n        ...ideaContentFullFields\n      }\n    }\n    ${IDEA_CONTENT_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaContent.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($input: IdeaContentCreateInput!)"}, {"type": "query", "name": "ideaIssueReplyFindAll", "content": "{\n      ideaIssueReplyFindAll(filter: $filter) {\n        ...replyFields\n      }\n    }\n    ${REPLY_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/reply.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($filter: Filter)"}, {"type": "query", "name": "linkFindAll", "content": "{\n      linkFindAll(filter: $filter) {\n        ...linkField\n      }\n    }\n    ${LINK_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/project_sharelink.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($filter: Filter)"}, {"type": "query", "name": "milestoneFindAll", "content": "{\n      milestoneFindAll(filter: $filter) {\n        ...milestoneFields\n      }\n    }\n    ${MILESTONE_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/milestone.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($filter: Filter)"}, {"type": "query", "name": "ideaFindAll", "content": "{\n      ideaFindAll(filter: $filter) {\n        ...ideaFields\n      }\n    }\n    ${IDEA_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/idea.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($filter: Filter)"}, {"type": "query", "name": "ideaFindById", "content": "{\n      ideaFindById(id: $id) {\n        ...ideaFullFields\n      }\n    }\n    ${IDEA_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/idea.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "ideaDelete", "content": "{\n      ideaDelete(id: $id)\n    }", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/idea.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "increaseUserExperience", "content": "{\n      increaseUserExperience(input: $input) {\n        ...experienceFields\n      }\n    }\n    ${EXPERIENCE_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/experience.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($input: ExperienceUpdateInput!)"}, {"type": "query", "name": "ideaIssueFindAll", "content": "{\n      ideaIssueFindAll(filter: $filter) {\n        ...ideaIssueFields\n      }\n    }\n    ${IDEA_ISSUE_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($filter: Filter)"}, {"type": "query", "name": "ideaIssueFindById", "content": "{\n      ideaIssueFindById(id: $id) {\n        ...ideaIssueFullFields\n      }\n    }\n    ${IDEA_ISSUE_FULL_FRAGMENT}", "metadata": {"commit_hash": "6f9149b2b1779fde514c886fb11d10dbd2a3175d", "file": "src/graphql/ideaissue.js", "repo": "SWS-5007_Devcore_Frontend_Vue"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getUsers", "content": "{\n        allUsers {\n            _id,\n            email,\n            profile {\n                firstName,\n                lastName,\n                role\n            }\n        }\n    }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/queries.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "query", "name": "getActions", "content": "{\n        actions {\n            _id\n            action,\n            name,\n            equation\n        }\n    }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/queries.js", "repo": "deliteser112_meteor-graphql-react-device"}}, {"type": "query", "name": "getRollsByMAC", "content": "{\n        rollsByMAC(device: $device) {\n            _id,\n            device,\n            dice,\n            results {\n                coverImg,\n                name,\n                result,\n                calculation,\n                equation\n            },\n            createdAt\n        }\n    }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/queries.js", "repo": "deliteser112_meteor-graphql-react-device"}, "arguments": "($device: String!)"}, {"type": "mutation", "name": "UpdateDevice", "content": "{\n    updateDevice(deviceId: $deviceId, mac: $mac, name: $name, ownerId: $ownerId, followerIds: $followerIds) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}, "arguments": "($deviceId: ID!, $mac: String!, $name: String!, $ownerId: String!, $followerIds: [String])"}, {"type": "mutation", "name": "UpdateDice", "content": "{\n    updateDice(diceId: $diceId, did: $did, name: $name, userId: $userId, actionIds: $actionIds, coverImg: $coverImg) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}, "arguments": "($diceId: ID!, $did: String!, $name: String!, $userId: String!, $actionIds: [String]!, $coverImg: String)"}, {"type": "mutation", "name": "AddAction", "content": "{\n    addAction(name: $name, action: $action, equation: $equation) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}, "arguments": "($name: String!, $action: String!, $equation: String!)"}, {"type": "mutation", "name": "UpdateAction", "content": "{\n    updateAction(actionId: $actionId, name: $name, action: $action, equation: $equation) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}, "arguments": "($actionId: ID!, $name: String!, $action: String!, $equation: String!)"}, {"type": "mutation", "name": "AddRoll", "content": "{\n    addRoll(device: $device, dice: $dice) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "4a65f47ce4a7cb16bab68a15641a83feac5d1b62", "file": "imports/ui/pages/mutations.js", "repo": "deliteser112_meteor-graphql-react-device"}, "arguments": "($device: String!, $dice: String!)"}, {"type": "query", "name": "AllTodos", "content": "{\n    todos: allTodos {\n      id\n      title\n      completed\n    }\n  }", "metadata": {"commit_hash": "995581d75a63cff91e36e944c688f87e62e5eef9", "file": "src/apollo/todos.js", "repo": "michey85_apollo-qql-todos"}}, {"type": "query", "name": "cliLoginById", "content": "{\n          cliLoginById(id: $id) {\n            encryptedAccessToken\n            encryptedIdToken\n            encryptedRefreshToken\n            encryptedKey\n            encryptedIv\n          }\n        }", "metadata": {"commit_hash": "36da03c2d0c5ebd623bdb271c9114b6dbed32459", "file": "lib/plugins/login/lib/getCliLoginById.test.js", "repo": "alibaba-archive_serverless"}, "arguments": "($id: String!)"}, {"type": "query", "name": "UserLists", "content": "{\n    userLists {\n      id\n      lists {\n        id\n        name\n        sections {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/queries/UserLists.ts", "repo": "DoBestMan_PrepDD"}}, {"type": "query", "name": "UserForPasswordReset", "content": "{\n    userForPasswordReset(token: $token) {\n      email\n      resetPasswordPeriodValid\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/queries/UserForPasswordReset.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "($token: String!)"}, {"type": "query", "name": "privateTaskMessages", "content": "{\n    privateTaskMessages(taskId: $taskId) {\n      message\n      user {\n        fullName\n      }\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/queries/PrivateTaskMessages.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "($taskId: ID!)"}, {"type": "query", "name": "CompanyUsers", "content": "{\n    companyUsers(\n      CompanyId: $companyId\n      TeamId: $teamId\n      limit: $limit\n      offset: $offset\n    ) {\n      company {\n        id\n        name\n        teams {\n          id\n          name\n        }\n      }\n      users {\n        id\n        fullName\n        profileUrl\n        roles {\n          id\n          name\n          companyId\n        }\n        teams {\n          id\n          name\n          companyId\n        }\n        companies {\n          id\n          name\n          logoUrl\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/queries/CompanyUsers.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "($companyId: ID!, $teamId: ID, $limit: Int, $offset: Int)"}, {"type": "mutation", "name": "AddListOwner", "content": "{\n    addListOwner(\n      listId: $listId\n      companyId: $companyId\n      userEmails: $userEmails\n      teamIds: $teamIds\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddListOwner.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "(\n    $listId: ID!\n    $companyId: ID!\n    $userEmails: [String!]\n    $teamIds: [ID!]\n  )"}, {"type": "mutation", "name": "CreateAssociatedCompany", "content": "{\n    createAssociatedCompany(\n      companyId: $companyId\n      ownerEmail: $ownerEmail\n      newCompanyName: $newCompanyName\n      isParent: $isParent\n      isBroker: $isBroker\n    ) {\n      company {\n        id\n        name\n        logoUrl\n      }\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/CreateAssociatedCompany.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "(\n    $companyId: ID!\n    $ownerEmail: String!\n    $newCompanyName: String!\n    $isParent: Boolean\n    $isBroker: Boolean\n  )"}, {"type": "mutation", "name": "AddTaskOwners", "content": "{\n    addTaskOwners(\n      taskID: $taskID\n      userOwners: $userOwners\n      userReviewers: $userReviewers\n      teamOwners: $teamOwners\n      teamReviewers: $teamReviewers\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n      task {\n        id\n        name\n        priority\n        status\n        dueDate\n        updatedAt\n        userOwners {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamOwners {\n          id\n          name\n        }\n        userReviewers {\n          id\n          email\n          fullName\n          profileUrl\n        }\n        teamReviewers {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/AddTaskOwners.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "(\n    $taskID: ID!\n    $userOwners: [String!]\n    $userReviewers: [String!]\n    $teamOwners: [ID!]\n    $teamReviewers: [ID!]\n  )"}, {"type": "mutation", "name": "RemoveCompanyMember", "content": "{\n    removeCompanyMember(\n      companyId: $companyId\n      userId: $userId\n      userIds: $userIds\n    ) {\n      errors {\n        path\n        message\n      }\n      success\n      user {\n        id\n        fullName\n        profileUrl\n        roles {\n          id\n          name\n          companyId\n        }\n        teams {\n          id\n          name\n          companyId\n        }\n        companies {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/RemoveCompanyMember.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "($companyId: ID!, $userId: ID, $userIds: [ID!])"}, {"type": "mutation", "name": "UpdateUserPassword", "content": "{\n    updateUserPassword(password: $password, oldPassword: $oldPassword) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/UpdateUserPassword.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "($password: String!, $oldPassword: String!)"}, {"type": "mutation", "name": "SendPasswordResetInstructions", "content": "{\n    sendResetPasswordInstructions(email: $email) {\n      errors {\n        path\n        message\n      }\n      success\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/SendPasswordResetInstructions.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "($email: String!)"}, {"type": "mutation", "name": "deleteTasks", "content": "{\n    deleteTasks(taskIds: $taskIds) {\n      success\n      taskIds\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/graphql/mutations/DeleteTasks.ts", "repo": "DoBestMan_PrepDD"}, "arguments": "($taskIds: [ID!]!)"}, {"type": "query", "name": "SearchCompanies", "content": "{\n    searchCompanies(text: $text, companyId: $companyId) {\n      users {\n        id\n        fullName\n        profileUrl\n        companies {\n          id\n          name\n          logoUrl\n        }\n      }\n      companies {\n        id\n        name\n        logoUrl\n      }\n    }\n  }", "metadata": {"commit_hash": "5c38a1c2dcde7bf26dde80f16d73e0d844766551", "file": "app/javascript/src/modules/company/components/FormPanel/components/CompanyForm.tsx", "repo": "DoBestMan_PrepDD"}, "arguments": "($text: String!, $companyId: ID)"}, {"type": "mutation", "name": "fulfillmentCreateV2", "content": "{\n    fulfillmentCreateV2(fulfillment: $fulfillment, message: $message) {\n      fulfillment {\n        id\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "98287cd96d6225661e727dfb2826ed53207adfba", "file": "src/components/NewFulfillmentOrder/FulfillmentOrderList.jsx", "repo": "Shopify_fulfillment-order-sample-app"}, "arguments": "(\n    $fulfillment: FulfillmentV2Input!\n    $message: String\n  )"}, {"type": "mutation", "name": "remove$", "content": "{resource}($id: ID!) {\n                    remove${resource}(id: $id)\n                }", "metadata": {"commit_hash": "5600c52c7b14bf174f7f8e176a9a3ff5efba88e1", "file": "src/dataProvider/graphql.js", "repo": "BestCryptoKnight_react-admin-with-material-ui-next"}}, {"type": "mutation", "name": "StartSubmission", "content": "{\n            startSubmission(articleType: $articleType) {\n                id,\n                status\n            }\n        }", "metadata": {"commit_hash": "487cab4ea901e2a4a58132c10f674fdf83dd3970", "file": "tests/test.utils.ts", "repo": "libero_reviewer-submission"}, "arguments": "($articleType: String!)"}, {"type": "query", "name": "GetUsers", "content": "{\n    users {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "cb25eb8de39ae51657d9deaf5b1e712f229dc361", "file": "src/queries/get-users.ts", "repo": "skovy_graphql-blog-client"}}, {"type": "query", "name": "GetPostDetails", "content": "{\n    post(id: $id) {\n      ...PostDetails\n    }\n  }\n  ${fragments.postDetails}", "metadata": {"commit_hash": "cb25eb8de39ae51657d9deaf5b1e712f229dc361", "file": "src/queries/get-post-details.ts", "repo": "skovy_graphql-blog-client"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetPosts", "content": "{\n    posts {\n      ...PostOverview\n    }\n  }\n  ${fragments.postOverview}", "metadata": {"commit_hash": "cb25eb8de39ae51657d9deaf5b1e712f229dc361", "file": "src/queries/get-posts.ts", "repo": "skovy_graphql-blog-client"}}, {"type": "mutation", "name": "AddComment", "content": "{\n    addComment(input: { text: $text, user_id: $user_id, post_id: $post_id }) {\n      comment {\n        ...PostsShowComment\n        errors\n      }\n    }\n  }\n  ${fragments.postsShowComment}", "metadata": {"commit_hash": "cb25eb8de39ae51657d9deaf5b1e712f229dc361", "file": "src/mutations/add-comment.ts", "repo": "skovy_graphql-blog-client"}, "arguments": "($text: String!, $user_id: ID!, $post_id: ID!)"}, {"type": "mutation", "name": "AddPost", "content": "{\n    addPost(input: { title: $title, text: $text, user_id: $user_id }) {\n      post {\n        ...PostsShowPost\n      }\n    }\n  }\n  ${fragments.postsShowPost}", "metadata": {"commit_hash": "cb25eb8de39ae51657d9deaf5b1e712f229dc361", "file": "src/mutations/add-post.ts", "repo": "skovy_graphql-blog-client"}, "arguments": "($title: String!, $text: String!, $user_id: ID!)"}, {"type": "query", "name": "HostsQuery", "content": "{\n    hosts(\n      first: $first,\n      last: $last,\n      sortBy: $sortBy,\n      sortDirection: $sortDirection,\n      search: $search\n    )\n    {\n      totalCount\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          id\n          name\n          build\n          createdAt\n          path\n          operatingsystem {\n            id\n            name\n          }\n          location {\n            id\n            name\n          }\n          domain {\n            id\n            name\n          }\n          factValues {\n            totalCount\n            edges {\n              node {\n                id\n                value\n                factName {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "01a4dae6e1f33a3c2311888f9c771e0a3adc60e6", "file": "src/graphql/queries/hosts.js", "repo": "dm-drogeriemarkt_lisa"}, "arguments": "(\n      $first: Int,\n      $last: Int,\n      $sortBy: String,\n      $sortDirection: SortDirectionEnum,\n      $search: String\n    )"}, {"type": "query", "name": "computeResource", "content": "{\n    computeResource(id: $id) {\n      id\n      name\n      networks {\n        totalCount\n        edges {\n          node {\n            __typename\n            ... on Vmware {\n              id\n              vlanid\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "01a4dae6e1f33a3c2311888f9c771e0a3adc60e6", "file": "src/graphql/queries/computeResource.js", "repo": "dm-drogeriemarkt_lisa"}, "arguments": "($id: String!)"}, {"type": "query", "name": "HostQuery", "content": "{\n    host(id: $id) {\n      id\n      name\n      ip\n      ip6\n      operatingsystem {\n        id\n        name\n        fullname\n      }\n      domain {\n        id\n        name\n      }\n      location {\n        id\n        name\n      }\n      factValues {\n        totalCount\n        edges {\n          node {\n            id\n            value\n            factName {\n              name\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "01a4dae6e1f33a3c2311888f9c771e0a3adc60e6", "file": "src/graphql/queries/host.js", "repo": "dm-drogeriemarkt_lisa"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "SignInUserMutation", "content": "{\n    signInUser(input: {username: $username, password: $password}) {\n      token\n      user {\n        fullname\n      }\n    }\n  }", "metadata": {"commit_hash": "01a4dae6e1f33a3c2311888f9c771e0a3adc60e6", "file": "src/graphql/mutations/signInUser.js", "repo": "dm-drogeriemarkt_lisa"}, "arguments": "($username: String!, $password: String!)"}, {"type": "query", "name": "Servers", "content": "{\n            servers(page: $page, first: $first) {\n              data {\n                id\n                hostname\n                ipv4\n                ipv6\n                created_at\n                updated_at\n                groups {\n                  id\n                  name\n                }\n                users {\n                  id\n                  name\n                }\n                users_count\n              }\n              paginatorInfo {\n                hasMorePages\n              }\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}, "arguments": "($page: Int!, $first: Int!)"}, {"type": "query", "name": "Stats", "content": "{\n            stats {\n              users_count\n              servers_count\n              groups_count\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}}, {"type": "query", "name": "Logs", "content": "{\n            logs(\n              page: $page\n              first: $first\n              orderBy: [{field: ID, order: DESC}]\n            ) {\n              data {\n                id\n                code\n                message\n                created_at\n                updated_at\n                user {\n                  id\n                  name\n                }\n                server {\n                  id\n                  hostname\n                }\n              }\n              paginatorInfo {\n                hasMorePages\n              }\n            }\n          }", "metadata": {"commit_hash": "f9670d6de412a64d6fb1c44edab6529807e2b267", "file": "resources/js/store.js", "repo": "Laravel-VPN-Admin_api-core"}, "arguments": "($page: Int!, $first: Int!)"}, {"type": "query", "name": "findFooWithBar", "content": "{\n      findFoos(fields: { id: $id }) {\n        id\n        title\n        bars {\n          id\n          description\n        }\n      }\n    }", "metadata": {"commit_hash": "6b993cd98a26df4b84cfb4ff8cd1e1fa979ff385", "file": "examples/apollo-client/test/relations.spec.ts", "repo": "aerogear_graphql-testx"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "createAdSet", "content": "{\n    createAdSet(createAdSetInput: $createAdSetInput) {\n      ...AdSet\n    }\n  }\n  ${AdSetFragmentDoc}", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/ad-set.generated.tsx", "repo": "brave_ads-ui"}, "arguments": "($createAdSetInput: CreateAdSetInput!)"}, {"type": "mutation", "name": "updateAd", "content": "{\n    updateCreativeInstanceState(updateAdInput: $updateAdInput) {\n      id\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/ad-set.generated.tsx", "repo": "brave_ads-ui"}, "arguments": "($updateAdInput: UpdateAdInput!)"}, {"type": "query", "name": "analyticOverview", "content": "{\n    campaign(id: $id) {\n      ...Campaign\n      engagements {\n        ...Engagement\n      }\n    }\n  }\n  ${CampaignFragmentDoc}\n  ${EngagementFragmentDoc}", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/analytics-overview.generated.tsx", "repo": "brave_ads-ui"}, "arguments": "($id: String!)"}, {"type": "query", "name": "advertiserCampaigns", "content": "{\n    advertiserCampaigns(id: $id, filter: $filter) {\n      ...AdvertiserCampaigns\n    }\n  }\n  ${AdvertiserCampaignsFragmentDoc}", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/advertiser.generated.tsx", "repo": "brave_ads-ui"}, "arguments": "($id: String!, $filter: AdvertiserCampaignFilter)"}, {"type": "mutation", "name": "CreateCampaign", "content": "{\n    createCampaign(createCampaignInput: $input) {\n      id\n      paymentType\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/campaign.generated.tsx", "repo": "brave_ads-ui"}, "arguments": "($input: CreateCampaignInput!)"}, {"type": "mutation", "name": "UpdateCampaign", "content": "{\n    updateCampaign(updateCampaignInput: $input) {\n      id\n      paymentType\n      stripePaymentId\n    }\n  }", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/campaign.generated.tsx", "repo": "brave_ads-ui"}, "arguments": "($input: UpdateCampaignInput!)"}, {"type": "query", "name": "Segments", "content": "{\n    segments {\n      data {\n        ...Segment\n      }\n    }\n  }\n  ${SegmentFragmentDoc}", "metadata": {"commit_hash": "4371b87492fcbfa6a6110f7637ed29a11361ccd7", "file": "src/graphql/common.generated.tsx", "repo": "brave_ads-ui"}}, {"type": "query", "name": "GetJordanIndustryData", "content": "{\n    jordanIndustry(industryCode: $industryCode) {\n      industryCode\n      title\n      description\n      keywords\n      factors {\n        edges {\n          node {\n            rcaJordan\n            rcaPeers\n            waterIntensity\n            electricityIntensity\n            availabilityInputs\n            femaleEmployment\n            highSkillEmployment\n            fdiWorld\n            fdiRegion\n            exportPropensity\n          }\n        }\n      }\n      nationality {\n        edges {\n          node {\n            nationality\n            men\n            women\n            meanwage\n            medianwage\n          }\n        }\n      }\n      schooling {\n        edges {\n          node {\n            schooling\n            men\n            women\n          }\n        }\n      }\n      occupation {\n        edges {\n          node {\n            occupation\n            men\n            women\n          }\n        }\n      }\n      mapLocation {\n        edges {\n          node {\n            govCode\n            governorate\n            shareState\n            shareCountry\n          }\n        }\n      }\n      wageHistogram {\n        edges {\n          node {\n            facet\n            range0100\n            range100200\n            range200300\n            range300400\n            range400500\n            range500600\n            range600Plus\n          }\n        }\n      }\n      overTime {\n        edges {\n          node {\n            visualization\n            variable\n            years20042006\n            years20072009\n            years20102012\n            years20132015\n            years20162018\n          }\n        }\n      }\n      text {\n        edges {\n          node {\n            occupation\n            demographic\n            location\n            avgWage\n            wageHist\n            scatter\n            schooling\n            percentFemale\n            percentHighSkill\n            female\n            highSkill\n          }\n        }\n      }\n      control {\n        edges {\n          node {\n            labor\n            women\n            fdi\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "caa856ce162d7acc90e14e7eb883e81840218fd2", "file": "src/pages/jordanTool/fetchData.ts", "repo": "cid-harvard_growth-lab-app-front-end"}, "arguments": "($industryCode: Int!)"}, {"type": "query", "name": "GetAllJordanIndustries", "content": "{\n    jordanIndustryList {\n      industryCode\n      title\n      description\n      keywords\n      factors {\n        edges {\n          node {\n            attractiveness\n            viability\n            rca\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "caa856ce162d7acc90e14e7eb883e81840218fd2", "file": "src/pages/jordanTool/index.tsx", "repo": "cid-harvard_growth-lab-app-front-end"}}, {"type": "query", "name": "getIntegrators", "content": "{\n        integrators(\n            orderBy: volumeTotalUSD\n            orderDirection: desc\n            first: $count\n            skip: $offset\n            where: { date: 0 }\n        ) {\n            id\n            contractAddress\n\n            txCount {\n                symbol\n                value\n            }\n\n            volume {\n                symbol\n                amount\n                amountInEth\n                amountInUsd\n                asset {\n                    decimals\n                }\n            }\n\n            locked {\n                symbol\n                amount\n                amountInUsd\n                asset {\n                    decimals\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "c8601aa18f4133b1639a9546966cd6a2a1f671d0", "file": "src/lib/graphQL/queries/queries.ts", "repo": "renproject_command-center"}, "arguments": "($offset: Int, $count: Int)"}, {"type": "mutation", "name": "updateTweet", "content": "{\n    updateTweet(\n      _id: $_id,\n      tweet: $tweet\n    ) {\n      _id\n      tweet\n      author\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "React-Cookbook-master/Chapter09/Recipe2/apollo/src/graphql/mutations/index.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $_id: String!,\n    $tweet: String!\n  )"}, {"type": "query", "name": "isAdmin", "content": "{\n    meta {\n      isAdmin\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/admin/src/api/queries.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "community", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/admin/src/api/community.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($slug: String)"}, {"type": "query", "name": "recentCommunities", "content": "{\n      recentCommunities {\n        ...communityInfo\n        ...communityMembers\n      }\n    }\n    ${communityInfoFragment}\n    ${communityMemberConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/admin/src/api/community.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($filter: MemberConnectionFilter)"}, {"type": "query", "name": "getDMNotifications", "content": "{\n    directMessageNotifications(after: $after) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...notificationInfo\n        }\n      }\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/notification/getDirectMessageNotifications.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($after: String)"}, {"type": "query", "name": "searchThreads", "content": "{\n    search(queryString: $queryString, type: $type, filter: $filter) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on Thread {\n              ...threadInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/search/searchThreads.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $queryString: String!\n    $type: SearchType!\n    $filter: SearchFilter\n  )"}, {"type": "query", "name": "searchCommunityMembers", "content": "{\n    search(queryString: $queryString, type: $type, filter: $filter) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on CommunityMember {\n              ...communityMemberInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/search/searchCommunityMembers.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $queryString: String!\n    $type: SearchType!\n    $filter: SearchFilter\n  )"}, {"type": "query", "name": "getChannelById", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannel.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getChannelThreadConnection", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelThreadConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelThreadConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannelThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID, $after: String)"}, {"type": "query", "name": "loadMoreChannelThreads", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelThreadConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelThreadConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannelThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID, $after: String)"}, {"type": "query", "name": "getChannelBlockedUsers", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      blockedUsers {\n        ...userInfo\n      }\n    }\n  }\n  ${userInfoFragment}\n  ${communityInfoFragment}\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/channel/getChannelBlockedUsers.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCommunityBySlug", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunity.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($slug: LowercaseString)"}, {"type": "query", "name": "getCommunityThreadConnection", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityThreadConnection\n    }\n  }\n  ${threadInfoFragment}\n  ${communityInfoFragment}\n  ${communityThreadConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunityThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $id: ID\n    $after: String\n    $sort: CommunityThreadConnectionSort\n  )"}, {"type": "query", "name": "getCommunitySettingsById", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunitySettings.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCommunityTopAndNewThreads", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      topAndNewThreads {\n        topThreads {\n          ...threadInfo\n        }\n        newThreads {\n          ...threadInfo\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunityTopAndNewThreads.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCommunityMemberGrowth", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      memberGrowth {\n        count\n        weeklyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n        monthlyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n        quarterlyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/community/getCommunityMemberGrowth.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getUserThreadConnection", "content": "{\n    user(id: $id) {\n      ...userInfo\n      ...userThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userThreadConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/user/getUserThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $id: ID\n    $after: String\n    $kind: ThreadConnectionType\n  )"}, {"type": "query", "name": "getCurrentUserCommunityConnection", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userCommunityConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunityConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/user/getUserCommunityConnection.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "getUserGithubProfile", "content": "{\n    user(id: $id) {\n      id\n      username\n      githubProfile {\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/user/getUserGithubProfile.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCurrentUser", "content": "{\n    user: currentUser {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/user/getUser.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "loadMoreDirectMessageThreads", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userDirectMessageThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userDirectMessageThreadsConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getCurrentUserDMThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($after: String)"}, {"type": "query", "name": "currentUserDirectMessageThreads", "content": "{\n    user: currentUser {\n      ...userInfo\n      ...userDirectMessageThreadConnection\n    }\n  }\n  ${userInfoFragment}\n  ${userDirectMessageThreadsConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getCurrentUserDMThreadConnection.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($after: String)"}, {"type": "query", "name": "loadMoreMessages", "content": "{\n    directMessageThread(id: $id) {\n      ...directMessageThreadInfo\n      ...directMessageThreadMessageConnection\n    }\n  }\n  ${directMessageThreadInfoFragment}\n  ${directMessageThreadMessageConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/directMessageThread/getDirectMessageThreadMessageConnection.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!, $after: String)"}, {"type": "query", "name": "getComposerCommunitiesAndChannels", "content": "{\n    user: currentUser {\n      ...userInfo\n      communityConnection {\n        edges {\n          node {\n            id\n            name\n            slug\n            profilePhoto\n            communityPermissions {\n              isMember\n              isBlocked\n              isOwner\n              isModerator\n              reputation\n            }\n          }\n        }\n      }\n      channelConnection {\n        edges {\n          node {\n            id\n            name\n            slug\n            isDefault\n            isPrivate\n            isArchived\n            community {\n              id\n            }\n            channelPermissions {\n              isMember\n              isPending\n              isBlocked\n              isOwner\n              isModerator\n            }\n          }\n        }\n      }\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/queries/composer/getComposerCommunitiesAndChannels.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "blockPendingCommunityMember", "content": "{\n    blockPendingCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/blockPendingCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $input: BlockPendingCommunityMemberInput!\n  )"}, {"type": "mutation", "name": "addCommunityMemberWithToken", "content": "{\n    addCommunityMemberWithToken(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityMemberWithToken.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $input: AddCommunityMemberWithTokenInput!\n  )"}, {"type": "mutation", "name": "addCommunityMember", "content": "{\n    addCommunityMember(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/addCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: AddCommunityMemberInput!)"}, {"type": "mutation", "name": "unblockCommunityMember", "content": "{\n    unblockCommunityMember(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/communityMember/unblockCommunityMember.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: UnblockCommunityMemberInput!)"}, {"type": "mutation", "name": "setThreadLock", "content": "{\n    setThreadLock(threadId: $threadId, value: $value) {\n      id\n      isLocked\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/lockThread.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($threadId: ID!, $value: Boolean!)"}, {"type": "mutation", "name": "toggleThreadNotifications", "content": "{\n    toggleThreadNotifications(threadId: $threadId) {\n      id\n      receiveNotifications\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/toggleThreadNotifications.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($threadId: ID!)"}, {"type": "mutation", "name": "addThreadReaction", "content": "{\n    addThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/addThreadReaction.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: AddThreadReactionInput!)"}, {"type": "mutation", "name": "removeThreadReaction", "content": "{\n    removeThreadReaction(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/thread/removeThreadReaction.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: RemoveThreadReactionInput!)"}, {"type": "mutation", "name": "deleteChannel", "content": "{\n    deleteChannel(channelId: $channelId)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/deleteChannel.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($channelId: ID!)"}, {"type": "mutation", "name": "toggleChannelNotifications", "content": "{\n    toggleChannelNotifications(channelId: $channelId) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/toggleChannelNotifications.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($channelId: ID!)"}, {"type": "mutation", "name": "updateSlackSettings", "content": "{\n    updateSlackSettings(input: $input) {\n      ...channelInfo\n      slackSettings {\n        botLinks {\n          eventType\n          slackChannelId\n        }\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/updateSlackSettings.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: UpdateSlackSettingsInput!)"}, {"type": "mutation", "name": "createChannel", "content": "{\n    createChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/channel/createChannel.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: CreateChannelInput!)"}, {"type": "mutation", "name": "sendSlackInvites", "content": "{\n    sendSlackInvites(input: $input) {\n      ...communityInfo\n      slackSettings {\n        teamName\n        isConnected\n        hasSentInvites\n        memberCount\n        invitesSentAt\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/sendSlackInvites.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: SendSlackInvitesInput!)"}, {"type": "mutation", "name": "saveBrandedLoginSettings", "content": "{\n    saveBrandedLoginSettings(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/saveBrandedLoginSettings.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: SaveBrandedLoginSettingsInput!)"}, {"type": "mutation", "name": "enableCommunityWatercooler", "content": "{\n    enableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/enableCommunityWatercooler.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $input: EnableCommunityWatercoolerInput!\n  )"}, {"type": "mutation", "name": "updateAdministratorEmail", "content": "{\n    updateAdministratorEmail(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/updateAdministratorEmail.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: UpdateAdministratorEmailInput!)"}, {"type": "mutation", "name": "enableCommunityTokenJoin", "content": "{\n    enableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/enableCommunityTokenJoin.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: EnableCommunityTokenJoinInput!)"}, {"type": "mutation", "name": "sendEmailInvites", "content": "{\n    sendEmailInvites(input: $input)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/sendCommunityEmailInvites.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: EmailInvitesInput!)"}, {"type": "mutation", "name": "disableBrandedLogin", "content": "{\n    disableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/disableBrandedLogin.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: DisableBrandedLoginInput!)"}, {"type": "mutation", "name": "toggleCommunityNoindex", "content": "{\n    toggleCommunityNoindex(communityId: $communityId) {\n      id\n      slug\n      noindex\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/toggleCommunityNoindex.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($communityId: ID!)"}, {"type": "mutation", "name": "enableBrandedLogin", "content": "{\n    enableBrandedLogin(input: $input) {\n      id\n      slug\n      brandedLogin {\n        isEnabled\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/enableBrandedLogin.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: EnableBrandedLoginInput!)"}, {"type": "mutation", "name": "disableCommunityWatercooler", "content": "{\n    disableCommunityWatercooler(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/community/disableCommunityWatercooler.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    $input: DisableCommunityWatercoolerInput!\n  )"}, {"type": "mutation", "name": "banUser", "content": "{\n    banUser(input: $input)\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/user/banUser.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: BanUserInput!)"}, {"type": "mutation", "name": "updateUserEmail", "content": "{\n    updateUserEmail(email: $email) {\n      ...userInfo\n      email\n      pendingEmail\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/user/updateUserEmail.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($email: LowercaseString!)"}, {"type": "mutation", "name": "setLastSeen", "content": "{\n    setLastSeen(id: $id) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/directMessageThread/setDMThreadLastSeen.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "createDirectMessageThread", "content": "{\n    createDirectMessageThread(input: $input) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/directMessageThread/createDirectMessageThread.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: DirectMessageThreadInput!)"}, {"type": "mutation", "name": "editMessage", "content": "{\n    editMessage(input: $input) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/mutations/message/editMessage.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($input: EditMessageInput!)"}, {"type": "subscription", "name": "subscribeToUpdatedCommunities", "content": "{\n    communityUpdated(communityIds: $communityIds) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "Projects/spectrum-alpha/shared/graphql/subscriptions/index.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($communityIds: [ID!])"}, {"type": "query", "name": "USER_ORDERS_QUERY", "content": "{\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/pages/orders.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "CREATE_PRODUCT_MUTATION", "content": "{\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/CreateProduct.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    # Which variables are getting passed in? And What types are they\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  )"}, {"type": "mutation", "name": "SIGNIN_MUTATION", "content": "{\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/SignIn.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "ADD_TO_CART_MUTATION", "content": "{\n    addToCart(productId: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/AddToCart.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "REQUEST_RESET_MUTATION", "content": "{\n    sendUserPasswordResetLink(email: $email) {\n      code\n      message\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/RequestReset.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($email: String!)"}, {"type": "query", "name": "SINGLE_ITEM_QUERY", "content": "{\n    Product(where: { id: $id }) {\n      name\n      price\n      description\n      id\n      photo {\n        id\n        altText\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/finished-application/frontend/components/SingleProduct.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "REMOVE_FROM_CART_MUTATION", "content": "{\n    deleteCartItem(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/50/RemoveFromCart.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "ALL_PRODUCTS_QUERY", "content": "{\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/26/Products.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "query", "name": "SEARCH_PRODUCTS_QUERY", "content": "{\n    searchTerms: allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/52/Search.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($searchTerm: String!)"}, {"type": "query", "name": "SINGLE_ITEM_QUERY", "content": "{\n    Product(where: { id: $id }) {\n      name\n      price\n      description\n      id\n      photo {\n        id\n        altText\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/28/SingleProduct.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "SINGLE_PRODUCT_QUERY", "content": "{\n    Product(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/29/UpdateProduct.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "PAGINATION_QUERY", "content": "{\n    _allProductsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/33/Pagination.js", "repo": "bgoonz_React_Notes_V3"}}, {"type": "mutation", "name": "REMOVE_FROM_CART_MUTATION", "content": "{\n    deleteCartItem(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/51/RemoveFromCart.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "ADD_TO_CART_MUTATION", "content": "{\n    addToCart(productId: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/48/AddToCart.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "CREATE_PRODUCT_MUTATION", "content": "{\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }", "metadata": {"commit_hash": "6aef5416807c06dde40a7faf406a55f213ba4d0a", "file": "My_Notes/Stepped-Solns/25/CreateProduct.js", "repo": "bgoonz_React_Notes_V3"}, "arguments": "(\n    # Which variables are getting passed in? And What types are they\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  )"}, {"type": "query", "name": "loadPastTags", "content": "{\n    projectTags {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/CreateProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}}, {"type": "mutation", "name": "signUpUser", "content": "{\n    SignUp(input: { user_signup: $userSignup }) {\n        user {\n          ...authUserData\n        }\n      }\n    }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/SignupContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($userSignup: UserSignupInput)"}, {"type": "query", "name": "loadPost", "content": "{\n    post(slug: $slug) {\n      ...postFragment\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/PostContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($slug: String)"}, {"type": "mutation", "name": "upvoteComment", "content": "{\n    VotePostComment(input: { auth_token: $authToken, post_comment_id: $id }) {\n      total_votes\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/PostContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($authToken: String!, $id: ID!)"}, {"type": "mutation", "name": "submitInquiry", "content": "{\n    CreateInquiry(input: { inquiry: $inquiry }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ContactContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($inquiry: InquiryInput)"}, {"type": "query", "name": "tutorial", "content": "{\n    tutorial(slug: $slug) {\n      id\n      link\n      title\n      description\n      status\n      slug\n      comments {\n        id\n        body\n        total_votes\n        user {\n          name\n          avatar\n          bio\n        }\n      }\n      user {\n        name\n        avatar\n        bio\n      }\n      body\n      image\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/TutorialContainer/gql.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($slug: String!)"}, {"type": "mutation", "name": "createProjectComment", "content": "{\n      CreateProjectComment(input: {\n        auth_token: $authToken,\n        comment: $comment,\n        project_id: $id\n      }) {\n        project_comment {\n          id\n        }\n      }\n    }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/ProjectContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($authToken: String!,\n    $comment: CommentInput, $id: ID!)"}, {"type": "mutation", "name": "createPost", "content": "{\n    CreatePost(input: { auth_token: $authToken, post: $post }) {\n      post {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/CreatePostContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($authToken: String!, $post: PostInput)"}, {"type": "query", "name": "loadPost", "content": "{\n    post(id: $id) {\n      ...postData\n    }\n  }", "metadata": {"commit_hash": "0c89cef2af83079f870ca7decb00aa6b31b23259", "file": "client/app/src/containers/CreatePostContainer/index.js", "repo": "RyanCCollins_ryancollinsio"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "editTaskList", "content": "{\n        editTaskList(moduleId: $moduleId, listId: $listId, name: $name)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditTaskList.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($moduleId: ID!, $listId: ID!, $name: String!)"}, {"type": "query", "name": "getProject", "content": "{\n        getProject(projectId: $projectId) {\n            _id\n            name\n            description\n            image\n            color\n            privacy\n            modules_order\n            members {\n                user {\n                    _id\n                    avatar\n                    name\n                    last_name\n                    email\n                    color\n                }\n                role {\n                    _id\n                    name\n                }\n                team {\n                    _id\n                    name\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetProject.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($projectId: ID!)"}, {"type": "mutation", "name": "changePassword", "content": "{\n        changePassword(oldPassword: $oldPassword, newPassword: $newPassword) {\n            ... on AuthUserError {\n                message\n            }\n            ... on OldPasswordError {\n                message\n            }\n\n            ... on Error {\n                message\n            }\n            ... on ChangePassword {\n                _id\n                password\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlChangePassword.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($oldPassword: String!, $newPassword: String!)"}, {"type": "query", "name": "getFiles", "content": "{\n        getFiles(id: $id) {\n            _id\n            parentId\n            fileName\n            owner {\n                _id\n                name\n                last_name\n                avatar\n                color\n            }\n            created_at\n            parentUrl\n            fileUrl\n            additional_params\n            deleted_at\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetFiles.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "getTags", "content": "{\n        getTags(teamId: $teamId) {\n            _id\n            name\n            color\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetTags.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($teamId: ID!)"}, {"type": "query", "name": "getInvitationsForProject", "content": "{\n        getInvitationsForProject(projectId: $projectId) {\n            _id\n            email\n            created_at\n            status\n            projectId\n            teamId\n            updated_at\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetInvitationsForProject.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($projectId: ID!)"}, {"type": "query", "name": "getCommentsForTask", "content": "{\n        getCommentsForTask(taskId: $taskId) {\n            _id\n            comments {\n                _id\n                owner {\n                    _id\n                    name\n                    last_name\n                    avatar\n                    color\n                    status\n                }\n                comment\n                commentJson\n                created_at\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetCommentsForTask.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($taskId: ID!)"}, {"type": "mutation", "name": "deleteTag", "content": "{\n        deleteTag(tagId: $tagId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteTag.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($tagId: ID!)"}, {"type": "mutation", "name": "removeInvitation", "content": "{\n        removeInvitation(invitationId: $invitationId) {\n            _id\n            email\n            created_at\n            status\n            projectId\n            teamId\n            updated_at\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlRemoveInvitation.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($invitationId: ID!)"}, {"type": "mutation", "name": "registerUserByInvitation", "content": "{\n        registerUserByInvitation(\n            email: $email\n            projectId: $projectId\n            teamId: $teamId\n        ) {\n            ... on Member {\n                user\n                role\n                team\n            }\n            ... on Invitation {\n                _id\n                email\n                created_at\n                status\n                projectId\n                teamId\n                updated_at\n            }\n\n            ... on InvalidUser {\n                message\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlRegisterUserByInvitationMutation.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "(\n        $email: String!\n        $projectId: ID!\n        $teamId: ID!\n    )"}, {"type": "query", "name": "getProjectTopics", "content": "{\n        getProjectTopics(projectId: $projectId) {\n            _id\n            name\n            created_at\n            description\n            owner {\n                _id\n                name\n                last_name\n                avatar\n            }\n            module {\n                _id\n                name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetProjectTopics.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($projectId: ID!)"}, {"type": "mutation", "name": "createProject", "content": "{\n        createProject(input: $input) {\n            _id\n            name\n            description\n            image\n            color\n            privacy\n            status\n            created_at\n            owner {\n                _id\n                name\n                last_name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlCreateProject.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($input: ProjectInput!)"}, {"type": "mutation", "name": "createTopic", "content": "{\n        createTopic(input: $input) {\n            _id\n            name\n            created_at\n            owner {\n                name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlCreateTopic.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($input: TopicInput!)"}, {"type": "query", "name": "login", "content": "{\n        login(email: $email, password: $password) {\n            ... on AuthUserError {\n                message\n            }\n            ... on AuthUserNotConfirmedError {\n                message\n            }\n            ... on Error {\n                message\n            }\n            ... on AuthData {\n                _id\n                token\n                tokenExpiration\n                userAttempts\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlLogin.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "getTask", "content": "{\n        getTask(taskId: $taskId) {\n            _id\n            name\n            owner {\n                _id\n                avatar\n                name\n                last_name\n                color\n            }\n            assigned {\n                _id\n                name\n                last_name\n                avatar\n                color\n                status\n            }\n            collaborators {\n                _id\n                avatar\n                name\n                last_name\n                email\n                color\n                status\n            }\n            deadline\n            done\n            description\n            descriptionJson\n            created_at\n            tag {\n                _id\n                name\n                color\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlgetTask.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($taskId: ID!)"}, {"type": "mutation", "name": "addCollaborator", "content": "{\n        addCollaborator(taskId: $taskId, userId: $userId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlAddCollaborator.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($taskId: ID!, $userId: ID!)"}, {"type": "mutation", "name": "deleteComment", "content": "{\n        deleteComment(commentId: $commentId, taskId: $taskId, topicId: $topicId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlDeleteComment.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($commentId: ID!, $taskId: ID, $topicId: ID)"}, {"type": "mutation", "name": "createTag", "content": "{\n        createTag(input: $input) {\n            _id\n            name\n            color\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlcreateTag.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($input: TagInput!)"}, {"type": "mutation", "name": "editComment", "content": "{\n        editComment(input: $input) {\n            _id\n            comments {\n                _id\n                comment\n                commentJson\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditComment.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($input: EditCommentInput!)"}, {"type": "query", "name": "getLastActivity", "content": "{\n        getLastActivity(userId: $userId) {\n            _id\n            type\n            action\n            user {\n                userId\n                name\n                firstName\n                lastName\n                avatar\n                color\n            }\n            dateFilter\n            created_at\n            updated_at\n            body {\n                logId\n                name\n                description\n                info\n                project {\n                    projectId\n                    name\n                    image\n                    color\n                }\n                comment {\n                    commentId\n                    comment\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlLastActivity.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($userId: ID!)"}, {"type": "mutation", "name": "editProject", "content": "{\n        editProject(projectId: $projectId, input: $input) {\n            _id\n            name\n            description\n            image\n            color\n            privacy\n            status\n            created_at\n            updated_at\n            owner {\n                _id\n                name\n                last_name\n            }\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlEditProject.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($projectId: ID!, $input: EditProjectInput!)"}, {"type": "mutation", "name": "removeCollaborator", "content": "{\n        removeCollaborator(taskId: $taskId, userId: $userId)\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlRemoveCollaborator.js", "repo": "samarjaffal_wuptick-frontend"}, "arguments": "($taskId: ID!, $userId: ID!)"}, {"type": "query", "name": "getNotifications", "content": "{\n        getNotifications {\n            _id\n            type\n            external_id {\n                _id\n                name\n            }\n            recipient {\n                _id\n                name\n                last_name\n                email\n                avatar\n            }\n            created_at\n            read_at\n            url\n            hide\n        }\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlGetNotifications.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "mutation", "name": "logout", "content": "{\n        logout\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/requests/graphql/gqlLogout.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "Test", "content": "{\n        testUser\n    }", "metadata": {"commit_hash": "6fd7a34ace6f1f1b77bea1a0bac0bdc39cbee27d", "file": "src/pages/TestPage.js", "repo": "samarjaffal_wuptick-frontend"}}, {"type": "query", "name": "getTaxonomies", "content": "{\n      taxonomies {\n        name\n      }\n    }", "metadata": {"commit_hash": "3060fc2c99ed33acf5d3eac99e8b6bbdb25ede2c", "file": "src/TaxonomiesNav.js", "repo": "Open-NC_reentry-resources-hub"}}, {"type": "query", "name": "getCounties", "content": "{\n      locations(type: $type) {\n        name\n        alternate_name\n      }\n    }", "metadata": {"commit_hash": "3060fc2c99ed33acf5d3eac99e8b6bbdb25ede2c", "file": "src/CountiesIndex.js", "repo": "Open-NC_reentry-resources-hub"}, "arguments": "($type: String!)"}, {"type": "query", "name": "loadKv", "content": "{\n            kv(collection: $nCollection, key: $nKey) {\n              collection\n              key\n              name\n              type\n              value\n            }\n          }", "metadata": {"commit_hash": "f75eb868e162036502c0689ff052e92fc355c631", "file": "src/adapters/graphql.ts", "repo": "danielwii_asuna-admin"}, "arguments": "($nCollection: String!, $nKey: String!)"}, {"type": "mutation", "name": "DeleteProfile", "content": "{\n                delete_profiles(where: {id: {_eq: $id}}) {\n                    affected_rows\n                    returning {\n                        firstName\n                        id\n                        lastName\n                        position\n                    }\n                }\n            }", "metadata": {"commit_hash": "049b0e0fd2a3ca39f6f831f29a67a22151380416", "file": "sveltekit-app/src/routes/graphql/profiles/index.ts", "repo": "crewnew-git_sveltekit-hasura-docker"}, "arguments": "($id: Int!)"}, {"type": "mutation", "name": "UpdtaeProfile", "content": "{\n                update_profiles(where: {id: {_eq: $id}}, _set: {firstName: $firstName, lastName: $lastName, position: $position}) {\n                    affected_rows\n                    returning {\n                        firstName\n                        id\n                        lastName\n                        position\n                    }\n                }\n            }", "metadata": {"commit_hash": "049b0e0fd2a3ca39f6f831f29a67a22151380416", "file": "sveltekit-app/src/routes/graphql/profiles/index.ts", "repo": "crewnew-git_sveltekit-hasura-docker"}, "arguments": "($id: Int!, $firstName: String!, $lastName: String!, $position: String!)"}, {"type": "mutation", "name": "ProfileMutation", "content": "{\n                insert_profiles(objects: {firstName: $firstName, lastName: $lastName, position: $position}) {\n                    affected_rows\n                    returning {\n                        firstName\n                        id\n                        lastName\n                        position\n                    }\n                }\n            }", "metadata": {"commit_hash": "049b0e0fd2a3ca39f6f831f29a67a22151380416", "file": "sveltekit-apollo/src/routes/api/graphql/index.ts", "repo": "crewnew-git_sveltekit-hasura-docker"}, "arguments": "($firstName: String!, $lastName: String!, $position: String!)"}, {"type": "mutation", "name": "SignOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlMutations.js", "repo": "hashicorp_learn-terraform-preview-environment"}}, {"type": "query", "name": "GetCoffee", "content": "{\n    coffee(id: $coffeeID) {\n      id\n      name\n      image\n      teaser\n      collection\n      origin\n      color\n      price\n    }\n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlQueries.js", "repo": "hashicorp_learn-terraform-preview-environment"}, "arguments": "($coffeeID: String!)"}, {"type": "query", "name": "GetCoffeeIngredients", "content": "{\n    coffeeIngredients(coffeeID: $coffeeID) {\n      unit\n      quantity\n      name\n    }\n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlQueries.js", "repo": "hashicorp_learn-terraform-preview-environment"}, "arguments": "($coffeeID: String!)"}, {"type": "query", "name": "GetAllOrders", "content": "{\n    orders {\n      id\n      items {\n        coffee { name, price, image }\n        quantity\n      }\n    }\n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlQueries.js", "repo": "hashicorp_learn-terraform-preview-environment"}}, {"type": "query", "name": "GetOrder", "content": "{\n    order(id: $orderID) {\n      id\n      items {\n        coffee { name, price, image }\n        quantity\n      }\n    }\n  }", "metadata": {"commit_hash": "17080de271d66c606fd7fbb44869154e33ae27cd", "file": "src/gql/gqlQueries.js", "repo": "hashicorp_learn-terraform-preview-environment"}, "arguments": "($orderID: String!)"}, {"type": "subscription", "name": "allVotes", "content": "{\n      CharacterDeathVotes : characters(order_by: {id: asc}) {\n      label: name\n      data: votes\n    }\n  }", "metadata": {"commit_hash": "5bafb503f63b1dfc180e77f02d16b96d6503eb11", "file": "src/constants/graphql.js", "repo": "malgamves_GameOfCharts"}}, {"type": "query", "name": "ChallQuery", "content": "{\n        getAllChalls {\n            id\n            name\n            domain\n            key\n        }\n    }", "metadata": {"commit_hash": "1ea75a71b5e675d6bf21b83ae4776b12501c6bb3", "file": "Web/Graph_Hack/includes/client/src/components/Challs.js", "repo": "anirudhvs_pragyan-ctf-22"}}, {"type": "mutation", "name": "createNewChall", "content": "{\n            createChall(input: $input) {\n                id\n                name\n                domain\n                key\n            }\n    }", "metadata": {"commit_hash": "1ea75a71b5e675d6bf21b83ae4776b12501c6bb3", "file": "Web/Graph_Hack/includes/client/src/components/CreateChall.js", "repo": "anirudhvs_pragyan-ctf-22"}, "arguments": "($input: NewChallInput!)"}, {"type": "query", "name": "blocks", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}, "arguments": "($timestampFrom: Int!, $timestampTo: Int!)"}, {"type": "query", "name": "lps", "content": "{\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\n      user {\n        id\n      }\n      pair {\n        id\n      }\n      liquidityTokenBalance\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}, "arguments": "($pair: Bytes!)"}, {"type": "query", "name": "snapshots", "content": "{\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\n      timestamp\n      reserveUSD\n      liquidityTokenBalance\n      liquidityTokenTotalSupply\n      reserve0\n      reserve1\n      token0PriceUSD\n      token1PriceUSD\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}, "arguments": "($user: Bytes!, $skip: Int!)"}, {"type": "query", "name": "liquidityPositions", "content": "{\n    liquidityPositions(where: { user: $user }) {\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n          symbol\n          derivedETH\n        }\n        token1 {\n          id\n          symbol\n          derivedETH\n        }\n        totalSupply\n        cumulativeFeeUSD\n      }\n      liquidityTokenBalance\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}, "arguments": "($user: Bytes!)"}, {"type": "query", "name": "uniswapDayDatas", "content": "{\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      id\n      date\n      totalVolumeUSD\n      dailyVolumeUSD\n      dailyVolumeETH\n      totalLiquidityUSD\n      totalLiquidityETH\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}, "arguments": "($startTime: Int!, $skip: Int!)"}, {"type": "query", "name": "tokens", "content": "{\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}, "arguments": "($value: String, $id: String)"}, {"type": "query", "name": "pairs", "content": "{\n    as0: pairs(where: { token0_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pairs(where: { token1_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pairs(where: { id: $id }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}, "arguments": "($tokens: [Bytes]!, $id: String)"}, {"type": "query", "name": "tokenDayDatas", "content": "{\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }", "metadata": {"commit_hash": "0293f8e9e4c9840baa70c6c2f72e5dab29400fc8", "file": "src/apollo/queries.js", "repo": "TopSpeed1017_spiritswap-frontend"}, "arguments": "($tokenAddr: String!, $skip: Int!)"}, {"type": "query", "name": "getTotalWonData", "content": "{\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }", "metadata": {"commit_hash": "74922f49ceb05f6fc38a0a785d33676c737f67a6", "file": "teams/18-Avault/src/avault-shiden-web/src/state/predictions/helpers.ts", "repo": "parity-asia_hackathon-2022-summer"}, "arguments": "($position: String)"}, {"type": "query", "name": "getVotes", "content": "{\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }", "metadata": {"commit_hash": "74922f49ceb05f6fc38a0a785d33676c737f67a6", "file": "teams/18-Avault/src/avault-shiden-web/src/state/voting/helpers.ts", "repo": "parity-asia_hackathon-2022-summer"}, "arguments": "($first: Int, $skip: Int, $where: VoteWhere)"}, {"type": "query", "name": "getUserPointIncreaseEvents", "content": "{\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }", "metadata": {"commit_hash": "74922f49ceb05f6fc38a0a785d33676c737f67a6", "file": "teams/18-Avault/src/avault-shiden-web/src/state/achievements/helpers.ts", "repo": "parity-asia_hackathon-2022-summer"}, "arguments": "($account: ID!)"}, {"type": "query", "name": "StarStaticsChartQuery", "content": "{\n      truncValueGroups(user: $user, className: $className) {\n        edges {\n          node {\n            value\n            count\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/containers/ProfilePage/StarStaticsChart.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($user: ID, $className: String)"}, {"type": "query", "name": "ChatRoomPuzzleQuery", "content": "{\n    puzzle(id: $puzzleId) {\n      id\n      anonymous\n      status\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/containers/Chat/ChatRoom.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($puzzleId: ID!)"}, {"type": "mutation", "name": "CreateAwardApplicationMutation", "content": "{\n    createAwardApplication(input: $input) {\n      awardApplication {\n        ...AwardApplication\n      }\n    }\n  }\n  ${AwardApplication}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateAwardApplicationMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "(\n    $input: CreateAwardApplicationInput!\n  )"}, {"type": "query", "name": "ChatRoomQuery", "content": "{\n    allChatrooms(name: $chatroomName) {\n      edges {\n        node {\n          ...ChatRoom\n        }\n      }\n    }\n  }\n  ${ChatRoom}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/ChatRoomQuery.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($chatroomName: String!)"}, {"type": "mutation", "name": "LoginFormMutation", "content": "{\n    login(input: $input) {\n      user {\n        rowid\n        nickname\n        lastReadDm {\n          id\n        }\n        favoritechatroomSet {\n          edges {\n            node {\n              chatroom {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/LoginFormMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($input: UserLoginInput!)"}, {"type": "mutation", "name": "DeleteBookmarkMutation", "content": "{\n    deleteBookmark(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/DeleteBookmarkMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($input: DeleteBookmarkInput!)"}, {"type": "mutation", "name": "CreateQuestionMutation", "content": "{\n    createQuestion(input: $input) {\n      dialogue {\n        id\n        created\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateQuestionMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($input: CreateQuestionInput!)"}, {"type": "query", "name": "ChatLogQuery", "content": "{\n    allChatmessagesLo(\n      chatroomName: $chatroomName\n      limit: $limit\n      offset: $offset\n      orderBy: \"id\"\n    )\n      @connection(\n        key: \"ChatMessageNode_ChatLogQuery\"\n        filter: [\"chatroomName\", \"offset\"]\n      ) {\n      edges {\n        node {\n          ...ChatMessage\n        }\n      }\n      totalCount\n    }\n  }\n  ${ChatMessage}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/ChatLogQuery.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($chatroomName: String!, $limit: Int, $offset: Int)"}, {"type": "query", "name": "ProfileShowQuery", "content": "{\n    user(id: $id) {\n      id\n      nickname\n      puzzleCount\n      quesCount\n      goodQuesCount\n      trueQuesCount\n      commentCount\n      rcommentCount\n      rstarCount\n      rstarSum\n      currentAward {\n        id\n      }\n      userawardSet {\n        edges {\n          node {\n            id\n            created\n            award {\n              id\n              name\n              description\n            }\n          }\n        }\n      }\n      dateJoined\n      lastLogin\n      profile\n      hideBookmark\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/ProfileShowQuery.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "AwardApplicationList", "content": "{\n    allAwardApplications(\n      first: $count\n      after: $cursor\n      orderBy: $orderBy\n      applier: $applier\n    )\n      @connection(\n        key: \"AwardApplicationNode_allAwardApplications\"\n        filter: [\"orderBy\", \"applier\"]\n      ) {\n      edges {\n        node {\n          ...AwardApplication\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n  ${AwardApplication}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/AwardApplicationList.js", "repo": "heyrict_cindy-realtime"}, "arguments": "(\n    $count: Int\n    $cursor: String\n    $orderBy: [String]\n    $applier: ID\n  )"}, {"type": "query", "name": "StarList", "content": "{\n    allStars(\n      offset: $offset\n      limit: $limit\n      orderBy: $orderBy\n      user: $user\n      puzzle: $puzzle\n    )\n      @connection(\n        key: \"StarNode_allStars\"\n        filter: [\"orderBy\", \"user\", \"offset\", \"puzzle\"]\n      ) {\n      edges {\n        node {\n          id\n          value\n          puzzle {\n            ...PuzzlePanel_node\n          }\n        }\n      }\n      totalCount\n    }\n  }\n  ${PuzzlePanel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/StarList.js", "repo": "heyrict_cindy-realtime"}, "arguments": "(\n    $offset: Int\n    $limit: Int\n    $orderBy: [String]\n    $user: ID\n    $puzzle: ID\n  )"}, {"type": "query", "name": "AwardList", "content": "{\n    allAwards(first: $count, after: $cursor, groupName: $groupName)\n      @connection(key: \"AwardNode_allAwards\", filter: [\"groupName\"]) {\n      edges {\n        node {\n          id\n          name\n          description\n          requisition\n          groupName\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/AwardList.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($count: Int, $cursor: String, $groupName: String)"}, {"type": "query", "name": "UserListInitQuery", "content": "{\n    allUsers(\n      first: $count\n      after: $cursor\n      orderBy: $orderBy\n      nickname_Contains: $nickname__contains\n    )\n      @connection(\n        key: \"UserNode_allUsers\"\n        filter: [\"orderBy\", \"nickname_Contains\"]\n      ) {\n      edges {\n        node {\n          id\n          ...UserLabel_user\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n  ${UserLabel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UserList.js", "repo": "heyrict_cindy-realtime"}, "arguments": "(\n    $count: Int\n    $cursor: String\n    $orderBy: [String]\n    $nickname__contains: String\n  )"}, {"type": "mutation", "name": "CreateBookmarkMutation", "content": "{\n    createBookmark(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/CreateBookmarkMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($input: CreateBookmarkInput!)"}, {"type": "mutation", "name": "UpdateBookmarkMutation", "content": "{\n    updateBookmark(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateBookmarkMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($input: UpdateBookmarkInput!)"}, {"type": "subscription", "name": "DialogueSubscription", "content": "{\n    dialogueSub {\n      ...DialoguePanel\n    }\n  }\n  ${DialoguePanel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/DialogueSubscription.js", "repo": "heyrict_cindy-realtime"}}, {"type": "mutation", "name": "UpdateHintMutation", "content": "{\n    updateHint(input: $input) {\n      clientMutationId\n    }\n  }", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/graphql/UpdateHintMutation.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($input: UpdateHintInput!)"}, {"type": "query", "name": "PuzzleStars", "content": "{\n      allStars(puzzle: $puzzleId) {\n        edges {\n          node {\n            id\n            value\n            user {\n              ...UserLabel_user\n            }\n          }\n        }\n      }\n    }\n    ${UserLabel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/components/PuzzlePanel/InnerStarLabel.js", "repo": "heyrict_cindy-realtime"}, "arguments": "($puzzleId: ID!)"}, {"type": "query", "name": "CommentListQuery", "content": "{\n      allCommentsLo(\n        orderBy: $orderBy\n        limit: $limit\n        offset: $offset\n        puzzle_Status_Gt: $puzzle_Status_Gt\n        puzzle_User: $puzzle_User\n        user: $user\n      ) {\n        edges {\n          node {\n            id\n            user {\n              ...UserLabel_user\n            }\n            puzzle {\n              id\n              title\n              user {\n                ...UserLabel_user\n              }\n            }\n            content\n            spoiler\n          }\n        }\n        totalCount\n      }\n    }\n    ${UserLabel}", "metadata": {"commit_hash": "d166af68271f8f0fdba52bc5fd91fb672ae0164c", "file": "react-boilerplate/app/components/CommentList/constants.js", "repo": "heyrict_cindy-realtime"}, "arguments": "(\n      $orderBy: [String]\n      $limit: Int\n      $offset: Int\n      $puzzle_Status_Gt: Float\n      $puzzle_User: ID\n      $user: ID\n    )"}, {"type": "query", "name": "repoWithHistory", "content": "{\n    repo(id: $repoId) {\n      id\n      isArchived\n      isTemplate\n      commits(first: $first, after: $after) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          ...SimpleCommit\n        }\n      }\n      milestones {\n        ...SimpleMilestone\n      }\n    }\n  }\n  ${fragments.SimpleMilestone}\n  ${fragments.SimpleCommit}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "pages/repo/tree.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!, $first: Int!, $after: String)"}, {"type": "query", "name": "getCommitById", "content": "{\n    repo(id: $repoId) {\n      ...EditPageRepo\n      commit(id: $commitId) {\n        ...CommitWithDocument\n      }\n    }\n  }\n  ${fragments.EditPageRepo}\n  ${fragments.CommitWithDocument}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "pages/repo/edit.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!, $commitId: ID!)"}, {"type": "query", "name": "getLatestCommit", "content": "{\n    repo(id: $repoId) {\n      id\n      latestCommit {\n        ...SimpleCommit\n      }\n    }\n  }\n  ${fragments.SimpleCommit}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "pages/repo/edit.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!)"}, {"type": "query", "name": "me", "content": "{\n    me {\n      id\n      name\n      firstName\n      lastName\n      email\n      roles\n      portrait\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "lib/withMe.js", "repo": "orbiting_publikator-frontend"}}, {"type": "query", "name": "repoWeek", "content": "{\n    reposSearch(first: 100, publishDateRange: $publishDateRange) {\n      nodes {\n        ...CalendarRepoFragment\n        currentPhase {\n          key\n          color\n          label\n        }\n      }\n    }\n  }\n  ${repoFragment}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Calendar/graphql.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($publishDateRange: RepoPublishDateRange)"}, {"type": "query", "name": "getPlaceholder", "content": "{\n    repo(id: $repoId) {\n      ...CalendarRepoFragment\n    }\n  }\n  ${repoFragment}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Calendar/graphql.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!)"}, {"type": "query", "name": "searchRepo", "content": "{\n    repos: reposSearch(\n      first: 10\n      after: $after\n      search: $search\n      template: $template\n      isTemplate: false\n      isSeriesMaster: $isSeriesMaster\n      isSeriesEpisode: $isSeriesEpisode\n    ) {\n      totalCount\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      nodes {\n        id\n        meta {\n          publishDate\n        }\n        latestPublications {\n          document {\n            meta {\n              publishDate\n            }\n          }\n        }\n        latestCommit {\n          id\n          document {\n            id\n            meta {\n              title\n              shortTitle\n              image\n              description\n              credits\n              kind\n              color\n              shareLogo\n              shareBackgroundImage\n              shareBackgroundImageInverted\n              format {\n                id\n                repoId\n                meta {\n                  title\n                  color\n                  kind\n                }\n              }\n              section {\n                id\n                repoId\n                meta {\n                  title\n                  color\n                  kind\n                }\n              }\n              series {\n                title\n                description\n                logo\n                logoDark\n                overview {\n                  id\n                  repoId\n                  meta {\n                    path\n                  }\n                }\n                episodes {\n                  title\n                  publishDate\n                  label\n                  lead\n                  image\n                  document {\n                    id\n                    repoId\n                    meta {\n                      path\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/utils/RepoSearch.js", "repo": "orbiting_publikator-frontend"}, "arguments": "(\n    $after: String\n    $search: String\n    $template: String\n    $isSeriesMaster: Boolean\n    $isSeriesEpisode: Boolean\n  )"}, {"type": "query", "name": "getCommentEmbed", "content": "{\n    embed: comment(id: $id) {\n      __typename\n      id\n      text\n      tags\n      createdAt\n      updatedAt\n      parentIds\n      discussion {\n        id\n        title\n        path\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/modules/embed/index.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "RepoMemoEdit", "content": "{\n    memo: editMemo(id: $id, text: $text) {\n      ...RepoMemo\n    }\n  }\n  ${MemoFragment}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/modules/memo/graphql.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($id: ID!, $text: String!)"}, {"type": "query", "name": "getZones", "content": "{\n    search(\n      first: 10\n      sort: { key: publishedAt, direction: DESC }\n      filters: $filters\n      search: $search\n      before: $before\n      after: $after\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      nodes {\n        entity {\n          ... on DocumentZone {\n            id\n            data\n            node\n            document {\n              id\n              repoId\n              meta {\n                title\n                path\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/editor/modules/chart/EditOverlay/ChartCatalog.js", "repo": "orbiting_publikator-frontend"}, "arguments": "(\n    $filters: [SearchGenericFilterInput!]\n    $search: String\n    $before: String\n    $after: String\n  )"}, {"type": "query", "name": "repoListSearch", "content": "{\n    repos: reposSearch(\n      first: 50\n      after: $after\n      search: $search\n      phases: $phases\n      orderBy: $orderBy\n      isTemplate: $isTemplate\n    ) {\n      totalCount\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      nodes {\n        id\n        meta {\n          publishDate\n        }\n        latestCommit {\n          id\n          date\n          message\n          author {\n            name\n          }\n          document {\n            id\n            meta {\n              template\n              title\n              credits\n              series {\n                title\n                overview {\n                  id\n                  repoId\n                }\n                episodes {\n                  label\n                  document {\n                    id\n                    repoId\n                  }\n                }\n              }\n              section {\n                id\n                meta {\n                  title\n                }\n              }\n              format {\n                id\n                meta {\n                  title\n                }\n              }\n              dossier {\n                id\n                meta {\n                  title\n                }\n              }\n            }\n          }\n        }\n        latestPublications {\n          name\n          prepublication\n          live\n          scheduledAt\n          document {\n            id\n            meta {\n              path\n            }\n          }\n        }\n        currentPhase {\n          key\n          color\n          label\n        }\n      }\n    }\n    phasesAgg: reposSearch(search: $search, isTemplate: false) {\n      phases {\n        key\n        color\n        label\n        count\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Repo/Table.js", "repo": "orbiting_publikator-frontend"}, "arguments": "(\n    $after: String\n    $search: String\n    $phases: [RepoPhaseKey!]\n    $orderBy: RepoOrderBy\n    $isTemplate: Boolean\n  )"}, {"type": "mutation", "name": "editRepoMeta", "content": "{\n    editRepoMeta(repoId: $repoId, publishDate: $publishDate) {\n      ...EditPageRepo\n    }\n  }\n  ${EditPageRepo}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Repo/EditMetaDate.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!, $publishDate: DateTime)"}, {"type": "query", "name": "templateListSearch", "content": "{\n    reposSearch(isTemplate: true, first: 200) {\n      totalCount\n      nodes {\n        id\n        latestCommit {\n          id\n          document {\n            id\n            meta {\n              title\n              slug\n              template\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Repo/Add.js", "repo": "orbiting_publikator-frontend"}}, {"type": "query", "name": "repoMilestones", "content": "{\n    repo(id: $repoId) {\n      id\n      milestones {\n        ...MilestoneWithCommit\n      }\n    }\n  }\n  ${fragments.MilestoneWithCommit}", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/VersionControl/Checklist.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!)"}, {"type": "query", "name": "getUncommittedChanges", "content": "{\n    repo(id: $repoId) {\n      id\n      uncommittedChanges {\n        id\n        email\n        name\n        portrait(properties: { width: 160, height: 160 })\n      }\n      currentPhase {\n        lock\n      }\n    }\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/VersionControl/UncommittedChanges.js", "repo": "orbiting_publikator-frontend"}, "arguments": "($repoId: ID!)"}, {"type": "mutation", "name": "signOut", "content": "{\n    signOut\n  }", "metadata": {"commit_hash": "f887f11485a7c4362c16fb156014df5f097cd37d", "file": "components/Auth/SignOut.js", "repo": "orbiting_publikator-frontend"}}, {"type": "query", "name": "BlogAuthors", "content": "{\n    blogAuthors {\n      Name\n      Title\n      Image {\n        formats\n      }\n    }\n  }", "metadata": {"commit_hash": "7d4fb9ff93d346028d5d0c71c4512b2f7edf82bb", "file": "react-frontend/src/queries/blog/blogAuthors.js", "repo": "bcgov_digital.gov.bc.ca"}}, {"type": "query", "name": "BlogPosts", "content": "{\n    blogPosts(where: { uid: $uid }) {\n      Title\n      SubTitle\n      published_at\n      blog_author {\n        Name\n        Title\n        Image {\n          formats\n        }\n      }\n      CoverImage {\n        url\n      }\n      Content\n    }\n  }", "metadata": {"commit_hash": "7d4fb9ff93d346028d5d0c71c4512b2f7edf82bb", "file": "react-frontend/src/queries/blog/blog.js", "repo": "bcgov_digital.gov.bc.ca"}, "arguments": "($uid: String!)"}, {"type": "query", "name": "BlogPosts", "content": "{\n    blogPosts(sort: \"published_at:desc\") {\n      uid\n      Title\n      SubTitle\n      published_at\n      CoverImage {\n        formats\n      }\n      blog_author {\n        Name\n        Title\n        Image {\n          formats\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "7d4fb9ff93d346028d5d0c71c4512b2f7edf82bb", "file": "react-frontend/src/queries/blog/blogs.js", "repo": "bcgov_digital.gov.bc.ca"}}, {"type": "query", "name": "Livestream", "content": "{\n    digitalLivestreamContact {\n      SubscriptionURL\n      PastEpisodeURL\n    }\n    digitalBcLivestreams(limit: 1, sort: \"BroadcastTime:desc\") {\n      Description\n      BroadcastTime\n      EventImage {\n        url\n      }\n    }\n  }", "metadata": {"commit_hash": "7d4fb9ff93d346028d5d0c71c4512b2f7edf82bb", "file": "react-frontend/src/queries/digitalBCLivestream/livestreams.js", "repo": "bcgov_digital.gov.bc.ca"}}, {"type": "query", "name": "Community", "content": "{\n    communityPages(sort: \"Title:asc\") {\n      uid\n      Title\n      Description\n    }\n  }", "metadata": {"commit_hash": "7d4fb9ff93d346028d5d0c71c4512b2f7edf82bb", "file": "react-frontend/src/queries/community/communities.js", "repo": "bcgov_digital.gov.bc.ca"}}, {"type": "query", "name": "EventbriteEvents", "content": "{\n    eventbriteEvents(where: { IsCourse: $isClass }, sort: \"StartTime:asc\") {\n      Name\n      Description\n      Url\n      ImageUrl\n      IsCourse\n      IsSeries\n      SeriesUID\n      EventID\n      StartTime\n    }\n  }", "metadata": {"commit_hash": "7d4fb9ff93d346028d5d0c71c4512b2f7edf82bb", "file": "react-frontend/src/queries/learning/events.js", "repo": "bcgov_digital.gov.bc.ca"}, "arguments": "($isClass: Boolean!)"}, {"type": "query", "name": "statusReport", "content": "{\n        getStatusReport: report(\n          minRequiredRecords: 1\n          start: $start\n          end: $end\n          questionnaire: $questionSetID\n          tags: $tags\n          orTags: $orTags\n        ) {\n          ...latestAggregationFragment\n        }\n      }\n      ${latestAggregationFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/reports/index.ts", "repo": "impactasaurus_app"}, "arguments": "(\n        $start: String!\n        $end: String!\n        $questionSetID: String!\n        $tags: [String]\n        $orTags: Boolean\n      )"}, {"type": "query", "name": "getCatalogueQuestionnaire", "content": "{\n        getCatalogueQuestionnaire: catalogueQuestionnaire(\n          id: $id\n          source: \"softoutcomes\"\n        ) {\n          ...catalogueOutcomeSet\n        }\n      }\n      ${catalogueFragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/catalogue/index.ts", "repo": "impactasaurus_app"}, "arguments": "($id: String!)"}, {"type": "query", "name": "getAllMeetings", "content": "{\n    getIncompleteMeetings: incompleteMeetings(beneficiary: $beneficiaryID) {\n      ...meetingWithOutcomeSetAndAggregates\n    }\n    getMeetings: meetings(beneficiary: $beneficiaryID) {\n      ...meetingWithOutcomeSetAndAggregates\n    }\n  }\n  ${fragmentWithOutcomeSetAndAggregates}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}, "arguments": "($beneficiaryID: String!)"}, {"type": "mutation", "name": "DeleteMeeting", "content": "{\n        DeleteMeeting(meetingID: $meetingID)\n      }", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}, "arguments": "($meetingID: String!)"}, {"type": "mutation", "name": "EditMeetingDate", "content": "{\n        editMeetingDate: EditMeetingDate(\n          meetingID: $meetingID\n          conducted: $conducted\n        ) {\n          ...meetingWithOutcomeSetAndAggregates\n        }\n      }\n      ${fragmentWithOutcomeSetAndAggregates}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/meetings/index.ts", "repo": "impactasaurus_app"}, "arguments": "($meetingID: String!, $conducted: String!)"}, {"type": "query", "name": "getSequence", "content": "{\n        sequence(id: $id) {\n          ...defaultSequence\n        }\n      }\n      ${fragment}", "metadata": {"commit_hash": "f9ee947b66c84ec2922b78dbc935cfac836d6ec4", "file": "src/app/apollo/modules/sequence/index.ts", "repo": "impactasaurus_app"}, "arguments": "($id: String!)"}, {"type": "query", "name": "QUERY_GET_CHECKOUT_URL", "content": "{\n        checkoutUrl\n    }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/checkout/queries/QUERY_GET_CHECKOUT_URL.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "query", "name": "QUERY_GET_CART", "content": "{\n    cart {\n      id\n      cartItems {\n        id\n        title\n        description\n        handle\n        categoryHandle\n        quantityAvailable\n        quantity\n        image\n        price\n        note\n      }\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/checkout/queries/QUERY_GET_CART.ts", "repo": "SkyCaptainess_Shopify-nextjs"}}, {"type": "mutation", "name": "MUTATION_UPDATE_QUANTITY", "content": "{\n    updateCartQuantity(itemId: $itemId, quantity: $quantity) {\n        success\n        message\n        data\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/checkout/mutations/MUTATION_UPDATE_CART_ITEM.ts", "repo": "SkyCaptainess_Shopify-nextjs"}, "arguments": "($itemId: String!, $quantity: Int!)"}, {"type": "query", "name": "QUERY_GET_ORDER", "content": "{\n    order(orderId: $orderId) {\n        id\n        orderItems {\n          quantity\n          title\n          image\n          total\n          productHandle\n          categoryHandle\n        }\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/order/queries/QUERY_GET_ORDER.ts", "repo": "SkyCaptainess_Shopify-nextjs"}, "arguments": "($orderId: String!)"}, {"type": "query", "name": "QUERY_GET_PRODUCT_AVAILABILITY", "content": "{\n        productAvailability(handle: $handle) {\n            id\n            availableForSale\n            totalInventory \n        }\n    }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/product/queries/QUERY_GET_PRODUCT_AVAILABILITY.ts", "repo": "SkyCaptainess_Shopify-nextjs"}, "arguments": "($handle: String!)"}, {"type": "mutation", "name": "MUTATION_SIGNIN_EMAIL", "content": "{\n    signinEmail(email: $email, password: $password) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/user/mutations/MUTATION_SIGNIN_EMAIL.ts", "repo": "SkyCaptainess_Shopify-nextjs"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "MUTATION_CHECKOUT_ADDRESS", "content": "{\n    populateCheckout(shippingAddress: $shippingAddress) {\n      success\n      message\n      data\n    }\n  }", "metadata": {"commit_hash": "568b3ac0e31ef43907dcedc1f52889f8b62bd46b", "file": "frontend-structure/address/mutations/MUTATION_CHECKOUT_ADDRESS.ts", "repo": "SkyCaptainess_Shopify-nextjs"}, "arguments": "($shippingAddress: ShippingAddressInput)"}, {"type": "mutation", "name": "CreateLapTime", "content": "{\n      createLapTime(input: $input, condition: $condition) {\n        id\n        raceId\n        playerId\n        player {\n          id\n          claims {\n            items {\n              id\n              uuid\n              username\n            }\n          }\n          car {\n            id\n            color\n          }\n        }\n        timeInMilliSec\n        type\n        createdAt\n        updatedAt\n      }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceDataReceiver/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}, "arguments": "(\n      $input: CreateLapTimeInput!\n      $condition: ModelLapTimeConditionInput\n    )"}, {"type": "mutation", "name": "CreateOverview", "content": "{\n      createOverview(input: $input, condition: $condition) {\n        id\n    }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}, "arguments": "(\n      $input: CreateOverviewInput!\n      $condition: ModelOverviewConditionInput\n    )"}, {"type": "mutation", "name": "CreatePlayer", "content": "{\n      createPlayer(input: $input, condition: $condition) {\n        id\n    }}", "metadata": {"commit_hash": "ad6ec6833e6cb3c4fbe40051bd21adb1670dba0f", "file": "RaceFrontend/amplify/backend/function/raceOperations/src/utils/graphql-statements.js", "repo": "aws-samples_realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams"}, "arguments": "(\n      $input: CreatePlayerInput!\n      $condition: ModelPlayerConditionInput\n    )"}, {"type": "query", "name": "FetchCommissions", "content": "{\n    commissions {\n      id\n      name\n      openSeats\n      homepageUrl\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/commissions-app/src/client/graphql/fetch-commissions.ts", "repo": "CityOfBoston_digital"}}, {"type": "query", "name": "SearchDeathCertificates", "content": "{\n    deathCertificates {\n      search(\n        query: $query\n        page: $page\n        startYear: $startYear\n        endYear: $endYear\n      ) {\n        page\n        pageSize\n        pageCount\n        resultCount\n        results {\n          id\n          firstName\n          lastName\n          deathYear\n          deathDate\n          pending\n          age\n          birthDate\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/search-death-certificates.ts", "repo": "CityOfBoston_digital"}, "arguments": "(\n    $query: String!\n    $page: Int!\n    $startYear: String\n    $endYear: String\n  )"}, {"type": "mutation", "name": "DeleteBirthCertificateUploadedFile", "content": "{\n    deleteUpload(\n      type: BC\n      attachmentKey: $attachmentKey\n      uploadSessionID: $uploadSessionId\n    ) {\n      message\n      success\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/delete-birth-certificate-uploaded-file.ts", "repo": "CityOfBoston_digital"}, "arguments": "(\n    $attachmentKey: String!\n    $uploadSessionId: String!\n  )"}, {"type": "mutation", "name": "SubmitDeathCertificateOrder", "content": "{\n    submitDeathCertificateOrder(\n      contactName: $contactName\n      contactEmail: $contactEmail\n      confirmContactEmail: $confirmContactEmail\n      contactPhone: $contactPhone\n      shippingName: $shippingName\n      shippingCompanyName: $shippingCompanyName\n      shippingAddress1: $shippingAddress1\n      shippingAddress2: $shippingAddress2\n      shippingCity: $shippingCity\n      shippingState: $shippingState\n      shippingZip: $shippingZip\n      cardToken: $cardToken\n      cardLast4: $cardLast4\n      cardholderName: $cardholderName\n      billingAddress1: $billingAddress1\n      billingAddress2: $billingAddress2\n      billingCity: $billingCity\n      billingState: $billingState\n      billingZip: $billingZip\n      items: $items\n      idempotencyKey: $idempotencyKey\n    ) {\n      order {\n        id\n      }\n      error {\n        message\n        cause\n      }\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/submit-death-certificate-order.ts", "repo": "CityOfBoston_digital"}, "arguments": "(\n    $contactName: String!\n    $contactEmail: String!\n    $confirmContactEmail: String!\n    $contactPhone: String!\n    $shippingName: String!\n    $shippingCompanyName: String!\n    $shippingAddress1: String!\n    $shippingAddress2: String!\n    $shippingCity: String!\n    $shippingState: String!\n    $shippingZip: String!\n    $cardToken: String!\n    $cardLast4: String!\n    $cardholderName: String!\n    $billingAddress1: String!\n    $billingAddress2: String!\n    $billingCity: String!\n    $billingState: String!\n    $billingZip: String!\n    $items: [DeathCertificateOrderItemInput!]!\n    $idempotencyKey: String!\n  )"}, {"type": "mutation", "name": "SubmitMarriageCertificateOrder", "content": "{\n    submitMarriageCertificateOrder(\n      contactName: $contactName\n      contactEmail: $contactEmail\n      confirmContactEmail: $confirmContactEmail\n      contactPhone: $contactPhone\n      shippingName: $shippingName\n      shippingCompanyName: $shippingCompanyName\n      shippingAddress1: $shippingAddress1\n      shippingAddress2: $shippingAddress2\n      shippingCity: $shippingCity\n      shippingState: $shippingState\n      shippingZip: $shippingZip\n      cardToken: $cardToken\n      cardLast4: $cardLast4\n      cardholderName: $cardholderName\n      billingAddress1: $billingAddress1\n      billingAddress2: $billingAddress2\n      billingCity: $billingCity\n      billingState: $billingState\n      billingZip: $billingZip\n      item: $item\n      idempotencyKey: $idempotencyKey\n    ) {\n      order {\n        id\n      }\n      error {\n        message\n        cause\n      }\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/submit-marriage-certificate-order.ts", "repo": "CityOfBoston_digital"}, "arguments": "(\n    $contactName: String!\n    $contactEmail: String!\n    $confirmContactEmail: String!\n    $contactPhone: String!\n    $shippingName: String!\n    $shippingCompanyName: String!\n    $shippingAddress1: String!\n    $shippingAddress2: String!\n    $shippingCity: String!\n    $shippingState: String!\n    $shippingZip: String!\n    $cardToken: String!\n    $cardLast4: String!\n    $cardholderName: String!\n    $billingAddress1: String!\n    $billingAddress2: String!\n    $billingCity: String!\n    $billingState: String!\n    $billingZip: String!\n    $item: MarriageCertificateOrderItemInput!\n    $idempotencyKey: String!\n  )"}, {"type": "mutation", "name": "DeleteMarriageCertificateUploadedFile", "content": "{\n    deleteUpload(\n      type: MC\n      attachmentKey: $attachmentKey\n      uploadSessionID: $uploadSessionId\n    ) {\n      message\n      success\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/registry-certs/client/queries/delete-marriage-certificate-uploaded-file.ts", "repo": "CityOfBoston_digital"}, "arguments": "(\n    $attachmentKey: String!\n    $uploadSessionId: String!\n  )"}, {"type": "query", "name": "FetchAccount", "content": "{\n    account {\n      employeeId\n      firstName\n      lastName\n      needsMfaDevice\n      needsNewPassword\n      hasMfaDevice\n      resetPasswordToken\n      mfaRequiredDate\n      groups\n      email\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/access-boston/src/client/graphql/fetch-account.ts", "repo": "CityOfBoston_digital"}}, {"type": "mutation", "name": "VerifyMfaDevice", "content": "{\n    verifyMfaDevice(sessionId: $sessionId, pairingCode: $pairingCode) {\n      success\n      error\n    }\n  }", "metadata": {"commit_hash": "bb8edd55fc4f0537a2ae3fc429b9708d4b2e215d", "file": "services-js/access-boston/src/client/graphql/verify-mfa-device.ts", "repo": "CityOfBoston_digital"}, "arguments": "($sessionId: String!, $pairingCode: String!)"}, {"type": "query", "name": "getEntity", "content": "{\n    linkedToken(token: $token) {\n      ... on FullProvider {\n        id\n        firstName\n        lastName\n        neighborhood\n        city\n        state\n        country\n        latitude\n        address\n        longitude\n        facility\n        email\n        role\n        description\n        requests {\n          type\n          satisfied\n        }\n        active\n      }\n    }\n  }", "metadata": {"commit_hash": "5e9ad0842300f9fd2c1d60fa00bf0311375e29bd", "file": "app/javascript/packs/hooks/useTokenEntity.js", "repo": "feedadoc_feedadoc"}, "arguments": "($token: String!)"}, {"type": "mutation", "name": "UpdateProvider", "content": "{\n    updateProvider(\n      input: {\n        token: $token\n        firstName: $firstName\n        lastName: $lastName\n        neighborhood: $neighborhood\n        city: $city\n        state: $state\n        country: $country\n        email: $email\n        facility: $facility\n        address: $address\n        role: $role\n        requests: $requests\n        description: $description\n        active: $active\n        latitude: $latitude\n        longitude: $longitude\n      }\n    ) {\n      errors\n      provider {\n        id\n        firstName\n        lastName\n        neighborhood\n        city\n        state\n        facility\n        email\n        role\n        description\n        requests {\n          type\n          satisfied\n        }\n        active\n      }\n    }\n  }", "metadata": {"commit_hash": "5e9ad0842300f9fd2c1d60fa00bf0311375e29bd", "file": "app/javascript/packs/hooks/useTokenEntity.js", "repo": "feedadoc_feedadoc"}, "arguments": "(\n    $token: String!\n    $firstName: String!\n    $lastName: String\n    $neighborhood: String\n    $city: String!\n    $state: String!\n    $email: String!\n    $country: String!\n    $facility: String\n    $role: String!\n    $requests: [String!]!\n    $description: String!\n    $latitude: Float!\n    $longitude: Float!\n    $address: String!\n    $active: Boolean!\n  )"}, {"type": "query", "name": "Provider", "content": "{\n    provider(id: $id) {\n      id\n      firstName\n      city\n      state\n      neighborhood\n      role\n      facility\n      description\n      active\n      createdAt\n      requests {\n        type\n        satisfied\n      }\n    }\n  }", "metadata": {"commit_hash": "5e9ad0842300f9fd2c1d60fa00bf0311375e29bd", "file": "app/javascript/packs/pages/ProviderPage.jsx", "repo": "feedadoc_feedadoc"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Provider", "content": "{\n    provider(id: $id) {\n      id\n      firstName\n      requests {\n        type\n        satisfied\n      }\n    }\n  }", "metadata": {"commit_hash": "5e9ad0842300f9fd2c1d60fa00bf0311375e29bd", "file": "app/javascript/packs/pages/volunteer_signup/VolunteerStepper.jsx", "repo": "feedadoc_feedadoc"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "ListPosts", "content": "{\n    allPosts {\n      id\n      description\n      sections\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next/pages/index.js", "repo": "department-stockholm_apollo-component"}}, {"type": "query", "name": "ListInvalidPosts", "content": "{\n    allPosts {\n      idz\n      description\n      sections\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next/pages/index.js", "repo": "department-stockholm_apollo-component"}}, {"type": "mutation", "name": "AddOrder", "content": "{\n    createOrder(name: $name) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next/pages/index.js", "repo": "department-stockholm_apollo-component"}, "arguments": "($name: String!)"}, {"type": "query", "name": "ListDirectories", "content": "{\n    allDirectories(filter: { parent: $parent }) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "a06624bfa1dcc5167fb89fa2ef56fe2cbb3709af", "file": "examples/next/pages/recursive.js", "repo": "department-stockholm_apollo-component"}, "arguments": "($parent: DirectoryFilter)"}, {"type": "query", "name": "GetLaunch", "content": "{\n    launch(id: $launchId) {\n      id\n      mission_name\n      details\n      rocket {\n        rocket_name\n        rocket_type\n      }\n      ships {\n        name\n        type\n      }\n      links {\n        flickr_images\n      }\n    }\n  }", "metadata": {"commit_hash": "2f40fbd3173a81a3e904090c7d526b93d87c1e89", "file": "app/containers/LaunchDetails/queries.ts", "repo": "wednesday-solutions_react-graphql-ts-template"}, "arguments": "($launchId: ID!)"}, {"type": "query", "name": "launches", "content": "{\n    launches(\n      find: { mission_name: $missionName }\n      sort: \"launch_date_utc\"\n      order: $order\n      limit: $limit\n      offset: $offset\n    ) {\n      id\n      launch_date_utc\n      launch_date_unix\n      mission_name\n      links {\n        wikipedia\n        flickr_images\n      }\n    }\n  }", "metadata": {"commit_hash": "2f40fbd3173a81a3e904090c7d526b93d87c1e89", "file": "app/containers/HomeContainer/queries.ts", "repo": "wednesday-solutions_react-graphql-ts-template"}, "arguments": "($missionName: String, $order: String, $limit: Int, $offset: Int)"}, {"type": "query", "name": "search", "content": "{\n    search(queryString: $queryString, type: $type) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on User {\n              ...userInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "admin/src/api/queries.js", "repo": "DoBestMan_spectrum"}, "arguments": "($queryString: String!, $type: SearchType!)"}, {"type": "query", "name": "recentCommunities", "content": "{\n      recentCommunities {\n        ...communityInfo\n        ...communityMembers\n      }\n    }\n    ${communityInfoFragment}\n    ${communityMemberConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "admin/src/api/community.js", "repo": "DoBestMan_spectrum"}, "arguments": "($filter: MemberConnectionFilter)"}, {"type": "mutation", "name": "saveUserCommunityPermissions", "content": "{\n    saveUserCommunityPermissions(input: $input) {\n      ...userInfo\n      ...userCommunities\n    }\n  }\n  ${userInfoFragment}\n  ${userCommunitiesFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "admin/src/api/mutations.js", "repo": "DoBestMan_spectrum"}, "arguments": "(\n    $input: SaveUserCommunityPermissionsInput!\n  )"}, {"type": "query", "name": "loadMoreNotifications", "content": "{\n    notifications(after: $after) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...notificationInfo\n        }\n      }\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/notification/getNotifications.js", "repo": "DoBestMan_spectrum"}, "arguments": "($after: String)"}, {"type": "query", "name": "getNotifications", "content": "{\n    notifications {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...notificationInfo\n        }\n      }\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/notification/getNotifications.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "searchUsers", "content": "{\n    search(queryString: $queryString, type: $type, filter: $filter) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on User {\n              ...userInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/search/searchUsers.js", "repo": "DoBestMan_spectrum"}, "arguments": "(\n    $queryString: String!\n    $type: SearchType!\n    $filter: SearchFilter\n  )"}, {"type": "query", "name": "searchCommunityMembers", "content": "{\n    search(queryString: $queryString, type: $type, filter: $filter) {\n      searchResultsConnection {\n        edges {\n          node {\n            ... on CommunityMember {\n              ...communityMemberInfo\n            }\n          }\n        }\n      }\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/search/searchCommunityMembers.js", "repo": "DoBestMan_spectrum"}, "arguments": "(\n    $queryString: String!\n    $type: SearchType!\n    $filter: SearchFilter\n  )"}, {"type": "query", "name": "getThreadMessages", "content": "{\n    thread(id: $id) {\n      ...threadInfo\n      ...threadMessageConnection\n    }\n  }\n  ${threadInfoFragment}\n  ${threadMessageConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/thread/getThreadMessageConnection.js", "repo": "DoBestMan_spectrum"}, "arguments": "(\n    $id: ID!\n    $after: String\n    $first: Int\n    $before: String\n    $last: Int\n  )"}, {"type": "query", "name": "getChannelById", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/channel/getChannel.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getChannelSettings", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/channel/getChannelSettings.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getChannelThreadConnection", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelThreadConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelThreadConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/channel/getChannelThreadConnection.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID, $after: String)"}, {"type": "query", "name": "loadMoreChannelThreads", "content": "{\n    channel(id: $id) {\n      ...channelInfo\n      ...channelThreadConnection\n    }\n  }\n  ${channelInfoFragment}\n  ${channelThreadConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/channel/getChannelThreadConnection.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID, $after: String)"}, {"type": "query", "name": "getCommunityById", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunity.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCommunityByMatch", "content": "{\n    community(slug: $slug) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunity.js", "repo": "DoBestMan_spectrum"}, "arguments": "($slug: LowercaseString)"}, {"type": "query", "name": "loadMoreCommunityThreads", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityThreadConnection\n    }\n  }\n  ${threadInfoFragment}\n  ${communityInfoFragment}\n  ${communityThreadConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunityThreadConnection.js", "repo": "DoBestMan_spectrum"}, "arguments": "(\n    $after: String\n    $id: ID\n    $sort: CommunityThreadConnectionSort\n  )"}, {"type": "query", "name": "getCommunitiesCollection", "content": "{\n    communities(curatedContentType: $curatedContentType) {\n      ...communityInfo\n      ...communityMetaData\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunities.js", "repo": "DoBestMan_spectrum"}, "arguments": "($curatedContentType: String)"}, {"type": "query", "name": "getCommunityChannels", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunityChannelConnection.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCommunityTopAndNewThreads", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      topAndNewThreads {\n        topThreads {\n          ...threadInfo\n        }\n        newThreads {\n          ...threadInfo\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}\n  ${threadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunityTopAndNewThreads.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getCommunityMemberGrowth", "content": "{\n    community(id: $id) {\n      ...communityInfo\n      memberGrowth {\n        count\n        weeklyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n        monthlyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n        quarterlyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/community/getCommunityMemberGrowth.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getUserById", "content": "{\n    user(id: $id) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/user/getUser.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID)"}, {"type": "query", "name": "getUserByUsername", "content": "{\n    user(username: $username) {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/user/getUser.js", "repo": "DoBestMan_spectrum"}, "arguments": "($username: LowercaseString)"}, {"type": "query", "name": "getCurrentUser", "content": "{\n    user: currentUser {\n      ...userInfo\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/user/getUser.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "getCurrentUserSettings", "content": "{\n    user: currentUser {\n      ...userInfo\n      email\n      pendingEmail\n      ...userSettings\n    }\n  }\n  ${userInfoFragment}\n  ${userSettingsFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/user/getCurrentUserSettings.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "getDirectMessageThreadByUserIds", "content": "{\n    directMessageThreadByUserIds(userIds: $userIds) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/queries/directMessageThread/getDirectMessageThreadByUserIds.js", "repo": "DoBestMan_spectrum"}, "arguments": "($userIds: [ID!])"}, {"type": "mutation", "name": "uploadImage", "content": "{\n    uploadImage(input: $input)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/uploadImage.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: UploadImageInput!)"}, {"type": "mutation", "name": "markSingleNotificationSeen", "content": "{\n    markSingleNotificationSeen(id: $id)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/notification/markSingleNotificationSeen.js", "repo": "DoBestMan_spectrum"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "addCommunityModerator", "content": "{\n    addCommunityModerator(input: $input) {\n      ...communityMemberInfo\n    }\n  }\n  ${communityMemberInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/addCommunityModerator.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: AddCommunityModeratorInput!)"}, {"type": "mutation", "name": "removeCommunityMember", "content": "{\n    removeCommunityMember(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/removeCommunityMember.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: RemoveCommunityMemberInput!)"}, {"type": "mutation", "name": "removePendingCommunityMember", "content": "{\n    removePendingCommunityMember(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/removePendingCommunityMember.js", "repo": "DoBestMan_spectrum"}, "arguments": "(\n    $input: RemovePendingCommunityMemberInput!\n  )"}, {"type": "mutation", "name": "addCommunityMembers", "content": "{\n    addCommunityMembers(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communityChannelConnection\n    }\n  }\n  ${communityInfoFragment}\n  ${communityMetaDataFragment}\n  ${communityChannelConnectionFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/communityMember/addCommunityMembers.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: AddCommunityMembersInput!)"}, {"type": "mutation", "name": "setThreadLock", "content": "{\n    setThreadLock(threadId: $threadId, value: $value) {\n      id\n      isLocked\n    }\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/lockThread.js", "repo": "DoBestMan_spectrum"}, "arguments": "($threadId: ID!, $value: Boolean!)"}, {"type": "mutation", "name": "editThread", "content": "{\n    editThread(input: $input) {\n      ...threadInfo\n    }\n  }\n  ${threadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/thread/editThread.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: EditThreadInput!)"}, {"type": "mutation", "name": "deleteChannel", "content": "{\n    deleteChannel(channelId: $channelId)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/deleteChannel.js", "repo": "DoBestMan_spectrum"}, "arguments": "($channelId: ID!)"}, {"type": "mutation", "name": "createChannel", "content": "{\n    createChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/createChannel.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: CreateChannelInput!)"}, {"type": "mutation", "name": "enableChannelTokenJoin", "content": "{\n    enableChannelTokenJoin(input: $input) {\n      ...channelInfo\n      joinSettings {\n        tokenJoinEnabled\n        token\n      }\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/enableChannelTokenJoin.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: EnableChannelTokenJoinInput!)"}, {"type": "mutation", "name": "restoreChannel", "content": "{\n    restoreChannel(input: $input) {\n      ...channelInfo\n    }\n  }\n  ${channelInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/channel/restoreChannel.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: RestoreChannelInput!)"}, {"type": "mutation", "name": "setCommunityLastSeen", "content": "{\n    setCommunityLastSeen(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/setCommunityLastSeen.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: SetCommunityLastSeenInput!)"}, {"type": "mutation", "name": "enableCommunityTokenJoin", "content": "{\n    enableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/enableCommunityTokenJoin.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: EnableCommunityTokenJoinInput!)"}, {"type": "mutation", "name": "disableCommunityTokenJoin", "content": "{\n    disableCommunityTokenJoin(input: $input) {\n      ...communityInfo\n      ...communityMetaData\n      ...communitySettings\n    }\n  }\n  ${communityInfoFragment}\n  ${communitySettingsFragment}\n  ${communityMetaDataFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/disableCommunityTokenJoin.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: DisableCommunityTokenJoinInput!)"}, {"type": "mutation", "name": "pinThread", "content": "{\n    pinThread(threadId: $threadId, communityId: $communityId, value: $value) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/pinCommunityThread.js", "repo": "DoBestMan_spectrum"}, "arguments": "($threadId: ID!, $communityId: ID!, $value: String)"}, {"type": "mutation", "name": "sendEmailInvites", "content": "{\n    sendEmailInvites(input: $input)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/sendCommunityEmailInvites.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: EmailInvitesInput!)"}, {"type": "mutation", "name": "createCommunity", "content": "{\n    createCommunity(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/createCommunity.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: CreateCommunityInput!)"}, {"type": "mutation", "name": "editCommunity", "content": "{\n    editCommunity(input: $input) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/community/editCommunity.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: EditCommunityInput!)"}, {"type": "mutation", "name": "toggleNotificationSettings", "content": "{\n    toggleNotificationSettings(input: $input) {\n      ...userInfo\n      ...userSettings\n    }\n  }\n  ${userInfoFragment}\n  ${userSettingsFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/toggleUserNotificationSettings.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: ToggleNotificationSettingsInput)"}, {"type": "mutation", "name": "updateUserEmail", "content": "{\n    updateUserEmail(email: $email) {\n      ...userInfo\n      email\n      pendingEmail\n    }\n  }\n  ${userInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/updateUserEmail.js", "repo": "DoBestMan_spectrum"}, "arguments": "($email: LowercaseString!)"}, {"type": "mutation", "name": "deleteCurrentUser", "content": "{\n    deleteCurrentUser\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/deleteCurrentUser.js", "repo": "DoBestMan_spectrum"}}, {"type": "mutation", "name": "reportUser", "content": "{\n    reportUser(input: $input)\n  }", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/user/reportUser.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: ReportUserInput!)"}, {"type": "mutation", "name": "createDirectMessageThread", "content": "{\n    createDirectMessageThread(input: $input) {\n      ...directMessageThreadInfo\n    }\n  }\n  ${directMessageThreadInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/mutations/directMessageThread/createDirectMessageThread.js", "repo": "DoBestMan_spectrum"}, "arguments": "($input: DirectMessageThreadInput!)"}, {"type": "subscription", "name": "subscribeToNewMessages", "content": "{\n    messageAdded(thread: $thread) {\n      ...messageInfo\n    }\n  }\n  ${messageInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/subscriptions/index.js", "repo": "DoBestMan_spectrum"}, "arguments": "($thread: ID!)"}, {"type": "subscription", "name": "subscribeToNewNotifications", "content": "{\n    notificationAdded {\n      ...notificationInfo\n    }\n  }\n  ${notificationInfoFragment}", "metadata": {"commit_hash": "c89a73cd4c383781b731e2f885a19c9d3cd25ba6", "file": "shared/graphql/subscriptions/index.js", "repo": "DoBestMan_spectrum"}}, {"type": "query", "name": "getStatus", "content": "{\n      status(id: $id) ${presenceResult}\n    }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "presencedemo/src/graphql/operations.js", "repo": "aws-samples_aws-appsync-presence-api"}, "arguments": "($id: ID!)"}, {"type": "subscription", "name": "statusChanged", "content": "{\n      onStatus(id: $id) ${presenceResult}\n    }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "presencedemo/src/graphql/operations.js", "repo": "aws-samples_aws-appsync-presence-api"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "disconnected", "content": "{\n    disconnected(id: $id) {\n      id\n      status\n    }\n  }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "src/functions/on_disconnect/on_disconnect.js", "repo": "aws-samples_aws-appsync-presence-api"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "connectPlayer", "content": "{\n    connect(id: $id) ${presenceResult}\n  }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "test/integration/apiclient.ts", "repo": "aws-samples_aws-appsync-presence-api"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "disconnectPlayer", "content": "{\n    disconnect(id: $id) ${presenceResult}\n  }", "metadata": {"commit_hash": "01766ed7ae320bc36d8208935a9dd86b0e6f10e5", "file": "test/integration/apiclient.ts", "repo": "aws-samples_aws-appsync-presence-api"}, "arguments": "($id: ID!)"}, {"type": "mutation", "name": "RefreshToken", "content": "{\n    refreshToken\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/utils/refreshToken.ts", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "CardModelSaleTransfers", "content": "{\n    cardModelSaleTransfers(filter: { cardModelId: $cardModelId }, sort: $sort) {\n      id\n      fromOwner {\n        user {\n          slug\n          username\n        }\n      }\n      toOwner {\n        user {\n          slug\n          username\n          profile {\n            pictureUrl(derivative: \"width=128\")\n            fallbackUrl(derivative: \"width=128\")\n          }\n        }\n      }\n      card {\n        serialNumber\n      }\n      price\n      date\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/CardTransfers.ts", "repo": "ruleslabs_interface"}, "arguments": "($cardModelId: ID!, $sort: CardTransfersSort!)"}, {"type": "query", "name": "LastSaleOrGiftCardTransfer", "content": "{\n    lastSaleOrGiftCardTransfer {\n      fromOwner {\n        user {\n          slug\n          username\n          profile {\n            pictureUrl(derivative: \"width=128\")\n            fallbackUrl(derivative: \"width=128\")\n          }\n        }\n      }\n      toOwner {\n        user {\n          slug\n          username\n          profile {\n            pictureUrl(derivative: \"width=128\")\n            fallbackUrl(derivative: \"width=128\")\n          }\n        }\n      }\n      card {\n        serialNumber\n      }\n      cardModel {\n        id\n        slug\n        videoUrl\n        pictureUrl(derivative: \"width=1024\")\n        season\n        scarcity {\n          maxSupply\n          name\n        }\n        artistName\n      }\n      price\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/CardTransfers.ts", "repo": "ruleslabs_interface"}}, {"type": "mutation", "name": "RevokeSession", "content": "{\n    revokeRefreshToken(payload: $payload)\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}, "arguments": "($payload: String)"}, {"type": "mutation", "name": "RequestPasswordUpdate", "content": "{\n    requestPasswordUpdate(input: { email: $email, recaptchaTokenV2: $recaptchaTokenV2 })\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}, "arguments": "($email: String!, $recaptchaTokenV2: String!)"}, {"type": "mutation", "name": "UpdatePassword", "content": "{\n    updatePassword(\n      input: {\n        email: $email\n        newPassword: $newPassword\n        walletPublicKey: $walletPublicKey\n        rulesPrivateKey: $rulesPrivateKey\n        token: $token\n      }\n    ) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/Auth.ts", "repo": "ruleslabs_interface"}, "arguments": "(\n    $email: String!\n    $newPassword: String!\n    $walletPublicKey: String!\n    $rulesPrivateKey: RulesPrivateKeyAttributes!\n    $token: String!\n  )"}, {"type": "query", "name": "CurrentUser", "content": "{\n    currentUser {\n      id\n      username\n      email\n      slug\n      boughtStarterPack\n      cScore\n      rank\n      unreadNotificationsCount\n      retrievableEthers {\n        amount\n        l1Recipient\n      }\n      starknetWallet {\n        address\n        oldAddress\n        publicKey\n        currentPublicKey\n        currentOldPublicKey\n        maintenance\n        rulesPrivateKey {\n          salt\n          iv\n          encryptedPrivateKey\n        }\n      }\n      hasTwoFactorAuthActivated\n      profile {\n        pictureUrl(derivative: \"width=320\")\n        customAvatarUrl(derivative: \"width=320\")\n        fallbackUrl(derivative: \"width=320\")\n        twitterUsername\n        instagramUsername\n        isDiscordVisible\n        certified\n        discordMember {\n          username\n          discriminator\n          avatarUrl(derivative: \"width=320\")\n          guildAvatarUrl(derivative: \"width=320\")\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/CurrentUser.ts", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "HallOfFame", "content": "{\n    users(sort: $sort, after: $after, first: $first) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      edges {\n        node {\n          username\n          slug\n          cScore(season: $season)\n          rank(season: $season)\n          profile {\n            pictureUrl(derivative: \"width=128\")\n            fallbackUrl(derivative: \"width=128\")\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/users.ts", "repo": "ruleslabs_interface"}, "arguments": "($season: Int!, $sort: UsersSortInput!, $after: String, $first: Int)"}, {"type": "query", "name": "Ruledex", "content": "{\n    user(slug: $slug) {\n      ruledex(filter: { season: $season }) {\n        ruledexCardModels {\n          cardModel {\n            slug\n            uid\n            scarcity {\n              id\n            }\n            pictureUrl(derivative: \"width=256\")\n          }\n          owned\n          badges {\n            type\n            level\n          }\n        }\n        ruledexScarcities {\n          balance\n          maxBalance\n          scarcityId\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/graphql/data/ruledex.ts", "repo": "ruleslabs_interface"}, "arguments": "($season: Int!, $slug: String!)"}, {"type": "query", "name": "CertifiedUsersOverview", "content": "{\n    certifiedUsersOverview {\n      slug\n      username\n      cScore\n      rank\n      profile {\n        certified\n        pictureUrl(derivative: \"width=512\")\n        fallbackUrl(derivative: \"width=512\")\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/pages/Community.tsx", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "CurrentUserSearchedUsers", "content": "{\n    currentUser {\n      searchedUsers {\n        slug\n        username\n        cScore\n        rank\n        profile {\n          pictureUrl(derivative: \"width=512\")\n          fallbackUrl(derivative: \"width=512\")\n          certified\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "1d25cce31cbe4cf743b2a988c040178690ace18e", "file": "src/pages/Community.tsx", "repo": "ruleslabs_interface"}}, {"type": "query", "name": "blocks", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "ebf99c18ddc95fae3390a656e31d0ac169a435e1", "file": "src/pages/about.js", "repo": "ninja-1337_Personal-Blog"}, "arguments": "($timestamp: Int!)"}, {"type": "query", "name": "blocks", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "ebf99c18ddc95fae3390a656e31d0ac169a435e1", "file": "src/components/ticker.js", "repo": "ninja-1337_Personal-Blog"}, "arguments": "($timestamp: Int!)"}, {"type": "query", "name": "blocks", "content": "{\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "ebf99c18ddc95fae3390a656e31d0ac169a435e1", "file": "src/components/protocolData.js", "repo": "ninja-1337_Personal-Blog"}, "arguments": "($timestamp: Int!)"}, {"type": "query", "name": "GetPost", "content": "{\n    article(id: $id){\n        id,\n        title,\n        description,\n        author{\n          name\n        },\n        categories{\n          name\n        },\n        image{\n            url\n        },\n        created_at,\n        slug,\n        content\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/pages/PostDetail.js", "repo": "ngocphucnguyen256_news-cms-frontend"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "GetAds", "content": "{\n    ads(where:{\n      location: $location\n    }){\n          id,\n          url,\n          banner{\n            url\n          }\n    }\n}", "metadata": {"commit_hash": "b10e1e47987b3ba4e693e774b8710d448beda796", "file": "src/partials/AdsSlider.js", "repo": "ngocphucnguyen256_news-cms-frontend"}, "arguments": "($location: String!)"}, {"type": "mutation", "name": "AddPost", "content": "{\n        addPost(content: $content, imgUrls: $imgUrls, isPrivate: $isPrivate, teamID: $teamID) {\n            content\n            _id\n            isPined\n            imgUrls\n            numberOfLikes\n            lastModifyDate\n            user {\n                name\n                avatarUrl\n            }\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($imgUrls: [String!], $isPrivate: Boolean, $content: String!, $teamID: String!)"}, {"type": "mutation", "name": "addPostComment", "content": "{\n        addPostComment(content: $content, teamID: $teamID, postID: $postID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($teamID: String!, $content: String!, $postID: String!)"}, {"type": "mutation", "name": "DeletePost", "content": "{\n        deletePost(postID: $postID, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($postID: String!, $teamID: String!)"}, {"type": "mutation", "name": "LikePost", "content": "{\n        likePost(postID: $postID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($postID: String!)"}, {"type": "mutation", "name": "SetPostPrivate", "content": "{\n        setPostPrivate(isPrivate: $isPrivate, postID: $postID, teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($isPrivate: Boolean!, $postID: String!, $teamID: String!)"}, {"type": "query", "name": "userLikedPost", "content": "{\n        userLikedPost(postID: $postID) {\n            isLiked\n            likedNum\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($postID: String!)"}, {"type": "mutation", "name": "AddMembers", "content": "{\n        addMembers(teamID: $teamID, userIDs: $userIDs)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($teamID: String!, $userIDs: [String!]!)"}, {"type": "mutation", "name": "ApplyTeam", "content": "{\n        applyTeam(teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($teamID: String!)"}, {"type": "mutation", "name": "QuitTeamAsCoach", "content": "{\n        quitTeamAsCoach(teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($teamID: String!)"}, {"type": "mutation", "name": "QuitTeamAsMember", "content": "{\n        quitTeamAsMember(teamID: $teamID)\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($teamID: String!)"}, {"type": "query", "name": "GetMembers", "content": "{\n        getMembers(teamID: $teamID) {\n            users {\n                name\n                _id\n                sport\n                phone\n                email\n                address\n                avatarUrl\n            }\n            isCoach\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($teamID: String!)"}, {"type": "query", "name": "GetMyTeamIDs", "content": "{\n        getMyTeams {\n            _id\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetTeamIDs", "content": "{\n        getTeams {\n            team {\n                _id\n            }\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}}, {"type": "query", "name": "GetTeamPageStatic", "content": "{\n        getTeam(teamID: $teamID) {\n            team {\n                name\n                _id\n                imgUrl\n                description\n            }\n        }\n        getPosts(teamID: $teamID, limit: 10, skip: 0) {\n            content\n            _id\n            isPined\n            imgUrls\n            numberOfLikes\n            lastModifyDate\n            user {\n                name\n                avatarUrl\n            }\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($teamID: String!)"}, {"type": "mutation", "name": "Login", "content": "{\n        login(email: $email, password: $password) {\n            user {\n                _id\n                name\n                avatarUrl\n                bannerUrls\n                introduction\n            }\n            accessToken\n        }\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "Register", "content": "{\n        register(input: { email: $email, password: $password, firstName: $firstName, lastName: $lastName })\n    }", "metadata": {"commit_hash": "5be1b0acc7276da56bacf71056baaaeb87b55c5c", "file": "next/generated/graphql.tsx", "repo": "JimmyRowland_team_sporty"}, "arguments": "($email: String!, $password: String!, $firstName: String!, $lastName: String!)"}, {"type": "mutation", "name": "UPDATE_CLIENT", "content": "{\n    updateClient(input: { id: $id, name: $name, email: $email }) {\n      id\n      name\n      email\n    }\n  }", "metadata": {"commit_hash": "182740b7e289d56a59af3397d0a28153e8f3f2ab", "file": "clientServerExampleWithGraphQL/packages/web/src/components/ClientEdit.js", "repo": "AlbertoVictorRebello_hiringCoders2022"}, "arguments": "($id: ID!, $name: String!, $email: String!)"}, {"type": "mutation", "name": "clearProfilePicture", "content": "{\n  clearProfilePicture\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}}, {"type": "mutation", "name": "login", "content": "{\n  login(username: $username, password: $password)\n}", "metadata": {"commit_hash": "cf2c30451c410f58c910e7e445834ed76415600e", "file": "client/src/generated/graphql.tsx", "repo": "JulianGaibler_archive"}, "arguments": "($username: String!, $password: String!)"}, {"type": "query", "name": "category", "content": "{\n    category(id: $id) {\n      id\n      name\n      description\n      imageUrl\n      projectCount\n      subcategories(orderBy: $orderBy, orderDirection: $orderDirection) {\n        id\n        name\n        description\n        imageUrl\n        projectCount\n        projects {\n          id\n          name\n          description\n          avatar\n          createdAt\n          currentChallenge {\n            id\n          }\n          categories {\n            id\n            name\n          }\n        }\n      }\n      parentCategory {\n        id\n        name\n        parentCategory {\n          id\n          name\n        }\n      }\n      projects {\n        id\n        name\n        image\n        description\n        avatar\n        createdAt\n        isRepresentative\n        currentChallenge {\n          id\n        }\n        categories {\n          id\n          name\n          description\n          parentCategory {\n            id\n            name\n          }\n          subcategories {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}, "arguments": "(\n    $id: ID!\n    $orderBy: Category_orderBy\n    $orderDirection: OrderDirection\n  )"}, {"type": "query", "name": "projects", "content": "{\n    projects(\n      orderBy: $orderBy\n      orderDirection: $orderDirection\n      where: $where\n      first: $first\n      skip: $skip\n    ) {\n      id\n      name\n      image\n      description\n      avatar\n      createdAt\n      isRepresentative\n      currentChallenge {\n        id\n      }\n      categories {\n        id\n        name\n        description\n        parentCategory {\n          id\n          name\n        }\n        subcategories {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}, "arguments": "(\n    $orderBy: Project_orderBy\n    $orderDirection: OrderDirection\n    $where: Project_filter\n    $first: Int\n    $skip: Int\n  )"}, {"type": "query", "name": "profile", "content": "{\n    user(id: $id) {\n      id\n      projects(\n        orderBy: $orderBy\n        orderDirection: $orderDirection\n        where: $where\n      ) {\n        id\n        name\n        description\n        avatar\n        image\n        website\n        github\n        twitter\n        isRepresentative\n        createdAt\n        delegates {\n          id\n        }\n        currentChallenge {\n          id\n        }\n        categories {\n          id\n          name\n          imageUrl\n          parentCategory {\n            id\n            name\n          }\n          subcategories {\n            id\n            name\n            imageUrl\n            parentCategory {\n              id\n              name\n            }\n            subcategories {\n              id\n              name\n              imageUrl\n              parentCategory {\n                id\n                name\n                parentCategory {\n                  id\n                  name\n                }\n              }\n              subcategories {\n                id\n                name\n                imageUrl\n                parentCategory {\n                  id\n                  name\n                  parentCategory {\n                    id\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      delegatorProjects {\n        id\n        name\n        description\n        createdAt\n        avatar\n        currentChallenge {\n          id\n        }\n        categories {\n          id\n          name\n          parentCategory {\n            id\n            name\n          }\n          subcategories {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/queries.js", "repo": "cryptosguru_everest"}, "arguments": "(\n    $id: ID!\n    $orderBy: Project_orderBy\n    $orderDirection: OrderDirection\n    $where: Project_filter\n  )"}, {"type": "mutation", "name": "editProject", "content": "{\n    editProject(\n      projectId: $projectId\n      name: $name\n      description: $description\n      avatar: $avatar\n      image: $image\n      website: $website\n      github: $github\n      twitter: $twitter\n      isRepresentative: $isRepresentative\n      categories: $categories\n    ) @client {\n      id\n      name\n      description\n      avatar\n      image\n      categories\n      currentChallenge {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}, "arguments": "(\n    $projectId: String!\n    $name: String!\n    $description: String!\n    $avatar: String\n    $image: String\n    $website: String\n    $github: String\n    $twitter: String\n    $isRepresentative: Boolean\n    $categories: any\n  )"}, {"type": "mutation", "name": "challengeProject", "content": "{\n    challengeProject(\n      challengingProjectAddress: $challengingProjectAddress\n      challengedProjectAddress: $challengedProjectAddress\n      details: { description: $description }\n    ) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/utils/apollo/mutations.js", "repo": "cryptosguru_everest"}, "arguments": "(\n    $challengingProjectAddress: String!\n    $challengedProjectAddress: String!\n    $description: String!\n  )"}, {"type": "mutation", "name": "uploadImage", "content": "{\n    uploadImage(image: $image) @client\n  }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "ui/src/components/UploadImage/index.js", "repo": "cryptosguru_everest"}, "arguments": "($image: File!)"}, {"type": "mutation", "name": "addProject", "content": "{\n            addProject(\n              name: $name\n              description: $description\n              avatar: $avatar\n              image: $image\n              website: $website\n              github: $github\n              twitter: $twitter\n              isRepresentative: $isRepresentative\n              categories: $categories\n            ) @client\n          }", "metadata": {"commit_hash": "60ed57eca0fb27d3b0e7565f4d639ca77f953af4", "file": "subgraph/mutations/src/__tests__/index.test.ts", "repo": "cryptosguru_everest"}, "arguments": "(\n            $name: String\n            $description: String\n            $avatar: String\n            $image: String\n            $website: String\n            $github: String\n            $twitter: String\n            $isRepresentative: Boolean\n            $categories: [Category]\n          )"}, {"type": "query", "name": "GetGameIndex", "content": "{\n    games {\n      id\n      slug\n      name\n    }\n  }", "metadata": {"commit_hash": "69c789098b97c62f32df2f41440eb553dd01b9b8", "file": "src/pages/index.tsx", "repo": "jeremyBanks_speedruns"}}, {"type": "query", "name": "GetRunPage", "content": "{\n    game(slug: $gameSrcSlug) {\n      id\n      srcId\n      slug\n      slug\n      name\n    }\n\n    run(srcId: $runSrcId) {\n      id\n      srcId\n      timeMs\n      videos\n      category {\n        id\n        srcId\n        name\n      }\n      level {\n        id\n        srcId\n        slug\n        name\n      }\n      date\n      players {\n        name\n        isGuest\n        user {\n          id\n          srcId\n          slug\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "69c789098b97c62f32df2f41440eb553dd01b9b8", "file": "src/pages/[game]/run/[runSrcId].tsx", "repo": "jeremyBanks_speedruns"}, "arguments": "($gameSrcSlug: String!, $runSrcId: ID!)"}, {"type": "query", "name": "GetRepo", "content": "{\n\t\trepository(owner: $orgName, name: $repoName) {\n\t\t\tid\n\t\t\tname\n\t\t\tdescription\n\t\t\tviewerHasStarred\n\t\t\tstargazers {\n\t\t\t\ttotalCount\n\t\t\t}\n\t\t\tissues(last: 5) {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\turl\n\t\t\t\t\t\tpublishedAt\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "c48d3ae3258de432ad57c54808b16737c5523f1c", "file": "src/components/RepoSearch.tsx", "repo": "hesbon-osoro_repository-search"}, "arguments": "($orgName: String!, $repoName: String!)"}, {"type": "mutation", "name": "update_todo", "content": "{\n    update_todo(where: {id: {_eq: $todoId}} _set: $set) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/todo-auth0-jwt/todo-app/src/Todo/graphQueries/todoQueries.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($todoId: Int, $set: todo_set_input!)"}, {"type": "mutation", "name": "insert_author", "content": "{\n    insert_author(objects: { name: $name }) {\n      returning {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/gatsby-postgres-graphql/src/components/AddAuthor.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($name: String!)"}, {"type": "query", "name": "author", "content": "{\n    author(offset: $skip, limit: 5) {\n      id\n      name\n    }\n    author_aggregate {\n      aggregate {\n        count\n      }\n    }  \n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/nextjs-8-serverless/with-apollo/components/AuthorList.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($skip: Int!)"}, {"type": "mutation", "name": "update_todos", "content": "{\n    update_todos(_set: {is_completed: $done}, where: {id: {_eq: $todoId}}) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n      }\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($todoId: Int!, $done: Boolean)"}, {"type": "mutation", "name": "delete_todos", "content": "{\n    delete_todos(where: {id: {_eq: $todoId}}) {\n      affected_rows\n    }\n}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/vuetify-vuex-todo-graphql/src/store.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($todoId: Int!)"}, {"type": "mutation", "name": "insert_todos", "content": "{\n    insert_todos(objects: $objects) {\n      affected_rows\n      returning {\n        id\n        text\n        is_completed\n        created_at\n        is_public\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($objects: [todos_insert_input!]!)"}, {"type": "mutation", "name": "delete_todos", "content": "{\n    delete_todos(where: { id: { _eq: $todoId } }) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/react-apollo-todo/src/components/Todo/TodoQueries.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($todoId: Int)"}, {"type": "subscription", "name": "getLocation", "content": "{\n            vehicle(where: {id: {_eq: $vehicleId}}) {\n                locations(order_by: {timestamp:desc}, limit: 1) {\n                    location\n                    timestamp\n                }\n            }\n        }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-location-tracking/src/App/App.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($vehicleId: String!)"}, {"type": "mutation", "name": "insert_vehicle_location", "content": "{\n        insert_vehicle_location (objects: $objects){\n          returning {\n            id\n          }\n        }\n      }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/realtime-location-tracking/src/Vehicle/Vehicle.js", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($objects: [vehicle_location_insert_input!]! )"}, {"type": "query", "name": "GroupDetailsScreenQuery", "content": "{\n    chat(where:{id: {_eq: $chatId}}) {\n        ...chat\n      users {\n        user {\n          ...user\n        }\n      }\n    }\n  }\n  ${fragments.chat}\n  ${fragments.user}", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/GroupDetailsScreen/index.tsx", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($chatId: Int!)"}, {"type": "mutation", "name": "MessageBoxMutation", "content": "{\n    insert_message(objects: [{chat_id: $chatId, content: $content, sender_id: $sender_id}]) {\n      affected_rows\n      returning {\n        id\n        content\n        created_at\n        sender_id\n        chat_id\n        chat {\n          id\n        }\n        sender {\n          id\n          name\n        }\n        recipients {\n          user {\n            id\n          }\n          message {\n            id\n            chat {\n              id\n            }\n          }\n          received_at\n          read_at\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/MessageBox.tsx", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($chatId: Int!, $content: String!, $sender_id: Int!)"}, {"type": "mutation", "name": "deleteChat", "content": "{\n    delete_chat_users(where:{chat_id:{_eq: $chatId}}) {\n      affected_rows\n    }\n    delete_message(where:{chat_id:{_eq: $chatId}}) {\n      affected_rows\n    }\n    delete_chat(where:{id: {_eq: $chatId}}) {\n      affected_rows\n    }\n  }", "metadata": {"commit_hash": "b93da39b5c6764b00157ee59d35a414f08b7253f", "file": "community/sample-apps/whatsapp-clone-typescript-react/react-app/src/components/ChatRoomScreen/ChatNavbar.tsx", "repo": "shinesanthosh_graphql-engine"}, "arguments": "($chatId: Int!)"}, {"type": "mutation", "name": "login", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "addUser", "content": "{\n    addUser(username: $username, password: $password, email: $email) {\n      token\n      user {\n        username\n        _id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "ec7ff1d5a92741de24dc63ac05a39c35db36f20c", "file": "client/src/utils/mutations.js", "repo": "wcastellan_talkie-box"}, "arguments": "($username: String!, $password: String!, $email: String!)"}, {"type": "mutation", "name": "Create_expense", "content": "{\n    create_expense(data: $data) {\n      status\n      msg\n    }\n  }", "metadata": {"commit_hash": "41b64e2f3217ee051deab49ece56432c7a65835d", "file": "src/components/Transactions/AddTransactionModal.js", "repo": "FrontPhoenix_phoenix-finance"}, "arguments": "($data: ExpenseInfo!)"}, {"type": "query", "name": "GetBrowseCategoriesAndBrands", "content": "{\n    categories(where: { visible: true }, orderBy: position_ASC) {\n      id\n      slug\n      name\n      children {\n        id\n        slug\n      }\n      position\n    }\n    brands(orderBy: name_ASC, where: { products_some: { id_not: null }, name_not: null, published: true }) {\n      id\n      slug\n      name\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Browse/queries/browseQueries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "GetBrowseProducts", "content": "{\n    productsConnection(\n      category: $categoryName\n      tops: $tops\n      colors: $colors\n      bottoms: $bottoms\n      availableOnly: $available\n      forSaleOnly: $forSaleOnly\n      brands: $brandNames\n      orderBy: $orderBy\n      first: $first\n      skip: $skip\n      where: { status: Available }\n    ) {\n      aggregate {\n        count\n      }\n      edges {\n        node {\n          id\n          slug\n          name\n          description\n          images(size: Thumb) {\n            id\n            url\n          }\n          modelSize {\n            id\n            display\n          }\n          modelHeight\n          externalURL\n          retailPrice\n          rentalPrice\n          status\n          type\n          createdAt\n          updatedAt\n          brand {\n            id\n            name\n          }\n          variants {\n            id\n            total\n            reservable\n            nonReservable\n            reserved\n            isSaved\n            displayLong\n            displayShort\n          }\n          ...ProductPriceText_Product\n        }\n      }\n    }\n  }\n  ${ProductPriceText_Product}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Browse/queries/browseQueries.ts", "repo": "seasons_harvest"}, "arguments": "(\n    $categoryName: String!\n    $brandNames: [String]\n    $colors: [String]\n    $first: Int!\n    $skip: Int!\n    $orderBy: ProductOrderByInput!\n    $tops: [String]\n    $bottoms: [String]\n    $available: Boolean\n    $forSaleOnly: Boolean\n  )"}, {"type": "mutation", "name": "SubmitOrder", "content": "{\n    submitOrder(input: $input) {\n      id\n      ...OrderFragment_Order\n    }\n  }\n  ${OrderFragment_Order}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}, "arguments": "($input: SubmitOrderInput!)"}, {"type": "mutation", "name": "ProductVariantCreateDraftOrder", "content": "{\n    createDraftedOrder(input: $input) {\n      id\n      ...OrderFragment_Order\n    }\n  }\n  ${OrderFragment_Order}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}, "arguments": "($input: CreateDraftedOrderInput!)"}, {"type": "mutation", "name": "AddToBag", "content": "{\n    addToBag(item: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/BagQueries.ts", "repo": "seasons_harvest"}, "arguments": "($id: ID!)"}, {"type": "query", "name": "Product_NoCache_Query", "content": "{\n    me {\n      id\n      customer {\n        id\n        status\n        user {\n          id\n        }\n      }\n      bag {\n        id\n      }\n      savedItems {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Product/Queries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "SavedTab_Query", "content": "{\n    me {\n      id\n      ...SavedItemsTabFragment_Me\n    }\n  }\n  ${SavedItemsTabFragment_Me}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/SavedAndHistory/queries.ts", "repo": "seasons_harvest"}}, {"type": "query", "name": "HomepageNoCache_Query", "content": "{\n    reservationFeedback {\n      id\n      feedbacks {\n        id\n        isCompleted\n        questions {\n          id\n          options\n          question\n          responses\n          type\n        }\n        variant {\n          id\n          product {\n            id\n            name\n            retailPrice\n            images(size: Thumb) {\n              id\n              url\n            }\n          }\n        }\n      }\n    }\n    me {\n      id\n      customer {\n        id\n        status\n        shouldRequestFeedback\n        ...CustomerTraitsFragment_Customer\n      }\n      recentlyViewedProducts {\n        id\n        slug\n        images(size: Thumb) {\n          id\n          url\n        }\n        brand {\n          id\n          name\n        }\n        variants {\n          id\n          reservable\n          displayShort\n        }\n      }\n      savedItems {\n        id\n        productVariant {\n          id\n          product {\n            id\n            name\n            modelSize {\n              id\n              display\n            }\n            brand {\n              id\n              name\n            }\n            images(size: Medium) {\n              id\n              url\n            }\n            variants {\n              id\n              reservable\n              displayShort\n            }\n          }\n        }\n      }\n    }\n  }\n  ${CustomerTraitsFragment_Customer}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Home/queries/homeQueries.ts", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "triage", "content": "{\n    triageCustomer\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Undetermined/TriagePane/TriagePane.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "CheckCoupon", "content": "{\n    checkCoupon(couponID: $couponID) {\n      id\n      amount\n      percentage\n      type\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ApplyPromoCode/ApplyPromoCodePane.tsx", "repo": "seasons_harvest"}, "arguments": "($couponID: String!)"}, {"type": "mutation", "name": "ChangeCustomerPlan", "content": "{\n    changeCustomerPlan(planID: $planID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/CreateAccount/Admitted/ChoosePlanPane/ChoosePlanPane.tsx", "repo": "seasons_harvest"}, "arguments": "($planID: String!)"}, {"type": "mutation", "name": "AddProductRequest", "content": "{\n    addProductRequest(reason: $reason, url: $url) {\n      id\n      sku\n      brand\n      description\n      images\n      name\n      price\n      priceCurrency\n      productID\n      url\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ProductRequest/ProductRequest.tsx", "repo": "seasons_harvest"}, "arguments": "($reason: String!, $url: String!)"}, {"type": "query", "name": "GetCustomer", "content": "{\n    shippingMethods {\n      id\n      displayText\n      code\n      position\n      timeWindows {\n        id\n        startTime\n        endTime\n        display\n      }\n    }\n    me {\n      id\n      user {\n        id\n        firstName\n        lastName\n        email\n      }\n      bagSections {\n        id\n        status\n        bagItems {\n          id\n          ...BagItemFragment_BagItem\n        }\n      }\n      reservationLineItems(filterBy: NewItems, shippingCode: $shippingCode) {\n        id\n        name\n        price\n        recordType\n      }\n      customer {\n        id\n        admissions {\n          id\n          allAccessEnabled\n        }\n        detail {\n          id\n          phoneNumber\n          shippingAddress {\n            id\n            address1\n            address2\n            city\n            state\n            zipCode\n            shippingOptions {\n              id\n              externalCost\n              averageDuration\n              shippingMethod {\n                id\n                code\n                displayText\n              }\n            }\n          }\n        }\n        billingInfo {\n          id\n          brand\n          last_digits\n        }\n      }\n    }\n  }\n  ${BagItemFragment_BagItem}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Reservation/Reservation.tsx", "repo": "seasons_harvest"}, "arguments": "($shippingCode: String)"}, {"type": "mutation", "name": "ReturnItems", "content": "{\n    returnItems(items: $items, returnReasons: $returnReasons) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/ReturnYourBag.tsx", "repo": "seasons_harvest"}, "arguments": "($items: [ID!]!, $returnReasons: [ReturnReasonInput!])"}, {"type": "mutation", "name": "CancelReturn", "content": "{\n    cancelReturn {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Bag/Components/BagReturnFlowSubtitle.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "setStylePreferences", "content": "{\n    addCustomerDetails(\n      details: {\n        stylePreferences: {\n          create: {\n            styles: { set: $styles }\n            patterns: { set: $patterns }\n            colors: { set: $colors }\n            brands: { set: $brands }\n          }\n        }\n      }\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/EditStylePreferences/EditStylePreferences.tsx", "repo": "seasons_harvest"}, "arguments": "($styles: [String!], $patterns: [String!], $colors: [String!], $brands: [String!])"}, {"type": "mutation", "name": "applePayUpdatePaymentMethod", "content": "{\n    applePayUpdatePaymentMethod(planID: $planID, token: $token, tokenType: $tokenType)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/PaymentAndShipping/PaymentAndShipping.tsx", "repo": "seasons_harvest"}, "arguments": "($planID: String!, $token: StripeToken!, $tokenType: String)"}, {"type": "mutation", "name": "updatePaymentAndShipping", "content": "{\n    updatePaymentAndShipping(shippingAddress: $shippingAddress, phoneNumber: $phoneNumber)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/PaymentAndShipping/EditPaymentAndShipping.tsx", "repo": "seasons_harvest"}, "arguments": "($shippingAddress: AddressInput!, $phoneNumber: String!)"}, {"type": "query", "name": "GetUserPreferences", "content": "{\n    me {\n      id\n      customer {\n        id\n        user {\n          id\n          createdAt\n          firstName\n          lastName\n          email\n        }\n        detail {\n          id\n          shoeSize\n          pantLength\n          topSizes\n          waistSizes\n          phoneNumber\n          shippingAddress {\n            id\n            name\n            address1\n            address2\n            zipCode\n            city\n            state\n          }\n          stylePreferences {\n            id\n            styles\n            patterns\n            colors\n            brands\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Account/PersonalPreferences/PersonalPreferences.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "Faq", "content": "{\n    faq {\n      sections {\n        title\n        subsections {\n          title\n          text\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/Faq/Faq.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "ReservationFeedback_Query", "content": "{\n    reservationFeedback {\n      id\n      feedbacks {\n        id\n        isCompleted\n        review\n        rating\n        questions {\n          id\n          options\n          question\n          responses\n          type\n        }\n        variant {\n          id\n          product {\n            id\n            name\n            retailPrice\n            brand {\n              id\n              name\n            }\n            images(size: Thumb) {\n              id\n              url\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Scenes/ReservationFeedback/ReservationFeedbackModal.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "BeamsData", "content": "{\n    me {\n      id\n      user {\n        email\n        beamsToken\n        roles\n      }\n    }\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Notifications/NotificationsProvider.tsx", "repo": "seasons_harvest"}}, {"type": "query", "name": "PauseModal_Query", "content": "{\n    ...PauseReasonPupUpFragment_Query\n  }\n  ${PauseReasonPupUpFragment_Query}", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Components/Pause/PauseModal.tsx", "repo": "seasons_harvest"}}, {"type": "mutation", "name": "ResumeSubscription", "content": "{\n    resumeSubscription(subscriptionID: $subscriptionID)\n  }", "metadata": {"commit_hash": "5ceee271d0c5285c4146a757cea07c90a1b6af8c", "file": "src/Components/Pause/PauseButtons.tsx", "repo": "seasons_harvest"}, "arguments": "($subscriptionID: String!)"}, {"type": "query", "name": "GetPairsDataWithVolume", "content": "{\n    pairDayDatas(\n      first: $time\n      orderBy: $orderBy\n      orderDirection: $orderDir\n      where: { pairAddress: $pairId }\n    ) {\n      reserveUSD\n      dailyVolumeUSD\n      date\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/queries/farms/index.ts", "repo": "BOTDeFi_botdex-frontend"}, "arguments": "($orderBy: String, $orderDir: String, $pairId: String)"}, {"type": "query", "name": "GetPairs", "content": "{\n    pairs(where: { id: $pairId }) {\n      id\n      name\n      token0 {\n        id\n        name\n        symbol\n        derivedUSD\n      }\n      token1 {\n        id\n        name\n        symbol\n        derivedUSD\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/queries/pairs/index.ts", "repo": "BOTDeFi_botdex-frontend"}, "arguments": "($pairId: String)"}, {"type": "query", "name": "GetTokenPairs", "content": "{\n    pairs(where: { token0: $tokenAddress }) {\n      id\n      name\n      token0 {\n        id\n        name\n        symbol\n      }\n      token1 {\n        id\n        name\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/queries/pairs/index.ts", "repo": "BOTDeFi_botdex-frontend"}, "arguments": "($tokenAddress: String)"}, {"type": "query", "name": "GetVotes", "content": "{\n    votes(where: { proposal: $proposalId }) {\n      id\n      voter\n      created\n      choice\n      space {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/services/api/snapshot.org/useGetProposalVotes.ts", "repo": "BOTDeFi_botdex-frontend"}, "arguments": "($proposalId: String!)"}, {"type": "query", "name": "GetProposalsPreview", "content": "{\n    proposals(\n      first: $first\n      skip: $skip\n      orderBy: \"end\"\n      orderDirection: desc\n      where: {\n        space_in: [$space]\n        # state: \"closed\"\n      }\n    ) {\n      id\n      title\n      # body\n      # choices\n      # start\n      # end\n      # snapshot\n      state\n      # author\n      # space {\n      #   id\n      #   name\n      # }\n      created\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/services/api/snapshot.org/useGetProposalsPreview.ts", "repo": "BOTDeFi_botdex-frontend"}, "arguments": "($first: Int!, $skip: Int!, $space: String!)"}, {"type": "query", "name": "GetBalanceOnBlock", "content": "{\n    balanceHistories(\n      first: 1\n      orderBy: BlockNumber\n      orderDirection: desc\n      where: { BlockNumber_lte: $block_number, User: $user_address }\n    ) {\n      TotalBalance\n      BlockNumber\n      User {\n        id\n        TotalBalance\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/services/api/refinery-finance-pairs/useGetBalanceByBlock.ts", "repo": "BOTDeFi_botdex-frontend"}, "arguments": "($user_address: String!, $block_number: BigInt!)"}, {"type": "query", "name": "Swap", "content": "{\n    swaps(where: { from: $address }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/components/sections/Trade/Swap/index.tsx", "repo": "BOTDeFi_botdex-frontend"}, "arguments": "($address: String!)"}, {"type": "query", "name": "User", "content": "{\n    liquidityPositionSnapshots(\n      where: { user: $address, mintOrBurn: true }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n        reserve0\n        reserve1\n      }\n      transaction {\n        mints {\n          amount0\n          amount1\n          transaction {\n            id\n          }\n        }\n        burns {\n          amount0\n          amount1\n          transaction {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "e3c541093ee959b168398526a4c51c639b1b1d51", "file": "src/components/sections/Trade/Liquidity/index.tsx", "repo": "BOTDeFi_botdex-frontend"}, "arguments": "($address: String!)"}, {"type": "query", "name": "getAppointmentQuery", "content": "{\n    appointment(\n      date: $date\n      startTime: $startTime\n      morningOrEvening: $morningOrEvening\n      endTime: $endTime\n      duration: $duration\n      price: $price\n      bookedWithCardSquareID: $bookedWithCardSquareID\n      client: {\n        firstName: $firstName\n        lastName: $lastName\n        email: $email\n        phoneNumber: $phoneNumber\n      }\n    ) {\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      treatments {\n        name\n        duration\n        price\n      }\n      addOns {\n        name\n        duration\n        price\n      }\n      client {\n        firstName\n        lastName\n        email\n        phoneNumber\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/queries/getAppointmentQuery.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}, "arguments": "(\n    $date: String\n    $startTime: String\n    $morningOrEvening: String\n    $endTime: String\n    $duration: Int\n    $price: Int\n    $firstName: String\n    $lastName: String\n    $email: String\n    $phoneNumber: String\n    $bookedWithCardSquareID: String\n  )"}, {"type": "mutation", "name": "addAppointmentMutation", "content": "{\n    addAppointment(\n      date: $date\n      startTime: $startTime\n      morningOrEvening: $morningOrEvening\n      endTime: $endTime\n      duration: $duration\n      price: $price\n      esthetician: $esthetician\n      client: {\n        firstName: $firstName\n        lastName: $lastName\n        email: $email\n        phoneNumber: $phoneNumber\n        squareCustomerId: $squareCustomerId\n        unsavedSquareCardIDs: $unsavedSquareCardIDs\n      }\n      treatments: $treatments\n      addOns: $addOns\n      bookedWithCardSquareID: $bookedWithCardSquareID\n      notes: $notes\n    ) {\n      date\n      startTime\n      morningOrEvening\n      endTime\n      duration\n      price\n      createdAt\n      esthetician\n      client {\n        firstName\n        lastName\n        email\n        phoneNumber\n        squareCustomerId\n        unsavedSquareCardIDs\n      }\n      treatments {\n        name\n        price\n        duration\n      }\n      addOns {\n        name\n        price\n        duration\n      }\n      bookedWithCardSquareID\n      notes\n      confirmed\n    }\n  }", "metadata": {"commit_hash": "66e94354202080f411f3dd52b25d4c6acc5620e8", "file": "Client/src/graphql/mutations/addAppointmentMutation.js", "repo": "CertifiedDeveloper_Microservices-GrowLabs-master"}, "arguments": "(\n    $date: String!\n    $startTime: String!\n    $morningOrEvening: String!\n    $endTime: String!\n    $duration: Int!\n    $price: Int!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $phoneNumber: String!\n    $esthetician: String!\n    $squareCustomerId: String\n    $unsavedSquareCardIDs: String\n    $bookedWithCardSquareID: String\n    $treatments: [TreatmentInput]\n    $addOns: [AddOnInput]\n    $notes: String\n  )"}, {"type": "mutation", "name": "getQuestions", "content": "{\n    questions \n      @rest(\n          type: \"Question\" \n          path: \"/voc\" \n          method: \"GET\"\n      ) {\n      id\n      title\n      createdAt\n      username\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/voc/ApolloVoc.js", "repo": "ymkmoon_toyseven-react"}}, {"type": "mutation", "name": "submitQuestion", "content": "{\n    question(body: $body) \n      @rest(\n          type: \"Question\" \n          path: \"/voc/question\" \n          method: \"POST\"\n          bodyKey: \"body\"\n      ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "3c53062270d13ce547d4f7989a6ffdac6714bfbb", "file": "src/pages/apollo/voc/ApolloVocQuestion.js", "repo": "ymkmoon_toyseven-react"}, "arguments": "($body: PublishablePostInput!)"}, {"type": "mutation", "name": "RegisterUser", "content": "{\n    registerUser(registerInput: $registerInput) {\n      id\n      name\n      username\n      email\n      password\n    }\n  }", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}, "arguments": "($registerInput: RegisterInput)"}, {"type": "mutation", "name": "LoginUser", "content": "{\n    loginUser(LoginInput: $loginInput) {\n      name\n      username\n      email\n      hulu\n      netflix\n      prime\n      disney\n      hbo\n      watched\n    }\n  }", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}, "arguments": "($loginInput: LoginInput)"}, {"type": "mutation", "name": "AddWatched", "content": "{\n  addWatched(addWatched: $addWatched) {\n    id,\n    username,\n    watched\n  }\n}", "metadata": {"commit_hash": "d67265e343060f38e2eb032bfc2336e845517fcd", "file": "src/archive/graphql/Mutation.js", "repo": "Gonzos-Greenery_BoBo"}, "arguments": "($addWatched: AddWatched)"}, {"type": "query", "name": "getVoters", "content": "{\n    pagination: proxy_votes_aggregate(distinct_on: voter) {\n      aggregate {\n        count\n      }\n    }\n    voters: proxy_votes(distinct_on: voter, limit: $limit, offset: $offset) {\n      voter\n      balance\n    }\n  }", "metadata": {"commit_hash": "704b2998e1b2fbb8ffc6c509c84d75aeaf37eafe", "file": "webapp/src/gql/myvoteeos.js", "repo": "eoscostarica_MyvoteEOS-proxy"}, "arguments": "($limit: Int = 15, $offset: Int = 0)"}, {"type": "mutation", "name": "insertEmail", "content": "{\n    insert_user_email_one(object: $object) {\n      id\n    }\n  }", "metadata": {"commit_hash": "704b2998e1b2fbb8ffc6c509c84d75aeaf37eafe", "file": "webapp/src/gql/myvoteeos.js", "repo": "eoscostarica_MyvoteEOS-proxy"}, "arguments": "($object: user_email_insert_input!)"}, {"type": "mutation", "name": "GoogleMutation", "content": "{\n          google(token: $googleToken) {\n            _id\n            firstName\n            lastName\n            image\n            email\n            wishListIds\n            wishLists {\n              _id\n              link\n              description\n              categoryIds\n              categories {\n                name\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}, "arguments": "($googleToken: String!)"}, {"type": "mutation", "name": "saveList", "content": "{\n          wishListCreateOne(\n            link: $link\n            categoryIds: $categories\n            userId: $userId\n            description: $description\n          ) {\n            isPublished\n            message\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}, "arguments": "(\n          $link: String!\n          $categories: [String!]!\n          $userId: String!\n          $description: String!\n        )"}, {"type": "query", "name": "getUser", "content": "{\n            userByIdLean(_id: $id) {\n              _id\n              firstName\n              lastName\n              image\n              email\n              wishListIds\n              wishLists {\n                _id\n                link\n                description\n                categoryIds\n                categories {\n                  name\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}, "arguments": "($id: MongoID!)"}, {"type": "mutation", "name": "deleteList", "content": "{\n          deleteListFromUser(wishListId: $wishListId, userId: $userId) {\n            success\n            message\n          }\n        }", "metadata": {"commit_hash": "7b54d7e61c75c20363b1889fbc4ce398a85c3b2d", "file": "frontend/store/profile.ts", "repo": "Enubia_buystuff4.me"}, "arguments": "($wishListId: String!, $userId: String!)"}, {"type": "query", "name": "Feed", "content": "{\n            currentUser {\n              login\n            }\n            feed(type: $type) {\n              createdAt\n              score\n              commentCount\n              id\n              postedBy {\n                login\n                html_url\n              }\n              vote {\n                vote_value\n              }\n              repository {\n                name\n                full_name\n                description\n                html_url\n                stargazers_count\n                open_issues_count\n                created_at\n                owner {\n                  avatar_url\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "7329a93316e283725f01eb3a8905af1f84aae288", "file": "client/Feed.ts", "repo": "it-efrem_Apollo-Angular"}, "arguments": "($type: FeedType!)"}, {"type": "query", "name": "ProfileData", "content": "{\n    getProfileData(id: $id) {\n      profilePicture\n      username\n      isOnline\n      connections {\n        pending {\n          id\n          username\n          isOnline\n          profilePicture\n          fullName\n        }\n        accepted {\n          id\n          username\n          isOnline\n          profilePicture\n          fullName\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "actions/userActions.js", "repo": "Nemanja02_Lobbia"}, "arguments": "($id: ID)"}, {"type": "query", "name": "ProfileData", "content": "{\n    getProfileData(id: $id) {\n      profilePicture\n      username\n      fullName\n      dateOfBirth\n      createdAt\n      isOnline\n      accountDescription\n      connections {\n        accepted {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "274634fa123d4597cc03f57d5f92d272429fc81b", "file": "components/ProfileShowcase/ProfileShowcase.js", "repo": "Nemanja02_Lobbia"}, "arguments": "($id: ID)"}, {"type": "query", "name": "singleUser", "content": "{\n        user(username: $username) {\n            _id\n            username\n            bugs {\n                _id\n                bugName\n                description\n            }\n        }\n    }", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/queries.js", "repo": "ggeils_Pest-Control"}, "arguments": "($username: String!)"}, {"type": "mutation", "name": "login", "content": "{\n    login(email: $email, password: $password) {\n    token\n    user {\n        _id\n        username\n    }\n    }\n}", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "addUser", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n    token\n    user {\n        _id\n        username\n        email\n        password\n    }\n    }\n}", "metadata": {"commit_hash": "6d94b4889dc5369a37aae1886f420a1957d5be80", "file": "client/src/utils/mutations.js", "repo": "ggeils_Pest-Control"}, "arguments": "($username: String!, $email: String!, $password: String!)"}, {"type": "query", "name": "Traffic", "content": "{\n    messages {\n      title\n      description\n      color\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Messages.js", "repo": "mtvu_nb-resource1"}}, {"type": "subscription", "name": "Traffic", "content": "{\n    messages {\n      title\n      description\n      color\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Messages.js", "repo": "mtvu_nb-resource1"}}, {"type": "query", "name": "Distribution", "content": "{\n    distribution {\n      region\n      percentage\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Distribution.js", "repo": "mtvu_nb-resource1"}}, {"type": "query", "name": "Traffic", "content": "{\n    traffic {\n      dps {\n        timestamp\n        value\n      }\n      total\n    }\n  }", "metadata": {"commit_hash": "e82961b4e08cc4bd7ec55445bdcad622c2713698", "file": "resources/realtime-dashboard-demo/client/src/components/Traffic.js", "repo": "mtvu_nb-resource1"}}, {"type": "mutation", "name": "LogoutMutation", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/LogoutController/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "query", "name": "FindListingsQuery", "content": "{\n    findListings {\n      id\n      name\n      pictureUrl\n      owner {\n        id\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "0afc47d53940dc04329f034b1b3372ecf72f2fe3", "file": "packages/controller/src/modules/FindListings/index.tsx", "repo": "darkhorsedev0716_fullstack-airbnb"}}, {"type": "mutation", "name": "mergeWithUser", "content": "{\n    mergeWithUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/pages/LoginPage/LoginPage.js", "repo": "oneclickdapp_swordy-bot"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "DeleteUserMutation", "content": "{\n    deleteUser(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/Users/Users.js", "repo": "oneclickdapp_swordy-bot"}, "arguments": "($id: String!)"}, {"type": "query", "name": "GAME_PAGE", "content": "{\n    gamePage(page: $page) {\n      games {\n        id\n        createdAt\n        updatedAt\n        playedAt\n        mintedAt\n        moves\n        black\n        white\n        externalUrl\n      }\n      count\n    }\n  }", "metadata": {"commit_hash": "01754bba8b2e40b3ffc961357ff15c6fb4c6a45a", "file": "web/src/components/GamesCell/GamesCell.js", "repo": "oneclickdapp_swordy-bot"}, "arguments": "($page: Int)"}, {"type": "query", "name": "lists", "content": "{\n    lists(url: $url) {\n      id_wishlist\n      name\n      listUrl\n      shareUrl\n      nbProducts\n      default\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/queries/getlists.js", "repo": "platformsh_fwp-prestashop"}, "arguments": "($url: String!)"}, {"type": "query", "name": "getProducts", "content": "{\n    products(listId: $listId, url: $url) {\n      datas\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/queries/getproducts.js", "repo": "platformsh_fwp-prestashop"}, "arguments": "($listId: Int!, $url: String!)"}, {"type": "mutation", "name": "addToList", "content": "{\n    addToList(\n      listId: $listId\n      productId: $productId\n      quantity: $quantity\n      productAttributeId: $productAttributeId\n      url: $url\n    ) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/addtolist.js", "repo": "platformsh_fwp-prestashop"}, "arguments": "($listId: Int!, $productId: Int!, $quantity: Int!, $productAttributeId: Int!, $url: String!)"}, {"type": "mutation", "name": "shareList", "content": "{\n    shareList(listId: $listId, userId: $userId) {\n      url\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/sharelist.js", "repo": "platformsh_fwp-prestashop"}, "arguments": "($listId: Int!, $userId: Int!)"}, {"type": "mutation", "name": "removeFromList", "content": "{\n    removeFromList(listId: $listId, productId: $productId, productAttributeId: $productAttributeId, url: $url) {\n      success\n      message\n    }\n  }", "metadata": {"commit_hash": "38d329cda2c6a0cf61b02a8c73f65fbc8542d226", "file": "init/modules/blockwishlist/_dev/front/js/graphql/mutations/removeFromList.js", "repo": "platformsh_fwp-prestashop"}, "arguments": "($listId: Int!, $productId: Int!, $productAttributeId: Int!, $url: String!)"}, {"type": "query", "name": "profiles", "content": "{\n  profiles {\n    _id\n    username\n    email\n    password\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "query", "name": "recipes", "content": "{\n    recipe {\n      _id\n      name\n      instructions\n      minutes\n      ingredients\n      reactions\n    }\n  }", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/queries.js", "repo": "jgarner828_TheKitchenSync"}}, {"type": "mutation", "name": "addProfile", "content": "{\n  addProfile(username: $username, email: $email, password: $password) {\n    token\n    profile {\n      _id\n      username\n      kitchen {\n        _id\n        name\n        quantity\n        uom\n        refrigerated\n        expires\n        purchaseDate\n      }\n      friends {\n        friends {\n          _id\n          username\n        }\n        recipes {\n          _id\n          name\n          instructions\n          minutes\n          ingredients {\n            _id\n            name\n            quantity\n            uom\n            refrigerated\n            expires\n            purchaseDate\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "cce28e917828cc7c2a79526a5663f04ae335fc8d", "file": "client/src/utils/mutations.js", "repo": "jgarner828_TheKitchenSync"}, "arguments": "($username: String!, $email: String!, $password: String!)"}, {"type": "query", "name": "getAccountRegistrations", "content": "{\n    account(id: $owner) {\n      registrations(orderBy: expiryDate) {\n        expiryDate\n        domain {\n          labelName\n          labelhash\n          name\n          isMigrated\n          parent {\n            name\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n  }", "metadata": {"commit_hash": "d7b9e0f01a162bbbf76d1b610315b400ded036ad", "file": "src/services/ApiService/Ens/queries.ts", "repo": "ubiq_pyrus"}, "arguments": "($owner: String)"}, {"type": "query", "name": "SendMessage", "content": "{\n    sendMessage (author: $author, recipient: $recipient, message: $message)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/sendMessage.ts", "repo": "hc-institute-japan_Kizuna-Redux"}, "arguments": "($author: ID, $recipient: ID, $message: String)"}, {"type": "mutation", "name": "AddContact", "content": "{\n    addContact(username: $username, timestamp: $timestamp) {\n      id\n      username\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/mutation/addContactMutation.ts", "repo": "hc-institute-japan_Kizuna-Redux"}, "arguments": "($username: String, $timestamp: Float)"}, {"type": "query", "name": "PrintProperties", "content": "{\n    printProperties \n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/printProperties.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "ListBlocked", "content": "{\n    listBlocked {\n        agent_id\n    }\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/listBlockedQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}}, {"type": "query", "name": "Username", "content": "{\n    username(address: $address)\n  }", "metadata": {"commit_hash": "98aad46caf1c02e299cb8e65b354c402dacc50f9", "file": "ui/src/graphql/query/usernameQuery.ts", "repo": "hc-institute-japan_Kizuna-Redux"}, "arguments": "($address: String)"}, {"type": "mutation", "name": "login", "content": "{\n      login(email: $email, password: $password) {\n          token\n          user {\n              _id\n          }\n      }\n  }", "metadata": {"commit_hash": "f843b88d9cd8c38fc94a84297a63e19a2c383a57", "file": "client/src/utils/mutations.js", "repo": "ottercreektourism_kernel"}, "arguments": "($email: String!, $password: String!)"}, {"type": "query", "name": "Articles", "content": "{\n    articles {\n      data {\n        attributes {\n          slug\n          title\n          content\n          description\n          publishedAt\n          category {\n            data {\n              attributes {\n                slug\n                name\n              }\n            }\n          }\n          image {\n            data {\n              attributes {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "8b41f7b35965d1c41490c9c85c5f0f4f81134eca", "file": "queries/articles/articles.ts", "repo": "rwietter_rwietter.xyz"}}, {"type": "query", "name": "filesConnection", "content": "{\n    filesConnection {\n      aggregate {\n       count\n     }\n   }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+dashboard/count-files/count-files.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "login", "content": "{\n    login(email: $email, password: $password) {\n      user {\n        firstname\n        email\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+auth/login/login.component.ts", "repo": "ysantalla_gondolin"}, "arguments": "($email: String!, $password: String!)"}, {"type": "mutation", "name": "deleteRole", "content": "{\n    deleteRole(where: $where) {\n      name\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gondolin"}, "arguments": "($where: RoleWhereUniqueInput!)"}, {"type": "mutation", "name": "deleteManyRoles", "content": "{\n    deleteManyRoles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gondolin"}, "arguments": "($where: RoleWhereInput!)"}, {"type": "mutation", "name": "changeFile", "content": "{\n  changeFile(file: $file, where: $where) {\n    filename\n  }\n}", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/change/file-change.component.ts", "repo": "ysantalla_gondolin"}, "arguments": "($file: Upload!, $where: FileWhereUniqueInput!)"}, {"type": "query", "name": "files", "content": "{\n    files {\n      id\n      filename\n      mimetype\n      path\n      size\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "file", "content": "{\n    file(id: $id) {\n      id\n      filename\n      path\n      encoding\n      mimetype\n      size\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/file/details/file-details.component.ts", "repo": "ysantalla_gondolin"}, "arguments": "($id: String!)"}, {"type": "mutation", "name": "updateUser", "content": "{\n    updateUser(data: $data, where: $where) {\n      id\n      firstname\n      email\n      lastname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gondolin"}, "arguments": "($data: UserUpdateInput!, $where: UserWhereUniqueInput!)"}, {"type": "query", "name": "roles", "content": "{\n    roles {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "query", "name": "users", "content": "{\n    users {\n      id\n      firstname\n      lastname\n      email\n      roles {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gondolin"}}, {"type": "mutation", "name": "deleteUser", "content": "{\n    deleteUser(where: $where) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gondolin"}, "arguments": "($where: UserWhereUniqueInput!)"}, {"type": "query", "name": "user", "content": "{\n    user(id: $id) {\n      id\n      firstname\n      email\n      lastname\n      roles {\n        name\n        description\n      }\n    }\n  }", "metadata": {"commit_hash": "4498897f7641032a922c2daae9ff18ac514ac559", "file": "client/src/app/views/+admin/user/details/user-details.component.ts", "repo": "ysantalla_gondolin"}, "arguments": "($id: String!)"}, {"type": "query", "name": "Query", "content": "{\n      getAuthors {\n        _id\n        name\n        books {\n          _id\n          title\n          authorId\n          author {\n            _id\n            name\n            createdAt\n          }\n          createdAt\n        }\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/CreateBooks.js", "repo": "FrontPhoenix_graphql-sample"}}, {"type": "query", "name": "Query", "content": "{\n      getAuthors {\n        _id\n        name\n        books {\n          _id\n          title\n          authorId\n          author {\n            _id\n            name\n            createdAt\n          }\n          createdAt\n        }\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "3cd89108dae68956dacabc0d11f45f7466682d05", "file": "src/Components/CreateAuthor.js", "repo": "FrontPhoenix_graphql-sample"}}]