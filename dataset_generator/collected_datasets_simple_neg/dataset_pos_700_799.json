[{"type": "query", "name": "profile($username: String!)", "content": "{\n    profile(username: $username) {\n      _id\n      username\n      email\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/queries.js", "repo": "RichardBaier_dundrag"}}, {"type": "query", "name": "getCharacter($_id: ID!)", "content": "{\n    character(_id: $_id) {\n      _id\n      characterName\n      characterClass\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/queries.js", "repo": "RichardBaier_dundrag"}}, {"type": "query", "name": "getCharacters", "content": "{\n    getCharacters {\n      _id\n      character_name\n      character_class\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/queries.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "loginUser($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      profile {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/mutations.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "addProfile($username: String!, $email: String!, $password: String!)", "content": "{\n    addProfile(username: $username, email: $email, password: $password) {\n      token\n      profile {\n        username\n        email\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/mutations.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "addCharacter($characterName: String!, $characterClass: String!)", "content": "{\n  addCharacter(character_name: $characterName, character_class: $characterClass) {\n    _id\n    character_name\n    character_class\n  }\n}", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/mutations.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "RemoveCharacter($characterId: ID!)", "content": "{\n    removeCharacter(characterId: $characterId) {\n      _id\n      character_name\n    }\n  }", "metadata": {"commit_hash": "e79d20b7727d61a52cf6666401c5b38c7739be35", "file": "client/src/utils/mutations.js", "repo": "RichardBaier_dundrag"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/pages/Signin.jsx", "repo": "Dr169_Air-condition"}}, {"type": "mutation", "name": "deleteUser($userId: ID!)", "content": "{\n    deleteUser(userId: $userId) {\n      success\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/AlertDialog.jsx", "repo": "Dr169_Air-condition"}}, {"type": "query", "name": "getuser", "content": "{\n    users {\n      results {\n        id\n        firstName\n        lastName\n      }\n      totalCount\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/UserInfo.jsx", "repo": "Dr169_Air-condition"}}, {"type": "query", "name": "getUser($id: ID!)", "content": "{\n    user(id: $id) {\n      lastLogin\n      firstName\n      lastName\n      email\n      phoneNumber\n      admin\n      department {\n        name\n        devices {\n          id\n          temperature\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/SetRadialGauge.jsx", "repo": "Dr169_Air-condition"}}, {"type": "query", "name": "getUser($id: ID!)", "content": "{\n    user(id: $id) {\n      lastLogin\n      firstName\n      lastName\n      email\n      phoneNumber\n      admin\n      department {\n        name\n        devices {\n          id\n          temperature\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/SetTempHistory.jsx", "repo": "Dr169_Air-condition"}}, {"type": "query", "name": "getUser($id: ID!)", "content": "{\n    user(id: $id) {\n      lastLogin\n      firstName\n      lastName\n      email\n      phoneNumber\n      admin\n      department {\n        name\n        devices {\n          id\n          temperature\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/SetUserInfo.jsx", "repo": "Dr169_Air-condition"}}, {"type": "query", "name": "getDeps", "content": "{\n    departments {\n      results {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/FormDialog.jsx", "repo": "Dr169_Air-condition"}}, {"type": "mutation", "name": "makeUser(\n    $email: String!\n    $firstName: String!\n    $lastName: String!\n    $password: String!\n    $phoneNumber: String!\n    $departmentName: ID!\n  )", "content": "{\n    createUser(\n      departmentName: $departmentName\n      email: $email\n      firstName: $firstName\n      lastName: $lastName\n      password: $password\n      phoneNumber: $phoneNumber\n    ) {\n      user {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "165716d0bea82327101d05cb8331f2a492bb3f30", "file": "src/components/FormDialog.jsx", "repo": "Dr169_Air-condition"}}, {"type": "query", "name": "", "content": "{\n    me {\n      id\n      name\n      email\n      posts{\n        title\n      }\n    }\n  }", "metadata": {"commit_hash": "fded8f5e0ee7b70172ed1cc0aa2b3e6e551ed2c1", "file": "src/graphql/queries.js", "repo": "Umoren_Vue-auth"}}, {"type": "mutation", "name": "login ($email: String! $password: String! )", "content": "{\n  login(email: $email password: $password ){\n    token\n  }\n}", "metadata": {"commit_hash": "fded8f5e0ee7b70172ed1cc0aa2b3e6e551ed2c1", "file": "src/graphql/mutations.js", "repo": "Umoren_Vue-auth"}}, {"type": "mutation", "name": "createUser($name: String! $email: String! $password: String! )", "content": "{\n    createUser( name: $name, email: $email, password: $password) {\n      token\n    }\n}", "metadata": {"commit_hash": "fded8f5e0ee7b70172ed1cc0aa2b3e6e551ed2c1", "file": "src/graphql/mutations.js", "repo": "Umoren_Vue-auth"}}, {"type": "mutation", "name": "authenticate($token: String!)", "content": "{\n            authenticate(input: {token: $token}) {\n              user {\n                id\n              }\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "LoadProfile", "content": "{\n            user(id: \"${id}\") {\n              ${PROFILE_PROPS}\n              ${\n                id === this.username\n                  ?", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botCreate", "content": "{\n          botCreate {\n            messages {\n              field\n              message\n            }\n            successful\n            result {\n              id\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "loadBot($id: String!, $ownUsername: String!)", "content": "{\n          bot(id: $id) {\n            ${BOT_PROPS}\n            visitors: subscribers(first: 10, type: VISITOR) {\n              totalCount\n              edges {\n                cursor\n                node {\n                  ${PROFILE_PROPS}\n                }\n              }\n            }\n            posts: items(first: 10) {\n              ${BOT_POST_LIST_PROPS}\n            }\n\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userLocationGetToken", "content": "{\n          userLocationGetToken {\n            successful\n            messages {\n              message\n            }\n            result\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userLocationUpdate(\n          $input: UserLocationUpdateInput!\n        )", "content": "{\n          userLocationUpdate(\n            input: $input\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "notificationDelete($input: NotificationDeleteInput!)", "content": "{\n          notificationDelete(input: $input) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "notifications($first: Int, $last: Int, $beforeId: AInt, $afterId: AInt, $ownUsername: String!, $types: [NotificationType])", "content": "{\n          notifications(first: $first, last: $last, beforeId: $beforeId, afterId: $afterId, types: $types) {\n            totalCount\n            edges {\n              node {\n                ${NOTIFICATIONS_PROPS}\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "getActiveBots($ownUsername: String!)", "content": "{\n          currentUser {\n            id\n            activeBots(first: 20) {\n              totalCount\n              edges {\n                cursor\n                node {\n                  ${BOT_PROPS}\n                  visitors: subscribers(first: 20, type: VISITOR) {\n                    edges {\n                      cursor\n                      node {\n                        ${PROFILE_PROPS}\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "loadBot($id: UUID!, $limit: Int, $cursor: String)", "content": "{\n          bot(id: $id) {\n            items(after: $cursor, first: $limit) {\n              ${BOT_POST_LIST_PROPS}\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botInvite($input: BotInviteInput!)", "content": "{\n          botInvite(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botInvitationRespond($input: BotInvitationRespondInput!)", "content": "{\n          botInvitationRespond(input: $input) {\n            successful\n            result\n            messages {\n              message\n              field\n              code\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userUpdate($values: UserParams!)", "content": "{\n          userUpdate(input: {values: $values}) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userDelete", "content": "{\n          userDelete {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "mediaUrls($trosUrl: String!)", "content": "{\n          mediaUrls(timeout: 10000, trosUrl: $trosUrl) {\n            urls {\n              type\n              url\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "mediaUpload($input: MediaUploadParams!)", "content": "{\n          mediaUpload(input: $input) {\n            messages {\n              field\n              message\n            }\n            successful\n            result {\n              id\n              headers {\n                name\n                value\n              }\n              method\n              referenceUrl\n              uploadUrl\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "friendInvite($input: FriendInviteInput!)", "content": "{\n          friendInvite(input: $input) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "friendShareUpdate($input: FriendShareUpdateInput!)", "content": "{\n          friendShareUpdate(input: $input) {\n            messages {\n              code\n              field\n              message\n            }\n            successful\n            result {\n              user {\n                id\n                handle\n              }\n              createdAt\n              shareConfig {\n                nearbyDistance\n                nearbyCooldown\n              }\n              shareType\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "friendDelete($input: FriendDeleteInput!)", "content": "{\n          friendDelete(input: $input) {\n            ${VOID_PROPS}            \n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userBlock($input: UserBlockInput!)", "content": "{\n          userBlock(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userUnblock($input: UserUnblockInput!)", "content": "{\n          userUnblock(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botUnsubscribe($input: BotUnsubscribeInput!)", "content": "{\n          botUnsubscribe(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "messageSend($input: MessageSendInput!)", "content": "{\n          messageSend(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "messageMarkRead($input: MessageMarkReadInput!)", "content": "{\n          messageMarkRead(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "loadChat($otherUser: UUID, $after: String, $first: Int)", "content": "{\n            currentUser {\n              id\n              messages(otherUser: $otherUser, after: $after, first: $first) {\n                totalCount\n                edges {\n                  cursor\n                  node {\n                    ${MESSAGE_PROPS}\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "loadChats($max: Int)", "content": "{\n            currentUser {\n              id\n              conversations(first: $max) {\n                totalCount\n                edges {\n                  cursor\n                  node {\n                    ${MESSAGE_PROPS}\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botDelete($input: BotDeleteInput!)", "content": "{\n          botDelete(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botItemDelete($input: BotItemDeleteInput!)", "content": "{\n          botItemDelete(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botUpdate(\n          $id: String!\n          $userLocation: UserLocationUpdateInput\n          $values: BotParams\n        )", "content": "{\n          botUpdate(input: {id: $id, userLocation: $userLocation, values: $values}) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "botItemPublish($input: BotItemPublishInput!)", "content": "{\n          botItemPublish(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "pushNotificationsEnable($input: PushNotificationsEnableInput!)", "content": "{\n          pushNotificationsEnable(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "pushNotificationsDisable($input: PushNotificationsDisableInput!)", "content": "{\n          pushNotificationsDisable(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "mediaDelete($tros: String!)", "content": "{\n          mediaDelete(input: {url: $tros}) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "loadLocalBots($pointA: Point!, $pointB: Point!, $ownUsername: String!)", "content": "{\n          localBots(pointA: $pointA, pointB: $pointB) {\n            areaTooLarge\n            bots {\n              ${BOT_PROPS}\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "searchUsers($text: String!)", "content": "{\n          users(limit: 20, searchTerm: $text) {\n            ${PROFILE_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userInviteRedeemCode($input: UserInviteRedeemCodeInput!)", "content": "{\n          userInviteRedeemCode(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "userBulkLookup($phoneNumbers: [String]!)", "content": "{\n            userBulkLookup(phoneNumbers: $phoneNumbers) {\n              e164PhoneNumber\n              phoneNumber\n              user {\n                ${PROFILE_PROPS}\n              }\n              relationship\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userInviteSend($input: UserInviteSendInput!)", "content": "{\n          userInviteSend(input: $input) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "presenceStatus(\n          $status: PresenceStatus!\n        )", "content": "{\n          presenceStatus(\n            input: {status: $status}\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userLocationRequestTrigger(\n          $userId: String!\n        )", "content": "{\n          userLocationRequestTrigger(\n            input: {userId: $userId}\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userFullAudit(\n          $enable: Boolean!\n        )", "content": "{\n          userFullAudit(\n            input: {enable: $enable}\n          ) {\n            ${VOID_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "userInviteGetSender($code: String!)", "content": "{\n          userInviteGetSender(inviteCode: $code) {\n            user {\n              ${PROFILE_PROPS}\n            }\n            shareType\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "mutation", "name": "userInviteMakeUrl", "content": "{\n          userInviteMakeUrl {\n            result\n            successful\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "subscription", "name": "sharedLocations", "content": "{\n          sharedLocations {\n            user {\n              id\n            }\n            location {\n              ${USER_LOCATION_PROPS}\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "subscription", "name": "presence", "content": "{\n          presence {\n            id\n            presence {\n              status\n              updatedAt\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "subscription", "name": "notifications($ownUsername: String!)", "content": "{\n            notifications {\n              ${NOTIFICATIONS_PROPS}\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "subscription", "name": "subscribeContacts", "content": "{\n          contacts {\n            relationship\n            shareType\n            user {\n              id\n              roles\n              firstName\n              lastName\n              handle\n              presence {\n                status\n                updatedAt\n              }\n              ${MEDIA_PROPS}\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "subscription", "name": "subscribeBotVisitors($ownUsername: String!)", "content": "{\n            botGuestVisitors {\n              action\n              bot {\n                ${BOT_PROPS}\n                visitors: subscribers(first: 1, type: VISITOR) {\n                    edges {\n                      cursor\n                      node {\n                        ${PROFILE_PROPS}\n                      }\n                    }\n                  }\n              }\n              visitor {\n                id\n              }\n              updatedAt\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "subscription", "name": "messages", "content": "{\n          messages {\n            ${MESSAGE_PROPS}\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "loadBots($max: Int!, $ownUsername: String!, $userId: String!, $after: String, $relationship: String!)", "content": "{\n            user(id: $userId) {\n              id\n              bots(first: $max after: $after relationship: $relationship) {\n                totalCount\n                edges {\n                  cursor\n                  node {\n                    ${BOT_PROPS}\n                  }\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "getBotProfiles($botId: UUID!, $cursor: String, $limit: Int)", "content": "{\n          bot(id: $botId) {\n            id\n            subscribers(after: $cursor, first: $limit, type: ${relationship}) {\n              totalCount\n              edges {\n                cursor\n                node {\n                  ${PROFILE_PROPS}\n                }\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "2ea44673828e31d6b753ebf6a55d61a2b6a98883", "file": "src/store/Transport.ts", "repo": "hippware_rn-chat"}}, {"type": "query", "name": "me", "content": "{\n    me {\n      id\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/auth.js", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "login($credentials: Credentials!)", "content": "{\n    login(credentials: $credentials) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/auth.js", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "signup($credentials: Credentials!)", "content": "{\n    signup(credentials: $credentials) {\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/auth.js", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "createTask($data: TaskCreateInput!)", "content": "{\n    createTask(data: $data) {\n      completed\n      createdAt\n      id\n      text\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/tasks.js", "repo": "amplication_react-todos"}}, {"type": "query", "name": "tasks($where: TaskWhereInput, $orderBy: [TaskOrderByInput!])", "content": "{\n    tasks(where: $where, orderBy: $orderBy) {\n      completed\n      createdAt\n      id\n      text\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/tasks.js", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "updateTask($data: TaskUpdateInput!, $where: TaskWhereUniqueInput!)", "content": "{\n    updateTask(data: $data, where: $where) {\n      completed\n      createdAt\n      id\n      text\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "web/src/lib/tasks.js", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      roles\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "admin-ui/src/auth-provider/ra-auth-http.ts", "repo": "amplication_react-todos"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(credentials: { username: $username, password: $password }) {\n      username\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "27b3e652244d177820438bda76ddb2d59303a3ae", "file": "admin-ui/src/auth-provider/ra-auth-jwt.ts", "repo": "amplication_react-todos"}}, {"type": "query", "name": "FetchCoinsList", "content": "{\n    coinsList\n      @rest(type: \"ListPayload\", path: \"/data/top/totalvolfull?tsym=USD\") {\n      Data @type(name: \"DataPayload\") {\n        CoinInfo @type(name: \"CoinInfoPayload\") {\n          Id\n          Name\n          FullName\n        }\n        DISPLAY @type(name: \"DisplayPayload\") {\n          USD @type(name: \"USDPayLoad\") {\n            PRICE\n            OPENDAY\n            HIGHDAY\n            LOWDAY\n            OPEN24HOUR\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "87a876524d063f16387da3e375a458406effcd5c", "file": "rnApolloCryptoListDemo/src/graphql/Queries.js", "repo": "top-comengineer_React-Native-tutorial"}}, {"type": "query", "name": "($address: ID!)", "content": "{\n    contract(address: $address) {\n      address\n      name\n      abi\n      event_topics\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "($limit: Int)", "content": "{\n    contractList(limit: $limit) {\n      address\n      name\n      abi\n      event_topics\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "subscription", "name": "", "content": "{\n    contractCreated {\n      contract {\n        address\n        name\n        abi\n        event_topics\n      }\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "($hash: ID!)", "content": "{\n    event(hash: $hash) {\n      transaction_hash\n      event_topic_hash\n      contract_address\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "($limit: Int, $filters: EventFilters)", "content": "{\n    eventList(limit: $limit, filters: $filters) {\n      transaction_hash\n      event_topic_hash\n      contract_address\n      event_abi\n      raw_event\n      json_event\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "subscription", "name": "", "content": "{\n    eventCreated {\n      event {\n        transaction_hash\n        event_topic_hash\n        contract_address\n        event_abi\n        raw_event\n        json_event\n      }\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "($hash: ID!)", "content": "{\n    eventMeta(hash: $hash) {\n      event_topic_hash\n      event_name\n      event_bare_name\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "($limit: Int)", "content": "{\n    eventMetaList(limit: $limit) {\n      event_topic_hash\n      event_name\n      event_bare_name\n      event_abi\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "subscription", "name": "", "content": "{\n    eventMetaCreated {\n      eventMeta {\n        event_topic_hash\n        event_name\n        event_bare_name\n      }\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "($hash: ID!)", "content": "{\n    transaction(hash: $hash) {\n      hash\n      blockHash\n      blockNumber\n      to\n      from\n      data\n      gasLimit {\n        _hex\n      }\n      gasPrice {\n        _hex\n      }\n      transactionIndex\n      nonce\n      confirmations\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "($limit: Int)", "content": "{\n    transactions(limit: $limit) {\n      hash\n      blockHash\n      blockNumber\n      to\n      from\n      data\n      gasLimit {\n        _hex\n      }\n      gasPrice {\n        _hex\n      }\n      transactionIndex\n      nonce\n      confirmations\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "subscription", "name": "", "content": "{\n    transactionCreated {\n      transaction {\n        hash\n        blockHash\n        blockNumber\n        to\n        from\n        data\n        gasLimit {\n          _hex\n        }\n        gasPrice {\n          _hex\n        }\n        transactionIndex\n        nonce\n        confirmations\n      }\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "($hash: ID!)", "content": "{\n    block(hash: $hash) {\n      hash\n      parentHash\n      hash\n      parentHash\n      number\n      timestamp\n      nonce\n      difficulty\n      gasLimit {\n        _hex\n      }\n      gasUsed {\n        _hex\n      }\n      miner\n      extraData\n      transactions\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "($limit: Int)", "content": "{\n    blockList(limit: $limit) {\n      hash\n      parentHash\n      hash\n      parentHash\n      number\n      timestamp\n      nonce\n      difficulty\n      gasLimit {\n        _hex\n      }\n      gasUsed {\n        _hex\n      }\n      miner\n      extraData\n      transactions\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "subscription", "name": "", "content": "{\n    blockCreated {\n      block {\n        hash\n        parentHash\n        hash\n        parentHash\n        number\n        timestamp\n        nonce\n        difficulty\n        gasLimit {\n          _hex\n        }\n        gasUsed {\n          _hex\n        }\n        miner\n        extraData\n        transactions\n      }\n    }\n  }", "metadata": {"commit_hash": "b6db2fb560550bd2ebcc59f7d884971bc8cc49fa", "file": "frontend/src/graphql/query_strings.js", "repo": "ConsenSys_infura-proxy-service"}}, {"type": "query", "name": "user($userId: ID!)", "content": "{\n    user(id: $userId) {\n      _id\n      username\n      email\n      savedCards {\n        cardId\n        name\n        image\n        setName\n        seriesName\n        setImage\n        rarity\n        releaseDate\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/queries.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "query", "name": "currentUser", "content": "{\n    currentUser {\n      _id\n      username\n      email\n      savedCards {\n        cardId\n        name\n        image\n        setName\n        seriesName\n        setImage\n        rarity\n        releaseDate\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/queries.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "query", "name": "users", "content": "{\n    users {\n      _id\n      username\n      email\n      savedCards {\n        cardId\n        name\n        image\n        setName\n        seriesName\n        setImage\n        rarity\n        releaseDate\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/queries.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "mutation", "name": "Login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        email\n        }\n      }\n    }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/mutations.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "mutation", "name": "AddUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/mutations.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "mutation", "name": "SaveCard($cardId: ID!, $name: String!, $image: String, $setName: String, $seriesName: String, $setImage: String, $rarity: String, $releaseDate: String)", "content": "{\n    saveCard(cardId: $cardId, name: $name, image: $image, setName: $setName, seriesName: $seriesName, setImage: $setImage, rarity: $rarity, releaseDate: $releaseDate) {\n      _id\n      username\n      email\n      savedCards {\n        cardId\n        name\n        image\n        setName\n        seriesName\n        setImage\n        rarity\n        releaseDate\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/mutations.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "mutation", "name": "RemoveCard($cardId: ID!)", "content": "{\n    removeCard(cardId: $cardId) {\n      _id\n      username\n      email\n      savedCards {\n        cardId\n        name\n        image\n        setName\n        seriesName\n        setImage\n        rarity\n        releaseDate\n      }\n    }\n  }", "metadata": {"commit_hash": "ac95cc916b246d2908c147a7972cee80395cb985", "file": "client/src/utils/mutations.js", "repo": "lingeorge88_Poke_Trader"}}, {"type": "query", "name": "Editions(\n      $", "content": "{EDITIONS_FILTERS}\n    ) {\n      editions(\n        where: {\n          active: true,\n          offersOnly: false,\n          remainingSupply_gt: 0,\n          priceInWei_gt: 0,\n          ${extraWhere.join('\\n')}\n        }\n        ${EDITIONS_ARGUMENTS}\n      ) {\n        ${isCount ? 'id' : '...editionFragment'}\n      }\n    }\n    ${isCount ? '' : editionFragment()}", "metadata": {"commit_hash": "2fd1d1f3f74ac208df61f6d211ee62b13e5727db", "file": "webapp/src/modules/vendor/known_origin/edition/api.ts", "repo": "sheriff-rango_nft-marketplace-practice"}}, {"type": "query", "name": "EditionById($id: String)", "content": "{\n    editions(where: { id: $id }, first: 1) {\n      ...editionFragment\n    }\n  }\n  ${editionFragment()}", "metadata": {"commit_hash": "2fd1d1f3f74ac208df61f6d211ee62b13e5727db", "file": "webapp/src/modules/vendor/known_origin/edition/api.ts", "repo": "sheriff-rango_nft-marketplace-practice"}}, {"type": "query", "name": "Tokens(\n      $", "content": "{TOKENS_FILTERS}\n    ) {\n      tokens(\n        where: {\n          ${extraWhere.join('\\n')}\n        }\n        ${TOKENS_ARGUMENTS}\n      ) {\n        ${isCount ? 'id' : '...tokenFragment'}\n      }\n    }\n    ${isCount ? '' : tokenFragment()}", "metadata": {"commit_hash": "2fd1d1f3f74ac208df61f6d211ee62b13e5727db", "file": "webapp/src/modules/vendor/known_origin/token/api.ts", "repo": "sheriff-rango_nft-marketplace-practice"}}, {"type": "query", "name": "TokenById($id: String)", "content": "{\n    tokens(where: { id: $id }, first: 1) {\n      ...tokenFragment\n    }\n  }\n  ${tokenFragment()}", "metadata": {"commit_hash": "2fd1d1f3f74ac208df61f6d211ee62b13e5727db", "file": "webapp/src/modules/vendor/known_origin/token/api.ts", "repo": "sheriff-rango_nft-marketplace-practice"}}, {"type": "query", "name": "allBlogs", "content": "{\n    allBlogs {\n      edges {\n        node {\n          ...BlogParts\n        }\n      }\n    }\n  }\n  ${BLOG_FIELDS}", "metadata": {"commit_hash": "d43fc12efb4e3b698bbd3519f51ff47302077561", "file": "lib/queries.ts", "repo": "simonsisay_portfolio-site"}}, {"type": "query", "name": "allBlogs($uid: String!)", "content": "{\n    allBlogs(uid: $uid) {\n      edges {\n        node {\n          ...BlogParts\n        }\n      }\n    }\n  }\n  ${BLOG_FIELDS}", "metadata": {"commit_hash": "d43fc12efb4e3b698bbd3519f51ff47302077561", "file": "lib/queries.ts", "repo": "simonsisay_portfolio-site"}}, {"type": "query", "name": "allAbout", "content": "{\n    allAbouts {\n      edges {\n        node {\n          aboutMe\n          portrait\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d43fc12efb4e3b698bbd3519f51ff47302077561", "file": "lib/queries.ts", "repo": "simonsisay_portfolio-site"}}, {"type": "query", "name": "allTestimonials", "content": "{\n    allTestimonialss {\n      edges {\n        node {\n          testimony\n          avatar\n          role\n          company\n          name\n          _meta {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "d43fc12efb4e3b698bbd3519f51ff47302077561", "file": "lib/queries.ts", "repo": "simonsisay_portfolio-site"}}, {"type": "query", "name": "allProjects", "content": "{\n    allProjectss {\n      edges {\n        node {\n          ...ProjectParts\n        }\n      }\n    }\n  }\n  ${PROJECT_FIELDS}", "metadata": {"commit_hash": "d43fc12efb4e3b698bbd3519f51ff47302077561", "file": "lib/queries.ts", "repo": "simonsisay_portfolio-site"}}, {"type": "query", "name": "allProjectss($id: String!)", "content": "{\n    allProjectss(id: $id) {\n      edges {\n        node {\n          ...ProjectParts\n        }\n      }\n    }\n  }\n  ${PROJECT_FIELDS}", "metadata": {"commit_hash": "d43fc12efb4e3b698bbd3519f51ff47302077561", "file": "lib/queries.ts", "repo": "simonsisay_portfolio-site"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux/components/Submit.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n    updatePost(id: $id, votes: $votes) {\n      id\n      __typename\n      votes\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux/components/PostUpvoter.js", "repo": "neat-soft_next.js"}}, {"type": "query", "name": "allPosts($first: Int!, $skip: Int!)", "content": "{\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux/components/PostList.js", "repo": "neat-soft_next.js"}}, {"type": "query", "name": "getUser", "content": "{\n          user {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-auth/lib/checkLoggedIn.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "Create($name: String!, $email: String!, $password: String!)", "content": "{\n    createUser(\n      name: $name\n      authProvider: { email: { email: $email, password: $password } }\n    ) {\n      id\n    }\n    signinUser(email: { email: $email, password: $password }) {\n      token\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-auth/components/RegisterBox.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "Signin($email: String!, $password: String!)", "content": "{\n    signinUser(email: { email: $email, password: $password }) {\n      token\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-auth/components/SigninBox.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n        createPost(title: $title, url: $url) {\n          id\n          title\n          votes\n          url\n          createdAt\n        }\n      }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo/components/Submit.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n        updatePost(id: $id, votes: $votes) {\n          id\n          __typename\n          votes\n        }\n      }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo/components/PostUpvoter.js", "repo": "neat-soft_next.js"}}, {"type": "query", "name": "allPosts($first: Int!, $skip: Int!)", "content": "{\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo/components/PostList.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "createPost($title: String!, $url: String!)", "content": "{\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux-saga/components/Submit.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n    updatePost(id: $id, votes: $votes) {\n      id\n      __typename\n      votes\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux-saga/components/PostVoteUp.js", "repo": "neat-soft_next.js"}}, {"type": "mutation", "name": "updatePost($id: ID!, $votes: Int)", "content": "{\n    updatePost(id: $id, votes: $votes) {\n      id\n      __typename\n      votes\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux-saga/components/PostVoteDown.js", "repo": "neat-soft_next.js"}}, {"type": "query", "name": "allPosts($first: Int!, $skip: Int!)", "content": "{\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux-saga/components/PostList.js", "repo": "neat-soft_next.js"}}, {"type": "query", "name": "post($id: ID!)", "content": "{\n    Post(id: $id) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "c0701e948fb3cd86d6e5013a07f234251260bead", "file": "examples/with-apollo-and-redux-saga/components/Post.js", "repo": "neat-soft_next.js"}}, {"type": "query", "name": "GetMyReferrals", "content": "{\n      getMyReferrals {\n        id\n        cuid\n        email\n        username\n        createdAt\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/referals.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "GetAuction($auctionId: Int!)", "content": "{\n  getAuction(auctionId: $auctionId) {\n    id\n    title\n    description\n    creator {\n      username\n      firstname\n      lastname\n      avatarUrl\n    }\n    winner {\n      username\n      firstname\n      lastname\n      avatarUrl\n    }\n    status {\n      id\n      name\n    }\n    sortOrder\n    finishedAt\n    startedAt\n    createdAt\n    updatedAt\n    bids {\n      id\n      userId\n      auctionId\n      bitPrice\n      createdAt\n      updatedAt\n      user {\n        username\n        firstname\n        lastname\n        avatarUrl\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/lot.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "Signup($signUpInput: SignUpInput!)", "content": "{\n    signup(signUpInput: $signUpInput) {\n      user {\n        username\n        id\n        email\n      }\n      refreshToken\n      accessToken\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/signup.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "GetAllNews($sortBy: String, $sortOrder: String, $skip: Int, $take: Int, $search: String)", "content": "{\n\t\tnews: getAllNews(sortBy: $sortBy, sortOrder: $sortOrder, skip: $skip, take: $take, search: $search) {\n\t\t  totalCount\n\t\t  items {\n\t\t\tid\n\t\t\ttitle\n\t\t\ttext: description\n\t\t\tupdatedAt\n\t\t\tdate: createdAt\n\t\t\timages: imageUrl\n\t\t\tuserId\n\t\t}\n\t }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/news.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "GetUserAddress", "content": "{\n    getUserAddress {\n      country\n      city\n      address\n      index\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "UpdateUserAddress($input: UpdateAddressInput!)", "content": "{\n    updateUserAddress(input: $input) {\n      country\n      city\n      address\n      index\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "EditProfile($updateUserInput: UpdateUserInput!)", "content": "{\n    editProfile(updateUserInput: $updateUserInput) {\n      id\n      username\n      email\n      firstname\n      phone\n      lastname\n      patronymic\n      instagram\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "UpdateUserPayment($input: UpdatePaymentInput!)", "content": "{\n    updateUserPayment(input: $input) {\n      firstname\n      lastname\n      patronymic\n      number\n      cvv\n      month\n      year\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/userProfile.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "CreateMyRoom($input: RoomCreateInput!)", "content": "{\n      createMyRoom(input: $input) {\n        id\n        ownerId\n        title\n        description\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "GetAllMyRooms", "content": "{\n      getAllMyRooms {\n        id\n        ownerId\n        title\n        description\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "GetAllMessagesByRoomId($userMessage: UserMessages!)", "content": "{\n  getAllMessagesByRoomId(userMessage: $userMessage) {\n    content\n    createdAt\n    id\n    roomId\n    updatedAt\n    userId\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "Mutation($newMessage: NewMessageInput!)", "content": "{\n      sendMessage(newMessage: $newMessage) {\n        id\n        userId\n        roomId\n        content\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "JoinToRoom($roomId: Float!)", "content": "{\n  joinToRoom(roomId: $roomId) {\n    username\n    firstname\n    lastname\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "GetAllRooms", "content": "{\n  getAllRooms {\n    id\n    ownerId\n    title\n    description\n    createdAt\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "GetAllUsersByRoomId($roomId: Float!)", "content": "{\n      getAllUsersByRoomId(roomId: $roomId) {\n        username\n        firstname\n        lastname\n        avatarUrl\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "LeaveFromRoom($roomId: Float!)", "content": "{\n  leaveFromRoom(roomId: $roomId) {\n    avatarUrl\n    lastname\n    firstname\n    username\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/messages.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "Logout($logoutId: Int!)", "content": "{\n  logout(id: $logoutId) {\n    loggedOut\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/logout.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "Signin($signInInput: SignInInput!)", "content": "{\n  signin(signInInput: $signInInput) {\n    user {\n      username\n      id\n      email\n    }\n    refreshToken\n    accessToken\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/signin.js", "repo": "competitivebidding_frontend"}}, {"type": "subscription", "name": "Subscription($roomId: Int!)", "content": "{\n      newMessage(roomId: $roomId) {\n        id\n        userId\n        roomId\n        content\n        createdAt\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/subscriptions.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "ExampleQuery", "content": "{\n    getAuctions {\n        bids {\n            id\n            userId\n            auctionId\n            bitPrice\n            createdAt\n            updatedAt\n            user {\n                username\n                firstname\n                lastname\n                avatarUrl\n            }\n        }\n        createdAt\n        creator {\n            username\n            firstname\n            lastname\n            avatarUrl\n        }\n        description\n        finishedAt\n        id\n        sortOrder\n        startedAt\n        status {\n            id\n            name\n        }\n        title\n        updatedAt\n        winner {\n            username\n            firstname\n            lastname\n            avatarUrl\n        }\n    }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/auctions.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "CreateMyBid($input: CreateBidInput!)", "content": "{\n      createMyBid(input: $input) {\n        id\n        userId\n        auctionId\n        bitPrice\n        createdAt\n        updatedAt\n        user {\n          username\n          firstname\n          lastname\n          avatarUrl\n        }\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/auctions.js", "repo": "competitivebidding_frontend"}}, {"type": "query", "name": "GetBidsByAuctionId($auctionId: Int!)", "content": "{\n      getBidsByAuctionId(auctionId: $auctionId) {\n        id\n        userId\n        auctionId\n        bitPrice\n        createdAt\n        updatedAt\n        user {\n          username\n          firstname\n          lastname\n          avatarUrl\n        }\n      }\n    }", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/auctions.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "CreateToken($data: CreateTokenInput!)", "content": "{\n  createToken(data: $data) {\n    updatedAt\n    title\n    sortOrder\n    points\n    price\n    id\n    description\n    createdAt\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/tokens.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "GetTokenById($getTokenByIdId: Int!)", "content": "{\n  getTokenById(id: $getTokenByIdId) {\n    createdAt\n    description\n    points\n    id\n    price\n    updatedAt\n    title\n    sortOrder\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/tokens.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "GetTokenById($updateTokenId: Int!, $data: UpdateTokenInput!)", "content": "{\n  updateToken(id: $updateTokenId, data: $data) {\n    createdAt\n    description\n    id\n    points\n    price\n    sortOrder\n    title\n    updatedAt\n  }\n}", "metadata": {"commit_hash": "b5bbbc16c91f7e37c6a4a540e44be33426d9284e", "file": "src/components/server/tokens.js", "repo": "competitivebidding_frontend"}}, {"type": "mutation", "name": "createSqlQuery", "content": "{\n        create_query {\n            success\n            error\n            result {\n                view_id\n                project {\n                    name\n                }\n                path\n                spec {\n                    ... on QuerySpec {\n                        query_text\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-web/create-query-button.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "query", "name": "orgViewDirectory($organizationId: ID!)", "content": "{\n        organization(id: $organizationId) {\n            projects {\n                name\n                views {\n                    view_id\n                    view_type\n                    path\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-web/view-directory-tree.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "query", "name": "formattedQueryText($queryText: String!)", "content": "{\n        formatted_query_text(query_text: $queryText)\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/query-editor-bar.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "query", "name": "viewBackendEvents($viewId: ID!)", "content": "{\n        view(id: $viewId) {\n            backend_events {\n                backend_event_id\n                title\n                description\n                created_time\n                backend {\n                    name\n                }\n                project {\n                    name\n                }\n                view {\n                    path\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/log-settings.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "updateQueryText($queryId: ID!, $queryText: String!)", "content": "{\n        update_query_text(id: $queryId, query_text: $queryText) {\n            success\n            error\n            result {\n                view_id\n                project {\n                    name\n                }\n                path\n                spec {\n                    ... on QuerySpec {\n                        query_text\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/query-editor.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "moveQuery(\n        $queryId: ID!\n        $projectName: String!\n        $queryPath: String!\n    )", "content": "{\n        move_view(\n            id: $queryId\n            project_name: $projectName\n            view_path: $queryPath\n        ) {\n            success\n            error\n            result {\n                view_id\n                project {\n                    name\n                }\n                path\n                spec {\n                    ... on QuerySpec {\n                        query_text\n                    }\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/query-editor.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "createHistoryTable(\n        $sourceDbName: String!\n        $sourceTableName: String!\n    )", "content": "{\n        delete_view(id: $viewId) {\n            success\n            error\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/schema-settings.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "deleteView($viewId: ID!, $force: boolean!)", "content": "{\n        delete_view(id: $viewId, force_no_cleanup: $force) {\n            success\n            error\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/schema-settings.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "mutation", "name": "viewResultPreview($viewId: ID!)", "content": "{\n        preview_view_result(id: $viewId) {\n            success\n            error\n            result\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/view-result-preview.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "query", "name": "ViewFromPath(\n        $projectName: String!\n        $viewPath: String!\n        $organizationId: ID\n    )", "content": "{\n        view_from_path(\n            project_name: $projectName\n            view_path: $viewPath\n            organization_id: $organizationId\n        ) {\n            view_id\n            view_type\n            project {\n                name\n            }\n            path\n            spec {\n                ... on QuerySpec {\n                    query_text\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/jasmine-view.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "query", "name": "ViewFromId($viewId: ID!)", "content": "{\n        view(id: $viewId) {\n            view_id\n            view_type\n            project {\n                name\n            }\n            path\n            spec {\n                ... on QuerySpec {\n                    query_text\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "5209a65975e067eb0678b03dd3abf89729f1e5f2", "file": "jasmine-webui/src/jasmine-view/jasmine-view.tsx", "repo": "andrewsmike_jasmine"}}, {"type": "query", "name": "user", "content": "{\n          user {\n            id\n            firstName\n            lastName\n            email\n          }\n        }", "metadata": {"commit_hash": "1da721c31ef94e5172a7ed7719d575f484f67b1e", "file": "src/app/hoc/checkLoggedIn.js", "repo": "johncoffeeocean_with-nextjs-graphql-mongodb"}}, {"type": "mutation", "name": "Login($email: String, $password: String)", "content": "{\n    login(email: $email, password: $password) {\n      id\n      email\n      firstName\n      lastName\n    }\n  }", "metadata": {"commit_hash": "1da721c31ef94e5172a7ed7719d575f484f67b1e", "file": "src/app/mutations/Login.js", "repo": "johncoffeeocean_with-nextjs-graphql-mongodb"}}, {"type": "mutation", "name": "", "content": "{\n    logout {\n      id\n      email\n    }\n  }", "metadata": {"commit_hash": "1da721c31ef94e5172a7ed7719d575f484f67b1e", "file": "src/app/mutations/Logout.js", "repo": "johncoffeeocean_with-nextjs-graphql-mongodb"}}, {"type": "mutation", "name": "Signup($firstName: String, $lastName: String, $email: String, $password: String)", "content": "{\n    signup(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      id\n      firstName\n      lastName\n      email\n    }\n  }", "metadata": {"commit_hash": "1da721c31ef94e5172a7ed7719d575f484f67b1e", "file": "src/app/mutations/Signup.js", "repo": "johncoffeeocean_with-nextjs-graphql-mongodb"}}, {"type": "query", "name": "FETCH($type_id: Int)", "content": "{\n    mp: nodes__mp(where: { item: { type_id: { _eq: $type_id } } }) { id item_id path_item_depth path_item_id root_id position_id by_position(order_by: { path_item_depth: asc }) { id item_id path_item_depth path_item_id root_id position_id } }\n    nodes(where: { type_id: { _eq: $type_id } }) { from_id id to_id type_id in { from_id id to_id type_id } out { from_id id to_id type_id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/check.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "mutation", "name": "InsertNode($type_id: Int)", "content": "{\n    insert_nodes(objects: { type_id: $type_id }) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "mutation", "name": "InsertNodes($objects: [nodes_insert_input!]!)", "content": "{\n    insert_nodes(objects: $objects) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "mutation", "name": "InsertLink($fromId: Int, $toId: Int, $type_id: Int)", "content": "{\n    insert_nodes(objects: { from_id: $fromId, to_id: $toId, type_id: $type_id }) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "mutation", "name": "Clear($type_id: Int)", "content": "{\n    delete_nodes__mp(where: { item: { type_id: { _eq: $type_id } } }) { affected_rows }\n    delete_nodes(where: { type_id: { _eq: $type_id } }) { affected_rows }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "mutation", "name": "DeleteNode($id: Int)", "content": "{\n    delete_nodes(where: { id: { _eq: $id } }) { returning { id } }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "query", "name": "FIND_NO_PARENT($notId: Int, $type_id: Int)", "content": "{\n    nodes(where: {\n      from_id: { _is_null: true },\n      to_id: { _is_null: true },\n      _not: { _by_path_item: { item_id: {_eq: $notId} } }\n    }) { id }\n  }", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "packages/mp/test.ts", "repo": "deep-foundation_boilerplate"}}, {"type": "subscription", "name": "FETCH_LIMITED($where: nodes_bool_exp)", "content": "{\n  nodes(where: $where) {\n    from_id id to_id type_id in { from_id id to_id type_id } out { from_id id to_id type_id }\n  }\n}", "metadata": {"commit_hash": "eb42557dc4cfa728046ea8aa4628b81ef9808a1d", "file": "projects/app/pages/mp.tsx", "repo": "deep-foundation_boilerplate"}}, {"type": "query", "name": "Vessels($date: Date, $vesselId: Int, $offset: Int, $size: Int, $sortBy: String, $sortDirection: String)", "content": "{\n    vessels(filter: {date: $date, vesselId: $vesselId}, offset: $offset, size: $size, sortBy: $sortBy, sortDirection: $sortDirection){\n      id\n      vesselId\n      exteriorMarking\n      administrativePower\n      lengthOverAll\n      creationDate\n      updateDate\n      vesselId\n      comments\n      basePortLocation {\n        id\n        label\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/vessel-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "query", "name": "Vessel($id: Int)", "content": "{\n    vessels(filter: {vesselId: $id}) {\n      id\n      vesselId\n      exteriorMarking\n      administrativePower\n      lengthOverAll\n      creationDate\n      updateDate\n      vesselId\n      comments\n      basePortLocation {\n        id\n        label\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/vessel-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "query", "name": "Persons($email: String, $pubkey: String, $offset: Int, $size: Int, $sortBy: String, $sortDirection: String)", "content": "{\n    persons(filter: {email: $email, pubkey: $pubkey}, offset: $offset, size: $size, sortBy: $sortBy, sortDirection: $sortDirection){\n      id\n      firstName\n      lastName\n      email\n      pubkey\n      avatar\n      statusId\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/person-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "query", "name": "Account($pubkey: String)", "content": "{\n    account(pubkey: $pubkey){\n      id\n      firstName\n      lastName\n      email\n      pubkey\n      avatar\n      statusId\n      updateDate\n      settings {\n        id\n        locale\n        updateDate\n      }\n      department {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "query", "name": "IsEmailExists($email: String, $hash: String)", "content": "{\n    isEmailExists(email: $email, hash: $hash)\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "mutation", "name": "saveAccount($account:AccountVOInput)", "content": "{\n    saveAccount(account: $account){\n      id\n      updateDate\n      settings {\n        id\n        updateDate\n      }\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "mutation", "name": "sendAccountConfirmationEmail($email:String, $locale:String)", "content": "{\n    sendAccountConfirmationEmail(email: $email, locale: $locale)\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "mutation", "name": "confirmAccountEmail($email:String, $code:String)", "content": "{\n    confirmAccountEmail(email: $email, code: $code)\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "subscription", "name": "updateTrip($tripId: Int)", "content": "{\n    updateTrip(tripId: $tripId)\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "subscription", "name": "updateAccount($pubkey: String, $interval: Int)", "content": "{\n          updateAccount(pubkey: $pubkey, interval: $interval) {\n            id\n            updateDate\n          }\n        }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/account-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "query", "name": "Trips($startDate: Date, $offset: Int, $size: Int, $sortBy: String, $sortDirection: String)", "content": "{\n    trips(filter: {startDate: $startDate}, offset: $offset, size: $size, sortBy: $sortBy, sortDirection: $sortDirection){\n      id\n      departureDateTime\n      returnDateTime\n      creationDate\n      updateDate\n      comments\n      departureLocation {\n        id\n        label\n        name\n      }\n      returnLocation {\n        id\n        label\n        name\n      }\n      recorderDepartment {\n        id\n        label\n        name\n      }\n      vesselFeatures {\n        vesselId,\n        name,\n        exteriorMarking\n      }\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/trip-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "query", "name": "Trip($id: Int)", "content": "{\n    trip(id: $id) {\n      id\n      departureDateTime\n      returnDateTime\n      creationDate\n      updateDate\n      comments\n      departureLocation {\n        id\n        label\n        name\n      }\n      returnLocation {\n        id\n        label\n        name\n      }\n      recorderDepartment {\n        id\n        label\n        name\n      }\n      vesselFeatures {\n        vesselId\n        name\n        exteriorMarking\n      }\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/trip-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "mutation", "name": "saveTrips($trips:[TripVOInput])", "content": "{\n    saveTrips(trips: $trips){\n      id\n      updateDate\n    }\n  }", "metadata": {"commit_hash": "2f421810d957832ad64778ed55165c3684231383", "file": "src/services/trip-service.ts", "repo": "blavenie_ionic4-starter-app"}}, {"type": "query", "name": "", "content": "{\n      getPosts {\n        _id\n        title\n        imageUrl\n        description\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "", "content": "{\n      getTemplates {\n        _id\n        title\n        templateType\n        content\n        treeTemplate\n        filenames\n        filetypes\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "", "content": "{\n      getSavedTemplates {\n        _id\n        title\n        templateType\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "($postId: ID!)", "content": "{\n      getPost(postId: $postId)   {\n          _id\n          title\n          imageUrl\n          categories\n          variables\n          description\n          createdDate\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "($templateId: ID!)", "content": "{\n      getTemplate(templateId: $templateId){\n          _id\n          title\n          templateType\n          content\n          treeTemplate\n          filenames\n          filetypes\n          createdDate\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n      $title: String!,\n      $imageUrl:String!,\n      $categories: [String]!,\n      $variables: [String]!,\n      $description: String!,\n      $userId:ID!\n    )", "content": "{\n      addPost(\n        title:$title\n        imageUrl:$imageUrl\n        categories:$categories\n        variables:$variables\n        description:$description\n        userId:$userId\n      ){\n        _id\n        title\n        imageUrl\n        categories\n        variables\n        description\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n      $report_name: String!,\n      $report_desc: String!,\n      $template_name: [String]!,\n      $file_name: [String]!,\n      $project_id: [String]!,\n      $node_id: [String]!,\n      $variable: [String]!,\n      $previous: [String]!,\n      $modified: [String]!,\n      $userId:ID!\n    )", "content": "{\n      addReport(\n        report_name:$report_name\n        report_desc:$report_desc\n        template_name:$template_name\n        file_name:$file_name\n        project_id:$project_id\n        node_id:$node_id\n        variable:$variable\n        previous:$previous\n        modified:$modified\n        userId:$userId\n      ){\n        _id\n        report_name\n        report_desc\n        template_name\n        file_name\n        project_id\n        node_id\n        variable\n        previous\n        modified\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n      $title: String!,\n      $templateType:String!,\n      $content: String!,\n      $treeTemplate: [String]!,\n      $filenames: [String]!,\n      $filetypes: [String]!,\n      $userId:ID!\n    )", "content": "{\n      addTemplate(\n        title:$title\n        templateType:$templateType\n        content:$content\n        treeTemplate:$treeTemplate\n        filenames:$filenames\n        filetypes:$filetypes\n        userId:$userId\n      ){\n        _id\n        title\n        templateType\n        content\n        treeTemplate\n        filenames\n        filetypes\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n      $title: String!,\n      $templateType:String!,\n      $templates: [String]!,\n      $originalTemp:String!,\n      $newTemplates: [String]!,\n      $isUpdated:String!,\n      $node_ids: [String]!,\n      $project_ids: [String]!,\n      $file_names: [String]!,\n      $file_types: [String]!,\n      $userId:ID!\n    )", "content": "{\n      saveTemplates(\n        title:$title\n        templateType:$templateType\n        templates:$templates\n        originalTemp:$originalTemp\n        newTemplates:$newTemplates\n        isUpdated:$isUpdated\n        node_ids:$node_ids\n        project_ids:$project_ids\n        file_names:$file_names\n        file_types:$file_types\n        userId:$userId\n      ){\n        _id\n        title\n        templateType\n        templates\n        originalTemp\n        newTemplates\n        isUpdated\n        node_ids\n        project_ids\n        file_names\n        file_types\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "($searchTerm: String)", "content": "{\n      searchPosts(searchTerm: $searchTerm) {\n        _id\n        title\n        description\n        imageUrl\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "(\n      $pageNum: Int!,\n      $pageSize: Int!,\n    \n    )", "content": "{\n      infiniteScrollPosts(\n        pageNum:$pageNum\n        pageSize:$pageSize\n      ){\n        hasMore\n        posts {\n          _id\n          title\n          imageUrl\n          categories\n          variables\n          description\n          createdDate\n          userId {\n            _id\n            username\n            avatar\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "(\n      $pageNum: Int!,\n      $pageSize: Int!,\n    \n    )", "content": "{\n      infiniteScrollTemplates(\n        pageNum:$pageNum\n        pageSize:$pageSize\n      ){\n        hasMore\n        templates {\n          _id\n          title\n          templateType\n          content\n          treeTemplate\n          filenames\n          filetypes\n          createdDate\n          userId {\n            _id\n            username\n            avatar\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "($userId: ID!)", "content": "{\n    getUserPosts(userId: $userId) {\n      _id\n      title\n      imageUrl\n      description\n      categories\n      variables\n      createdDate\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "($userId: ID!)", "content": "{\n    getUserReports(userId: $userId) {\n      _id\n      report_name\n      report_desc\n      template_name\n      file_name\n      project_id\n      node_id\n      variable\n      previous\n      modified\n      createdDate\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "($userId: ID!)", "content": "{\n    getUserTemplates(userId: $userId) {\n      _id\n      title\n      templateType\n      content\n      treeTemplate\n      filenames\n      filetypes\n      createdDate\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "($userId: ID!)", "content": "{\n    getUserSavedTemplates(userId: $userId) {\n      _id\n      title\n      templateType\n      node_ids\n      templates\n      newTemplates\n      originalTemp\n      isUpdated\n      project_ids\n      file_names\n      file_types\n      createdDate\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n    $postId: ID!\n    $userId: ID!\n    $title: String!\n    $imageUrl: String!\n    $categories: [String]!\n    $variables: [String]!\n    $description: String!\n  )", "content": "{\n    updateUserPost(\n      postId: $postId\n      userId: $userId\n      title: $title\n      imageUrl: $imageUrl\n      categories: $categories\n      variables: $variables\n      description: $description\n    ) {\n      _id\n      title\n      imageUrl\n      description\n      categories\n      variables\n      createdDate\n      userId {\n        _id\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n      $templateId: ID!\n      $userId:ID!\n      $title: String!,\n      $templateType:String!,\n      $templates: [String]!,\n      $originalTemp:String!,\n      $newTemplates: [String]!,\n      $isUpdated:String!,\n      $node_ids: [String]!,\n      $project_ids: [String]!,\n      $file_names: [String]!,\n      $file_types: [String]!,\n    )", "content": "{\n      updateProcTemplate(\n        templateId: $templateId\n        userId:$userId\n        title:$title\n        templateType:$templateType\n        templates:$templates\n        originalTemp:$originalTemp\n        newTemplates:$newTemplates\n        isUpdated:$isUpdated\n        node_ids:$node_ids\n        project_ids:$project_ids\n        file_names:$file_names\n        file_types:$file_types\n      ){\n        _id\n        title\n        templateType\n        templates\n        originalTemp\n        newTemplates\n        isUpdated\n        node_ids\n        project_ids\n        file_names\n        file_types\n        userId {\n          _id\n          avatar\n        }\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "(\n    $templateId: ID!\n    $userId: ID!\n    $title: String!\n    $templateType: String!\n    $content: String!\n    $treeTemplate: [String]!\n    $filenames: [String]!\n    $filetypes: [String]!\n  )", "content": "{\n    updateUserTemplate(\n      templateId: $templateId\n      userId: $userId\n      title: $title\n      templateType: $templateType\n      content: $content\n      treeTemplate: $treeTemplate\n      filenames: $filenames\n      filetypes: $filetypes\n    ) {\n      _id\n      title\n      templateType\n      content\n      treeTemplate\n      filenames\n      filetypes\n      createdDate\n      userId {\n        _id\n        avatar\n      }\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($postId: ID!)", "content": "{\n    deleteUserPost(postId: $postId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($templateId: ID!)", "content": "{\n    deleteUserTemplate (templateId: $templateId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($reportId: ID!)", "content": "{\n    deleteUserReport (reportId: $reportId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($templateId: ID!)", "content": "{\n    deleteUserSavedTemplate(templateId: $templateId) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n      loginUser(\n        email: $email\n        password: $password\n      ) {\n        token\n        user {\n          _id\n          username\n          email\n          avatar\n        }\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "mutation", "name": "($username: String!, $email: String!, $password: String!)", "content": "{\n      registerUser(\n        username: $username\n        email: $email\n        password: $password\n      ) {\n        token\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "", "content": "{\n      getCurrentUser {\n        _id\n        username\n        email\n        avatar\n        joinDate\n      }\n    }", "metadata": {"commit_hash": "14f8ac4dc864aa3a2ea67351e6cbafaa40fffc86", "file": "client/src/queries.js", "repo": "DripMicro_Apollo-GrapQL-Mevn"}}, {"type": "query", "name": "user($username: String!)", "content": "{\n    user(username: $username) {\n      _id\n      username\n      email\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/queries.js", "repo": "Moses-Ian_letters"}}, {"type": "query", "name": "", "content": "{\n\t\tme {\n\t\t\tfriends {\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/queries.js", "repo": "Moses-Ian_letters"}}, {"type": "query", "name": "", "content": "{\n\t\twordOfTheDay\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/queries.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n\t\t\t\tdailyHints\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "", "content": "{\n\t\textend {\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "addUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n\t\t\t\tdailyHints\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "addFriend($id: ID!)", "content": "{\n    addFriend(friendId: $id) {\n      _id\n      username\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "addFriendByUsername($username: String!)", "content": "{\n\t\taddFriendByUsername(username: $username) {\n\t\t\tfriends {\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "sendEmail($input:EmailInput!)", "content": "{\n\t\tsendEmail(input:$input) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "shareLobbyByEmail($room: String!, $to: [String]!)", "content": "{\n\t\tshareLobbyByEmail(room: $room, to: $to) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "sendFeedback($input: FeedbackInput!)", "content": "{\n\t\tsendFeedback(input: $input) {\n\t\t\tsuccess\n\t\t\tmessage\n\t\t\terror\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "mutation", "name": "sendNotification($NotificationInput: NotificationInput!)", "content": "{\n\t\tsendNotification(input: $NotificationInput) {\n\t\t\tvoid\n\t\t}\n\t}", "metadata": {"commit_hash": "d6479bab1dd94cbe50f6d997460ff621a46ce51b", "file": "client/src/utils/mutations.js", "repo": "Moses-Ian_letters"}}, {"type": "query", "name": "AlbumList($limit: Int!, $nextToken: String)", "content": "{\n    allAlbums(limit: $limit, nextToken: $nextToken) {\n      albums {\n        AlbumName\n        Artist\n        NumSongs\n        RecordLabel\n        ReleaseYear\n        Sales\n      }\n      nextToken\n    }\n  }", "metadata": {"commit_hash": "b51fb08011eb7f9872aff7c5266f46d15eec0047", "file": "s3-react-app/src/components/Table/queries.tsx", "repo": "sudopla_react-cognito-appsync"}}, {"type": "mutation", "name": "newAlbum($input: AlbumInput!)", "content": "{\n    newAlbum(input: $input) {\n      AlbumName\n      Artist\n    }\n  }", "metadata": {"commit_hash": "b51fb08011eb7f9872aff7c5266f46d15eec0047", "file": "s3-react-app/src/components/Table/NewAlbum.tsx", "repo": "sudopla_react-cognito-appsync"}}, {"type": "mutation", "name": "createUser($input: UserInput!)", "content": "{\n    createUser(input: $input) {\n      email\n    }\n  }", "metadata": {"commit_hash": "b51fb08011eb7f9872aff7c5266f46d15eec0047", "file": "s3-react-app/src/components/NewUser/NewUser.tsx", "repo": "sudopla_react-cognito-appsync"}}, {"type": "query", "name": "AwsNumberOfResources", "content": "{\n    awsNumberOfResources {\n      lambdas\n      tables\n      queues\n      streams\n    }\n  }", "metadata": {"commit_hash": "b51fb08011eb7f9872aff7c5266f46d15eec0047", "file": "s3-react-app/src/components/StartingPage/queries.tsx", "repo": "sudopla_react-cognito-appsync"}}, {"type": "query", "name": "AwsCosts", "content": "{\n    awsCosts {\n      date\n      value\n    }\n  }", "metadata": {"commit_hash": "b51fb08011eb7f9872aff7c5266f46d15eec0047", "file": "s3-react-app/src/components/StartingPage/queries.tsx", "repo": "sudopla_react-cognito-appsync"}}, {"type": "query", "name": "user($id: String!)", "content": "{\n                    user(id: $id) {\n                      id\n                      safeAddresses\n                    }\n                  }", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/dapps/o-passport/processes/identify/connectSafe/connectSafe2.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "user($id: String!)", "content": "{\n                    user(id: $id) {\n                      safes {\n                        id\n                        organization\n                        deployed\n                        balances {\n                          amount\n                          token {\n                            id\n                          }\n                        }\n                      }\n                    }\n                  }", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/dapps/o-onboarding/processes/fromCirclesLand.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertShippingAddress($data: PostAddressInput!)", "content": "{\n  upsertShippingAddress(data: $data) {\n    id\n    name\n    street\n    house\n    zip\n    cityGeonameid\n    city\n    state\n    country\n    notificationEmail\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "createPurchase($lines: [PurchaseLineInput!]!, $deliveryMethodId: Int!, $deliveryAddressId: Int)", "content": "{\n  purchase(\n    lines: $lines\n    deliveryMethodId: $deliveryMethodId\n    deliveryAddressId: $deliveryAddressId\n  ) {\n    id\n    buyerAddress\n    buyerProfile {\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n    sellerAddress\n    sellerProfile {\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n    purchaseId\n    lines {\n      id\n      amount\n      offer {\n        id\n        version\n        createdByAddress\n        createdByProfile {\n          id\n          circlesAddress\n          firstName\n          lastName\n          avatarUrl\n        }\n        pricePerUnit\n        title\n        description\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "requestSessionChallenge($address: String!)", "content": "{\n  requestSessionChallenge(address: $address)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "verifySessionChallenge($challenge: String!, $signature: String!)", "content": "{\n  verifySessionChallenge(challenge: $challenge, signature: $signature) {\n    success\n    errorMessage\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "addNewLang($langToCreate: String, $langToCopyFrom: String)", "content": "{\n  addNewLang(langToCreate: $langToCreate, langToCopyFrom: $langToCopyFrom)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "updateValue($lang: String, $key: String, $createdBy: String, $value: String)", "content": "{\n  updateValue(lang: $lang, key: $key, createdBy: $createdBy, value: $value) {\n    lang\n    key\n    createdBy\n    value\n    version\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "createNewStringAndKey($lang: String, $key: String, $createdBy: String, $version: Int, $value: String)", "content": "{\n  createNewStringAndKey(\n    lang: $lang\n    key: $key\n    createdBy: $createdBy\n    version: $version\n    value: $value\n  ) {\n    lang\n    key\n    createdBy\n    version\n    value\n    needsUpdate\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "setStringUpdateState($key: String)", "content": "{\n  setStringUpdateState(key: $key) {\n    lang\n    key\n    createdBy\n    version\n    value\n    needsUpdate\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "claimInvitation($code: String!)", "content": "{\n  claimInvitation(code: $code) {\n    success\n    claimedInvitation {\n      createdAt\n      createdByProfileId\n      claimedAt\n      claimedByProfileId\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "acknowledge($until: Date!, $safeAddress: String)", "content": "{\n  acknowledge(until: $until, safeAddress: $safeAddress)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "sendMessage($fromSafeAddress: String, $toSafeAddress: String!, $content: String!)", "content": "{\n  sendMessage(\n    fromSafeAddress: $fromSafeAddress\n    toSafeAddress: $toSafeAddress\n    content: $content\n  ) {\n    success\n    error\n    event {\n      block_number\n      direction\n      safe_address\n      safe_address_profile {\n        id\n        firstName\n        lastName\n        avatarUrl\n        circlesAddress\n      }\n      timestamp\n      transaction_hash\n      transaction_index\n      type\n      value\n      tags {\n        id\n        typeId\n        value\n      }\n      payload {\n        ... on ChatMessage {\n          id\n          from\n          from_profile {\n            id\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n          }\n          to\n          to_profile {\n            id\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n          }\n          text\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "addMember($groupId: String!, $memberAddress: String!)", "content": "{\n  addMember(groupId: $groupId, memberAddress: $memberAddress) {\n    error\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "removeMember($groupId: String!, $memberAddress: String!)", "content": "{\n  removeMember(groupId: $groupId, memberAddress: $memberAddress) {\n    error\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "redeemClaimedInvitation", "content": "{\n  redeemClaimedInvitation {\n    success\n    error\n    transactionHash\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "logout", "content": "{\n  logout {\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "tagTransaction($transactionHash: String!, $tag: CreateTagInput!)", "content": "{\n  tagTransaction(transactionHash: $transactionHash, tag: $tag) {\n    success\n    error\n    tag {\n      id\n      typeId\n      value\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertProfile($id: Int, $firstName: String!, $lastName: String, $emailAddress: String, $askedForEmailAddress: Boolean!, $dream: String, $country: String, $avatarUrl: String, $avatarCid: String, $avatarMimeType: String, $circlesAddress: String, $circlesSafeOwner: String, $newsletter: Boolean, $displayCurrency: DisplayCurrency, $displayTimeCircles: Boolean, $cityGeonameid: Int, $status: String!, $successorOfCirclesAddress: String, $gender: Gender, $age: Int)", "content": "{\n  upsertProfile(\n    data: {id: $id, firstName: $firstName, lastName: $lastName, emailAddress: $emailAddress, askedForEmailAddress: $askedForEmailAddress, dream: $dream, country: $country, avatarUrl: $avatarUrl, avatarCid: $avatarCid, avatarMimeType: $avatarMimeType, circlesAddress: $circlesAddress, circlesSafeOwner: $circlesSafeOwner, newsletter: $newsletter, displayCurrency: $displayCurrency, displayTimeCircles: $displayTimeCircles, cityGeonameid: $cityGeonameid, status: $status, successorOfCirclesAddress: $successorOfCirclesAddress, gender: $gender, age: $age}\n  ) {\n    id\n    circlesAddress\n    displayCurrency\n    circlesSafeOwner\n    invitationLink\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    emailAddress\n    askedForEmailAddress\n    dream\n    country\n    avatarUrl\n    avatarCid\n    avatarMimeType\n    newsletter\n    displayTimeCircles\n    displayCurrency\n    cityGeonameid\n    age\n    gender\n    city {\n      geonameid\n      name\n      country\n      latitude\n      longitude\n      population\n    }\n    memberships {\n      isAdmin\n      organisation {\n        id\n        circlesAddress\n        displayCurrency\n        displayName\n        circlesSafeOwner\n        name\n        description\n        avatarUrl\n        cityGeonameid\n        city {\n          geonameid\n          country\n          name\n          population\n        }\n      }\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertOrganisation($organisation: UpsertOrganisationInput!)", "content": "{\n  upsertOrganisation(organisation: $organisation) {\n    success\n    error\n    organisation {\n      id\n      avatarMimeType\n      avatarUrl\n      circlesAddress\n      circlesSafeOwner\n      cityGeonameid\n      city {\n        geonameid\n        country\n        name\n        latitude\n        longitude\n        population\n        feature_code\n      }\n      createdAt\n      description\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertRegion($organisation: UpsertOrganisationInput!)", "content": "{\n  upsertRegion(organisation: $organisation) {\n    success\n    error\n    organisation {\n      id\n      avatarMimeType\n      avatarUrl\n      circlesAddress\n      circlesSafeOwner\n      cityGeonameid\n      city {\n        geonameid\n        country\n        name\n        latitude\n        longitude\n        population\n        feature_code\n      }\n      createdAt\n      description\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "importOrganisations", "content": "{\n  importOrganisationsOfAccount {\n    id\n    circlesAddress\n    name\n    description\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "completePurchase($invoiceId: Int!, $revoke: Boolean)", "content": "{\n  completePurchase(invoiceId: $invoiceId, revoke: $revoke) {\n    id\n    sellerAddress\n    paymentTransactionHash\n    buyerAddress\n    pickupCode\n    buyerSignature\n    buyerSignedDate\n    sellerSignature\n    sellerSignedDate\n    purchase {\n      id\n    }\n    sellerProfile {\n      type\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "completeSale($invoiceId: Int!, $revoke: Boolean)", "content": "{\n  completeSale(invoiceId: $invoiceId, revoke: $revoke) {\n    id\n    sellerAddress\n    paymentTransactionHash\n    buyerAddress\n    pickupCode\n    buyerSignature\n    buyerSignedDate\n    sellerSignature\n    sellerSignedDate\n    sellerProfile {\n      type\n      id\n      circlesAddress\n      firstName\n      lastName\n      avatarUrl\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "verifySafe($safeAddress: String!)", "content": "{\n  verifySafe(safeAddress: $safeAddress) {\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "revokeSafeVerification($safeAddress: String!)", "content": "{\n  revokeSafeVerification(safeAddress: $safeAddress) {\n    success\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "announcePayment($invoiceId: Int!, $transactionHash: String!)", "content": "{\n  announcePayment(invoiceId: $invoiceId, transactionHash: $transactionHash) {\n    transactionHash\n    invoiceId\n    pickupCode\n    simplePickupCode\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertShop($shop: ShopInput!)", "content": "{\n  upsertShop(shop: $shop) {\n    id\n    name\n    description\n    legalText\n    smallBannerUrl\n    largeBannerUrl\n    openingHours\n    adultOnly\n    private\n    productListingStyle\n    owner {\n      id\n      name\n      avatarUrl\n      circlesAddress\n    }\n    categories {\n      id\n      name\n      description\n      sortOrder\n      enabled\n      private\n      largeBannerUrl\n      smallBannerUrl\n      productListingStyle\n      createdAt\n      entries {\n        id\n        sortOrder\n        product {\n          id\n          version\n          title\n          description\n          currentInventory\n          pictureUrl\n          pricePerUnit\n          createdByProfile {\n            id\n            displayName\n            avatarUrl\n            circlesAddress\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertShopCategories($shopCategories: [ShopCategoryInput!]!)", "content": "{\n  upsertShopCategories(shopCategories: $shopCategories) {\n    inserted\n    updated\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertShopCategoryEntries($shopCategoryEntries: [ShopCategoryEntryInput!]!)", "content": "{\n  upsertShopCategoryEntries(shopCategoryEntries: $shopCategoryEntries) {\n    inserted\n    updated\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "confirmLegalAge($age: Int!)", "content": "{\n  confirmLegalAge(age: $age)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "upsertOffer($offer: OfferInput!)", "content": "{\n  upsertOffer(offer: $offer) {\n    id\n    version\n    createdAt\n    createdByAddress\n    title\n    description\n    pictureUrl\n    pricePerUnit\n    minAge\n    currentInventory\n    timeCirclesPriceShare\n    tags {\n      typeId\n      value\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "proofUniqueness($humanodeToken: String!)", "content": "{\n  proofUniqueness(humanodeToken: $humanodeToken) {\n    existingSafe\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "init", "content": "{\n  init {\n    isLoggedOn\n    hasProfile\n    profileId\n    capabilities {\n      type\n    }\n    useShortSignup\n    profile {\n      id\n      circlesAddress\n      displayCurrency\n      confirmedLegalAge\n      circlesSafeOwner\n      invitationLink\n      successorOfCirclesAddress\n      displayName\n      firstName\n      lastName\n      emailAddress\n      askedForEmailAddress\n      dream\n      country\n      avatarUrl\n      avatarCid\n      avatarMimeType\n      newsletter\n      displayTimeCircles\n      displayCurrency\n      cityGeonameid\n      provenUniqueness\n      shippingAddresses {\n        id\n        name\n        street\n        house\n        zip\n        city\n        state\n        country\n        notificationEmail\n        cityGeonameid\n      }\n      shops {\n        id\n      }\n      city {\n        geonameid\n        name\n        country\n      }\n      shippingAddresses {\n        id\n        name\n        street\n        house\n        city\n        cityGeonameid\n        zip\n        state\n        country\n        notificationEmail\n      }\n      memberships {\n        isAdmin\n        organisation {\n          id\n          circlesAddress\n          displayCurrency\n          displayName\n          circlesSafeOwner\n          name\n          description\n          avatarUrl\n          cityGeonameid\n          city {\n            geonameid\n            country\n            name\n            population\n          }\n        }\n      }\n      verifications {\n        createdAt\n        revokedAt\n        verifierSafeAddress\n        verifierProfile {\n          id\n          circlesAddress\n          displayCurrency\n          avatarUrl\n          name\n          city {\n            geonameid\n            name\n            country\n          }\n        }\n      }\n      claimedInvitation {\n        claimedAt\n      }\n      invitationTransaction {\n        timestamp\n        transaction_hash\n      }\n      circlesTokenAddress\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "deliveryMethods", "content": "{\n  deliveryMethods {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "lastAcknowledgedAt($safeAddress: String!)", "content": "{\n  lastAcknowledgedAt(safeAddress: $safeAddress)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "sessionInfo", "content": "{\n  sessionInfo {\n    isLoggedOn\n    hasProfile\n    profileId\n    capabilities {\n      type\n    }\n    useShortSignup\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "claimedInvitation", "content": "{\n  claimedInvitation {\n    createdAt\n    createdByProfileId\n    claimedAt\n    claimedByProfileId\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "invitationTransaction", "content": "{\n  invitationTransaction {\n    transaction_hash\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "hubSignupTransaction", "content": "{\n  hubSignupTransaction {\n    transaction_hash\n    payload {\n      ... on CrcSignup {\n        token\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "safeInfo", "content": "{\n  safeInfo {\n    lastUbiAt\n    safeAddress\n    tokenAddress\n    randomValue\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "stats", "content": "{\n  stats {\n    profilesCount\n    verificationsCount\n    goals {\n      lastGoal\n      currentValue\n      nextGoal\n    }\n    myRank {\n      rank\n      redeemedInvitationsCount\n    }\n    leaderboard {\n      createdByCirclesAddress\n      inviteCount\n      createdByProfile {\n        id\n        circlesAddress\n        displayCurrency\n        circlesSafeOwner\n        displayName\n        firstName\n        lastName\n        dream\n        avatarUrl\n        cityGeonameid\n        provenUniqueness\n        city {\n          geonameid\n          name\n          country\n          latitude\n          longitude\n          population\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "findSafesByOwner($owner: String!)", "content": "{\n  findSafesByOwner(owner: $owner) {\n    type\n    safeAddress\n    lastUbiAt\n    randomValue\n    tokenAddress\n    safeProfile {\n      id\n      circlesAddress\n      displayCurrency\n      circlesSafeOwner\n      displayName\n      firstName\n      lastName\n      dream\n      avatarUrl\n      cityGeonameid\n      provenUniqueness\n      city {\n        geonameid\n        name\n        country\n        latitude\n        longitude\n        population\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "myInvitations", "content": "{\n  myInvitations {\n    createdAt\n    claimedAt\n    claimedBy {\n      circlesAddress\n      displayCurrency\n      circlesSafeOwner\n      displayName\n      firstName\n      lastName\n      avatarUrl\n    }\n    name\n    address\n    balance\n    code\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "myProfile", "content": "{\n  myProfile {\n    id\n    circlesAddress\n    displayCurrency\n    circlesSafeOwner\n    invitationLink\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    emailAddress\n    askedForEmailAddress\n    dream\n    country\n    avatarUrl\n    avatarCid\n    avatarMimeType\n    newsletter\n    displayTimeCircles\n    displayCurrency\n    cityGeonameid\n    provenUniqueness\n    shops {\n      id\n    }\n    city {\n      geonameid\n      name\n      country\n      latitude\n      longitude\n      population\n    }\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n      notificationEmail\n    }\n    memberships {\n      isAdmin\n      organisation {\n        id\n        circlesAddress\n        displayCurrency\n        displayName\n        circlesSafeOwner\n        name\n        description\n        avatarUrl\n        cityGeonameid\n        shops {\n          id\n        }\n        city {\n          geonameid\n          country\n          name\n          population\n        }\n      }\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "profiles($id: [Int!]!)", "content": "{\n  profilesById(ids: $id) {\n    id\n    circlesAddress\n    displayCurrency\n    circlesSafeOwner\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    dream\n    avatarUrl\n    displayCurrency\n    provenUniqueness\n    city {\n      geonameid\n      name\n      country\n    }\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n      notificationEmail\n    }\n    memberships {\n      isAdmin\n      organisation {\n        id\n        circlesAddress\n        displayCurrency\n        displayName\n        circlesSafeOwner\n        name\n        description\n        avatarUrl\n        cityGeonameid\n        city {\n          geonameid\n          country\n          name\n          population\n        }\n      }\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        displayName\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "citiesByName($name: String!, $languageCode: String)", "content": "{\n  cities(query: {byName: {name_like: $name, languageCode: $languageCode}}) {\n    geonameid\n    name\n    country\n    population\n    latitude\n    longitude\n    feature_code\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "citiesById($ids: [Int!]!)", "content": "{\n  cities(query: {byId: {geonameid: $ids}}) {\n    geonameid\n    name\n    country\n    population\n    latitude\n    longitude\n    feature_code\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "profilesByName($searchString: String!)", "content": "{\n  search(query: {searchString: $searchString}) {\n    id\n    origin\n    circlesSafeOwner\n    circlesAddress\n    displayCurrency\n    successorOfCirclesAddress\n    avatarUrl\n    displayName\n    firstName\n    lastName\n    dream\n    country\n    displayCurrency\n    provenUniqueness\n    city {\n      geonameid\n      name\n      country\n    }\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n      notificationEmail\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        displayName\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "getRecentProfiles($pagination: PaginationArgs)", "content": "{\n  recentProfiles(pagination: $pagination) {\n    id\n    circlesAddress\n    displayCurrency\n    origin\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    dream\n    country\n    avatarUrl\n    provenUniqueness\n    city {\n      geonameid\n      name\n      country\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        displayName\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "profilesByCirclesAddress($circlesAddresses: [String!]!)", "content": "{\n  profilesBySafeAddress(safeAddresses: $circlesAddresses) {\n    id\n    circlesAddress\n    displayCurrency\n    origin\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    dream\n    avatarUrl\n    provenUniqueness\n    city {\n      geonameid\n      name\n      country\n    }\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n      notificationEmail\n    }\n    memberships {\n      isAdmin\n      organisation {\n        id\n        circlesAddress\n        displayCurrency\n        displayName\n        circlesSafeOwner\n        name\n        description\n        avatarUrl\n        cityGeonameid\n        city {\n          geonameid\n          country\n          name\n          population\n        }\n      }\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        displayName\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "profilesByIds($id: [Int!]!)", "content": "{\n  profilesById(ids: $id) {\n    id\n    circlesAddress\n    displayCurrency\n    origin\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    dream\n    avatarUrl\n    provenUniqueness\n    city {\n      geonameid\n      name\n      country\n    }\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n      notificationEmail\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        displayName\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "trustRelations($safeAddress: String!)", "content": "{\n  trustRelations(safeAddress: $safeAddress) {\n    safeAddress\n    safeAddressProfile {\n      id\n      displayName\n      firstName\n      lastName\n      origin\n      avatarUrl\n      successorOfCirclesAddress\n      circlesAddress\n      displayCurrency\n      provenUniqueness\n    }\n    direction\n    otherSafeAddress\n    otherSafeAddressProfile {\n      id\n      displayName\n      firstName\n      lastName\n      avatarUrl\n      successorOfCirclesAddress\n      circlesAddress\n      displayCurrency\n      provenUniqueness\n      verifications {\n        createdAt\n        revokedAt\n        verifierSafeAddress\n        verifierProfile {\n          id\n          circlesAddress\n          displayCurrency\n          avatarUrl\n          name\n          city {\n            geonameid\n            name\n            country\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "profileById($id: Int!)", "content": "{\n  profilesById(ids: [$id]) {\n    id\n    successorOfCirclesAddress\n    circlesSafeOwner\n    circlesAddress\n    displayCurrency\n    avatarUrl\n    displayName\n    firstName\n    lastName\n    dream\n    city {\n      geonameid\n      country\n      name\n    }\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n      notificationEmail\n    }\n    provenUniqueness\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        displayName\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "profileBySafeAddress($safeAddress: String!)", "content": "{\n  profilesBySafeAddress(safeAddresses: [$safeAddress]) {\n    id\n    circlesAddress\n    displayCurrency\n    circlesSafeOwner\n    invitationLink\n    successorOfCirclesAddress\n    displayName\n    firstName\n    lastName\n    emailAddress\n    askedForEmailAddress\n    dream\n    country\n    avatarUrl\n    avatarCid\n    avatarMimeType\n    newsletter\n    displayTimeCircles\n    displayCurrency\n    cityGeonameid\n    provenUniqueness\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n      notificationEmail\n      cityGeonameid\n    }\n    shops {\n      id\n    }\n    city {\n      geonameid\n      name\n      country\n    }\n    shippingAddresses {\n      id\n      name\n      street\n      house\n      city\n      cityGeonameid\n      zip\n      state\n      country\n      notificationEmail\n    }\n    memberships {\n      isAdmin\n      organisation {\n        id\n        circlesAddress\n        displayCurrency\n        displayName\n        circlesSafeOwner\n        name\n        description\n        avatarUrl\n        cityGeonameid\n        city {\n          geonameid\n          country\n          name\n          population\n        }\n      }\n    }\n    verifications {\n      createdAt\n      revokedAt\n      verifierSafeAddress\n      verifierProfile {\n        id\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        name\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n    }\n    claimedInvitation {\n      claimedAt\n    }\n    invitationTransaction {\n      timestamp\n      transaction_hash\n    }\n    circlesTokenAddress\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "tags($typeId_in: [String!]!, $value_like: String)", "content": "{\n  tags(query: {typeId_in: $typeId_in, value_like: $value_like}) {\n    typeId\n    id\n    value\n    order\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "organisations($pagination: PaginationArgs)", "content": "{\n  organisations(pagination: $pagination) {\n    id\n    circlesAddress\n    displayCurrency\n    createdAt\n    name\n    avatarUrl\n    city {\n      geonameid\n      name\n      country\n    }\n    shops {\n      id\n      name\n      description\n      legalText\n      largeBannerUrl\n      smallBannerUrl\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "regions", "content": "{\n  regions {\n    id\n    circlesAddress\n    displayCurrency\n    createdAt\n    name\n    avatarUrl\n    city {\n      geonameid\n      name\n      country\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "organisationsByAddress($addresses: [String!]!)", "content": "{\n  organisationsByAddress(addresses: $addresses) {\n    id\n    circlesAddress\n    displayCurrency\n    createdAt\n    name\n    avatarUrl\n    displayName\n    city {\n      geonameid\n      name\n      country\n    }\n    shops {\n      id\n      name\n      description\n      legalText\n      smallBannerUrl\n      largeBannerUrl\n    }\n    members {\n      ... on Organisation {\n        id\n        circlesAddress\n        displayCurrency\n        createdAt\n        name\n        displayName\n        avatarUrl\n        city {\n          geonameid\n          name\n          country\n        }\n      }\n      ... on Profile {\n        id\n        successorOfCirclesAddress\n        circlesSafeOwner\n        circlesAddress\n        displayCurrency\n        avatarUrl\n        displayName\n        firstName\n        lastName\n        dream\n        provenUniqueness\n        city {\n          geonameid\n          country\n          name\n        }\n        shippingAddresses {\n          id\n          name\n          street\n          house\n          zip\n          city\n          state\n          country\n          notificationEmail\n        }\n        verifications {\n          createdAt\n          revokedAt\n          verifierSafeAddress\n          verifierProfile {\n            id\n            circlesAddress\n            displayCurrency\n            avatarUrl\n            name\n            city {\n              geonameid\n              name\n              country\n            }\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "commonTrust($safeAddress1: String!, $safeAddress2: String!)", "content": "{\n  commonTrust(safeAddress1: $safeAddress1, safeAddress2: $safeAddress2) {\n    type\n    safeAddress1\n    safeAddress2\n    profile {\n      id\n      displayName\n      firstName\n      lastName\n      avatarUrl\n      successorOfCirclesAddress\n      circlesAddress\n      displayCurrency\n      provenUniqueness\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "tagById($id: Int!)", "content": "{\n  tagById(id: $id) {\n    id\n    typeId\n    value\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "stream($types: [EventType!]!, $safeAddress: String!, $pagination: PaginationArgs!, $filter: ProfileEventFilter)", "content": "{\n  events(\n    types: $types\n    safeAddress: $safeAddress\n    pagination: $pagination\n    filter: $filter\n  ) {\n    timestamp\n    transaction_hash\n    block_number\n    safe_address\n    contact_address\n    contact_address_profile {\n      type\n      successorOfCirclesAddress\n      circlesAddress\n      displayCurrency\n      displayName\n      firstName\n      lastName\n      avatarUrl\n      provenUniqueness\n    }\n    direction\n    type\n    payload {\n      ... on CrcHubTransfer {\n        transaction_hash\n        from\n        from_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        to\n        to_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        flow\n        transfers {\n          token\n          from\n          from_profile {\n            id\n            displayName\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n            displayCurrency\n            provenUniqueness\n          }\n          to\n          to_profile {\n            id\n            displayName\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n            displayCurrency\n            provenUniqueness\n          }\n          value\n        }\n        tags {\n          id\n          typeId\n          value\n        }\n      }\n      ... on CrcTrust {\n        transaction_hash\n        address\n        can_send_to\n        can_send_to_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        limit\n      }\n      ... on CrcSignup {\n        transaction_hash\n        user\n        token\n      }\n      ... on CrcMinting {\n        transaction_hash\n        token\n        from\n        from_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        to\n        to_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        value\n      }\n      ... on EthTransfer {\n        transaction_hash\n        from\n        to\n        value\n      }\n      ... on Erc20Transfer {\n        transaction_hash\n        from\n        from_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        to\n        to_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        value\n      }\n      ... on GnosisSafeEthTransfer {\n        transaction_hash\n        initiator\n        from\n        to\n        value\n      }\n      ... on ChatMessage {\n        id\n        from\n        from_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        to\n        to_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        text\n      }\n      ... on MembershipOffer {\n        createdBy\n        createdBy_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        organisation\n        organisation_profile {\n          name\n          avatarUrl\n          circlesAddress\n          displayCurrency\n        }\n        isAdmin\n      }\n      ... on MembershipAccepted {\n        createdBy\n        member\n        member_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        organisation\n        organisation_profile {\n          name\n          avatarUrl\n          circlesAddress\n          displayCurrency\n        }\n      }\n      ... on MembershipRejected {\n        member\n        member_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        organisation\n        organisation_profile {\n          name\n          avatarUrl\n          circlesAddress\n          displayCurrency\n        }\n      }\n      ... on WelcomeMessage {\n        invitedBy\n        invitedBy_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n      }\n      ... on InvitationCreated {\n        name\n        code\n      }\n      ... on InvitationRedeemed {\n        name\n        code\n        redeemedBy\n        redeemedBy_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n      }\n      ... on SaleEvent {\n        buyer\n        buyer_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        invoice {\n          id\n          buyerSignature\n          buyerSignedDate\n          sellerSignature\n          sellerSignedDate\n          deliveryMethod {\n            id\n            name\n          }\n          deliveryAddress {\n            name\n            id\n            street\n            house\n            zip\n            city\n            state\n            country\n            cityGeonameid\n            notificationEmail\n          }\n          createdAt\n          cancelledAt\n          cancelReason\n          simplePickupCode\n          paymentTransactionHash\n          simplePickupCode\n          lines {\n            amount\n            metadata\n            shop {\n              id\n              name\n              description\n              legalText\n              smallBannerUrl\n              largeBannerUrl\n              openingHours\n              private\n              enabled\n              productListingStyle\n              shopListingStyle\n              purchaseMetaDataKeys\n              tosLink\n              privacyPolicyLink\n              healthInfosLink\n              adultOnly\n              ownerId\n              owner {\n                id\n                name\n                avatarUrl\n                circlesAddress\n              }\n              deliveryMethods {\n                id\n                name\n              }\n            }\n            offer {\n              id\n              title\n              pictureUrl\n              pricePerUnit\n              minAge\n              currentInventory\n              tags {\n                typeId\n                value\n              }\n            }\n          }\n        }\n      }\n      ... on Purchased {\n        seller_profile {\n          id\n          displayName\n          firstName\n          lastName\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n        purchase {\n          id\n          createdAt\n          createdByAddress\n          total\n          deliveryMethod {\n            id\n            name\n          }\n          deliveryAddress {\n            name\n            id\n            street\n            house\n            zip\n            city\n            state\n            country\n            cityGeonameid\n            notificationEmail\n          }\n          lines {\n            id\n            amount\n            metadata\n            shop {\n              id\n              name\n              description\n              legalText\n              smallBannerUrl\n              largeBannerUrl\n              openingHours\n              private\n              enabled\n              productListingStyle\n              shopListingStyle\n              purchaseMetaDataKeys\n              tosLink\n              privacyPolicyLink\n              healthInfosLink\n              adultOnly\n              ownerId\n              pickupAddress {\n                name\n                street\n                house\n                zip\n                city\n                state\n                country\n              }\n              owner {\n                id\n                name\n                avatarUrl\n                circlesAddress\n              }\n              deliveryMethods {\n                id\n                name\n              }\n            }\n            offer {\n              id\n              pictureUrl\n              title\n              description\n              pricePerUnit\n              minAge\n              tags {\n                typeId\n                value\n              }\n            }\n          }\n          invoices {\n            id\n            pickupCode\n            deliveryMethod {\n              id\n              name\n            }\n            simplePickupCode\n            buyerProfile {\n              id\n              displayName\n              firstName\n              lastName\n              avatarUrl\n              circlesAddress\n              displayCurrency\n              provenUniqueness\n            }\n            sellerProfile {\n              id\n              displayName\n              firstName\n              lastName\n              avatarUrl\n              circlesAddress\n              displayCurrency\n              provenUniqueness\n            }\n            paymentTransactionHash\n            createdAt\n            cancelledAt\n            invoiceNo\n            sellerSignature\n            buyerSignature\n          }\n        }\n      }\n      ... on OrganisationCreated {\n        organisation\n        organisation_profile {\n          name\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          displayCurrency\n        }\n      }\n      ... on MemberAdded {\n        createdBy\n        isAdmin\n        member\n        organisation\n        organisation_profile {\n          name\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          displayCurrency\n        }\n      }\n      ... on SafeVerified {\n        safe_address\n        organisation_profile {\n          name\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          displayCurrency\n        }\n      }\n      ... on NewUser {\n        profile {\n          id\n          displayName\n          firstName\n          lastName\n          dream\n          avatarUrl\n          circlesAddress\n          displayCurrency\n          provenUniqueness\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "aggregates($types: [AggregateType!]!, $safeAddress: String!, $filter: ProfileAggregateFilter)", "content": "{\n  aggregates(types: $types, safeAddress: $safeAddress, filter: $filter) {\n    type\n    safe_address\n    safe_address_profile {\n      id\n      displayName\n      firstName\n      lastName\n      avatarUrl\n      circlesAddress\n      displayCurrency\n      provenUniqueness\n    }\n    payload {\n      ... on Offers {\n        lastUpdatedAt\n        offers {\n          id\n          version\n          createdByProfile {\n            id\n            displayName\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n            displayCurrency\n            smallBannerUrl\n            provenUniqueness\n          }\n          tags {\n            typeId\n            value\n            order\n          }\n          createdByAddress\n          createdAt\n          title\n          minAge\n          pictureUrl\n          pictureMimeType\n          description\n          pricePerUnit\n          timeCirclesPriceShare\n        }\n      }\n      ... on Erc721Tokens {\n        lastUpdatedAt\n        balances {\n          token_no\n          token_symbol\n          token_name\n          token_address\n          token_owner_profile {\n            id\n            circlesAddress\n            displayName\n            avatarUrl\n            firstName\n            lastName\n            provenUniqueness\n          }\n          token_no\n          token_url\n        }\n      }\n      ... on CrcBalances {\n        lastUpdatedAt\n        balances {\n          token_address\n          token_owner_address\n          token_owner_profile {\n            id\n            displayName\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n            displayCurrency\n            provenUniqueness\n          }\n          token_balance\n        }\n      }\n      ... on Erc20Balances {\n        lastUpdatedAt\n        balances {\n          token_address\n          token_owner_address\n          token_owner_profile {\n            id\n            displayName\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n            displayCurrency\n            provenUniqueness\n          }\n          token_balance\n        }\n      }\n      ... on Contacts {\n        lastUpdatedAt\n        contacts {\n          metadata {\n            name\n            directions\n            values\n            timestamps\n          }\n          lastContactAt\n          contactAddress\n          contactAddress_Profile {\n            type\n            id\n            displayName\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n            displayCurrency\n            provenUniqueness\n            city {\n              geonameid\n              name\n              country\n            }\n            memberships {\n              isAdmin\n              organisation {\n                id\n                circlesAddress\n                displayCurrency\n                displayName\n                circlesSafeOwner\n                name\n                description\n                avatarUrl\n                cityGeonameid\n                city {\n                  geonameid\n                  country\n                  name\n                  population\n                }\n              }\n            }\n            members {\n              type\n              id\n              displayName\n              firstName\n              lastName\n              avatarUrl\n              circlesAddress\n              displayCurrency\n              city {\n                geonameid\n                name\n                country\n              }\n            }\n            verifications {\n              createdAt\n              revokedAt\n              verifierSafeAddress\n              verifierProfile {\n                id\n                circlesAddress\n                displayCurrency\n                avatarUrl\n                name\n                city {\n                  geonameid\n                  name\n                  country\n                }\n              }\n            }\n          }\n        }\n      }\n      ... on Members {\n        lastUpdatedAt\n        members {\n          ... on Profile {\n            successorOfCirclesAddress\n            circlesAddress\n            displayCurrency\n            provenUniqueness\n          }\n          ... on Organisation {\n            circlesAddress\n            displayCurrency\n          }\n        }\n      }\n      ... on Memberships {\n        lastUpdatedAt\n        organisations {\n          id\n          circlesAddress\n          displayCurrency\n          displayName\n          circlesSafeOwner\n          name\n          description\n          avatarUrl\n          cityGeonameid\n          city {\n            geonameid\n            country\n            name\n            population\n          }\n        }\n      }\n      ... on Purchases {\n        lastUpdatedAt\n        purchases {\n          id\n          createdAt\n          createdByAddress\n          createdByProfile {\n            id\n            displayName\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n            displayCurrency\n            provenUniqueness\n          }\n          deliveryMethod {\n            id\n            name\n          }\n          total\n          lines {\n            id\n            amount\n            metadata\n            shop {\n              id\n              name\n              description\n              legalText\n              smallBannerUrl\n              largeBannerUrl\n              openingHours\n              private\n              enabled\n              productListingStyle\n              shopListingStyle\n              purchaseMetaDataKeys\n              tosLink\n              privacyPolicyLink\n              healthInfosLink\n              adultOnly\n              ownerId\n              owner {\n                id\n                name\n                avatarUrl\n                circlesAddress\n              }\n              deliveryMethods {\n                id\n                name\n              }\n            }\n            offer {\n              id\n              version\n              title\n              description\n              pictureUrl\n              pricePerUnit\n              minAge\n              timeCirclesPriceShare\n              createdByProfile {\n                id\n                displayName\n                firstName\n                lastName\n                avatarUrl\n                circlesAddress\n                displayCurrency\n                provenUniqueness\n              }\n              tags {\n                typeId\n                value\n              }\n            }\n          }\n          invoices {\n            id\n            sellerAddress\n            paymentTransactionHash\n            buyerAddress\n            pickupCode\n            deliveryMethod {\n              id\n              name\n            }\n            simplePickupCode\n            buyerSignature\n            buyerSignedDate\n            sellerSignature\n            sellerSignedDate\n            createdAt\n            cancelledAt\n            cancelReason\n            sellerProfile {\n              id\n              displayName\n              firstName\n              lastName\n              avatarUrl\n              circlesAddress\n              displayCurrency\n              provenUniqueness\n            }\n          }\n        }\n      }\n      ... on Sales {\n        lastUpdatedAt\n        sales {\n          id\n          createdAt\n          sellerProfile {\n            id\n            displayName\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n            displayCurrency\n            provenUniqueness\n          }\n          buyerProfile {\n            id\n            displayName\n            firstName\n            lastName\n            avatarUrl\n            circlesAddress\n            displayCurrency\n            verifications {\n              createdAt\n              revokedAt\n              verifierSafeAddress\n              verifierProfile {\n                id\n                circlesAddress\n                displayCurrency\n                avatarUrl\n                name\n                city {\n                  geonameid\n                  name\n                  country\n                }\n              }\n            }\n          }\n          total\n          lines {\n            id\n            amount\n            metadata\n            shop {\n              id\n              name\n              description\n              legalText\n              smallBannerUrl\n              largeBannerUrl\n              openingHours\n              private\n              enabled\n              productListingStyle\n              shopListingStyle\n              purchaseMetaDataKeys\n              tosLink\n              privacyPolicyLink\n              healthInfosLink\n              adultOnly\n              ownerId\n              owner {\n                id\n                name\n                avatarUrl\n                circlesAddress\n              }\n              deliveryMethods {\n                id\n                name\n              }\n            }\n            offer {\n              id\n              version\n              title\n              description\n              pictureUrl\n              pricePerUnit\n              minAge\n              timeCirclesPriceShare\n              createdByProfile {\n                id\n                displayName\n                firstName\n                lastName\n                avatarUrl\n                circlesAddress\n                displayCurrency\n                provenUniqueness\n              }\n              tags {\n                typeId\n                value\n              }\n            }\n          }\n          invoices {\n            id\n            sellerAddress\n            paymentTransactionHash\n            buyerAddress\n            pickupCode\n            deliveryMethod {\n              id\n              name\n            }\n            deliveryAddress {\n              name\n              id\n              street\n              house\n              zip\n              city\n              state\n              country\n              cityGeonameid\n              notificationEmail\n            }\n            simplePickupCode\n            buyerSignature\n            buyerSignedDate\n            sellerSignature\n            sellerSignedDate\n            createdAt\n            cancelledAt\n            cancelReason\n            buyerProfile {\n              id\n              displayName\n              firstName\n              lastName\n              avatarUrl\n              circlesAddress\n              displayCurrency\n              provenUniqueness\n              verifications {\n                createdAt\n                revokedAt\n                verifierSafeAddress\n                verifierProfile {\n                  id\n                  circlesAddress\n                  displayCurrency\n                  avatarUrl\n                  name\n                  city {\n                    geonameid\n                    name\n                    country\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "getAllStringsByMaxVersion", "content": "{\n  getAllStringsByMaxVersion {\n    lang\n    key\n    createdBy\n    version\n    value\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "getAllStringsByMaxVersionAndLang($lang: String)", "content": "{\n  getAllStringsByMaxVersionAndLang(lang: $lang) {\n    lang\n    key\n    createdBy\n    version\n    value\n    needsUpdate\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "getStringsToBeUpdatedAmount($lang: String, $key: String)", "content": "{\n  getStringsToBeUpdatedAmount(lang: $lang, key: $key)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "getStringByMaxVersion($lang: String, $key: String)", "content": "{\n  getStringByMaxVersion(lang: $lang, key: $key) {\n    lang\n    key\n    createdBy\n    version\n    value\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "getOlderVersionsByKeyAndLang($key: String, $lang: String)", "content": "{\n  getOlderVersionsByKeyAndLang(lang: $lang, key: $key) {\n    lang\n    key\n    createdBy\n    version\n    value\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "getPaginatedStrings($pagination_key: String, $key: String, $lang: String, $value: String)", "content": "{\n  getPaginatedStrings(\n    pagination_key: $pagination_key\n    key: $key\n    lang: $lang\n    value: $value\n  ) {\n    lang\n    key\n    createdBy\n    version\n    value\n    pagination_key\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "getPaginatedStringsToUpdate($pagination_key: String, $key: String, $lang: String, $value: String)", "content": "{\n  getPaginatedStringsToUpdate(\n    pagination_key: $pagination_key\n    key: $key\n    lang: $lang\n    value: $value\n  ) {\n    lang\n    key\n    createdBy\n    version\n    value\n    pagination_key\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "getAvailableLanguages", "content": "{\n  getAvailableLanguages {\n    lang\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "directPath($from: String!, $to: String!, $amount: String!)", "content": "{\n  directPath(from: $from, to: $to, amount: $amount) {\n    flow\n    transfers {\n      from\n      to\n      token\n      tokenOwner\n      value\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "invoice($invoiceId: Int!)", "content": "{\n  invoice(invoiceId: $invoiceId)\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "verifications($pagination: PaginationArgs, $filter: VerifiedSafesFilter)", "content": "{\n  verifications(pagination: $pagination, filter: $filter) {\n    createdAt\n    revokedAt\n    verifierSafeAddress\n    verifierProfile {\n      id\n      circlesAddress\n      displayCurrency\n      avatarUrl\n      name\n      city {\n        geonameid\n        name\n        country\n      }\n    }\n    verifiedSafeAddress\n    verifiedProfile {\n      id\n      displayName\n      firstName\n      lastName\n      avatarUrl\n      circlesAddress\n      displayCurrency\n      provenUniqueness\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "findInvitationCreator($code: String!)", "content": "{\n  findInvitationCreator(code: $code) {\n    circlesAddress\n    displayCurrency\n    displayName\n    firstName\n    lastName\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "shop($id: Int!)", "content": "{\n  shop(id: $id) {\n    id\n    name\n    description\n    legalText\n    smallBannerUrl\n    largeBannerUrl\n    openingHours\n    private\n    enabled\n    productListingStyle\n    shopListingStyle\n    purchaseMetaDataKeys\n    tosLink\n    privacyPolicyLink\n    healthInfosLink\n    adultOnly\n    ownerId\n    owner {\n      id\n      name\n      avatarUrl\n      circlesAddress\n    }\n    deliveryMethods {\n      id\n      name\n    }\n    pickupAddress {\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n    }\n    categories {\n      id\n      name\n      description\n      sortOrder\n      shopId\n      smallBannerUrl\n      largeBannerUrl\n      private\n      enabled\n      createdAt\n      productListingStyle\n      entries {\n        id\n        sortOrder\n        private\n        productId\n        productVersion\n        shopCategoryId\n        enabled\n        product {\n          id\n          version\n          title\n          description\n          pictureUrl\n          pricePerUnit\n          minAge\n          currentInventory\n          createdByProfile {\n            id\n            displayName\n            avatarUrl\n            circlesAddress\n            provenUniqueness\n          }\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "shops($ownerId: Int)", "content": "{\n  shops(ownerId: $ownerId) {\n    id\n    createdAt\n    name\n    description\n    legalText\n    smallBannerUrl\n    largeBannerUrl\n    openingHours\n    private\n    enabled\n    shopListingStyle\n    productListingStyle\n    sortOrder\n    ownerId\n    adultOnly\n    tosLink\n    privacyPolicyLink\n    healthInfosLink\n    deliveryMethods {\n      id\n      name\n    }\n    owner {\n      id\n      name\n      avatarUrl\n      circlesAddress\n    }\n    pickupAddress {\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "shopsById($ids: [Int!]!)", "content": "{\n  shopsById(ids: $ids) {\n    id\n    createdAt\n    name\n    description\n    legalText\n    smallBannerUrl\n    largeBannerUrl\n    openingHours\n    private\n    enabled\n    shopListingStyle\n    productListingStyle\n    sortOrder\n    ownerId\n    tosLink\n    adultOnly\n    privacyPolicyLink\n    healthInfosLink\n    deliveryMethods {\n      id\n      name\n    }\n    owner {\n      id\n      name\n      avatarUrl\n      circlesAddress\n    }\n    pickupAddress {\n      name\n      street\n      house\n      zip\n      city\n      state\n      country\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "clientAssertionJwt", "content": "{\n  clientAssertionJwt\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "query", "name": "offersByIdAndVersion($query: [OfferByIdAndVersionInput!]!)", "content": "{\n  offersByIdAndVersion(query: $query) {\n    id\n    title\n    pictureUrl\n    pricePerUnit\n    currentInventory\n    version\n    tags {\n      typeId\n      value\n    }\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "subscription", "name": "events", "content": "{\n  events {\n    type\n    from\n    to\n    itemId\n    transaction_hash\n  }\n}", "metadata": {"commit_hash": "9600f51bca95850e3de34b83ca4187f273c371e5", "file": "shell/src/shared/api/data/types.ts", "repo": "circlesland_o-platform"}}, {"type": "mutation", "name": "SaveSurveyMutation($surveyId: String!, $submissionId: String!, $answers: [InputSurveyAnswer]!)", "content": "{\n        submitSurveyResponse(surveyId: $surveyId, submissionId: $submissionId, answers: $answers) {\n            id\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/survey/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "GetCurrentUser", "content": "{\n        getCurrentUser {\n            id\n            name\n            role\n            aff\n            email\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/core/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "isUserAuthenticated", "content": "{\n        isAuthenticated @client(always: true)\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/core/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "getConfig", "content": "{\n        config @client(always: true)\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/core/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SetLogoutError", "content": "{\n        setLogoutError @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/core/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "ApplicationError", "content": "{\n        feedback @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/core/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "GetSubmissions", "content": "{\n        getSubmissions {\n            id\n            lastStepVisited\n            manuscriptDetails {\n                title\n            }\n            updated\n            articleType\n            status\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/dashboard/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "StartSubmision($articleType: String!)", "content": "{\n        startSubmission(articleType: $articleType) {\n            id\n            lastStepVisited\n            manuscriptDetails {\n                title\n            }\n            updated\n            articleType\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/dashboard/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "DeleteSubmission($id: ID!)", "content": "{\n        deleteSubmission(id: $id)\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/dashboard/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveArticleType($id: ID!, $articleType: String!)", "content": "{\n        saveArticleType(id: $id, articleType: $articleType) {\n            id\n            updated\n            lastStepVisited\n            articleType\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/dashboard/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "GetSubmission($id: ID!)", "content": "{\n        getSubmission(id: $id) {\n            id\n            articleType\n            lastStepVisited\n            manuscriptDetails {\n                title\n                subjects\n                previouslyDiscussed\n                previouslySubmitted\n                cosubmission\n            }\n            updated\n            author {\n                firstName\n                lastName\n                email\n                institution\n            }\n            files {\n                coverLetter\n                manuscriptFile {\n                    filename\n                    url\n                    downloadLink\n                }\n                supportingFiles {\n                    filename\n                    id\n                }\n            }\n            editorDetails {\n                suggestedSeniorEditors\n                opposedSeniorEditors\n                opposedSeniorEditorsReason\n                suggestedReviewingEditors\n                opposedReviewingEditors\n                opposedReviewingEditorsReason\n                suggestedReviewers {\n                    name\n                    email\n                }\n                opposedReviewers {\n                    name\n                    email\n                }\n                opposedReviewersReason\n            }\n            suggestions {\n                fieldName\n                value\n            }\n            disclosure {\n                submitterSignature\n                disclosureConsent\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveAuthorPage($id: ID!, $details: AuthorDetailsInput!)", "content": "{\n        saveAuthorPage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            author {\n                firstName\n                lastName\n                email\n                institution\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveFilesPage($id: ID!, $coverLetter: String)", "content": "{\n        saveFilesPage(id: $id, coverLetter: $coverLetter) {\n            id\n            lastStepVisited\n            files {\n                coverLetter\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "UploadManuscript($id: ID!, $file: Upload!, $fileSize: Int!)", "content": "{\n        uploadManuscript(id: $id, file: $file, fileSize: $fileSize) {\n            id\n            suggestions {\n                fieldName\n                value\n            }\n            files {\n                manuscriptFile {\n                    filename\n                    url\n                    downloadLink\n                }\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "UploadSupportingFile($id: ID!, $file: Upload!, $fileSize: Int!)", "content": "{\n        uploadSupportingFile(id: $id, file: $file, fileSize: $fileSize) {\n            id\n            filename\n            url\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveDetailsPage($id: ID!, $details: ManuscriptDetailsInput!)", "content": "{\n        saveDetailsPage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            manuscriptDetails {\n                title\n                subjects\n                previouslyDiscussed\n                previouslySubmitted\n                cosubmission\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "subscription", "name": "FileUploadProgress($submissionId: ID!)", "content": "{\n        fileUploadProgress(submissionId: $submissionId) {\n            filename\n            fileId\n            type\n            percentage\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "DeleteSupportingFile($fileId: ID!, $submissionId: ID!)", "content": "{\n        deleteSupportingFile(fileId: $fileId, submissionId: $submissionId)\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveEditorPage($id: ID!, $details: EditorDetailsInput!)", "content": "{\n        saveEditorPage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            editorDetails {\n                suggestedSeniorEditors\n                opposedSeniorEditors\n                opposedSeniorEditorsReason\n                suggestedReviewingEditors\n                opposedReviewingEditors\n                opposedReviewingEditorsReason\n                suggestedReviewers {\n                    name\n                    email\n                }\n                opposedReviewers {\n                    name\n                    email\n                }\n                opposedReviewersReason\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "EditorList($role: String!)", "content": "{\n        getEditors(role: $role) {\n            id\n            name\n            aff\n            focuses\n            expertises\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SaveDisclosurePage($id: ID!, $details: DisclosureDetailsInput!)", "content": "{\n        saveDisclosurePage(id: $id, details: $details) {\n            id\n            lastStepVisited\n            disclosure {\n                submitterSignature\n                disclosureConsent\n            }\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "Submit($id: ID!)", "content": "{\n        submit(id: $id) {\n            id\n            status\n        }\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "ApplicationError", "content": "{\n        feedback @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "ClearError", "content": "{\n        clearError @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SetLogoutError", "content": "{\n        setLogoutError @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "mutation", "name": "SetValidationError", "content": "{\n        setValidationError @client\n    }", "metadata": {"commit_hash": "bc7361b9a691c0497449a7c6997ac3a79c88890a", "file": "src/initial-submission/graphql.ts", "repo": "libero_reviewer-client"}}, {"type": "query", "name": "", "content": "{ ...SomeFragmentName } ${module.exports}", "metadata": {"commit_hash": "b1cd78e068ae27b14a38c22dd8e257ef8de5d1c5", "file": "node_modules/graphql-tag/test/graphql.js", "repo": "jdiebold_foundst-rs"}}, {"type": "mutation", "name": "generateStartup($keyword: String!)", "content": "{\n  generateStartup(keyword: $keyword) {\n    id\n    name\n    valueProposition\n    keyword\n    colorScheme\n  }\n}", "metadata": {"commit_hash": "b1cd78e068ae27b14a38c22dd8e257ef8de5d1c5", "file": "frontend/src/generated/graphql.tsx", "repo": "jdiebold_foundst-rs"}}, {"type": "query", "name": "startup($id: Uuid!)", "content": "{\n  startup(selectedId: $id) {\n    id\n    name\n    valueProposition\n    colorScheme\n    keyword\n  }\n}", "metadata": {"commit_hash": "b1cd78e068ae27b14a38c22dd8e257ef8de5d1c5", "file": "frontend/src/generated/graphql.tsx", "repo": "jdiebold_foundst-rs"}}, {"type": "query", "name": "listStartups", "content": "{\n  listStartups {\n    id\n    name\n    valueProposition\n    colorScheme\n    keyword\n  }\n}", "metadata": {"commit_hash": "b1cd78e068ae27b14a38c22dd8e257ef8de5d1c5", "file": "frontend/src/generated/graphql.tsx", "repo": "jdiebold_foundst-rs"}}, {"type": "query", "name": "($lat: String!, $lng: String!)", "content": "{\n    placesAt(lat: $lat, lng: $lng) {\n        sitdown {\n            name\n            distance\n            time\n            lat\n            lng\n        }\n        chain {\n            name\n            distance\n            time\n            lat\n            lng\n        }\n        quick {\n            name\n            distance\n            time\n            lat\n            lng\n        }\n    }\n}", "metadata": {"commit_hash": "caf96bc60aa64aba678b4dde4a13ba0b7ae5d615", "file": "frontend/src/Queries/queries.js", "repo": "JamisonBunge_GetJoeCoffee"}}, {"type": "query", "name": "me", "content": "{\n    me {\n      _id\n      username\n      email\n      highScore\n      lastScore\n      friends {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/queries.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "query", "name": "checkHighScore($player: ID!, $difficulty: String!)", "content": "{\n    checkHighScore(player: $player, difficulty: $difficulty) {\n      value\n      highScore\n      difficulty\n      player {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/queries.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "query", "name": "profile", "content": "{\n    profile {\n      value\n      difficulty\n      highScore\n      player {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/queries.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "login($email: String!, $password: String!)", "content": "{\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "addUser($username: String!, $email: String!, $password: String!)", "content": "{\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        email\n        highScore\n        lastScore\n        friends {\n          _id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "saveScore($value: Int!, $highScore: Boolean!, $difficulty: String, $player: ID!)", "content": "{\n    saveScore(value: $value, highScore: $highScore, difficulty: $difficulty, player: $player){\n      value\n      highScore\n      difficulty\n      player {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "updateOldHigh($difficulty: String, $player: ID!)", "content": "{\n    updateOldHigh(difficulty: $difficulty, player: $player) {\n      value\n      highScore\n      difficulty\n      player {\n        _id\n      }\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "updatePlayerHigh($_id: ID!, $highScore: Int!)", "content": "{\n    updatePlayerHigh(_id: $_id, highScore: $highScore) {\n      _id\n      highScore\n      lastScore\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "lastScore($_id: ID!, $lastScore: Int!)", "content": "{\n    lastScore(_id: $_id, lastScore: $lastScore) {\n      _id\n      lastScore\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "deleteScores($player: ID!)", "content": "{\n    deleteScores(player: $player) {\n      _id\n    }\n  }", "metadata": {"commit_hash": "c8d340932c4bb53f236a73ed57b3a2a729f1e7cf", "file": "client/src/utils/mutations.js", "repo": "Group1Project3_Recall-Rumble"}}, {"type": "mutation", "name": "Register($firstName: String!, $lastName: String!, $emailAddress: String!, $phoneNumber: String!, $username: String!, $password: String!)", "content": "{\n    registerUser(firstName: $firstName, lastName: $lastName, emailAddress: $emailAddress, phoneNumber: $phoneNumber, username: $username, password: $password) {\n      firstName\n      lastName\n      emailAddress\n      phoneNumber\n      username\n      password\n    }\n  }", "metadata": {"commit_hash": "4fe648cefe060e8df7f5238510ada4b7b1525ccf", "file": "src/graphql/mutations/index.js", "repo": "bitabs_fullstack-course"}}, {"type": "query", "name": "studentQuery($firebase_id: String!)", "content": "{\n        students(where: {firebase_id: {_eq: $firebase_id}}) {\n            id\n            firebase_id\n            firstname\n            lastname\n            gender\n            password\n            email\n            contact\n            birth_date\n            profile_url\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/queries/students.js", "repo": "v08nike_ESL-Learning-Center"}}, {"type": "mutation", "name": "AddInboxMutation($name: String!, $email: String!, $contact: String!, $message: String!)", "content": "{\n        insert_inboxes(objects: {name: $name, email: $email, contact: $contact, message: $message}) {\n            affected_rows\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/mutations/inboxes.js", "repo": "v08nike_ESL-Learning-Center"}}, {"type": "mutation", "name": "AddStudentMutation($firebase_id: String!, $firstname: String!, $lastname: String!, $email: String, $contact: String, $gender: String, $birth_date: String, $password: String!)", "content": "{\n        insert_students(objects: {firebase_id: $firebase_id, firstname: $firstname, lastname: $lastname, email: $email, contact: $contact, gender: $gender, birth_date: $birth_date, password: $password}) {\n            affected_rows\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/mutations/students.js", "repo": "v08nike_ESL-Learning-Center"}}, {"type": "mutation", "name": "UpdateStudentMutation($id: uuid!, $firstname: String, $lastname: String, $contact: String, $gender: String, $birth_date: String)", "content": "{\n        update_students(where: {id: {_eq: $id}}, _set: {firstname: $firstname, lastname: $lastname, contact: $contact, gender: $gender, birth_date: $birth_date}) {\n            affected_rows\n            returning {\n                id\n            }\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/mutations/students.js", "repo": "v08nike_ESL-Learning-Center"}}, {"type": "subscription", "name": "studentSubscription($firebase_id: String!)", "content": "{\n        students(where: {firebase_id: {_eq: $firebase_id}}) {\n            id\n            firebase_id\n            firstname\n            lastname\n            gender\n            password\n            email\n            contact\n            birth_date\n            profile_url\n        }\n    }", "metadata": {"commit_hash": "3cf6cb1204fab33d26e84e95182f64de227573ea", "file": "src/graphql/subscriptions/students.js", "repo": "v08nike_ESL-Learning-Center"}}, {"type": "mutation", "name": "Login($code: String!)", "content": "{\n  login(code: $code) {\n    access_token\n    expires_in\n    refresh_token\n    user_id\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "Refresh($token: String!)", "content": "{\n  refresh(token: $token) {\n    access_token\n    expires_in\n    refresh_token\n    user_id\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "GetAuthUrl", "content": "{\n  getAuthLink\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "TestAuth", "content": "{\n  testAuth\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "createRun($startDate: String!, $endDate: String!, $startTime: String!, $endTime: String!, $intensityFB: Int!)", "content": "{\n  createRun(\n    startDate: $startDate\n    endDate: $endDate\n    startTime: $startTime\n    endTime: $endTime\n    intensity: $intensityFB\n  ) {\n    userId\n    date\n    duration\n    heartRate\n    vo2max\n    intensityFeedback\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "resyncRun($startDate: String!, $startTime: String!, $duration: Int!, $intensityFeedback: Int!)", "content": "{\n  resyncRun(\n    startDate: $startDate\n    startTime: $startTime\n    duration: $duration\n    intensity: $intensityFeedback\n  ) {\n    userId\n    date\n    duration\n    heartRate\n    vo2max\n    intensityFeedback\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "AnalyticsObservation($event: String!, $payload: String)", "content": "{\n  createEvent(event: $event, payload: $payload) {\n    user\n    event\n    payload\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "MostRecentSleep($sourceUrl: String)", "content": "{\n  currentUser {\n    id\n    todaysSleep(sourceUrl: $sourceUrl) {\n      awake\n      rem\n      light\n      deep\n      awakenings\n      score\n      date\n      variables {\n        name\n        emoji\n        custom\n      }\n      tomorrow\n      yesterday\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "CustomSleepVariables", "content": "{\n  currentUser {\n    id\n    sleepVariables {\n      name\n      emoji\n      custom\n    }\n    trackedVariables\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "AddSleepVariable($name: String!, $emoji: String!, $sleepDate: String!, $custom: Boolean!)", "content": "{\n  addSleepVariable(\n    custom: $custom\n    emoji: $emoji\n    name: $name\n    sleepDate: $sleepDate\n  ) {\n    date\n    variables {\n      name\n      emoji\n      custom\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "RemoveSleepVariable($name: String!, $sleepDate: String!)", "content": "{\n  removeSleepVariable(name: $name, sleepDate: $sleepDate) {\n    date\n    variables {\n      name\n      emoji\n      custom\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "TrackVariable($name: String!)", "content": "{\n  trackVariable(name: $name)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "UntrackVariable($name: String!)", "content": "{\n  untrackVariable(name: $name)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "AnalyzeSleep", "content": "{\n  analyzeSleep {\n    components {\n      variable\n      regressionGradient\n    }\n    regressionIntercept\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "CurrentUser", "content": "{\n  currentUser {\n    id\n    firstName\n    lastName\n    experience\n    stage\n    runs {\n      userId\n      date\n      duration\n      heartRate\n      vo2max\n      intensityFeedback\n    }\n    maxHr\n    dob\n    defaultRunDuration\n    createdAtUTS\n    avatarUrl\n    createdAtUTS\n    xp\n    emblem\n    inRun\n    nextRunStart\n    nextRunEnd\n    shareableSleepScore\n    runTrackStreak\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "FeaturesSeen", "content": "{\n  currentUser {\n    id\n    features\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "GetFriends($limit: Int)", "content": "{\n  currentUser {\n    id\n    friends(limit: $limit) {\n      id\n      firstName\n      lastName\n      avatarUrl\n      xp\n      emblem\n    }\n    friendRequests {\n      id\n      firstName\n      lastName\n      avatarUrl\n      xp\n      emblem\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "GetSleepLeaderboard", "content": "{\n  currentUser {\n    id\n    friends(limit: 10) {\n      id\n      firstName\n      lastName\n      avatarUrl\n      emblem\n      shareableSleepScore\n      xp\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "GetXp", "content": "{\n  currentUser {\n    id\n    xp\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "GetAvailableEmblems", "content": "{\n  currentUser {\n    id\n    availableEmblems\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "PrepareRun($duration: Int!)", "content": "{\n  prepRun(duration: $duration) {\n    highIntensity\n    lowIntensity\n    repetitions\n    sets\n    restPeriod\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "UpdateDefaultRunDuration($duration: Int!)", "content": "{\n  updateDefaultRunDuration(duration: $duration)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "MarkFeatureSeen($feature: String!)", "content": "{\n  markFeatureSeen(feature: $feature)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "sendFriendRequest($friendId: ID!)", "content": "{\n  sendFriendRequest(friendId: $friendId)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "acceptFriendRequest($friendId: ID!)", "content": "{\n  acceptFriendRequest(friendId: $friendId) {\n    id\n    firstName\n    lastName\n    avatarUrl\n    xp\n    emblem\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "rejectFriendRequest($friendId: ID!)", "content": "{\n  rejectFriendRequest(friendId: $friendId)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "CompleteOnboarding($firstName: String!, $lastName: String!, $experience: ExperienceLevel!, $dob: String!)", "content": "{\n  completeOnboarding(\n    experience: $experience\n    firstName: $firstName\n    lastName: $lastName\n    dob: $dob\n  ) {\n    id\n    firstName\n    lastName\n    experience\n    stage\n    dob\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "UpdateProfile($firstName: String!, $lastName: String!, $dob: String!)", "content": "{\n  updateProfile(dob: $dob, firstName: $firstName, lastName: $lastName) {\n    firstName\n    lastName\n    dob\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "updateProfilePic($avatarUrl: String!)", "content": "{\n  updateProfilePic(avatarUrl: $avatarUrl) {\n    avatarUrl\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "UpdateEmblem($emblem: String!)", "content": "{\n  updateEmblem(emblem: $emblem)\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "CreateSleepVariable($name: String!, $emoji: String!)", "content": "{\n  createSleepVariable(emoji: $emoji, name: $name) {\n    name\n    emoji\n    custom\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "updateInRun($inRun: InRun!)", "content": "{\n  updateInRun(inRun: $inRun) {\n    inRun\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "updateNextRunTimes($nextRunStart: String!, $nextRunEnd: String!)", "content": "{\n  updateNextRunTimes(nextRunEnd: $nextRunEnd, nextRunStart: $nextRunStart) {\n    nextRunStart\n    nextRunEnd\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "GetDailyGoals", "content": "{\n  currentUser {\n    id\n    dailyGoals {\n      name\n      description\n      completed\n      quantity\n      reward\n      emoji\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "mutation", "name": "updateRunParams($intensityFeedback: Int!)", "content": "{\n  updateRunParams(intensityFeedback: $intensityFeedback) {\n    lastIntensityFeedback\n    currentRunParams {\n      highIntensity\n      lowIntensity\n      repetitions\n      sets\n      restPeriod\n    }\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "AnalyseRun($run: RunInput!)", "content": "{\n  generateRunFeedback(run: $run) {\n    feedbackSummary\n    lastRunFeedback\n    intensityFeedback\n    volumeFeedback\n    performanceFeedback\n  }\n}", "metadata": {"commit_hash": "721c004cd309830f14313100d1a76dc2bf1a3415", "file": "libs/gql/src/lib/generated/generated.tsx", "repo": "frasermcc9_sprint"}}, {"type": "query", "name": "health", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: \"${subgraphName}\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "uniswap($date: Int!, $date2: Int!)", "content": "{\n    current: uniswap(id: \"1\") {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    oneDay: uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    twoDay: uniswapHistoricalDatas(\n      where: { timestamp_lt: $date2 }\n      first: 1\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    exchanges(first: 200, orderBy: ethBalance, orderDirection: desc) {\n      ethBalance\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "blocks($timestampFrom: Int!, $timestampTo: Int!)", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "lps($pair: Bytes!)", "content": "{\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\n      user {\n        id\n      }\n      pair {\n        id\n      }\n      liquidityTokenBalance\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "events($user: Bytes!, $pair: Bytes!)", "content": "{\n    mints(where: { to: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n    burns(where: { sender: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "snapshots($user: Bytes!)", "content": "{\n    liquidityPositionSnapshots(first: 1, where: { user: $user }, orderBy: timestamp, orderDirection: asc) {\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "snapshots($user: Bytes!, $skip: Int!)", "content": "{\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\n      timestamp\n      reserveUSD\n      liquidityTokenBalance\n      liquidityTokenTotalSupply\n      reserve0\n      reserve1\n      token0PriceUSD\n      token1PriceUSD\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "liquidityPositions($user: Bytes!)", "content": "{\n    liquidityPositions(where: { user: $user }) {\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n          symbol\n          derivedETH\n        }\n        token1 {\n          id\n          symbol\n          derivedETH\n        }\n        totalSupply\n      }\n      liquidityTokenBalance\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "transactions($user: Bytes!)", "content": "{\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "pairDayDatas($pairAddress: Bytes!, $skip: Int!)", "content": "{\n    pairDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { pairAddress: $pairAddress }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "pairDayDatas($pairAddress: Bytes!, $date: Int!)", "content": "{\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      totalSupply\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "uniswapDayDatas($startTime: Int!, $skip: Int!)", "content": "{\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      id\n      date\n      totalVolumeUSD\n      dailyVolumeUSD\n      dailyVolumeETH\n      totalLiquidityUSD\n      totalLiquidityETH\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "transactions", "content": "{\n    transactions(first: 50, orderBy: timestamp, orderDirection: desc) {\n      mints(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        to\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      burns(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        amount0In\n        amount0Out\n        amount1In\n        amount1Out\n        amountUSD\n        to\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "tokens($skip: Int!)", "content": "{\n    tokens(first: 100, skip: $skip) {\n      id\n      name\n      symbol\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "tokens($value: String, $id: String)", "content": "{\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "pairs($tokens: [Bytes]!, $id: String)", "content": "{\n    as0: pairs(where: { token0_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pairs(where: { token1_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pairs(where: { id: $id }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "pairs($skip: Int!)", "content": "{\n    pairs(first: 100, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "pairs", "content": "{\n    pairs(first: 200, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "tokenDayDatas($tokenAddr: String!, $skip: Int!)", "content": "{\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n      mostLiquidPairs {\n        id\n        token0 {\n          id\n          derivedETH\n        }\n        token1 {\n          id\n          derivedETH\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "query", "name": "($allPairs: [Bytes]!)", "content": "{\n    mints(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      id\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }", "metadata": {"commit_hash": "64ef051b570489c057553745133151687235a638", "file": "src/apollo/queries.js", "repo": "letteldream_Fastswap_launchspot"}}, {"type": "mutation", "name": "", "content": "{\n    updateBook(id: \"60c8e6ba0fd6000f546a5c1f\", name: \"TensorFlow 2.0\") {\n      name\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/01_GraphQL/frontend/src/App.js", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "updateBook($id: ID, $name: String!)", "content": "{\n    updateBook(id: $id, name: $name) {\n      name\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/01_GraphQL/frontend/src/components/Form/mutations.js", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "AddBook($authorId: ID, $name: String!)", "content": "{\n    addBook(authorId: $authorId, name: $name) {\n      name\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/01_GraphQL/frontend/src/components/Form/mutations.js", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "DeleteBook($id: ID)", "content": "{\n    deleteBook(id: $id) {\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/01_GraphQL/frontend/src/components/Form/mutations.js", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "hello", "content": "{\n    hello\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/queries/hello.ts", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "user", "content": "{\n    user {\n      username\n      createdAt\n      email\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/queries/user.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($registerUser: UserInput)", "content": "{\n    register(user: $registerUser) {\n      user {\n        createdAt\n        email\n        username\n        id\n      }\n      error {\n        name\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/register.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/logout.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($email: String!)", "content": "{\n    sendEmail(email: $email) {\n      message\n      error {\n        name\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/requetsResetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($resetPasswordEmailInput: ResetInput!)", "content": "{\n    resetPassword(emailInput: $resetPasswordEmailInput) {\n      error {\n        message\n        name\n      }\n      user {\n        email\n        createdAt\n        username\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/resetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($loginUser: UserInput)", "content": "{\n    login(user: $loginUser) {\n      user {\n        createdAt\n        email\n        username\n        id\n      }\n      error {\n        name\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/06_GraphQL_MakroORM_Express_TypeScript_Postgres/02_AUTHENTICATION/frontend/graphql/mutations/login.ts", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "hello", "content": "{\n    hello\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/queries/hello.ts", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "user", "content": "{\n    user {\n      username\n      createdat\n      email\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/queries/user.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($registerUser: UserInput)", "content": "{\n    register(user: $registerUser) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        email\n        username\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/register.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/logout.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($sendEmailEmail: String!)", "content": "{\n    sendEmail(email: $sendEmailEmail) {\n      error {\n        message\n        name\n      }\n      message\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/requetsResetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($resetPasswordEmailInput: ResetInput!)", "content": "{\n    resetPassword(emailInput: $resetPasswordEmailInput) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        email\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/resetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($loginUser: UserInput)", "content": "{\n    login(user: $loginUser) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        username\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/07_GraphQL_TypeORM_Express_TypeScript_Postgres/02_AUTHENTICATION/fontend/graphql/mutations/login.ts", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "hello", "content": "{\n    hello\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/queries/hello.ts", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "user", "content": "{\n    user {\n      username\n      createdat\n      email\n      id\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/queries/user.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "Register($input: UserInput!)", "content": "{\n    register(input: $input) {\n      error {\n        message\n        field\n      }\n      user {\n        username\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/register.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "", "content": "{\n    logout\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/logout.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($sendEmailEmail: String!)", "content": "{\n    sendEmail(email: $sendEmailEmail) {\n      error {\n        message\n        name\n      }\n      message\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/requetsResetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($resetPasswordEmailInput: ResetInput!)", "content": "{\n    resetPassword(emailInput: $resetPasswordEmailInput) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        email\n        id\n        username\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/resetPassword.ts", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "($loginUser: UserInput)", "content": "{\n    login(user: $loginUser) {\n      error {\n        message\n        name\n      }\n      user {\n        createdat\n        username\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/25_GRAPHQL_YOGA/02_PRISMA_AND_AUTHENTICATION/web/graphql/mutations/login.ts", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "", "content": "{\n    hello\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/21_GRAPHQL_FILE_UPLOADS/02_GRAPH_QL_UPLOAD_REACT/client/src/App.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "PredictSnakeSpicie($input: PredictionInputType!)", "content": "{\n    predictSnake(input: $input) {\n      error {\n        field\n        message\n      }\n      ok\n      prediction {\n        topPrediction {\n          label\n          probability\n          className\n          specie {\n            id\n            specieName\n            commonName\n          }\n        }\n        predictions {\n          label\n          probability\n          className\n          specie {\n            id\n            specieName\n            commonName\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/21_GRAPHQL_FILE_UPLOADS/02_GRAPH_QL_UPLOAD_REACT/client/src/App.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "Login($email: String!, $password: String!)", "content": "{\n  login(email: $email, password: $password) {\n    accessToken\n    user {\n      userId\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "Logout", "content": "{\n  logout\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "Posts", "content": "{\n  posts {\n    id\n    caption\n  }\n  user {\n    userId\n    email\n  }\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "mutation", "name": "Register($email: String!, $password: String!)", "content": "{\n  register(email: $email, password: $password) {\n    accessToken\n    user {\n      userId\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "User", "content": "{\n  user {\n    userId\n    email\n  }\n}", "metadata": {"commit_hash": "f6d64d5cfe4d9c415d3d8016cee8e25a87a6417b", "file": "node-backend/16_JWT_TYPEORM_GRAPHQL/client/src/generated/graphql.tsx", "repo": "CrispenGari_node-startup"}}, {"type": "query", "name": "getFarm($farmId: ID!)", "content": "{\n\t\tgetFarm(farmId: $farmId) {\n\t\t\tid\n\t\t\tfarmName\n\t\t\tfarmType\n\t\t\tmembers {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\tchunks {\n\t\t\t\tid\n\t\t\t\tcoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t}\n\t\t\tplants {\n\t\t\t\tid\n\t\t\t\tplantType\n\t\t\t\ttitle\n\t\t\t\tbody\n\t\t\t\tchunkCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tplantCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tauthor\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/queries.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "query", "name": "", "content": "{\n\t\tgetFarms {\n\t\t\tid\n\t\t\tfarmName\n\t\t\tfarmType\n\t\t\tmembers {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\tchunks {\n\t\t\t\tid\n\t\t\t\tcoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t}\n\t\t\tplants {\n\t\t\t\tid\n\t\t\t\tplantType\n\t\t\t\ttitle\n\t\t\t\tbody\n\t\t\t\tchunkCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tplantCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tauthor\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/queries.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "query", "name": "getUserData($userId: ID!)", "content": "{\n\t\tgetUserData(userId: $userId){\n\t\t\temail\n\t\t\tprofile\n\t\t\ttoken\n\t\t\tusername\n\t\t\tfarms{\n\t\t\t\tid\n\t\t\t\tfarmName\n\t\t\t\tfarmType\n\t\t\t}\n\t\t\tinvitations {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\tfriends {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\t\t\t\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/queries.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "query", "name": "getFriendList($userId: ID!)", "content": "{\n\t\tgetFriendList( userId: $userId){\n\t\t\tid\n\t\t\tusername\n\t\t\temail\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/queries.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "query", "name": "getInvitationList($userId: ID!)", "content": "{\n\t\tgetInvitationList( userId: $userId){\n\t\t\tid\n\t\t\tusername\n\t\t\temail\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/queries.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "subscription", "name": "farm (\n    $farmId: ID!\n  )", "content": "{\n    farm(\n        farmId: $farmId\n    ){\n        mutation\n        index\n        plant{\n            id\n            plantType\n            title\n            body\n            chunkCoordinates {\n                x\n                y\n            }\n            plantCoordinates {\n                x\n                y\n            }\n            author\n        }\n    }\n  }", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/subscriptions.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "subscription", "name": "($userId: ID!)", "content": "{\n    friendList(userId: $userId)\n    {\n      mutation\n      friend\n      {\n        id \n        username\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/subscriptions.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "register(\n\t\t$username: String!\n\t\t$passwordHash: String!\n\t\t$confirmHash: String!\n\t\t$email: String!\n\t)", "content": "{\n\t\tregister(\n\t\t\tregisterInput: {\n\t\t\t\tusername: $username\n\t\t\t\tpasswordHash: $passwordHash\n\t\t\t\tconfirmHash: $confirmHash\n\t\t\t\temail: $email\n\t\t\t}\n\t\t) {\n\t\t\tusername\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "login($username: String!, $passwordHash: String!)", "content": "{\n\t\tlogin(username: $username, passwordHash: $passwordHash) {\n\t\t\tid\n\t\t\temail\n\t\t\tusername\n\t\t\ttoken\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "", "content": "{\n\t\tgetFriends {\n\t\t\tid\n\t\t\tusername\n\t\t\temail\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "sendInvitation($friendName: String!)", "content": "{\n\t\tsendInvitation(friendName: $friendName)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "", "content": "{\n\t\tgetInvitations {\n\t\t\tid\n\t\t\tusername\n\t\t\temail\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "acceptInvitation($friendName: String!)", "content": "{\n\t\tacceptInvitation(friendName: $friendName)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "declineInvitation($friendName: String!)", "content": "{\n\t\tdeclineInvitation(friendName: $friendName)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "createFarm($farmName: String!, $farmType: String!)", "content": "{\n\t\tcreateFarm(farmName: $farmName, farmType: $farmType) {\n\t\t\tid\n\t\t\tfarmName\n\t\t\tfarmType\n\t\t\tmembers {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\tchunks {\n\t\t\t\tid\n\t\t\t\tcoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t}\n\t\t\tplants {\n\t\t\t\tid\n\t\t\t\tplantType\n\t\t\t\ttitle\n\t\t\t\tbody\n\t\t\t\tchunkCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tplantCoordinates {\n\t\t\t\t\tx\n\t\t\t\t\ty\n\t\t\t\t}\n\t\t\t\tauthor\n\t\t\t}\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "createPlant(\n\t\t$farmId: ID!\n\t\t$plantType: String!\n\t\t$title: String!\n\t\t$body: String!\n\t\t$chunkCoordinates: CoordinateInput!\n\t\t$plantCoordinates: CoordinateInput!\n\t)", "content": "{\n\t\tcreatePlant(\n\t\t\tplantInput: {\n\t\t\t\tfarmId: $farmId\n\t\t\t\tplantType: $plantType\n\t\t\t\ttitle: $title\n\t\t\t\tbody: $body\n\t\t\t\tchunkCoordinates: $chunkCoordinates\n\t\t\t\tplantCoordinates: $plantCoordinates\n\t\t\t}\n\t\t) {\n\t\t\tplantType\n\t\t\ttitle\n\t\t\tbody\n\t\t\tchunkCoordinates {\n\t\t\t\tx\n\t\t\t\ty\n\t\t\t}\n\t\t\tplantCoordinates {\n\t\t\t\tx\n\t\t\t\ty\n\t\t\t}\n\t\t\tauthor\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "editPlant(\n\t\t$farmId: ID!\n\t\t$plantId: ID\n\t\t$plantType: String\n\t\t$title: String\n\t\t$body: String\n\t\t$chunkCoordinates: CoordinateInput\n\t\t$plantCoordinates: CoordinateInput\n\t)", "content": "{\n\t\teditPlant(\n\t\t\tplantInput: {\n\t\t\t\tfarmId: $farmId\n\t\t\t\tplantId: $plantId\n\t\t\t\tplantType: $plantType\n\t\t\t\ttitle: $title\n\t\t\t\tbody: $body\n\t\t\t\tchunkCoordinates: $chunkCoordinates\n\t\t\t\tplantCoordinates: $plantCoordinates\n\t\t\t}\n\t\t) {\n\t\t\tid\n\t\t\tplantType\n\t\t\ttitle\n\t\t\tbody\n\t\t\tchunkCoordinates {\n\t\t\t\tx\n\t\t\t\ty\n\t\t\t}\n\t\t\tplantCoordinates {\n\t\t\t\tx\n\t\t\t\ty\n\t\t\t}\n\t\t\tauthor\n\t\t}\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "deletePlant($farmId: ID!, $plantId: ID!)", "content": "{\n\t\tdeletePlant(farmId: $farmId, plantId: $plantId)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "leaveFarm($farmId: ID!)", "content": "{\n\t\tleaveFarm(farmId: $farmId)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "addFarmer($farmId: ID!, $friendId: ID!)", "content": "{\n\t\taddFarmer(farmId: $farmId, friendId: $friendId)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "editProfile($newProfile: String!)", "content": "{\n\t\teditProfile(newProfile: $newProfile)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "mutation", "name": "addChunk($farmId: ID!, $chunkCoordinates: CoordinateInput!)", "content": "{\n\t\taddChunk(\n\t\t\tfarmId: $farmId,\n\t\t\tchunkCoordinates: $chunkCoordinates\n\t\t)\n\t}", "metadata": {"commit_hash": "35399d919ad1cb6c7c336c3b51ed66564a87e608", "file": "src/graphql/mutations.js", "repo": "timicienio_farm-by-RDOGS"}}, {"type": "query", "name": "", "content": "{\n      searchMembers(input: {searchFilter:\"${input}\", projectID:\"${projectID}\"}) {\n        id\n        similarity\n        status\n        user {\n          id\n          fullName\n          email\n          profileIcon {\n            url\n            initials\n            bgColor\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/Projects/Project/UserManagementPopup/fetchMembers.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "subscription", "name": "notificationAdded", "content": "{\n    notificationAdded {\n      id\n      read\n      readAt\n      notification {\n        id\n        actionType\n        data {\n          key\n          value\n        }\n        causedBy {\n          username\n          fullname\n          id\n        }\n        createdAt\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/onNotificationAdded.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "toggleProjectVisibility($projectID: UUID!, $isPublic: Boolean!)", "content": "{\n    toggleProjectVisibility(input: { projectID: $projectID, isPublic: $isPublic }) {\n      project {\n        id\n        publicOn\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/toggleProjectVisibility.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "labels($projectID: UUID!)", "content": "{\n    findProject(input: { projectID: $projectID }) {\n      labels {\n        id\n        createdDate\n        name\n        labelColor {\n          id\n          name\n          colorHex\n          position\n        }\n      }\n    }\n    labelColors {\n      id\n      position\n      colorHex\n      name\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/labels.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "hasUnreadNotifications", "content": "{\n    hasUnreadNotifications {\n      unread\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/unreadNotifications.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "notificationMarkAllRead", "content": "{\n    notificationMarkAllRead {\n      success\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/notifictionMarkAllRead.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "findProject($projectID: String!)", "content": "{\n  findProject(input: { projectShortID: $projectID }) {\n    id\n    name\n    publicOn\n    team {\n      id\n    }\n    members {\n      id\n      fullName\n      username\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n    }\n    invitedMembers {\n      email\n      invitedOn\n    }\n    labels {\n      id\n      createdDate\n      name\n      labelColor {\n        id\n        name\n        colorHex\n        position\n      }\n    }\n    taskGroups {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n  labelColors {\n    id\n    position\n    colorHex\n    name\n  }\n  users {\n    id\n    email\n    fullName\n    username\n    role {\n      code\n      name\n    }\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/findProject.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "notificationToggleRead($notifiedID: UUID!)", "content": "{\n    notificationToggleRead(input: { notifiedID: $notifiedID }) {\n      id\n      read\n      readAt\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/notificationToggleRead.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "topNavbar", "content": "{\n    notifications {\n      id\n      read\n      readAt\n      notification {\n        id\n        actionType\n        causedBy {\n          username\n          fullname\n          id\n        }\n        createdAt\n      }\n    }\n    me {\n      user {\n        id\n        fullName\n        profileIcon {\n          initials\n          bgColor\n          url\n        }\n      }\n      teamRoles {\n        teamID\n        roleCode\n      }\n      projectRoles {\n        projectID\n        roleCode\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/topNavbar.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "notifications($limit: Int!, $cursor: String, $filter: NotificationFilter!)", "content": "{\n    notified(input: { limit: $limit, cursor: $cursor, filter: $filter }) {\n      totalCount\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      notified {\n        id\n        read\n        readAt\n        notification {\n          id\n          actionType\n          data {\n            key\n            value\n          }\n          causedBy {\n            username\n            fullname\n            id\n          }\n          createdAt\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/notifications.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistItemName($taskChecklistItemID: UUID!, $name: String!)", "content": "{\n    updateTaskChecklistItemName(input: { taskChecklistItemID: $taskChecklistItemID, name: $name }) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistItemName.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskChecklistItem($taskChecklistID: UUID!, $name: String!, $position: Float!)", "content": "{\n    createTaskChecklistItem(input: { taskChecklistID: $taskChecklistID, name: $name, position: $position }) {\n      id\n      name\n      taskChecklistID\n      position\n      complete\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/createTaskChecklistItem.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "setTaskChecklistItemComplete($taskChecklistItemID: UUID!, $complete: Boolean!)", "content": "{\n    setTaskChecklistItemComplete(input: { taskChecklistItemID: $taskChecklistItemID, complete: $complete }) {\n      id\n      complete\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/setTaskChecklistItemComplete.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskComment($commentID: UUID!, $message: String!)", "content": "{\n    updateTaskComment(input: { commentID: $commentID, message: $message }) {\n      comment {\n        id\n        updatedAt\n        message\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskComment.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistItemLocation($taskChecklistID: UUID!, $taskChecklistItemID: UUID!, $position: Float!)", "content": "{\n    updateTaskChecklistItemLocation(\n      input: { taskChecklistID: $taskChecklistID, taskChecklistItemID: $taskChecklistItemID, position: $position }\n    ) {\n      taskChecklistID\n      prevChecklistID\n      checklistItem {\n        id\n        taskChecklistID\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistItemLocation.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "toggleTaskWatch($taskID: UUID!)", "content": "{\n    toggleTaskWatch(input: { taskID: $taskID }) {\n      id\n      watched\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/toggleTaskWatcher.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "setTaskComplete($taskID: UUID!, $complete: Boolean!)", "content": "{\n  setTaskComplete(input: { taskID: $taskID, complete: $complete }) {\n    ...TaskFields\n  }\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/setTaskComplete.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistLocation($taskChecklistID: UUID!, $position: Float!)", "content": "{\n    updateTaskChecklistLocation(input: { taskChecklistID: $taskChecklistID, position: $position }) {\n      checklist {\n        id\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistLocation.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTask($taskGroupID: UUID!, $name: String!, $position: Float!, $assigned: [UUID!])", "content": "{\n    createTask(input: { taskGroupID: $taskGroupID, name: $name, position: $position, assigned: $assigned }) {\n      ...TaskFields\n    }\n  }\n  ${TASK_FRAGMENT}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/createTask.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskComment($taskID: UUID!, $message: String!)", "content": "{\n    createTaskComment(input: { taskID: $taskID, message: $message }) {\n      taskID\n      comment {\n        id\n        message\n        pinned\n        createdAt\n        updatedAt\n        createdBy {\n          id\n          fullName\n          profileIcon {\n            initials\n            bgColor\n            url\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/createTaskComment.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistName($taskChecklistID: UUID!, $name: String!)", "content": "{\n    updateTaskChecklistName(input: { taskChecklistID: $taskChecklistID, name: $name }) {\n      id\n      name\n      position\n      items {\n        id\n        name\n        taskChecklistID\n        complete\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/updateTaskChecklistName.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskChecklist($taskChecklistID: UUID!)", "content": "{\n    deleteTaskChecklist(input: { taskChecklistID: $taskChecklistID }) {\n      ok\n      taskChecklist {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/deleteTaskChecklist.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskChecklist($taskID: UUID!, $name: String!, $position: Float!)", "content": "{\n    createTaskChecklist(input: { taskID: $taskID, name: $name, position: $position }) {\n      id\n      name\n      position\n      items {\n        id\n        name\n        taskChecklistID\n        complete\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/createTaskChecklist.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskComment($commentID: UUID!)", "content": "{\n    deleteTaskComment(input: { commentID: $commentID }) {\n      commentID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/deleteTaskComment.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskChecklistItem($taskChecklistItemID: UUID!)", "content": "{\n    deleteTaskChecklistItem(input: { taskChecklistItemID: $taskChecklistItemID }) {\n      ok\n      taskChecklistItem {\n        id\n        taskChecklistID\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/task/deleteTaskChecklistItem.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "duplicateTaskGroup($taskGroupID: UUID!, $name: String!, $position: Float!, $projectID: UUID!)", "content": "{\n  duplicateTaskGroup(\n  input: {\n    projectID: $projectID\n    taskGroupID: $taskGroupID\n    name: $name\n    position: $position\n  }\n  ) {\n    taskGroup {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/duplicateTaskGroup.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskGroupTasks($taskGroupID: UUID!)", "content": "{\n    deleteTaskGroupTasks(input: { taskGroupID: $taskGroupID }) {\n      tasks\n      taskGroupID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/deleteTaskGroupTasks.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "sortTaskGroup($tasks: [TaskPositionUpdate!]!, $taskGroupID: UUID!)", "content": "{\n    sortTaskGroup(input: { taskGroupID: $taskGroupID, tasks: $tasks }) {\n      taskGroupID\n      tasks {\n        id\n        position\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/sortTaskGroup.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskGroupName($taskGroupID: UUID!, $name: String!)", "content": "{\n  updateTaskGroupName(input:{taskGroupID:$taskGroupID, name:$name}) {\n    id\n    name\n  }\n  ${TASK_FRAGMENT}\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/taskGroup/updateTaskGroupName.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTeamMemberRole($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateTeamMemberRole(input: { teamID: $teamID, userID: $userID, roleCode: $roleCode }) {\n      member {\n        id\n        role {\n          code\n          name\n        }\n      }\n      teamID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/updateTeamMemberRole.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTeam($teamID: UUID!)", "content": "{\n    deleteTeam(input: { teamID: $teamID }) {\n      ok\n      team {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/deleteTeam.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTeamMember($userID: UUID!, $teamID: UUID!)", "content": "{\n    createTeamMember(input: { userID: $userID, teamID: $teamID }) {\n      team {\n        id\n      }\n      teamMember {\n        id\n        username\n        fullName\n        role {\n          code\n          name\n        }\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/createTeamMember.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "getTeam($teamID: UUID!)", "content": "{\n    findTeam(input: { teamID: $teamID }) {\n      id\n      createdAt\n      name\n      members {\n        id\n        fullName\n        username\n        role {\n          code\n          name\n        }\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n        owned {\n          teams {\n            id\n            name\n          }\n          projects {\n            id\n            name\n          }\n        }\n        member {\n          teams {\n            id\n            name\n          }\n          projects {\n            id\n            name\n          }\n        }\n      }\n    }\n    projects(input: { teamID: $teamID }) {\n      id\n      name\n      team {\n        id\n        name\n      }\n    }\n    users {\n      id\n      email\n      fullName\n      username\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      owned {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n      member {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/getTeam.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTeamMember($teamID: UUID!, $userID: UUID!, $newOwnerID: UUID)", "content": "{\n    deleteTeamMember(input: { teamID: $teamID, userID: $userID, newOwnerID: $newOwnerID }) {\n      teamID\n      userID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/deleteTeamMember.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTeam($name: String!, $organizationID: UUID!)", "content": "{\n    createTeam(input: { name: $name, organizationID: $organizationID }) {\n      id\n      createdAt\n      name\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/team/createTeam.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteInvitedUserAccount($invitedUserID: UUID!)", "content": "{\n    deleteInvitedUserAccount(input: { invitedUserID: $invitedUserID }) {\n      invitedUser {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/deleteInvitedUser.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserRole($userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateUserRole(input: { userID: $userID, roleCode: $roleCode }) {\n      user {\n        id\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/updateUserRole.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserInfo($name: String!, $initials: String!, $email: String!, $bio: String!)", "content": "{\n    updateUserInfo(input: { name: $name, initials: $initials, email: $email, bio: $bio }) {\n      user {\n        id\n        email\n        fullName\n        bio\n        profileIcon {\n          initials\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/updateUserInfo.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createUserAccount(\n    $username: String!\n    $roleCode: String!\n    $email: String!\n    $fullName: String!\n    $initials: String!\n    $password: String!\n  )", "content": "{\n    createUserAccount(\n      input: {\n        roleCode: $roleCode\n        username: $username\n        email: $email\n        fullName: $fullName\n        initials: $initials\n        password: $password\n      }\n    ) {\n      id\n      email\n      fullName\n      initials\n      username\n      bio\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      role {\n        code\n        name\n      }\n      owned {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n      member {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/createUser.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteUserAccount($userID: UUID!, $newOwnerID: UUID)", "content": "{\n    deleteUserAccount(input: { userID: $userID, newOwnerID: $newOwnerID }) {\n      ok\n      userAccount {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/deleteUser.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserPassword($userID: UUID!, $password: String!)", "content": "{\n    updateUserPassword(input: { userID: $userID, password: $password }) {\n      ok\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/user/updateUserPassword.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "inviteProjectMembers($projectID: UUID!, $members: [MemberInvite!]!)", "content": "{\n    inviteProjectMembers(input: { projectID: $projectID, members: $members }) {\n      ok\n      invitedMembers {\n        email\n        invitedOn\n      }\n      members {\n        id\n        fullName\n        profileIcon {\n          url\n          initials\n          bgColor\n        }\n        username\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/inviteProjectMembers.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProject($projectID: UUID!)", "content": "{\n    deleteProject(input: { projectID: $projectID }) {\n      ok\n      project {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/deleteProject.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteInvitedProjectMember($projectID: UUID!, $email: String!)", "content": "{\n    deleteInvitedProjectMember(input: { projectID: $projectID, email: $email }) {\n      invitedMember {\n        email\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/deleteProjectInvitedMember.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProjectMember($projectID: UUID!, $userID: UUID!)", "content": "{\n    deleteProjectMember(input: { projectID: $projectID, userID: $userID }) {\n      ok\n      member {\n        id\n      }\n      projectID\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/deleteProjectMember.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateProjectMemberRole($projectID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n    updateProjectMemberRole(input: { projectID: $projectID, userID: $userID, roleCode: $roleCode }) {\n      ok\n      member {\n        id\n        role {\n          code\n          name\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/graphql/project/updateProjectMemberRole.ts", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "assignTask($taskID: UUID!, $userID: UUID!)", "content": "{\n  assignTask(input: {taskID: $taskID, userID: $userID}) {\n    id\n    assigned {\n      id\n      fullName\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "clearProfileAvatar", "content": "{\n  clearProfileAvatar {\n    id\n    fullName\n    profileIcon {\n      initials\n      bgColor\n      url\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createProject($teamID: UUID, $name: String!)", "content": "{\n  createProject(input: {teamID: $teamID, name: $name}) {\n    id\n    shortId\n    name\n    team {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createProjectLabel($projectID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  createProjectLabel(\n    input: {projectID: $projectID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskGroup($projectID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskGroup(\n    input: {projectID: $projectID, name: $name, position: $position}\n  ) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProjectLabel($projectLabelID: UUID!)", "content": "{\n  deleteProjectLabel(input: {projectLabelID: $projectLabelID}) {\n    id\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTask($taskID: UUID!)", "content": "{\n  deleteTask(input: {taskID: $taskID}) {\n    taskID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskGroup($taskGroupID: UUID!)", "content": "{\n  deleteTaskGroup(input: {taskGroupID: $taskGroupID}) {\n    ok\n    affectedRows\n    taskGroup {\n      id\n      tasks {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "findProject($projectID: String!)", "content": "{\n  findProject(input: {projectShortID: $projectID}) {\n    id\n    name\n    publicOn\n    team {\n      id\n    }\n    members {\n      id\n      fullName\n      username\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n    }\n    invitedMembers {\n      email\n      invitedOn\n    }\n    labels {\n      id\n      createdDate\n      name\n      labelColor {\n        id\n        name\n        colorHex\n        position\n      }\n    }\n    taskGroups {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n  labelColors {\n    id\n    position\n    colorHex\n    name\n  }\n  users {\n    id\n    email\n    fullName\n    username\n    role {\n      code\n      name\n    }\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "findTask($taskID: String!)", "content": "{\n  findTask(input: {taskShortID: $taskID}) {\n    id\n    shortId\n    name\n    watched\n    description\n    dueDate {\n      at\n      notifications {\n        id\n        period\n        duration\n      }\n    }\n    position\n    complete\n    hasTime\n    taskGroup {\n      id\n      name\n    }\n    comments {\n      id\n      pinned\n      message\n      createdAt\n      updatedAt\n      createdBy {\n        id\n        fullName\n        profileIcon {\n          initials\n          bgColor\n          url\n        }\n      }\n    }\n    activity {\n      id\n      type\n      causedBy {\n        id\n        fullName\n        profileIcon {\n          initials\n          bgColor\n          url\n        }\n      }\n      createdAt\n      data {\n        name\n        value\n      }\n    }\n    badges {\n      checklist {\n        total\n        complete\n      }\n    }\n    checklists {\n      id\n      name\n      position\n      items {\n        id\n        name\n        taskChecklistID\n        complete\n        position\n      }\n    }\n    labels {\n      id\n      assignedDate\n      projectLabel {\n        id\n        name\n        createdDate\n        labelColor {\n          id\n          colorHex\n          position\n          name\n        }\n      }\n    }\n    assigned {\n      id\n      fullName\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n    }\n  }\n  me {\n    user {\n      id\n      fullName\n      profileIcon {\n        initials\n        bgColor\n        url\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "getProjects", "content": "{\n  organizations {\n    id\n    name\n  }\n  teams {\n    id\n    name\n    createdAt\n  }\n  projects {\n    id\n    shortId\n    name\n    team {\n      id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "labels($projectID: UUID!)", "content": "{\n  findProject(input: {projectID: $projectID}) {\n    labels {\n      id\n      createdDate\n      name\n      labelColor {\n        id\n        name\n        colorHex\n        position\n      }\n    }\n  }\n  labelColors {\n    id\n    position\n    colorHex\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "me", "content": "{\n  me {\n    user {\n      id\n      fullName\n      username\n      email\n      bio\n      profileIcon {\n        initials\n        bgColor\n        url\n      }\n    }\n    teamRoles {\n      teamID\n      roleCode\n    }\n    projectRoles {\n      projectID\n      roleCode\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "myTasks($status: MyTasksStatus!, $sort: MyTasksSort!)", "content": "{\n  projects {\n    id\n    name\n  }\n  myTasks(input: {status: $status, sort: $sort}) {\n    tasks {\n      id\n      shortId\n      taskGroup {\n        id\n        name\n      }\n      name\n      dueDate {\n        at\n      }\n      hasTime\n      complete\n      completedAt\n    }\n    projects {\n      projectID\n      taskID\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "notificationToggleRead($notifiedID: UUID!)", "content": "{\n  notificationToggleRead(input: {notifiedID: $notifiedID}) {\n    id\n    read\n    readAt\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "notifications($limit: Int!, $cursor: String, $filter: NotificationFilter!)", "content": "{\n  notified(input: {limit: $limit, cursor: $cursor, filter: $filter}) {\n    totalCount\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    notified {\n      id\n      read\n      readAt\n      notification {\n        id\n        actionType\n        data {\n          key\n          value\n        }\n        causedBy {\n          username\n          fullname\n          id\n        }\n        createdAt\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "notificationMarkAllRead", "content": "{\n  notificationMarkAllRead {\n    success\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "subscription", "name": "notificationAdded", "content": "{\n  notificationAdded {\n    id\n    read\n    readAt\n    notification {\n      id\n      actionType\n      data {\n        key\n        value\n      }\n      causedBy {\n        username\n        fullname\n        id\n      }\n      createdAt\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProject($projectID: UUID!)", "content": "{\n  deleteProject(input: {projectID: $projectID}) {\n    ok\n    project {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteInvitedProjectMember($projectID: UUID!, $email: String!)", "content": "{\n  deleteInvitedProjectMember(input: {projectID: $projectID, email: $email}) {\n    invitedMember {\n      email\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteProjectMember($projectID: UUID!, $userID: UUID!)", "content": "{\n  deleteProjectMember(input: {projectID: $projectID, userID: $userID}) {\n    ok\n    member {\n      id\n    }\n    projectID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "inviteProjectMembers($projectID: UUID!, $members: [MemberInvite!]!)", "content": "{\n  inviteProjectMembers(input: {projectID: $projectID, members: $members}) {\n    ok\n    invitedMembers {\n      email\n      invitedOn\n    }\n    members {\n      id\n      fullName\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      username\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateProjectMemberRole($projectID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateProjectMemberRole(\n    input: {projectID: $projectID, userID: $userID, roleCode: $roleCode}\n  ) {\n    ok\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTask($taskGroupID: UUID!, $name: String!, $position: Float!, $assigned: [UUID!])", "content": "{\n  createTask(\n    input: {taskGroupID: $taskGroupID, name: $name, position: $position, assigned: $assigned}\n  ) {\n    ...TaskFields\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskChecklist($taskID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskChecklist(input: {taskID: $taskID, name: $name, position: $position}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskChecklistItem($taskChecklistID: UUID!, $name: String!, $position: Float!)", "content": "{\n  createTaskChecklistItem(\n    input: {taskChecklistID: $taskChecklistID, name: $name, position: $position}\n  ) {\n    id\n    name\n    taskChecklistID\n    position\n    complete\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTaskComment($taskID: UUID!, $message: String!)", "content": "{\n  createTaskComment(input: {taskID: $taskID, message: $message}) {\n    taskID\n    comment {\n      id\n      message\n      pinned\n      createdAt\n      updatedAt\n      createdBy {\n        id\n        fullName\n        profileIcon {\n          initials\n          bgColor\n          url\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskChecklist($taskChecklistID: UUID!)", "content": "{\n  deleteTaskChecklist(input: {taskChecklistID: $taskChecklistID}) {\n    ok\n    taskChecklist {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskChecklistItem($taskChecklistItemID: UUID!)", "content": "{\n  deleteTaskChecklistItem(input: {taskChecklistItemID: $taskChecklistItemID}) {\n    ok\n    taskChecklistItem {\n      id\n      taskChecklistID\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskComment($commentID: UUID!)", "content": "{\n  deleteTaskComment(input: {commentID: $commentID}) {\n    commentID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "setTaskChecklistItemComplete($taskChecklistItemID: UUID!, $complete: Boolean!)", "content": "{\n  setTaskChecklistItemComplete(\n    input: {taskChecklistItemID: $taskChecklistItemID, complete: $complete}\n  ) {\n    id\n    complete\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "setTaskComplete($taskID: UUID!, $complete: Boolean!)", "content": "{\n  setTaskComplete(input: {taskID: $taskID, complete: $complete}) {\n    ...TaskFields\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "toggleTaskWatch($taskID: UUID!)", "content": "{\n  toggleTaskWatch(input: {taskID: $taskID}) {\n    id\n    watched\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistItemLocation($taskChecklistID: UUID!, $taskChecklistItemID: UUID!, $position: Float!)", "content": "{\n  updateTaskChecklistItemLocation(\n    input: {taskChecklistID: $taskChecklistID, taskChecklistItemID: $taskChecklistItemID, position: $position}\n  ) {\n    taskChecklistID\n    prevChecklistID\n    checklistItem {\n      id\n      taskChecklistID\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistItemName($taskChecklistItemID: UUID!, $name: String!)", "content": "{\n  updateTaskChecklistItemName(\n    input: {taskChecklistItemID: $taskChecklistItemID, name: $name}\n  ) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistLocation($taskChecklistID: UUID!, $position: Float!)", "content": "{\n  updateTaskChecklistLocation(\n    input: {taskChecklistID: $taskChecklistID, position: $position}\n  ) {\n    checklist {\n      id\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskChecklistName($taskChecklistID: UUID!, $name: String!)", "content": "{\n  updateTaskChecklistName(input: {taskChecklistID: $taskChecklistID, name: $name}) {\n    id\n    name\n    position\n    items {\n      id\n      name\n      taskChecklistID\n      complete\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskComment($commentID: UUID!, $message: String!)", "content": "{\n  updateTaskComment(input: {commentID: $commentID, message: $message}) {\n    comment {\n      id\n      updatedAt\n      message\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTaskGroupTasks($taskGroupID: UUID!)", "content": "{\n  deleteTaskGroupTasks(input: {taskGroupID: $taskGroupID}) {\n    tasks\n    taskGroupID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "duplicateTaskGroup($taskGroupID: UUID!, $name: String!, $position: Float!, $projectID: UUID!)", "content": "{\n  duplicateTaskGroup(\n    input: {projectID: $projectID, taskGroupID: $taskGroupID, name: $name, position: $position}\n  ) {\n    taskGroup {\n      id\n      name\n      position\n      tasks {\n        ...TaskFields\n      }\n    }\n  }\n}\n    ${TaskFieldsFragmentDoc}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "sortTaskGroup($tasks: [TaskPositionUpdate!]!, $taskGroupID: UUID!)", "content": "{\n  sortTaskGroup(input: {taskGroupID: $taskGroupID, tasks: $tasks}) {\n    taskGroupID\n    tasks {\n      id\n      position\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskGroupName($taskGroupID: UUID!, $name: String!)", "content": "{\n  updateTaskGroupName(input: {taskGroupID: $taskGroupID, name: $name}) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTeam($name: String!, $organizationID: UUID!)", "content": "{\n  createTeam(input: {name: $name, organizationID: $organizationID}) {\n    id\n    createdAt\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createTeamMember($userID: UUID!, $teamID: UUID!)", "content": "{\n  createTeamMember(input: {userID: $userID, teamID: $teamID}) {\n    team {\n      id\n    }\n    teamMember {\n      id\n      username\n      fullName\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTeam($teamID: UUID!)", "content": "{\n  deleteTeam(input: {teamID: $teamID}) {\n    ok\n    team {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteTeamMember($teamID: UUID!, $userID: UUID!, $newOwnerID: UUID)", "content": "{\n  deleteTeamMember(\n    input: {teamID: $teamID, userID: $userID, newOwnerID: $newOwnerID}\n  ) {\n    teamID\n    userID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "getTeam($teamID: UUID!)", "content": "{\n  findTeam(input: {teamID: $teamID}) {\n    id\n    createdAt\n    name\n    members {\n      id\n      fullName\n      username\n      role {\n        code\n        name\n      }\n      profileIcon {\n        url\n        initials\n        bgColor\n      }\n      owned {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n      member {\n        teams {\n          id\n          name\n        }\n        projects {\n          id\n          name\n        }\n      }\n    }\n  }\n  projects(input: {teamID: $teamID}) {\n    id\n    name\n    team {\n      id\n      name\n    }\n  }\n  users {\n    id\n    email\n    fullName\n    username\n    role {\n      code\n      name\n    }\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTeamMemberRole($teamID: UUID!, $userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateTeamMemberRole(\n    input: {teamID: $teamID, userID: $userID, roleCode: $roleCode}\n  ) {\n    member {\n      id\n      role {\n        code\n        name\n      }\n    }\n    teamID\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "toggleProjectVisibility($projectID: UUID!, $isPublic: Boolean!)", "content": "{\n  toggleProjectVisibility(input: {projectID: $projectID, isPublic: $isPublic}) {\n    project {\n      id\n      publicOn\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "toggleTaskLabel($taskID: UUID!, $projectLabelID: UUID!)", "content": "{\n  toggleTaskLabel(input: {taskID: $taskID, projectLabelID: $projectLabelID}) {\n    active\n    task {\n      id\n      labels {\n        id\n        assignedDate\n        projectLabel {\n          id\n          createdDate\n          labelColor {\n            id\n            colorHex\n            name\n            position\n          }\n          name\n        }\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "topNavbar", "content": "{\n  notifications {\n    id\n    read\n    readAt\n    notification {\n      id\n      actionType\n      causedBy {\n        username\n        fullname\n        id\n      }\n      createdAt\n    }\n  }\n  me {\n    user {\n      id\n      fullName\n      profileIcon {\n        initials\n        bgColor\n        url\n      }\n    }\n    teamRoles {\n      teamID\n      roleCode\n    }\n    projectRoles {\n      projectID\n      roleCode\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "unassignTask($taskID: UUID!, $userID: UUID!)", "content": "{\n  unassignTask(input: {taskID: $taskID, userID: $userID}) {\n    assigned {\n      id\n      fullName\n    }\n    id\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "hasUnreadNotifications", "content": "{\n  hasUnreadNotifications {\n    unread\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateProjectLabel($projectLabelID: UUID!, $labelColorID: UUID!, $name: String!)", "content": "{\n  updateProjectLabel(\n    input: {projectLabelID: $projectLabelID, labelColorID: $labelColorID, name: $name}\n  ) {\n    id\n    createdDate\n    labelColor {\n      id\n      colorHex\n      name\n      position\n    }\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateProjectName($projectID: UUID!, $name: String!)", "content": "{\n  updateProjectName(input: {projectID: $projectID, name: $name}) {\n    id\n    name\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskDescription($taskID: UUID!, $description: String!)", "content": "{\n  updateTaskDescription(input: {taskID: $taskID, description: $description}) {\n    id\n    description\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskDueDate($taskID: UUID!, $dueDate: Time, $hasTime: Boolean!, $createNotifications: [CreateTaskDueDateNotification!]!, $updateNotifications: [UpdateTaskDueDateNotification!]!, $deleteNotifications: [DeleteTaskDueDateNotification!]!)", "content": "{\n  updateTaskDueDate(\n    input: {taskID: $taskID, dueDate: $dueDate, hasTime: $hasTime}\n  ) {\n    id\n    dueDate {\n      at\n    }\n    hasTime\n  }\n  createTaskDueDateNotifications(input: $createNotifications) {\n    notifications {\n      id\n      period\n      duration\n    }\n  }\n  updateTaskDueDateNotifications(input: $updateNotifications) {\n    notifications {\n      id\n      period\n      duration\n    }\n  }\n  deleteTaskDueDateNotifications(input: $deleteNotifications) {\n    notifications\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskGroupLocation($taskGroupID: UUID!, $position: Float!)", "content": "{\n  updateTaskGroupLocation(input: {taskGroupID: $taskGroupID, position: $position}) {\n    id\n    position\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskLocation($taskID: UUID!, $taskGroupID: UUID!, $position: Float!)", "content": "{\n  updateTaskLocation(\n    input: {taskID: $taskID, taskGroupID: $taskGroupID, position: $position}\n  ) {\n    previousTaskGroupID\n    task {\n      id\n      createdAt\n      name\n      position\n      taskGroup {\n        id\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateTaskName($taskID: UUID!, $name: String!)", "content": "{\n  updateTaskName(input: {taskID: $taskID, name: $name}) {\n    id\n    name\n    position\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "createUserAccount($username: String!, $roleCode: String!, $email: String!, $fullName: String!, $initials: String!, $password: String!)", "content": "{\n  createUserAccount(\n    input: {roleCode: $roleCode, username: $username, email: $email, fullName: $fullName, initials: $initials, password: $password}\n  ) {\n    id\n    email\n    fullName\n    initials\n    username\n    bio\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    role {\n      code\n      name\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteInvitedUserAccount($invitedUserID: UUID!)", "content": "{\n  deleteInvitedUserAccount(input: {invitedUserID: $invitedUserID}) {\n    invitedUser {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "deleteUserAccount($userID: UUID!, $newOwnerID: UUID)", "content": "{\n  deleteUserAccount(input: {userID: $userID, newOwnerID: $newOwnerID}) {\n    ok\n    userAccount {\n      id\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserInfo($name: String!, $initials: String!, $email: String!, $bio: String!)", "content": "{\n  updateUserInfo(\n    input: {name: $name, initials: $initials, email: $email, bio: $bio}\n  ) {\n    user {\n      id\n      email\n      fullName\n      bio\n      profileIcon {\n        initials\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserPassword($userID: UUID!, $password: String!)", "content": "{\n  updateUserPassword(input: {userID: $userID, password: $password}) {\n    ok\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "mutation", "name": "updateUserRole($userID: UUID!, $roleCode: RoleCode!)", "content": "{\n  updateUserRole(input: {userID: $userID, roleCode: $roleCode}) {\n    user {\n      id\n      role {\n        code\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "users", "content": "{\n  invitedUsers {\n    id\n    email\n    invitedOn\n  }\n  users {\n    id\n    email\n    fullName\n    username\n    role {\n      code\n      name\n    }\n    profileIcon {\n      url\n      initials\n      bgColor\n    }\n    owned {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n    member {\n      teams {\n        id\n        name\n      }\n      projects {\n        id\n        name\n      }\n    }\n  }\n}", "metadata": {"commit_hash": "0f32f2ab2481412298db754e8b14ca831a232e27", "file": "frontend/src/shared/generated/graphql.tsx", "repo": "ruikishimoto_react-projectbar"}}, {"type": "query", "name": "$", "content": "{this.entity}Connection($where: ProyectoWhereInput) {\n      ${this.entity}Connection(where: $where) {\n          aggregate {\n          count\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+dashboard/count-project/count-mproject.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "$", "content": "{this.entity}Connection {\n      ${this.entity}Connection {\n          aggregate {\n          count\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+dashboard/count-entity/count-entity.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "$", "content": "{this.entity}Connection($where: ProyectoWhereInput) {\n      ${this.entity}Connection(where: $where) {\n          aggregate {\n          count\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+dashboard/count-mproject/count-mproject.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "integrantes($where: IntegranteWhereInput)", "content": "{\n    integrantes (where: $where) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        fullname\n        username\n      }\n      proyecto {\n        id\n        codigo\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+profesor/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "integrante($id: String!)", "content": "{\n    integrante(id: $id) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        fullname\n      }\n      proyecto {\n        id\n        nombre\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+profesor/integrante/details/integrante-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyectos($where: ProyectoWhereInput)", "content": "{\n    proyectos(where: $where) {\n      id\n      codigo\n      nombre\n      inicia\n      finaliza\n      area {\n        id\n        nombre\n      }\n      tipo {\n        id\n        nombre\n      }\n      estado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+profesor/project/list/project-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyecto($id: String!)", "content": "{\n    proyecto(id: $id) {\n      id\n      nombre\n      codigo\n      inicia\n      finaliza\n      estado\n      tipo {\n        id\n        nombre\n      }\n      alcance {\n        id\n        nombre\n        valor\n      }\n      area {\n        id\n        nombre\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+profesor/project/details/project-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pagos($where: PagoWhereInput, $orderBy: PagoOrderByInput)", "content": "{\n    pagos (where: $where, orderBy: $orderBy) {\n      id\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      integrante {\n        id\n        usuario {\n          id\n          firstname\n          lastname\n        }\n      }\n      calculo\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+profesor/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pago($id: String!)", "content": "{\n    pago(id: $id) {\n      id\n      integrante {\n        id\n        usuario {\n          id\n          fullname\n        }\n      }\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      horas\n      presencia\n      incidencia\n      relevancia\n      complejidad\n      gestion\n      vinculacion\n      calidad\n      significacion\n      cumplimiento\n      calculo\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+profesor/pago/details/pago-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createIntegrante(\n    $data: IntegranteCreateInput!,\n    $whereInput: IntegranteWhereInput!)", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n      }\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/directory/directory.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateIntegrante(\n    $data: IntegranteUpdateInput!\n    $where: IntegranteWhereUniqueInput!\n    $whereInput: IntegranteWhereInput!\n  )", "content": "{\n    updateIntegrante(data: $data, where: $where, whereInput: $whereInput) {\n      id\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n        codigo\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/update/integrante-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "integrante($id: String!)", "content": "{\n    integrante(id: $id) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        employeeNumber\n        fullname\n        username\n      }\n      proyecto {\n        id\n        codigo\n        nombre\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/update/integrante-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createIntegrante(\n    $data: IntegranteCreateInput!\n    $whereInput: IntegranteWhereInput!\n  )", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      id\n      usuario {\n        firstname\n      }\n      proyecto {\n        codigo\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/create/integrante-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "integrantes($where: IntegranteWhereInput)", "content": "{\n    integrantes (where: $where) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        fullname\n        username\n      }\n      proyecto {\n        id\n        codigo\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteIntegrante($where: IntegranteWhereUniqueInput!)", "content": "{\n    deleteIntegrante(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyIntegrantes($where: IntegranteWhereInput!)", "content": "{\n    deleteManyIntegrantes(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "integrante($id: String!)", "content": "{\n    integrante(id: $id) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        fullname\n      }\n      proyecto {\n        id\n        nombre\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/integrante/details/integrante-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyectos($where: ProyectoWhereInput)", "content": "{\n    proyectos(where: $where) {\n      id\n      codigo\n      nombre\n      inicia\n      finaliza\n      area {\n        id\n        nombre\n      }\n      tipo {\n        id\n        nombre\n      }\n      estado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/project/list/project-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyecto($id: String!)", "content": "{\n    proyecto(id: $id) {\n      id\n      nombre\n      codigo\n      inicia\n      finaliza\n      estado\n      tipo {\n        id\n        nombre\n      }\n      eje {\n        id\n        nombre\n      }\n      linea {\n        id\n        nombre\n      }\n      alcance {\n        id\n        nombre\n        valor\n      }\n      area {\n        id\n        nombre\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/project/details/project-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyectos($where: ProyectoWhereInput)", "content": "{\n          proyectos(where: $where) {\n            codigo\n            estado\n            nombre\n            id\n            integrantes {\n              jefeProyecto\n              usuario {\n                fullname\n                employeeNumber\n              }\n              pagos (where: {mes: {nombre_in: ${mes}}, anno: {numero: ${annoForm.numero}}}) {\n                calculo\n                mes {\n                  nombre\n                }\n                anno {\n                  numero\n                }\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/report/pago/pago-report.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updatePago(\n    $data: PagoUpdateInput!\n    $where: PagoWhereUniqueInput!\n    $whereInput: PagoWhereInput!\n  )", "content": "{\n    updatePago(data: $data, where: $where, whereInput: $whereInput) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/update/pago-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pago($id: String!)", "content": "{\n    pago(id: $id) {\n      id\n      integrante {\n        id\n        usuario {\n          id\n          fullname\n        }\n      }\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      horas\n      presencia\n      incidencia\n      relevancia\n      complejidad\n      gestion\n      vinculacion\n      calidad\n      significacion\n      cumplimiento\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/update/pago-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createPago(\n    $data: PagoCreateInput!\n    $whereInput: PagoWhereInput!\n  )", "content": "{\n    createPago(data: $data, whereInput: $whereInput) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/create/pago-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pagos($where: PagoWhereInput, $orderBy: PagoOrderByInput)", "content": "{\n    pagos (where: $where, orderBy: $orderBy) {\n      id\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      integrante {\n        id\n        usuario {\n          id\n          firstname\n          lastname\n        }\n      }\n      calculo\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deletePago($where: PagoWhereUniqueInput!)", "content": "{\n    deletePago(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyPagos($where: PagoWhereInput!)", "content": "{\n    deleteManyPagos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pago($id: String!)", "content": "{\n    pago(id: $id) {\n      id\n      integrante {\n        id\n        usuario {\n          id\n          fullname\n        }\n      }\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      horas\n      presencia\n      incidencia\n      relevancia\n      complejidad\n      gestion\n      vinculacion\n      calidad\n      significacion\n      cumplimiento\n      calculo\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+jproyecto/pago/details/pago-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "roles", "content": "{\n      roles {\n        id\n        name\n        description\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+home/index/index.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "me", "content": "{\n    me {\n      id\n      firstname\n      lastname\n      email\n      username\n      employeeNumber\n      roles {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+auth/profile/profile.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n    login(username: $username, password: $password) {\n      user {\n        firstname\n        username\n        roles {\n          name\n        }\n      }\n      token\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+auth/login/login.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createIntegrante(\n    $data: IntegranteCreateInput!,\n    $whereInput: IntegranteWhereInput!)", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n      }\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/directory/directory.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateIntegrante(\n    $data: IntegranteUpdateInput!\n    $where: IntegranteWhereUniqueInput!\n    $whereInput: IntegranteWhereInput!\n  )", "content": "{\n    updateIntegrante(data: $data, where: $where, whereInput: $whereInput) {\n      id\n      usuario {\n        id\n        firstname\n      }\n      proyecto {\n        id\n        codigo\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/update/integrante-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "integrante($id: String!)", "content": "{\n    integrante(id: $id) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        employeeNumber\n        fullname\n        username\n      }\n      proyecto {\n        id\n        codigo\n        nombre\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/update/integrante-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createIntegrante(\n    $data: IntegranteCreateInput!\n    $whereInput: IntegranteWhereInput!\n  )", "content": "{\n    createIntegrante(data: $data, whereInput: $whereInput) {\n      id\n      usuario {\n        firstname\n      }\n      proyecto {\n        codigo\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/create/integrante-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "integrantes($where: IntegranteWhereInput)", "content": "{\n    integrantes (where: $where) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        fullname\n        username\n      }\n      proyecto {\n        id\n        codigo\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteIntegrante($where: IntegranteWhereUniqueInput!)", "content": "{\n    deleteIntegrante(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyIntegrantes($where: IntegranteWhereInput!)", "content": "{\n    deleteManyIntegrantes(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/list/integrante-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "integrante($id: String!)", "content": "{\n    integrante(id: $id) {\n      id\n      usuario {\n        id\n        firstname\n        lastname\n        fullname\n      }\n      proyecto {\n        id\n        nombre\n      }\n      jefeProyecto\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/integrante/details/integrante-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateAnno($data: AnnoUpdateInput!, $where: AnnoWhereUniqueInput!)", "content": "{\n    updateAnno(data: $data, where: $where) {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/update/anno-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "anno($id: String!)", "content": "{\n    anno(id: $id) {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/update/anno-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createAnno($data: AnnoCreateInput!)", "content": "{\n    createAnno(data: $data) {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/create/anno-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "annos", "content": "{\n    annos {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/list/anno-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteAnno($where: AnnoWhereUniqueInput!)", "content": "{\n    deleteAnno(where: $where) {\n      numero\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/list/anno-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyAnnoes($where: AnnoWhereInput!)", "content": "{\n    deleteManyAnnoes(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/list/anno-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "anno($id: String!)", "content": "{\n    anno(id: $id) {\n      id\n      numero\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/anno/details/anno-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateArea($data: AreaUpdateInput!, $where: AreaWhereUniqueInput!)", "content": "{\n    updateArea(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/update/area-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "area($id: String!)", "content": "{\n    area(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/update/area-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createArea($data: AreaCreateInput!)", "content": "{\n    createArea(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/create/area-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "areas", "content": "{\n    areas {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/list/area-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteArea($where: AreaWhereUniqueInput!)", "content": "{\n    deleteArea(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/list/area-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyAreas($where: AreaWhereInput!)", "content": "{\n    deleteManyAreas(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/list/area-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "area($id: String!)", "content": "{\n    area(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/area/details/area-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateLinea($data: LineaUpdateInput!, $where: LineaWhereUniqueInput!)", "content": "{\n    updateLinea(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/update/linea-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "linea($id: String!)", "content": "{\n    linea(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/update/linea-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createLinea($data: LineaCreateInput!)", "content": "{\n    createLinea(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/create/linea-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "lineas", "content": "{\n    lineas {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/list/linea-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteLinea($where: LineaWhereUniqueInput!)", "content": "{\n    deleteLinea(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/list/linea-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyLineas($where: LineaWhereInput!)", "content": "{\n    deleteManyLineas(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/list/linea-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "linea($id: String!)", "content": "{\n    linea(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/linea/details/linea-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateRole($data: RoleUpdateInput!, $where: RoleWhereUniqueInput!)", "content": "{\n    updateRole(data: $data, where: $where) {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/update/role-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "role($id: String!)", "content": "{\n    role(id: $id) {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/update/role-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createRole($data: RoleCreateInput!)", "content": "{\n    createRole(data: $data) {\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/create/role-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "roles", "content": "{\n    roles {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteRole($where: RoleWhereUniqueInput!)", "content": "{\n    deleteRole(where: $where) {\n      name\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyRoles($where: RoleWhereInput!)", "content": "{\n    deleteManyRoles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/list/role-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "role($id: String!)", "content": "{\n    role(id: $id) {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/role/details/role-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "changeFile($file: Upload!, $where: FileWhereUniqueInput!)", "content": "{\n    changeFile(file: $file, where: $where) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/change/file-change.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n    uploadFiles(files: $files) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/upload/file-upload.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "files", "content": "{\n    files {\n      id\n      filename\n      mimetype\n      path\n      size\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteFile($where: FileWhereUniqueInput!)", "content": "{\n    deleteFile(where: $where) {\n      filename\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyFiles($where: FileWhereInput!)", "content": "{\n    deleteManyFiles(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/list/file-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "file($id: String!)", "content": "{\n    file(id: $id) {\n      id\n      filename\n      path\n      encoding\n      mimetype\n      size\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/file/details/file-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateAlcance($data: AlcanceUpdateInput!, $where: AlcanceWhereUniqueInput!)", "content": "{\n    updateAlcance(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/update/alcance-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "alcance($id: String!)", "content": "{\n    alcance(id: $id) {\n      id\n      nombre\n      valor\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/update/alcance-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createAlcance($data: AlcanceCreateInput!)", "content": "{\n    createAlcance(data: $data) {\n      id\n      nombre\n      valor\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/create/alcance-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "alcances", "content": "{\n    alcances {\n      id\n      nombre\n      valor\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/list/alcance-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteAlcance($where: AlcanceWhereUniqueInput!)", "content": "{\n    deleteAlcance(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/list/alcance-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyAlcances($where: AlcanceWhereInput!)", "content": "{\n    deleteManyAlcances(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/list/alcance-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "alcance($id: String!)", "content": "{\n    alcance(id: $id) {\n      id\n      nombre\n      valor\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/alcance/details/alcance-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateMes($data: MesUpdateInput!, $where: MesWhereUniqueInput!)", "content": "{\n    updateMes(data: $data, where: $where) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/update/mes-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "mes($id: String!)", "content": "{\n    mes(id: $id) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/update/mes-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createMes($data: MesCreateInput!)", "content": "{\n    createMes(data: $data) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/create/mes-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "meses", "content": "{\n    meses {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/list/mes-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteMes($where: MesWhereUniqueInput!)", "content": "{\n    deleteMes(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/list/mes-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyMeses($where: MesWhereInput!)", "content": "{\n    deleteManyMeses(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/list/mes-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "mes($id: String!)", "content": "{\n    mes(id: $id) {\n      id\n      nombre\n      habilitado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/mes/details/mes-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateTipo($data: TipoUpdateInput!, $where: TipoWhereUniqueInput!)", "content": "{\n    updateTipo(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/update/tipo-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "tipo($id: String!)", "content": "{\n    tipo(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/update/tipo-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createTipo($data: TipoCreateInput!)", "content": "{\n    createTipo(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/create/tipo-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "tipos", "content": "{\n    tipos {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/list/tipo-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteTipo($where: TipoWhereUniqueInput!)", "content": "{\n    deleteTipo(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/list/tipo-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyTipos($where: TipoWhereInput!)", "content": "{\n    deleteManyTipos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/list/tipo-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "tipo($id: String!)", "content": "{\n    tipo(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/tipo/details/tipo-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateUser($data: UserUpdateInput!, $where: UserWhereUniqueInput!)", "content": "{\n    updateUser(data: $data, where: $where) {\n      id\n      firstname\n      email\n      lastname\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "user($id: String!)", "content": "{\n    user(id: $id) {\n      id\n      firstname\n      email\n      lastname\n      username\n      employeeNumber\n      roles {\n        id\n        name\n        description\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "roles", "content": "{\n    roles {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/update/user-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createUser($data: UserCreateInput!)", "content": "{\n    createUser(data: $data) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/create/user-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "roles", "content": "{\n    roles {\n      id\n      name\n      description\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/create/user-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "users", "content": "{\n    users {\n      id\n      firstname\n      lastname\n      email\n      roles {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteUser($where: UserWhereUniqueInput!)", "content": "{\n    deleteUser(where: $where) {\n      firstname\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyUsers($where: UserWhereInput!)", "content": "{\n    deleteManyUsers(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/list/user-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "user($id: String!)", "content": "{\n    user(id: $id) {\n      id\n      firstname\n      email\n      lastname\n      username\n      employeeNumber\n      roles {\n        name\n        description\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/user/details/user-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateProyecto($data: ProyectoUpdateInput!, $where: ProyectoWhereUniqueInput!)", "content": "{\n    updateProyecto(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/update/project-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyecto($id: String!)", "content": "{\n    proyecto(id: $id) {\n      id\n      nombre\n      codigo\n      inicia\n      finaliza\n      area {\n        id\n        nombre\n      }\n      eje {\n        id\n        nombre\n      }\n      linea {\n        id\n        nombre\n      }\n      alcance {\n        id\n        nombre\n        valor\n      }\n      tipo {\n        id\n        nombre\n      }\n      estado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/update/project-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createProyecto($data: ProyectoCreateInput!)", "content": "{\n    createProyecto(data: $data) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/create/project-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "areas", "content": "{\n    areas {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/create/project-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "ejes", "content": "{\n    ejes {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/create/project-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "lineas", "content": "{\n    lineas {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/create/project-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "alcances", "content": "{\n    alcances {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/create/project-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "tipos", "content": "{\n    tipos {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/create/project-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyectos", "content": "{\n    proyectos {\n      id\n      codigo\n      nombre\n      inicia\n      finaliza\n      area {\n        id\n        nombre\n      }\n      tipo {\n        id\n        nombre\n      }\n      estado\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/list/project-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteProyecto($where: ProyectoWhereUniqueInput!)", "content": "{\n    deleteProyecto(where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/list/project-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyProyectos($where: ProyectoWhereInput!)", "content": "{\n    deleteManyProyectos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/list/project-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyecto($id: String!)", "content": "{\n    proyecto(id: $id) {\n      id\n      nombre\n      codigo\n      inicia\n      finaliza\n      estado\n      tipo {\n        id\n        nombre\n      }\n      eje {\n        id\n        nombre\n      }\n      linea {\n        id\n        nombre\n      }\n      alcance {\n        id\n        nombre\n        valor\n      }\n      area {\n        id\n        nombre\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/project/details/project-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateEje($data: EjeUpdateInput!, $where: EjeWhereUniqueInput!)", "content": "{\n    updateEje(data: $data, where: $where) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/update/eje-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "eje($id: String!)", "content": "{\n    eje(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/update/eje-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createEje($data: EjeCreateInput!)", "content": "{\n    createEje(data: $data) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/create/eje-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "ejes", "content": "{\n    ejes {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteEje($where: EjeWhereUniqueInput!)", "content": "{\n    deleteEje(where: $where) {\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyEjes($where: EjeWhereInput!)", "content": "{\n    deleteManyEjes(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/list/eje-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "eje($id: String!)", "content": "{\n    eje(id: $id) {\n      id\n      nombre\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/eje/details/eje-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyectos($where: ProyectoWhereInput)", "content": "{\n    proyectos(where: $where) {\n      id\n      codigo\n      nombre\n      inicia\n      finaliza\n      area {\n        id\n        nombre\n      }\n      tipo {\n        id\n        nombre\n      }\n      alcance {\n        id\n        nombre\n      }\n      eje {\n        id\n        nombre\n      }\n      linea {\n        id\n        nombre\n      }\n      estado\n      integrantes {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/report/proyecto/proyecto-report.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "users", "content": "{\n          users (orderBy: fullname_ASC)  {\n            id\n            fullname\n            employeeNumber\n            email\n            integrantes {\n              id\n              proyecto {\n                id\n                codigo\n                estado\n              }\n              jefeProyecto\n              pagos(where: {${hours}, mes: {nombre_in: ${mes}}, anno: {numero: ${annoForm.numero}}}) {\n                id\n                calculo\n                mes {\n                  id\n                  nombre\n                }\n                anno {\n                  id\n                  numero\n                }\n              }\n            }\n          }\n        }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/report/pago/pago-report.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updatePago(\n    $data: PagoUpdateInput!\n    $where: PagoWhereUniqueInput!\n    $whereInput: PagoWhereInput!\n  )", "content": "{\n    updatePago(data: $data, where: $where, whereInput: $whereInput) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/update/pago-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pago($id: String!)", "content": "{\n    pago(id: $id) {\n      id\n      integrante {\n        id\n        usuario {\n          id\n          fullname\n        }\n      }\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      horas\n      presencia\n      incidencia\n      relevancia\n      complejidad\n      gestion\n      vinculacion\n      calidad\n      significacion\n      cumplimiento\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/update/pago-update.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createPago(\n    $data: PagoCreateInput!\n    $whereInput: PagoWhereInput!\n  )", "content": "{\n    createPago(data: $data, whereInput: $whereInput) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/create/pago-create.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pagos($where: PagoWhereInput, $orderBy: PagoOrderByInput)", "content": "{\n    pagos (where: $where, orderBy: $orderBy) {\n      id\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      integrante {\n        id\n        usuario {\n          id\n          firstname\n          lastname\n        }\n      }\n      calculo\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deletePago($where: PagoWhereUniqueInput!)", "content": "{\n    deletePago(where: $where) {\n      id\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyPagos($where: PagoWhereInput!)", "content": "{\n    deleteManyPagos(where: $where) {\n      count\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/list/pago-list.component.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pago($id: String!)", "content": "{\n    pago(id: $id) {\n      id\n      integrante {\n        id\n        usuario {\n          id\n          fullname\n        }\n      }\n      mes {\n        id\n        nombre\n      }\n      anno {\n        id\n        numero\n      }\n      horas\n      presencia\n      incidencia\n      relevancia\n      complejidad\n      gestion\n      vinculacion\n      calidad\n      significacion\n      cumplimiento\n      calculo\n    }\n  }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/views/+admin/pago/details/pago-details.component.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createArea($data: AreaCreateInput!)", "content": "{\n      createArea(data: $data) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteArea($where: AreaWhereUniqueInput!)", "content": "{\n      deleteArea(where: $where) {\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyAreas($where: AreaWhereInput!)", "content": "{\n      deleteManyAreas(where: $where) {\n        count\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateArea(\n      $data: AreaUpdateInput!\n      $where: AreaWhereUniqueInput!\n    )", "content": "{\n      updateArea(data: $data, where: $where) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "createTipo($data: TipoCreateInput!)", "content": "{\n      createTipo(data: $data) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteTipo($where: TipoWhereUniqueInput!)", "content": "{\n      deleteTipo(where: $where) {\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "updateTipo(\n      $data: TipoUpdateInput!\n      $where: TipoWhereUniqueInput!\n    )", "content": "{\n      updateTipo(data: $data, where: $where) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteProyecto($where: ProyectoWhereUniqueInput!)", "content": "{\n      deleteProyecto(where: $where) {\n        id\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyProyectos($where: ProyectoWhereInput!)", "content": "{\n      deleteManyProyectos(where: $where) {\n        count\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "login($username: String!, $password: String!)", "content": "{\n      login(username: $username, password: $password) {\n        user {\n          firstname\n          username\n          roles {\n            name\n          }\n        }\n        token\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "changeFile($file: Upload!, $where: FileWhereUniqueInput!)", "content": "{\n      changeFile(file: $file, where: $where) {\n        filename\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteFile($where: FileWhereUniqueInput!)", "content": "{\n      deleteFile(where: $where) {\n        filename\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "deleteManyFiles($where: FileWhereInput!)", "content": "{\n      deleteManyFiles(where: $where) {\n        count\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "mutation", "name": "uploadFiles($files: [Upload!]!)", "content": "{\n      uploadFiles(files: $files) {\n        filename\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pagos(\n      $where: PagoWhereInput\n      $orderBy: PagoOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )", "content": "{\n      pagos(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        integrante {\n          id\n          usuario {\n            id\n            fullname\n            employeeNumber\n          }\n        }\n        mes {\n          id\n          nombre\n        }\n        anno {\n          id\n          numero\n        }\n        horas\n        presencia\n        incidencia\n        relevancia\n        complejidad\n        gestion\n        vinculacion\n        calidad\n        significacion\n        cumplimiento\n        calculo\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "existUser($where: UserWhereInput)", "content": "{\n      existUser(where: $where)\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "pago($id: String!)", "content": "{\n      pago(id: $id) {\n        id\n        integrante {\n          id\n          usuario {\n            id\n            fullname\n            employeeNumber\n          }\n        }\n        mes {\n          id\n          nombre\n        }\n        anno {\n          id\n          numero\n        }\n        horas\n        presencia\n        incidencia\n        relevancia\n        complejidad\n        gestion\n        vinculacion\n        calidad\n        significacion\n        cumplimiento\n        calculo\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "integrantes(\n      $where: IntegranteWhereInput\n      $orderBy: IntegranteOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )", "content": "{\n      integrantes(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        proyecto {\n          id\n          codigo\n        }\n        usuario {\n          id\n          firstname\n          lastname\n          fullname\n          email\n          username\n          employeeNumber\n          roles {\n            id\n            name\n          }\n        }\n        jefeProyecto\n        pagos {\n          id\n          integrante {\n            id\n            usuario {\n              id\n              fullname\n              employeeNumber\n            }\n          }\n          mes {\n            id\n            nombre\n          }\n          anno {\n            id\n            numero\n          }\n          horas\n          presencia\n          incidencia\n          relevancia\n          complejidad\n          gestion\n          vinculacion\n          calidad\n          significacion\n          cumplimiento\n          calculo\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "integrante($id: String!)", "content": "{\n      integrante(id: $id) {\n        id\n        proyecto {\n          id\n          codigo\n        }\n        usuario {\n          id\n          firstname\n          lastname\n          fullname\n          email\n          username\n          employeeNumber\n          roles {\n            id\n            name\n          }\n        }\n        jefeProyecto\n        pagos {\n          id\n          integrante {\n            id\n            usuario {\n              id\n              fullname\n              employeeNumber\n            }\n          }\n          mes {\n            id\n            nombre\n          }\n          anno {\n            id\n            numero\n          }\n          horas\n          presencia\n          incidencia\n          relevancia\n          complejidad\n          gestion\n          vinculacion\n          calidad\n          significacion\n          cumplimiento\n          calculo\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "annos(\n      $where: AnnoWhereInput\n      $orderBy: AnnoOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )", "content": "{\n      annos(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        numero\n        habilitado\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "meses(\n      $where: MesWhereInput\n      $orderBy: MesOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )", "content": "{\n      meses(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        nombre\n        habilitado\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "alcance($id: String!)", "content": "{\n      alcance(id: $id) {\n        id\n        nombre\n        valor\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "alcances", "content": "{\n      alcances {\n        id\n        nombre\n        valor\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "area($id: String!)", "content": "{\n      area(id: $id) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "areas", "content": "{\n      areas {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "eje($id: String!)", "content": "{\n      eje(id: $id) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "ejes(\n      $where: EjeWhereInput\n      $orderBy: EjeOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )", "content": "{\n      ejes(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "linea($id: String!)", "content": "{\n      linea(id: $id) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "lineas(\n      $where: LineaWhereInput\n      $orderBy: LineaOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )", "content": "{\n      lineas(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "tipo($id: String!)", "content": "{\n      tipo(id: $id) {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "tipos", "content": "{\n      tipos {\n        id\n        nombre\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyecto($id: String!)", "content": "{\n      proyecto(id: $id) {\n        id\n        codigo\n        nombre\n        inicia\n        finaliza\n        area {\n          id\n          nombre\n        }\n        eje {\n          id\n          nombre\n        }\n        linea {\n          id\n          nombre\n        }\n        tipo {\n          id\n          nombre\n        }\n        alcance {\n          id\n          nombre\n          valor\n        }\n        estado\n        integrantes {\n          id\n          proyecto {\n            id\n            codigo\n          }\n          usuario {\n            id\n            firstname\n            lastname\n            fullname\n            email\n            username\n            employeeNumber\n            roles {\n              id\n              name\n            }\n          }\n          jefeProyecto\n          pagos {\n            id\n            integrante {\n              id\n              usuario {\n                id\n                fullname\n                employeeNumber\n              }\n            }\n            mes {\n              id\n              nombre\n            }\n            anno {\n              id\n              numero\n            }\n            horas\n            presencia\n            incidencia\n            relevancia\n            complejidad\n            gestion\n            vinculacion\n            calidad\n            significacion\n            cumplimiento\n            calculo\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "proyectos(\n      $where: ProyectoWhereInput\n      $orderBy: ProyectoOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )", "content": "{\n      proyectos(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        codigo\n        nombre\n        inicia\n        finaliza\n        alcance {\n          id\n          nombre\n          valor\n        }\n        area {\n          id\n          nombre\n        }\n        eje {\n          id\n          nombre\n        }\n        linea {\n          id\n          nombre\n        }\n        tipo {\n          id\n          nombre\n        }\n        estado\n        integrantes {\n          id\n          proyecto {\n            id\n            codigo\n          }\n          usuario {\n            id\n            firstname\n            lastname\n            fullname\n            email\n            username\n            employeeNumber\n            roles {\n              id\n              name\n            }\n          }\n          jefeProyecto\n          pagos {\n            id\n            integrante {\n              id\n              usuario {\n                id\n                fullname\n                employeeNumber\n              }\n            }\n            mes {\n              id\n              nombre\n            }\n            anno {\n              id\n              numero\n            }\n            horas\n            presencia\n            incidencia\n            relevancia\n            complejidad\n            gestion\n            vinculacion\n            calidad\n            significacion\n            cumplimiento\n            calculo\n          }\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "me", "content": "{\n      me {\n        id\n        firstname\n        lastname\n        fullname\n        email\n        username\n        employeeNumber\n        roles {\n          id\n          name\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "users(\n      $where: UserWhereInput\n      $orderBy: UserOrderByInput\n      $skip: Int\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n    )", "content": "{\n      users(\n        where: $where\n        orderBy: $orderBy\n        skip: $skip\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        id\n        firstname\n        lastname\n        fullname\n        email\n        username\n        employeeNumber\n        roles {\n          id\n          name\n        }\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "file($id: String!)", "content": "{\n      file(id: $id) {\n        id\n        filename\n        path\n        encoding\n        mimetype\n        size\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "files", "content": "{\n      files {\n        id\n        filename\n        mimetype\n        path\n        size\n      }\n    }", "metadata": {"commit_hash": "7be0f3786abac9f6e241ae064ca5b6bca24438c3", "file": "client/src/app/graphql/types.ts", "repo": "ysantalla_gespro"}}, {"type": "query", "name": "prices($block24: Int!, $block48: Int!, $blockWeek: Int!)", "content": "{\n    current: bundles(first: 1, subgraphError: allow) {\n      ethPriceUSD\n    }\n    oneDay: bundles(first: 1, block: { number: $block24 }, subgraphError: allow) {\n      ethPriceUSD\n    }\n    twoDay: bundles(first: 1, block: { number: $block48 }, subgraphError: allow) {\n      ethPriceUSD\n    }\n    oneWeek: bundles(first: 1, block: { number: $blockWeek }, subgraphError: allow) {\n      ethPriceUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/hooks/useEthPrices.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "surroundingTicks($poolAddress: String!, $tickIdxLowerBound: BigInt!, $tickIdxUpperBound: BigInt!, $skip: Int!)", "content": "{\n    ticks(\n      subgraphError: allow\n      first: 1000\n      skip: $skip\n      where: { poolAddress: $poolAddress, tickIdx_lte: $tickIdxUpperBound, tickIdx_gte: $tickIdxLowerBound }\n    ) {\n      tickIdx\n      liquidityGross\n      liquidityNet\n      price0\n      price1\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/pools/tickData.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "poolByAddress($poolAddress: String!)", "content": "{\n    pool(id: $poolAddress) {\n      tick\n      token0 {\n        symbol\n        id\n        decimals\n      }\n      token1 {\n        symbol\n        id\n        decimals\n      }\n      feeTier\n      sqrtPrice\n      liquidity\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/pools/tickData.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "poolChart($startTime: Int!, $skip: Int!, $address: Bytes!)", "content": "{\n    poolDayDatas(\n      first: 1000\n      skip: $skip\n      where: { pool: $address, date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n      subgraphError: allow\n    ) {\n      date\n      volumeUSD\n      tvlUSD\n      feesUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/pools/chartData.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "top500PoolsTVL", "content": "{\n    pools(first: 500, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n      id\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/pools/topPools.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "transactionsByPool($address: Bytes!)", "content": "{\n    mints(first: 1000, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 1000, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 1000, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/pools/transactions.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "tokenDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!)", "content": "{\n    tokenDayDatas(\n      first: 1000\n      skip: $skip\n      where: { token: $address, date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n      subgraphError: allow\n    ) {\n      date\n      volumeUSD\n      totalValueLockedUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/tokens/chartData.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "top500Tokens", "content": "{\n    tokens(first: 500, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n      id\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/tokens/topTokens.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "transactions($address: Bytes!)", "content": "{\n    mintsAs0: mints(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    mintsAs1: mints(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs0: swaps(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs1: swaps(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs0: burns(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs1: burns(\n      first: 500\n      orderBy: timestamp\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/tokens/transactions.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "topPools($address: Bytes!)", "content": "{\n    asToken0: pools(\n      first: 200\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      where: { token0: $address }\n      subgraphError: allow\n    ) {\n      id\n    }\n    asToken1: pools(\n      first: 200\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      where: { token1: $address }\n      subgraphError: allow\n    ) {\n      id\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/tokens/poolsForToken.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "tokens($value: String, $id: String)", "content": "{\n    asSymbol: tokens(\n      where: { symbol_contains: $value }\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asName: tokens(\n      where: { name_contains: $value }\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/search/index.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "pools($tokens: [Bytes]!, $id: String)", "content": "{\n    as0: pools(where: { token0_in: $tokens }, subgraphError: allow) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pools(where: { token1_in: $tokens }, subgraphError: allow) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pools(where: { id: $id }, subgraphError: allow) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/search/index.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "transactions($address: Bytes!)", "content": "{\n    mints(first: 500, orderBy: timestamp, orderDirection: desc, where: { origin: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 500, orderBy: timestamp, orderDirection: desc, where: { origin: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 500, orderBy: timestamp, orderDirection: desc, where: { origin: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/wallets/walletData.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "allTransactions", "content": "{\n    transactions(first: 500, orderBy: timestamp, orderDirection: desc, subgraphError: allow) {\n      id\n      timestamp\n      mints {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        owner\n        sender\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n      burns {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        owner\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/protocol/transactions.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "KyberSwapDayDatas($startTime: Int!, $skip: Int!)", "content": "{\n    kyberSwapDayDatas(\n      first: 1000\n      skip: $skip\n      subgraphError: allow\n      where: { date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n    ) {\n      id\n      date\n      volumeUSD\n      tvlUSD\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/protocol/chart.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "query", "name": "health($name: Bytes)", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: $name, subgraphError: allow) {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "52408b42c69e6c1007fb5e7d91a63bdf15424413", "file": "src/data/application/index.ts", "repo": "KyberNetwork_promm-analytics"}}, {"type": "subscription", "name": "", "content": "{\n          voted\n        }", "metadata": {"commit_hash": "b5e95b1c628451c69ea63813b6a36aa6f90a9cf6", "file": "frontend/src/app.js", "repo": "widdix_aws-cutting-edge-appsync"}}, {"type": "mutation", "name": "", "content": "{\n              vote(service: ${this.service})\n            }", "metadata": {"commit_hash": "b5e95b1c628451c69ea63813b6a36aa6f90a9cf6", "file": "frontend/src/app.js", "repo": "widdix_aws-cutting-edge-appsync"}}, {"type": "query", "name": "CombosQuery", "content": "{\n    allComboes {\n      id\n      entry {\n        text\n      }\n      meaning {\n        id\n        definition\n        type\n        key\n      }\n      picture {\n        id\n        arangoKey\n        hash\n        sourceName\n        sourceUrl\n        authorName\n        authorUrl\n        licenceName\n        licenceUrl\n      }\n      spot {\n        id\n        height\n        width\n        x\n        y\n        key\n      }\n      sentences {\n        id\n        text\n      }\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "demo.lazywill.com/src/AppContainer.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "CreateGithub($input: CreateGithubInput!, $condition: ModelGithubConditionInput)", "content": "{\n    createGithub(input: $input, condition: $condition) {\n      id\n      datetime\n      repos {\n        id\n        name\n        url\n        stars\n        forks\n      }\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "lekoarts-stats/.github/actions/pull-push-data/graphql.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "CreateTwitter($input: CreateTwitterInput!, $condition: ModelTwitterConditionInput)", "content": "{\n    createTwitter(input: $input, condition: $condition) {\n      id\n      datetime\n      followers\n      tweets\n      createdAt\n      updatedAt\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "lekoarts-stats/.github/actions/pull-push-data/graphql.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "query", "name": "", "content": "{\n    blogPosts {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "gatsby/examples/using-multiple-providers/src/pages/index.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "query", "name": "($id: ID)", "content": "{\n    blogPost(where: { id: $id }) {\n      title\n      post\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "gatsby/examples/using-multiple-providers/src/pages/index.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "subscription", "name": "", "content": "{\n          posts {\n            id\n            slug\n            description\n            imgUrl\n            imgAlt\n            author {\n              id\n              name\n            }\n            status\n          }\n        }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "gatsby/examples/creating-source-plugins/source-plugin/gatsby-node.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "query", "name": "", "content": "{\n          posts {\n            id\n            slug\n            description\n            imgUrl\n            imgAlt\n            author {\n              id\n              name\n            }\n          }\n          authors {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "gatsby/examples/creating-source-plugins/source-plugin/gatsby-node.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "query", "name": "($label: String!)", "content": "{\n    openIssues(label: $label) {\n      totalIssues\n      issues {\n        ...GitHubIssueFragment\n      }\n    }\n  }\n  ${GitHubIssueFragment}", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "store.gatsbyjs.org/src/components/Dashboard/OpenIssues.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "($input: CreateContributorInput!)", "content": "{\n    createContributor(input: $input) {\n      email\n      github {\n        username\n        contributionCount\n        pullRequests {\n          id\n        }\n      }\n      shopify {\n        id\n        codes {\n          code\n          used\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "store.gatsbyjs.org/src/components/ContributorArea/ContentForContributorWithNoAccount.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "query", "name": "($label: String!)", "content": "{\n    openIssues(label: $label) {\n      totalIssues\n      issues {\n        ...GitHubIssueFragment\n      }\n    }\n  }\n  ${GitHubIssueFragment}", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "store.gatsbyjs.org/src/components/ContributorArea/OpenIssues.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "($user: String!)", "content": "{\n            updateContributorTags(githubUsername: $user) {\n              email\n              github {\n                username\n                contributionCount\n                pullRequests {\n                  id\n                }\n              }\n              shopify {\n                id\n                codes {\n                  code\n                  used\n                }\n              }\n            }\n          }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "store.gatsbyjs.org/src/components/Layout/Layout.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "query", "name": "", "content": "{\n    blogPosts {\n      id\n      title\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "gatsby-1/examples/using-multiple-providers/src/pages/index.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "query", "name": "($id: ID)", "content": "{\n    blogPost(where: { id: $id }) {\n      title\n      post\n    }\n  }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "gatsby-1/examples/using-multiple-providers/src/pages/index.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "subscription", "name": "", "content": "{\n          posts {\n            id\n            slug\n            description\n            imgUrl\n            imgAlt\n            author {\n              id\n              name\n            }\n            status\n          }\n        }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "gatsby-1/examples/creating-source-plugins/source-plugin/gatsby-node.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "query", "name": "", "content": "{\n          posts {\n            id\n            slug\n            description\n            imgUrl\n            imgAlt\n            author {\n              id\n              name\n            }\n          }\n          authors {\n            id\n            name\n          }\n        }", "metadata": {"commit_hash": "5ae754b327bde505b9d54fe02b79bd68752c61ac", "file": "gatsby-1/examples/creating-source-plugins/source-plugin/gatsby-node.js", "repo": "Archive-42_a-whole-bunch-o-gatsby-templates"}}, {"type": "mutation", "name": "($description: String!, $title: String!)", "content": "{\n    createListing(description: $description, title: $title) {\n      id\n    }\n  }", "metadata": {"commit_hash": "29a44a12529919aaab0fdc48efcb8b652bf28ce4", "file": "classifieds-app/src/components/Root/Listings/AddListing/AddListing.js", "repo": "nizar787_mircroservice-app-front-back-build-deploy-docker"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n    createUserSession(email: $email, password: $password) {\n      id\n      user {\n        email\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "29a44a12529919aaab0fdc48efcb8b652bf28ce4", "file": "classifieds-app/src/components/Root/AccountDetails/Login/Login.js", "repo": "nizar787_mircroservice-app-front-back-build-deploy-docker"}}, {"type": "mutation", "name": "($sessionId: ID!)", "content": "{\n    deleteUserSession(sessionId: $sessionId)\n  }", "metadata": {"commit_hash": "29a44a12529919aaab0fdc48efcb8b652bf28ce4", "file": "classifieds-app/src/components/Root/AccountDetails/Account/Account.js", "repo": "nizar787_mircroservice-app-front-back-build-deploy-docker"}}, {"type": "mutation", "name": "($email: String!, $password: String!)", "content": "{\n    createUser(email: $email, password: $password) {\n      id\n    }\n  }", "metadata": {"commit_hash": "29a44a12529919aaab0fdc48efcb8b652bf28ce4", "file": "classifieds-app/src/components/Root/AccountDetails/SignUp/SignUp.js", "repo": "nizar787_mircroservice-app-front-back-build-deploy-docker"}}, {"type": "query", "name": "($code: String!)", "content": "{post(code: $code) { code title } }", "metadata": {"commit_hash": "4463dfc761dbd2fa26535ab0a79dde14d40f0d73", "file": "client/app/core/service.js", "repo": "neat-soft_vue-express-mongo-boilerplate"}}, {"type": "query", "name": "Orders($page:Int,$rows:Int,$search:String)", "content": "{\n  allOrders(page:$page,rows:$rows,search:$search){\n    _id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    order_amount\n    paid_amount\n    payment_method\n    order_id\n    user{\n      _id\n      name\n      email\n      phone\n    }\n    items{\n      _id\n      food{\n        _id\n        title\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        \n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n         \n          title\n          price\n        }\n      }\n      quantity\n    }\n    reason\n    status\n    payment_status\n    order_status\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/index.js", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "UploadToken($pushToken:String!)", "content": "{\n  uploadToken(pushToken:$pushToken){\n    _id\n    push_token\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/index.js", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "AllReviews($offset:Int)", "content": "{\n  allReviews(offset:$offset){\n    _id\n    rating\n    description\n    createdAt\n    updatedAt\n    is_active\n    order{\n      user{\n        name\n        email\n      }\n      items{\n        food{\n          title\n        }\n      }\n   }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Ratings.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SendNotificationUser($notificationTitle:String, $notificationBody: String!)", "content": "{\n  sendNotificationUser(notificationTitle:$notificationTitle,notificationBody:$notificationBody)\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Notifications.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Coupons", "content": "{\n        coupons {\n          _id\n          code\n          discount\n          enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteCoupon($id:String!)", "content": "{\n        deleteCoupon(id:$id)\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Coupons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "", "content": "{\n  riders{\n    _id\n    name\n    username\n    password\n    phone\n    available\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteRider($id:String!)", "content": "{\n        deleteRider(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "ToggleRider($id:String)", "content": "{\n        toggleAvailablity(id:$id){\n          _id\n        }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "", "content": "{\n  availableRiders{\n    _id\n    name\n    username\n    phone\n    available\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Riders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "GetDashboardTotal($startingDate: String, $endingDate: String)", "content": "{\n  getDashboardTotal(starting_date: $startingDate, ending_date: $endingDate){\n    total_orders\n    total_users\n    total_sales\n    total_ratings\n    avg_ratings\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "GetDashboardSales($startingDate: String, $endingDate: String)", "content": "{\n  getDashboardSales(starting_date: $startingDate, ending_date: $endingDate){\n    orders{\n      day\n      amount\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "GetDashboardOrders($startingDate: String, $endingDate: String)", "content": "{\n  getDashboardOrders(starting_date: $startingDate, ending_date: $endingDate){\n    orders{\n      day\n      count\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Dashboard.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "ResetPassword($password:String!,$token:String!)", "content": "{\n  resetPassword(password:$password,token:$token){\n    result\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/ForgotPassword.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "GetConfiguration", "content": "{\n  configuration{\n    _id\n    order_id_prefix\n    email\n    password\n    enable_email\n    client_id\n    client_secret\n    sandbox\n    publishable_key\n    secret_key\n    delivery_charges\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Configuration.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Foods($page:Int)", "content": "{\n    foods(page:$page){\n      _id\n      title\n      description\n      stock\n      tag\n      img_url\n      variations{\n        _id\n        title\n        price\n        discounted\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      category{\n          _id\n          title\n      }\n    }\n  }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteFood($id:String!)", "content": "{\n        deleteFood(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Orders($page:Int,$rows:Int,$search:String)", "content": "{\n  allOrders(page:$page,rows:$rows,search:$search){\n    _id\n    delivery_address{\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n    delivery_charges\n    order_amount\n    paid_amount\n    payment_method\n    order_id\n    user{\n      _id\n      name\n      email\n      phone\n    }\n    items{\n      _id\n      food{\n        _id\n        title\n        description\n        img_url\n      }\n      variation{\n        _id\n        title\n        price\n        discounted\n      }\n      addons{\n        \n        title\n        description\n        quantity_minimum\n        quantity_maximum\n        options{\n         \n          title\n          price\n        }\n      }\n      quantity\n    }\n    reason\n    status\n    payment_status\n    order_status\n    createdAt\n    review{\n      _id\n      rating\n      description\n    }\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Orders.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "AdminLogin($email:String!,$password:String!)", "content": "{\n  adminLogin(email:$email,password:$password){\n    userId\n    token\n    name\n    email\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Login.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "AllOptions($page:Int)", "content": "{\n  allOptions(page:$page) {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Options.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteOption($id:String!)", "content": "{\n        deleteOption(id:$id)\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Options.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Users($page:Int)", "content": "{\n  users(page:$page){\n    _id\n    name\n    email\n    phone\n    addresses{\n      _id\n      latitude\n      longitude\n      delivery_address\n      details\n      label\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Users.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "AllAddons($page:Int)", "content": "{\n  allAddons(page:$page){\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n  is_active\n}}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Addons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteAddon($id:String!)", "content": "{\n        deleteAddon(id:$id)\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Addons.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "categories", "content": "{\n      categories{\n          _id\n          title\n          description\n          img_menu\n    }}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "DeleteCategory($id:String!)", "content": "{\n        deleteCategory(id:$id){\n          _id\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Foods($page:Int)", "content": "{\n    foods(page:$page){\n      _id\n      title\n      description\n      stock\n      tag\n      img_url\n      variations{\n        _id\n        title\n        price\n        discounted\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      category{\n          _id\n          title\n      }\n    }\n  }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/views/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateRider($riderInput:RiderInput!)", "content": "{\n    createRider(\n        riderInput:$riderInput\n    ){\n    _id\n    name\n    username\n    password\n    phone\n    available\n    }\n  }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "EditRider($riderInput:RiderInput!)", "content": "{\n        editRider(\n          riderInput:$riderInput\n        ){\n          _id\n          name\n          username\n          phone\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "", "content": "{\n  riders{\n    _id\n    name\n    username\n    password\n    phone\n    available\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Rider/Rider.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateCategory($title:String!,$description:String!,$img_menu:String)", "content": "{\n  createCategory(category:{title:$title,description:$description,img_menu:$img_menu}){_id}\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "EditCategory( $_id:String,$title:String!,$description:String!,$img_menu:String)", "content": "{\n        editCategory(category:{_id:$_id,title:$title,description:$description,img_menu:$img_menu}){_id}\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "categories", "content": "{\n      categories{\n          _id\n          title\n          description\n          img_menu\n    }}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Category/Category.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    order_status\n    payment_status\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "", "content": "{\n  availableRiders{\n    _id\n    name\n    username\n    phone\n    available\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "AssignRider($id:String!,$riderId:String!)", "content": "{\n  assignRider(id:$id,riderId:$riderId){\n    _id\n    rider{\n      _id\n      name\n    }\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "", "content": "{\n  getPaymentStatuses\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "UpdateOrderStatus($id:String!,$status:String!,$reason:String)", "content": "{\n  updateOrderStatus(id:$id,status:$status,reason:$reason){\n    _id\n    order_status\n    payment_status\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "UpdatePaymentStatus($id:String!,$status:String!)", "content": "{\n  updatePaymentStatus(id:$id,status:$status){\n    _id\n    payment_status\n    paid_amount\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "GetConfiguration", "content": "{\n  configuration{\n    _id\n    order_id_prefix\n    email\n    password\n    enable_email\n    client_id\n    client_secret\n    sandbox\n    publishable_key\n    secret_key\n    delivery_charges\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "", "content": "{\n  orderCount\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/OrderData.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "subscription", "name": "SubscribePaceOrder", "content": "{\n  subscribePlaceOrder{\n      order{\n        _id\n      delivery_address{\n        latitude\n        longitude\n        delivery_address\n        details\n        label\n      }\n      delivery_charges\n      order_amount\n      paid_amount\n      payment_method\n      order_id\n      user{\n        _id\n        name\n        email\n        phone\n      }\n      items{\n        _id\n        food{\n          _id\n          title\n          description\n          img_url\n        }\n        variation{\n          _id\n          title\n          price\n          discounted\n        }\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            price\n          }\n        }\n        quantity\n      }\n      reason\n      status\n      payment_status\n      order_status\n      createdAt\n      review{\n        _id\n        rating\n        description\n      }\n      rider{\n        _id\n        name\n      }\n    }\n    origin\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Order/OrderData.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateAddons($addonInput:[AddonInput])", "content": "{\n  createAddons(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Addons", "content": "{\n  addons{\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n}}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "editAddon($addonInput:AddonInput)", "content": "{\n  editAddon(addonInput:$addonInput){\n    _id\n    title\n    description\n    options{\n      _id\n      title\n      description\n      price\n    }\n    quantity_minimum\n    quantity_maximum\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Addon/Addon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateOptions($optionInput:[OptionInput])", "content": "{\n  createOptions(optionInput:$optionInput){\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "editOption($optionInput:OptionInput)", "content": "{\n  editOption(optionInput:$optionInput){\n          _id\n          title\n          description\n          price\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Option/Option.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Options", "content": "{\n  options {\n    _id\n    title\n    description\n    price\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Option/List/List.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateCoupon($couponInput:CouponInput!)", "content": "{\n  createCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "editCoupon($couponInput:CouponInput!)", "content": "{\n  editCoupon(couponInput:$couponInput){\n    _id\n    code\n    discount\n    enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Coupons", "content": "{\n        coupons {\n          _id\n          code\n          discount\n          enabled\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Coupon/Coupon.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SaveOrderConfiguration($configurationInput:OrderConfigurationInput!)", "content": "{\n  saveOrderConfiguration(configurationInput:$configurationInput){\n    _id\n    order_id_prefix\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Order/Order.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SaveDeliveryConfiguration($configurationInput:DeliveryConfigurationInput!)", "content": "{\n  saveDeliveryConfiguration(configurationInput:$configurationInput){\n    _id\n    delivery_charges\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Delivery/Delivery.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SaveEmailConfiguration($configurationInput:EmailConfigurationInput!)", "content": "{\n  saveEmailConfiguration(configurationInput:$configurationInput){\n    _id\n    email\n    password\n    enable_email\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Email/Email.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "SaveCurrencyConfiguration($configurationInput:CurrencyConfigurationInput!)", "content": "{\n  saveCurrencyConfiguration(configurationInput:$configurationInput){\n    _id\n    currency\n    currency_symbol\n  }\n}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Configuration/Currency/Currency.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "CreateFood($foodInput:FoodInput!)", "content": "{\n      createFood(\n          foodInput:$foodInput\n      ){\n        _id\n        title\n        img_url\n        description\n        stock\n        variations{\n          _id\n          title\n          price\n          discounted\n          addons{\n            _id\n            title\n            description\n            quantity_minimum\n            quantity_maximum\n            options{\n              _id\n              title\n              price\n            }\n          }\n        }\n        category{\n          _id\n          title\n      }\n      }\n    }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "mutation", "name": "EditFood($foodInput:FoodInput!)", "content": "{\n        editFood(\n            foodInput:$foodInput\n        ){\n          _id\n          title\n          img_url\n          description\n          stock\n          tag\n          variations{\n            _id\n            title\n            price\n            discounted\n            addons{\n              _id\n              title\n              description\n              quantity_minimum\n              quantity_maximum\n              options{\n                _id\n                title\n                price\n              }\n            }\n          }\n          category{\n            _id\n            title\n        }\n        }\n      }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "categories", "content": "{\n      categories{\n          _id\n          title\n          description\n          img_menu\n    }}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Addons", "content": "{\n  addons{\n  _id\n  title\n  description\n  options{\n    _id\n    title\n    description\n    price\n  }\n  quantity_minimum\n  quantity_maximum\n}}", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "Foods($page:Int)", "content": "{\n    foods(page:$page){\n      _id\n      title\n      description\n      stock\n      tag\n      img_url\n      variations{\n        _id\n        title\n        price\n        discounted\n        addons{\n          _id\n          title\n          description\n          quantity_minimum\n          quantity_maximum\n          options{\n            _id\n            title\n            price\n          }\n        }\n      }\n      category{\n          _id\n          title\n      }\n    }\n  }", "metadata": {"commit_hash": "590405e870514a21972db349a1d0bff2765ca51a", "file": "src/components/Food/Food.jsx", "repo": "Ninjas-Code-official_enatega-singlevendor-admin"}}, {"type": "query", "name": "polkabridgeAmmDayDatas($startTime: Int!, $skip: Int!)", "content": "{\n    polkabridgeAmmDayDatas(\n      first: 1000\n      skip: $skip\n      where: { date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n    ) {\n      id\n      date\n      totalVolumeUSD\n      dailyVolumeUSD\n      dailyVolumeETH\n      totalLiquidityUSD\n      totalLiquidityETH\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "transactions", "content": "{\n    transactions(first: 100, orderBy: timestamp, orderDirection: desc) {\n      mints(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        to\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      burns(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        amount0In\n        amount0Out\n        amount1In\n        amount1Out\n        amountUSD\n        to\n      }\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "pairs($skip: Int!)", "content": "{\n    pairs(\n      first: 500\n      skip: $skip\n      orderBy: trackedReserveETH\n      orderDirection: desc\n    ) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "tokens($skip: Int!)", "content": "{\n    tokens(first: 500, skip: $skip) {\n      id\n      name\n      symbol\n      totalLiquidity\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "blocks($timestampFrom: Int!, $timestampTo: Int!)", "content": "{\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "health", "content": "{\n    indexingStatusForCurrentVersion(subgraphName: \"PolkaBridge AMM-V1\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "($allPairs: [Bytes]!)", "content": "{\n    mints(\n      first: 20\n      where: { pair_in: $allPairs }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(\n      first: 20\n      where: { pair_in: $allPairs }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(\n      first: 30\n      where: { pair_in: $allPairs }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      transaction {\n        id\n        timestamp\n      }\n      id\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "tokenDayDatas($tokenAddr: String!, $skip: Int!)", "content": "{\n    tokenDayDatas(\n      first: 1000\n      skip: $skip\n      orderBy: date\n      orderDirection: asc\n      where: { token: $tokenAddr }\n    ) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "tokenDayDatas($date: Int)", "content": "{\n    tokenDayDatas(\n      first: 150\n      orderBy: totalLiquidityUSD\n      orderDirection: desc\n    ) {\n      id\n      date\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "pairs", "content": "{\n    pairs(first: 200, orderBy: reserveUSD, orderDirection: desc) {\n      id\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "pairDayDatas($pairAddress: Bytes!, $skip: Int!)", "content": "{\n    pairDayDatas(\n      first: 1000\n      skip: $skip\n      orderBy: date\n      orderDirection: asc\n      where: { pairAddress: $pairAddress }\n    ) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }", "metadata": {"commit_hash": "eff42087e489fddd1886a9fe364333994698a5a3", "file": "frontend/src/apollo/queries.js", "repo": "webgalaxy315_polkabridge-dex"}}, {"type": "query", "name": "", "content": "{\n    blog(first: 26) {\n      id\n      author\n      category\n      heading\n      time\n      image {\n        url\n      }\n      newsContent\n    }\n  }", "metadata": {"commit_hash": "f5cf113831001ba13da6347ff84c4f17bad2632e", "file": "src/newsQueries.js", "repo": "icodejsx_blog"}}, {"type": "query", "name": "", "content": "{\n        new {\n          id\n          newsContent\n          author\n          category\n          time\n          heading\n          image {\n            url\n          }\n        }\n      }", "metadata": {"commit_hash": "f5cf113831001ba13da6347ff84c4f17bad2632e", "file": "src/components/Blogs.js", "repo": "icodejsx_blog"}}, {"type": "query", "name": "reverseRegistrations($user: String!)", "content": "{\n    reverseRegistrations(where: { registrant: $user }) {\n      name\n      block\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/utils/ens.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "transmutations($contractAddress: String!)", "content": "{\n    transmutations(where: { moloch: $contractAddress }) {\n      id\n      transmutation\n      moloch\n      distributionToken\n      minion\n      trust\n      capitalToken\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/boost-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "transmutations($contractAddress: String!)", "content": "{\n    transmutations(where: { moloch: $contractAddress }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/boost-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "wrapNZaps($contractAddress: String!)", "content": "{\n    wrapNZaps(where: { moloch: $contractAddress }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/boost-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "event($eventId: String!)", "content": "{\n    event(id: $eventId) {\n      id\n      tokens {\n        owner {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/boost-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "tokens($tokenHolder: String!)", "content": "{\n    tokens(where: { owner: $tokenHolder }) {\n      id\n      identifier\n      uri\n      registry {\n        id\n        name\n        symbol\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/boost-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "balances($tokenHolder: String!)", "content": "{\n    balances(where: { account: $tokenHolder }) {\n      id\n      value\n      token {\n        id\n        identifier\n        name\n        symbol\n        URI\n        registry {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/boost-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "minions($molochAddress: String!, $minionName: String!)", "content": "{\n    minions(\n      where: { details: $minionName, moloch: $molochAddress }\n      orderBy: createdAt\n      orderDirection: desc\n    ) {\n      id\n      minionAddress\n      safeAddress\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/boost-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "molochTokens($contractAddress: String!)", "content": "{\n    molochTokens(where: { moloch: $contractAddress }) {\n      id\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/boost-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "proposalsMember($contractAddr: String!, $skip: Int, $memberAddress: String!)", "content": "{\n    proposals(\n      where: { molochAddress: $contractAddr }\n      orderBy: proposalId\n      orderDirection: desc\n      first: 1000\n      skip: $skip\n    ) {\n      ${baseListFields}\n      votes(where: { memberAddress: $memberAddress }) {\n        id\n        memberAddress\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/proposal-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "proposals($molochAddress: String!, $createdAt: String!)", "content": "{\n    proposals(\n      where: { molochAddress: $molochAddress, createdAt_gt: $createdAt }\n    ) {\n      proposalId\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/proposal-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "moloch($contractAddr: String!)", "content": "{\n    moloch(id: $contractAddr) {\n      id\n      summoner\n      summoningTime\n      newContract\n      totalShares\n      dilutionBound\n      totalLoot\n      version\n      periodDuration\n      votingPeriodLength\n      gracePeriodLength\n      proposalDeposit\n      processingReward\n      guildBankAddress\n      minions {\n        createdAt\n        minionAddress\n        minionType\n        details\n        minQuorum\n        safeAddress\n        crossChainMinion\n        foreignChainId\n        foreignSafeAddress\n        safeMinionVersion\n      }\n      depositToken {\n        tokenAddress\n        symbol\n        decimals\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "tokenBalances($contractAddr: String!)", "content": "{\n    tokenBalances(\n      where: { guildBank: true, moloch: $contractAddr }\n      first: 500\n    ) {\n      id\n      token {\n        tokenAddress\n        symbol\n        decimals\n      }\n      tokenBalance\n      guildBank\n      moloch {\n        id\n        version\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "molochActivities($contractAddr: String!, $createdAt: String!)", "content": "{\n    proposals(\n      where: { molochAddress: $contractAddr, createdAt_gt: $createdAt }\n      orderBy: createdAt\n      orderDirection: asc\n      first: 1000\n    ) {\n      ${proposalFields}\n    }\n    rageQuits(where: {molochAddress: $contractAddr}) {\n      id\n      createdAt\n      memberAddress\n      shares\n      loot\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "molochActivities($contractAddr: String!, $createdAt: String!)", "content": "{\n    proposals(\n      where: { molochAddress: $contractAddr, createdAt_gt: $createdAt, sponsored: true }\n      orderBy: createdAt\n      orderDirection: asc\n      first: 1000\n    ) {\n      ${proposalFields}\n    }\n    rageQuits {\n      id\n      createdAt\n      memberAddress\n      shares\n      loot\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "molochActivities($contractAddr: String!, $createdAt: String!)", "content": "{\n    proposals(\n      where: { \n        molochAddress: $contractAddr\n        createdAt_gt: $createdAt\n        sponsored: false\n        guildkickOrWhitelistOrMinion: true\n      }\n      orderBy: createdAt\n      orderDirection: asc\n      first: 1000\n    ) {\n      ${proposalFields}\n    }\n    rageQuits {\n      id\n      createdAt\n      memberAddress\n      shares\n      loot\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "molochActivities($contractAddr: String!, $createdAt: String!, $requiredTributeMin: String!, $requiredTributeToken: String!)", "content": "{\n    proposals(\n      where: { \n        molochAddress: $contractAddr\n        createdAt_gt: $createdAt\n        sponsored: false\n        tributeOffered_gte: $requiredTributeMin\n        tributeToken: $requiredTributeToken\n      }\n      orderBy: createdAt\n      orderDirection: asc\n      first: 1000\n    ) {\n      ${proposalFields}\n    }\n    rageQuits {\n      id\n      createdAt\n      memberAddress\n      shares\n      loot\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "molochActivities($contractAddr: String!, $createdAt: String!)", "content": "{\n    proposals(\n      where: { molochAddress: $contractAddr, createdAt_gt: $createdAt, sponsored: false, guildkickOrWhitelistOrMinion: false }\n      orderBy: createdAt\n      orderDirection: asc\n      first: 1000\n    ) {\n      ${proposalFields}\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "proposal($molochAddress: String!, $proposalId: String!)", "content": "{\n    proposals(where: { molochAddress: $molochAddress, proposalId: $proposalId }) {\n      ${proposalFields}\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "member($id: String!)", "content": "{\n    member(id: $id) {\n      id\n      createdAt\n      molochAddress\n      memberAddress\n      shares\n      loot\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "moloches($summoner: String!, $createdAt: String!)", "content": "{\n    moloches(where: { summoner: $summoner, createdAt_gt: $createdAt }) {\n      id\n      summoner\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "moloch($molochAddress: String!, $createdAt: String!)", "content": "{\n    moloch(id: $molochAddress) {\n      id\n      minions(where: { createdAt_gt: $createdAt }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "minions($minionAddress: String!, $createdAt: String!)", "content": "{\n    minions(where: { minionAddress: $minionAddress }) {\n      id\n      proposals(where: { createdAt_gt: $createdAt }) {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/dao-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "Spaces($id: String)", "content": "{\n    space(id: $id) {\n      id\n      name\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/snapshot-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "Proposals($id: String)", "content": "{\n    proposals(where: { space: $id }) {\n      id\n      title\n      body\n      choices\n      start\n      end\n      snapshot\n      state\n      author\n      space {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/snapshot-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "Votes($id: String)", "content": "{\n    votes(first: 1000, where: { proposal: $id }) {\n      id\n      voter\n      created\n      choice\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/snapshot-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "moloches($skip: Int)", "content": "{\n    moloches(orderBy: summoningTime, first: 1000, skip: $skip) {\n      id\n      version\n      totalShares\n      guildBankAddress\n      summoningTime\n      summoner\n      guildBankBalanceV1\n      members(where: { exists: true }) {\n        id\n      }\n      proposals {\n        id\n        cancelled\n        createdAt\n        details\n        didPass\n        lootRequested\n        processed\n        sharesRequested\n        tributeOffered\n        tributeToken\n      }\n      tokens {\n        id\n      }\n      depositToken {\n        tokenAddress\n        symbol\n        decimals\n      }\n      tokenBalances(where: { guildBank: true }) {\n        id\n        tokenBalance\n        guildBank\n        token {\n          decimals\n          tokenAddress\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/explore-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "graphTX($id: String!)", "content": "{\n    molochTransaction(id: $id) {\n      id\n      createdAt\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/general.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "contents($transactionHash: String!)", "content": "{\n    contents(where: { transactionHash: $transactionHash }) {\n      id\n      createdAt\n      transactionHash\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/postQueries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "contents($molochAddress: String!)", "content": "{\n    contents(\n      where: { molochAddress: $molochAddress }\n      first: 1000\n      orderBy: createdAt\n      orderDirection: desc\n    ) {\n      id\n      createdAt\n      transactionHash\n      title\n      molochAddress\n      memberAddress\n      content\n      contentType\n      location\n      ratified\n      description\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/postQueries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "contents($id: String!)", "content": "{\n    contents(where: { id: $id }) {\n      id\n      createdAt\n      transactionHash\n      title\n      molochAddress\n      memberAddress\n      content\n      contentType\n      location\n      ratified\n      description\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/postQueries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "minionStream($minionId: String!)", "content": "{\n    minionStreams(where: { minion: $minionId }, orderBy: createdAt, orderDirection: asc) {\n      ${baseListFields}\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "outStreams($ownerAddress: String!)", "content": "{\n    account(id: $ownerAddress) {\n      flowsOwned {\n        ${baseFlowFields}\n        recipient {\n          id\n        }\n      }\n      flowsReceived {\n        ${baseFlowFields}\n        owner {\n          id\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "outStreams($ownerAddress: String!)", "content": "{\n    account(id: $ownerAddress) {\n      id\n      inflows {\n        ${baseFlowFieldsV2}\n      }\n      outflows {\n        ${baseFlowFieldsV2}\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "activeStreams($ownerAddress: String!, $recipientAddress: String!)", "content": "{\n    account(id: $ownerAddress) {\n      flowsOwned(where: { recipient: $recipientAddress, flowRate_gt: 0 }) {\n        id\n        flowRate\n        lastUpdate\n        token {\n          id\n          underlyingAddress\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "activeStreams(\n    $ownerAddress: String!\n    $supertokenAddress: String!\n    $recipientAddress: String!\n  )", "content": "{\n    streams(\n      where: {\n        sender: $ownerAddress\n        receiver: $recipientAddress\n        token: $supertokenAddress\n      }\n    ) {\n      currentFlowRate\n      token {\n        id\n      }\n      sender {\n        id\n      }\n      receiver {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "supertoken($underlyingTokenAddress: String!, $createdAt: String!)", "content": "{\n    tokens(\n      where: {\n        underlyingToken: $underlyingTokenAddress\n        createdAtTimestamp_gt: $createdAt\n      }\n    ) {\n      id\n      underlyingToken {\n        id\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "supertoken($tokenAddress: String!)", "content": "{\n    superTokenOf: superTokenCreateds(\n      where: { underlyingAddress: $tokenAddress }\n      orderBy: id\n      orderDirection: asc\n    ) {\n      id\n      address\n      underlyingAddress\n      name\n      symbol\n    }\n    superToken: superTokenCreateds(\n      where: { address: $tokenAddress }\n      orderBy: id\n      orderDirection: asc\n    ) {\n      id\n      address\n      underlyingAddress\n      name\n      symbol\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "supertoken($tokenAddress: String!)", "content": "{\n    superTokenOf: tokens(where: { underlyingAddress: $tokenAddress }) {\n      address: id\n      isSuperToken\n      isListed\n      name\n      symbol\n      underlyingAddress\n    }\n    superToken: tokens(where: { id: $tokenAddress }) {\n      address: id\n      isSuperToken\n      isListed\n      name\n      symbol\n      underlyingAddress\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/superfluid-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "balances($molochAddress: String!, $skip: Int)", "content": "{\n    balances(\n      where: { molochAddress: $molochAddress }\n      first: 1000\n      orderBy: timestamp\n      orderDirection: asc\n      skip: $skip\n    ) {\n      id\n      timestamp\n      balance\n      tokenAddress\n      tokenDecimals\n      currentShares\n      currentLoot\n      action\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/bank-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "addressBalances($memberAddress: String!)", "content": "{\n    addressBalances: members(where: { memberAddress: $memberAddress }) {\n      id\n      memberAddress\n      molochAddress\n      moloch {\n        id\n        version\n        summoner\n      }\n      tokenBalances {\n        id\n        tokenBalance\n        token {\n          tokenAddress\n          symbol\n          decimals\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/bank-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "membersUser($memberAddress: String!)", "content": "{\n    members(where: { memberAddress: $memberAddress, exists: true }) {\n      id\n      memberAddress\n      moloch {\n        id\n        version\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/member-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "membersHub($memberAddress: String!)", "content": "{\n    membersHub: members(\n      where: { memberAddress: $memberAddress, exists: true }\n    ) {\n      id\n      memberAddress\n      molochAddress\n      shares\n      loot\n      moloch {\n        id\n        version\n        summoner\n        proposals(orderBy: proposalId, orderDirection: desc, first: 10) {\n          id\n          createdAt\n          proposalId\n          proposalIndex\n          proposer\n          processed\n          processor\n          sponsored\n          sponsor\n          sponsoredAt\n          details\n          newMember\n          whitelist\n          guildkick\n          trade\n          cancelled\n          aborted\n          votingPeriodStarts\n          votingPeriodEnds\n          gracePeriodEnds\n          molochAddress\n          molochVersion\n          yesVotes\n          noVotes\n          votes(where: { memberAddress: $memberAddress }) {\n            id\n            memberAddress\n          }\n        }\n        rageQuits {\n          id\n          createdAt\n          shares\n          loot\n          memberAddress\n          molochAddress\n        }\n      }\n      tokenBalances {\n        tokenBalance\n        moloch {\n          id\n        }\n        token {\n          tokenAddress\n          symbol\n          decimals\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/member-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "membersList($contractAddr: String!, $skip: Int)", "content": "{\n    daoMembers: members(\n      where: { molochAddress: $contractAddr }\n      orderBy: shares\n      orderDirection: desc\n      first: 1000\n      skip: $skip\n    ) {\n      id\n      delegateKey\n      shares\n      loot\n      kicked\n      jailed\n      tokenTribute\n      didRagequit\n      memberAddress\n      exists\n      createdAt\n      isDao {\n        id\n      }\n      isSafeMinion {\n        id\n        minions {\n          minionAddress\n          molochAddress\n          safeMinionVersion\n        }\n      }\n      moloch {\n        id\n        totalShares\n        depositToken {\n          tokenAddress\n          symbol\n          decimals\n        }\n      }\n      highestIndexYesVote {\n        proposalId\n        proposalIndex\n      }\n      tokenBalances {\n        id\n        tokenBalance\n        token {\n          id\n          tokenAddress\n          symbol\n          decimals\n        }\n      }\n      submissions {\n        id\n        proposalIndex\n        yesVotes\n        noVotes\n        processed\n        didPass\n        cancelled\n      }\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/member-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "membersList($contractAddr: String!, $memberAddr: String!)", "content": "{\n    members(\n      where: { molochAddress: $contractAddr, memberAddress: $memberAddr }\n    ) {\n      memberAddress\n      loot\n    }\n  }", "metadata": {"commit_hash": "a6be78ba88371711b0587a36d01401b2db2a57c0", "file": "src/graphQL/member-queries.js", "repo": "starcoinorg_starcoin-dao-frontend"}}, {"type": "query", "name": "getDog($name: String)", "content": "{\n    dog(name: $name) {\n      id\n      name\n      breed\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/api.module.spec.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "getCat($name: String)", "content": "{\n    cat(name: $name) {\n      id\n      name\n      breed\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/api.module.spec.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "listEvents", "content": "{\n    listEvents {\n      items {\n        id\n        name\n        description\n        letsChatWithUrl\n        logoUrl\n        qrImageUrl\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-events.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "listCandidates($ownerAttendeeId: ID!, $attendeeId: ID!)", "content": "{\n    listCandidates(\n      filter: { ownerAttendeeId: { eq: $ownerAttendeeId }, attendeeId: { eq: $attendeeId } }\n    ) {\n      items {\n        id\n        candidateType\n        attendee {\n          id\n          fullName\n          title\n          bio\n          company\n          pronouns\n          interests {\n            items {\n              id\n            }\n          }\n          ownIdentifiers {\n            items {\n              id\n            }\n          }\n          desiredIdentifiers {\n            items {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-candidates-by-attendees.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "listConnections($limit: Int)", "content": "{\n    listConnections(limit: $limit) {\n      items {\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-connections.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "getUser($id: ID!)", "content": "{\n      getUser(id: $id) {\n        id\n        termsAccepted\n        notificationConfig {\n          matches\n          messages\n          subscribe\n        }\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-user.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "GetUserByOwner(\n      $owner: ID!\n      $sortDirection: ModelSortDirection\n      $filter: ModelUserFilterInput\n      $limit: Int\n      $nextToken: String\n    )", "content": "{\n      getUserByOwner(\n        owner: $owner\n        sortDirection: $sortDirection\n        filter: $filter\n        limit: $limit\n        nextToken: $nextToken\n      ) {\n        items {\n          id\n          owner\n          termsAccepted\n          notificationConfig {\n            matches\n            messages\n            subscribe\n          }\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-user-by-owner.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "listCandidates($eventId: ID!)", "content": "{\n    listCandidates(filter: { eventId: { eq: $eventId }, candidateType: { eq: UNDECIDED } }) {\n      items {\n        id\n        candidateType\n        attendee {\n          id\n          fullName\n          title\n          bio\n          company\n          pronouns\n          interests {\n            items {\n              id\n            }\n          }\n          ownIdentifiers {\n            items {\n              id\n            }\n          }\n          desiredIdentifiers {\n            items {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-candidates-by-event.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "listIdentifiers($limit: Int)", "content": "{\n    listIdentifiers(limit: $limit) {\n      items {\n        id\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-identifiers.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "listUserReportsByEvent($reportedAttendeeId: ID!, $eventId: ID!)", "content": "{\n    listReports(\n      filter: { reportedAttendeeId: { eq: $reportedAttendeeId }, eventId: { eq: $eventId } }\n    ) {\n      items {\n        id\n        eventId\n        message\n        reason\n        status\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-user-reports-by-event.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "listAttendeeEvents($filter: ModelAttendeeFilterInput)", "content": "{\n    listAttendees(filter: $filter) {\n      items {\n        id\n        fullName\n        avatarUrl\n        company\n        pronouns\n        title\n        bio\n        interests {\n          items {\n            interest {\n              id\n              name\n            }\n          }\n        }\n        desiredIdentifiers {\n          items {\n            identifier {\n              id\n              name\n            }\n          }\n        }\n        ownIdentifiers {\n          items {\n            identifier {\n              id\n              name\n            }\n          }\n        }\n        eventId\n        attendeeMatches {\n          id\n        }\n        attendeeChats {\n          id\n          matchId\n        }\n        event {\n          id\n          name\n          description\n          logoUrl\n          letsChatWithUrl\n          qrImageUrl\n          attendees {\n            items {\n              id\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-attendees.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "CandidatesByEventId(\n    $eventId: ID\n    $ownerAttendeeId: ID\n    $sortDirection: ModelSortDirection\n  )", "content": "{\n    candidatesByEventId(\n      eventId: $eventId\n      sortDirection: $sortDirection\n      filter: { candidateType: { eq: UNDECIDED }, ownerAttendeeId: { eq: $ownerAttendeeId } }\n    ) {\n      items {\n        id\n        candidateType\n        attendee {\n          id\n          fullName\n          avatarUrl\n          title\n          bio\n          company\n          pronouns\n          interests {\n            items {\n              id\n              interest {\n                id\n                name\n              }\n            }\n          }\n          ownIdentifiers {\n            items {\n              id\n              identifier {\n                id\n                name\n              }\n            }\n          }\n          desiredIdentifiers {\n            items {\n              id\n              identifier {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/candidates-by-event.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "listChatThreads($filter: ModelChatThreadFilterInput, $limit: Int, $nextToken: String)", "content": "{\n    listChatThreads(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      __typename\n      items {\n        id\n        messages(limit: 10, sortDirection: DESC) {\n          items {\n            content\n            createdAt\n          }\n          nextToken\n        }\n        eventId\n        lastMessageAt\n        attendee1LastReadAt\n        attendee2LastReadAt\n        matchId\n      }\n      nextToken\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-chat-threads.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "listInterests($limit: Int)", "content": "{\n    listInterests(limit: $limit) {\n      items {\n        id\n        group\n        name\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-interests.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "getCandidate($id: ID!)", "content": "{\n    getCandidate(id: $id) {\n      id\n      candidateType\n      attendee {\n        id\n        fullName\n        title\n        bio\n        company\n        pronouns\n        interests {\n          items {\n            id\n          }\n        }\n        ownIdentifiers {\n          items {\n            id\n          }\n        }\n        desiredIdentifiers {\n          items {\n            id\n          }\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-candidate.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "getAttendee($id: ID!)", "content": "{\n    getAttendee(id: $id) {\n      id\n      fullName\n      avatarUrl\n      title\n      company\n      pronouns\n      bio\n      interests {\n        items {\n          id\n          interest {\n            id\n            name\n          }\n        }\n      }\n      desiredIdentifiers {\n        items {\n          id\n          identifier {\n            id\n            name\n          }\n        }\n      }\n      ownIdentifiers {\n        items {\n          id\n          identifier {\n            id\n            name\n          }\n        }\n      }\n      linkedin\n      facebook\n      twitter\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-attendee.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "listReports($reportStatus: ReportStatus!, $eventId: ID!)", "content": "{\n    listReports(filter: { status: { eq: $reportStatus }, eventId: { eq: $eventId } }) {\n      items {\n        id\n        eventId\n        message\n        reason\n        status\n        reportedAttendee {\n          fullName\n          id\n          avatarUrl\n          title\n        }\n        reportingAttendee {\n          fullName\n          id\n          avatarUrl\n          title\n        }\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/list-reports.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "getEvent($id: ID!)", "content": "{\n      getEvent(id: $id) {\n        id\n        name\n        description\n        letsChatWithUrl\n        maxIdentifiers\n        maxInterests\n        interests {\n          items {\n            interest {\n              id\n              group\n              name\n            }\n          }\n        }\n        identifiers {\n          items {\n            identifier {\n              id\n              name\n            }\n          }\n        }\n        logoUrl\n        qrImageUrl\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-event.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "query", "name": "getChatThread($id: ID!, $limit: Int, $nextToken: String)", "content": "{\n    getChatThread(id: $id) {\n      id\n      lastMessageAt\n      matchId\n      match {\n        id\n        desiredIdentifiers {\n          items {\n            attendeeId\n            desiredIdentifier {\n              name\n              id\n            }\n          }\n        }\n        interests {\n          items {\n            attendeeId\n            interest {\n              name\n              id\n            }\n          }\n        }\n      }\n      messages(limit: $limit, sortDirection: DESC, nextToken: $nextToken) {\n        __typename\n        items {\n          id\n          content\n          attendeeId\n          createdAt\n        }\n        nextToken\n      }\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/queries/get-chat-thread.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "AccessEvent($letsChatWithUrl: String)", "content": "{\n    accessEvent(letsChatWithUrl: $letsChatWithUrl)\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/access-event.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "DeleteMatch($input: DeleteMatchInput!)", "content": "{\n      deleteMatch(input: $input) {\n        id\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/delete-match.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "CreateAttendee($input: CreateAttendeeInput!)", "content": "{\n      createAttendee(input: $input) {\n        __typename\n        id\n        fullName\n        avatarUrl\n        title\n        company\n        pronouns\n        bio\n        newsletterSubscribed\n        linkedin\n        twitter\n        facebook\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/create-attendee.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "createReport($input: CreateReportInput!)", "content": "{\n      createReport(input: $input) {\n        __typename\n        id\n        eventId\n        reportedAttendeeId\n        reportingAttendeeId\n        reason\n        status\n        message\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/create-report.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "UpdateCandidate($input: UpdateCandidateInput!)", "content": "{\n    updateCandidate(input: $input) {\n      id\n      attendeeId\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-candidate.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "UpdateAttendee($input: UpdateAttendeeInput!)", "content": "{\n    updateAttendee(input: $input) {\n      id\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-attendee.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "updateChatThread($input: UpdateChatThreadInput!)", "content": "{\n      updateChatThread(input: $input) {\n        id\n        lastMessageAt\n        matchId\n        updatedAt\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-chat-thread.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "UpdateUser($input: UpdateUserInput!, $condition: ModelUserConditionInput)", "content": "{\n      updateUser(input: $input, condition: $condition) {\n        id\n        termsAccepted\n        notificationConfig {\n          matches\n          messages\n          subscribe\n        }\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-user.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "UpdateReport($input: UpdateReportInput!, $condition: ModelReportConditionInput)", "content": "{\n      updateReport(input: $input, condition: $condition) {\n        id\n        eventId\n        message\n        reason\n        status\n        reportedAttendee {\n          fullName\n          id\n          avatarUrl\n          title\n        }\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-report.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "createMessage($input: CreateMessageInput!)", "content": "{\n      createMessage(input: $input) {\n        __typename\n        id\n        content\n        createdAt\n        attendeeId\n        chatThreadId\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/create-message.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "FileUpload($bucketFolder: String, $fileName: String, $base64: String)", "content": "{\n    fileUpload(bucketFolder: $bucketFolder, fileName: $fileName, base64: $base64)\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/file-upload.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "mutation", "name": "UpdateMatch($input: UpdateMatchInput!)", "content": "{\n      updateMatch(input: $input) {\n        id\n      }\n    }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/mutations/update-match.ts", "repo": "thisdot_lets-chat-with"}}, {"type": "subscription", "name": "onCreateMessage($chatThreadId: ID!)", "content": "{\n    onCreateMessage(chatThreadId: $chatThreadId) {\n      __typename\n      id\n      content\n      createdAt\n      attendeeId\n      chatThreadId\n    }\n  }", "metadata": {"commit_hash": "6db34f72536d08b58023a4a8fcf30d5e6f506e2b", "file": "libs/api/src/lib/subscriptions/on-create-message.ts", "repo": "thisdot_lets-chat-with"}}]